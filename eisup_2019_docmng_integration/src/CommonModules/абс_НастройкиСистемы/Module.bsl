



Процедура УстановкаПараметровСеанса() Экспорт
	ПолныеПрава.УстановкаПараметровОтбораПоОрганизации();

	ПараметрыСеанса.абс_ЕстьРольДирККРПоКТТК = абс_БизнесПроцессыПривелегированный.ЕстьРольДирККРПоКТТК();


	ПараметрыСеанса.абс_ИспользоватьРазнесениеВходящихПлатежей = Константы.абс_ИспользоватьРазнесениеВходящихПлатежей.Получить();


	ПолныеПрава.УстановкаНастроекУниверсальногоОбмена();



	абс_СлужебныеФункции.ПолучитьПодразделенияОтветственногоЛица(ПараметрыСеанса.абс_ВидДоступаКДоговорамГПХ, ПараметрыСеанса.абс_ЗначенияДоступаКДоговорамГПХ);



	абс_НастройкиСистемы.ЗагрузитьНастройкиВПараметрыСеанса();
	
	//Сторчевой А.Н. 05.12.2016 7759851 {
	ПараметрыСеанса.ttk_ЕдиноеЦФУ = Константы.ttk_ЕдиноеЦФУ.Получить();
	// } Сторчевой А.Н. 05.12.2016 7759851


КонецПроцедуры

Процедура ЗагрузитьНастройкиВПараметрыСеанса() Экспорт
	Перем ОрганизацияПользователя;
	ОрганизацияПользователя = Справочники.Организации.ПустаяСсылка();
	Если ПараметрыСеанса.абс_ИспользоватьПараметрОтбораПоОрганизации Тогда
		Если ПараметрыСеанса.абс_ПараметрОтбораПоОрганизации.Количество() = 1 Тогда
			ОрганизацияПользователя = ПараметрыСеанса.абс_ПараметрОтбораПоОрганизации[0];
		Иначе
			ОрганизацияПользователя = УправлениеПользователями.ПолучитьЗначениеПоУмолчаниюПользователя(ПараметрыСеанса.ТекущийПользователь, "ОсновнаяОрганизация");
		КонецЕсли;
	Иначе
		ОрганизацияПользователя = УправлениеПользователями.ПолучитьЗначениеПоУмолчаниюПользователя(ПараметрыСеанса.ТекущийПользователь, "ОсновнаяОрганизация");
	КонецЕсли;

	ПараметрыСеанса.абс_НастройкиСистемы = ПолучитьНастройкиДляОрганизации(ОрганизацияПользователя);

КонецПроцедуры


Функция ПолучитьНастройкиДляОрганизации(Организация) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	абс_НастройкиСистемы.Код КАК Идентификатор,
	|	абс_НастройкиСистемы.Ссылка КАК Настройка,
	|	ЕСТЬNULL(НастройкиПоОрганизацииПользователя.Значение, ЕСТЬNULL(ОбщиеНастройки.Значение, абс_НастройкиСистемы.ЗначениеПоУмолчанию)) КАК Значение
	|ИЗ
	|	ПланВидовХарактеристик.абс_НастройкиСистемы КАК абс_НастройкиСистемы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_НастройкиСистемы КАК НастройкиПоОрганизацииПользователя
	|		ПО абс_НастройкиСистемы.Ссылка = НастройкиПоОрганизацииПользователя.Настройка
	|			И (НастройкиПоОрганизацииПользователя.Организация = &Организация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_НастройкиСистемы КАК ОбщиеНастройки
	|		ПО абс_НастройкиСистемы.Ссылка = ОбщиеНастройки.Настройка
	|			И (ОбщиеНастройки.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))
	|ГДЕ
	|	НЕ абс_НастройкиСистемы.ЭтоГруппа");
	Запрос.УстановитьПараметр("Организация", Организация);

	Выборка = Запрос.Выполнить().Выбрать();

	КоличествоНастроек = Выборка.Количество();

	СтруктураНастроек = Новый Структура;

	Пока Выборка.Следующий() Цикл
		Если Выборка.Значение = Неопределено Тогда
			СтруктураНастроек.Вставить(Выборка.Идентификатор, Выборка.Настройка.ТипЗначения.ПривестиЗначение());
		Иначе
			СтруктураНастроек.Вставить(Выборка.Идентификатор, Выборка.Значение);
		КонецЕсли;
	КонецЦикла;

	Возврат Новый ФиксированнаяСтруктура(СтруктураНастроек);

КонецФункции

Функция ФункционалДоступен(Опция) Экспорт
	Перем СтруктураНастроек;
	Если Не ПараметрыСеанса.абс_НастройкиСистемы.Свойство(Опция) Тогда
		Возврат Ложь;
	КонецЕсли;
	// {{KM WARE Семенов И.С. 13.07.2015 начало
	// проверка не нужна
	возврат истина;
	// }}KM WARE Семенов И.С. 13.07.2015 окончание	
	
	УстановитьПривилегированныйРежим(Истина);
	СтруктураНастроек = ХранилищеОбщихНастроек.Загрузить("hTfAmZqLFpCEB", , , "hTfAmZqLFpCEB");

	Если ТипЗнч(СтруктураНастроек) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;

	Если Не СтруктураНастроек.Свойство(Опция) Тогда
		Возврат Ложь;
	КонецЕсли;

	Возврат ХэшБлоками(ПараметрыСеанса.абс_НастройкиСистемы[Опция]) = СтруктураНастроек[Опция];

КонецФункции


Функция ХэшБлоками(Строка, ДлинаБлока = 15, hash = 0, M = 11, TABLE_SIZE = 184467440737548)
	Перем КодПериода;
	КодПериода = Число(Формат(абс_СерверныеФункции.ПолучитьДатуСервера(), "ДФ=MMyyyy"));
	НачПозиция = 1;
	ДлинаСтроки = СтрДлина(Строка);
	Пока НачПозиция <= ДлинаСтроки Цикл
		СтрокаБлока = Сред(Строка, НачПозиция, ДлинаБлока);
		Для к = 1 По СтрДлина(СтрокаБлока) Цикл
			hash = M * hash + КодСимвола(СтрокаБлока, к);
		КонецЦикла;
		hash = hash * КодПериода % TABLE_SIZE;
		НачПозиция = НачПозиция + ДлинаБлока;
	КонецЦикла;

	Возврат hash;

КонецФункции




