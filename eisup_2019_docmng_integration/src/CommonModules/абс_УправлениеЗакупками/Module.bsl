Процедура ИзменитьСтатусОплатыСчета(ОплатаСсылка, НовыйСтатус,ПланПлатежей = Неопределено) Экспорт
	
	// Найдем счет на оплату и в нем изменим статус оплаты
		
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_СчетНаОплатуОплаты.Ссылка
	                      |ИЗ
	                      |	Документ.абс_СчетНаОплату.Оплаты КАК абс_СчетНаОплатуОплаты
	                      |ГДЕ
	                      |	абс_СчетНаОплатуОплаты.Оплата = &ОплатаСсылка");
						  
	Запрос.УстановитьПараметр("ОплатаСсылка", ОплатаСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СчетНаОплатуОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		СтрокиОплаты = СчетНаОплатуОбъект.Оплаты.НайтиСтроки(Новый Структура("Оплата", ОплатаСсылка));
		
		СчетИзменен = Ложь;
		
		Для Каждого СтрокаОплаты Из СтрокиОплаты Цикл
			
			//Заполнение реквизита "ПланПлатежей" в счете
			Если Не ЗначениеЗаполнено(СтрокаОплаты.ПланПлатежей) или ПланПлатежей = Документы.абс_Платеж.ПустаяСсылка() Тогда
				Если ПланПлатежей<>Неопределено Тогда
				СтрокаОплаты.ПланПлатежей = ПланПлатежей;
				СчетИзменен = Истина;
				КонецЕсли;
			КонецЕсли;	
			//\\Заполнение реквизита "ПланПлатежей" в счете
			Если СтрокаОплаты.СтатусОплаты = НовыйСтатус Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаОплаты.СтатусОплаты = НовыйСтатус;
			СчетИзменен = Истина;
		КонецЦикла;
		
		Если СчетИзменен Тогда
			СчетНаОплатуОбъект.ОбменДанными.Загрузка = Истина;
			СчетНаОплатуОбъект.Записать();
		КонецЕсли;
		
	КонецЦикла;
		
КонецПроцедуры

Функция РазрешенПросмотрСкрытыхНоменклатур() Экспорт
	возврат РольДоступна("абс_СотрудникГруппыНСИ") или РольДоступна("ПолныеПрава");	
КонецФункции

Функция РазрешеноФормированиеБухгалтерскихПроводок() Экспорт
	возврат ПравоДоступа("Изменение",Метаданные.РегистрыБухгалтерии.Хозрасчетный);
КонецФункции

