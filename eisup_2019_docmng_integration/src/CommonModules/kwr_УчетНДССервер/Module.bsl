// +++ввв 28.03.2017 г.
Функция ТекстЗапросаОбщиеДанные()
	
	Возврат 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Событие КАК Событие,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаУчитываемыхКорректировок,
	|			,
	|			Организация В (&Организация)
	|				И ВЫБОР
	|					КОГДА &ВесьОборотЗаПериод = ИСТИНА
	|						ТОГДА ЗаписьДополнительногоЛиста
	|					КОГДА &СУчетомКорректировок = ИСТИНА
	|						ТОГДА ЗаписьДополнительногоЛиста
	|								И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Событие,
	|	ВидЦенности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.Событие КАК Событие,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.Событие,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаУчитываемыхКорректировок,
	|			,
	|			Организация В (&Организация)
	|				И ВЫБОР
	|					КОГДА &ВесьОборотЗаПериод
	|						ТОГДА ЗаписьДополнительногоЛиста
	|					КОГДА &СУчетомКорректировок
	|						ТОГДА ЗаписьДополнительногоЛиста
	|								И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Событие";

КонецФункции

Функция ТекстЗапросаРаздел2()
	
	Возврат
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_1011707)
	|				И НДСЗаписиКнигиПродажОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентКомитент)
	|				И НЕ НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	|			ТОГДА НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента.Владелец
	|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
	|	КОНЕЦ КАК Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.Событие КАК Событие,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот КАК НДСОборот
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажРаздел2
	|ИЗ
	|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
	|ГДЕ
	|	(НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеНачисленНДС)
	|			ИЛИ НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеПолученАванс)
	|			ИЛИ НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализацияРаздел2))
	|	И НДСЗаписиКнигиПродажОбороты.ВидЦенности В(&ВидыЦенностейНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Покупатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Контрагент.КПП КАК П000200001003,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА Контрагент.Наименование
	|		ИНАЧЕ ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250)
	|	КОНЕЦ КАК П000200002003,
	|	Контрагент.ИНН КАК П000200003003,
	|	Контрагент.ЮрФизЛицо КАК ПокупательЮридическоеФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011712)
	|			ТОГДА ""1011712""
	|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011703)
	|			ТОГДА ""1011703""
	|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011707)
	|			ТОГДА ""1011707""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК П000200007003,
	|	ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажРаздел2.НДСОборот), 0) КАК П000200006003,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011707)
	|							И НДСЗаписиКнигиПродажРаздел2.Событие В (&СобытиеНачисленНДС)
	|						ИЛИ НДСЗаписиКнигиПродажРаздел2.Событие В (&СобытиеРеализацияРаздел2)
	|					ТОГДА НДСЗаписиКнигиПродажРаздел2.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200008003,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА НДСЗаписиКнигиПродажРаздел2.Событие В (&СобытиеПолученАванс)
	|					ТОГДА НДСЗаписиКнигиПродажРаздел2.НДСОборот
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК П000200009003,
	|	Контрагент.Ссылка КАК П000200002003_Расшифровка
	|ИЗ
	|	НДСЗаписиКнигиПродажРаздел2 КАК НДСЗаписиКнигиПродажРаздел2
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагент
	|		ПО НДСЗаписиКнигиПродажРаздел2.Покупатель = Контрагент.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажРаздел2.Покупатель,
	|	Контрагент.ИНН,
	|	Контрагент.КПП,
	|	Контрагент.ЮрФизЛицо,
	|	ВЫБОР
	|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011712)
	|			ТОГДА ""1011712""
	|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011703)
	|			ТОГДА ""1011703""
	|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011707)
	|			ТОГДА ""1011707""
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250) = """"
	|			ТОГДА Контрагент.Наименование
	|		ИНАЧЕ ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250)
	|	КОНЕЦ,
	|	Контрагент.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	П000200002003";

КонецФункции

Функция ТекстЗапросаРаздел3Вычеты()
	
	Возврат 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
	|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр120)
	|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300012003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
	|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр130)
	|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300013003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
	|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр140)
	|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300014003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
	|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр150)
	|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300015003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
	|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр170)
	|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300017003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
	|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр180)
	|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300018003
	|ИЗ
	|	НДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупокОбороты";

КонецФункции

Функция ТекстЗапросаРаздел3Начисления()
	
	Возврат 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
	|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС18)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300001003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
	|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС10)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300002003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
	|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС18_118)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300003003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
	|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС10_110)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300004003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеНачисленНДС)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр060)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300006003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеПолученАванс)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр070)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300007003,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеПолученАванс)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр070)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300007005,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеВосстановлениеНДС)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300008005,
	|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
	|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеВосстановлениеНДС)
	|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр090)
	|						ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
	|					ИНАЧЕ 0
	|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300009005
	|ИЗ
	|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты";

КонецФункции
// ---ввв 28.03.2017 г.

Процедура ЗаполнитьОтчетНДСФормаОтчета2015Кв1(ПараметрыЗаполненияОтчета) Экспорт
	АдресХранилищаЗаполненияОтчета = ПараметрыЗаполненияОтчета.АдресХранилища;
// +++ввв 27.03.2017 г.
	Если ПараметрыЗаполненияОтчета.ВидОтчета = "РегламентированныйОтчетНДСФормаОтчета2015Кв1" Тогда
		ПараметрыЗаполненияОтчета.Вставить("ПравилаЗаполнения", "2015Кв1");
	ИначеЕсли ПараметрыЗаполненияОтчета.ВидОтчета = "РегламентированныйОтчетНДСФормаОтчета2017Кв1" Тогда
		ПараметрыЗаполненияОтчета.Вставить("ПравилаЗаполнения", "2017Кв1");
	КонецЕсли;
// ---ввв 27.03.2017 г.
	ПараметрыОтчета = ПолучитьИзВременногоХранилища(АдресХранилищаЗаполненияОтчета);
	Контейнер = ПараметрыОтчета.Контейнер;

	Отказ = Ложь;

	УчетнаяПолитика = ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитики(ПараметрыОтчета.мДатаКонцаПериодаОтчета, Отказ, ПараметрыОтчета.Организация, "регл", Ложь);


	Если Отказ Тогда
		ПоместитьВоВременноеХранилище(Контейнер, АдресХранилищаЗаполненияОтчета);
		Возврат;
	Иначе
		ОрганизацияНеПлательшикНДС = УчетнаяПолитика.СистемаНалогообложения <> Перечисления.СистемыНалогообложения.Общая;
		ОрганизацияОсвобожденаОтУплатыНДС = УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС;
	КонецЕсли;

	Если ПараметрыОтчета.Свойство("ГруппаОрганизаций") Тогда
		СписокОрганизаций = ПараметрыОтчета.ГруппаОрганизаций;
	Иначе
		СписокОрганизаций = Новый СписокЗначений;
	КонецЕсли;

	СписокОрганизаций.Добавить(ПараметрыОтчета.Организация);

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Формирование разделов 1-7'"));


	Запрос = Новый Запрос;

	Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
	Запрос.УстановитьПараметр("КонецПериода", КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("СУчетомКорректировок", Не (ПараметрыОтчета.ВидДокумента = 0));
	Запрос.УстановитьПараметр("ВесьОборотЗаПериод", ?(ПараметрыОтчета.Свойство("ВесьОборотЗаПериод"), ПараметрыОтчета.ВесьОборотЗаПериод, Ложь));

	Запрос.УстановитьПараметр("КонецПериодаУчитываемыхКорректировок", ?(Не ЗначениеЗаполнено(ПараметрыОтчета.ДатаПодписи), ПараметрыОтчета.ДатаПодписи, КонецДня(ПараметрыОтчета.ДатаПодписи)));



	СобытиеРеализация = Новый СписокЗначений;
	СобытиеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.Реализация);
	СобытиеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.Оплата);

	СобытиеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.НДСНачисленКУплате);
	СобытиеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.НДССкорректирован);
	Запрос.УстановитьПараметр("СобытиеРеализация", СобытиеРеализация);
	
	СобытиеРеализацияРаздел2 = Новый СписокЗначений;
	СобытиеРеализацияРаздел2.Добавить(Перечисления.СобытияПоНДСПродажи.Реализация);
	СобытиеРеализацияРаздел2.Добавить(Перечисления.СобытияПоНДСПродажи.Оплата);
	Запрос.УстановитьПараметр("СобытиеРеализацияРаздел2", СобытиеРеализацияРаздел2);

	СобытиеПолученАванс = Новый СписокЗначений;
	СобытиеПолученАванс.Добавить(Перечисления.СобытияПоНДСПродажи.ПолученАванс);
	Запрос.УстановитьПараметр("СобытиеПолученАванс", СобытиеПолученАванс);

	СобытиеНачисленНДС = Новый СписокЗначений;
	СобытиеНачисленНДС.Добавить(Перечисления.СобытияПоНДСПродажи.НДСНачисленКУплате);
	СобытиеНачисленНДС.Добавить(Перечисления.СобытияПоНДСПродажи.НДССкорректирован);
	Запрос.УстановитьПараметр("СобытиеНачисленНДС", СобытиеНачисленНДС);

	СобытиеВосстановлениеНДС = Новый СписокЗначений;
	СобытиеВосстановлениеНДС.Добавить(Перечисления.СобытияПоНДСПродажи.ВосстановлениеНДС);
	Запрос.УстановитьПараметр("СобытиеВосстановлениеНДС", СобытиеВосстановлениеНДС);

	СобытиеПредъявленКВычетуНДС = Новый СписокЗначений;
	СобытиеПредъявленКВычетуНДС.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету);
	СобытиеПредъявленКВычетуНДС.Добавить(Перечисления.СобытияПоНДСПокупки.ВосстановленНДС);
	Запрос.УстановитьПараметр("СобытиеПредъявленКВычетуНДС", СобытиеПредъявленКВычетуНДС);

	СобытиеПодтвержденаСтавка0 = Новый СписокЗначений;
	СобытиеПодтвержденаСтавка0.Добавить(Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);
	Запрос.УстановитьПараметр("СобытиеПодтвержденаСтавка0", СобытиеПодтвержденаСтавка0);

	СобытиеПредъявленКВычетуНДС0 = Новый СписокЗначений;
	СобытиеПредъявленКВычетуНДС0.Добавить(Перечисления.СобытияПоНДСПокупки.ПредъявленНДСКВычету0);
	Запрос.УстановитьПараметр("СобытиеПредъявленКВычетуНДС0", СобытиеПредъявленКВычетуНДС0);

	СобытиеНеПодтвержденаСтавка0 = Новый СписокЗначений;
	СобытиеНеПодтвержденаСтавка0.Добавить(Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);
	Запрос.УстановитьПараметр("СобытиеНеПодтвержденаСтавка0", СобытиеНеПодтвержденаСтавка0);

	СобытиеПредъявленКВычетуНеПодтвержденНДС0 = Новый СписокЗначений;
	СобытиеПредъявленКВычетуНеПодтвержденНДС0.Добавить(Перечисления.СобытияПоНДСПокупки.НеПодтвержденаСтавка0);
	Запрос.УстановитьПараметр("СобытиеПредъявленКВычетуНеПодтвержденНДС0", СобытиеПредъявленКВычетуНеПодтвержденНДС0);


	ВидыЦенностейНеРеализация = Новый СписокЗначений;
	ВидыЦенностейНеРеализация.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	ВидыЦенностейНеРеализация.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностейНеРеализация.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностейНеРеализация.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ВидыЦенностейНеРеализация.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностейНеРеализация.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);

	ВидыЦенностейСтр010_040 = Новый СписокЗначений;
	Для каждого ВидЦенности Из Перечисления.ВидыЦенностей Цикл
		Если ВидыЦенностейНеРеализация.НайтиПоЗначению(ВидЦенности) = Неопределено Тогда
			ВидыЦенностейСтр010_040.Добавить(ВидЦенности);
		КонецЕсли;
	КонецЦикла;
	Запрос.УстановитьПараметр("ВидыЦенностейСтр010_040", ВидыЦенностейСтр010_040);

	ВидыЦенностейСтр060 = Новый СписокЗначений;
	ВидыЦенностейСтр060.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр060", ВидыЦенностейСтр060);

	ВидыЦенностейСтр070 = Новый СписокЗначений;
	ВидыЦенностейСтр070.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр070", ВидыЦенностейСтр070);

	ВидыЦенностейСтр090 = Новый СписокЗначений;
	ВидыЦенностейСтр090.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр090", ВидыЦенностейСтр090);

	ВидыЦенностейСтр130 = Новый СписокЗначений;
	ВидыЦенностейСтр130.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр130", ВидыЦенностейСтр130);

	ВидыЦенностейСтр140 = Новый СписокЗначений;
	ВидыЦенностейСтр140.Добавить(Перечисления.ВидыЦенностей.СМРСобственнымиСилами);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр140", ВидыЦенностейСтр140);

	ВидыЦенностейСтр150 = Новый СписокЗначений;
	ВидыЦенностейСтр150.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежи);
	ВидыЦенностейСтр150.Добавить(Перечисления.ВидыЦенностей.ТаможенныеПлатежиОС);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр150", ВидыЦенностейСтр150);

	ВидыЦенностейСтр170 = Новый СписокЗначений;
	ВидыЦенностейСтр170.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр170", ВидыЦенностейСтр170);

	ВидыЦенностейСтр180 = Новый СписокЗначений;
	ВидыЦенностейСтр180.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностейСтр180.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностейСтр180.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	Запрос.УстановитьПараметр("ВидыЦенностейСтр180", ВидыЦенностейСтр180);

	ВидыЦенностейСтр120 = Новый СписокЗначений;
	Для каждого ВидЦенности Из Перечисления.ВидыЦенностей Цикл
		Если ВидыЦенностейСтр130.НайтиПоЗначению(ВидЦенности) = Неопределено И
			ВидыЦенностейСтр140.НайтиПоЗначению(ВидЦенности) = Неопределено И
			ВидыЦенностейСтр150.НайтиПоЗначению(ВидЦенности) = Неопределено И
			ВидыЦенностейСтр170.НайтиПоЗначению(ВидЦенности) = Неопределено И
			ВидыЦенностейСтр180.НайтиПоЗначению(ВидЦенности) = Неопределено Тогда
			
			ВидыЦенностейСтр120.Добавить(ВидЦенности);
		КонецЕсли;
	КонецЦикла;
	Запрос.УстановитьПараметр("ВидыЦенностейСтр120", ВидыЦенностейСтр120);

	ВидыЦенностей_1011703 = Новый СписокЗначений;
	ВидыЦенностей_1011703.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностей_1011703.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
// +++ввв 12.04.2017 г.
	Запрос.УстановитьПараметр("ВидыЦенностей_1011712", Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
// ---ввв 12.04.2017 г.
	Запрос.УстановитьПараметр("ВидыЦенностей_1011703", ВидыЦенностей_1011703);
	Запрос.УстановитьПараметр("ВидыЦенностей_1011707", Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);

	ВидыЦенностиНА = Новый СписокЗначений;
	ВидыЦенностиНА.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентАренда);
	ВидыЦенностиНА.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентРеализацияИмущества);
	ВидыЦенностиНА.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентИностранцы);
	ВидыЦенностиНА.Добавить(Перечисления.ВидыЦенностей.НалоговыйАгентКомитент);
	Запрос.УстановитьПараметр("ВидыЦенностейНА", ВидыЦенностиНА);


	Запрос.УстановитьПараметр("СтавкаНДС10", Перечисления.СтавкиНДС.НДС10);
	Запрос.УстановитьПараметр("СтавкаНДС10_110", Перечисления.СтавкиНДС.НДС10_110);
	Запрос.УстановитьПараметр("СтавкаНДС18", Перечисления.СтавкиНДС.НДС18);
	Запрос.УстановитьПараметр("СтавкаНДС18_118", Перечисления.СтавкиНДС.НДС18_118);

	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

// +++ввв 28.03.2017 г.	
	Если ПараметрыЗаполненияОтчета.ВидОтчета = "РегламентированныйОтчетНДСФормаОтчета2015Кв1" Тогда
// ---ввв 28.03.2017 г.		

	Запрос.Текст = "ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	|ПОМЕСТИТЬ НДСЗаписиКнигиПродажОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Событие,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаУчитываемыхКорректировок,
	|			,
	|			Организация В (&Организация)
	|				И ВЫБОР
	|					КОГДА &ВесьОборотЗаПериод = ИСТИНА
	|						ТОГДА ЗаписьДополнительногоЛиста
	|					КОГДА &СУчетомКорректировок = ИСТИНА
	|						ТОГДА ЗаписьДополнительногоЛиста
	|								И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ) КАК НДСЗаписиКнигиПродажОбороты";


	Запрос.Выполнить();

	Если Контейнер.Свойство("Раздел2") Тогда

		Раздел2 = Контейнер.Раздел2;

		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностей_1011707)
		|				И НДСЗаписиКнигиПродажОбороты.ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.НалоговыйАгентКомитент)
		|				И НЕ НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		|			ТОГДА НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента.Владелец
		|		ИНАЧЕ НДСЗаписиКнигиПродажОбороты.Покупатель
		|	КОНЕЦ КАК Покупатель,
		|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
		|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
		|	НДСЗаписиКнигиПродажОбороты.Событие КАК Событие,
		|	НДСЗаписиКнигиПродажОбороты.НДСОборот КАК НДСОборот
		|ПОМЕСТИТЬ НДСЗаписиКнигиПродажРаздел2
		|ИЗ
		|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
		|ГДЕ
		|	(НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеНачисленНДС)
		|			ИЛИ НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеПолученАванс)
		|			ИЛИ НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация))
		|	И НДСЗаписиКнигиПродажОбороты.ВидЦенности В(&ВидыЦенностейНА)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Покупатель
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Контрагент.КПП КАК П000200001003,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250) = """"
		|			ТОГДА Контрагент.Наименование
		|		ИНАЧЕ ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250)
		|	КОНЕЦ КАК П000200002003,
		|	Контрагент.ИНН КАК П000200003003,
		|	Контрагент.ЮрФизЛицо КАК ПокупательЮридическоеФизическоеЛицо,
		|	ВЫБОР
		|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011712)
		|			ТОГДА ""1011711""
		|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011703)
		|			ТОГДА ""1011703""
		|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011707)
		|			ТОГДА ""1011707""
		|		ИНАЧЕ """"
		|	КОНЕЦ КАК П000200007003,
		|	ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажРаздел2.НДСОборот), 0) КАК П000200006003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011707)
		|							И НДСЗаписиКнигиПродажРаздел2.Событие В (&СобытиеНачисленНДС)
		|						ИЛИ НДСЗаписиКнигиПродажРаздел2.Событие В (&СобытиеРеализация)
		|					ТОГДА НДСЗаписиКнигиПродажРаздел2.НДСОборот
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000200008003,
		|	ЕСТЬNULL(СУММА(ВЫБОР
		|				КОГДА НДСЗаписиКнигиПродажРаздел2.Событие В (&СобытиеПолученАванс)
		|					ТОГДА НДСЗаписиКнигиПродажРаздел2.НДСОборот
		|				ИНАЧЕ 0
		|			КОНЕЦ), 0) КАК П000200009003,
		|	Контрагент.Ссылка КАК П000200002003_Расшифровка
		|ИЗ
		|	НДСЗаписиКнигиПродажРаздел2 КАК НДСЗаписиКнигиПродажРаздел2
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагент
		|		ПО НДСЗаписиКнигиПродажРаздел2.Покупатель = Контрагент.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	НДСЗаписиКнигиПродажРаздел2.Покупатель,
		|	Контрагент.ИНН,
		|	Контрагент.КПП,
		|	Контрагент.ЮрФизЛицо,
		|	ВЫБОР
		|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011712)
		|			ТОГДА ""1011711""
		|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011703)
		|			ТОГДА ""1011703""
		|		КОГДА НДСЗаписиКнигиПродажРаздел2.ВидЦенности В (&ВидыЦенностей_1011707)
		|			ТОГДА ""1011707""
		|		ИНАЧЕ """"
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250) = """"
		|			ТОГДА Контрагент.Наименование
		|		ИНАЧЕ ПОДСТРОКА(Контрагент.НаименованиеПолное, 1, 250)
		|	КОНЕЦ,
		|	Контрагент.Ссылка
		|АВТОУПОРЯДОЧИВАНИЕ";


		ТаблицаРаздел2 = Запрос.Выполнить().Выгрузить();
		Раздел2.Вставить("ТаблицаРаздел2", ТаблицаРаздел2);

	КонецЕсли;

	Если Контейнер.Свойство("Раздел3") Тогда

		Раздел3 = Контейнер.Раздел3;

		Запрос.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
		|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС18)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300001003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
		|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС10)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300002003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
		|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС18_118)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300003003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеРеализация)
		|							И НДСЗаписиКнигиПродажОбороты.СтавкаНДС В (&СтавкаНДС10_110)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр010_040)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300004003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеНачисленНДС)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр060)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300006003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеПолученАванс)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр070)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот + НДСЗаписиКнигиПродажОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300007003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеПолученАванс)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр070)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300007005,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеВосстановлениеНДС)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300008005,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПродажОбороты.Событие В (&СобытиеВосстановлениеНДС)
		|							И НДСЗаписиКнигиПродажОбороты.ВидЦенности В (&ВидыЦенностейСтр090)
		|						ТОГДА НДСЗаписиКнигиПродажОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300009005
		|ИЗ
		|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты";


		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();

		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел3, ЗначенияДляЗаполнения);
		КонецЕсли;

		Запрос.Текст = "ВЫБРАТЬ
		|	НДСЗаписиКнигиПокупокОбороты.Событие,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
		|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
		|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокОбороты
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
		|			&НачалоПериода,
		|			&КонецПериода,
		|			,
		|			Организация В (&Организация)
		|				И (НЕ ЗаписьДополнительногоЛиста)) КАК НДСЗаписиКнигиПокупокОбороты
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НДСЗаписиКнигиПокупокОбороты.Событие,
		|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
		|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
		|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
		|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|ИЗ
		|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
		|			&НачалоПериода,
		|			&КонецПериодаУчитываемыхКорректировок,
		|			,
		|			Организация В (&Организация)
		|				И ВЫБОР
		|					КОГДА &ВесьОборотЗаПериод = ИСТИНА
		|						ТОГДА ЗаписьДополнительногоЛиста
		|					КОГДА &СУчетомКорректировок = ИСТИНА
		|						ТОГДА ЗаписьДополнительногоЛиста
		|								И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)
		|					ИНАЧЕ ЛОЖЬ
		|				КОНЕЦ) КАК НДСЗаписиКнигиПокупокОбороты";


		Запрос.Выполнить();

		Запрос.Текст = "ВЫБРАТЬ
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
		|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр120)
		|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300012003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
		|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр130)
		|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300013003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
		|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр140)
		|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300014003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
		|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр150)
		|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300015003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
		|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр170)
		|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300017003,
		|	ЕСТЬNULL(СУММА(ВЫРАЗИТЬ(ВЫБОР
		|					КОГДА НДСЗаписиКнигиПокупокОбороты.Событие В (&СобытиеПредъявленКВычетуНДС)
		|							И НДСЗаписиКнигиПокупокОбороты.ВидЦенности В (&ВидыЦенностейСтр180)
		|						ТОГДА НДСЗаписиКнигиПокупокОбороты.НДСОборот
		|					ИНАЧЕ 0
		|				КОНЕЦ КАК ЧИСЛО(15, 2))), 0) КАК П000300018003
		|ИЗ
		|	НДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупокОбороты";


		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();

		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел3, ЗначенияДляЗаполнения);
		КонецЕсли;

	КонецЕсли;

	Если Контейнер.Свойство("Раздел3_Прил1") Тогда

		Раздел3_Прил1 = Контейнер.Раздел3_Прил1;

		Если КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета) Тогда

			Запрос.Текст = "ВЫБРАТЬ
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости КАК ОбъектНедвижимости,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250) = """"
			|			ТОГДА ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.Наименование
			|		ИНАЧЕ ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250)
			|	КОНЕЦ КАК П000310001000,
			|	ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.АдресМестонахождения, 1, 250) КАК АдресМестонахождения,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.КодРегиона КАК П000310002000_02,
			|	ВЫБОР
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.Приобретение)
			|			ТОГДА ""1011803""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРПодрядные)
			|			ТОГДА ""1011801""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРСобственные)
			|			ТОГДА ""1011802""
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК П000310003000,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаВводаВЭксплуатациюБУ КАК П000310004000,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачисленияАмортизацииНУ КАК П000310005000,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.СтоимостьОбъектаНедвижимости КАК П000310006000,
			|	СУММА(ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.НДС) КАК П000310007000,
			|	ГОД(ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Дата) КАК П000310008001_,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачалаИспользованияДляОпераций КАК П000310008002_,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДоляВыручкиНеОблагаемаяНДС КАК П000310008003_,
			|	СУММА(ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.НДСВосстановлен) КАК П000310008004_
			|ИЗ
			|	Документ.ВосстановлениеНДСПоОбъектамНедвижимости.ОбъектыНедвижимости КАК ВосстановлениеНДСпоОбъектамНедвижимости
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВосстановлениеНДСПоОбъектамНедвижимости.СчетаФактуры КАК ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры
			|		ПО ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка = ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.Ссылка
			|			И ВосстановлениеНДСпоОбъектамНедвижимости.КлючСтроки = ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КлючСтроки
			|ГДЕ
			|	ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Организация В(&Организация)
			|	И ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Дата <= &КонецПериода
			|	И ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Проведен
			|
			|СГРУППИРОВАТЬ ПО
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости,
			|	ВЫБОР
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.Приобретение)
			|			ТОГДА ""1011803""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРПодрядные)
			|			ТОГДА ""1011801""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРСобственные)
			|			ТОГДА ""1011802""
			|		ИНАЧЕ """"
			|	КОНЕЦ,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаВводаВЭксплуатациюБУ,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачисленияАмортизацииНУ,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачалаИспользованияДляОпераций,
			|	ГОД(ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Дата),
			|	ВосстановлениеНДСпоОбъектамНедвижимости.СтоимостьОбъектаНедвижимости,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДоляВыручкиНеОблагаемаяНДС,
			|	ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.АдресМестонахождения, 1, 250),
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.КодРегиона,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250) = """"
			|			ТОГДА ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.Наименование
			|		ИНАЧЕ ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250)
			|	КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	П000310008001_
			|ИТОГИ
			|	СУММА(П000310006000),
			|	СУММА(П000310007000),
			|	СУММА(П000310008001_),
			|	СУММА(П000310008003_),
			|	СУММА(П000310008004_)
			|ПО
			|	ОбъектНедвижимости,
			|	П000310003000
			|АВТОУПОРЯДОЧИВАНИЕ";


			ЗапросРаздел3_Прил1 = Запрос.Выполнить();
			Раздел3_Прил1.Вставить("Выборка", ЗапросРаздел3_Прил1);

		КонецЕсли;
	КонецЕсли;

	Если Контейнер.Свойство("Раздел4") Тогда

		Раздел4 = Контейнер.Раздел4;

		Запрос.Текст = "ВЫБРАТЬ
		|	""1011410"" КАК П000400001003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000400002003_1
		|ИЗ
		|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПродажОбороты.Событие В(&СобытиеПодтвержденаСтавка0)";


		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();

		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел4, ЗначенияДляЗаполнения);
		КонецЕсли;

		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000400003003_1
		|ИЗ
		|	НДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупокОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПокупокОбороты.Событие В(&СобытиеПредъявленКВычетуНДС0)";


		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();

		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел4, ЗначенияДляЗаполнения);
		КонецЕсли;

	КонецЕсли;

	Если Контейнер.Свойство("Раздел6") Тогда

		Раздел6 = Контейнер.Раздел6;

		Запрос.Текст = "ВЫБРАТЬ
		|	""1011410"" КАК П000600001003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600002003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600003003_1
		|ИЗ
		|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПродажОбороты.Событие В(&СобытиеНеПодтвержденаСтавка0)";


		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();

		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел6, ЗначенияДляЗаполнения);
		КонецЕсли;

		Запрос.Текст = "ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600004003_1
		|ИЗ
		|	НДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупокОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПокупокОбороты.Событие В(&СобытиеПредъявленКВычетуНеПодтвержденНДС0)";


		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();

		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел6, ЗначенияДляЗаполнения);
		КонецЕсли;

	КонецЕсли;
	
// +++ввв 28.03.2017 г.	
	ИначеЕсли ПараметрыЗаполненияОтчета.ВидОтчета = "РегламентированныйОтчетНДСФормаОтчета2017Кв1" Тогда

	Запрос.Текст = ТекстЗапросаОбщиеДанные();
	Запрос.Выполнить();

	Если Контейнер.Свойство("Раздел2") Тогда
		
		Раздел2 = Контейнер.Раздел2;
		
		Запрос.Текст = ТекстЗапросаРаздел2();
		ТаблицаРаздел2 = Запрос.Выполнить().Выгрузить();
		Раздел2.Вставить("ТаблицаРаздел2", ТаблицаРаздел2);
		
	КонецЕсли;

	Если Контейнер.Свойство("Раздел3")
		И НЕ ОрганизацияНеПлательшикНДС 
		И НЕ ОрганизацияОсвобожденаОтУплатыНДС Тогда
		
		Раздел3 = Контейнер.Раздел3;
		
		Запрос.Текст = ТекстЗапросаРаздел3Начисления();
		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();
		
		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел3, ЗначенияДляЗаполнения);
		КонецЕсли;
		
		Запрос.Текст = ТекстЗапросаРаздел3Вычеты();
		
		ЗначенияДляЗаполнения = Запрос.Выполнить().Выбрать();
		
		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел3, ЗначенияДляЗаполнения);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Контейнер.Свойство("Раздел3_Прил1") Тогда
		
		Раздел3_Прил1 = Контейнер.Раздел3_Прил1;
	
		Если КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета) = КонецГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета) Тогда
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости КАК ОбъектНедвижимости,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250) = """"
			|			ТОГДА ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.Наименование
			|		ИНАЧЕ ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250)
			|	КОНЕЦ КАК П000310001000,
			|	ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.АдресМестонахождения, 1, 250) КАК АдресМестонахождения,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.КодРегиона КАК П000310002000_02,
			|	ВЫБОР
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.Приобретение)
			|			ТОГДА ""1011803""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРПодрядные)
			|			ТОГДА ""1011801""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРСобственные)
			|			ТОГДА ""1011802""
			|		ИНАЧЕ """"
			|	КОНЕЦ КАК П000310003000,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаВводаВЭксплуатациюБУ КАК П000310004000,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачисленияАмортизацииНУ КАК П000310005000,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.СтоимостьОбъектаНедвижимости КАК П000310006000,
			|	СУММА(ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.НДС) КАК П000310007000,
			|	ГОД(ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Дата) КАК П000310008001_,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачалаИспользованияДляОпераций КАК П000310008002_,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДоляВыручкиНеОблагаемаяНДС КАК П000310008003_,
			|	СУММА(ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.НДСВосстановлен) КАК П000310008004_
			|ИЗ
			|	Документ.ВосстановлениеНДСПоОбъектамНедвижимости.ОбъектыНедвижимости КАК ВосстановлениеНДСпоОбъектамНедвижимости
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВосстановлениеНДСПоОбъектамНедвижимости.СчетаФактуры КАК ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры
			|		ПО ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка = ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.Ссылка
			|			И ВосстановлениеНДСпоОбъектамНедвижимости.КлючСтроки = ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КлючСтроки
			|ГДЕ
			|	ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Организация В(&Организация)
			|	И ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Дата <= &КонецПериода
			|	И ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Проведен
			|
			|СГРУППИРОВАТЬ ПО
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости,
			|	ВЫБОР
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.Приобретение)
			|			ТОГДА ""1011803""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРПодрядные)
			|			ТОГДА ""1011801""
			|		КОГДА ВосстановлениеНДСпоОбъектамНедвижимостиСчетаФактуры.КодОперацииДляДекларации = ЗНАЧЕНИЕ(Перечисление.НДСКодыОперацийПоОбъектамНедвижимости.СМРСобственные)
			|			ТОГДА ""1011802""
			|		ИНАЧЕ """"
			|	КОНЕЦ,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ИспользуетсяДляОперацийНеОблагаемыхНДС,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаВводаВЭксплуатациюБУ,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачисленияАмортизацииНУ,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДатаНачалаИспользованияДляОпераций,
			|	ГОД(ВосстановлениеНДСпоОбъектамНедвижимости.Ссылка.Дата),
			|	ВосстановлениеНДСпоОбъектамНедвижимости.СтоимостьОбъектаНедвижимости,
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ДоляВыручкиНеОблагаемаяНДС,
			|	ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.АдресМестонахождения, 1, 250),
			|	ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.КодРегиона,
			|	ВЫБОР
			|		КОГДА ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250) = """"
			|			ТОГДА ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.Наименование
			|		ИНАЧЕ ПОДСТРОКА(ВосстановлениеНДСпоОбъектамНедвижимости.ОбъектНедвижимости.НаименованиеПолное, 1, 250)
			|	КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	П000310008001_
			|ИТОГИ
			|	СУММА(П000310006000),
			|	СУММА(П000310007000),
			|	СУММА(П000310008001_),
			|	СУММА(П000310008003_),
			|	СУММА(П000310008004_)
			|ПО
			|	ОбъектНедвижимости,
			|	П000310003000
			|АВТОУПОРЯДОЧИВАНИЕ";
			
			ЗапросРаздел3_Прил1 = Запрос.Выполнить();
			Раздел3_Прил1.Вставить("Выборка", ЗапросРаздел3_Прил1);
			
		КонецЕсли;
	КонецЕсли;
	
// +++ввв 20.04.2017 г.
	Если Контейнер.Свойство("Раздел4") Тогда
	//Если Контейнер.Свойство("Раздел4") 
	//	И НЕ ОрганизацияНеПлательшикНДС Тогда
// ---ввв 20.04.2017 г.
		
		Раздел4 = Контейнер.Раздел4;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	""1011410"" КАК П000400001003_1,
		|	""1011410"" КАК П0004М1001003_1,
		|	""1011410"" КАК П000400001003,
		|	""1011410"" КАК П0004М1001003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000400002003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0004М1002003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000400002003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0004М1002003
		|ПОМЕСТИТЬ ВТ_Раздел4Начисления
		|ИЗ
		|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПродажОбороты.Событие В(&СобытиеПодтвержденаСтавка0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел4Начисления.П000400001003_1,
		|	ВТ_Раздел4Начисления.П0004М1001003_1,
		|	ВТ_Раздел4Начисления.П000400001003,
		|	ВТ_Раздел4Начисления.П0004М1001003,
		|	ВТ_Раздел4Начисления.П000400002003_1,
		|	ВТ_Раздел4Начисления.П0004М1002003_1,
		|	ВТ_Раздел4Начисления.П000400002003,
		|	ВТ_Раздел4Начисления.П0004М1002003
		|ИЗ
		|	ВТ_Раздел4Начисления КАК ВТ_Раздел4Начисления
		|ГДЕ
		|	ВТ_Раздел4Начисления.П000400002003 <> 0";
		
		Раздел4Начисления = Запрос.Выполнить();
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000400003003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0004М1003003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000400003003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0004М1003003
		|ПОМЕСТИТЬ ВТ_Раздел4Вычеты
		|ИЗ
		|	НДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупокОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПокупокОбороты.Событие В(&СобытиеПредъявленКВычетуНДС0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел4Вычеты.П000400003003_1,
		|	ВТ_Раздел4Вычеты.П0004М1003003_1,
		|	ВТ_Раздел4Вычеты.П000400003003,
		|	ВТ_Раздел4Вычеты.П0004М1003003
		|ИЗ
		|	ВТ_Раздел4Вычеты КАК ВТ_Раздел4Вычеты
		|ГДЕ
		|	ВТ_Раздел4Вычеты.П000400003003 <> 0";
		
		Раздел4Вычеты = Запрос.Выполнить();
		
		ЗначенияДляЗаполнения = Раздел4Начисления.Выбрать();
		
		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел4, ЗначенияДляЗаполнения);
		КонецЕсли;
		
		ЗначенияДляЗаполнения = Раздел4Вычеты.Выбрать();
		
		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел4, ЗначенияДляЗаполнения);
		КонецЕсли;
		
	КонецЕсли;

// +++ввв 20.04.2017 г.
	Если Контейнер.Свойство("Раздел6") Тогда
	//Если Контейнер.Свойство("Раздел6")
	//	И НЕ ОрганизацияНеПлательшикНДС Тогда
// ---ввв 20.04.2017 г.
		
		Раздел6 = Контейнер.Раздел6;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	""1011410"" КАК П000600001003_1,
		|	""1011410"" КАК П0006М1001003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600002003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0006М1002003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600003003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0006М1003003_1,
		|	""1011410"" КАК П000600001003,
		|	""1011410"" КАК П0006М1001003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600002003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0006М1002003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600003003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0006М1003003
		|ПОМЕСТИТЬ ВТ_Раздел6Начисления
		|ИЗ
		|	НДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПродажОбороты.Событие В(&СобытиеНеПодтвержденаСтавка0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел6Начисления.П000600001003_1,
		|	ВТ_Раздел6Начисления.П0006М1001003_1,
		|	ВТ_Раздел6Начисления.П000600002003_1,
		|	ВТ_Раздел6Начисления.П0006М1002003_1,
		|	ВТ_Раздел6Начисления.П000600003003_1,
		|	ВТ_Раздел6Начисления.П0006М1003003_1,
		|	ВТ_Раздел6Начисления.П000600001003,
		|	ВТ_Раздел6Начисления.П0006М1001003,
		|	ВТ_Раздел6Начисления.П000600002003,
		|	ВТ_Раздел6Начисления.П0006М1002003,
		|	ВТ_Раздел6Начисления.П000600003003,
		|	ВТ_Раздел6Начисления.П0006М1003003
		|ИЗ
		|	ВТ_Раздел6Начисления КАК ВТ_Раздел6Начисления
		|ГДЕ
		|	(ВТ_Раздел6Начисления.П000600002003 <> 0
		|			ИЛИ ВТ_Раздел6Начисления.П000600003003 <> 0)";
		
		Раздел6Начисления = Запрос.Выполнить();
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600004003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0006М1004003_1,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П000600004003,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот), 0) КАК ЧИСЛО(15, 2)) КАК П0006М1004003
		|ПОМЕСТИТЬ ВТ_Раздел6Вычеты
		|ИЗ
		|	НДСЗаписиКнигиПокупокОбороты КАК НДСЗаписиКнигиПокупокОбороты
		|ГДЕ
		|	НДСЗаписиКнигиПокупокОбороты.Событие В(&СобытиеПредъявленКВычетуНеПодтвержденНДС0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_Раздел6Вычеты.П000600004003_1,
		|	ВТ_Раздел6Вычеты.П0006М1004003_1,
		|	ВТ_Раздел6Вычеты.П000600004003,
		|	ВТ_Раздел6Вычеты.П0006М1004003
		|ИЗ
		|	ВТ_Раздел6Вычеты КАК ВТ_Раздел6Вычеты
		|ГДЕ
		|	ВТ_Раздел6Вычеты.П000600004003 <> 0";
		
		Раздел6Вычеты = Запрос.Выполнить();
		
		ЗначенияДляЗаполнения = Раздел6Начисления.Выбрать();
		
		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел6, ЗначенияДляЗаполнения);
		КонецЕсли;
		
		ЗначенияДляЗаполнения = Раздел6Вычеты.Выбрать();
		
		Если ЗначенияДляЗаполнения.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(Раздел6, ЗначенияДляЗаполнения);
		КонецЕсли;
		
	КонецЕсли;

	КонецЕсли;
// ---ввв 28.03.2017 г.
	
// +++ввв 01.04.2016 г.
	Попытка
		Запрос.МенеджерВременныхТаблиц.Закрыть();
	Исключение
	КонецПопытки;
// ---ввв 01.04.2016 г.

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Заполнены разделы 1-7'"));

// +++ввв 28.03.2017 г.
	ДанныеДляПроверкиКонтрагентов = Новый Структура;
	ДанныеДляПроверкиКонтрагентов.Вставить("ИспользованиеПроверкиВозможно", Ложь);
	
	ОбщиеПараметры = Новый Структура();
	ОбщиеПараметры.Вставить("Организация",                         ПараметрыОтчета.Организация);
	ОбщиеПараметры.Вставить("НачалоПериода",                       ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	ОбщиеПараметры.Вставить("КонецПериода",                        ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	ОбщиеПараметры.Вставить("ГруппироватьПоКонтрагентам",          Ложь);
	ОбщиеПараметры.Вставить("КонтрагентДляОтбора",                 Справочники.Контрагенты.ПустаяСсылка());
	ОбщиеПараметры.Вставить("ВыводитьПокупателейПоАвансам",        Ложь);
	ОбщиеПараметры.Вставить("ВыводитьПродавцовПоАвансам",          Ложь);
	ОбщиеПараметры.Вставить("ВключатьОбособленныеПодразделения",   Истина);
	ОбщиеПараметры.Вставить("СписокСформированныхЛистов",          Новый СписокЗначений());
	ОбщиеПараметры.Вставить("СформироватьОтчетПоСтандартнойФорме", Истина);
	ОбщиеПараметры.Вставить("ОтбиратьПоКонтрагенту",               Ложь);
	ОбщиеПараметры.Вставить("СписокОрганизаций",                   СписокОрганизаций);
	//ОбщиеПараметры.Вставить("СсылкаНаДекларацию",                  СсылкаНаДекларацию);
	ОбщиеПараметры.Вставить("ЗаполнениеДокумента",                 Ложь);
	ОбщиеПараметры.Вставить("ЗаполнениеДекларации",                Истина);
	ОбщиеПараметры.Вставить("ДанныеДляПроверкиКонтрагентов",       ДанныеДляПроверкиКонтрагентов);
	//ОбщиеПараметры.Вставить("ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС", 
	//	?(Константы.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС.Получить() <> 0, 
	//	Константы.ПредельноеКоличествоЗаписейВРазделеДекларацииПоНДС.Получить(), 10000));
	ОбщиеПараметры.Вставить("ДатаФормированияДопЛиста");
	ОбщиеПараметры.Вставить("ПравилаЗаполнения",                   ПараметрыЗаполненияОтчета.ПравилаЗаполнения);
// ---ввв 28.03.2017 г.

	Если Контейнер.Свойство("Раздел8") Тогда



		Раздел8 = Контейнер.Раздел8;

// +++ввв 28.03.2017 г.
		ПараметрыРаздел8 = ОбщиеПараметры;
		//ПараметрыРаздел8 = Новый Структура;
		//ПараметрыРаздел8.Вставить("Организация", ПараметрыОтчета.Организация);
		//ПараметрыРаздел8.Вставить("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
		//ПараметрыРаздел8.Вставить("КонецПериода", ПараметрыОтчета.мДатаКонцаПериодаОтчета);
// +++ввв 06.06.2017 г.
		ПараметрыРаздел8.КонецПериода = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
// ---ввв 06.06.2017 г.
		ПараметрыРаздел8.Вставить("ФормироватьДополнительныеЛисты", Ложь);
		ПараметрыРаздел8.Вставить("ДополнительныеЛистыЗаТекущийПериод", Ложь);
		//ПараметрыРаздел8.Вставить("ГруппироватьПоКонтрагентам", Ложь);
		//ПараметрыРаздел8.Вставить("КонтрагентДляОтбора", Справочники.Контрагенты.ПустаяСсылка());
		ПараметрыРаздел8.Вставить("ВыводитьТолькоДопЛисты", Ложь);
		//ПараметрыРаздел8.Вставить("ВыводитьПокупателейПоАвансам", Ложь);
		//ПараметрыРаздел8.Вставить("ВключатьОбособленныеПодразделения", Истина);
		//ПараметрыРаздел8.Вставить("СписокСформированныхЛистов", Новый СписокЗначений);
		//ПараметрыРаздел8.Вставить("СформироватьОтчетПоСтандартнойФорме", Истина);
		//ПараметрыРаздел8.Вставить("ОтбиратьПоКонтрагенту", Ложь);
		ПараметрыРаздел8.Вставить("ЕстьЗаписиПоКолонке20", Ложь);
		//ПараметрыРаздел8.Вставить("ФормироватьТабличныйДокумент", Истина);
		//ПараметрыРаздел8.Вставить("СписокОрганизаций", СписокОрганизаций);
		//ПараметрыРаздел8.Вставить("ЗаполнениеДокумента", Ложь);
		//ПараметрыРаздел8.Вставить("ЗаполнениеДекларации", Истина);
		//ПараметрыРаздел8.Вставить("ДатаФормированияДопЛиста");
		//ПараметрыРаздел8.Вставить("ПравилаЗаполнения", ПараметрыЗаполненияОтчета.ПравилаЗаполнения);
// ---ввв 28.03.2017 г.

		ДанныеДляПроверкиКонтрагентов = Новый Структура;
		ДанныеДляПроверкиКонтрагентов.Вставить("ИспользованиеПроверкиВозможно", Ложь);
		ПараметрыРаздел8.Вставить("ДанныеДляПроверкиКонтрагентов", ДанныеДляПроверкиКонтрагентов);

		// }}ТТК Сладков А. Заявка № 21.04.2016 начало
		Если ПараметрыЗаполненияОтчета.Свойство("ЗаполнятьРаздел8ПоДаннымРегистраСведений")<>Неопределено Тогда
			ПараметрыРаздел8.Вставить("ЗаполнятьРаздел8ПоДаннымРегистраСведений",ПараметрыЗаполненияОтчета.ЗаполнятьРаздел8ПоДаннымРегистраСведений);
		КонецЕсли;
		// }}ТТК Сладков А. Заявка № 21.04.2016 окончание
// +++ввв 01.06.2016 г.       
		Если ПараметрыЗаполненияОтчета.Свойство("ЗаполнятьРаздел89СУровнемПроверки")<>Неопределено Тогда
			ПараметрыРаздел8.Вставить("ЗаполнятьРаздел89СУровнемПроверки",ПараметрыЗаполненияОтчета.ЗаполнятьРаздел89СУровнемПроверки);
		КонецЕсли;
// ---ввв 01.06.2016 г.		
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		Отчеты.КнигаПокупок1137.СформироватьОтчет(ПараметрыРаздел8, АдресХранилища);
		РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);

		Если РезультатВыполнения.Свойство("ТаблицаРаздел8") И РезультатВыполнения.СписокСформированныхЛистов.Количество() > 0 Тогда


			СтруктураДанныхРаздел8 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел8.Записи = РезультатВыполнения.ТаблицаРаздел8;
			СтруктураДанныхРаздел8.Итоги = РезультатВыполнения.ИтогиРаздел8;
			Раздел8.Вставить("Данные", СтруктураДанныхРаздел8);
			Раздел8.Вставить("Отчет", РезультатВыполнения.СписокСформированныхЛистов[0].Значение);

		КонецЕсли;

	КонецЕсли;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Заполнен раздел 8'"));


	Если Контейнер.Свойство("Раздел8_Прил1") И Не (ПараметрыОтчета.ВидДокумента = 0) Тогда




		Раздел81 = Контейнер.Раздел8_Прил1;

// +++ввв 28.03.2017 г.
		ПараметрыРаздел81= ОбщиеПараметры;
		//ПараметрыРаздел81 = Новый Структура;
		//ПараметрыРаздел81.Вставить("Организация", ПараметрыОтчета.Организация);

		//ПараметрыРаздел81.Вставить("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
// +++ввв 03.04.2017 г.
		ПараметрыРаздел81.КонецПериода = ?(Не ЗначениеЗаполнено(ПараметрыОтчета.ДатаПодписи), ПараметрыОтчета.ДатаПодписи, КонецДня(ПараметрыОтчета.ДатаПодписи));
// ---ввв 03.04.2017 г.


		ПараметрыРаздел81.Вставить("НачалоНалоговогоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
		ПараметрыРаздел81.Вставить("КонецНалоговогоПериода", ПараметрыОтчета.мДатаКонцаПериодаОтчета);

		ПараметрыРаздел81.Вставить("ФормироватьДополнительныеЛисты", Истина);
		ПараметрыРаздел81.Вставить("ДополнительныеЛистыЗаТекущийПериод", Истина);
		//ПараметрыРаздел81.Вставить("ГруппироватьПоКонтрагентам", Ложь);
		//ПараметрыРаздел81.Вставить("КонтрагентДляОтбора", Справочники.Контрагенты.ПустаяСсылка());
		ПараметрыРаздел81.Вставить("ВыводитьТолькоДопЛисты", Истина);
		//ПараметрыРаздел81.Вставить("ВыводитьПокупателейПоАвансам", Ложь);
		//ПараметрыРаздел81.Вставить("ВключатьОбособленныеПодразделения", Истина);
		//ПараметрыРаздел81.Вставить("СписокСформированныхЛистов", Новый СписокЗначений);
		//ПараметрыРаздел81.Вставить("СформироватьОтчетПоСтандартнойФорме", Истина);
		//ПараметрыРаздел81.Вставить("ОтбиратьПоКонтрагенту", Ложь);
		ПараметрыРаздел81.Вставить("ЕстьЗаписиПоКолонке20", Ложь);
		//ПараметрыРаздел81.Вставить("ФормироватьТабличныйДокумент", Истина);
		//ПараметрыРаздел81.Вставить("СписокОрганизаций", СписокОрганизаций);
		//ПараметрыРаздел81.Вставить("ЗаполнениеДокумента", Ложь);
		//ПараметрыРаздел81.Вставить("ЗаполнениеДекларации", Истина);
		//ПараметрыРаздел81.Вставить("ДатаФормированияДопЛиста");

		//ДанныеДляПроверкиКонтрагентов = Новый Структура;
		//ДанныеДляПроверкиКонтрагентов.Вставить("ИспользованиеПроверкиВозможно", Ложь);
		//ПараметрыРаздел81.Вставить("ДанныеДляПроверкиКонтрагентов", ДанныеДляПроверкиКонтрагентов);
// ---ввв 28.03.2017 г.
// +++ввв 09.06.2016 г.       
		Если ПараметрыЗаполненияОтчета.Свойство("ЗаполнятьРаздел89СУровнемПроверки")<>Неопределено Тогда
			ПараметрыРаздел81.Вставить("ЗаполнятьРаздел89СУровнемПроверки",ПараметрыЗаполненияОтчета.ЗаполнятьРаздел89СУровнемПроверки);
		КонецЕсли;
// ---ввв 09.06.2016 г.		

		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		Отчеты.КнигаПокупок1137.СформироватьОтчет(ПараметрыРаздел81, АдресХранилища);
		РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);

		Если РезультатВыполнения.Свойство("ТаблицаРаздел81") И РезультатВыполнения.Свойство("ТабличныйДокументРаздел81") Тогда


			СтруктураДанныхРаздел81 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел81.Записи = РезультатВыполнения.ТаблицаРаздел81;
			СтруктураДанныхРаздел81.Итоги = РезультатВыполнения.ИтогиРаздел81;
			Раздел81.Вставить("Данные", СтруктураДанныхРаздел81);
			Раздел81.Вставить("Отчет", РезультатВыполнения.ТабличныйДокументРаздел81);

		КонецЕсли;

	КонецЕсли;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Заполнен раздел 8 прил. 1'"));


	Если Контейнер.Свойство("Раздел9") Тогда

		Раздел9 = Контейнер.Раздел9;

// +++ввв 28.03.2017 г.
		ПараметрыРаздел9 = ОбщиеПараметры;
		//ПараметрыРаздел9 = Новый Структура;
		//ПараметрыРаздел9.Вставить("Организация", ПараметрыОтчета.Организация);
		//ПараметрыРаздел9.Вставить("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
		//ПараметрыРаздел9.Вставить("КонецПериода", ПараметрыОтчета.мДатаКонцаПериодаОтчета);
// +++ввв 06.06.2017 г.
		ПараметрыРаздел9.КонецПериода = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
// ---ввв 06.06.2017 г.
		ПараметрыРаздел9.Вставить("ФормироватьДополнительныеЛисты", Ложь);
		ПараметрыРаздел9.Вставить("ДополнительныеЛистыЗаТекущийПериод", Ложь);
		//ПараметрыРаздел9.Вставить("ГруппироватьПоКонтрагентам", Ложь);
		//ПараметрыРаздел9.Вставить("КонтрагентДляОтбора", Справочники.Контрагенты.ПустаяСсылка());
		ПараметрыРаздел9.Вставить("ВыводитьТолькоДопЛисты", Ложь);
		//ПараметрыРаздел9.Вставить("ВыводитьПокупателейПоАвансам", Ложь);
		//ПараметрыРаздел9.Вставить("ВключатьОбособленныеПодразделения", Истина);
		//ПараметрыРаздел9.Вставить("СписокСформированныхЛистов", Новый СписокЗначений);
		//ПараметрыРаздел9.Вставить("СформироватьОтчетПоСтандартнойФорме", Истина);
		//ПараметрыРаздел9.Вставить("ОтбиратьПоКонтрагенту", Ложь);
		//ПараметрыРаздел9.Вставить("ВыводитьПродавцовПоАвансам", Ложь);
		ПараметрыРаздел9.Вставить("ЕстьЗаписиПоКолонке20", Ложь);
		//ПараметрыРаздел9.Вставить("ФормироватьТабличныйДокумент", Истина);
		//ПараметрыРаздел9.Вставить("СписокОрганизаций", СписокОрганизаций);
		//ПараметрыРаздел9.Вставить("ЗаполнениеДокумента", Ложь);
		//ПараметрыРаздел9.Вставить("ЗаполнениеДекларации", Истина);
		//ПараметрыРаздел9.Вставить("ДатаФормированияДопЛиста");
		//

		//ДанныеДляПроверкиКонтрагентов = Новый Структура;
		//ДанныеДляПроверкиКонтрагентов.Вставить("ИспользованиеПроверкиВозможно", Ложь);
		//ПараметрыРаздел9.Вставить("ДанныеДляПроверкиКонтрагентов", ДанныеДляПроверкиКонтрагентов);
// ---ввв 28.03.2017 г.

		// {{ТТК Сладков А. Заявка № 21.04.2016 начало	
		Если ПараметрыЗаполненияОтчета.Свойство("ЗаполнятьРаздел9ПоДаннымРегистраСведений")<>Неопределено Тогда
			ПараметрыРаздел9.Вставить("ЗаполнятьРаздел9ПоДаннымРегистраСведений",ПараметрыЗаполненияОтчета.ЗаполнятьРаздел9ПоДаннымРегистраСведений);
		КонецЕсли;
		// }}ТТК Сладков А. Заявка № 21.04.2016 окончание
// +++ввв 22.06.2016 г.       
		Если ПараметрыЗаполненияОтчета.Свойство("ЗаполнятьРаздел89СУровнемПроверки")<>Неопределено Тогда
			ПараметрыРаздел9.Вставить("ЗаполнятьРаздел89СУровнемПроверки",ПараметрыЗаполненияОтчета.ЗаполнятьРаздел89СУровнемПроверки);
		КонецЕсли;
// ---ввв 22.06.2016 г.		

		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	
		Отчеты.КнигаПродаж1137.СформироватьОтчет(ПараметрыРаздел9, АдресХранилища);
		РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);

		Если РезультатВыполнения.Свойство("ТаблицаРаздел9") И РезультатВыполнения.СписокСформированныхЛистов.Количество() > 0 Тогда


			СтруктураДанныхРаздел9 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел9.Записи = РезультатВыполнения.ТаблицаРаздел9;
			СтруктураДанныхРаздел9.Итоги = РезультатВыполнения.ИтогиРаздел9;
			Раздел9.Вставить("Данные", СтруктураДанныхРаздел9);
			Раздел9.Вставить("Отчет", РезультатВыполнения.СписокСформированныхЛистов[0].Значение);

		КонецЕсли;

	КонецЕсли;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Заполнен раздел 9'"));

	Если Контейнер.Свойство("Раздел9_Прил1") И Не (ПараметрыОтчета.ВидДокумента = 0) Тогда

		Раздел91 = Контейнер.Раздел9_Прил1;

// +++ввв 28.03.2017 г.
		ПараметрыРаздел91 = ОбщиеПараметры;
		//ПараметрыРаздел91 = Новый Структура;
		//ПараметрыРаздел91.Вставить("Организация", ПараметрыОтчета.Организация);

		//ПараметрыРаздел91.Вставить("НачалоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
// +++ввв 03.04.2017 г.
		ПараметрыРаздел91.КонецПериода = ?(Не ЗначениеЗаполнено(ПараметрыОтчета.ДатаПодписи), ПараметрыОтчета.ДатаПодписи, КонецДня(ПараметрыОтчета.ДатаПодписи));
// ---ввв 03.04.2017 г.


		ПараметрыРаздел91.Вставить("НачалоНалоговогоПериода", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
		ПараметрыРаздел91.Вставить("КонецНалоговогоПериода", ПараметрыОтчета.мДатаКонцаПериодаОтчета);

		ПараметрыРаздел91.Вставить("ФормироватьДополнительныеЛисты", Истина);
		ПараметрыРаздел91.Вставить("ДополнительныеЛистыЗаТекущийПериод", Истина);
		//ПараметрыРаздел91.Вставить("ГруппироватьПоКонтрагентам", Ложь);
		//ПараметрыРаздел91.Вставить("КонтрагентДляОтбора", Справочники.Контрагенты.ПустаяСсылка());
		ПараметрыРаздел91.Вставить("ВыводитьТолькоДопЛисты", Истина);
		//ПараметрыРаздел91.Вставить("ВыводитьПокупателейПоАвансам", Ложь);
		//ПараметрыРаздел91.Вставить("ВключатьОбособленныеПодразделения", Истина);
		//ПараметрыРаздел91.Вставить("СписокСформированныхЛистов", Новый СписокЗначений);
		//ПараметрыРаздел91.Вставить("СформироватьОтчетПоСтандартнойФорме", Истина);
		//ПараметрыРаздел91.Вставить("ОтбиратьПоКонтрагенту", Ложь);
		//ПараметрыРаздел91.Вставить("ВыводитьПродавцовПоАвансам", Ложь);
		ПараметрыРаздел91.Вставить("ЕстьЗаписиПоКолонке20", Ложь);
		//ПараметрыРаздел91.Вставить("ФормироватьТабличныйДокумент", Истина);
		//ПараметрыРаздел91.Вставить("СписокОрганизаций", СписокОрганизаций);
		//ПараметрыРаздел91.Вставить("ЗаполнениеДокумента", Ложь);
		//ПараметрыРаздел91.Вставить("ЗаполнениеДекларации", Истина);
		//ПараметрыРаздел91.Вставить("ДатаФормированияДопЛиста");

		//ДанныеДляПроверкиКонтрагентов = Новый Структура;
		//ДанныеДляПроверкиКонтрагентов.Вставить("ИспользованиеПроверкиВозможно", Ложь);
		//ПараметрыРаздел91.Вставить("ДанныеДляПроверкиКонтрагентов", ДанныеДляПроверкиКонтрагентов);
// ---ввв 28.03.2017 г.
// +++ввв 24.06.2016 г.       
		Если ПараметрыЗаполненияОтчета.Свойство("ЗаполнятьРаздел89СУровнемПроверки")<>Неопределено Тогда
			ПараметрыРаздел91.Вставить("ЗаполнятьРаздел89СУровнемПроверки",ПараметрыЗаполненияОтчета.ЗаполнятьРаздел89СУровнемПроверки);
		КонецЕсли;
// ---ввв 24.06.2016 г.		

		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		Отчеты.КнигаПродаж1137.СформироватьОтчет(ПараметрыРаздел91, АдресХранилища);
		РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);

		Если РезультатВыполнения.Свойство("ТаблицаРаздел91") И РезультатВыполнения.Свойство("ТабличныйДокументРаздел91") Тогда


			СтруктураДанныхРаздел91 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел91.Записи = РезультатВыполнения.ТаблицаРаздел91;
			СтруктураДанныхРаздел91.Итоги = РезультатВыполнения.ИтогиРаздел91;
			Раздел91.Вставить("Данные", СтруктураДанныхРаздел91);
			Раздел91.Вставить("Отчет", РезультатВыполнения.ТабличныйДокументРаздел91);

		КонецЕсли;

	КонецЕсли;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Заполнен раздел 9 прил. 1'"));


	Если Контейнер.Свойство("Раздел10") И Контейнер.Свойство("Раздел11") Тогда


		Раздел10 = Контейнер.Раздел10;
		Раздел11 = Контейнер.Раздел11;

// +++ввв 28.03.2017 г.
		ПараметрыРаздела = ОбщиеПараметры;
		//ПараметрыРаздела = Новый Структура;
		//ПараметрыРаздела.Вставить("Организация", ПараметрыОтчета.Организация);
		Если ПараметрыЗаполненияОтчета.ВидОтчета = "РегламентированныйОтчетНДСФормаОтчета2015Кв1" Тогда
			ПараметрыРаздела.Вставить("НалоговыйПериод", ПараметрыОтчета.мДатаНачалаПериодаОтчета);
		ИначеЕсли ПараметрыЗаполненияОтчета.ВидОтчета = "РегламентированныйОтчетНДСФормаОтчета2017Кв1" Тогда
			ПараметрыРаздела.Вставить("НалоговыйПериод", НачалоКвартала(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
		КонецЕсли;
		//ПараметрыРаздела.Вставить("ГруппироватьПоКонтрагентам", Ложь);
		//ПараметрыРаздела.Вставить("СформироватьОтчетПоСтандартнойФорме", Истина);
		//ПараметрыРаздела.Вставить("КонтрагентДляОтбора", Справочники.Контрагенты.ПустаяСсылка());
		//ПараметрыРаздела.Вставить("ОтбиратьПоКонтрагенту", Ложь);
		//ПараметрыРаздела.Вставить("ВключатьОбособленныеПодразделения", Истина);
		//ПараметрыРаздела.Вставить("ЗаполнениеДекларации", Истина);
		//ПараметрыРаздела.Вставить("СписокОрганизаций", СписокОрганизаций);
		//ПараметрыРаздела.Вставить("ФормироватьТабличныйДокумент", Истина);


		//ДанныеДляПроверкиКонтрагентов = Новый Структура;
		//ДанныеДляПроверкиКонтрагентов.Вставить("ИспользованиеПроверкиВозможно", Ложь);
		//ПараметрыРаздела.Вставить("ДанныеДляПроверкиКонтрагентов", ДанныеДляПроверкиКонтрагентов);

		//УникальныйИдентификатор = Новый УникальныйИдентификатор;
// ---ввв 28.03.2017 г.
		АдресХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
		Отчеты.ЖурналУчетаСчетовФактур1137.СформироватьОтчет(ПараметрыРаздела, АдресХранилища);
		РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресХранилища);

		Если РезультатВыполнения.Свойство("ТаблицаРаздел10") И РезультатВыполнения.Свойство("ТабличныйДокументРаздел10") Тогда

			СтруктураДанныхРаздел10 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел10.Записи = РезультатВыполнения.ТаблицаРаздел10;
			Раздел10.Вставить("Данные", СтруктураДанныхРаздел10);
			Раздел10.Вставить("Отчет", РезультатВыполнения.ТабличныйДокументРаздел10);
		КонецЕсли;

		Если РезультатВыполнения.Свойство("ТаблицаРаздел11") И РезультатВыполнения.Свойство("ТабличныйДокументРаздел11") Тогда

			СтруктураДанныхРаздел11 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел11.Записи = РезультатВыполнения.ТаблицаРаздел11;
			Раздел11.Вставить("Данные", СтруктураДанныхРаздел11);
			Раздел11.Вставить("Отчет", РезультатВыполнения.ТабличныйДокументРаздел11);
		КонецЕсли;

	КонецЕсли;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Заполнены разделы 10 и 11'"));

	Если Контейнер.Свойство("Раздел12") Тогда

		Раздел12 = Контейнер.Раздел12;

		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	СчетФактураВыданный.Номер КАК НомерСчетаФактуры,
		|	СчетФактураВыданный.Дата КАК ДатаСчетаФактуры,
		|	СчетФактураВыданный.Контрагент.ИНН КАК ИННпокупателя,
		|	ВЫБОР
		|		КОГДА СчетФактураВыданный.КППКонтрагента ПОДОБНО """"
		|			ТОГДА СчетФактураВыданный.Контрагент.КПП
		|		ИНАЧЕ СчетФактураВыданный.КППКонтрагента
		|	КОНЕЦ КАК КППпокупателя,
		|	ВЫБОР
		|		КОГДА ПОДСТРОКА(СчетФактураВыданный.Контрагент.НаименованиеПолное, 1, 250) ПОДОБНО """"
		|			ТОГДА СчетФактураВыданный.Контрагент.Наименование
		|		ИНАЧЕ ПОДСТРОКА(СчетФактураВыданный.Контрагент.НаименованиеПолное, 1, 250)
		|	КОНЕЦ КАК КонтрагентНаименование,
		|	СчетФактураВыданный.СуммаНДСДокумента КАК СумНалПокуп,
		|	СчетФактураВыданный.СуммаДокумента КАК СтоимТовСНалВс,
		|	СчетФактураВыданный.СуммаДокумента - СчетФактураВыданный.СуммаНДСДокумента КАК СтоимТовБНалВс,
		|	СчетФактураВыданный.ВалютаДокумента.Код КАК ОКВ,
		|	СчетФактураВыданный.Ссылка КАК СчетФактураРасшифровка,
		|	СчетФактураВыданный.ВалютаДокумента.НаименованиеПолное КАК НаименованиеВалюты
		|ИЗ
		|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
		|ГДЕ
		|	НЕ СчетФактураВыданный.ВидСчетаФактуры В (ЗНАЧЕНИЕ(Перечисление.НДСВидСчетаФактуры.Корректировочный), ЗНАЧЕНИЕ(Перечисление.НДСВидСчетаФактуры.НалоговыйАгент))
		|	И СчетФактураВыданный.СуммаНДСДокумента > 0
		|	И СчетФактураВыданный.Организация В(&Организация)
		|	И СчетФактураВыданный.Дата МЕЖДУ &НачалоПериода И &КонецПериода
		|	И (&ОрганизацияНеПлательшикНДС
		|			ИЛИ &ОрганизацияОсвобожденаОтУплатыНДС)
		|	И СчетФактураВыданный.Проведен
		|	И НЕ СчетФактураВыданный.ПометкаУдаления";


		Запрос.УстановитьПараметр("ОрганизацияНеПлательшикНДС", ОрганизацияНеПлательшикНДС);
		Запрос.УстановитьПараметр("ОрганизацияОсвобожденаОтУплатыНДС", ОрганизацияОсвобожденаОтУплатыНДС);

		Запрос.УстановитьПараметр("Организация", СписокОрганизаций);
		Запрос.УстановитьПараметр("НачалоПериода", НачалоДня(ПараметрыОтчета.мДатаНачалаПериодаОтчета));
		Запрос.УстановитьПараметр("КонецПериода", КонецДня(ПараметрыОтчета.мДатаКонцаПериодаОтчета));

		ТаблицаРаздел12 = Новый ТаблицаЗначений;

		ТаблицаРаздел12.Колонки.Добавить("НомерПор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
		ТаблицаРаздел12.Колонки.Добавить("НомСчФ", Новый ОписаниеТипов("Строка", Неопределено, Новый КвалификаторыСтроки(0)));
		ТаблицаРаздел12.Колонки.Добавить("ДатаСчФ", Новый ОписаниеТипов("Строка", Неопределено, Новый КвалификаторыСтроки(10)));
		ТаблицаРаздел12.Колонки.Добавить("СвПокуп");
		ТаблицаРаздел12.Колонки.Добавить("ОКВ", Новый ОписаниеТипов("Строка", Неопределено, Новый КвалификаторыСтроки(3)));
		ТаблицаРаздел12.Колонки.Добавить("СтоимТовБНалВс", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		ТаблицаРаздел12.Колонки.Добавить("СумНалПокуп", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
		ТаблицаРаздел12.Колонки.Добавить("СтоимТовСНалВс", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));

		Результат = Запрос.Выполнить();

		Если Не Результат.Пустой() Тогда

			ТаблицаСчетовФактур = Результат.Выгрузить();

			ТабличныйДокументРаздел12 = Новый ТабличныйДокумент;
			МакетРаздел12 = ПолучитьОбщийМакет("СведенияИзСчетовФактур");

			ОбластьШапка = МакетРаздел12.ПолучитьОбласть("Шапка");
			ТабличныйДокументРаздел12.Вывести(ОбластьШапка);

			ОбластьСтрока = МакетРаздел12.ПолучитьОбласть("Строка");

			НомерСтроки = 1;
// +++ввв 28.03.2017 г.
			ИтогПоРазделу12 = 0;
// ---ввв 28.03.2017 г.
			Для каждого СтрокаВыборки Из ТаблицаСчетовФактур Цикл

				СтрокаРаздела12 = ТаблицаРаздел12.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаРаздела12, СтрокаВыборки);

				Если Не ПустаяСтрока(СтрокаВыборки.ИННпокупателя) Тогда

					СтруктураСвПок = Новый Структура;
					Если СтрДлина(СтрокаВыборки.ИННпокупателя) > 10 Тогда
						СтруктураСвПок.Вставить("ИННФЛ", СтрокаВыборки.ИННпокупателя);
					Иначе
						СтруктураСвПок.Вставить("ИННЮЛ", СтрокаВыборки.ИННпокупателя);
						СтруктураСвПок.Вставить("КПП", СтрокаВыборки.КППпокупателя);
					КонецЕсли;

					СтрокаРаздела12.СвПокуп = СтруктураСвПок;

				КонецЕсли;
// +++ввв 28.03.2017 г.
				ИтогПоРазделу12 = ИтогПоРазделу12 + СтрокаВыборки.СумНалПокуп;
// ---ввв 28.03.2017 г.
				СтрокаРаздела12.НомСчФ = ОбщегоНазначения.ПолучитьНомерНаПечать(СтрокаВыборки.СчетФактураРасшифровка);
				СтрокаРаздела12.ДатаСчФ = Формат(СтрокаВыборки.ДатаСчетаФактуры, "ДФ=dd.MM.yyyy");
				СтрокаРаздела12.НомерПор = НомерСтроки;

				ОбластьСтрока.Параметры.Ном = НомерСтроки;
				ОбластьСтрока.Параметры.НомерДата = "" + СтрокаРаздела12.НомСчФ + ";" + СтрокаРаздела12.ДатаСчФ;
				ОбластьСтрока.Параметры.КонтрагентНаименование = СтрокаВыборки.КонтрагентНаименование;
				ОбластьСтрока.Параметры.КонтрагентИННКПП = "" + СтрокаВыборки.ИННпокупателя + ?(ЗначениеЗаполнено(СтрокаВыборки.КППпокупателя), "/" + Строка(СтрокаВыборки.КППпокупателя), "");

				ОбластьСтрока.Параметры.Валюта = СокрЛП(СтрокаВыборки.НаименованиеВалюты) + ", " + СтрокаВыборки.ОКВ;
				ОбластьСтрока.Параметры.СуммаДокумента = СтрокаВыборки.СтоимТовСНалВс;
				ОбластьСтрока.Параметры.СуммаНДС = СтрокаВыборки.СумНалПокуп;
				ОбластьСтрока.Параметры.СчетФактураРасшифровка = СтрокаВыборки.СчетФактураРасшифровка;

				ОбластьСтрока.Область(1, , ОбластьСтрока.ВысотаТаблицы).Имя = "Строка_" + НомерСтроки;

				ТабличныйДокументРаздел12.Вывести(ОбластьСтрока);

				НомерСтроки = НомерСтроки + 1;

			КонецЦикла;

			СтруктураДанныхРаздел12 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел12.Записи = ТаблицаРаздел12;
			Раздел12.Вставить("Данные", СтруктураДанныхРаздел12);
			Раздел12.Вставить("Отчет", ТабличныйДокументРаздел12);
		Иначе

			СтруктураДанныхРаздел12 = Новый Структура("Записи,Итоги");
			СтруктураДанныхРаздел12.Записи = ТаблицаРаздел12;
			Раздел12.Вставить("Данные", СтруктураДанныхРаздел12);
			Раздел12.Вставить("Отчет", Новый ТабличныйДокумент);
		КонецЕсли;

// +++ввв 28.03.2017 г.
		Если Контейнер.Свойство("Раздел1") Тогда
			
			Раздел1 = Контейнер.Раздел1;
			
			ЗначенияДляЗаполнения = Новый Структура("П000100003003");
			ЗначенияДляЗаполнения.П000100003003 = ИтогПоРазделу12;
			ЗаполнитьЗначенияСвойств(Раздел1, ЗначенияДляЗаполнения);
			
		КонецЕсли;
// ---ввв 28.03.2017 г.
	КонецЕсли;

	ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение декларации по НДС'"), УровеньЖурналаРегистрации.Информация, , , НСтр("ru = 'Заполнен раздел 12'"));

// +++ввв 28.03.2017 г.
	Если Контейнер.Свойство("Раздел7") Тогда
		абс_УчетНДС.ЗаполнитьОтчетНДСФормаОтчета2015Кв1_Раздел7(Контейнер, Запрос);
	КонецЕсли;
// ---ввв 28.03.2017 г.

	ПоместитьВоВременноеХранилище(Контейнер, АдресХранилищаЗаполненияОтчета);

КонецПроцедуры
