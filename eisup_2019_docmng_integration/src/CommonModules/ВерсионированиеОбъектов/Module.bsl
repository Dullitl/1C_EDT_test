
Процедура МеханизмВерсионированияОбъектов_ПередЗаписьюСправочника(Источник, Отказ) Экспорт
	
	ПодготовитьЗаписьОбъекта (Источник);
	
КонецПроцедуры

Процедура МеханизмВерсионированияОбъектов_ПередЗаписьюДокумента(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	ПодготовитьЗаписьОбъекта (Источник, РежимЗаписи);
	
КонецПроцедуры

Процедура МеханизмВерсионированияОбъектов_ПриЗаписиСправочникаДокумента(Источник, Отказ) Экспорт
	
	Если Отказ Или Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//АБС ВСТАВКА №40078 НАЧАЛО «25 апреля 2014 г.», Пополитов
	Если не абс_СерверныеФункции.абс_ДаннаяБазаНеКопия() Тогда
		Возврат;	
	КонецЕсли;	
	//\\АБС ВСТАВКА №40078 КОНЕЦ	
	
	Попытка
		Если ТипЗнч(Источник) = Тип("СправочникОбъект.Контрагенты") Тогда 
			абс_ПроцедурыОбмена.ЗарегистрироватьВерсиюКонтрагента(Источник, Отказ);
		ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда
			абс_ПроцедурыОбмена.ЗарегистрироватьВерсиюДоговора(Источник, Отказ);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

Процедура ПодготовитьЗаписьОбъекта(знач Источник,
                                   знач РежимЗаписи = Неопределено)
	
	// Проверяем, что механизм версионирования включен
	Если Константы.ИспользоватьВерсионированиеОбъектов.Получить() Тогда
		
		// получаем вариант версионирования из функциональной опции
		ВариантВерсионирования = ПолучитьВариантВерсионирования(Источник);
		
		ЧислоВерсийОбъекта = Неопределено;
		
		ВерсионироватьОбъект = Истина;
		Если ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать Тогда
			ВерсионироватьОбъект = Ложь;
		ИначеЕсли ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении Тогда
			ЧислоВерсийОбъекта = ВерсионированиеОбъектовПривилегированный.ПолучитьЧислоВерсийОбъекта(Источник.Ссылка);
			Если ЧислоВерсийОбъекта = 0 И РежимЗаписи <> РежимЗаписиДокумента.Проведение Тогда
				ВерсионироватьОбъект = Ложь;
			КонецЕсли;
		КонецЕсли;
		
		ПараметрыВерсионирования = Источник.ДополнительныеСвойства;
		ПараметрыВерсионирования.Вставить("ВерсионироватьОбъект", ВерсионироватьОбъект);
		ПараметрыВерсионирования.Вставить("ЧислоВерсийОбъекта", ЧислоВерсийОбъекта);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьВариантВерсионирования(Источник)
	
	ИмяОбъекта = Источник.Метаданные().Имя;
	
	НастройкаВерсионирования = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьМенеджерЗаписи();
	НастройкаВерсионирования.ТипОбъекта = ИмяОбъекта;
	НастройкаВерсионирования.Прочитать();
	
	Если ЗначениеЗаполнено(НастройкаВерсионирования.Вариант) Тогда
		Возврат НастройкаВерсионирования.Вариант;
	Иначе
		Если Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(Источник.Ссылка)) Тогда
			Возврат Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
		Иначе
			Возврат ?(Источник.Метаданные() = Метаданные.СвойстваОбъектов.Проведение.Разрешить,
			          Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении,
			          Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьВсегда);
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

// Проверяет, что документу разрешено проведение
//
Функция ДокументПроводится(знач ИмяДокумента) Экспорт
	
	Возврат Метаданные.Документы[ИмяДокумента].Проведение = 
	            Метаданные.СвойстваОбъектов.Проведение.Разрешить;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Блок функций для работы с настройками значений

Процедура ЗаписатьНастройкиВерсионированияПоУмолчанию() Экспорт
	
	НВСправочники = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать;
	
	Для Каждого Справочник Из Метаданные.Справочники Цикл
		Если Не ЗначениеЗаполнено(ЗагрузитьНастройкуВерсионированияПоОбъекту(Справочник.Имя)) Тогда
			ЗаписатьНастройкуВерсионированияПоОбъекту(Справочник.Имя,
			                                          НВСправочники);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Документ Из Метаданные.Документы Цикл
		Если ДокументПроводится(Документ.Имя) Тогда
			НВДокументы = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении;
		Иначе
			НВДокументы = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьВсегда;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЗагрузитьНастройкуВерсионированияПоОбъекту(Документ.Имя)) Тогда
			ЗаписатьНастройкуВерсионированияПоОбъекту(Документ.Имя,
			                                          НВДокументы);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Записывает настройку версионирования по объекту в регистр сведений
//
Процедура ЗаписатьНастройкуВерсионированияПоОбъекту(
                                  Объект,
                                  ВариантВерсионирования) Экспорт
	
	ВариантМВ = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьМенеджерЗаписи();
	ВариантМВ.ТипОбъекта = Объект;
	ВариантМВ.Вариант = ВариантВерсионирования;
	ВариантМВ.Записать();
	
КонецПроцедуры

// Записывает настройку версионирования по объекту в регистр сведений
//
Функция ЗагрузитьНастройкуВерсионированияПоОбъекту(знач Объект) Экспорт
	
	ВариантМВ = РегистрыСведений.НастройкаВерсионированияОбъектов.СоздатьМенеджерЗаписи();
	ВариантМВ.ТипОбъекта = Объект;
	ВариантМВ.Прочитать();
	
	Возврат ВариантМВ.Вариант;
	
КонецФункции

Процедура абс_ВерсионированиеОбъектов_ПриЗаписиОбъектаПриЗаписи(Источник, Отказ) Экспорт
	
	Перем ЧислоВерсийОбъекта;
		
	Если ВерсионированиеОбъектовПривилегированный.НеЗаписываемВерсиюВРегистр(Источник.Ссылка) или Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	Если ОбъектВерсионируется(Источник, ЧислоВерсийОбъекта) Тогда
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		
		ЗаписьXML = Новый ЗаписьXML;
		ЗаписьXML.ОткрытьФайл(ИмяВременногоФайла); 
		ЗаписьXML.ЗаписатьОбъявлениеXML();
		ЗаписатьXML(ЗаписьXML, Источник, НазначениеТипаXML.Явное);
		ЗаписьXML.Закрыть();
		
		ДвоичныеДанные = Новый ДвоичныеДанные(ИмяВременногоФайла);
		ХранилищеДанных = Новый ХранилищеЗначения(ДвоичныеДанные, Новый СжатиеДанных(9));
		
		УдалитьФайлы(ИмяВременногоФайла);
		
		ДвиженияДокумента = Новый ТаблицаЗначений;
		ДвиженияДокумента.Колонки.Добавить("ИмяТаблицы");
		ДвиженияДокумента.Колонки.Добавить("Таблица");
		Для Каждого ТекРегистрДвижений Из Источник.Метаданные().Движения Цикл
			//Источник.Движения[ТекРегистрДвижений.Имя].Прочитать();
			Строка = ДвиженияДокумента.Добавить();
			Строка.ИмяТаблицы = ТекРегистрДвижений.Имя;
			Строка.Таблица = Источник.Движения[ТекРегистрДвижений.Имя].Выгрузить();
		КонецЦикла; 
		ДвиженияДокумента = абс_ПреобразоватьТаблицуВСторку(ДвиженияДокумента);
		
		ВерсионированиеОбъектовПривилегированный.ЗаписатьВерсиюОбъекта(Источник.Ссылка, ЧислоВерсийОбъекта, ХранилищеДанных,ДвиженияДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

Функция абс_ПреобразоватьТаблицуВСторку(Таблица) Экспорт
	
	ДвижениеДок = ""; 
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
	ЗначениеВФайл(ИмяВременногоФайла,Таблица);
	Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(ИмяВременногоФайла);
	Для Н = 1 По Текст.КоличествоСтрок() Цикл
		ДвижениеДок = ДвижениеДок + Текст.ПолучитьСтроку(Н);
	КонецЦикла; 	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат ДвижениеДок;
	
КонецФункции

// Проверяет настройки версионирования по переданному объекту и
// и возвращает вариант версионирования. Если по объекту не настроено
// версионирование, то он версионируется в соответствии с правилами
// версионирования "по умолчанию".
//
Функция ОбъектВерсионируется(знач Источник, ЧислоВерсийОбъекта)
	
	// Проверяем, что подсистема версионирования включена
	Если НЕ Константы.абс_НеИспользоватьВерсионированиеОбъектов.Получить() Тогда
		
		//ВариантВерсионирования = ПолучитьВариантВерсионирования(Источник);
		
		ЧислоВерсийОбъекта = ВерсионированиеОбъектовПривилегированный.ПолучитьЧислоВерсийОбъекта(Источник.Ссылка);
		
		ВерсионироватьОбъект = Истина;
		
		//Если ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.НеВерсионировать Тогда
		//	ВерсионироватьОбъект = Ложь;
		//ИначеЕсли ВариантВерсионирования = Перечисления.ВариантыВерсионированияОбъектов.ВерсионироватьПриПроведении Тогда
			Если ЧислоВерсийОбъекта = 0 И НЕ Источник.Проведен Тогда
				ВерсионироватьОбъект = Ложь;
			КонецЕсли;
		//КонецЕсли;
		
	Иначе
		ВерсионироватьОбъект = Ложь;
	КонецЕсли;
	
	Возврат ВерсионироватьОбъект;
	
КонецФункции

// +++ввв 28.09.2015г., 11.11.2015г. Запись версий справочников
Процедура ввв_ВерсионированиеОбъекта_ПриЗаписиСправочникаДополнительноПриЗаписи(Источник, Отказ) Экспорт
	
	Если Отказ Или Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если не абс_СерверныеФункции.абс_ДаннаяБазаНеКопия() Тогда
//		Возврат;	
	КонецЕсли;	
// 11.11.2015г.	
	Если Константы.ввв_ЗначениеvarcharдрайвераODBC_MSSQL.Получить()<100 Тогда
		Константы.ввв_ЗначениеvarcharдрайвераODBC_MSSQL.Установить(1023);
	КонецЕсли;
//	
	Попытка
		Если ТипЗнч(Источник) = Тип("СправочникОбъект.ОсновныеСредства") Тогда
			Если Источник.ввв_ОбменСАргусом ИЛИ Константы.ввв_ФлагОкончанияНачальногоВводаАргуса.Получить() Тогда
				абс_ПроцедурыОбмена.ЗарегистрироватьВерсиюОсновногоСредства(Источник, Отказ);
			КонецЕсли;
		ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.ДоговорыКонтрагентов") Тогда 
			Если Источник.ввв_ОбменСАргусом ИЛИ Константы.ввв_ФлагОкончанияНачальногоВводаАргуса.Получить() Тогда
				абс_ПроцедурыОбмена.ЗарегистрироватьВерсиюДоговорыКонтрагентов(Источник, Отказ);
			КонецЕсли;
		ИначеЕсли ТипЗнч(Источник) = Тип("СправочникОбъект.Номенклатура") Тогда 
			Если Источник.ввв_ОбменСАргусом ИЛИ Константы.ввв_ФлагОкончанияНачальногоВводаАргуса.Получить() Тогда
				абс_ПроцедурыОбмена.ЗарегистрироватьВерсиюНоменклатура(Источник, Отказ);
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;
	
КонецПроцедуры

// ---ввв
