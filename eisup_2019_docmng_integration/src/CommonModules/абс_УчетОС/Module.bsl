
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ ----------------------------------------------

// Процедура - обработчик подписки на событие "абс_УчетНоменклатурыВОС"
//
// Процедура обрабатывает проведение документов по учету основных средств, формируя записи в регистре
// абс_СоставОС - фиксируя номенклатурный состав внеоборотных активов.
//
Процедура абс_УчетНоменклатурыВОСОбработкаПроведения(Источник, Отказ, РежимПроведения) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаДвиженийПриход = Неопределено;
	ТаблицаДвиженийРасход = Неопределено;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.ТребованиеНакладная") Тогда // списание на строительство ОС или на модернизацию
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
		Запрос.Текст = "ВЫБРАТЬ
		               |	ТребованиеНакладнаяМатериалы.Номенклатура,
		               |	ТребованиеНакладнаяМатериалы.ХарактеристикаНоменклатуры,
		               |	ТребованиеНакладнаяМатериалы.СерияНоменклатуры,
		               |	ТребованиеНакладнаяМатериалы.ОбъектСтроительства КАК ВнеоборотныйАктив,
		               |	СУММА(ТребованиеНакладнаяМатериалы.Количество * ВЫБОР
		               |			КОГДА ТребованиеНакладнаяМатериалы.Коэффициент = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ТребованиеНакладнаяМатериалы.Коэффициент
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(ТребованиеНакладнаяМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ТребованиеНакладнаяМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК Количество
		               |ИЗ
		               |	Документ.ТребованиеНакладная.Материалы КАК ТребованиеНакладнаяМатериалы
		               |ГДЕ
		               |	ТребованиеНакладнаяМатериалы.Ссылка = &Ссылка
		               |	И ТребованиеНакладнаяМатериалы.СтатьяЗатрат <> ЗНАЧЕНИЕ(Справочник.СтатьиЗатрат.ПустаяСсылка)
		               |	И ТребованиеНакладнаяМатериалы.СтатьяЗатрат.ХарактерЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы)
		               |	И ТребованиеНакладнаяМатериалы.ОбъектСтроительства <> ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ТребованиеНакладнаяМатериалы.ХарактеристикаНоменклатуры,
		               |	ТребованиеНакладнаяМатериалы.СерияНоменклатуры,
		               |	ТребованиеНакладнаяМатериалы.Номенклатура,
		               |	ТребованиеНакладнаяМатериалы.ОбъектСтроительства";
					   
		ТаблицаДвиженийПриход = Запрос.Выполнить().Выгрузить();
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаОборудованияВМонтаж") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПередачаОборудованияВМонтажОборудование.Ссылка.ОбъектСтроительства КАК ВнеоборотныйАктив,
		               |	ПередачаОборудованияВМонтажОборудование.Номенклатура,
		               |	ПередачаОборудованияВМонтажОборудование.ХарактеристикаНоменклатуры,
		               |	ПередачаОборудованияВМонтажОборудование.СерияНоменклатуры,
		               |	СУММА(ПередачаОборудованияВМонтажОборудование.Количество * ВЫБОР
		               |			КОГДА ПередачаОборудованияВМонтажОборудование.Коэффициент = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ПередачаОборудованияВМонтажОборудование.Коэффициент
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(ПередачаОборудованияВМонтажОборудование.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ПередачаОборудованияВМонтажОборудование.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК Количество
		               |ИЗ
		               |	Документ.ПередачаОборудованияВМонтаж.Оборудование КАК ПередачаОборудованияВМонтажОборудование
		               |ГДЕ
		               |	ПередачаОборудованияВМонтажОборудование.Ссылка = &Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПередачаОборудованияВМонтажОборудование.Номенклатура,
		               |	ПередачаОборудованияВМонтажОборудование.ХарактеристикаНоменклатуры,
		               |	ПередачаОборудованияВМонтажОборудование.СерияНоменклатуры,
		               |	ПередачаОборудованияВМонтажОборудование.Ссылка.ОбъектСтроительства";
					   
		ТаблицаДвиженийПриход = Запрос.Выполнить().Выгрузить();
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПринятиеКУчетуОС") Тогда // списание с 08.04 или 08.03 на 01.01
		
		Если Источник.ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.ОбъектыСтроительства Тогда
			
			// двигаем в минус по объекту строительства, и в плюс - по основному средству
			
			Запрос = Новый Запрос;
			Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
			Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
			Запрос.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
			
			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |	ПринятиеКУчетуОСОсновныеСредства.Ссылка.ОбъектСтроительства КАК ОбъектСтроительства,
			               |	ПринятиеКУчетуОСОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство
			               |ПОМЕСТИТЬ ТабЧастьДокумента
			               |ИЗ
			               |	Документ.ПринятиеКУчетуОС.ОсновныеСредства КАК ПринятиеКУчетуОСОсновныеСредства
			               |ГДЕ
			               |	ПринятиеКУчетуОСОсновныеСредства.Ссылка = &Ссылка
			               |;
			               |
			               |////////////////////////////////////////////////////////////////////////////////
			               |ВЫБРАТЬ
			               |	ТабЧастьДокумента.ОсновноеСредство,
			               |	ЕСТЬNULL(ас_НоменклатураВОСОстатки.Номенклатура, ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)) КАК Номенклатура,
			               |	ЕСТЬNULL(ас_НоменклатураВОСОстатки.ХарактеристикаНоменклатуры, ЗНАЧЕНИЕ(Справочник.ХарактеристикиНоменклатуры.ПустаяСсылка)) КАК ХарактеристикаНоменклатуры,
			               |	ЕСТЬNULL(ас_НоменклатураВОСОстатки.СерияНоменклатуры, ЗНАЧЕНИЕ(Справочник.СерииНоменклатуры.ПустаяСсылка)) КАК СерияНоменклатуры,
			               |	ЕСТЬNULL(ас_НоменклатураВОСОстатки.КоличествоОстаток, 0) КАК Количество,
			               |	ТабЧастьДокумента.ОбъектСтроительства
			               |ИЗ
			               |	ТабЧастьДокумента КАК ТабЧастьДокумента
			               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.абс_СоставОС.Остатки(
			               |				&МоментВремени,
			               |				ВнеоборотныйАктив В
			               |					(ВЫБРАТЬ
			               |						ТабЧастьДокумента.ОбъектСтроительства
			               |					ИЗ
			               |						ТабЧастьДокумента)) КАК ас_НоменклатураВОСОстатки
			               |		ПО (ИСТИНА)";
			
			ТаблицаДвиженийПриход = Запрос.Выполнить().Выгрузить();
			ТаблицаДвиженийРасход = ТаблицаДвиженийПриход.Скопировать();
			
			ТаблицаДвиженийПриход.Свернуть("ОсновноеСредство, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество");
			ТаблицаОсновныхСредств = ТаблицаДвиженийПриход.Скопировать(, "ОсновноеСредство");
			ТаблицаОсновныхСредств.Свернуть("ОсновноеСредство");
			КоличествоОС = ?(ТаблицаОсновныхСредств.Количество() = 0, 1, ТаблицаОсновныхСредств.Количество());
			Для Каждого ТекСтрока Из ТаблицаДвиженийПриход Цикл
				ТекСтрока.Количество = ТекСтрока.Количество / КоличествоОС;
			КонецЦикла;
			ТаблицаДвиженийПриход.Колонки.ОсновноеСредство.Имя = "ВнеоборотныйАктив";
			ТаблицаДвиженийРасход.Свернуть("ОбъектСтроительства, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество");
			ТаблицаДвиженийРасход.Колонки.ОбъектСтроительства.Имя = "ВнеоборотныйАктив";
			
		ИначеЕсли Источник.ВидОперации = Перечисления.ВидыОперацийПринятияКУчетуОсновныхСредств.Оборудование Тогда
			
			// двигаем в плюс по основному средству
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
			Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			               |	ПринятиеКУчетуОСОсновныеСредства.ОсновноеСредство КАК ВнеоборотныйАктив,
			               |	ПринятиеКУчетуОСОсновныеСредства.Ссылка.Номенклатура,
			               |	ПринятиеКУчетуОСОсновныеСредства.Ссылка.ХарактеристикаНоменклатуры,
			               |	ПринятиеКУчетуОСОсновныеСредства.Ссылка.СерияНоменклатуры,
			               |	1 КАК Количество,
			               |	ПринятиеКУчетуОСОсновныеСредства.НомерСтроки КАК НомерСтроки
			               |ИЗ
			               |	Документ.ПринятиеКУчетуОС.ОсновныеСредства КАК ПринятиеКУчетуОСОсновныеСредства
			               |ГДЕ
			               |	ПринятиеКУчетуОСОсновныеСредства.Ссылка = &Ссылка
			               |
			               |УПОРЯДОЧИТЬ ПО
			               |	НомерСтроки";
			
			ТаблицаДвиженийПриход = Запрос.Выполнить().Выгрузить();
			
			// получим данные по остаткам оборудования, т.к. его может не хватить,
			// если в таб. части указано несколько ОС
			ПараметрВестиУчетПоХарактеристикам = Константы.ИспользоватьХарактеристикиНоменклатуры.Получить() И Источник.Номенклатура.ВестиУчетПоХарактеристикам;
			ПараметрВестиУчетПоСериям = Константы.ИспользоватьСерииНоменклатуры.Получить() И Источник.Номенклатура.ВестиПартионныйУчетПоСериям;
			ПараметрВестиУчетПоСкладамБУ = Константы.ВестиПартионныйУчетПоСкладамРегл.Получить();
			ЗапросПоОстаткам = Новый Запрос;
			ЗапросПоОстаткам.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
			ЗапросПоОстаткам.УстановитьПараметр("Организация", Источник.Организация);
			ЗапросПоОстаткам.УстановитьПараметр("Номенклатура", Источник.Номенклатура);
			ЗапросПоОстаткам.УстановитьПараметр("ХарактеристикаНоменклатуры", Источник.ХарактеристикаНоменклатуры);
			ЗапросПоОстаткам.УстановитьПараметр("СерияНоменклатуры", Источник.СерияНоменклатуры);
			ЗапросПоОстаткам.УстановитьПараметр("ВестиУчетПоХарактеристикам", ПараметрВестиУчетПоХарактеристикам);
			ЗапросПоОстаткам.УстановитьПараметр("ВестиУчетПоСериям", ПараметрВестиУчетПоСериям);
			ЗапросПоОстаткам.УстановитьПараметр("Склад", Источник.Склад);
			Если Источник.ОтражатьВБухгалтерскомУчете Тогда
				ЗапросПоОстаткам.УстановитьПараметр("СчетУчета", Источник.СчетУчетаБУВнеоборотногоАктива);
				МассивСубконто = Новый Массив;
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура);
				МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады);
				ЗапросПоОстаткам.УстановитьПараметр("ВидыСубконто", МассивСубконто);
				ЗапросПоОстаткам.УстановитьПараметр("ВестиУчетПоСкладам", ПараметрВестиУчетПоСкладамБУ);
				ТекстПоОстаткам = "ВЫБРАТЬ
				                  |	ЕСТЬNULL(ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.КоличествоОстаток, 0) КАК ОстатокПоПартиям,
				                  |	ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстатокДт, 0) КАК ОстатокПоРегиструБухгалтерии
				                  |ИЗ
				                  |	РегистрБухгалтерии.Хозрасчетный.Остатки(
				                  |			&МоментВремени,
				                  |			Счет = &СчетУчета,
				                  |			&ВидыСубконто,
				                  |			Организация = &Организация
				                  |				И Субконто1 = &Номенклатура
				                  |				И Субконто2 = &Склад) КАК ХозрасчетныйОстатки
				                  |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет.Остатки(
				                  |				&МоментВремени,
				                  |				Организация = &Организация
				                  |					И Номенклатура = &Номенклатура
				                  |					И ВЫБОР
				                  |						КОГДА &ВестиУчетПоСкладам
				                  |							ТОГДА Склад = &Склад
				                  |						ИНАЧЕ ИСТИНА
				                  |					КОНЕЦ
				                  |					И СчетУчета = &СчетУчета
				                  |					И ВЫБОР
				                  |						КОГДА &ВестиУчетПоХарактеристикам
				                  |							ТОГДА ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
				                  |						ИНАЧЕ ИСТИНА
				                  |					КОНЕЦ
				                  |					И ВЫБОР
				                  |						КОГДА &ВестиУчетПоСериям
				                  |							ТОГДА СерияНоменклатуры = &СерияНоменклатуры
				                  |						ИНАЧЕ ИСТИНА
				                  |					КОНЕЦ) КАК ПартииТоваровНаСкладахБухгалтерскийУчетОстатки
				                  |		ПО (ИСТИНА)";
				ЗапросПоОстаткам.Текст = ТекстПоОстаткам;
				РезультатОстатки = ЗапросПоОстаткам.Выполнить().Выбрать();
				Если РезультатОстатки.Следующий() Тогда
					КоличествоОборудования = Мин(РезультатОстатки.ОстатокПоПартиям, РезультатОстатки.ОстатокПоРегиструБухгалтерии);
				Иначе
					КоличествоОборудования = 0;
				КонецЕсли;
				
			ИначеЕсли Источник.ОтражатьВУправленческомУчете Тогда
				ТекстПоОстаткам = "ВЫБРАТЬ
				                  |	ЕСТЬNULL(ТоварыНаСкладахОстатки.КоличествоОстаток, 0) КАК ОстатокПоСкладу,
				                  |	ЕСТЬNULL(ТоварыОрганизацийОстатки.КоличествоОстаток, 0) КАК ОстатокПоОрганизации
				                  |ИЗ
				                  |	РегистрНакопления.ТоварыНаСкладах.Остатки(
				                  |			&МоментВремени,
				                  |			Склад = &Склад
				                  |				И Номенклатура = &Номенклатура
				                  |				И ВЫБОР
				                  |					КОГДА &ВестиУчетПоХарактеристикам
				                  |						ТОГДА ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
				                  |					ИНАЧЕ ИСТИНА
				                  |				КОНЕЦ
				                  |				И ВЫБОР
				                  |					КОГДА &ВестиУчетПоСериям
				                  |						ТОГДА СерияНоменклатуры = &СерияНоменклатуры
				                  |					ИНАЧЕ ИСТИНА
				                  |				КОНЕЦ) КАК ТоварыНаСкладахОстатки
				                  |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрНакопления.ТоварыОрганизаций.Остатки(
				                  |				&МоментВремени,
				                  |				Организация = &Организация
				                  |					И Номенклатура = &Номенклатура
				                  |					И ВЫБОР
				                  |						КОГДА &ВестиУчетПоХарактеристикам
				                  |							ТОГДА ХарактеристикаНоменклатуры = &ХарактеристикаНоменклатуры
				                  |						ИНАЧЕ ИСТИНА
				                  |					КОНЕЦ
				                  |					И ВЫБОР
				                  |						КОГДА &ВестиУчетПоСериям
				                  |							ТОГДА СерияНоменклатуры = &СерияНоменклатуры
				                  |						ИНАЧЕ ИСТИНА
				                  |					КОНЕЦ) КАК ТоварыОрганизацийОстатки
				                  |		ПО (ИСТИНА)";
				ЗапросПоОстаткам.Текст = ТекстПоОстаткам;
				РезультатОстатки = ЗапросПоОстаткам.Выполнить().Выбрать();
				Если РезультатОстатки.Следующий() Тогда
					КоличествоОборудования = Мин(РезультатОстатки.ОстатокПоСкладу, РезультатОстатки.ОстатокПоОрганизации);
				Иначе
					КоличествоОборудования = 0;
				КонецЕсли;

			Иначе
				КоличествоОборудования = 0;
			КонецЕсли;
			
			// теперь распределим полученное количество оборудования по количеству ОС
			Для Каждого ТекСтрока Из ТаблицаДвиженийПриход Цикл
				Если КоличествоОборудования <= 0 Тогда
					ТекСтрока.Количество = 0;
				Иначе
					КоличествоСписать = ?(КоличествоОборудования < 1, КоличествоОборудования, 1);
					ТекСтрока.Количество = КоличествоСписать;
					КоличествоОборудования = КоличествоОборудования - КоличествоСписать;
				КонецЕсли;
			КонецЦикла;
			
			ТаблицаДвиженийПриход.Свернуть("ВнеоборотныйАктив, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество");
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.СписаниеОС") И Источник.ОтражатьВБухгалтерскомУчете Тогда // списание стоимости с 01.01
		
		// таким документом двигаем в минус - т.е. списываем из состава ОС номенклатуру
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	СписаниеОСОС.ОсновноеСредство
		               |ПОМЕСТИТЬ СписокОС
		               |ИЗ
		               |	Документ.СписаниеОС.ОС КАК СписаниеОСОС
		               |ГДЕ
		               |	СписаниеОСОС.Ссылка = &Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	абс_СоставОСОстатки.ВнеоборотныйАктив,
		               |	абс_СоставОСОстатки.Номенклатура,
		               |	абс_СоставОСОстатки.ХарактеристикаНоменклатуры,
		               |	абс_СоставОСОстатки.СерияНоменклатуры,
		               |	абс_СоставОСОстатки.КоличествоОстаток КАК Количество
		               |ИЗ
		               |	РегистрНакопления.абс_СоставОС.Остатки(
		               |			&МоментВремени,
		               |			ВнеоборотныйАктив В
		               |				(ВЫБРАТЬ
		               |					СписокОС.ОсновноеСредство
		               |				ИЗ
		               |					СписокОС)) КАК абс_СоставОСОстатки";
		
		ТаблицаДвиженийРасход = Запрос.Выполнить().Выгрузить();
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПередачаОС") И Источник.ОтражатьВБухгалтерскомУчете Тогда // передача ОС с 01.01	
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
		Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |	ПередачаОСОС.ОсновноеСредство
		               |ПОМЕСТИТЬ СписокОС
		               |ИЗ
		               |	Документ.ПередачаОС.ОС КАК ПередачаОСОС
		               |ГДЕ
		               |	ПередачаОСОС.Ссылка = &Ссылка
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	абс_СоставОСОстатки.ВнеоборотныйАктив,
		               |	абс_СоставОСОстатки.Номенклатура,
		               |	абс_СоставОСОстатки.ХарактеристикаНоменклатуры,
		               |	абс_СоставОСОстатки.СерияНоменклатуры,
		               |	абс_СоставОСОстатки.КоличествоОстаток КАК Количество
		               |ИЗ
		               |	РегистрНакопления.абс_СоставОС.Остатки(
		               |			&МоментВремени,
		               |			ВнеоборотныйАктив В
		               |				(ВЫБРАТЬ
		               |					СписокОС.ОсновноеСредство
		               |				ИЗ
		               |					СписокОС)) КАК абс_СоставОСОстатки";
					   
		ТаблицаДвиженийРасход = Запрос.Выполнить().Выгрузить();
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.МодернизацияОС") Тогда
		
		// сначала проверим корректность заполнения таб. части "абс_ИсключаемаяИзОСНоменклатура"
		СтруктураПроверяемыхПолей = Новый Структура("ОсновноеСредство, Номенклатура");
		Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Источник.Ссылка);
		ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(Источник, "абс_ИсключаемаяИзОСНоменклатура", СтруктураПроверяемыхПолей, Отказ, Заголовок);
		
		// проверим, чтобы в таб. части исключаемой номенклатуры не было услуг, наборов и комплектов
		УправлениеЗапасами.ПроверитьЧтоНетУслуг(Источник, "абс_ИсключаемаяИзОСНоменклатура", , Отказ, Заголовок);
		УправлениеЗапасами.ПроверитьЧтоНетНаборов(Источник, "абс_ИсключаемаяИзОСНоменклатура", , Отказ, Заголовок);
		ПроверитьЧтоНетКомплектов(Отказ, Заголовок, "абс_ИсключаемаяИзОСНоменклатура", Источник);
		
		
		// ищем в составе объекта строительства, на котором собраны затраты на модернизацию, номенклатуру,
		// и перекидываем ее с объекта строительства на модернизируемое основное средство
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
		Запрос.УстановитьПараметр("ОбъектСтроительства", Источник.ОбъектСтроительства);
		Запрос.Текст = "ВЫБРАТЬ
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.ОсновноеСредство,
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура,
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.ХарактеристикаНоменклатуры,
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.СерияНоменклатуры,
		               |	СУММА(МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.ИсключаемоеКоличество * ВЫБОР
		               |			КОГДА МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.Коэффициент = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.Коэффициент
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК ИсключаемоеКоличество
		               |ПОМЕСТИТЬ ДанныеДокумента
		               |ИЗ
		               |	Документ.МодернизацияОС.абс_ИсключаемаяИзОСНоменклатура КАК МодернизацияОСабс_ИсключаемаяИзОСНоменклатура
		               |ГДЕ
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.Ссылка = &Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.ХарактеристикаНоменклатуры,
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.СерияНоменклатуры,
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.ОсновноеСредство,
		               |	МодернизацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеДокумента.ОсновноеСредство,
		               |	ДанныеДокумента.Номенклатура,
		               |	ДанныеДокумента.ХарактеристикаНоменклатуры,
		               |	ДанныеДокумента.СерияНоменклатуры,
		               |	ВЫБОР
		               |		КОГДА ДанныеДокумента.ИсключаемоеКоличество < ЕСТЬNULL(абс_СоставОСОстатки.КоличествоОстаток, 0)
		               |			ТОГДА ДанныеДокумента.ИсключаемоеКоличество
		               |		ИНАЧЕ ЕСТЬNULL(абс_СоставОСОстатки.КоличествоОстаток, 0)
		               |	КОНЕЦ КАК КоличествоМожноСписать,
		               |	ДанныеДокумента.ИсключаемоеКоличество КАК КоличествоНеобходимоСписать
		               |ИЗ
		               |	ДанныеДокумента КАК ДанныеДокумента
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.абс_СоставОС.Остатки(
		               |				&МоментВремени,
		               |				ВнеоборотныйАктив В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.ОсновноеСредство
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И Номенклатура В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.Номенклатура
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И ХарактеристикаНоменклатуры В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.ХарактеристикаНоменклатуры
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И СерияНоменклатуры В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.СерияНоменклатуры
		               |						ИЗ
		               |							ДанныеДокумента)) КАК абс_СоставОСОстатки
		               |		ПО ДанныеДокумента.ОсновноеСредство = абс_СоставОСОстатки.ВнеоборотныйАктив
		               |			И ДанныеДокумента.Номенклатура = абс_СоставОСОстатки.Номенклатура
		               |			И ДанныеДокумента.ХарактеристикаНоменклатуры = абс_СоставОСОстатки.ХарактеристикаНоменклатуры
		               |			И ДанныеДокумента.СерияНоменклатуры = абс_СоставОСОстатки.СерияНоменклатуры
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	абс_СоставОСОстатки.ВнеоборотныйАктив КАК ОбъектСтроительства,
		               |	абс_СоставОСОстатки.Номенклатура,
		               |	абс_СоставОСОстатки.ХарактеристикаНоменклатуры,
		               |	абс_СоставОСОстатки.СерияНоменклатуры,
		               |	абс_СоставОСОстатки.КоличествоОстаток КАК Количество,
		               |	ЕСТЬNULL(ОсновныеСредстваДокумента.ОсновноеСредство, ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)) КАК ОсновноеСредство
		               |ИЗ
		               |	РегистрНакопления.абс_СоставОС.Остатки(&МоментВремени, ВнеоборотныйАктив = &ОбъектСтроительства) КАК абс_СоставОСОстатки
		               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		               |			ДанныеДокумента.ОсновноеСредство КАК ОсновноеСредство
		               |		ИЗ
		               |			ДанныеДокумента КАК ДанныеДокумента) КАК ОсновныеСредстваДокумента
		               |		ПО (ИСТИНА)";
					   
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ДанныеИсключения = МассивРезультатов[1].Выгрузить();
		ДанныеПереноса = МассивРезультатов[2].Выгрузить();
		
		// сформируем список сообщений о недостаточном количестве и запретим проведение документа, если есть ошибки
		СписокСообщений = "";
		Для Каждого ТекСтрока Из ДанныеИсключения Цикл
			Если ТекСтрока.КоличествоМожноСписать < ТекСтрока.КоличествоНеобходимоСписать Тогда
				СписокСообщений = СписокСообщений + "По набору: ОС " + СокрЛП(ТекСтрока.ОсновноеСредство) + ", Номенклатура " + СокрЛП(ТекСтрока.Номенклатура) + 
				", Хар-ка " + ?(ТекСтрока.ХарактеристикаНоменклатуры.Пустая(), "<...>", СокрЛП(ТекСтрока.ХарактеристикаНоменклатуры)) + 
				", Серия " + ?(ТекСтрока.СерияНоменклатуры.Пустая(), "<...>", СокрЛП(ТекСтрока.СерияНоменклатуры)) + " в составе есть " + ТекСтрока.КоличествоМожноСписать + " из списываемых " +
				ТекСтрока.КоличествоНеобходимоСписать + " " + СокрЛП(ТекСтрока.Номенклатура.ЕдиницаХраненияОстатков) + " (в ед. хран. остатков)." + Символы.ПС;
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//# Если Клиент Тогда
			Если СписокСообщений <> "" Тогда
				Сообщить("Проведение документа: " + СокрЛП(Источник) + ". Ошибки по списанию из состава ОС номенклатуры.", СтатусСообщения.Важное);
				Сообщить(СписокСообщений);
			КонецЕсли;
		//# КонецЕсли
		
		Если Не Отказ Тогда
			// сформируем таблицу ТаблицаДвиженийРасход
			ТаблицаДвиженийРасход = ДанныеПереноса.Скопировать();
			ТаблицаДвиженийРасход.Свернуть("ОбъектСтроительства, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество");
			ТаблицаДвиженийРасход.Колонки.ОбъектСтроительства.Имя = "ВнеоборотныйАктив";
			
			// дополним таблицу расхода данными из таблицы ДанныеИсключания по списанию из ОС
			ДанныеИсключения.Колонки.ОсновноеСредство.Имя = "ВнеоборотныйАктив";
			ДанныеИсключения.Колонки.КоличествоМожноСписать.Имя = "Количество";
			Для Каждого СтрокаИсключения Из ДанныеИсключения Цикл
				НоваяСтрока = ТаблицаДвиженийРасход.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаИсключения);
			КонецЦикла;
			
			// сформируем таблицу ТаблицаДвиженийПриход
			ТаблицаДвиженийПриход = ДанныеПереноса.Скопировать();
			ТаблицаОС = ТаблицаДвиженийПриход.Скопировать(, "ОсновноеСредство");
			ТаблицаОС.Свернуть("ОсновноеСредство");
			КоличествоОС = ?(ТаблицаОС.Количество() = 0, 1, ТаблицаОС.Количество());
			Для Каждого ТекСтрока Из ТаблицаДвиженийПриход Цикл
				ТекСтрока.Количество = ТекСтрока.Количество / КоличествоОС;
			КонецЦикла;
			ТаблицаДвиженийПриход.Свернуть("ОсновноеСредство, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество");
			ТаблицаДвиженийПриход.Колонки.ОсновноеСредство.Имя = "ВнеоборотныйАктив";
			
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.абс_ЧастичнаяЛиквидацияОС") Тогда
		
		// сначала проверим корректность заполнения таб. части "абс_ИсключаемаяИзОСНоменклатура"
		СтруктураПроверяемыхПолей = Новый Структура("ОсновноеСредство, Номенклатура");
		Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Источник.Ссылка);
		ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(Источник, "абс_ИсключаемаяИзОСНоменклатура", СтруктураПроверяемыхПолей, Отказ, Заголовок);
		
		// проверим, чтобы в таб. части исключаемой номенклатуры не было услуг, наборов и комплектов
		УправлениеЗапасами.ПроверитьЧтоНетУслуг(Источник, "абс_ИсключаемаяИзОСНоменклатура", , Отказ, Заголовок);
		УправлениеЗапасами.ПроверитьЧтоНетНаборов(Источник, "абс_ИсключаемаяИзОСНоменклатура", , Отказ, Заголовок);
		ПроверитьЧтоНетКомплектов(Отказ, Заголовок, "абс_ИсключаемаяИзОСНоменклатура", Источник);
		
		// получим данные документа, проконтролируем остатки и сформируем движения
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = "ВЫБРАТЬ
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.ОсновноеСредство,
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура,
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.ХарактеристикаНоменклатуры,
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.СерияНоменклатуры,
		               |	СУММА(абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.ИсключаемоеКоличество * ВЫБОР
		               |			КОГДА абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.Коэффициент = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.Коэффициент
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК КоличествоИсключить
		               |ПОМЕСТИТЬ ДанныеДокумента
		               |ИЗ
		               |	Документ.абс_ЧастичнаяЛиквидацияОС.абс_ИсключаемаяИзОСНоменклатура КАК абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура
		               |ГДЕ
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.Ссылка = &Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.ОсновноеСредство,
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.Номенклатура,
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.ХарактеристикаНоменклатуры,
		               |	абс_ЧастичнаяЛиквидацияОСабс_ИсключаемаяИзОСНоменклатура.СерияНоменклатуры
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеДокумента.ОсновноеСредство КАК ВнеоборотныйАктив,
		               |	ДанныеДокумента.Номенклатура,
		               |	ДанныеДокумента.ХарактеристикаНоменклатуры,
		               |	ДанныеДокумента.СерияНоменклатуры,
		               |	ДанныеДокумента.КоличествоИсключить КАК Количество,
		               |	ЕСТЬNULL(абс_СоставОСОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток
		               |ИЗ
		               |	ДанныеДокумента КАК ДанныеДокумента
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.абс_СоставОС.Остатки(
		               |				&МоментВремени,
		               |				ВнеоборотныйАктив В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.ОсновноеСредство
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И Номенклатура В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.Номенклатура
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И ХарактеристикаНоменклатуры В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.ХарактеристикаНоменклатуры
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И СерияНоменклатуры В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.СерияНоменклатуры
		               |						ИЗ
		               |							ДанныеДокумента)) КАК абс_СоставОСОстатки
		               |		ПО ДанныеДокумента.ОсновноеСредство = абс_СоставОСОстатки.ВнеоборотныйАктив
		               |			И ДанныеДокумента.Номенклатура = абс_СоставОСОстатки.Номенклатура
		               |			И ДанныеДокумента.ХарактеристикаНоменклатуры = абс_СоставОСОстатки.ХарактеристикаНоменклатуры
		               |			И ДанныеДокумента.СерияНоменклатуры = абс_СоставОСОстатки.СерияНоменклатуры";
					   
		Запрос.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
					   
		ТаблицаДвиженийРасход = Запрос.Выполнить().Выгрузить();
		
		// проконтролируем остатки
		СписокСообщений = "";
		Для Каждого ТекСтрока Из ТаблицаДвиженийРасход Цикл
			Если ТекСтрока.КоличествоОстаток < ТекСтрока.Количество Тогда
				СписокСообщений = СписокСообщений + "По набору: ОС " + СокрЛП(ТекСтрока.ВнеоборотныйАктив) + ", Номенклатура " + СокрЛП(ТекСтрока.Номенклатура) + 
				", Хар-ка " + ?(ТекСтрока.ХарактеристикаНоменклатуры.Пустая(), "<...>", СокрЛП(ТекСтрока.ХарактеристикаНоменклатуры)) + 
				", Серия " + ?(ТекСтрока.СерияНоменклатуры.Пустая(), "<...>", СокрЛП(ТекСтрока.СерияНоменклатуры)) + " в составе есть " + ТекСтрока.КоличествоОстаток + " из списываемых " +
				ТекСтрока.Количество + " " + СокрЛП(ТекСтрока.Номенклатура.ЕдиницаХраненияОстатков) + " (в ед. хран. остатков)." + Символы.ПС;
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//# Если Клиент Тогда
			Если СписокСообщений <> "" Тогда
				Сообщить("Проведение документа: " + СокрЛП(Источник) + ". Ошибки по списанию из состава ОС номенклатуры.", СтатусСообщения.Важное);
				Сообщить(СписокСообщений);
			КонецЕсли;
		//# КонецЕсли
		
		Если Не Отказ Тогда
			ТаблицаДвиженийРасход.Свернуть("ВнеоборотныйАктив, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.абс_РазукрупнениеОС") Тогда
		
		// проверим заполнение табличной части абс_РаспределениеСоставаОС
		СтруктураПроверяемыхПолей = Новый Структура("ОсновноеСредство, Номенклатура");
		Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Источник.Ссылка);
		ЗаполнениеДокументов.ПроверитьЗаполнениеТабличнойЧасти(Источник, "абс_РаспределениеСоставаОС", СтруктураПроверяемыхПолей, Отказ, Заголовок);
		
		// проверим, чтобы в таб. части исключаемой номенклатуры не было услуг, наборов и комплектов
		УправлениеЗапасами.ПроверитьЧтоНетУслуг(Источник, "абс_РаспределениеСоставаОС", , Отказ, Заголовок);
		УправлениеЗапасами.ПроверитьЧтоНетНаборов(Источник, "абс_РаспределениеСоставаОС", , Отказ, Заголовок);
		ПроверитьЧтоНетКомплектов(Отказ, Заголовок, "абс_РаспределениеСоставаОС", Источник);
		
		//#Если Клиент Тогда
			Если Отказ Тогда
				Сообщить(Заголовок, СтатусСообщения.Важное);
				Сообщить("Табличная часть ""Распределение состава ОС"" скрыта. Для исправления ошибок необходимо руководствоваться
				| сообщениями об ошибках, выводимых при записи документа из формы.", СтатусСообщения.Важное);
			КонецЕсли;
		//#КонецЕсли
		
		// проверим, чтобы основные средства в таб. частях "абс_РаспределениеСоставаОС" и "ОС" совпадали
		ОСТаблицаОС = Источник.ОС.Выгрузить(, "ОсновноеСредство");
		ОСТаблицаОС.Свернуть("ОсновноеСредство");
		РаспределениеСоставаОСТаблицаОС = Источник.абс_РаспределениеСоставаОС.Выгрузить(, "ОсновноеСредство");
		РаспределениеСоставаОСТаблицаОС.Свернуть("ОсновноеСредство");
		ЗапросКонтроль = Новый Запрос;
		ЗапросКонтроль.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ЗапросКонтроль.УстановитьПараметр("ВнешняяРаспределениеСоставаОСТаблицаОС", РаспределениеСоставаОСТаблицаОС);
		ЗапросКонтроль.УстановитьПараметр("ВнешняяОСТаблицаОС", ОСТаблицаОС);
		ЗапросКонтроль.Текст = "ВЫБРАТЬ
		                       |	ВнешняяОСТаблицаОС.ОсновноеСредство
		                       |ПОМЕСТИТЬ ОСТаблицаОС
		                       |ИЗ
		                       |	&ВнешняяОСТаблицаОС КАК ВнешняяОСТаблицаОС
		                       |;
		                       |
		                       |////////////////////////////////////////////////////////////////////////////////
		                       |ВЫБРАТЬ
		                       |	ВнешняяРаспределениеСоставаОСТаблицаОС.ОсновноеСредство
		                       |ПОМЕСТИТЬ РаспределениеСоставаОСТаблицаОС
		                       |ИЗ
		                       |	&ВнешняяРаспределениеСоставаОСТаблицаОС КАК ВнешняяРаспределениеСоставаОСТаблицаОС
		                       |;
		                       |
		                       |////////////////////////////////////////////////////////////////////////////////
		                       |ВЫБРАТЬ
		                       |	ВЫБОР
		                       |		КОГДА ОСТаблицаОС.ОсновноеСредство ЕСТЬ NULL 
		                       |			ТОГДА 1
		                       |		КОГДА РаспределениеСоставаОСТаблицаОС.ОсновноеСредство ЕСТЬ NULL 
		                       |			ТОГДА 1
		                       |		ИНАЧЕ 0
		                       |	КОНЕЦ КАК КоличествоОшибок
		                       |ИЗ
		                       |	ОСТаблицаОС КАК ОСТаблицаОС
		                       |		ПОЛНОЕ СОЕДИНЕНИЕ РаспределениеСоставаОСТаблицаОС КАК РаспределениеСоставаОСТаблицаОС
		                       |		ПО ОСТаблицаОС.ОсновноеСредство = РаспределениеСоставаОСТаблицаОС.ОсновноеСредство
		                       |ИТОГИ
		                       |	СУММА(КоличествоОшибок)
		                       |ПО
		                       |	ОБЩИЕ";
		ВыборкаКонтроль = ЗапросКонтроль.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаКонтроль.Следующий() Тогда
			Если ВыборкаКонтроль.КоличествоОшибок > 0 Тогда
				Отказ = Истина;
				//#Если Клиент Тогда
					Сообщить(Заголовок, СтатусСообщения.Важное);
					Сообщить("В табличных частях ""Основные средства"" и ""Распределение состава ОС"" различаются основные средства." + Символы.ПС + "Для анализа ошибок руководствуйтесь сообщениями при записи документа из формы.");
				//#КонецЕсли
			КонецЕсли;
		КонецЕсли;
		
		// спишем все остатки по СтаромуОсновномуСредству,
		// и соберем данные по приходу на новые основные средства по табличной части абс_РаспределениеСоставаОС
		// документа, с контролем превышения прихода над расходом
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		Запрос.УстановитьПараметр("МоментВремени", Источник.МоментВремени());
		Запрос.УстановитьПараметр("СтароеОС", Источник.СтароеОсновноеСредство);
		Запрос.Текст = "ВЫБРАТЬ
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.ОсновноеСредство,
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Номенклатура,
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.ХарактеристикаНоменклатуры,
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.СерияНоменклатуры,
		               |	СУММА(абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Количество * ВЫБОР
		               |			КОГДА абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Коэффициент = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Коэффициент
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК Количество
		               |ПОМЕСТИТЬ ДанныеДокумента
		               |ИЗ
		               |	Документ.абс_РазукрупнениеОС.абс_РаспределениеСоставаОС КАК абс_РазукрупнениеОСабс_РаспределениеСоставаОС
		               |ГДЕ
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Ссылка = &Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.ОсновноеСредство,
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.Номенклатура,
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.СерияНоменклатуры,
		               |	абс_РазукрупнениеОСабс_РаспределениеСоставаОС.ХарактеристикаНоменклатуры
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	абс_СоставОСОстатки.Номенклатура,
		               |	абс_СоставОСОстатки.ХарактеристикаНоменклатуры,
		               |	абс_СоставОСОстатки.СерияНоменклатуры,
		               |	абс_СоставОСОстатки.КоличествоОстаток КАК Количество
		               |ПОМЕСТИТЬ ДанныеРегистра
		               |ИЗ
		               |	РегистрНакопления.абс_СоставОС.Остатки(&МоментВремени, ВнеоборотныйАктив = &СтароеОС) КАК абс_СоставОСОстатки
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	&СтароеОС КАК ВнеоборотныйАктив,
		               |	ДанныеРегистра.Номенклатура,
		               |	ДанныеРегистра.ХарактеристикаНоменклатуры,
		               |	ДанныеРегистра.СерияНоменклатуры,
		               |	ДанныеРегистра.Количество
		               |ИЗ
		               |	ДанныеРегистра КАК ДанныеРегистра
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеДокумента.ОсновноеСредство КАК ВнеоборотныйАктив,
		               |	ДанныеДокумента.Номенклатура,
		               |	ДанныеДокумента.ХарактеристикаНоменклатуры,
		               |	ДанныеДокумента.СерияНоменклатуры,
		               |	ДанныеДокумента.Количество КАК Количество,
		               |	ЕСТЬNULL(ДанныеРегистра.Количество, 0) КАК КоличествоОстаток
		               |ИЗ
		               |	ДанныеДокумента КАК ДанныеДокумента
		               |		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистра КАК ДанныеРегистра
		               |		ПО ДанныеДокумента.Номенклатура = ДанныеРегистра.Номенклатура
		               |			И ДанныеДокумента.ХарактеристикаНоменклатуры = ДанныеРегистра.ХарактеристикаНоменклатуры
		               |			И ДанныеДокумента.СерияНоменклатуры = ДанныеРегистра.СерияНоменклатуры";
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ТаблицаДвиженийРасход = МассивРезультатов[2].Выгрузить();
		ТаблицаДвиженийПриход = МассивРезультатов[3].Выгрузить();
		
		// проконтролируем приход - нельзя оприходовать на новые основные средства больше,
		// чем списываем со старого
		СписокСообщений = "";
		ТаблицаКонтроля = ТаблицаДвиженийПриход.Скопировать();
		ТаблицаКонтроля.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, КоличествоОстаток", "Количество");
		Для Каждого ТекСтрока Из ТаблицаКонтроля Цикл
			Если ТекСтрока.КоличествоОстаток < ТекСтрока.Количество Тогда
				СписокСообщений = СписокСообщений + "По номенклатуре " + СокрЛП(ТекСтрока.Номенклатура) + 
				", Хар-ка " + ?(ТекСтрока.ХарактеристикаНоменклатуры.Пустая(), "<...>", СокрЛП(ТекСтрока.ХарактеристикаНоменклатуры)) + 
				", Серия " + ?(ТекСтрока.СерияНоменклатуры.Пустая(), "<...>", СокрЛП(ТекСтрока.СерияНоменклатуры)) + " в составе старого ОС есть " + ТекСтрока.КоличествоОстаток + " из приходуемых на новые ОС " +
				ТекСтрока.Количество + " " + СокрЛП(ТекСтрока.Номенклатура.ЕдиницаХраненияОстатков) + " (в ед. хран. остатков)." + Символы.ПС;
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		
		//# Если Клиент Тогда
			Если СписокСообщений <> "" Тогда
				Сообщить("Проведение документа: " + СокрЛП(Источник) + ". Ошибки по включению в состав новых ОС номенклатуры.", СтатусСообщения.Важное);
				Сообщить(СписокСообщений);
			КонецЕсли;
		//# КонецЕсли
		
		Если Не Отказ Тогда
			ТаблицаДвиженийПриход.Свернуть("ВнеоборотныйАктив, Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, Количество");
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.ПолучениеУслугПоПереработке") Тогда // включение в состав объекта строительства переданных в переработку материалов
		
		// получим по табличной части "ИспользованныеМатериалы" все те, которые отражаются по статьям затрат
		// с характером затрат "Вложения во внеоборотные активы"
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПолучениеУслугПоПереработкеИспользованныеМатериалы.Номенклатура,
		               |	ПолучениеУслугПоПереработкеИспользованныеМатериалы.ХарактеристикаНоменклатуры,
		               |	ПолучениеУслугПоПереработкеИспользованныеМатериалы.ОбъектСтроительства КАК ВнеоборотныйАктив,
		               |	СУММА(ПолучениеУслугПоПереработкеИспользованныеМатериалы.Количество * ВЫБОР
		               |			КОГДА ПолучениеУслугПоПереработкеИспользованныеМатериалы.Коэффициент = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ПолучениеУслугПоПереработкеИспользованныеМатериалы.Коэффициент
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(ПолучениеУслугПоПереработкеИспользованныеМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ПолучениеУслугПоПереработкеИспользованныеМатериалы.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК Количество
		               |ИЗ
		               |	Документ.ПолучениеУслугПоПереработке.ИспользованныеМатериалы КАК ПолучениеУслугПоПереработкеИспользованныеМатериалы
		               |ГДЕ
		               |	ПолучениеУслугПоПереработкеИспользованныеМатериалы.Ссылка = &Ссылка
		               |	И ПолучениеУслугПоПереработкеИспользованныеМатериалы.СтатьяЗатрат.ХарактерЗатрат = ЗНАЧЕНИЕ(Перечисление.ХарактерЗатрат.ВложенияВоВнеоборотныеАктивы)
		               |	И ПолучениеУслугПоПереработкеИспользованныеМатериалы.ОбъектСтроительства <> ЗНАЧЕНИЕ(Справочник.ОбъектыСтроительства.ПустаяСсылка)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ПолучениеУслугПоПереработкеИспользованныеМатериалы.Номенклатура,
		               |	ПолучениеУслугПоПереработкеИспользованныеМатериалы.ХарактеристикаНоменклатуры,
		               |	ПолучениеУслугПоПереработкеИспользованныеМатериалы.ОбъектСтроительства";
		Запрос.УстановитьПараметр("Ссылка", Источник.Ссылка);
		ТаблицаДвиженийПриход = Запрос.Выполнить().Выгрузить();
		ТаблицаДвиженийПриход.Колонки.Добавить("СерияНоменклатуры");
		ТаблицаДвиженийПриход.ЗаполнитьЗначения(Справочники.СерииНоменклатуры.ПустаяСсылка(), "СерияНоменклатуры");
	
	КонецЕсли;
	
	// добавление движений
	
	Если Не Отказ Тогда
		
		СоставОС = Источник.Движения.абс_СоставОС;
		
		Если ТаблицаДвиженийРасход <> Неопределено Тогда
			Для Каждого ТекСтрока Из ТаблицаДвиженийРасход Цикл
				Если ТекСтрока.Количество <> 0 Тогда
					Движение = СоставОС.Добавить();
					ЗаполнитьЗначенияСвойств(Движение, ТекСтрока);
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Источник.Дата;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Если ТаблицаДвиженийПриход <> Неопределено Тогда
			Для Каждого ТекСтрока Из ТаблицаДвиженийПриход Цикл
				Если ТекСтрока.Количество <> 0 Тогда
					Движение = СоставОС.Добавить();
					ЗаполнитьЗначенияСвойств(Движение, ТекСтрока);
					Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
					Движение.Период = Источник.Дата;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Источник.Движения.абс_СоставОС.Записать(Истина);
		
	КонецЕсли;
	
КонецПроцедуры

// В процедуре заполняется текущий состав ОС в табличных частях документов
// МодернизацияОС, абс_ЧастичнаяЛиквидацияОС, абс_РазукрупнениеОС
//
// Параметры: 
//           ТабЧасть - табличная часть или таблица значений - заполняема табличная часть документа или таблица значений
//           МоментВремени - момент времени документа
//           МассивОС - массив - массив основных средств, для которых необходимо получить состав
//			 ДокументОбъект - документ-объект, табличная часть которого заполняется
//
Процедура ЗаполнитьТекущийСоставОС(ТабЧасть, МоментВремени, СписокОС, ДокументОбъект) Экспорт

	ТабЧасть.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени);
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.Текст = "ВЫБРАТЬ
	               |	абс_СоставОСОстатки.ВнеоборотныйАктив КАК ОсновноеСредство,
	               |	абс_СоставОСОстатки.Номенклатура,
	               |	абс_СоставОСОстатки.ХарактеристикаНоменклатуры,
	               |	абс_СоставОСОстатки.СерияНоменклатуры,
	               |	абс_СоставОСОстатки.КоличествоОстаток КАК ТекущееКоличество,
	               |	абс_СоставОСОстатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	               |	ВЫБОР
	               |		КОГДА абс_СоставОСОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент = 0
	               |			ТОГДА 1
	               |		ИНАЧЕ абс_СоставОСОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент
	               |	КОНЕЦ КАК Коэффициент
	               |ИЗ
	               |	РегистрНакопления.абс_СоставОС.Остатки(&МоментВремени, ВнеоборотныйАктив В (&СписокОС)) КАК абс_СоставОСОстатки";
				   
	ТзРезультат = Запрос.Выполнить().Выгрузить();
	
	Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.абс_РазукрупнениеОС") Тогда
		ТзРезультат.Свернуть("Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, ЕдиницаИзмерения, Коэффициент", "ТекущееКоличество");
		ТзРезультат.Колонки.ТекущееКоличество.Имя = "КоличествоВсего";
		Для Каждого ТекСтрока Из ТзРезультат Цикл
			НоваяСтрока = ТабЧасть.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока);
		КонецЦикла;
	Иначе
		ТабЧасть.Загрузить(ТзРезультат);
	КонецЕсли;
	
КонецПроцедуры

// В процедуре производится перевод таб. части "абс_РаспределениеСоставаОС" в таб. поле 
// "абс_ТПРаспределениеСоставаОС" на форме документа
//
// Параметры:
//           ДокументОбъект - ДокументОбъект.абс_РазукрупнениеОС - документ, для которого выполняется перевод
//           ФормаДокумента - форма документа "абс_РазукрупнениеОС"
//
Процедура ПеревестиТабЧастьВТабПолеРазукрупнение(ДокументОбъект, ФормаДокумента) Экспорт
	
	ТабПоле = ФормаДокумента.ЭлементыФормы.абс_ТПРаспределениеСоставаОС;
	ТабЗначТабПоля = ФормаДокумента.абс_ТПРаспределениеСоставаОС;
	
	// очистим ТабЗначТабПоля и ТабПоле и удалим колонки количество по ОС
	ТабЗначТабПоля.Очистить();
	Сч = ТабПоле.Колонки.Количество() - 1;
	Пока Сч >= 0 Цикл
		Если Лев(ТабПоле.Колонки[Сч].Имя, 5) = "КолОС" Тогда
			ТабПоле.Колонки.Удалить(Сч);
			ТабЗначТабПоля.Колонки.Удалить(Сч);
		КонецЕсли;
		Сч = Сч - 1;
	КонецЦикла;
	
	// будем вести список основных средств, колонки для которых выведены в таб. поле
	СписокВыведенныхОС = Новый СписокЗначений;
	
	СтруктураПоискаСтроки = Новый Структура("Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, ЕдиницаИзмерения, Коэффициент, КоличествоВсего");
	
	// выведем таб. часть в таб. поле
	Для Каждого ТекСтрока Из ДокументОбъект.абс_РаспределениеСоставаОС Цикл
		
		Если ТекСтрока.ОсновноеСредство.Пустая() Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяКолонкиОС = "КолОС_" + ПолучитьИмяКолонки(СокрЛП(ТекСтрока.ОсновноеСредство.УникальныйИдентификатор()));
		
		Если ТабПоле.Колонки.Найти(ИмяКолонкиОС) = Неопределено Тогда
			СоздатьКолонкуРаспределениеСоставаОСРазукрупнение(ТабЗначТабПоля, ТабПоле, ТекСтрока.ОсновноеСредство);
		КонецЕсли;
		
		Если СписокВыведенныхОС.НайтиПоЗначению(ТекСтрока.ОсновноеСредство) = Неопределено Тогда
			СписокВыведенныхОС.Добавить(ТекСтрока.ОсновноеСредство);
		КонецЕсли;
		
		// найдем строку таблицы значений ТабЗначТабПоля
		ЗаполнитьЗначенияСвойств(СтруктураПоискаСтроки, ТекСтрока);
		
		МассивСтрокТабЗначТабПоля = ТабЗначТабПоля.НайтиСтроки(СтруктураПоискаСтроки); // такая строка есть только одна
		
		Если МассивСтрокТабЗначТабПоля.Количество() = 0 Тогда
			СтрокаТабЗначТабПоля = ТабЗначТабПоля.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТабЗначТабПоля, ТекСтрока, "Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, ЕдиницаИзмерения, Коэффициент, КоличествоВсего");
		Иначе
			СтрокаТабЗначТабПоля = МассивСтрокТабЗначТабПоля[0];
		КонецЕсли;
		
		СтрокаТабЗначТабПоля[ИмяКолонкиОС] = ТекСтрока.Количество;
		
		СтрокаТабЗначТабПоля.Распределено = СтрокаТабЗначТабПоля.Распределено + ТекСтрока.Количество;
		
	КонецЦикла;
	
	// теперь добавим колонки для ОС из табличных частей ОС и РаспределениеПоКоэффициентам,
	// для которых колонок еще нет
	Для Каждого ТекСтрока Из ДокументОбъект.ОС Цикл
		Если СписокВыведенныхОС.НайтиПоЗначению(ТекСтрока.ОсновноеСредство) = Неопределено Тогда
			СоздатьКолонкуРаспределениеСоставаОСРазукрупнение(ТабЗначТабПоля, ТабПоле, ТекСтрока.ОсновноеСредство);
			СписокВыведенныхОС.Добавить(ТекСтрока.ОсновноеСредство);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ТекСтрока Из ДокументОбъект.РаспределениеПоКоэффициентам Цикл
		Если СписокВыведенныхОС.НайтиПоЗначению(ТекСтрока.НовоеОсновноеСредство) = Неопределено Тогда
			СоздатьКолонкуРаспределениеСоставаОСРазукрупнение(ТабЗначТабПоля, ТабПоле, ТекСтрока.НовоеОсновноеСредство);
			СписокВыведенныхОС.Добавить(ТекСтрока.НовоеОсновноеСредство);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// В процедуре производится перевод таб. поля "абс_ТПРаспределениеСоставаОС" на форме документа
// в таб. часть "абс_РаспределениеСоставаОС" на форме документа
//
// Параметры:
//           ДокументОбъект - ДокументОбъект.абс_РазукрупнениеОС - документ, для которого выполняется перевод
//           ФормаДокумента - форма документа "абс_РазукрупнениеОС"
//
Процедура ПеревестиТабПолеВТабЧастьРазукрупнение(ДокументОбъект, ФормаДокумента) Экспорт
	
	ТабЗначТабПоля = ФормаДокумента.абс_ТПРаспределениеСоставаОС;
	
	// сначала получим таблицу значений в том виде, в котором она будет загружена в таб. часть
	ТабЗначДляЗагрузки = ДокументОбъект.абс_РаспределениеСоставаОС.Выгрузить();
	ТабЗначДляЗагрузки.Очистить();
	
	Для Каждого ТекСтрока Из ТабЗначТабПоля Цикл
		Для Каждого ТекКолонка Из ТабЗначТабПоля.Колонки Цикл
			Если Лев(ТекКолонка.Имя, 5) <> "КолОС" Тогда
				Продолжить;
			КонецЕсли;			
			Попытка // здесь не страшно
				СтрокаУИДОС = СтрЗаменить(Сред(СокрЛП(ТекКолонка.Имя), 7), "_", "-");
				УИДОС = Новый УникальныйИдентификатор(СтрокаУИДОС);
				ОССсылка = Справочники.ОсновныеСредства.ПолучитьСсылку(УИДОС);
			Исключение
				Продолжить;
			КонецПопытки;
			
			НоваяСтрока = ТабЗначДляЗагрузки.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ТекСтрока, "Номенклатура, ХарактеристикаНоменклатуры, СерияНоменклатуры, ЕдиницаИзмерения, Коэффициент, КоличествоВсего");
			НоваяСтрока.Количество = ТекСтрока[ТекКолонка.Имя];
			НоваяСтрока.ОсновноеСредство = ОССсылка;
			
		КонецЦикла;
	КонецЦикла;
	
	ДокументОбъект.абс_РаспределениеСоставаОС.Загрузить(ТабЗначДляЗагрузки);
	
КонецПроцедуры

// В процедуре создается колонка табличного поля, переданного в параметре, для указания количества
// номенклатуры в составе переданного в параметре основного средства для документа "абс_РазукрупнениеОС"
//
// Параметры:
//			ТабЗначТабПоля - ТаблицаЗначений - таблица значений с данными табличного поля
//			ТабПоле - ТабличноеПоле - табличное поле на форме, в которое добавляется колонка
//			ОСНовое - СправочникСсылка.ОсновныеСредства - основное средство, колонка которого добавляется
//			ОССтарое - СправочникСсылка.ОсновныеСредства - основное средство, колонка которого заменяется
//
Процедура СоздатьКолонкуРаспределениеСоставаОСРазукрупнение(ТабЗначТабПоля, ТабПоле, ОСНовое = Неопределено, ОССтарое = Неопределено) Экспорт
	
	// сначала попробуем найти старую колонку, и если она есть, просто заменим в ней имя
	Если ОССтарое <> Неопределено Тогда
		
		ИмяСтаройКолонки = "КолОС_" + ПолучитьИмяКолонки(СокрЛП(ОССтарое.УникальныйИдентификатор()));
		
		СтараяКолонкаТЗ = ТабЗначТабПоля.Колонки.Найти(ИмяСтаройКолонки);
		СтараяКолонка = ТабПоле.Колонки.Найти(ИмяСтаройКолонки);
		
	КонецЕсли;
	
	Если ОСНовое <> Неопределено Тогда
		
		ИмяНовойКолонки = "КолОС_" + ПолучитьИмяКолонки(СокрЛП(ОСНовое.УникальныйИдентификатор()));	
		
		НоваяКолонкаТЗ = ТабЗначТабПоля.Колонки.Найти(ИмяНовойКолонки);
		НоваяКолонка = ТабПоле.Колонки.Найти(ИмяНовойКолонки);
		
	КонецЕсли;
	
	Если СтараяКолонка <> Неопределено И НоваяКолонка = Неопределено И ОСНовое <> Неопределено Тогда // замена старой на новую
		
		СтараяКолонка.Имя = ИмяНовойКолонки;
		СтараяКолонка.ТекстШапки = СокрЛП(ОСНовое.Наименование) + Символы.ПС + "Инв.№ " + СокрЛП(ОСНовое.Код);
		СтараяКолонкаТЗ.Имя = ИмяНовойКолонки;
		СтараяКолонкаТЗ.Заголовок = СокрЛП(ОСНовое.Наименование) + Символы.ПС + "Инв.№ " + СокрЛП(ОСНовое.Код);
		СтараяКолонка.Данные = ИмяНовойКолонки;
		
	ИначеЕсли СтараяКолонка <> Неопределено И (НоваяКолонка <> Неопределено ИЛИ ОСНовое = Неопределено)  Тогда // удаление старой колонки
		
		ТабЗначТабПоля.Колонки.Удалить(СтараяКолонкаТЗ);
		ТабПоле.Колонки.Удалить(СтараяКолонка);
		
	ИначеЕсли СтараяКолонка = Неопределено И НоваяКолонка = Неопределено И ОСНовое <> Неопределено Тогда // добавляем новую колонку
		
		ДействиеКоличествоПриИзменении = Новый Действие("абс_ТПРаспределениеСоставаОСКоличествоПриИзменении");
		
		Колонка = ТабПоле.Колонки.Добавить(ИмяНовойКолонки, СокрЛП(ОСНовое.Наименование) + Символы.ПС + "Инв.№ " + СокрЛП(ОСНовое.Код));
		КолонкаТЗ = ТабЗначТабПоля.Колонки.Добавить(ИмяНовойКолонки, Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3, ДопустимыйЗнак.Неотрицательный)), СокрЛП(ОСНовое.Наименование) + Символы.ПС + "Инв.№ " + СокрЛП(ОСНовое.Код), 100);
		Колонка.Данные = ИмяНовойКолонки;
		Колонка.ЭлементУправления.УстановитьДействие("ПриИзменении", ДействиеКоличествоПриИзменении);
		
	Иначе // ничего не делаем, для наглядности	
		
	КонецЕсли;
	
	// пересчитаем распределенные количества в таб. части
	Для Каждого ТекСтрока Из ТабЗначТабПоля Цикл
		Распределение = 0;
		Для Каждого ТекКолонка Из ТабЗначТабПоля.Колонки Цикл
			Если Лев(ТекКолонка.Имя, 5) = "КолОС" Тогда
				Распределение = Распределение + ТекСтрока[ТекКолонка.Имя];
			КонецЕсли;
		КонецЦикла;
		ТекСтрока.Распределено = Распределение;
	КонецЦикла;
	
КонецПроцедуры

//#Если Клиент Тогда

// В процедуре распределяется состав ОС на новые основные средства в документе "абс_РазукрупнениеОС"
//
// Вызывается только из формы документа
//
// Параметры:
//			ТаблицаРаспределенияСостава - таблица значений, для которой выполняется распределение
//			ТаблицаКоэффициентов - табличная часть "РаспределениеПоКоэффициентам" документа "абс_РаспределениеОС"
//			ДокументОбъект - документ-объект "абс_РазукрупнениеОС", для которого выполняется распределение
//
Процедура РаспределитьСоставОСРазукрупнение(ТаблицаРаспределенияСостава, ТаблицаКоэффициентов, ДокументОбъект) Экспорт
	
	МассивОС = Новый Массив;
	МассивОС.Добавить(ДокументОбъект.СтароеОсновноеСредство);
	
	ЗаполнитьТекущийСоставОС(ТаблицаРаспределенияСостава, ДокументОбъект.МоментВремени(), МассивОС, ДокументОбъект);
	
	// в таблице коэффициентов нет повторяющихся ОС, и сумма всех коэффициентов равна 1
	Для Каждого СтрокаРаспределения Из ТаблицаРаспределенияСостава Цикл
		ОсталосьРаспределить = СтрокаРаспределения.КоличествоВсего;
		Для Сч = 0 По ТаблицаКоэффициентов.Количество() - 1 Цикл
			ТекСтрока = ТаблицаКоэффициентов[Сч];
			ИмяКолонкиОС = "КолОС_" + ПолучитьИмяКолонки(СокрЛП(ТекСтрока.НовоеОсновноеСредство.УникальныйИдентификатор()));
			Если Сч = ТаблицаКоэффициентов.Количество() - 1 Тогда
				СтрокаРаспределения[ИмяКолонкиОС] = ОсталосьРаспределить;
				ОсталосьРаспределить = 0;
			Иначе
				СтрокаРаспределения[ИмяКолонкиОС] = СтрокаРаспределения.КоличествоВсего * ТекСтрока.Коэффициент;
				ОсталосьРаспределить = ОсталосьРаспределить - СтрокаРаспределения[ИмяКолонкиОС];
			КонецЕсли;
		КонецЦикла;
		СтрокаРаспределения.Распределено = СтрокаРаспределения.КоличествоВсего - ОсталосьРаспределить;
	КонецЦикла;
	
КонецПроцедуры

// В процедуре заполняется таблица значений табличного поля "абс_СоставОС" формы элемента 
// справочника "ОсновныеСредства" составом ОС на указанную дату. Вызывается при открытии формы.
//
// Параметры:
//			ОС - СправочникСсылка.ОсновныеСредства - основное средство, для которого получается состав
//			Таблица - таблица значений, в которую выгружаются данные по составу ОС
//			ДатаДанных - дата, на которую получаются данные
//
Процедура ПоказатьСоставОСВФормеЭлемента(ОС, Таблица, ДатаДанных) Экспорт
	
	Если Не ЗначениеЗаполнено(ДатаДанных) Тогда
		ДатаДанных = ТекущаяДата();
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МоментВремени", Новый Граница(ДатаДанных, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОсновноеСредство", ОС);
	Запрос.Текст = "ВЫБРАТЬ
	               |	абс_СоставОСОстатки.Номенклатура,
	               |	абс_СоставОСОстатки.ХарактеристикаНоменклатуры,
	               |	абс_СоставОСОстатки.СерияНоменклатуры,
	               |	абс_СоставОСОстатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
	               |	абс_СоставОСОстатки.КоличествоОстаток КАК Количество
	               |ИЗ
	               |	РегистрНакопления.абс_СоставОС.Остатки(&МоментВремени, ВнеоборотныйАктив = &ОсновноеСредство) КАК абс_СоставОСОстатки";
	Таблица = Запрос.Выполнить().Выгрузить();
	
КонецПроцедуры

//#КонецЕсли

// ЛОКАЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ МОДУЛЯ -----------------------------------------------

// В процедуре выполняется проверка на наличие в табличной части номенклатур текущих или заменяющих,
// являющихся комплектами
//
// Параметры:
//			Отказ - Булево - признак отказа от проведения документа
//			Заголовок - строка - представление документа при проведении
//          ДокументОбъект - ДокументОбъект - документ, для которого выполняется проверка
//			ИмяТабЧасти - Строка - имя табличной части документа, для которой выполняется проверка
//
Процедура ПроверитьЧтоНетКомплектов(Отказ, Заголовок, ИмяТабЧасти, ДокументОбъект)
	
	// Цикл по строкам табличной части документа.
	ПредставлениеТабличнойЧасти = ДокументОбъект.Метаданные().ТабличныеЧасти[ИмяТабЧасти].Представление();
	Для каждого СтрокаТаблицы Из ДокументОбъект[ИмяТабЧасти] Цикл
		Если СтрокаТаблицы.Номенклатура.Комплект И ЗначениеЗаполнено(СтрокаТаблицы.Номенклатура) Тогда   
			ТекстОшибки = НСтр("ru = 'В строке номер ""%НомерСтроки%"" табличной части ""%ПредставлениеТабличнойЧасти%"": в качестве номенклатуры указан набор-комплект. Наборов-комплектов здесь быть не должно!'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
			
			ТекстПоля = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДляВыдачиСообщенийПоСтрокеТЧ("СоставОС", СтрокаТаблицы.НомерСтроки, "Номенклатура");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ДокументОбъект, ТекстПоля,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Функция возвращает строку, образованную из параметра ИмяКолонки путем замены "-" на "_"
//
// Параметры:
//			ИмяКолонки - строка - имя колонки, которое необходимо преобразовать
//
Функция ПолучитьИмяКолонки(ИмяКолонки)
	
	Возврат СтрЗаменить(ИмяКолонки, "-", "_");
	
КонецФункции

// ФУНКЦИЯ ДЛЯ ЗАЩИТЫ МОДУЛЯ -----------------------------------------------

// Функция возвращает строку, наименование макета Компоненты защиты
//
// Параметры:
//			Нет
//
Функция GetUSBKeyComponentLocation()
	Перем Постфикс;
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Если СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86 тогда
		Постфикс = "Win32";
	ИначеЕсли СистемнаяИнформация.ТипПлатформы = ТипПлатформы.Windows_x86_64 тогда
		Постфикс = "Win64";
	КонецЕсли;
	
	
	Макет = Метаданные.ОбщиеМакеты.Найти("КомпонентаЗащиты_Hasp_" + Постфикс);
	Если Макет = Неопределено тогда
		ВызватьИсключение("Макет с образом компоненты защиты не найден");
	КонецЕсли;

	Возврат Макет.ПолноеИмя();
КонецФункции
