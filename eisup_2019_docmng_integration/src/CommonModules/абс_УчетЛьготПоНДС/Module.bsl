Процедура абс_ПередЗаписьюСФНумерацияСФЛьготыПоНДС(Источник, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
		
		Если НЕ ЗначениеЗаполнено(Источник.абс_ЛьготаПоНДС) Тогда
			Возврат;
		КонецЕсли;
		
		// Если номер заполнен, то не нумеруем, а записываем его в регистр
		Если НЕ ЗначениеЗаполнено(Источник.абс_НомерСФНаЛьготуПоНДС) И Источник.ЭтоНовый() Тогда
			
			СтруктураНомера = ПолучитьПоследнийНомерСФ("СчетФактураВыданный", Источник.Дата);
			
			Если не СтруктураНомера = Неопределено Тогда			
				СтруктураНомера.Номер = СтруктураНомера.Номер + 1;
				Источник.абс_НомерСФНаЛьготуПоНДС = ПолучитьНомерСФ(СтруктураНомера.Префикс, СтруктураНомера.Номер)
			Иначе	
				Префикс = СокрЛП(Источник.Организация.Префикс);
				Источник.абс_НомерСФНаЛьготуПоНДС = Префикс + ДополнитьСтрокуНулями(1, 11 - СтрДлина(Префикс)); 
			КонецЕсли;
			
		КонецЕсли;		
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.СчетФактураПолученный") Тогда
		
		Если НЕ ЗначениеЗаполнено(Источник.абс_ЛьготаПоНДС) Тогда
			Возврат;
		КонецЕсли;		
		
		// Если номер заполнен, то не нумеруем, а записываем его в регистр
 		Если НЕ ЗначениеЗаполнено(Источник.НомерВходящегоДокумента) И Источник.ЭтоНовый() Тогда
			
			СтруктураНомера = ПолучитьПоследнийНомерСФ("СчетФактураПолученный", Источник.Дата);
			
			Если не СтруктураНомера = Неопределено Тогда
				СтруктураНомера.Номер = СтруктураНомера.Номер + 1;			
				Источник.НомерВходящегоДокумента = ПолучитьНомерСФ(СтруктураНомера.Префикс, СтруктураНомера.Номер);
			Иначе	
				Префикс = СокрЛП(Источник.Организация.Префикс);
				Источник.НомерВходящегоДокумента = Префикс + ДополнитьСтрокуНулями(1, 11 - СтрДлина(Префикс)); 
			КонецЕсли;				
				
		КонецЕсли;	
		
	Иначе
		
	КонецЕсли;
	
КонецПроцедуры

Процедура абс_ПриЗаписиСФНумерацияСФЛьготыПоНДС(Источник, Отказ) Экспорт
	
	//АБС ВСТАВКА   17.11.2014 12:53:53  Шамов
	Если Источник.ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	//АБС ВСТАВКА  КОНЕЦ 
	
	ЗаписыватьНомерВРегистр = Ложь;
	
	Если ТипЗнч(Источник) = Тип("ДокументОбъект.СчетФактураВыданный") Тогда
		
		Если НЕ ЗначениеЗаполнено(Источник.абс_ЛьготаПоНДС) Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Источник.абс_НомерСФНаЛьготуПоНДС) Тогда
			
			СтруктураНомера = РазобратьНомерСФ(Источник.абс_НомерСФНаЛьготуПоНДС);
			
			ЗаписыватьНомерВРегистр = Истина;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(Источник) = Тип("ДокументОбъект.СчетФактураПолученный") Тогда
		
		Если НЕ ЗначениеЗаполнено(Источник.абс_ЛьготаПоНДС) Тогда
			Возврат;
		КонецЕсли;		
		
		Если ЗначениеЗаполнено(Источник.НомерВходящегоДокумента) Тогда
			
			СтруктураНомера = РазобратьНомерСФ(Источник.НомерВходящегоДокумента);
			
			ЗаписыватьНомерВРегистр = Истина;
		КонецЕсли;		
		
	Иначе
		
	КонецЕсли;	
	
	Если ЗаписыватьНомерВРегистр Тогда	 
		
		НаборЗаписейНомерСФНаЛьготу = РегистрыСведений.абс_НумерацияСФПоЛьготам.СоздатьНаборЗаписей();
		
		НаборЗаписейНомерСФНаЛьготу.Отбор.СФ.Установить(Источник.Ссылка);
		
		ЗаписьНомера = НаборЗаписейНомерСФНаЛьготу.Добавить();
		
		ЗаписьНомера.СФ = Источник.Ссылка;
		ЗаписьНомера.Префикс 	= СтруктураНомера.Префикс;
		ЗаписьНомера.Номер 		= СтруктураНомера.Номер;
		
		НаборЗаписейНомерСФНаЛьготу.Записать();
		
	КонецЕсли;		

КонецПроцедуры


Функция ПолучитьТекНомерСФПоРегиструЛьгот(СФСсылка) 
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_НумерацияСФПоЛьготам.СФ,
	|	абс_НумерацияСФПоЛьготам.Префикс,
	|	абс_НумерацияСФПоЛьготам.Номер
	|ИЗ
	|	РегистрСведений.абс_НумерацияСФПоЛьготам КАК абс_НумерацияСФПоЛьготам
	|ГДЕ
	|	абс_НумерацияСФПоЛьготам.СФ = &СФ");
	
	Запрос.УстановитьПараметр("СФ", СФСсылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Новый Структура("Префис,Номер", Выборка.Префикс, Выборка.Номер);
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

// Параметры: 
// 1. Вид счет-фактуры
// СчетФактураВыданный или СчетФактураПолученный - имя счета-фактуры, как оно задано в конфигураторе.
// 2. Период - год к которому относится счет фактура.
Функция ПолучитьПоследнийНомерСФ(ВидСчетФактуры, ПериодНомера, ПрефиксНомера = "")
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_НумерацияСФПоЛьготам.Префикс КАК Префикс,
	|	МАКСИМУМ(абс_НумерацияСФПоЛьготам.Номер) КАК Номер
	|ИЗ
	|	РегистрСведений.абс_НумерацияСФПоЛьготам КАК абс_НумерацияСФПоЛьготам
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &ВидСчетФактуры = ""СчетФактураВыданный""
	|				ТОГДА абс_НумерацияСФПоЛьготам.СФ ССЫЛКА Документ.СчетФактураВыданный
	|			КОГДА &ВидСчетФактуры = ""СчетФактураПолученный""
	|				ТОГДА абс_НумерацияСФПоЛьготам.СФ ССЫЛКА Документ.СчетФактураПолученный
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ
	|	И НАЧАЛОПЕРИОДА(абс_НумерацияСФПоЛьготам.СФ.Дата, ГОД) = НАЧАЛОПЕРИОДА(&ПериодНомера, ГОД)
	|	И ВЫБОР
	|			КОГДА (НЕ &ПрефиксНомера = """")
	|				ТОГДА абс_НумерацияСФПоЛьготам.Префикс = &ПрефиксНомера
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|
	|СГРУППИРОВАТЬ ПО
	|	абс_НумерацияСФПоЛьготам.Префикс
	|
	|УПОРЯДОЧИТЬ ПО
	|	Префикс УБЫВ");
	
	Запрос.УстановитьПараметр("ВидСчетФактуры", ВидСчетФактуры);
	Запрос.УстановитьПараметр("ПериодНомера", ПериодНомера);
	Запрос.УстановитьПараметр("ПрефиксНомера", ПрефиксНомера);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Новый Структура("Префикс,Номер", Выборка.Префикс, Выборка.Номер);
		
	КонецЕсли;
	
	Возврат Неопределено;	
	
КонецФункции

Функция РазобратьНомерСФ(ПолныйНомерСФ)
	
	Префикс = "";
	Номер = "";
	
	Для Н = 0 по СтрДлина(ПолныйНомерСФ) - 1 Цикл
		
		ТекСимвол = Сред(ПолныйНомерСФ, СтрДлина(ПолныйНомерСФ) - Н, 1);
		
		Если ЭтоБуква(ТекСимвол) Тогда
			
			Префикс = Лев(ПолныйНомерСФ	, СтрДлина(ПолныйНомерСФ) - Н);
			
			Попытка
				Номер 	= Число(Прав(ПолныйНомерСФ	, СтрДлина(ПолныйНомерСФ) - Н + 1))
			Исключение
				Номер = "";
			КонецПопытки;
			
			Возврат Новый Структура("Префикс, Номер", Префикс, Номер);
			
		КонецЕсли;
				
	КонецЦикла;
	
	Префикс = "";
	
	Попытка
		Номер = Число(ПолныйНомерСФ);
	Исключение
		Номер = "";
	КонецПопытки;
	
	Возврат Новый Структура("Префикс, Номер", Префикс, Номер);
			
КонецФункции

Функция ПолучитьНомерСФ(Префикс, Номер)
	
	Возврат Префикс + ДополнитьСтрокуНулями(Номер, 11 - СтрДлина(Префикс));
	
КонецФункции

Функция ДополнитьСтрокуНулями(Знач ИсходнаяСтрока, ДлинаСтроки)
	
	Для н = СтрДлина(ИсходнаяСтрока) по ДлинаСтроки Цикл
		
		ИсходнаяСтрока = "0" + ИсходнаяСтрока;
		
	КонецЦикла;
	
	Возврат ИсходнаяСтрока;
	
КонецФункции

// Возвращает Истина, если это не цифра
Функция ЭтоБуква (Символ)
	
	Код = КодСимвола(Символ);
	
	Если (Код>=48) И (Код<=57) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

	//Если (Код<=47) ИЛИ (Код>=58 И Код<=64) ИЛИ (Код>=91 И Код<=96)  ИЛИ (Код>=123 И Код<=126) Тогда
	//	Возврат Ложь;
	//Иначе
	//	Возврат Истина;
	//КонецЕсли;
	
КонецФункции

                                                                        