////////////////////////////////////////////////////////////////////////////////
// Получение классификаторов

Функция ПолучитьСписокКодовНаименованийСделки() Экспорт
	СписокКодов = Новый СписокЗначений();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_КодыНаименованияСделки.Код,
	|	абс_КодыНаименованияСделки.ПолноеНаименование
	|ИЗ
	|	Справочник.абс_КодыНаименованияСделки КАК абс_КодыНаименованияСделки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекНаименование = "" + ВыборкаДетальныеЗаписи.Код + " - " + ВыборкаДетальныеЗаписи.ПолноеНаименование;
		СписокКодов.Добавить(ВыборкаДетальныеЗаписи.Код, ТекНаименование);
	КонецЦикла;
	
	Возврат СписокКодов;
	
КонецФункции

Функция ПолучитьСоответствиеКодовСтороныСделки() Экспорт
	
	СоответствиеКодов = Новый Соответствие();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	абс_КодыСтороныСделкиСделки.Сделка КАК Сделка,
		|	абс_КодыСтороныСделкиСделки.Ссылка
		|ИЗ
		|	Справочник.абс_КодыСтороныСделки.Сделки КАК абс_КодыСтороныСделкиСделки
		|ИТОГИ ПО
		|	Сделка";
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаСделка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСделка.Следующий() Цикл
			КодНаименованияСделки = ВыборкаСделка.Сделка.Код;
			СписокКодов = Новый СписокЗначений();
			
			ВыборкаДетальныеЗаписи = ВыборкаСделка.Выбрать();
			Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
				СписокКодов.Добавить(ВыборкаДетальныеЗаписи.Ссылка.Код, "" + ВыборкаДетальныеЗаписи.Ссылка.Код + " - " + ВыборкаДетальныеЗаписи.Ссылка.ПолноеНаименование);
			КонецЦикла;
			
			СоответствиеКодов.Вставить(КодНаименованияСделки, СписокКодов);
			
		КонецЦикла;

	//}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	
	//Макет = ПолучитьОбщийМакет("КонтролируемыеСделкиСпискиКодов");
	//ОбластьМакета = Макет.ПолучитьОбласть("ТипИСтороныДоговора");
	//
	//Для Ном = 1 По ОбластьМакета.ВысотаТаблицы Цикл
	//	КодНаименованияСделки = ОбластьМакета.Область(Ном,1, Ном, 1).Текст;
	//	СписокКодов = Новый СписокЗначений();
	//	Для к = 2 по 4 Цикл
	//		Код = ОбластьМакета.Область(Ном, к*2 - 1 , Ном, к*2 - 1).Текст;
	//		Наименование = ОбластьМакета.Область(Ном, к*2, Ном, к*2).Текст;
	//		Если ЗначениеЗаполнено(Код) Тогда
	//			СписокКодов.Добавить(Код, "" + Код + " - " + Наименование);
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЦикла;
	
	Возврат СоответствиеКодов;
	
КонецФункции

Функция ПолучитьКодыУсловийПоставки() Экспорт
	
	Возврат ПолучитьСписокИзМакета("КонтролируемыеСделкиСпискиКодов", "КодУсловийПоставки");
	
КонецФункции

Функция ПолучитьКодыВидовДеятельностиФизЛиц() Экспорт
	
	СписокКодов = Новый СписокЗначений();
	
	Макет = ПолучитьОбщийМакет("КонтролируемыеСделкиСпискиКодов");
	ОбластьМакета = Макет.ПолучитьОбласть("КодВидаДеятельности");

	Для Ном = 1 По ОбластьМакета.ВысотаТаблицы Цикл
		ТекКод = ОбластьМакета.Область(Ном, 1, Ном, 1).Текст;
		ТекНаименование = ОбластьМакета.Область(Ном, 2, Ном, 2).Текст;
		СписокКодов.Добавить(ТекКод, "" + ТекКод + " - " + ТекНаименование);
	КонецЦикла;
	
	Возврат СписокКодов;
	
КонецФункции

Функция ПолучитьКодВидаДокументаПоВидуДокумента(ДокументВид) Экспорт 
	
	Если ЗначениеЗаполнено(ДокументВид) Тогда
		ПредопределенныйИмя = Справочники.ДокументыУдостоверяющиеЛичность.ПолучитьИмяПредопределенного(ДокументВид);
		Если ЗначениеЗаполнено(ПредопределенныйИмя) и СтрДлина(ПредопределенныйИмя) = 6 Тогда 
			Возврат Прав(ПредопределенныйИмя, 2);
		Иначе
			Возврат "";
		КонецЕсли;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

Функция ПолучитьКодыОпределенияЦеныСделки() Экспорт
	
	Возврат ПолучитьСписокИзМакета("КонтролируемыеСделкиСпискиКодов", "ОснованияПризнанияЦеныСделкиРыночной");
	
КонецФункции

Функция ПолучитьКодыМетодовЦенообразования() Экспорт
	
	СписокКодов = Новый СписокЗначений();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_КодыМетодаЦенообразования.Код,
	|	абс_КодыМетодаЦенообразования.ПолноеНаименование
	|ИЗ
	|	Справочник.абс_КодыМетодаЦенообразования КАК абс_КодыМетодаЦенообразования";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ТекНаименование = "" + ВыборкаДетальныеЗаписи.Код + " - " + ВыборкаДетальныеЗаписи.ПолноеНаименование;
		СписокКодов.Добавить(ВыборкаДетальныеЗаписи.Код, ТекНаименование);
	КонецЦикла;
	
	Возврат СписокКодов;
	
КонецФункции

Функция ПолучитьКодыКатегорийНалогоплательщика() Экспорт
	
	Возврат ПолучитьСписокИзМакета("КонтролируемыеСделкиСпискиКодов", "КодКатегорииНалогоплательщика");
	
КонецФункции

Функция ПолучитьКодыФормыРеорганизации() Экспорт
	
	Возврат ПолучитьСписокИзМакета("КонтролируемыеСделкиСпискиКодов", "КодРеорганизации");
	
КонецФункции

Функция ПолучитьСписокИзМакета(ИмяМакета, ИмяОбласти)
	
	СписокКодов = Новый СписокЗначений();
	
	Макет = ПолучитьОбщийМакет(ИмяМакета);
	ОбластьМакета = Макет.ПолучитьОбласть(ИмяОбласти);
	
	Для Ном = 1 По ОбластьМакета.ВысотаТаблицы Цикл
		ТекКод = ОбластьМакета.Область(Ном,1, Ном, 1).Текст;
		ТекНаименование = ОбластьМакета.Область(Ном, 2, Ном, 2).Текст;
		Если ЗначениеЗаполнено(ТекКод) Тогда
			ТекНаименование = "" + ТекКод + " - " + ТекНаименование;
		КонецЕсли;
		СписокКодов.Добавить(ТекКод, ТекНаименование);
	КонецЦикла;
	
	Возврат СписокКодов;
	
КонецФункции