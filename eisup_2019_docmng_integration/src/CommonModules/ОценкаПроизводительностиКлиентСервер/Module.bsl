
// Начать замер времени выполнения ключевой операции
//
// Параметры:
//  КодКлючевойОперации - Строка, код элемента справочника "КлючевыеОперации"
//
// Возвращаемое значение:
//  Число - время начала замера
//
Функция НачатьЗамерВремени(КлючеваяОперация) Экспорт
	
	#Если Клиент Тогда
		ВызовСКлиента = Истина;
		ПодключитьОбработчикОжидания("ЗакончитьЗамерВремениАвто", 0.1, Истина);
	#Иначе
		ВызовСКлиента = Ложь;
	#КонецЕсли
	
	ВремяНачала = ОценкаПроизводительностиВызовСервера.ЗафиксироватьВремяНачала(КлючеваяОперация, ВызовСКлиента);
	
	Возврат ВремяНачала;
	
КонецФункции

#Если Сервер Тогда
// Закончить замер времени выполнения ключевой операции
//
// Возвращаемое значение:
//  Число - время окончания замера
//
Функция ЗакончитьЗамерВремени(КлючеваяОперация = Неопределено) Экспорт
	
	Возврат ОценкаПроизводительностиВызовСервера.ЗафиксироватьВремяОкончания(КлючеваяОперация, Ложь);
	
КонецФункции
#КонецЕсли

//Вставка Попов 28.01.2014

// Начать замер времени выполнения ключевой операции
//
// Параметры:
//  КодКлючевойОперации - Строка, код элемента справочника "КлючевыеОперации"
//
// Возвращаемое значение:
//  Число - время начала замера
//
Функция абс_НачатьЗамерВремени(КлючеваяОперация, ДополнительныйПараметр = Неопределено) Экспорт
	
	#Если Клиент Тогда
		ВызовСКлиента = Истина;
		ПодключитьОбработчикОжидания("абс_ЗакончитьЗамерВремениАвто", 0.1, Истина);
	#Иначе
		ВызовСКлиента = Ложь;
	#КонецЕсли
	
	ВремяНачала = ОценкаПроизводительностиВызовСервера.абс_ЗафиксироватьВремяНачала(КлючеваяОперация, ВызовСКлиента, ДополнительныйПараметр);
	
	Возврат ВремяНачала;
	
КонецФункции

// Закончить замер времени выполнения ключевой операции
//
// Возвращаемое значение:
//  Число - время окончания замера
//
Функция абс_ЗакончитьЗамерВремени(КлючеваяОперация = Неопределено, ПричинаЗавершения = "") Экспорт
	
	Возврат ОценкаПроизводительностиВызовСервера.абс_ЗафиксироватьВремяОкончания(КлючеваяОперация, Ложь, ПричинаЗавершения);
	
КонецФункции


//\\Вставка Попов 28.01.2014