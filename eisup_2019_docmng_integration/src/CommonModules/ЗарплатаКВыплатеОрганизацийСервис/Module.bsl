///////////////////////////////////////////////////////////////
/// Методы для создания зарплаты к выплате

Процедура СоздатьНаОсновании(Основание, ПредварительныйУчетУдержаний = Неопределено) Экспорт
	
	Если Основание = Неопределено тогда
		Возврат
	КонецЕсли;
	
	Если НЕ Основание.Ссылка.Проведен Тогда
		#Если Клиент Тогда
			Предупреждение("Создавать документы на выплату зарплаты можно только по проведенному документу!");
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	Если ПравоДоступа("Добавление", Метаданные.Документы.ЗарплатаКВыплатеОрганизаций) Тогда
		Док = Документы.ЗарплатаКВыплатеОрганизаций.СоздатьДокумент();
		Если ПредварительныйУчетУдержаний = Неопределено Тогда
			Док.Заполнить(Основание.Ссылка);
		Иначе
			Док.Заполнить(Новый Структура("Ссылка, ПредварительныйУчетУдержаний", Основание.Ссылка, ПредварительныйУчетУдержаний));
		КонецЕсли;
		Док.ПолучитьФорму().Открыть();
	Иначе
		#Если Клиент Тогда
			Предупреждение("Нарушение прав доступа!");
		#КонецЕсли
	КонецЕсли;
	
КонецПроцедуры	

///////////////////////////////////////////////////////////////
/// Методы для представления зарплаты к выплате

Функция ХарактерВыплатыВРодительномПадеже(ХарактерВыплаты) Экспорт
	Если ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		Возврат "зарплаты";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс Тогда
		Возврат "планового аванса";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца Тогда
		Возврат "аванса за первую половину месяца";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам Тогда
		Возврат "пособий по больничным листам";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПоБеременностиИРодам Тогда
		Возврат "отпускных по беременности и родам";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Отпускные Тогда
		Возврат "отпускных";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Командировочные Тогда
		Возврат "командировочных";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Премии Тогда
		Возврат "премий";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении Тогда
		Возврат "сумм при увольнении";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПрочиеРазовыеНачисления Тогда
		Возврат "прочих разовых начислений";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПособияФСС Тогда
		Возврат "единовременных пособий за счет ФСС";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ВозвратНДФЛ Тогда
		Возврат "возврата НДФЛ";
	ИначеЕсли
		ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Задолженность Тогда
		Возврат "задолженности";
	ИначеЕсли ХарактерВыплаты.Пустая() Тогда
		Возврат "не указанного вида выплаты";
	КонецЕсли;

КонецФункции

Функция ПолучитьПредставлениеНастройкиРасчета(Документ) Экспорт
	
	// Проконтролируем сомнительные настройки
	Если НЕ ЗначениеЗаполнено(Документ.ПроцентВыплаты) ИЛИ Документ.ПроцентВыплаты < 0 Тогда
		ТекстОшибки = "ПроцентВыплаты "+ Документ.ПроцентВыплаты +"% ?"
	Иначе
		ТекстОшибки = ""
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстОшибки) Тогда
		
		ПредставлениеНастройки = 
			"ВНИМАНИЕ! Установлены сомнительные настройки расчета: " + 
			ТекстОшибки +
			" Проверьте настройки расчета.";
			
	Иначе
	
	// Штатная работа
	
		Если ЗначениеЗаполнено(Документ.ПроцентВыплаты) И Документ.ПроцентВыплаты<>100 Тогда
			ТекстПроцент = ""+ Документ.ПроцентВыплаты +"% "+ "от причитающихся сумм"
		Иначе
			ТекстПроцент = "всеми причитающимися суммами"
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Документ.ДнейНеВыплаты) Тогда
			ТекстЗадержка = "с компенсацией за задержку на" +" "+ Документ.ДнейНеВыплаты +" "+ ОбщегоНазначения.ФормаМножественногоЧисла("день","дня","дней", Документ.ДнейНеВыплаты)
		Иначе
			ТекстЗадержка = ""
		КонецЕсли;
		
		Если Документ.ПредварительныйУчетУдержаний Тогда
			ТекстУдержания = "с предварительным учетом удержаний"
		Иначе
			ТекстУдержания = ""
		КонецЕсли;

		Если ЗначениеЗаполнено(Документ.Округление) Тогда
			ТекстОкругление = "с округлением" +" "+ Документ.Округление;
		Иначе
			ТекстОкругление = ""
		КонецЕсли;
		
		ПредставлениеНастройки = 
			"Заполнение" +
			" "+ ТекстПроцент +
			?(ЗначениеЗаполнено(ТекстОкругление), " "+ТекстОкругление, "") +
			?(ЗначениеЗаполнено(ТекстУдержания), " "+ТекстУдержания, "") +
			?(ЗначениеЗаполнено(ТекстЗадержка), " "+ТекстЗадержка, "");
			
	КонецЕсли;

	Возврат ПредставлениеНастройки;
	
КонецФункции

///////////////////////////////////////////////////////////////
/// Методы для работы с параметрами по умолчанию

#Если Клиент Тогда
	
Процедура СохранитьНастройки(Документ) Экспорт
	
	НастройкиРасчета = СоздатьНастройки(Документ);
	СохранитьЗначение("ЗарплатаКВыплатеОрганизаций_" + Документ.ХарактерВыплаты, НастройкиРасчета);
	
КонецПроцедуры

Процедура ЗаполнитьПоНастройкам(Документ) Экспорт
	
	Если Документ.ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ВозвратНДФЛ Тогда
		НастройкиРасчета = СоздатьНастройки();
	Иначе
		НастройкиРасчета =  ВосстановитьЗначение("ЗарплатаКВыплатеОрганизаций_" + Документ.ХарактерВыплаты);
		Если НастройкиРасчета = Неопределено Тогда
			НастройкиРасчета =  СоздатьНастройки();
		КонецЕсли;
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(Документ, НастройкиРасчета);
	
КонецПроцедуры

#КонецЕсли

Функция СоздатьНастройки(Документ = Неопределено) Экспорт
	
	НастройкиРасчета = 
		Новый Структура(
			"ПроцентВыплаты,
			 |ПредварительныйУчетУдержаний,
			 |Округление",
			 100,
			 Ложь,
			 Перечисления.СпособыОкругленияЗарплатыКВыплате.ПустаяСсылка());
			 
	Если Документ <> Неопределено Тогда
		Если ЗначениеЗаполнено(Документ.ПроцентВыплаты) Тогда
			НастройкиРасчета.ПроцентВыплаты = Документ.ПроцентВыплаты
		КонецЕсли;
		Если ЗначениеЗаполнено(Документ.ПредварительныйУчетУдержаний) Тогда
			НастройкиРасчета.ПредварительныйУчетУдержаний = Документ.ПредварительныйУчетУдержаний
		КонецЕсли;
		Если ЗначениеЗаполнено(Документ.Округление) Тогда
			НастройкиРасчета.Округление = Документ.Округление
		КонецЕсли;
	КонецЕсли;
	
	Возврат НастройкиРасчета;
	
КонецФункции	

///////////////////////////////////////////////////////////////
/// Методы для расчета зарплаты к выплате

// Функция осуществляет формирование таблицы значений с коэффициентами плановых удержаний физлиц
//
// Параметр:
//   Документ - документ "Зарплата к выплате организаций"
//
Функция ПолучитьКоэффициентыПлановыхУдержаний(ФизЛица, ПериодРегистрации, Организация) Экспорт
	
	Запрос = Новый Запрос();
		
	Запрос.УстановитьПараметр("Период",				ПериодРегистрации);
	Запрос.УстановитьПараметр("ФизЛица", ФизЛица);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",ОбщегоНазначения.ГоловнаяОрганизация(Организация));

	МассивСпособовРасчета = Новый Массив;
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентом);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ИсполнительныйЛистПроцентомДоПредела);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.Процентом);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПочтовыйСбор);
	МассивСпособовРасчета.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПроцентомОтОблагаемыхЕСННачислений);
	Запрос.УстановитьПараметр("УдержанияПроцентом",	МассивСпособовРасчета);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	СУММА(ВЫБОР
	|			КОГДА ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <= &Период
	|					И ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель1Завершения
	|			ИНАЧЕ ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.Показатель1
	|		КОНЕЦ) КАК Процент
	|ИЗ
	|	РегистрСведений.ПлановыеУдержанияРаботниковОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация = &ГоловнаяОрганизация
	|				И ВидРасчета.СпособРасчета В (&УдержанияПроцентом)
	|				И Физлицо В (&ФизЛица)) КАК ПлановыеУдержанияРаботниковОрганизацийСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	ПлановыеУдержанияРаботниковОрганизацийСрезПоследних.ФизЛицо";
	
	Возврат(Запрос.Выполнить().Выгрузить());
	
КонецФункции // ПлановыеУдержания	

// Функция осуществляет формирование таблицы значений с коэффициентами НДФЛ физлиц
//
// Параметр:
//   Документ - документ "Зарплата к выплате организаций"
//
Функция ПолучитьКоэффициентыНДФЛ(ФизЛица, ПериодРегистрации) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("Период",	ПериодРегистрации);
	Запрос.УстановитьПараметр("ФизЛица", ФизЛица);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизическиеЛица.Ссылка КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА ГражданствоФизЛиц.НеЯвляетсяНалоговымРезидентомРФ
	|			ТОГДА 30
	|		ИНАЧЕ 13
	|	КОНЕЦ КАК Ставка
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ГражданствоФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
	|			ГражданствоФизЛицСрезПоследних.НеЯвляетсяНалоговымРезидентомРФ КАК НеЯвляетсяНалоговымРезидентомРФ
	|		ИЗ
	|			РегистрСведений.ГражданствоФизЛиц.СрезПоследних(&Период, Физлицо В (&ФизЛица)) КАК ГражданствоФизЛицСрезПоследних) КАК ГражданствоФизЛиц
	|		ПО (ГражданствоФизЛиц.ФизЛицо = ФизическиеЛица.Ссылка)
	|ГДЕ
	|	ФизическиеЛица.Ссылка В(&ФизЛица)";
		
	Возврат(Запрос.Выполнить().Выгрузить());
	
КонецФункции // Гражданство

// Рассчитывает "усредненную" 1/300 часть ставки рефинансирования ЦБ
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   число - коэффициент, на который следует умножать сумму выплаты
//
Функция ОпределитьПроцентКомпенсации(ДатаДокумента, ДнейНеВыплаты) Экспорт

	Если ДнейНеВыплаты = 0 Тогда
	    Возврат 0
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(РАЗНОСТЬДАТ(ПериодыИзмененияСтавки.ДатаC, ПериодыИзмененияСтавки.ДатаПо, ДЕНЬ) * ПериодыИзмененияСтавки.Размер / 300 / 100), 0) КАК ПроцентКомпенсации
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА СтавкаРефинансированияЦБ.Период > &ДатаВыплаты
	|				ТОГДА СтавкаРефинансированияЦБ.Период
	|			ИНАЧЕ &ДатаВыплаты
	|		КОНЕЦ КАК ДатаC,
	|		ЕСТЬNULL(ВЫБОР
	|				КОГДА МИНИМУМ(СледующаяДата.Период) >= &ДатаДокумента
	|					ТОГДА &ДатаДокумента
	|				ИНАЧЕ МИНИМУМ(СледующаяДата.Период)
	|			КОНЕЦ, &ДатаДокумента) КАК ДатаПо,
	|		СтавкаРефинансированияЦБ.Размер КАК Размер
	|	ИЗ
	|		РегистрСведений.СтавкаРефинансированияЦБ КАК СтавкаРефинансированияЦБ
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтавкаРефинансированияЦБ КАК СледующаяДата
	|			ПО СтавкаРефинансированияЦБ.Период < СледующаяДата.Период
	|	ГДЕ
	|		СтавкаРефинансированияЦБ.Период <= &ДатаДокумента
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СтавкаРефинансированияЦБ.Размер,
	|		СтавкаРефинансированияЦБ.Период
	|	
	|	ИМЕЮЩИЕ
	|		ЕСТЬNULL(МИНИМУМ(СледующаяДата.Период), &ДатаДокумента) >= &ДатаВыплаты) КАК ПериодыИзмененияСтавки";
	
	Запрос.УстановитьПараметр("ДатаДокумента", ДатаДокумента);
	Запрос.УстановитьПараметр("ДатаВыплаты", ДатаДокумента - 86400 * ДнейНеВыплаты);
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить()[0].ПроцентКомпенсации

КонецФункции // РассчитатьПроцентКомпенсации()

Функция СпособОкругленияТочность(СпособОкругления) Экспорт
	
	Если СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьКоп Тогда
		Возврат 0.05;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ДесятьКоп Тогда
		Возврат 0.1;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьдесятКоп Тогда
		Возврат 0.5;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.Рубль Тогда
		Возврат 1;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ДваРубля Тогда
		Возврат 2;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьРублей Тогда
		Возврат 5;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ДесятьРублей Тогда
		Возврат 10;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьдесятРублей Тогда
		Возврат 50;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.СтоРублей Тогда
		Возврат 100;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.ПятьсотРублей Тогда
		Возврат 500;
	ИначеЕсли СпособОкругления = Перечисления.СпособыОкругленияЗарплатыКВыплате.Тысяча Тогда
		Возврат 1000;
	Иначе
		Возврат 0.01;
	КонецЕсли;
	
КонецФункции

///////////////////////////////////////////////////////////////
/// Методы для проведения зарплаты к выплате

Процедура ПровестиПоХарактеруВыплаты(Документ) Экспорт
	
	ХарактерВыплаты = Документ.ХарактерВыплаты;
	Если ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс Тогда
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиПлановыйАванс(Документ);
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца Тогда
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиАвансЗаПервуюПоловинуМесяца(Документ);
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении Тогда
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиРасчет(Документ, Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении);
		
	Иначе
		
		ЗарплатаКВыплатеОрганизацийПереопределяемый.ПровестиРасчет(Документ, Перечисления.ХарактерВыплатыЗарплаты.Зарплата);
		
	КонецЕсли;

КонецПроцедуры

//////////////////////////////////////////////////////////////////
/// Методы для заполнения зарплаты к выплате по характеру выплаты

// Функция получает массив физлиц, которым необходимо выплатить плановый аванс
//
// Параметры
//  ДокументОбъект  - ДокументОбъект
//  ФизЛица   - массив физлиц или Неопределено
//                 массив физлиц - физлица имеющие лицевые счета
//
// Возвращаемое значение:
//   Массив   - массив физлиц
//
Функция ПолучитьМассивФизлицДляПлановогоАванса(ДокументОбъект, ФизЛица)

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ДатаРасчетаПлановогоАванса	= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), ДокументОбъект.Организация, "ДатаРасчетаПлановогоАванса");
	Если ДатаРасчетаПлановогоАванса = 0 Тогда
		ДатаРасчетаПлановогоАванса = 15;
	КонецЕсли;
	ДатаОкончания = КонецДня(Дата( Год(ДокументОбъект.ПериодРегистрации), Месяц(ДокументОбъект.ПериодРегистрации), ДатаРасчетаПлановогоАванса));
	
	Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(ДокументОбъект.Организация));
	Запрос.УстановитьПараметр("ПериодРегистрации", ДокументОбъект.ПериодРегистрации);
	Запрос.УстановитьПараметр("парамДата", ДатаОкончания);
	Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
	Запрос.УстановитьПараметр("Физлица", 		Физлица);
	
	// если задан отбор по подразделению, учтем его
	МассивПодразделений = Неопределено;
	Подразделение =  ДокументОбъект.ПодразделениеОрганизации;
	Если ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодразделенияОрганизаций.Ссылка
		|ИЗ
		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		|ГДЕ
		|	ПодразделенияОрганизаций.Ссылка В ИЕРАРХИИ(&Подразделение)";
		Запрос.УстановитьПараметр("Подразделение", 		Подразделение);
		МассивПодразделений = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	КонецЕсли;
	Запрос.УстановитьПараметр("ПоВсемПодразделениям", МассивПодразделений = Неопределено);	
	Запрос.УстановитьПараметр("МассивПодразделений", МассивПодразделений);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Работники.Сотрудник.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА Работники.ПериодЗавершения <= &парамДата
	|				И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА Работники.ПричинаИзмененияСостоянияЗавершения = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|						ТОГДА Работники.ПериодЗавершения
	|					ИНАЧЕ &ПериодРегистрации
	|				КОНЕЦ
	|		КОГДА Работники.ПричинаИзмененияСостояния = ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.ПриемНаРаботу)
	|			ТОГДА Работники.Период
	|		ИНАЧЕ &ПериодРегистрации
	|	КОНЕЦ КАК ДатаНачалаПриемНаРаботу,
	|	Работники.Сотрудник.Физлицо.Наименование КАК ФизлицоНаименование
	|ПОМЕСТИТЬ ВТ_СписокРаботников
	|ИЗ
	|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
	|			&парамДата,
	|			Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|				И Организация = &ГоловнаяОрганизация
	|				И (&ПоВсемФизлицам
	|					ИЛИ Сотрудник.Физлицо В (&Физлица))) КАК Работники
	|ГДЕ
	|	ВЫБОР
	|			КОГДА Работники.ПериодЗавершения <= &парамДата
	|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА Работники.ОбособленноеПодразделениеЗавершения
	|			ИНАЧЕ Работники.ОбособленноеПодразделение
	|		КОНЕЦ = &Организация
	|	И ВЫБОР
	|			КОГДА Работники.ПериодЗавершения <= &парамДата
	|					И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА Работники.ПричинаИзмененияСостоянияЗавершения
	|			ИНАЧЕ Работники.ПричинаИзмененияСостояния
	|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
	|	И (&ПоВсемПодразделениям
	|			ИЛИ ВЫБОР
	|				КОГДА Работники.ПериодЗавершения <= &парамДата
	|						И Работники.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА Работники.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ Работники.ПодразделениеОрганизации
	|			КОНЕЦ В (&МассивПодразделений))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	CписокРаботников.Физлицо КАК Физлицо,
	|	CписокРаботников.ДатаНачалаПриемНаРаботу,
	|	CписокРаботников.ФизлицоНаименование
	|ПОМЕСТИТЬ ВТ_СписокФизлиц
	|ИЗ
	|	ВТ_СписокРаботников КАК CписокРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АвансыРаботникамОрганизаций КАК Авансы
	|		ПО CписокРаботников.Физлицо = Авансы.Физлицо
	|			И (Авансы.Организация = &Организация)
	|ГДЕ
	|	Авансы.СуммаАванса > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостояниеРаботников.Сотрудник.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА СостояниеРаботников.ПериодЗавершения <= &парамДата
	|				И СостояниеРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА СостояниеРаботников.ПериодЗавершения
	|		ИНАЧЕ СостояниеРаботников.Период
	|	КОНЕЦ КАК ДатаНачалаСостояниеНеРаботает
	|ПОМЕСТИТЬ ВТ_ФизлицаКадровоеСостояние
	|ИЗ
	|	РегистрСведений.СостояниеРаботниковОрганизаций.СрезПоследних(
	|			&парамДата,
	|			Организация = &Организация
	|				И Сотрудник.Физлицо В
	|					(ВЫБРАТЬ
	|						ВТ_СписокФизлиц.Физлицо
	|					ИЗ
	|						ВТ_СписокФизлиц)) КАК СостояниеРаботников
	|ГДЕ
	|	(НЕ ВЫБОР
	|				КОГДА СостояниеРаботников.ПериодЗавершения <= &парамДата
	|						И СостояниеРаботников.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА СостояниеРаботников.СостояниеЗавершения
	|				ИНАЧЕ СостояниеРаботников.Состояние
	|			КОНЕЦ В (ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Работает), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Командировка), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.ВынужденныйПрогул), ЗНАЧЕНИЕ(Перечисление.СостоянияРаботникаОрганизации.Простой)))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОсновныеНачисления.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_Отклонения
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисления
	|ГДЕ
	|	ОсновныеНачисления.ВидВремени = ЗНАЧЕНИЕ(Перечисление.ВидыВремени.ЦелодневноеНеотработанное)
	|	И ОсновныеНачисления.ОбозначениеВТабелеУчетаРабочегоВремени В (ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоРазрешениюРаботодателя), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйОтпускПоЗаконодательству), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеоплачиваемыйДополнительныйОтпуск), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускПоБеременностиИРодам), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Болезнь), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ДополнительныйОтпуск), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.НеявкиПоНевыясненнымПричинам), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучение), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускНаОбучениеНеоплачиваемый), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОсновнойОтпуск), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыСОплатой), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.ОтпускПоУходуЗаРебенком), ЗНАЧЕНИЕ(Справочник.КлассификаторИспользованияРабочегоВремени.Прогулы))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Невыходы.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА Невыходы.ЕстьРабочиеДни = 0
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьРабочиеДни
	|ПОМЕСТИТЬ ВТ_ФизлицаЕстьНевыходы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОсновныеНачисления.ФизЛицо КАК ФизЛицо,
	|		МИНИМУМ(ВЫБОР
	|				КОГДА ОсновныеНачисления.ПериодДействияНачало = &ПериодРегистрации
	|						И ОсновныеНачисления.ПериодДействияКонец >= &парамДата
	|					ТОГДА 0
	|				ИНАЧЕ 1
	|			КОНЕЦ) КАК ЕстьРабочиеДни
	|	ИЗ
	|		РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций.ФактическийПериодДействия(
	|				ФизЛицо В
	|						(ВЫБРАТЬ
	|							ВТ_СписокФизлиц.Физлицо
	|						ИЗ
	|							ВТ_СписокФизлиц)
	|					И ОбособленноеПодразделение = &Организация
	|					И ВидРасчета В
	|						(ВЫБРАТЬ
	|							ВТ_Отклонения.Ссылка
	|						ИЗ
	|							ВТ_Отклонения)
	|					И ПериодРегистрации <= &ПериодРегистрации
	|					И ПериодДействия = &ПериодРегистрации
	|					И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК ОсновныеНачисления
	|	ГДЕ
	|		ОсновныеНачисления.ПериодДействияНачало <= &парамДата
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ОсновныеНачисления.ФизЛицо) КАК Невыходы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОтпускаПоУходуЗаРебенком.Сотрудник.Физлицо КАК Физлицо,
	|	ВЫБОР
	|		КОГДА ОтпускаПоУходуЗаРебенком.ПериодЗавершения <= &парамДата
	|				И ОтпускаПоУходуЗаРебенком.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ОтпускаПоУходуЗаРебенком.ПериодЗавершения
	|		ИНАЧЕ ОтпускаПоУходуЗаРебенком.Период
	|	КОНЕЦ КАК ДатаНачалаОтпускаПоУходу
	|ПОМЕСТИТЬ ВТ_ФизлицаОтпускПоУходу
	|ИЗ
	|	РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|			&парамДата,
	|			Организация = &ГоловнаяОрганизация
	|				И Сотрудник.Физлицо В
	|					(ВЫБРАТЬ
	|						ВТ_СписокФизлиц.Физлицо
	|					ИЗ
	|						ВТ_СписокФизлиц)) КАК ОтпускаПоУходуЗаРебенком
	|ГДЕ
	|	ВЫБОР
	|			КОГДА ОтпускаПоУходуЗаРебенком.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|					И ОтпускаПоУходуЗаРебенком.ДействиеЗавершения = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.ПустаяСсылка)
	|				ТОГДА ЛОЖЬ
	|			КОГДА ОтпускаПоУходуЗаРебенком.Действие = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|					И ОтпускаПоУходуЗаРебенком.ДействиеЗавершения <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.ПустаяСсылка)
	|					И &парамДата < ОтпускаПоУходуЗаРебенком.ПериодЗавершения
	|				ТОГДА ЛОЖЬ
	|			КОГДА ОтпускаПоУходуЗаРебенком.ДействиеЗавершения = ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить)
	|					И &парамДата >= ОтпускаПоУходуЗаРебенком.ПериодЗавершения
	|				ТОГДА ЛОЖЬ
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА ОтпускаПоУходуЗаРебенком.ПериодЗавершения <= &парамДата
	|					И ОтпускаПоУходуЗаРебенком.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ОтпускаПоУходуЗаРебенком.ВидРасчетаЗавершения
	|			ИНАЧЕ ОтпускаПоУходуЗаРебенком.ВидРасчета
	|		КОНЕЦ = ЗНАЧЕНИЕ(ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ОтпускПоУходуЗаРебенкомБезОплаты)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокФизлиц.Физлицо,
	|	ВЫБОР
	|		КОГДА ФизлицаКадровоеСостояние.ДатаНачалаСостояниеНеРаботает ЕСТЬ NULL 
	|				И ФизлицаОтпускПоУходу.ДатаНачалаОтпускаПоУходу ЕСТЬ NULL 
	|				И ВЫБОР
	|					КОГДА ФизлицаЕстьНевыходы.ЕстьРабочиеДни ЕСТЬ NULL 
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ (НЕ ФизлицаЕстьНевыходы.ЕстьРабочиеДни)
	|				КОНЕЦ
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ИзменялосьСостояние,
	|	СписокФизлиц.ФизлицоНаименование
	|ИЗ
	|	ВТ_СписокФизлиц КАК СписокФизлиц
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФизлицаОтпускПоУходу КАК ФизлицаОтпускПоУходу
	|		ПО СписокФизлиц.Физлицо = ФизлицаОтпускПоУходу.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФизлицаКадровоеСостояние КАК ФизлицаКадровоеСостояние
	|		ПО СписокФизлиц.Физлицо = ФизлицаКадровоеСостояние.Физлицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФизлицаЕстьНевыходы КАК ФизлицаЕстьНевыходы
	|		ПО СписокФизлиц.Физлицо = ФизлицаЕстьНевыходы.ФизЛицо
	|ГДЕ
	|	ЕСТЬNULL(ФизлицаЕстьНевыходы.ЕстьРабочиеДни, ИСТИНА)
	|	И ЕСТЬNULL(ФизлицаКадровоеСостояние.ДатаНачалаСостояниеНеРаботает, &парамДата) > &ПериодРегистрации
	|	И ЕСТЬNULL(ФизлицаОтпускПоУходу.ДатаНачалаОтпускаПоУходу, &парамДата) > &ПериодРегистрации";
	
	ТаблицаФизлиц = Запрос.Выполнить().Выгрузить();
	
	Отбор = Новый Структура("ИзменялосьСостояние", Истина);
	МассивСтрок = ТаблицаФизлиц.НайтиСтроки(Отбор);
	Если МассивСтрок.Количество() > 0 Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ТекстСообщения = "Внимание!
							|У этих сотрудников первая половина месяца отработана не полностью.
							|При необходимости уточните сумму планового аванса.";
		ЗаголовокСообщения = ОбработкаКомментариев.ДобавитьСообщение(ТекстСообщения,Перечисления.ВидыСообщений.ВажнаяИнформация);
		
		Для каждого СтрокаТЗ Из МассивСтрок Цикл
			ОбработкаКомментариев.ДобавитьСообщение(СтрокаТЗ.ФизлицоНаименование, Перечисления.ВидыСообщений.Информация, , ЗаголовокСообщения);
		КонецЦикла;
	КонецЕсли;		
	
	Возврат ТаблицаФизлиц.ВыгрузитьКолонку("Физлицо");

КонецФункции // ПолучитьМассивФизлицДляПлановогоАванса()

// ПолучитьЗарплатуПоХарактеруВыплаты
// по переданному объекту и списку физлиц возвращает таблицу значений для заполнения документа ЗарплатаКВыплатеОрганизаций
// Параметры:
//	Документ - документ-объект ЗарплатаКВыплатеОрганизаций
//	ФизЛица - список физлиц по которым необходимо получить данные о зарплате
// Возвращаемое значение:
//	Таблица значений
Функция ПолучитьЗарплатуПоХарактеруВыплаты(Документ, ФизЛица = Неопределено) Экспорт
	
	ХарактерВыплаты 	= Документ.ХарактерВыплаты;
	Организация			= Документ.Организация;
	Подразделение		= Документ.ПодразделениеОрганизации;
	ПериодРегистрации	= Документ.ПериодРегистрации;

	ДатаКадровая 	= КонецМесяца(Документ.ПериодРегистрации);
	
	// зарплата за первую половину месяца ("аванс")
	Если ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.АвансЗаПервуюПоловинуМесяца Тогда
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ДатаКадровая = КонецДня(ПериодРегистрации + (Цел(День(КонецМесяца(Документ.ПериодРегистрации)) / 2) - 1) * 86400);
			ФизЛица = ПолучитьФизлицаРаботниковПодразделенияНаДатуБезУволенных(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаПервуюПоловинуМесяца(Документ, ФизЛица);
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.ПлановыйАванс Тогда
		
		УчитыватьНевыходыДляПлановогоАванса	= ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Документ.Организация, "УчитыватьНевыходыДляПлановогоАванса");
		
		Если УчитыватьНевыходыДляПлановогоАванса Тогда
			
			МассивФизлиц = ПолучитьМассивФизлицДляПлановогоАванса(Документ, ФизЛица);
			
			ЗарплатаПоХарактеруВыплаты = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиПлановогоАвансаСотрудников(Документ, МассивФизлиц);
			
		Иначе
			
			Если ЗначениеЗаполнено(Подразделение) Тогда
				ФизЛица = ПолучитьФизлицаРаботниковПодразделенияНаДатуБезУволенных(Организация, Подразделение, ДатаКадровая, ФизЛица)
			КонецЕсли;
			
			ЗарплатаПоХарактеруВыплаты = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиПлановогоАванса(Документ, ФизЛица);	
			
		КонецЕсли;
		
	// зарплата за месяц	
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Зарплата Тогда
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ФизЛица = ПолучитьФизлицаСотрудниковПодразделенияНаДату(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцОкончательныйРасчет(Документ, ФизЛица);
		
	ИначеЕсли ХарактерВыплаты = Перечисления.ХарактерВыплатыЗарплаты.Задолженность Тогда 
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ФизЛица = ПолучитьФизлицаСотрудниковПодразделенияНаДату(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцЗадолженность(Документ, ФизЛица);
		
	//	выплаты по документу-основанию
	ИначеЕсли ЗарплатаКВыплатеОрганизацийПереопределяемый.ТипОснованияПоХарактеруВыплаты(ХарактерВыплаты) <> Неопределено Тогда
		
		ЗарплатаПоХарактеруВыплаты = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцПоОснованию(Документ.ДокументОснование, ФизЛица)
		
	// выплаты по характеру выплаты	
	// Перечисления.ХарактерВыплатыЗарплаты.ПоБольничнымЛистам
	// Перечисления.ХарактерВыплатыЗарплаты.ПоБеременностиИРодам
	// Перечисления.ХарактерВыплатыЗарплаты.Отпускные
	// Перечисления.ХарактерВыплатыЗарплаты.Командировочные
	// Перечисления.ХарактерВыплатыЗарплаты.РасчетПриУвольнении
	Иначе 
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			ФизЛица = ПолучитьФизлицаРаботниковПодразделенияНаДату(Организация, Подразделение, ДатаКадровая, ФизЛица)
		КонецЕсли;
		
		ЗарплатаПоХарактеруВыплаты = 
			ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьОстаткиЗарплатыЗаМесяцМежрасчет(Документ, ФизЛица);

	КонецЕсли;

	Возврат ЗарплатаПоХарактеруВыплаты;
	
КонецФункции

Функция ПолучитьФизлицаРаботниковПодразделенияНаДату(Организация, ПодразделениеОрганизации = Неопределено, Дата, ФизЛица = Неопределено)
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("Дата",						Дата);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
		Запрос.УстановитьПараметр("Физлица", Физлица);	
		
		Запрос.Текст = ПолучитьТекстЗапросаФизлицаРаботниковПодразделенияНаДату();
		
	Возврат(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Физлицо"));	
	
КонецФункции

Функция ПолучитьФизлицаСотрудниковПодразделенияНаДату(Организация, ПодразделениеОрганизации = Неопределено, Дата, ФизЛица = Неопределено)
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("Организация",		Организация);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("Дата",						Дата);
		Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
		Запрос.УстановитьПараметр("Физлица", Физлица);	
		
		Запрос.Текст = 
			ПолучитьТекстЗапросаФизлицаРаботниковПодразделенияНаДату()
		    + Символы.ПС
			+ "ОБЪЕДИНИТЬ ВСЕ"
			+ Символы.ПС +
			"ВЫБРАТЬ
			|	ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
			|ИЗ
			|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
			|ГДЕ
			|	ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала < &Дата
			|	И КОНЕЦПЕРИОДА(ДоговорНаВыполнениеРаботСФизЛицом.ДатаОкончания, МЕСЯЦ) >= &Дата
			|	И ДоговорНаВыполнениеРаботСФизЛицом.Проведен
			|	И ДоговорНаВыполнениеРаботСФизЛицом.Организация = &Организация
			|	И (&ПоВсемФизлицам
			|			ИЛИ ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо В (&Физлица))
			|	И ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации В ИЕРАРХИИ(&ПодразделениеОрганизации)";
		
	Возврат(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Физлицо"));	
	
КонецФункции

Функция ПолучитьФизлицаРаботниковПодразделенияНаДатуБезУволенных(Организация, ПодразделениеОрганизации = Неопределено, Дата, ФизЛица = Неопределено)
		
		Запрос = Новый Запрос();
		
		Запрос.УстановитьПараметр("Дата",						Дата);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация",		ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ПодразделениеОрганизации",	ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
		Запрос.УстановитьПараметр("Физлица", Физлица);	
		
		Запрос.Текст = Запрос.Текст + 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|				И Организация = &ГоловнаяОрганизация
		|				И (&ПоВсемФизлицам
		|					ИЛИ Сотрудник.Физлицо В (&Физлица))) КАК РаботникиОрганизацийСрезПоследних
		|ГДЕ
		|	ВЫБОР
		|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостоянияЗавершения
		|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПричинаИзмененияСостояния
		|		КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ПричиныИзмененияСостояния.Увольнение)
		|	И ВЫБОР
		|			КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|					И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|				ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
		|			ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		|		КОНЕЦ В ИЕРАРХИИ (&ПодразделениеОрганизации)";
		
	Возврат(Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Физлицо"));	
	
КонецФункции

Функция ПолучитьТекстЗапросаФизлицаРаботниковПодразделенияНаДату()
		
Возврат
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо КАК Физлицо,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.Период
		|	КОНЕЦ КАК Период,
		|	ВЫБОР
		|		КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &Дата
		|				И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		|			ТОГДА РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизацииЗавершения
		|		ИНАЧЕ РаботникиОрганизацийСрезПоследних.ПодразделениеОрганизации
		|	КОНЕЦ КАК Подразделение
		|ПОМЕСТИТЬ ВТПодразделенияФизлиц
		|ИЗ
		|	РегистрСведений.РаботникиОрганизаций.СрезПоследних(
		|			&Дата,
		|			Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
		|				И Организация = &ГоловнаяОрганизация
		|				И (&ПоВсемФизлицам
		|					ИЛИ Сотрудник.Физлицо В (&Физлица))) КАК РаботникиОрганизацийСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПодразделенияФизлиц.Физлицо
		|ИЗ
		|	ВТПодразделенияФизлиц КАК ПодразделенияФизлиц
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ПодразделенияФизлиц.Физлицо КАК Физлицо,
		|			МАКСИМУМ(ПодразделенияФизлиц.Период) КАК Период
		|		ИЗ
		|			ВТПодразделенияФизлиц КАК ПодразделенияФизлиц
		|		
		|		СГРУППИРОВАТЬ ПО
		|			ПодразделенияФизлиц.Физлицо) КАК ДействующиеПериодыФизЛиц
		|		ПО (ДействующиеПериодыФизЛиц.Физлицо = ПодразделенияФизлиц.Физлицо)
		|			И (ДействующиеПериодыФизЛиц.Период = ПодразделенияФизлиц.Период)
		|ГДЕ
		|	ПодразделенияФизлиц.Подразделение В ИЕРАРХИИ(&ПодразделениеОрганизации)";
		
КонецФункции

////////////////////////////////////////////////////////////////////////
/// Методы, связанные с выплатой зарплаты

////////////////////////////////////////////////////////////////////////////////
// МЕТОДЫ ПОЛУЧЕНИЯ СОСТОЯНИЯ ДОКУМЕНТОВ

#Если Клиент Тогда

// Визуализирует состояние документа (проведен, удален, выплачивается)
//
// Параметры:
//	СостояниеДокументов
//	ОформленияСтрок
//	ЯчейкаВыплаты
//
// Возвращаемое значение:
//	Таблица значений
//
Процедура ПоказатьСостояние(СостояниеДокументов, ОформленияСтрок, ИмяЯчейкиВыплаты = "Выплачивается") Экспорт
	
	Для каждого ОформлениеСтроки Из ОформленияСтрок Цикл
		
		ЯчейкаВыплаты = ОформлениеСтроки.Ячейки[ИмяЯчейкиВыплаты];	
	
		СостояниеДокумента = СостояниеДокументов.Найти(ОформлениеСтроки.ДанныеСтроки.Ссылка, "Ссылка");
		
		Если СостояниеДокумента = Неопределено Тогда
			ЯчейкаВыплаты.ОтображатьКартинку = Ложь;
		ИначеЕсли СостояниеДокумента.Выплачивается Тогда
			ЯчейкаВыплаты.Картинка = БиблиотекаКартинок.Зарплата;
			ЯчейкаВыплаты.ОтображатьКартинку = Истина
		Иначе
			ЯчейкаВыплаты.ОтображатьКартинку = Ложь;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры	

#КонецЕсли

// По переданным ссылкам на ЗарплатаКВыплате возвращает таблицу значений со ссылкой на документ и его состояние (проведен, удален, выплачивается)
//
// Параметры:
//	Ссылкы - массив документ-ссылка ЗарплатаКВыплатеОрганизаций
//
// Возвращаемое значение:
//	Таблица значений
//
Функция ПолучитьСостояние(Ссылки, УчитыватьРеглДокументы = Истина, УчитыватьУпрДокументы = Ложь) Экспорт
	
	Запрос = Новый Запрос();
	Запрос.Текст = ЗарплатаКВыплатеОрганизацийПереопределяемый.ПолучитьТекстЗапросаСостояния(УчитыватьРеглДокументы, УчитыватьУпрДокументы);
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции //ПолучитьСостояние()
