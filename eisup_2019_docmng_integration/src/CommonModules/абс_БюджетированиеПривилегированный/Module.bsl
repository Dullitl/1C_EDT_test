
Функция ПолучитьМассивДоходов()
	
	МассивСчетовДоходов = Новый Массив();
	МассивСчетовДоходов.Добавить(ПланыСчетов.Хозрасчетный.ВыручкаНеОблагаемаяЕНВД );
	МассивСчетовДоходов.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	
	Возврат МассивСчетовДоходов;
	
КонецФункции

Функция ПолучитьМассивСчетовЗатрат(ДокументДата)
	
	МассивСчетовЗатрат = Новый Массив(); 
	
	
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации);	
	
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС); 
	
	Возврат МассивСчетовЗатрат;
	
КонецФункции

Функция ПроверятьМаппингПоСчетуЗатрат(ДокументДата, СчетУчета)
	
    МассивСчетовЗатрат = Новый Массив(); 
	
	ДатаОграниченияМапингаАналитикПоЗатратам = глЗначениеПеременной("абс_ДатаКонтроляМапингаБюджетныхАналитикВПрочихДокументахПоЗатратам");	
	
	Если ЗначениеЗаполнено(ДатаОграниченияМапингаАналитикПоЗатратам) И         
		ДокументДата >= КонецДня(ДатаОграниченияМапингаАналитикПоЗатратам) Тогда   		
		МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
		МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходы);
		МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОбщехозяйственныеРасходы);
		МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.РасходыНаПродажу);
		МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ПрочиеРасходы);
		МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации);	
	КонецЕсли;
	МассивСчетовЗатрат.Добавить(ПланыСчетов.Хозрасчетный.Продажи_НДС); 
	
	Если МассивСчетовЗатрат.Найти(СчетУчета) <> Неопределено
	 Или (СчетУчета.Родитель <> ПланыСчетов.Хозрасчетный.ПустаяСсылка() И МассивСчетовЗатрат.Найти(СчетУчета.Родитель) <> Неопределено)
	 Или (СчетУчета.Родитель <> ПланыСчетов.Хозрасчетный.ПустаяСсылка() И СчетУчета.Родитель.Родитель <> ПланыСчетов.Хозрасчетный.ПустаяСсылка() И МассивСчетовЗатрат.Найти(СчетУчета.Родитель) <> Неопределено) Тогда
	     Возврат Истина;		 
	 Иначе
		 Возврат Ложь;
	КонецЕсли;
	
КонецФункции

//АБС_Стрельцов+ добавлено: 12.10.2012
//новое для ПУ: получение таблицы проектов из выгруженной в таблицу значений табличной части "Распределение по проектам" или "Товары".
//--------------------------------------------------------------
Функция ПолучитьТаблицуРаспределенияПоПроектам(ТаблицаИсточник, СтрокаПараметр = "Все") Экспорт
		
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	ВЫРАЗИТЬ(ТаблицаИсточник.Проект КАК Справочник.Проекты) 		КАК Проект,
	               |	ВЫРАЗИТЬ(ТаблицаИсточник.ДоляРаспределения КАК ЧИСЛО(15, 3)) 	КАК ДоляРаспределения
	               |ПОМЕСТИТЬ ВТ_ТаблицаИсточник
	               |ИЗ
	               |	&ТаблицаИсточник КАК ТаблицаИсточник
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТ_ТаблицаИсточник.Проект,
	               |	СУММА(ВТ_ТаблицаИсточник.ДоляРаспределения) КАК ДоляРаспределения
	               |ИЗ
	               |	ВТ_ТаблицаИсточник КАК ВТ_ТаблицаИсточник
				   |
				   |	ГДЕ
				   //+ Машута А. 02.1.2018 задача 765
				   //|	ВТ_ТаблицаИсточник.ДоляРаспределения > 0"; // сделано дабы корректно срабатывал контроль при проведении Закупочного Заказа, так как была добавлена возможность ввода отрицательных сумм в спецификации
				   |	ВТ_ТаблицаИсточник.ДоляРаспределения <> 0";
				   //- Машута А. 02.1.2018 задача 765
				   
	Если СтрокаПараметр = "Пустые" Тогда
					   
		ТекстЗапроса = ТекстЗапроса + "
										|	И
	               						|	ВТ_ТаблицаИсточник.Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)";
						
	ИначеЕсли СтрокаПараметр = "НеПустые" Тогда
						
		ТекстЗапроса = ТекстЗапроса + "
										|	И
	               						|	ВТ_ТаблицаИсточник.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)";
	КонецЕсли;
					
	ТекстЗапроса = ТекстЗапроса + "
									|
	               					|СГРУППИРОВАТЬ ПО
	               					|	ВТ_ТаблицаИсточник.Проект";
				   
	Запрос.УстановитьПараметр("ТаблицаИсточник", ТаблицаИсточник);
	Запрос.Текст = ТекстЗапроса;
	
	ТаблицаРаспределенияПроектов = Запрос.Выполнить().Выгрузить();
		
	Возврат ТаблицаРаспределенияПроектов;
	
КонецФункции
//--------------------------------------------------------------
//АБС_Стрельцов-

Процедура ПроведениеПоБюджетуПрочихДокументов(ТабДвижений, ТабПроводокБУ, Документ, Сценарий,Отказ) Экспорт
	//
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ХозрасчетныйДвиженияССубконто.СчетДт,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	//|	ХозрасчетныйДвиженияССубконто.СчетКт,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//|	ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	//|	ХозрасчетныйДвиженияССубконто.Сумма,
	//|	ВЫБОР
	//|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ЭтоЗатрата,
	//|	ВЫБОР
	//|		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
	//|			ТОГДА ИСТИНА
	//|		ИНАЧЕ ЛОЖЬ
	//|	КОНЕЦ КАК ЭтоДоход,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.Организация КАК Организация,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_ЦФУ КАК абс_ЦФУ,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_ЦФО КАК абс_ЦФО,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипКонтрагента КАК абс_ТипКонтрагента,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_КВ КАК абс_КВ,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТЭО КАК абс_ТЭО,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипСети КАК абс_ТипСети,
	//|	ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипРасхода КАК абс_ТипРасхода,
	//|	ВЫБОР
	//|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
	//|			ТОГДА ВЫБОР
	//|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	//|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	//|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	//|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	//|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	//|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	//|					ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|				КОНЕЦ
	//|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|	КОНЕЦ КАК СтатьяЗатрат,
	//|	ВЫБОР
	//|		КОГДА Маппинг.СтатьяУУ ЕСТЬ NULL 
	//|			ТОГДА ЛОЖЬ
	//|		ИНАЧЕ ИСТИНА
	//|	КОНЕЦ КАК ЕстьМапинг,
	//|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерПроводки
	//|ИЗ
	//|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	//|			,
	//|			,
	//|			Регистратор = &Документ
	//|				И (СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
	//|					ИЛИ СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов))
	//|				И (НЕ(СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОсновноеПроизводство)
	//|						И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбщепроизводственныеРасходы))),
	//|			,
	//|			) КАК ХозрасчетныйДвиженияССубконто
	//|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяУУ КАК СтатьяУУ,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяБУ КАК СтатьяБУ,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СчетЗатрат КАК СчетЗатрат,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
	//|		ИЗ
	//|			РегистрСведений.абс_СоответствиеСтатейЗатрат_БУ_УУ КАК абс_СоответствиеСтатейЗатрат_БУ_УУ
	//|		
	//|		СГРУППИРОВАТЬ ПО
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяБУ,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяУУ,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СчетЗатрат,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.НоменклатурнаяГруппа) КАК Маппинг
	//|		ПО (ВЫБОР
	//|				КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
	//|					ТОГДА ВЫБОР
	//|							КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
	//|								ТОГДА ВЫБОР
	//|										КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	//|											ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	//|										КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	//|											ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	//|										КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	//|											ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	//|										ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|									КОНЕЦ
	//|							ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|						КОНЕЦ = Маппинг.СтатьяБУ
	//|				ИНАЧЕ ЛОЖЬ
	//|			КОНЕЦ)
	//|			И (ВЫБОР
	//|				КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
	//|					ТОГДА ХозрасчетныйДвиженияССубконто.Регистратор.абс_БюджетнаяСтатья = Маппинг.СтатьяУУ
	//|				ИНАЧЕ ЛОЖЬ
	//|			КОНЕЦ)");
	
	// АБС ИЗМЕНЕНО Фролов 20120714
	// Для оптимизации проведения документов отключим запрос к проводокам
	// Проводки будем выгружать из первичного документа
	
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ВЫБОР
	//|		КОГДА Маппинг.СтатьяУУ ЕСТЬ NULL 
	//|			ТОГДА ЛОЖЬ
	//|		ИНАЧЕ ИСТИНА
	//|	КОНЕЦ КАК ЕстьМапинг,
	//|	Проводки.СчетДт,
	//|	Проводки.СубконтоДт1,
	//|	Проводки.СубконтоДт2,
	//|	Проводки.СубконтоДт3,
	//|	Проводки.СчетКт,
	//|	Проводки.СубконтоКт1,
	//|	Проводки.СубконтоКт2,
	//|	Проводки.СубконтоКт3,
	//|	Проводки.Сумма,
	//|	Проводки.ЭтоЗатрата,
	//|	Проводки.ЭтоДоход,
	//|	Проводки.Организация,
	//|	Проводки.абс_ЦФУ,
	//|	Проводки.абс_ЦФО,
	//|	Проводки.абс_БюджетнаяСтатья,
	//|	Проводки.абс_ТипКонтрагента,
	//|	Проводки.абс_КВ,
	//|	Проводки.абс_ТЭО,
	//|	Проводки.абс_ТипСети,
	//|	Проводки.абс_ТипРасхода,
	//|	Проводки.СтатьяЗатрат,
	//|	Проводки.НГ,
	//|	Проводки.НомерПроводки
	//|ИЗ
	//|	(ВЫБРАТЬ
	//|		ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
	//|		ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	//|		ХозрасчетныйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2,
	//|		ХозрасчетныйДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3,
	//|		ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
	//|		ХозрасчетныйДвиженияССубконто.СубконтоКт1 КАК СубконтоКт1,
	//|		ХозрасчетныйДвиженияССубконто.СубконтоКт2 КАК СубконтоКт2,
	//|		ХозрасчетныйДвиженияССубконто.СубконтоКт3 КАК СубконтоКт3,
	//|		ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
	//|		ВЫБОР
	//|			КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В (&МассивСчетовЗатрат)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетДт.Родитель В (&МассивСчетовЗатрат)
	//|						И ХозрасчетныйДвиженияССубконто.СчетДт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетДт.Родитель.Родитель В (&МассивСчетовЗатрат)
	//|						И ХозрасчетныйДвиженияССубконто.СчетДт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|				ТОГДА ИСТИНА
	//|			ИНАЧЕ ЛОЖЬ
	//|		КОНЕЦ КАК ЭтоЗатрата,
	//|		ВЫБОР
	//|			КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В (&МассивСчетовДоходов)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетКт.Родитель В (&МассивСчетовДоходов)
	//|						И ХозрасчетныйДвиженияССубконто.СчетКт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетКт.Родитель.Родитель В (&МассивСчетовДоходов)
	//|						И ХозрасчетныйДвиженияССубконто.СчетКт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|				ТОГДА ИСТИНА
	//|			ИНАЧЕ ЛОЖЬ
	//|		КОНЕЦ КАК ЭтоДоход,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.Организация КАК Организация,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ЦФУ КАК абс_ЦФУ,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ЦФО КАК абс_ЦФО,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипКонтрагента КАК абс_ТипКонтрагента,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_КВ КАК абс_КВ,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТЭО КАК абс_ТЭО,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипСети КАК абс_ТипСети,
	//|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипРасхода КАК абс_ТипРасхода,
	//|		ВЫБОР
	//|			КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В (&МассивСчетовЗатрат)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетДт.Родитель В (&МассивСчетовЗатрат)
	//|						И ХозрасчетныйДвиженияССубконто.СчетДт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетДт.Родитель.Родитель В (&МассивСчетовЗатрат)
	//|						И ХозрасчетныйДвиженияССубконто.СчетДт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|				ТОГДА ВЫБОР
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
	//|								ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
	//|								ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
	//|								ИЛИ ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.ПрочиеДоходыИРасходы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	//|						ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|					КОНЕЦ
	//|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|		КОНЕЦ КАК СтатьяЗатрат,
	//|		ВЫБОР
	//|			КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В (&МассивСчетовЗатрат)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетДт.Родитель В (&МассивСчетовЗатрат)
	//|						И ХозрасчетныйДвиженияССубконто.СчетДт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетДт.Родитель.Родитель В (&МассивСчетовЗатрат)
	//|						И ХозрасчетныйДвиженияССубконто.СчетДт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|				ТОГДА ВЫБОР
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
	//|						ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|					КОНЕЦ
	//|			КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В (&МассивСчетовДоходов)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетКт.Родитель В (&МассивСчетовДоходов)
	//|						И ХозрасчетныйДвиженияССубконто.СчетКт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|					ИЛИ ХозрасчетныйДвиженияССубконто.СчетКт.Родитель.Родитель В (&МассивСчетовДоходов)
	//|						И ХозрасчетныйДвиженияССубконто.СчетКт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|				ТОГДА ВЫБОР
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
	//|						КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|							ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
	//|						ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|					КОНЕЦ
	//|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	//|		КОНЕЦ КАК НГ,
	//|		ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерПроводки
	//|	ИЗ
	//|		РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	//|				,
	//|				,
	//|				Регистратор = &Документ
	//|					И (СчетДт В (&МассивСчетовЗатрат)
	//|						ИЛИ СчетДт.Родитель В (&МассивСчетовЗатрат)
	//|							И СчетДт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|						ИЛИ СчетДт.Родитель.Родитель В (&МассивСчетовЗатрат)
	//|							И СчетДт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|						ИЛИ (СчетКт В (&МассивСчетовДоходов)
	//|							ИЛИ СчетКт.Родитель В (&МассивСчетовДоходов)
	//|								И СчетКт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|							ИЛИ СчетКт.Родитель.Родитель В (&МассивСчетовДоходов)
	//|								И СчетКт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))),
	//|				,
	//|				) КАК ХозрасчетныйДвиженияССубконто) КАК Проводки
	//|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяУУ КАК СтатьяУУ,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СчетЗатрат КАК СчетЗатрат,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.ЦФУ КАК ЦФУ
	//|		ИЗ
	//|			РегистрСведений.абс_СоответствиеСтатейЗатрат_БУ_УУ КАК абс_СоответствиеСтатейЗатрат_БУ_УУ
	//|		
	//|		СГРУППИРОВАТЬ ПО
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяУУ,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.СчетЗатрат,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.НоменклатурнаяГруппа,
	//|			абс_СоответствиеСтатейЗатрат_БУ_УУ.ЦФУ) КАК Маппинг
	//|		ПО Проводки.абс_БюджетнаяСтатья = Маппинг.СтатьяУУ
	//|			И (ВЫБОР
	//|				КОГДА Проводки.ЭтоЗатрата
	//|					ТОГДА Проводки.СчетДт = Маппинг.СчетЗатрат
	//|							ИЛИ Проводки.СчетДт.Родитель = Маппинг.СчетЗатрат
	//|								И Проводки.СчетДт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|							ИЛИ Проводки.СчетДт.Родитель.Родитель = Маппинг.СчетЗатрат
	//|								И Проводки.СчетДт.Родитель.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|				КОГДА Проводки.ЭтоДоход
	//|					ТОГДА Проводки.СчетКт = Маппинг.СчетЗатрат
	//|							ИЛИ Проводки.СчетКт.Родитель = Маппинг.СчетЗатрат
	//|								И Проводки.СчетКт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|							ИЛИ Проводки.СчетКт.Родитель.Родитель = Маппинг.СчетЗатрат
	//|								И Проводки.СчетКт.Родитель <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	//|				ИНАЧЕ ЛОЖЬ
	//|			КОНЕЦ)
	//|			И Проводки.абс_ЦФУ = Маппинг.ЦФУ
	//|			И (ВЫБОР
	//|				КОГДА (НЕ Проводки.НГ = НЕОПРЕДЕЛЕНО)
	//|					ТОГДА ВЫБОР
	//|							КОГДА Маппинг.НоменклатурнаяГруппа.ЭтоГруппа
	//|								ТОГДА Проводки.НГ.Родитель = Маппинг.НоменклатурнаяГруппа
	//|										ИЛИ Проводки.НГ.Родитель.Родитель = Маппинг.НоменклатурнаяГруппа
	//|										ИЛИ Проводки.НГ.Родитель.Родитель.Родитель = Маппинг.НоменклатурнаяГруппа
	//|							ИНАЧЕ Проводки.НГ = Маппинг.НоменклатурнаяГруппа
	//|						КОНЕЦ
	//|			КОНЕЦ)");	
	
	
	// АБС ИЗМЕНЕНО Фролов 20120714
	// Для увеличения производительности отключим режим маппинга
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ТабПроводокБУ.Регистратор КАК Регистратор,
	|	ТабПроводокБУ.СчетКт КАК СчетКт,
	|	ТабПроводокБУ.СубконтоКт1 КАК СубконтоКт1,
	|	ТабПроводокБУ.СубконтоКт2 КАК СубконтоКт2,
	|	ТабПроводокБУ.СубконтоКт3 КАК СубконтоКт3,
	|	ТабПроводокБУ.СчетДт КАК СчетДт,
	|	ТабПроводокБУ.СубконтоДт1 КАК СубконтоДт1,
	|	ТабПроводокБУ.СубконтоДт2 КАК СубконтоДт2,
	|	ТабПроводокБУ.СубконтоДт3 КАК СубконтоДт3,
	|	ТабПроводокБУ.Сумма КАК Сумма,
	|	ТабПроводокБУ.Организация КАК Организация,
	|	ВЫБОР
	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоЗатрата,
	|	ВЫБОР
	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоДоход,
	|	&абс_ЦФУ КАК абс_ЦФУ,
	|	&абс_ЦФО КАК абс_ЦФО,
	|	&абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
	|	&абс_ТипКонтрагента КАК абс_ТипКонтрагента,
	|	&абс_КВ КАК абс_КВ,
	|	&абс_ТЭО КАК абс_ТЭО,
	|	&абс_ТипСети КАК абс_ТипСети,
	|	&абс_ТипРасхода КАК абс_ТипРасхода,
	|	ЛОЖЬ КАК ЕстьМаппинг
	|ПОМЕСТИТЬ ВТПроводоки
	|ИЗ
	|	&ТабПроводокБУ КАК ТабПроводокБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПроводоки.Регистратор,
	|	ВТПроводоки.СчетКт,
	|	ВТПроводоки.СубконтоКт1,
	|	ВТПроводоки.СубконтоКт2,
	|	ВТПроводоки.СубконтоКт3,
	|	ВТПроводоки.СчетДт,
	|	ВТПроводоки.СубконтоДт1,
	|	ВТПроводоки.СубконтоДт2,
	|	ВТПроводоки.СубконтоДт3,
	|	ВТПроводоки.Сумма,
	|	ВТПроводоки.Организация,
	|	ВТПроводоки.ЭтоЗатрата,
	|	ВТПроводоки.ЭтоДоход,
	|	ВТПроводоки.абс_ЦФУ,
	|	ВТПроводоки.абс_ЦФО,
	|	ВТПроводоки.абс_БюджетнаяСтатья,
	|	ВТПроводоки.абс_ТипКонтрагента,
	|	ВТПроводоки.абс_КВ,
	|	ВТПроводоки.абс_ТЭО,
	|	ВТПроводоки.абс_ТипСети,
	|	ВТПроводоки.абс_ТипРасхода,
	|	ВТПроводоки.ЕстьМаппинг
	|ИЗ
	|	ВТПроводоки КАК ВТПроводоки
	|ГДЕ
	|	(ВТПроводоки.ЭтоЗатрата
	|			ИЛИ ВТПроводоки.ЭтоДоход)");	
	
	//АБС Коломиец-
	
    Запрос.УстановитьПараметр("МассивСчетовЗатрат"		, ПолучитьМассивСчетовЗатрат(Документ.Дата));  
	Запрос.УстановитьПараметр("МассивСчетовДоходов"		, ПолучитьМассивДоходов());	
	Запрос.УстановитьПараметр("ТабПроводокБУ"			, ТабПроводокБУ);
	
	Запрос.УстановитьПараметр("абс_ЦФУ"					, Документ.абс_ЦФУ);
	Запрос.УстановитьПараметр("абс_ЦФО"					, Документ.абс_ЦФО);
	Запрос.УстановитьПараметр("абс_БюджетнаяСтатья"		, Документ.абс_БюджетнаяСтатья);
	Запрос.УстановитьПараметр("абс_ТипКонтрагента"		, Документ.абс_ТипКонтрагента);
	Запрос.УстановитьПараметр("абс_КВ"					, Документ.абс_КВ);
	Запрос.УстановитьПараметр("абс_ТЭО"					, Документ.абс_ТЭО);
	Запрос.УстановитьПараметр("абс_ТипСети"				, Документ.абс_ТипСети);
	Запрос.УстановитьПараметр("абс_ТипРасхода"			, Документ.абс_ТипРасхода);
	
	РезультатЗапроса = Запрос.Выполнить();	
	
	ПроводкиДляКонтроля = РезультатЗапроса.Выгрузить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		ПроверитьАналитикиПрочихТиповБюджетныхДокументов(Документ, Отказ, ПроводкиДляКонтроля);
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ЕстьКонтрагент = (Документ.Метаданные().Реквизиты.Найти("Контрагент")<>Неопределено );
	 
 	//АБС НАЧАЛО Задача №08759
 	ЕстьДоговорКонтрагента = (Документ.Метаданные().Реквизиты.Найти("ДоговорКонтрагента")<>Неопределено);
 	//\\АБС КОНЕЦ Задача №08759
	
	//АБС_Стрельцов+ добавлено: 11.10.2012
	//------------------------------------
	ТЧ_РаспределениеПоПроектам = Неопределено;
	Если Документ.Метаданные().ТабличныеЧасти.Найти("абс_РаспределениеПоПроектам") <> Неопределено Тогда
		ТЧ_РаспределениеПоПроектам = Документ.абс_РаспределениеПоПроектам.Выгрузить();                   //создаем таблицу значений
	ИначеЕсли Документ.Метаданные().ТабличныеЧасти.Найти("РаспределениеПоПроектам") <> Неопределено Тогда
		ТЧ_РаспределениеПоПроектам = Документ.РаспределениеПоПроектам.Выгрузить();                       //создаем таблицу значений
	КонецЕСли;
	//------------------------------------
	//АБС_Стрельцов-
	
	//АБС_Стрельцов+ добавлено: 11.10.2012
	//------------------------------------
	МассивСумм = Неопределено;
	Если ТЧ_РаспределениеПоПроектам <> Неопределено Тогда
		
		МассивДолейТЧ = ТЧ_РаспределениеПоПроектам.ВыгрузитьКолонку("ДоляРаспределения");
		
		МассивИтогоСумм = ttk_ОбщегоНазначения.РаспределитьПропорционально(ПроводкиДляКонтроля.Итог("Сумма"), МассивДолейТЧ, , Истина);
	КонецЕсли;
	
	Если ТЧ_РаспределениеПоПроектам <> Неопределено И МассивИтогоСумм <> Неопределено Тогда
				
		Пока Выборка.Следующий() Цикл
			
			МассивСумм = ttk_ОбщегоНазначения.РаспределитьПропорционально(Выборка.Сумма, МассивДолейТЧ, , Истина);
			
			ТЧ_РаспределениеПоПроектам.ЗагрузитьКолонку(МассивСумм, "ДоляРаспределения");
			Если МассивСумм = Неопределено Тогда
				Продолжить;
			КонецЕСли;
			      
			Для каждого СтрокаТЧ Из ТЧ_РаспределениеПоПроектам Цикл
				
				Если Выборка.ЭтоЗатрата Тогда
					
					Движение = ТабДвижений.Добавить();
					Движение.Период = Документ.Дата;
					
					Движение.Сценарий 			= Сценарий;
					Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
					
					Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
					Движение.ЦФО 				= Выборка.абс_ЦФО;
					Движение.Организация 		= Выборка.Организация;
					Движение.СтатьяОборотов 	= Выборка.абс_БюджетнаяСтатья;
					Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
					Если ЕстьКонтрагент Тогда
						Движение.Контрагент         = Документ.Контрагент;
						Если Не ЗначениеЗаполнено(Выборка.абс_ТипКонтрагента) Тогда
							Движение.абс_ТипКонтрагента = Документ.Контрагент.абс_ТипыКонтрагентов;
						КонецЕсли;
						
					КонецЕсли;
					Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
					Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
					Движение.абс_КВ 			= Выборка.абс_КВ;
					Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
					
					//АБС НАЧАЛО Задача №08759
					//Движение.Проект = Документ.Проект;
					Движение.ДоговорКонтрагента  = ?(ЕстьДоговорКонтрагента,Документ.ДоговорКонтрагента,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
					//\\АБС КОНЕЦ Задача №08759
					
					Движение.Проект 			= СтрокаТЧ.Проект;
					Движение.ВалютнаяСумма 		= СтрокаТЧ.ДоляРаспределения;
					Движение.СуммаУпр 			= СтрокаТЧ.ДоляРаспределения;
					Движение.СуммаСценария 		= СтрокаТЧ.ДоляРаспределения;
					
				ИначеЕсли Выборка.ЭтоДоход Тогда
					
					Движение = ТабДвижений.Добавить();
					Движение.Период = Документ.Дата;
					
					Движение.Сценарий 			= Сценарий;
					Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
					
					Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
					Движение.ЦФО 				= Выборка.абс_ЦФО;
					Движение.Организация 		= Выборка.Организация;
					Движение.СтатьяОборотов 	= Выборка.абс_БюджетнаяСтатья;
					Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
					Если ЕстьКонтрагент Тогда
						Движение.Контрагент         = Документ.Контрагент;
					КонецЕсли;
					
					Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
					Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
					Движение.абс_КВ 			= Выборка.абс_КВ;
					Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
					
					//АБС НАЧАЛО Задача №08759
					//Движение.Проект = Документ.Проект;
					Движение.ДоговорКонтрагента = ?(ЕстьДоговорКонтрагента,Документ.ДоговорКонтрагента,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
					//\\АБС КОНЕЦ Задача №08759
					
					Движение.Проект 			= СтрокаТЧ.Проект;
					Движение.ВалютнаяСумма 		= СтрокаТЧ.ДоляРаспределения;
					Движение.СуммаУпр 			= СтрокаТЧ.ДоляРаспределения;
					Движение.СуммаСценария 		= СтрокаТЧ.ДоляРаспределения;
					
				Иначе
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
			
	Иначе
		Пока Выборка.Следующий() Цикл
			
			Если Выборка.ЭтоЗатрата Тогда
				
				Движение = ТабДвижений.Добавить();
				Движение.Период = Документ.Дата;
				
				Движение.Сценарий 			= Сценарий;
				Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
				
				Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
				Движение.ЦФО 				= Выборка.абс_ЦФО;
				Движение.Организация 		= Выборка.Организация;
				Движение.СтатьяОборотов 	= Выборка.абс_БюджетнаяСтатья;
				Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
				Если ЕстьКонтрагент Тогда
					Движение.Контрагент         = Документ.Контрагент;
					Если Не ЗначениеЗаполнено(Выборка.абс_ТипКонтрагента) Тогда
						Движение.абс_ТипКонтрагента = Документ.Контрагент.абс_ТипыКонтрагентов;
					КонецЕсли;
					
				КонецЕсли;
				Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
				Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
				Движение.абс_КВ 			= Выборка.абс_КВ;
				Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
				
				//АБС НАЧАЛО Задача №08759
	            Движение.Проект = Документ.Проект;
				Движение.ДоговорКонтрагента     = ?(ЕстьДоговорКонтрагента,Документ.ДоговорКонтрагента,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
				//\\АБС КОНЕЦ Задача №08759
					
				Движение.ВалютнаяСумма 		= Выборка.Сумма;
				Движение.СуммаУпр 			= Выборка.Сумма;
				Движение.СуммаСценария 		= Выборка.Сумма;
							
			ИначеЕсли Выборка.ЭтоДоход Тогда
				
				Движение = ТабДвижений.Добавить();
				Движение.Период = Документ.Дата;
				
				Движение.Сценарий 			= Сценарий;
				Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
				
				Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
				Движение.ЦФО 				= Выборка.абс_ЦФО;
				Движение.Организация 		= Выборка.Организация;
				Движение.СтатьяОборотов 	= Выборка.абс_БюджетнаяСтатья;
				Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
				Если ЕстьКонтрагент Тогда
					Движение.Контрагент         = Документ.Контрагент;
				КонецЕсли;
				
				Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
				Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
				Движение.абс_КВ 			= Выборка.абс_КВ;
				Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
				
				//АБС НАЧАЛО Задача №08759
	            Движение.Проект     = Документ.Проект;
	   			Движение.ДоговорКонтрагента     = ?(ЕстьДоговорКонтрагента,Документ.ДоговорКонтрагента,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	   			//\\АБС КОНЕЦ Задача №08759 
				
				Движение.ВалютнаяСумма 		= Выборка.Сумма;
				Движение.СуммаУпр 			= Выборка.Сумма;
				Движение.СуммаСценария 		= Выборка.Сумма;
				
			Иначе
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕСли;
	
КонецПроцедуры

// +++ввв 27.06.2017 г.
// +++ввв 07.09.2016 г.
Процедура ПроведениеПоБюджетуОтчетКомиссионераОПродажах(ТабДвижений, Документ, Сценарий,Отказ) Экспорт
//	Запрос = Новый Запрос(
//	"ВЫБРАТЬ
//	|	ТабПроводокБУ.Регистратор КАК Регистратор,
//	|	ТабПроводокБУ.СчетКт КАК СчетКт,
//	|	ТабПроводокБУ.СубконтоКт1 КАК СубконтоКт1,
//	|	ТабПроводокБУ.СубконтоКт2 КАК СубконтоКт2,
//	|	ТабПроводокБУ.СубконтоКт3 КАК СубконтоКт3,
//	|	ТабПроводокБУ.СчетДт КАК СчетДт,
//	|	ТабПроводокБУ.СубконтоДт1 КАК СубконтоДт1,
//	|	ТабПроводокБУ.СубконтоДт2 КАК СубконтоДт2,
//	|	ТабПроводокБУ.СубконтоДт3 КАК СубконтоДт3,
//	|	ТабПроводокБУ.Сумма КАК Сумма,
//	|	ТабПроводокБУ.Организация КАК Организация
//	|ПОМЕСТИТЬ ВТПроводок_Пром
//	|ИЗ
//	|	&ТабПроводокБУ КАК ТабПроводокБУ
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	ТабПроводокБУ.Регистратор КАК Регистратор,
//	|	ТабПроводокБУ.СчетКт КАК СчетКт,
//	|	ТабПроводокБУ.СубконтоКт1 КАК СубконтоКт1,
//	|	ТабПроводокБУ.СубконтоКт2 КАК СубконтоКт2,
//	|	ТабПроводокБУ.СубконтоКт3 КАК СубконтоКт3,
//	|	ТабПроводокБУ.СчетДт КАК СчетДт,
//	|	ТабПроводокБУ.СубконтоДт1 КАК СубконтоДт1,
//	|	ТабПроводокБУ.СубконтоДт2 КАК СубконтоДт2,
//	|	ТабПроводокБУ.СубконтоДт3 КАК СубконтоДт3,
//	|	ТабПроводокБУ.Сумма КАК Сумма,
//	|	ТабПроводокБУ.Организация КАК Организация,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА &Контрагент
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТабПроводокБУ.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт1 КАК Справочник.Контрагенты)
//	|					КОГДА ТабПроводокБУ.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт2 КАК Справочник.Контрагенты)
//	|					КОГДА ТабПроводокБУ.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт3 КАК Справочник.Контрагенты)
//	|					ИНАЧЕ &Контрагент
//	|				КОНЕЦ
//	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
//	|	КОНЕЦ КАК Контрагент,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА &Договор
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТабПроводокБУ.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт1 КАК Справочник.ДоговорыКонтрагентов)
//	|					КОГДА ТабПроводокБУ.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)
//	|					КОГДА ТабПроводокБУ.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт3 КАК Справочник.ДоговорыКонтрагентов)
//	|					ИНАЧЕ &Договор
//	|				КОНЕЦ
//	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
//	|	КОНЕЦ КАК ДоговорКонтрагента,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА ИСТИНА
//	|		ИНАЧЕ ЛОЖЬ
//	|	КОНЕЦ КАК ЭтоЗатрата,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ИСТИНА
//	|		ИНАЧЕ ЛОЖЬ
//	|	КОНЕЦ КАК ЭтоДоход,
//	|	&абс_ЦФУ КАК абс_ЦФУ,
//	|	&абс_ЦФО КАК абс_ЦФО,
//	|	&абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА &абс_ТипКонтрагента
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТабПроводокБУ.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт1 КАК Справочник.Контрагенты).абс_ТипыКонтрагентов
//	|					КОГДА ТабПроводокБУ.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт2 КАК Справочник.Контрагенты).абс_ТипыКонтрагентов
//	|					КОГДА ТабПроводокБУ.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоДт3 КАК Справочник.Контрагенты).абс_ТипыКонтрагентов
//	|					ИНАЧЕ &абс_ТипКонтрагента
//	|				КОНЕЦ
//	|		ИНАЧЕ &абс_ТипКонтрагента
//	|	КОНЕЦ КАК абс_ТипКонтрагента,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА NULL
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоКт1) = &ТипПоиск1
//	|						ТОГДА ТабПроводокБУ.СубконтоКт1
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоКт2) = &ТипПоиск1
//	|						ТОГДА ТабПроводокБУ.СубконтоКт2
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоКт3) = &ТипПоиск1
//	|						ТОГДА ТабПроводокБУ.СубконтоКт3
//	|					ИНАЧЕ &абс_ТипКонтрагента
//	|				КОНЕЦ
//	|		ИНАЧЕ NULL
//	|	КОНЕЦ КАК Поиск1,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА NULL
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоКт1) = &ТипПоиск2
//	|						ТОГДА ТабПроводокБУ.СубконтоКт1
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоКт2) = &ТипПоиск2
//	|						ТОГДА ТабПроводокБУ.СубконтоКт2
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоКт3) = &ТипПоиск2
//	|						ТОГДА ТабПроводокБУ.СубконтоКт3
//	|					ИНАЧЕ &абс_ТипКонтрагента
//	|				КОНЕЦ
//	|		ИНАЧЕ NULL
//	|	КОНЕЦ КАК Поиск2,
//	|	&абс_КВ КАК абс_КВ,
//	|	&абс_ТЭО КАК абс_ТЭО,
//	|	&абс_ТипСети КАК абс_ТипСети,
//	|	&абс_ТипРасхода КАК абс_ТипРасхода
//	|ПОМЕСТИТЬ ВТПроводоки
//	|ИЗ
//	|	ВТПроводок_Пром КАК ТабПроводокБУ
//	|ГДЕ
//	|	ТабПроводокБУ.Сумма > 0
//	|
//	|ОБЪЕДИНИТЬ
//	|
//	|ВЫБРАТЬ
//	|	ТабПроводокБУ.Регистратор,
//	|	ТабПроводокБУ.СчетДт,
//	|	ТабПроводокБУ.СубконтоДт1,
//	|	ТабПроводокБУ.СубконтоДт2,
//	|	ТабПроводокБУ.СубконтоДт3,
//	|	ТабПроводокБУ.СчетКт,
//	|	ТабПроводокБУ.СубконтоКт1,
//	|	ТабПроводокБУ.СубконтоКт2,
//	|	ТабПроводокБУ.СубконтоКт3,
//	|	-ТабПроводокБУ.Сумма,
//	|	ТабПроводокБУ.Организация,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА &Контрагент
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТабПроводокБУ.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт1 КАК Справочник.Контрагенты)
//	|					КОГДА ТабПроводокБУ.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт2 КАК Справочник.Контрагенты)
//	|					КОГДА ТабПроводокБУ.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт3 КАК Справочник.Контрагенты)
//	|					ИНАЧЕ &Контрагент
//	|				КОНЕЦ
//	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
//	|	КОНЕЦ,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА &Договор
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТабПроводокБУ.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт1 КАК Справочник.ДоговорыКонтрагентов)
//	|					КОГДА ТабПроводокБУ.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов)
//	|					КОГДА ТабПроводокБУ.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт3 КАК Справочник.ДоговорыКонтрагентов)
//	|					ИНАЧЕ &Договор
//	|				КОНЕЦ
//	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
//	|	КОНЕЦ,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА ИСТИНА
//	|		ИНАЧЕ ЛОЖЬ
//	|	КОНЕЦ,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ИСТИНА
//	|		ИНАЧЕ ЛОЖЬ
//	|	КОНЕЦ,
//	|	&абс_ЦФУ,
//	|	&абс_ЦФО,
//	|	&абс_БюджетнаяСтатья,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА &абс_ТипКонтрагента
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТабПроводокБУ.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт1 КАК Справочник.Контрагенты).абс_ТипыКонтрагентов
//	|					КОГДА ТабПроводокБУ.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт2 КАК Справочник.Контрагенты).абс_ТипыКонтрагентов
//	|					КОГДА ТабПроводокБУ.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
//	|						ТОГДА ВЫРАЗИТЬ(ТабПроводокБУ.СубконтоКт3 КАК Справочник.Контрагенты).абс_ТипыКонтрагентов
//	|					ИНАЧЕ &абс_ТипКонтрагента
//	|				КОНЕЦ
//	|		ИНАЧЕ &абс_ТипКонтрагента
//	|	КОНЕЦ,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА NULL
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоДт1) = &ТипПоиск1
//	|						ТОГДА ТабПроводокБУ.СубконтоДт1
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоДт2) = &ТипПоиск1
//	|						ТОГДА ТабПроводокБУ.СубконтоДт2
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоДт3) = &ТипПоиск1
//	|						ТОГДА ТабПроводокБУ.СубконтоДт3
//	|					ИНАЧЕ &абс_ТипКонтрагента
//	|				КОНЕЦ
//	|		ИНАЧЕ NULL
//	|	КОНЕЦ,
//	|	ВЫБОР
//	|		КОГДА ТабПроводокБУ.СчетКт В ИЕРАРХИИ (&МассивСчетовЗатрат)
//	|			ТОГДА NULL
//	|		КОГДА ТабПроводокБУ.СчетДт В ИЕРАРХИИ (&МассивСчетовДоходов)
//	|			ТОГДА ВЫБОР
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоДт1) = &ТипПоиск2
//	|						ТОГДА ТабПроводокБУ.СубконтоДт1
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоДт2) = &ТипПоиск2
//	|						ТОГДА ТабПроводокБУ.СубконтоДт2
//	|					КОГДА ТИПЗНАЧЕНИЯ(ТабПроводокБУ.СубконтоДт3) = &ТипПоиск2
//	|						ТОГДА ТабПроводокБУ.СубконтоДт3
//	|					ИНАЧЕ &абс_ТипКонтрагента
//	|				КОНЕЦ
//	|		ИНАЧЕ NULL
//	|	КОНЕЦ,
//	|	&абс_КВ,
//	|	&абс_ТЭО,
//	|	&абс_ТипСети,
//	|	&абс_ТипРасхода
//	|ИЗ
//	|	ВТПроводок_Пром КАК ТабПроводокБУ
//	|ГДЕ
//	|	ТабПроводокБУ.Сумма < 0
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	ТабДоходов.Контрагент КАК Контрагент,
//	|	ТабДоходов.ДоговорКонтрагента КАК ДоговорКонтрагента,
//	|	ТабДоходов.СубконтоБУ КАК Поиск1,
//	|	ТабДоходов.абс_СубконтоБУ2 КАК Поиск2,
//	|	ТабДоходов.СтатьяОборотов КАК абс_БюджетнаяСтатья,
//	|	ТабДоходов.абс_ЦФО КАК абс_ЦФО,
//	|	ТабДоходов.абс_ЦФУ КАК абс_ЦФУ
//	|ПОМЕСТИТЬ ВТДоходы_Пром
//	|ИЗ
//	|	&ТабДоходов КАК ТабДоходов
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ РАЗЛИЧНЫЕ
//	|	ТабДоходов.Контрагент КАК Контрагент,
//	|	ТабДоходов.ДоговорКонтрагента КАК ДоговорКонтрагента,
//	|	ТабДоходов.Поиск1 КАК Поиск1,
//	|	ТабДоходов.Поиск2 КАК Поиск2,
//	|	МИНИМУМ(ТабДоходов.абс_БюджетнаяСтатья) КАК абс_БюджетнаяСтатья,
//	|	МИНИМУМ(ТабДоходов.абс_ЦФО) КАК абс_ЦФО,
//	|	МИНИМУМ(ТабДоходов.абс_ЦФУ) КАК абс_ЦФУ
//	|ПОМЕСТИТЬ ВТДоходы
//	|ИЗ
//	|	ВТДоходы_Пром КАК ТабДоходов
//	|
//	|СГРУППИРОВАТЬ ПО
//	|	ТабДоходов.Контрагент,
//	|	ТабДоходов.ДоговорКонтрагента,
//	|	ТабДоходов.Поиск1,
//	|	ТабДоходов.Поиск2
//	|;
//	|
//	|////////////////////////////////////////////////////////////////////////////////
//	|ВЫБРАТЬ
//	|	ВТПроводоки.Регистратор,
//	|	ВТПроводоки.СчетКт,
//	|	ВТПроводоки.СубконтоКт1,
//	|	ВТПроводоки.СубконтоКт2,
//	|	ВТПроводоки.СубконтоКт3,
//	|	ВТПроводоки.СчетДт,
//	|	ВТПроводоки.СубконтоДт1,
//	|	ВТПроводоки.СубконтоДт2,
//	|	ВТПроводоки.СубконтоДт3,
//	|	ВТПроводоки.Сумма,
//	|	ВТПроводоки.Организация,
//	|	ВТПроводоки.Контрагент,
//	|	ВТПроводоки.ДоговорКонтрагента,
//	|	ВТПроводоки.ЭтоЗатрата,
//	|	ВТПроводоки.ЭтоДоход,
//	|	ВТПроводоки.Поиск1 КАК Поиск01,
//	|	ВТПроводоки.Поиск2 КАК Поиск02,
//	|	ВТДоходы.Поиск1 КАК Поиск11,
//	|	ВТДоходы.Поиск2 КАК Поиск12,
//	|	ЕСТЬNULL(ВТДоходы.абс_ЦФУ, ВТПроводоки.абс_ЦФУ) КАК абс_ЦФУ,
//	|	ЕСТЬNULL(ВТДоходы.абс_ЦФО, ВТПроводоки.абс_ЦФО) КАК абс_ЦФО,
//	|	ЕСТЬNULL(ВТДоходы.абс_БюджетнаяСтатья, ВТПроводоки.абс_БюджетнаяСтатья) КАК абс_БюджетнаяСтатья,
//	|	ВТПроводоки.абс_ТипКонтрагента,
//	|	ВТПроводоки.абс_КВ,
//	|	ВТПроводоки.абс_ТЭО,
//	|	ВТПроводоки.абс_ТипСети,
//	|	ВТПроводоки.абс_ТипРасхода
//	|ИЗ
//	|	ВТПроводоки КАК ВТПроводоки
//	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходы КАК ВТДоходы
//	|		ПО (ВТДоходы.Контрагент = ВТПроводоки.Контрагент)
//	|			И (ВТДоходы.ДоговорКонтрагента = ВТПроводоки.ДоговорКонтрагента)
//	|			И (ВТДоходы.Поиск1 = ВТПроводоки.Поиск1)
//	|			И (ВТДоходы.Поиск2 = ВТПроводоки.Поиск2)
//	|ГДЕ
//	|	(НЕ ВТПроводоки.ЭтоЗатрата
//	|				И ВТПроводоки.ЭтоДоход
//	|			ИЛИ ВТПроводоки.ЭтоЗатрата
//	|				И НЕ ВТПроводоки.ЭтоДоход)");	
//	
//    Запрос.УстановитьПараметр("МассивСчетовЗатрат"		, ПолучитьМассивСчетовЗатрат(Документ.Дата));  
//	Запрос.УстановитьПараметр("МассивСчетовДоходов"		, ПолучитьМассивДоходов());	
//	Запрос.УстановитьПараметр("ТабПроводокБУ"			, ТабПроводокБУ);
//	Запрос.УстановитьПараметр("ТабДоходов"				, Документ.ввв_РТУ);
//	Если Документ.ввв_РТУ.Количество()>0 Тогда
//		Запрос.УстановитьПараметр("ТипПоиск1"				, ТипЗнч(Документ.ввв_РТУ[0].СубконтоБУ));
//		Запрос.УстановитьПараметр("ТипПоиск2"				, ТипЗнч(Документ.ввв_РТУ[0].абс_СубконтоБУ2));
//	Иначе
//		Запрос.УстановитьПараметр("ТипПоиск1"				, Неопределено);
//		Запрос.УстановитьПараметр("ТипПоиск2"				, Неопределено);
//	КонецЕсли;
//	Запрос.УстановитьПараметр("абс_ЦФУ"					, Документ.абс_ЦФУ);
//	Запрос.УстановитьПараметр("абс_ЦФО"					, Документ.абс_ЦФО);
//	Запрос.УстановитьПараметр("абс_БюджетнаяСтатья"		, Документ.абс_БюджетнаяСтатья);
//	Запрос.УстановитьПараметр("Контрагент"				, Документ.Контрагент);
//	Запрос.УстановитьПараметр("Договор"					, Документ.ДоговорКонтрагента);
//	Если ЗначениеЗаполнено(Документ.Контрагент) Тогда
//		Запрос.УстановитьПараметр("абс_ТипКонтрагента"		, Документ.Контрагент.абс_ТипыКонтрагентов);
//// +++ввв 06.10.2016 г.
//	Иначе
//		Запрос.УстановитьПараметр("абс_ТипКонтрагента"		, Справочники.абс_ТипыКонтрагентов.ПустаяСсылка());
//// ---ввв 06.10.2016 г.
//	КонецЕсли;
//	
//	Запрос.УстановитьПараметр("абс_КВ"					, Документ.абс_КВ);
//	Запрос.УстановитьПараметр("абс_ТЭО"					, Документ.абс_ТЭО);
//	Запрос.УстановитьПараметр("абс_ТипСети"				, Документ.абс_ТипСети);
//	Запрос.УстановитьПараметр("абс_ТипРасхода"			, Документ.абс_ТипРасхода);
//	
//	РезультатЗапроса = Запрос.Выполнить();	
//	
//	ПроводкиДляКонтроля = РезультатЗапроса.Выгрузить();
//	                                                                       
//	Выборка = РезультатЗапроса.Выбрать();
//	
//	Если Выборка.Количество() > 0 Тогда
//		ПроверитьАналитикиПрочихТиповБюджетныхДокументов(Документ, Отказ, ПроводкиДляКонтроля);
//	КонецЕсли;
//	
//	Если Отказ Тогда 
//		Возврат;
//	КонецЕсли;
//	
//	Пока Выборка.Следующий() Цикл
//		Движение = ТабДвижений.Добавить();
//		Движение.Период = Документ.Дата;
//		Движение.Сценарий 			= Сценарий;
//		Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
//		Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
//		Движение.ЦФО 				= Выборка.абс_ЦФО;
//		Движение.Организация 		= Выборка.Организация;
//		Движение.СтатьяОборотов 	= Выборка.абс_БюджетнаяСтатья;
//		Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
//		Движение.Контрагент         = Выборка.Контрагент;
//		Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
//		Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
//		Движение.абс_КВ 			= Выборка.абс_КВ;
//		Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
//        Движение.Проект 			= Документ.Проект;
//		Движение.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
//		Движение.ВалютнаяСумма 		= Выборка.Сумма;
//		Движение.СуммаУпр 			= Выборка.Сумма;
//		Движение.СуммаСценария 		= Выборка.Сумма;
//	КонецЦикла;
	// отражение доходов
	//Документ=Документы.ОтчетКомиссионераОПродажах.НайтиПоНомеру();
	Для каждого ТекСтрокаУслуги из Документ.ввв_РТУ Цикл
		Если ТекСтрокаУслуги.Сумма = 0 Тогда
			Продолжить;
		КонецЕсли;
		Движение = ТабДвижений.Добавить();
		Движение.Период = Документ.Дата;
		//Движение.Активность = Истина;
		Движение.Сценарий = Сценарий;
		Движение.СтатьяОборотов = ТекСтрокаУслуги.СтатьяОборотов;
		Движение.Валюта = Документ.ВалютаДокумента;
		Движение.Контрагент = ТекСтрокаУслуги.Контрагент;
		Движение.абс_ТипКонтрагента = ТекСтрокаУслуги.Контрагент.абс_ТипыКонтрагентов;
		Движение.абс_ЦФУ = ТекСтрокаУслуги.абс_ЦФУ;
		Движение.ЦФО = ТекСтрокаУслуги.абс_ЦФО;
  		Движение.ДоговорКонтрагента = ТекСтрокаУслуги.ДоговорКонтрагента;
		Движение.Номенклатура = ТекСтрокаУслуги.Номенклатура;
        //Движение.Проект = ?(ЗначениеЗаполнено(ТекСтрокаУслуги.абс_Проект), ТекСтрокаУслуги.абс_Проект, Документ.Проект);   //АБС_Стрельцов+++ добавлено: 27.11.2012
		//Движение.абс_ТЭО = ?(ЗначениеЗаполнено(Движение.Проект), Движение.Проект.абс_ТЭО, Движение.абс_ТЭО);//***** Проектный учет. Гетц. 23.12.2013
		Движение.Организация = Документ.Организация;
		Движение.ВалютнаяСумма = ?(Документ.СуммаВключаетНДС, ТекСтрокаУслуги.Сумма-ТекСтрокаУслуги.СуммаНДС, ТекСтрокаУслуги.Сумма);
		Движение.СуммаУпр = Движение.ВалютнаяСумма*Документ.КурсВзаиморасчетов;
		Движение.СуммаСценария = Движение.СуммаУпр;
	КонецЦикла;
	//Документ=Документы.ОтчетКомиссионераОПродажах.НайтиПоНомеру();
	// отражение комиссии
	ТекЗЗ = Документ.ввв_ЗЗ;
	Для каждого ТекСтрока из Документ.ввв_ПТУ Цикл
		Если ТекСтрока.Сумма = 0 Тогда 
			Продолжить;
		КонецЕсли;
		Движение = ТабДвижений.Добавить();
		Движение.Период = Документ.Дата;
		Движение.Сценарий = Сценарий;
		Движение.СтатьяОборотов = ТекСтрока.БюджетнаяСтатья;
		Движение.Валюта = Документ.ВалютаДокумента;
		Движение.Контрагент = Документ.Контрагент;
		Движение.ДоговорКонтрагента = Документ.ДоговорКонтрагента;
		Движение.абс_ТипКонтрагента = Документ.Контрагент.абс_ТипыКонтрагентов;
		Движение.абс_ЦФУ = ТекСтрока.ЦФУ;
		Движение.ЦФО = ТекСтрока.ЦФО;
		Движение.Номенклатура = ТекСтрока.Номенклатура;
		Движение.Организация = Документ.Организация;
		Если ЗначениеЗаполнено(ТекЗЗ) Тогда
			Движение.абс_ТипСети = ТекЗЗ.типСети;
			Движение.абс_КВ = ТекЗЗ.КВ;
			Движение.абс_ТЭО = ТекЗЗ.ТЭО;
			Движение.абс_ТипРасхода = ТекЗЗ.ТипРасхода;
		//Движение.Проект = ТекСтрокаОборудование.абс_Проект;
		КонецЕсли;
		Если Документ.КратностьВзаиморасчетов = 0 Тогда
			Кратность = 1;
		Иначе
			Кратность = Документ.КратностьВзаиморасчетов;
		КонецЕсли;
		Если Документ.КурсВзаиморасчетов = 0 Тогда
			Курс = 1;
		Иначе
			Курс = Документ.КурсВзаиморасчетов;
		КонецЕсли;
		Движение.ВалютнаяСумма = ?(Документ.ЗатратыСуммаВключаетНДС,ТекСтрока.Сумма-ТекСтрока.СуммаНДС,ТекСтрока.Сумма);
		Движение.СуммаУпр = Движение.ВалютнаяСумма*Курс/Кратность;
		Движение.СуммаСценария = Движение.СуммаУпр;
		
	КонецЦикла;
КонецПроцедуры
// ---ввв 07.09.2016 г.
// ---ввв 27.06.2017 г.

Процедура ПроверитьАналитикиПрочихТиповБюджетныхДокументов(Документ, Отказ, ПроводкиДляКонтроля = Неопределено) Экспорт
	
	ДатаОграниченияПроверкиАналитик = глЗначениеПеременной("абс_ДатаКонтроляБюджетныхАналитикВПрочихДокументах");
	ДатаОграниченияМапингаАналитик 	= глЗначениеПеременной("абс_ДатаКонтроляМапингаБюджетныхАналитикВПрочихДокументах");
	
	ТекстСообщенияОбОшибке = "Документ: " + Документ.Ссылка + ". Проверка бюджетных аналитик:";
	
	Если НЕ ЗначениеЗаполнено(Документ.абс_ЦФУ) Тогда
		Отказ = Истина;
		ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнен ЦФУ";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Документ.абс_ЦФО) Тогда
		Отказ = Истина;
		ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнен ЦФО";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Документ.Организация) Тогда
		Отказ = Истина;
		ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнена организация";
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Документ.абс_БюджетнаяСтатья) Тогда
		Отказ = Истина;
		ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнена бюджетная статья";
	КонецЕсли;
	
	//Бреев
	Если ЗначениеЗаполнено(Документ.абс_БюджетнаяСтатья) И Документ.абс_БюджетнаяСтатья = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоВводу") тогда
		Если НЕ ЗначениеЗаполнено(Документ.абс_ТЭО) И НЕ ЗначениеЗаполнено(Документ.абс_КВ) тогда
			Отказ = истина;
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнена ТЭО или КВ!";
		КонецЕсли;
	КонецЕсли;
	//Бреев
	
	// {{KM WARE Погорелов В.М. Заявка № 08.10.2015 начало
	// для документ ПеремещениеТоваров проверка на заполненность реквизита kwr_БюджетнаяСтатьяСторно
	Если ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров")
		И Не ЗначениеЗаполнено(Документ.kwr_БюджетнаяСтатьяСторно) Тогда
		Отказ = Истина;
		ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнена бюджетная статья сторно";
	КонецЕсли;
	// }}KM WARE Погорелов В.М. Заявка № 08.10.2015 окончание
	// {{ТТК Лапин А. Заявка № 7721807 14.03.2016 начало
	Если ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда 
		Если Документ.Товары.Количество() > 0 Тогда
			ЕстьНужныеСчета = Ложь;
			Для Каждого СтрТовар из Документ.Товары Цикл 
				Если СтрТовар.СчетУчетаБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("41.01")        // Счет Кт   41.01
					И СтрТовар.НовыйСчетУчетаБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("08.04")  // Счет Дт   08.04
					Тогда 
					ЕстьНужныеСчета = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;	
			Если ЕстьНужныеСчета Тогда
				// делаем проверку на заполненность Бюджетных аналитик
				Если ЗначениеЗаполнено(Документ.абс_БюджетнаяСтатья) И Документ.абс_БюджетнаяСтатья = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост") Тогда
					// Запрет на проведение, если не заполнены ТЭО, КВ и ТЗ, Тип сетей/услуг при выбранной Бюджетной статье "Единая статья КВ".
					Если НЕ ЗначениеЗаполнено(Документ.абс_ТЭО) Тогда // абс_ТЭО
						ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнена бюджетная аеалитика ""ТЭО""";
						Отказ = Истина;	
					КонецЕсли;
					Если НЕ ЗначениеЗаполнено(Документ.абс_КВ) Тогда // абс_КВ (КВ и ТЗ:)
						ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнена бюджетная аеалитика  ""КВ и ТЗ""";
						Отказ = Истина;	
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(Документ.абс_ТипСети) Тогда // абс_ТипСети
						ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнена бюджетная аеалитика  ""Тип сетей/услуг""";
						Отказ = Истина;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	// }}ТТК Лапин А. Заявка № 7721807 14.03.2016 окончание
	
	
	//2053
	Если ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
		//Дополнительный контроль на все аналитики
		//Если НЕ ЗначениеЗаполнено(Документ.абс_ТипКонтрагента) Тогда
		//	Отказ = Истина;
		//	ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнен тип контрагента";
		//КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Документ.абс_ТипСети) Тогда
			Отказ = Истина;
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнен тип сети";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Документ.абс_КВ) Тогда
			Отказ = Истина;
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнено КВ";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(Документ.абс_ТЭО) Тогда
			Отказ = Истина;
			ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + "Не заполнено ТЭО";
		КонецЕсли;
		
		//
	КонецЕсли;
	
	//2053
	
	Если Отказ Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщенияОбОшибке);
		
		Возврат;
	КонецЕсли;
	
	// АБС ВСТАВКА Фролов 20120714 
	// Отключен запрос маппинга для увеличения производительности
	Возврат;
	
	Если НЕ ЗначениеЗаполнено(ДатаОграниченияМапингаАналитик) Тогда
		
		Возврат;
		
	КонецЕсли;
	
	
	Если НЕ ПроводкиДляКонтроля = Неопределено И НЕ (Документ.Дата <= КонецДня(ДатаОграниченияМапингаАналитик)) И НЕ Документ.абс_БезКонтроляМаппинга Тогда
		
		//ТаблицаМапинга = ПолучитьСписокДоступныхСтатейБУМапинга(ПроводкиДляКонтроля.ВыгрузитьКолонку("абс_БюджетнаяСтатья"));
		
		СообщениеПроверкиМапинга = "Документ: " + Документ.Ссылка + ". Проверка аналитик по мапингу БУ УУ:";
		
		Для Каждого ПроводкаКонтроля Из ПроводкиДляКонтроля Цикл
			
			Если ((ПроводкаКонтроля.ЭтоЗатрата И ПроверятьМаппингПоСчетуЗатрат(Документ.Дата, ПроводкаКонтроля.СчетДт)) ИЛИ ПроводкаКонтроля.ЭтоДоход) И НЕ ПроводкаКонтроля.ЕстьМапинг Тогда
				
				Отказ = Истина;
				СообщениеПроверкиМапинга = СообщениеПроверкиМапинга + Символы.ПС + 
				"Проводка " + ПроводкаКонтроля.НомерПроводки + ": Дт " + ПроводкаКонтроля.СчетДт + ", Кт " + ПроводкаКонтроля.СчетКт + " не соответствует мапингу БУ и УУ. ";					
				
				//СтрокиМапинга = ТаблицаМапинга.НайтиСтроки(Новый Структура("СтатьяУУ", ПроводкаКонтроля.абс_БюджетнаяСтатья));					
				//
				//СтрокиМапингаСтрокой = "";
				//
				//Для Каждого СтрокаМапинга Из СтрокиМапинга Цикл
				//	
				//	Если Не ЗначениеЗаполнено(СтрокиМапингаСтрокой) Тогда
				//		СтрокиМапингаСтрокой = СтрокиМапингаСтрокой;
				//	Иначе
				//		СтрокиМапингаСтрокой = СтрокиМапингаСтрокой + ", " + СтрокаМапинга.СтатьяБУ;
				//	КонецЕсли;
				//	
				//КонецЦикла;
				//
				//Если ЗначениеЗаполнено(СтрокиМапингаСтрокой) Тогда
				//	
				//	СообщениеПроверкиМапинга = СообщениеПроверкиМапинга + Символы.ПС + 
				//		"Для статьи УУ: """ + ПроводкаКонтроля.абс_БюджетнаяСтатья + """ необходимо выбрать одну из следующих статей БУ: " + СтрокиМапингаСтрокой + ".";
				//		
				//Иначе
				//	
				//	СообщениеПроверкиМапинга = СообщениеПроверкиМапинга + Символы.ПС + "Для статьи УУ: """ + ПроводкаКонтроля.абс_БюджетнаяСтатья + """ не настроен мапинг статей БУ.";
				//	
				//КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;		
		
		Если Отказ Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке(СообщениеПроверкиМапинга);
			
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроведениеПоБюджетуПрочихДокументовПринятиеКВ(ТабДвижений,Документ, Сценарий,Отказ) Экспорт
	
	ДатаОграниченияМапингаАналитик 	= глЗначениеПеременной("абс_ДатаКонтроляМапингаБюджетныхАналитикВПрочихДокументах");
	
	Если НЕ ЗначениеЗаполнено(ДатаОграниченияМапингаАналитик) Или (Документ.Дата < ДатаОграниченияМапингаАналитик)   Тогда
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЗатрата,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоДоход,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).Организация КАК Организация,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ЦФУ КАК абс_ЦФУ,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ЦФО КАК абс_ЦФО,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТипКонтрагента КАК абс_ТипКонтрагента,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_КВ КАК абс_КВ,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТЭО КАК абс_ТЭО,
		//АБС НАЧАЛО Задача №08759
   		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).Проект КАК Проект,
    	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК ОС,
 		//\\АБС КОНЕЦ Задача №08759
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТипСети КАК абс_ТипСети,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТипРасхода КАК абс_ТипРасхода,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&МассивСчетовдоходов)
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НГ,
		|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерПроводки,
		|	ЛОЖЬ КАК ЕстьМапинг
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			,
		|			,
		|			Регистратор = &Документ
		|				И (СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|					ИЛИ СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)),
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто";	
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяУУ КАК СтатьяУУ,
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяБУ КАК СтатьяБУ,
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.СчетЗатрат КАК СчетЗатрат,
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.НоменклатурнаяГруппа КАК НоменклатурнаяГруппа
		|ПОМЕСТИТЬ ВТ_Маппинг
		|ИЗ
		|	РегистрСведений.абс_СоответствиеСтатейЗатрат_БУ_УУ КАК абс_СоответствиеСтатейЗатрат_БУ_УУ
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяБУ,
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.СтатьяУУ,
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.СчетЗатрат,
		|	абс_СоответствиеСтатейЗатрат_БУ_УУ.НоменклатурнаяГруппа
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоЗатрата,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоДоход,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).Организация КАК Организация,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ЦФУ КАК абс_ЦФУ,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ЦФО КАК абс_ЦФО,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТипКонтрагента КАК абс_ТипКонтрагента,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_КВ КАК абс_КВ,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТЭО КАК абс_ТЭО,
		//АБС НАЧАЛО Задача №08759
   		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).Проект КАК Проект,
    	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК ОС,
 		//\\АБС КОНЕЦ Задача №08759
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТипСети КАК абс_ТипСети,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.%%ВидДокумента%%).абс_ТипРасхода КАК абс_ТипРасхода,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.СтатьиЗатрат
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		КОГДА ХозрасчетныйДвиженияССубконто.СчетКт В ИЕРАРХИИ (&МассивСчетовдоходов)
		|			ТОГДА ВЫБОР
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт1
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт2
		|					КОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3 ССЫЛКА Справочник.НоменклатурныеГруппы
		|						ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоКт3
		|					ИНАЧЕ НЕОПРЕДЕЛЕНО
		|				КОНЕЦ
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК НГ,
		|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерПроводки
		|ПОМЕСТИТЬ ВТ_Проводки
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			,
		|			,
		|			Регистратор = &Документ
		|				И (СчетДт В ИЕРАРХИИ (&МассивСчетовЗатрат)
		|					ИЛИ СчетКт В ИЕРАРХИИ (&МассивСчетовДоходов)),
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВЫБОР
		|		КОГДА ВТ_Маппинг.СтатьяУУ ЕСТЬ NULL 
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьМапинг,
		|	ВТ_Проводки.СчетДт,
		|	ВТ_Проводки.СчетКт,
		|	ВТ_Проводки.Сумма,
		|	ВТ_Проводки.ЭтоЗатрата,
		|	ВТ_Проводки.ЭтоДоход,
		|	ВТ_Проводки.Организация,
		|	ВТ_Проводки.абс_ЦФУ,
		|	ВТ_Проводки.абс_ЦФО,
		|	ВТ_Проводки.абс_БюджетнаяСтатья,
		|	ВТ_Проводки.абс_ТипКонтрагента,
		|	ВТ_Проводки.абс_КВ,
		|	ВТ_Проводки.абс_ТЭО,
		//АБС НАЧАЛО Задача №08759
		|	ВТ_Проводки.Проект,
		|	ВТ_Проводки.ОС,
		//\\АБС КОНЕЦ Задача №08759
		|	ВТ_Проводки.абс_ТипСети,
		|	ВТ_Проводки.абс_ТипРасхода,
		|	ВТ_Проводки.СтатьяЗатрат,
		|	ВТ_Проводки.НГ,
		|	ВТ_Проводки.НомерПроводки
		|ИЗ
		|	ВТ_Проводки КАК ВТ_Проводки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_Маппинг КАК ВТ_Маппинг
		|		ПО (ВЫБОР
		|				КОГДА (НЕ ВТ_Проводки.НГ = НЕОПРЕДЕЛЕНО)
		|					ТОГДА ВЫБОР
		|							КОГДА ВТ_Маппинг.НоменклатурнаяГруппа.ЭтоГруппа
		|								ТОГДА ВТ_Проводки.НГ.Родитель = ВТ_Маппинг.НоменклатурнаяГруппа
		|										ИЛИ ВТ_Проводки.НГ.Родитель.Родитель = ВТ_Маппинг.НоменклатурнаяГруппа
		|										ИЛИ ВТ_Проводки.НГ.Родитель.Родитель.Родитель = ВТ_Маппинг.НоменклатурнаяГруппа
		|							ИНАЧЕ ВТ_Проводки.НГ = ВТ_Маппинг.НоменклатурнаяГруппа
		|						КОНЕЦ
		|			КОНЕЦ)
		|			И ВТ_Проводки.абс_БюджетнаяСтатья = ВТ_Маппинг.СтатьяУУ
		|			И (ВЫБОР
		|				КОГДА ВТ_Проводки.ЭтоЗатрата
		|					ТОГДА ВТ_Проводки.СчетДт = ВТ_Маппинг.СчетЗатрат
		|							И ВТ_Проводки.СтатьяЗатрат = ВТ_Маппинг.СтатьяБУ
		|				КОГДА ВТ_Проводки.ЭтоДоход
		|					ТОГДА ВТ_Проводки.СчетКт = ВТ_Маппинг.СчетЗатрат
		|				ИНАЧЕ ЛОЖЬ
		|			КОНЕЦ)";
		
	КонецЕсли;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "%%ВидДокумента%%", Документ.Метаданные().Имя);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
    Запрос.УстановитьПараметр("МассивСчетовЗатрат", ПолучитьМассивСчетовЗатрат(Документ.Дата));  
	Запрос.УстановитьПараметр("МассивСчетовДоходов", ПолучитьМассивДоходов());
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();	
	
	ПроводкиДляКонтроля = РезультатЗапроса.Выгрузить();
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		ПроверитьАналитикиПрочихТиповБюджетныхДокументов(Документ, Отказ, ПроводкиДляКонтроля);
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	//ДвиженияХ = Документ.ПолучитьОбъект().Движения.Хозрасчетный;
	ЕстьКонтрагент = (Документ.Метаданные().Реквизиты.Найти("Контрагент")<>Неопределено );
	
	//АБС НАЧАЛО Задача №08759
 	ЕстьДоговорКонтрагента = (Документ.Метаданные().Реквизиты.Найти("ДоговорКонтрагента")<>Неопределено);
 	//\\АБС КОНЕЦ Задача №08759
	
	//ДвиженияХ.Прочитать();
	
	СценарийВводКВ = глЗначениеПеременной("абс_СценарийКВПоВводу");
	ЕдинаяСтатьяПоКВ = Справочники.СтатьиОборотовПоБюджетам.НайтиПоНаименованию("Единая статья КВ");
	
	СценарийВводКВОперФакт 	= Справочники.СценарииПланирования.НайтиПоНаименованию("КВ по вводу ОПЕР ФАКТ");
	СценарийВводКВФакт		= Справочники.СценарииПланирования.НайтиПоНаименованию("КВ по вводу ФАКТ");
		
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.ЭтоЗатрата Тогда
						
			// АБС ИЗМЕНЕНО ФРОЛОВ 20120327 
			// Разделим формирование показателей по опер. факту и по факту
			Движение = ТабДвижений.Добавить();
			Движение.Период = Документ.Дата;
			
			//Движение.Сценарий 			= СценарийВводКВ;
			Движение.Сценарий 			= СценарийВводКВОперФакт;
			Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
			
			Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
			Движение.ЦФО 				= Выборка.абс_ЦФО;
			Движение.Организация 		= Выборка.Организация;
			Движение.СтатьяОборотов 	= ЕдинаяСтатьяПоКВ;
			Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
			Если ЕстьКонтрагент Тогда
				Движение.Контрагент         = Документ.Контрагент;
				Если Не ЗначениеЗаполнено(Выборка.абс_ТипКонтрагента) Тогда
					Движение.абс_ТипКонтрагента = Документ.Контрагент.абс_ТипыКонтрагентов;
				КонецЕсли;
				
			КонецЕсли;
			Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
			Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
			Движение.абс_КВ 			= Выборка.абс_КВ;
			Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
			
			//АБС НАЧАЛО Задача №08759
			Движение.ДоговорКонтрагента     = ?(ЕстьДоговорКонтрагента,Документ.ДоговорКонтрагента,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
			Движение.Проект    = Выборка.Проект;   
			
			Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПринятиеКУчетуОС") ИЛИ
				ТипЗнч(Документ) = Тип("ДокументСсылка.МодернизацияОС") Тогда
				Если ТипЗнч(Выборка.ОС) = Тип("СправочникСсылка.ОсновныеСредства") Тогда 
					Если ТипЗнч(Документ) = Тип("ДокументСсылка.МодернизацияОС") Тогда 
						ЗапросОС = Новый Запрос;
						ЗапросОС.Текст = 
						"ВЫБРАТЬ
						| МестонахождениеОССрезПоследних.Проект
						|ИЗ
						| РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
						|   &Период,
						|   ОсновноеСредство = &ОсновноеСредство
						|    И Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) КАК МестонахождениеОССрезПоследних
						|
						|СГРУППИРОВАТЬ ПО
						| МестонахождениеОССрезПоследних.Проект";
						ЗапросОС.УстановитьПараметр("Период", Документ.Дата);
						ЗапросОС.УстановитьПараметр("ОсновноеСредство", Выборка.ОС);
						
						РезультатОС = ЗапросОС.Выполнить();
						Если НЕ РезультатОС.Пустой() Тогда 
							ВыборкаОС = РезультатОС.Выбрать();
							Если ВыборкаОС.Следующий() Тогда 
								Движение.Проект = ВыборкаОС.Проект;  
							КонецЕсли;
						Иначе
							
						КонецЕсли;
					Иначе
						НайденнаяСтрока = Документ.ОсновныеСредства.Найти(Выборка.ОС, "ОсновноеСредство");
						Если НайденнаяСтрока <> Неопределено И ЗначениеЗаполнено(НайденнаяСтрока.Проект) Тогда //***** Гетц. Добавлена проверка заполнения проекта в строке. 12.12.13
							Движение.Проект = НайденнаяСтрока.Проект; 
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			Иначе
				Движение.Проект    = Выборка.Проект;
			КонецЕсли;
			
			//\\АБС КОНЕЦ Задача №0875
			
			Движение.ВалютнаяСумма 		= Выборка.Сумма;
			Движение.СуммаУпр 			= Выборка.Сумма;
			Движение.СуммаСценария 		= Выборка.Сумма;
			
			// АБС ИЗМЕНЕНО ФРОЛОВ 20120327 КОНЕЦ
			
			////Бобылев А.А. 12.02.2018
			//Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
			//	Движение.ttk_ОбъектБюджетирования = Документ.ttk_ОбъектБюджетирования;
			//	Движение.ttk_Город = Документ.ttk_Город;			
			//КонецЕсли;
			////Бобылев А.А. 12.02.2018--------------------------
			
		ИначеЕсли Выборка.ЭтоДоход Тогда
			
			Движение = ТабДвижений.Добавить();
			Движение.Период = Документ.Дата;
			
			//Движение.Сценарий 			= СценарийВводКВ;
			Движение.Сценарий 			= СценарийВводКВОперФакт;
			Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
			
			Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
			Движение.ЦФО 				= Выборка.абс_ЦФО;
			Движение.Организация 		= Выборка.Организация;
			Движение.СтатьяОборотов 	= ЕдинаяСтатьяПоКВ;
			Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
			Если ЕстьКонтрагент Тогда
				Движение.Контрагент         = Документ.Контрагент;
			КонецЕсли;
			
			Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
			Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
			Движение.абс_КВ 			= Выборка.абс_КВ;
			Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
			
			//АБС НАЧАЛО Задача №08759
   			Движение.Проект    = Выборка.Проект;
   			Движение.ДоговорКонтрагента = ?(ЕстьДоговорКонтрагента,Документ.ДоговорКонтрагента,Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
   			//\\АБС КОНЕЦ Задача №08759   
			
			Движение.ВалютнаяСумма 		= Выборка.Сумма;
			Движение.СуммаУпр 			= Выборка.Сумма;
			Движение.СуммаСценария 		= Выборка.Сумма;
			//
			////Бобылев А.А. 12.02.2018
			//Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
			//	Движение.ttk_ОбъектБюджетирования = Документ.ttk_ОбъектБюджетирования;
			//	Движение.ttk_Город = Документ.ttk_Город;			
			//КонецЕсли;
			////Бобылев А.А. 12.02.2018--------------------------
			
		Иначе
			
		КонецЕсли;

	КонецЦикла;
	
	//АБС_Стрельцов+++ добавлено: 26.11.2012
	//распределение по проектам для движений по оборотам бюджетов
	//--------------------------------------
	РазрешитьПроведениеПоМеханизмуПроектногоУчета = глЗначениеПеременной("абс_ПроведениеПоМеханизмуПроектногоУчета");
		
	ЕСли РазрешитьПроведениеПоМеханизмуПроектногоУчета Тогда
		
		ЕСли ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ПередачаМатериаловВЭксплуатацию") Тогда
							
			ЗапросКПартиямМатериалов = Новый Запрос();
			ЗапросКПартиямМатериалов.Текст = "ВЫБРАТЬ
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.Номенклатура,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.ХарактеристикаНоменклатуры,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.СерияНоменклатуры,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.ДокументПередачи,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.ФизЛицо,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.НазначениеИспользования,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.СчетУчета,
			                                 |	СУММА(ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.КоличествоПриход) КАК Количество,
			                                 |	СУММА(ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.СтоимостьПриход) КАК Стоимость
			                                 |ПОМЕСТИТЬ ВТ_ДвиженияДокумента
			                                 |ИЗ
			                                 |	РегистрНакопления.ПартииМатериаловВЭксплуатацииБухгалтерскийУчет.Обороты(
			                                 |			&ДатаНачала,
			                                 |			&ДатаОкончания,
			                                 |			Регистратор,
			                                 |			Организация = &Организация
			                                 |				И Номенклатура В (&МасНоменклатуры)
			                                 |				И ХарактеристикаНоменклатуры В (&МасХарактеристикаНоменклатуры)
			                                 |				И СерияНоменклатуры В (&МасСерияНоменклатуры)
			                                 |				И СчетУчета В (&МасСчетУчета)
			                                 |				И НазначениеИспользования В (&МасНазначениеИспользования)
			                                 |				И ФизЛицо В (&МасФизЛицо)) КАК ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты
			                                 |ГДЕ
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.Регистратор = &Документ
			                                 |
			                                 |СГРУППИРОВАТЬ ПО
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.Номенклатура,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.ХарактеристикаНоменклатуры,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.СерияНоменклатуры,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.ФизЛицо,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.НазначениеИспользования,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.ДокументПередачи,
			                                 |	ПартииМатериаловВЭксплуатацииБухгалтерскийУчетОбороты.СчетУчета
			                                 |;
			                                 |
			                                 |////////////////////////////////////////////////////////////////////////////////
			                                 |ВЫБРАТЬ
			                                 |	ЕСТЬNULL(ПередачаМатериаловВЭксплуатациюМатериалы.абс_Проект, ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)) КАК Проект,
			                                 |	ЕСТЬNULL(ВТ_ДвиженияДокумента.Стоимость, 0) КАК ДоляРаспределения
			                                 |ИЗ
			                                 |	Документ.ПередачаМатериаловВЭксплуатацию.Материалы КАК ПередачаМатериаловВЭксплуатациюМатериалы
			                                 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_ДвиженияДокумента КАК ВТ_ДвиженияДокумента
			                                 |		ПО ПередачаМатериаловВЭксплуатациюМатериалы.Номенклатура = ВТ_ДвиженияДокумента.Номенклатура
			                                 |			И ПередачаМатериаловВЭксплуатациюМатериалы.ХарактеристикаНоменклатуры = ВТ_ДвиженияДокумента.ХарактеристикаНоменклатуры
			                                 |			И ПередачаМатериаловВЭксплуатациюМатериалы.СерияНоменклатуры = ВТ_ДвиженияДокумента.СерияНоменклатуры
			                                 |			И ПередачаМатериаловВЭксплуатациюМатериалы.ФизЛицо = ВТ_ДвиженияДокумента.ФизЛицо
			                                 |			И ПередачаМатериаловВЭксплуатациюМатериалы.НазначениеИспользования = ВТ_ДвиженияДокумента.НазначениеИспользования
			                                 |			И ПередачаМатериаловВЭксплуатациюМатериалы.СчетПередачиБУ = ВТ_ДвиженияДокумента.СчетУчета
			                                 |ГДЕ
			                                 |	ПередачаМатериаловВЭксплуатациюМатериалы.Ссылка = &Документ";
								   
			ЗапросКПартиямМатериалов.УстановитьПараметр("Организация", Документ.Организация);
			ЗапросКПартиямМатериалов.УстановитьПараметр("МасНоменклатуры", Документ.Материалы.ВыгрузитьКолонку("Номенклатура"));
			ЗапросКПартиямМатериалов.УстановитьПараметр("МасХарактеристикаНоменклатуры", Документ.Материалы.ВыгрузитьКолонку("ХарактеристикаНоменклатуры"));
			ЗапросКПартиямМатериалов.УстановитьПараметр("МасСерияНоменклатуры", Документ.Материалы.ВыгрузитьКолонку("СерияНоменклатуры"));
			ЗапросКПартиямМатериалов.УстановитьПараметр("МасФизЛицо", Документ.Материалы.ВыгрузитьКолонку("ФизЛицо"));
			ЗапросКПартиямМатериалов.УстановитьПараметр("МасНазначениеИспользования", Документ.Материалы.ВыгрузитьКолонку("НазначениеИспользования"));
			//АБС+ Тупиков 17776 сравниваем не по счету учета, а по счету передачи
			//ЗапросКПартиямМатериалов.УстановитьПараметр("МасСчетУчета", Документ.Материалы.ВыгрузитьКолонку("СчетУчетаБУ"));
			ЗапросКПартиямМатериалов.УстановитьПараметр("МасСчетУчета", Документ.Материалы.ВыгрузитьКолонку("СчетПередачиБУ")); 
			ЗапросКПартиямМатериалов.УстановитьПараметр("ДатаНачала", Новый Граница(НачалоДня(Документ.Дата), ВидГраницы.Включая));
			ЗапросКПартиямМатериалов.УстановитьПараметр("ДатаОкончания", Новый Граница(КонецДня(Документ.Дата), ВидГраницы.Включая));
			ЗапросКПартиямМатериалов.УстановитьПараметр("Документ", Документ);
			
			РаспределениеПоПроектам = ЗапросКПартиямМатериалов.Выполнить().Выгрузить();
			РаспределениеПоПроектам.Свернуть("Проект", "ДоляРаспределения");
			Для каждого СтрокаТ Из РаспределениеПоПроектам Цикл
				Если СтрокаТ.Проект = Справочники.Проекты.ПустаяСсылка() Тогда
					СтрокаТ.Проект = Документ.Проект;
				КонецЕСли;
			КонецЦикла;
			
			ТабДвиженийКопия = ТабДвижений.Скопировать();
			ТабДвижений.Очистить();
			
			Для Каждого ДвижениеКопия Из ТабДвиженийКопия Цикл
				
				СуммаКРаспределениюРег = ДвижениеКопия.СуммаСценария;
				СуммаКРаспределениюВал = ДвижениеКопия.ВалютнаяСумма;
				СуммаКРаспределениюУпр = ДвижениеКопия.СуммаУпр;
				
				РаспределениеРег = ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаКРаспределениюРег, РаспределениеПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), Истина);
				РаспределениюВал = ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаКРаспределениюВал, РаспределениеПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), Истина);
				РаспределениюУпр = ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаКРаспределениюУпр, РаспределениеПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), Истина);
				
				Для К = 0 По РаспределениеПоПроектам.Количество() - 1 Цикл
					
					Движение = ТабДвижений.Добавить();
					ЗаполнитьЗначенияСвойств(Движение, ДвижениеКопия);
					Движение.Проект = РаспределениеПоПроектам[К].Проект;
					
					Движение.СуммаСценария = ?(НЕ РаспределениеРег = Неопределено, РаспределениеРег[К], 0);
					Движение.ВалютнаяСумма = ?(НЕ РаспределениюВал = Неопределено, РаспределениюВал[К], 0);
					Движение.СуммаУпр = ?(НЕ РаспределениюУпр = Неопределено, РаспределениюУпр[К], 0);
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕСли;
		
	КонецЕСли;
	//--------------------------------------
	//АБС_Стрельцов-
	
	// Добавим движения по факту
	ТабДвиженийФакт = ТабДвижений.Скопировать();
	ТабДвиженийФакт.ЗаполнитьЗначения(СценарийВводКВФакт,"Сценарий");
	
	Для каждого СтрокаТабФакт из ТабДвиженийФакт Цикл
		
		НоваяСтрока = ТабДвижений.Добавить();		
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабФакт);
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ПроведениеПоБюджетуПрочихДокументовДоходыПрошлыхЛет(ТабДвижений,Документ, Сценарий,Отказ) Экспорт //АБС Коломиец
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Проводки.Сумма,
	|	Проводки.Организация,
	|	Проводки.абс_ЦФУ,
	|	Проводки.абс_ЦФО,
	|	Проводки.абс_БюджетнаяСтатья,
	|	Проводки.абс_ТипКонтрагента,
	|	Проводки.абс_КВ,
	|	Проводки.абс_ТЭО,
	|	Проводки.абс_ТипСети,
	|	Проводки.абс_ТипРасхода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.Организация КАК Организация,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ЦФУ КАК абс_ЦФУ,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ЦФО КАК абс_ЦФО,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипКонтрагента КАК абс_ТипКонтрагента,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_КВ КАК абс_КВ,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТЭО КАК абс_ТЭО,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипСети КАК абс_ТипСети,
	|		ХозрасчетныйДвиженияССубконто.Регистратор.абс_ТипРасхода КАК абс_ТипРасхода
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор = &Документ, , ) КАК ХозрасчетныйДвиженияССубконто) КАК Проводки");	
	
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатЗапроса = Запрос.Выполнить();	
	
	Выборка = РезультатЗапроса.Выбрать();
	
	Если Выборка.Количество() > 0 Тогда
		ПроверитьАналитикиПрочихТиповБюджетныхДокументов(Документ, Отказ);
	КонецЕсли;
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	//ДвиженияХ = Документ.ПолучитьОбъект().Движения.Хозрасчетный;
	ЕстьКонтрагент = (Документ.Метаданные().Реквизиты.Найти("Контрагент")<>Неопределено );
	
	//ДвиженияХ.Прочитать();
	
	Пока Выборка.Следующий() Цикл
		
		Движение = ТабДвижений.Добавить();
		Движение.Период = Документ.Дата;
		
		Движение.Сценарий 			= Сценарий;
		Движение.Валюта 			= глЗначениеПеременной("ВалютаРегламентированногоУчета");
		
		Движение.абс_ЦФУ 			= Выборка.абс_ЦФУ;
		Движение.ЦФО 				= Выборка.абс_ЦФО;
		Движение.Организация 		= Выборка.Организация;
		Движение.СтатьяОборотов 	= Выборка.абс_БюджетнаяСтатья;
		Движение.абс_ТипКонтрагента = Выборка.абс_ТипКонтрагента;
		Если ЕстьКонтрагент Тогда
			Движение.Контрагент         = Документ.Контрагент;
			Если Не ЗначениеЗаполнено(Выборка.абс_ТипКонтрагента) Тогда
				Движение.абс_ТипКонтрагента = Документ.Контрагент.абс_ТипыКонтрагентов;
			КонецЕсли;
			
		КонецЕсли;
		Движение.абс_ТипСети 		= Выборка.абс_ТипСети;
		Движение.абс_ТЭО 			= Выборка.абс_ТЭО;
		Движение.абс_КВ 			= Выборка.абс_КВ;
		Движение.абс_ТипРасхода 	= Выборка.абс_ТипРасхода;
		
		Движение.ВалютнаяСумма 		= Выборка.Сумма;
		Движение.СуммаУпр 			= Выборка.Сумма;
		Движение.СуммаСценария 		= Выборка.Сумма;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПровестиППИПоКВПоОплате(ТабДвижений, ТабПроводокБУ, Документ) Экспорт
	
	Запрос = Новый Запрос(
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПлатежноеПоручениеИсходящее) КАК ППИ,
	//|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма
	//|ПОМЕСТИТЬ ППИЗаПериод
	//|ИЗ
	//|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	//|			,
	//|			,
	//|			СчетКт В (ЗНАЧЕНИЕ(Плансчетов.хозрасчетный.Расчетныесчета), ЗНАЧЕНИЕ(Плансчетов.хозрасчетный.ВалютныеСчета))
	//|				И Регистратор = &ДокументСсылка,
	//|			,
	//|			) КАК ХозрасчетныйДвиженияССубконто
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПлатежноеПоручениеИсходящее)
	//|;
	//"ВЫБРАТЬ
	//|	АдресныеСокращения.Ссылка
	//|ПОМЕСТИТЬ ВТ_ТабПроводок
	//|ИЗ
	//|	Справочник.АдресныеСокращения КАК АдресныеСокращения"
	"ВЫБРАТЬ
	|	ТабПроводокБУ.Регистратор КАК ППИ,
	|	ТабПроводокБУ.Сумма КАК Сумма
	|ПОМЕСТИТЬ ВТ_ТабПроводокБУ
	|ИЗ
	|	&ТабПроводокБУ КАК ТабПроводокБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТабПроводокБУ.ППИ КАК ппи,
	|	СУММА(ВТ_ТабПроводокБУ.Сумма) КАК сумма
	|ПОМЕСТИТЬ ППИЗаПериод
	|ИЗ
	|	ВТ_ТабПроводокБУ КАК ВТ_ТабПроводокБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТабПроводокБУ.ППИ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	абс_СчетНаОплатуОплаты.Ссылка КАК СчетНаОплату,
	|	абс_СчетНаОплатуОплаты.ЗРС,
	|	абс_СчетНаОплатуОплаты.ЦФО,
	|	абс_СчетНаОплатуОплаты.ЦФУ,
	|	абс_СчетНаОплатуОплаты.БюджетнаяСтатья,
	|	абс_СчетНаОплатуОплаты.ТипСети,
	|	абс_СчетНаОплатуОплаты.КВ,
	|	абс_СчетНаОплатуОплаты.ТЭО,
	//АБС НАЧАЛО Задача №08759
    | 	абс_СчетНаОплатуОплаты.Проект,
  	//\\АБС КОНЕЦ Задача №08759
	|	абс_СчетНаОплатуОплаты.ТипКонтрагента,
	|	абс_СчетНаОплатуОплаты.ТипРасхода,
	|	абс_СчетНаОплатуОплаты.Ссылка.Организация,
	|	абс_СчетНаОплатуОплаты.ПлатежноеПоручение,
	|	СУММА(абс_СчетНаОплатуОплаты.ВалютнаяСумма) КАК СуммаОплаты
	|ПОМЕСТИТЬ АналитикаСчетовКВПоПоставке
	|ИЗ
	|	Документ.абс_СчетНаОплату.Оплаты КАК абс_СчетНаОплатуОплаты
	|ГДЕ
	|	абс_СчетНаОплатуОплаты.БюджетнаяСтатья = &КВПоПоставке
	|	И абс_СчетНаОплатуОплаты.ПлатежноеПоручение = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	абс_СчетНаОплатуОплаты.ПлатежноеПоручение,
	|	абс_СчетНаОплатуОплаты.ТипРасхода,
	|	абс_СчетНаОплатуОплаты.ТипКонтрагента,
	|	абс_СчетНаОплатуОплаты.ТЭО,
	|	абс_СчетНаОплатуОплаты.КВ,
	|	абс_СчетНаОплатуОплаты.ТипСети,
	|	абс_СчетНаОплатуОплаты.БюджетнаяСтатья,
	|	абс_СчетНаОплатуОплаты.ЦФУ,
	//АБС НАЧАЛО Задача №08759
    | 	абс_СчетНаОплатуОплаты.Проект,
  	//\\АБС КОНЕЦ Задача №08759
	|	абс_СчетНаОплатуОплаты.ЦФО,
	|	абс_СчетНаОплатуОплаты.ЗРС,
	|	абс_СчетНаОплатуОплаты.Ссылка,
	|	абс_СчетНаОплатуОплаты.Ссылка.Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ППИЗаПериод.ппи,
	|	ППИЗаПериод.сумма,
	|	АналитикаСчетовКВПоПоставке.СчетНаОплату,
	|	АналитикаСчетовКВПоПоставке.ЗРС,
	|	АналитикаСчетовКВПоПоставке.ЦФО,
	|	АналитикаСчетовКВПоПоставке.ЦФУ,
	|	АналитикаСчетовКВПоПоставке.БюджетнаяСтатья,
	|	АналитикаСчетовКВПоПоставке.ТипСети,
	|	АналитикаСчетовКВПоПоставке.КВ,
	|	АналитикаСчетовКВПоПоставке.ТЭО,
	//АБС НАЧАЛО Задача №08759
    | 	АналитикаСчетовКВПоПоставке.Проект,
  	//\\АБС КОНЕЦ Задача №08759
	|	АналитикаСчетовКВПоПоставке.ТипКонтрагента,
	|	АналитикаСчетовКВПоПоставке.ТипРасхода,
	|	АналитикаСчетовКВПоПоставке.Организация,
	|	АналитикаСчетовКВПоПоставке.СуммаОплаты
	|ИЗ
	|	ППИЗаПериод КАК ППИЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаСчетовКВПоПоставке КАК АналитикаСчетовКВПоПоставке
	|		ПО ППИЗаПериод.ппи = АналитикаСчетовКВПоПоставке.ПлатежноеПоручение");
	
	СтатьяКВПоПоставке = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВПоПост");
	СценарийКВПоОплатеЗадолженность = глЗначениеПеременной("абс_СценарийКВПоОплатеЗадолженность");
	
	Запрос.УстановитьПараметр("КВПоПоставке", Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВПоПост"));
	Запрос.УстановитьПараметр("ДокументСсылка", Документ.Ссылка);
	
	Запрос.УстановитьПараметр("ТабПроводокБУ", ТабПроводокБУ);
	
	ТабАналитики = Запрос.Выполнить().Выгрузить();
	Если ТабАналитики.Количество()=0 Тогда
		
		Возврат Ложь;
	КонецЕсли;                                                       
	
	ТабАналитики.Колонки.Добавить("СуммаПоБюджету");
	
	//АБС Мачихина 28529
	//ОШИБКА {ОбщийМодуль.абс_БюджетированиеПривилегированный.Модуль(1537)}: Ошибка при вызове метода контекста (ЗагрузитьКолонку) по причине: Несоответствие типов (параметр номер '1')
	//ТабАналитики.ЗагрузитьКолонку(ttk_ОбщегоНазначения.РаспределитьПропорционально(ТабАналитики[0].Сумма,ТабАналитики.ВыгрузитьКолонку("СуммаОплаты")),"СуммаПоБюджету");
	Масс_Таб_Распределения=ttk_ОбщегоНазначения.РаспределитьПропорционально(ТабАналитики[0].Сумма,ТабАналитики.ВыгрузитьКолонку("СуммаОплаты"));
	
	Если Масс_Таб_Распределения<>Неопределено Тогда
		ТабАналитики.ЗагрузитьКолонку(Масс_Таб_Распределения,"СуммаПоБюджету");
	КонецЕсли;
	//\\АБС МАЧХИНА 28529 КОНЕЦ
	
	
	//Пока Выборка.Следующий() Цикл
	Для Каждого Выборка Из ТабАналитики Цикл	
		Если  НЕ Выборка.БюджетнаяСтатья = СтатьяКВПоПоставке Тогда
			Продолжить;
		КонецЕсли;
		
		//абс_Стрельцов+ добавлено: 13.09.2012
		//при переносе ПУ
		//по требованию Фролова
		абс_ВременнаяКонстантаВеденияПроектногоУчета = Истина; //изменено: 04.10.2012
		Если абс_ВременнаяКонстантаВеденияПроектногоУчета Тогда //Константы.абс_ПроведениеПоМеханизмуПроектногоУчета.Получить() Тогда
			
			//АБС НАЧАЛО Задача №08759
			//АБС_Стрельцов+ добавлено: 17.10.2012
			ТЗДолиПоПроектам = абс_БюджетированиеПривилегированный.ПолучитьТаблицуРаспределенияПоПроектам(Выборка.СчетНаОплату.РаспределениеПоПроектам.Выгрузить(), "Все");
			//АБС_Стрельцов-
			Если ТЗДолиПоПроектам.Количество()=0 Тогда 
				н = ТЗДолиПоПроектам.Добавить();
				н.ДоляРаспределения = Выборка.СчетНаОплату.СуммаПлатежа;
			КонецЕсли;
			
			ИтогКоэфПоПроектам = ТЗДолиПоПроектам.Итог("ДоляРаспределения");
			//\\АБС КОНЕЦ Задача №08759
			
			//АБС НАЧАЛО Задача №08759
			Для Каждого СтрокаПроекта Из ТЗДолиПоПроектам Цикл
				//\\АБС КОНЕЦ Задача №08759
				
				Движение = ТабДвижений.Добавить();
				Движение.Период = Выборка.ППИ.Дата;
				Движение.Активность = Истина;
				Движение.Сценарий = СценарийКВПоОплатеЗадолженность;
				Движение.СтатьяОборотов = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВПоПост");
				Движение.Валюта = глЗначениеПеременной("ВалютаРегламентированногоУчета");
				Движение.Контрагент =  Выборка.ППИ.Контрагент;
				Движение.абс_ТипКонтрагента = Выборка.ТипКонтрагента;
				
				// {{ТТК Сладков А. Заявка № 11.01.2017 начало 
				//Движение.абс_ЦФУ = Выборка.ЦФУ;
				//Движение.ЦФО = Выборка.ЦФО;
				Движение.абс_ЦФУ  = Документ.абс_ЦФУ;
				Движение.ЦФО 	  = Документ.абс_ЦФО;
				// }}ТТК Сладков А. Заявка № 11.01.2017 окончание
				
				Движение.Организация = Выборка.Организация;
				Движение.абс_ТипСети = Выборка.ТипСети;
				Движение.абс_ТЭО = Выборка.ТЭО;
				Движение.абс_КВ = Выборка.КВ;
				Движение.абс_ТипРасхода = Выборка.ТипРасхода;
				
				//Движение.ВалютнаяСумма = Выборка.Сумма;
				
				//АБС НАЧАЛО Задача №08759
				//Движение.СуммаУпр = Выборка.СуммаПоБюджету;
				//Движение.СуммаСценария = Выборка.СуммаПоБюджету;
				
				Движение.ДоговорКонтрагента =  Выборка.СчетНаОплату.ДоговорКонтрагента;
				Движение.Проект = СтрокаПроекта.Проект;
				
				Движение.СуммаУпр = Окр(Выборка.СуммаПоБюджету*СтрокаПроекта.ДоляРаспределения/ИтогКоэфПоПроектам,2);
				Движение.СуммаСценария = Окр(Выборка.СуммаПоБюджету*СтрокаПроекта.ДоляРаспределения/ИтогКоэфПоПроектам,2);
				//\\АБС КОНЕЦ Задача №08759
				
				//АБС НАЧАЛО Задача №08759
			КонецЦикла;
			//\\АБС КОНЕЦ Задача №08759
			
		Иначе
			
			Движение = ТабДвижений.Добавить();
			Движение.Период = Выборка.ППИ.Дата;
			Движение.Активность = Истина;
			Движение.Сценарий = СценарийКВПоОплатеЗадолженность;
			Движение.СтатьяОборотов = СтатьяКВПоПоставке;
			Движение.Валюта = глЗначениеПеременной("ВалютаРегламентированногоУчета");
			Движение.Контрагент =  Выборка.ППИ.Контрагент;
			Движение.абс_ТипКонтрагента = Выборка.ТипКонтрагента;
			
			// {{ТТК Сладков А. Заявка № 11.01.2017 начало
			//Движение.абс_ЦФУ = Выборка.ЦФУ;
			//Движение.ЦФО = Выборка.ЦФО;
			Движение.абс_ЦФУ 	= 	Документ.абс_ЦФУ;
			Движение.ЦФО 		= 	Документ.абс_ЦФО;
			// }}ТТК Сладков А. Заявка № 11.01.2017 окончание
			
			Движение.Организация = Выборка.Организация;
			Движение.абс_ТипСети = Выборка.ТипСети;
			Движение.абс_ТЭО = Выборка.ТЭО;
			Движение.абс_КВ = Выборка.КВ;
			Движение.абс_ТипРасхода = Выборка.ТипРасхода;
			
			//Движение.ВалютнаяСумма = Выборка.Сумма;
			Движение.СуммаУпр = Выборка.СуммаПоБюджету;
			Движение.СуммаСценария = Выборка.СуммаПоБюджету;
			
		КонецЕСли;
		//
		//абс_Стрельцов-
		
	КонецЦикла;
	
	Возврат ТабДвижений.Количество() > 0;
	
КонецФункции

Процедура ПровестиДляОтчета(ТабДвижений, ТабДвиженийБУ, Документ) Экспорт
	
	// АБС ВСТАВКА Фролов
	// Проводим по бюджету только по константе
	Если НЕ глЗначениеПеременной("абс_ИспользоватьСценарийФактДДС") Тогда
		Возврат;
	КонецЕсли;
	// АБС ВСТАВКА Фролов КОНЕЦ
	
	Запрос = Новый Запрос;
	Если ТабДвиженийБУ = Неопределено ТОгда
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйДвиженияССубконто.Регистратор КАК ППИ,
		|	СУММА(ХозрасчетныйДвиженияССубконто.Сумма) КАК Сумма
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			,
		|			,
		|			СчетКт В (ЗНАЧЕНИЕ(Плансчетов.хозрасчетный.Расчетныесчета), ЗНАЧЕНИЕ(Плансчетов.хозрасчетный.ВалютныеСчета))
		|				И Регистратор = &ДокППИ,
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто
		|
		|СГРУППИРОВАТЬ ПО
		|	ХозрасчетныйДвиженияССубконто.Регистратор";
		
		
		Запрос.УстановитьПараметр("ДокППИ", Документ.Ссылка);
	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	ТЗ.СчетКТ,
		               |	ТЗ.Сумма
		               |ПОМЕСТИТЬ ВТ_ТЗ
		               |ИЗ
		               |	&ТЗ КАК ТЗ
		               |ГДЕ
		               |	ТЗ.СчетКТ В (ЗНАЧЕНИЕ(Плансчетов.хозрасчетный.Расчетныесчета), ЗНАЧЕНИЕ(Плансчетов.хозрасчетный.ВалютныеСчета))
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ВТ_ТЗ.СчетКТ,
		               |	СУММА(ВТ_ТЗ.Сумма) КАК Сумма
		               |ИЗ
		               |	ВТ_ТЗ КАК ВТ_ТЗ
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_ТЗ.СчетКТ";
		
		
		Запрос.УстановитьПараметр("ТЗ", ТабДвиженийБУ);
		Запрос.УстановитьПараметр("ДокППИ", Документ.Ссылка);
		
	КонецЕсли;
	ВыборкаСумма = Запрос.Выполнить().Выбрать();
	Если ВыборкаСумма.Следующий() Тогда
		СуммаОплаты = ВыборкаСумма.Сумма;
	Иначе
		Возврат;
	КонецЕсли;
	
	ПустойКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
	мВалютаРУ = глЗначениеПеременной("ВалютаРегламентированногоУчета");
    СценарийОплаты = глЗначениеПеременной("абс_СценарийДДСБУ");
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") 
		или ТипЗнч(Документ) = Тип("ДокументСсылка.ПлатежныйОрдерСписаниеДенежныхСредств") Тогда
		
		Если ТипЗнч(Документ) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда
			Запрос.Текст = "
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа
			|ПОМЕСТИТЬ ВТ_ЗРС
			|ИЗ
			|	Документ.ПлатежноеПоручениеИсходящее.РасшифровкаПлатежа КАК ПлатежноеПоручениеИсходящееРасшифровкаПлатежа
			|ГДЕ
			|	ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.Ссылка = &ДокППИ
			|	И ПлатежноеПоручениеИсходящееРасшифровкаПлатежа.ДокументПланированияПлатежа <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеСредств.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	абс_РасчетыПоСчетамОбороты.Оплата,
			|	абс_РасчетыПоСчетамОбороты.Оплата.Контрагент КАК Контрагент,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФО КАК ЦФО,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФУ КАК ЦФУ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипСети КАК ТипСети,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипРасхода КАК ТипРасхода,
			|	абс_РасчетыПоСчетамОбороты.Оплата.КВ КАК КВ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТЭО КАК ТЭО,
			|	абс_РасчетыПоСчетамОбороты.Оплата.БюджетнаяСтатья КАК БюджетнаяСтатья,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипКонтрагента КАК ТипКонтрагента,
			|	СУММА(абс_РасчетыПоСчетамОбороты.СуммаОборот) КАК Сумма
			|ИЗ
			|	ВТ_ЗРС КАК ВТ_ЗРС,
			|	РегистрНакопления.абс_РасчетыПоСчетам.Обороты(, , Регистратор, ) КАК абс_РасчетыПоСчетамОбороты
			|ГДЕ
			|	абс_РасчетыПоСчетамОбороты.Регистратор В (ВТ_ЗРС.ДокументПланированияПлатежа)
			|
			|СГРУППИРОВАТЬ ПО
			|	абс_РасчетыПоСчетамОбороты.Оплата,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФУ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипСети,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипРасхода,
			|	абс_РасчетыПоСчетамОбороты.Оплата.КВ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТЭО,
			|	абс_РасчетыПоСчетамОбороты.Оплата.БюджетнаяСтатья,
			|	абс_РасчетыПоСчетамОбороты.Оплата.Контрагент,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипКонтрагента,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФО";
			
			
		Иначе
			
			Запрос.Текст = "
			|ВЫБРАТЬ
			|	ПлатежныйОрдерСписаниеДенежныхСредствРасшифровкаПлатежа.ДокументПланированияПлатежа
			|ПОМЕСТИТЬ ВТ_ЗРС
			|ИЗ
			|	Документ.ПлатежныйОрдерСписаниеДенежныхСредств.РасшифровкаПлатежа КАК ПлатежныйОрдерСписаниеДенежныхСредствРасшифровкаПлатежа
			|ГДЕ
			|	ПлатежныйОрдерСписаниеДенежныхСредствРасшифровкаПлатежа.Ссылка = &ДокППИ
			|	И ПлатежныйОрдерСписаниеДенежныхСредствРасшифровкаПлатежа.ДокументПланированияПлатежа <> ЗНАЧЕНИЕ(Документ.ЗаявкаНаРасходованиеСредств.ПустаяСсылка)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	абс_РасчетыПоСчетамОбороты.Оплата,
			|	абс_РасчетыПоСчетамОбороты.Оплата.Контрагент КАК Контрагент,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФО КАК ЦФО,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФУ КАК ЦФУ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипСети КАК ТипСети,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипРасхода КАК ТипРасхода,
			|	абс_РасчетыПоСчетамОбороты.Оплата.КВ КАК КВ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТЭО КАК ТЭО,
			|	абс_РасчетыПоСчетамОбороты.Оплата.БюджетнаяСтатья КАК БюджетнаяСтатья,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипКонтрагента КАК ТипКонтрагента,
			|	СУММА(абс_РасчетыПоСчетамОбороты.СуммаОборот) КАК Сумма
			|ИЗ
			|	ВТ_ЗРС КАК ВТ_ЗРС,
			|	РегистрНакопления.абс_РасчетыПоСчетам.Обороты(, , Регистратор, ) КАК абс_РасчетыПоСчетамОбороты
			|ГДЕ
			|	абс_РасчетыПоСчетамОбороты.Регистратор В (ВТ_ЗРС.ДокументПланированияПлатежа)
			|
			|СГРУППИРОВАТЬ ПО
			|	абс_РасчетыПоСчетамОбороты.Оплата,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФУ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипСети,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипРасхода,
			|	абс_РасчетыПоСчетамОбороты.Оплата.КВ,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТЭО,
			|	абс_РасчетыПоСчетамОбороты.Оплата.БюджетнаяСтатья,
			|	абс_РасчетыПоСчетамОбороты.Оплата.Контрагент,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ТипКонтрагента,
			|	абс_РасчетыПоСчетамОбороты.Оплата.ЦФО";
			
			
		КонецЕсли;
		
		
		Результат = Запрос.Выполнить();
		
		ТабАналитики = Результат.Выгрузить();
		Если ТабАналитики.Количество()<>0 Тогда
			
			ТабАналитики.Колонки.Добавить("СуммаПоБюджету");
			ТабАналитики.ЗагрузитьКолонку(ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаОплаты,ТабАналитики.ВыгрузитьКолонку("Сумма")),"СуммаПоБюджету");
			
			//Пока Выборка.Следующий() Цикл
			Для Каждого СтрокаТЗ Из ТабАналитики Цикл	
				
				Движение = ТабДвижений.Добавить();
				Движение.Период = Документ.Дата;
				Движение.Активность = Истина;
				Движение.Сценарий = СценарийОплаты;
				Движение.СтатьяОборотов = СтрокаТЗ.БюджетнаяСтатья;
				Движение.Валюта = мВалютаРУ;
				Движение.Контрагент =  Документ.Контрагент;
				Движение.абс_ТипКонтрагента = СтрокаТЗ.ТипКонтрагента;
				Движение.абс_ЦФУ = СтрокаТЗ.ЦФУ;
				Движение.ЦФО = СтрокаТЗ.ЦФО;
				Движение.Организация = Документ.Организация;
				Движение.абс_ТипСети = СтрокаТЗ.ТипСети;
				Движение.абс_ТЭО = СтрокаТЗ.ТЭО;
				Движение.абс_КВ = СтрокаТЗ.КВ;
				Движение.абс_ТипРасхода = СтрокаТЗ.ТипРасхода;
				
				Движение.СуммаУпр = СтрокаТЗ.СуммаПоБюджету;
				Движение.СуммаСценария = СтрокаТЗ.СуммаПоБюджету;
				
			КонецЦикла;
		Иначе
			Движение = ТабДвижений.Добавить();
			Движение.Период = Документ.Дата;
			Движение.Активность = Истина;
			Движение.Сценарий = СценарийОплаты;
			Движение.СтатьяОборотов = Документ.абс_БюджетнаяСтатья;
			Движение.Валюта = мВалютаРУ;
			Движение.Контрагент =  Документ.Контрагент;
			Движение.абс_ТипКонтрагента = Документ.абс_ТипКонтрагента;
			Движение.абс_ЦФУ = Документ.абс_ЦФУ;
			Движение.ЦФО = Документ.абс_ЦФО;
			Движение.Организация = Документ.Организация;
			Движение.абс_ТипСети = Документ.абс_ТипСети;
			Движение.абс_ТЭО = Документ.абс_ТЭО;
			Движение.абс_КВ = Документ.абс_КВ;
			Движение.абс_ТипРасхода = Документ.абс_ТипРасхода;
			
			Движение.СуммаУпр = СуммаОплаты;
			Движение.СуммаСценария = СуммаОплаты;
		КонецЕсли;
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПереоценкаВалютныхСредств") 
		или ТипЗнч(Документ) = Тип("ДокументСсылка.ОперацияБух") Тогда
		 Движение = ТабДвижений.Добавить();
			Движение.Период = Документ.Дата;
			Движение.Активность = Истина;
			Движение.Сценарий = СценарийОплаты;
			Движение.СтатьяОборотов = Документ.абс_БюджетнаяСтатья;
			Движение.Валюта = мВалютаРУ;
			Движение.Контрагент =  ПустойКонтрагент;
			Движение.абс_ТипКонтрагента = Документ.абс_ТипКонтрагента;
			Движение.абс_ЦФУ = Документ.абс_ЦФУ;
			Движение.ЦФО = Документ.абс_ЦФО;
			Движение.Организация = Документ.Организация;
			Движение.абс_ТипСети = Документ.абс_ТипСети;
			Движение.абс_ТЭО = Документ.абс_ТЭО;
			Движение.абс_КВ = Документ.абс_КВ;
			Движение.абс_ТипРасхода = Документ.абс_ТипРасхода;
			
			Движение.СуммаУпр = СуммаОплаты;
			Движение.СуммаСценария = СуммаОплаты;
	ИначеЕсли ТипЗнч(Документ) = Тип("ДокументСсылка.ПлатежноеТребованиеПолученное") 
		или ТипЗнч(Документ) = Тип("ДокументСсылка.ПриходныйКассовыйОрдер") 
		или ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаЗаписейРегистров") Тогда
		 Движение = ТабДвижений.Добавить();
			Движение.Период = Документ.Дата;
			Движение.Активность = Истина;
			Движение.Сценарий = СценарийОплаты;
			Движение.СтатьяОборотов = "";
			Движение.Валюта = мВалютаРУ;
			Движение.Контрагент =  ПустойКонтрагент;
			Движение.абс_ТипКонтрагента = "";
			Движение.абс_ЦФУ = "";
			Движение.ЦФО = "";
			Попытка
				Движение.Организация = Документ.Организация;
			Исключение
			КонецПопытки;
			Движение.абс_ТипСети = "";
			Движение.абс_ТЭО = "";
			Движение.абс_КВ = "";
			Движение.абс_ТипРасхода = "";
			
			Движение.СуммаУпр = СуммаОплаты;
			Движение.СуммаСценария = СуммаОплаты;
	
		
		
		
	КонецЕсли;

КонецПроцедуры

//абс_Стрельцов+ добавлено: 13.09.2012
//при переносе ПУ
//------------------------------------------------------------------
Функция ПровестиППВПоПоПроектам(Документ, ТабДвижений) Экспорт
	Если Не глЗначениеПеременной("абс_ПроведениеПоМеханизмуПроектногоУчета") Тогда 
		Возврат Ложь;
	КонецЕсли;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Регистратор КАК ППВ,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Документ,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.ДоговорКонтрагента.Владелец КАК Контрагент,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.ДоговорКонтрагента,
	|	СУММА(РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.СуммаРег) КАК СуммаРегл,
	|	СУММА(РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.СуммаВзаиморасчетов) КАК Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.СчетОплаты В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученным), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Оплата)
	|	КОНЕЦ КАК ОплатаАванс	
	|ИЗ
	|	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации КАК РасчетыПоРеализацииВУсловныхЕдиницахОрганизации
	|ГДЕ
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Регистратор = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Регистратор,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Документ,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.ДоговорКонтрагента.Владелец,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.ДоговорКонтрагента,
	|	ВЫБОР
	|		КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.СчетОплаты В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученным), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Оплата)
	|	КОНЕЦ");
	
    Запрос.УстановитьПараметр("ДокументСсылка", Документ.Ссылка);
	
	ТабАналитики = Запрос.Выполнить().Выгрузить();
	Если ТабАналитики.Количество() = 0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Выборка Из ТабАналитики Цикл	
		
		// Распределение по проектам не выполняется. Проекты подтягиваются из соответствующей колонки табличной части "Расшифровка платежа".
		// Если в колонке нет ни одного проекта, движения не выполняется. Если заполнены проекты не во всех строках - часть данных ляжет 
		// на первый проект из таб. чсти в договоре. Иначе на пустой проект.
		
		РасшифровкаПлатежа = Выборка.ППВ.РасшифровкаПлатежа.Выгрузить();
		РасшифровкаПлатежа.Свернуть("Проект","СуммаПлатежа");
		Если РасшифровкаПлатежа.Количество() = 1 Тогда 
			Если Не ЗначениеЗаполнено(РасшифровкаПлатежа[0].Проект) Тогда
				//АБС Пугачев
				//Проект = ?(Выборка.ДоговорКонтрагента.абс_Проекты.Количество() = 0, Неопределено, Выборка.ДоговорКонтрагента.абс_Проекты[0].Проект);
				Проект = ПолучитьПроектДоговора(Выборка.ДоговорКонтрагента);
				//\\АБС Пугачев
				Если Не ЗначениеЗаполнено(Проект) Тогда 
					Прервать;
				КонецЕсли;
				РасшифровкаПлатежа[0].Проект = Проект;
			КонецЕсли;
		ИначеЕсли РасшифровкаПлатежа.Количество() = 0 Тогда 
			Прервать;
		КонецЕсли;
		
		РасшифровкаПлатежа.Колонки["СуммаПлатежа"].Имя = "ДоляРаспределения";
		
		ИтогКоэфПоПроектам = РасшифровкаПлатежа.Итог("ДоляРаспределения");
		
		РаспределениеРег = ttk_ОбщегоНазначения.РаспределитьПропорционально(Выборка.СуммаРегл, РасшифровкаПлатежа.ВыгрузитьКолонку("ДоляРаспределения"));
		РаспределениеВал = ttk_ОбщегоНазначения.РаспределитьПропорционально(Выборка.Сумма, РасшифровкаПлатежа.ВыгрузитьКолонку("ДоляРаспределения"));
		
		Для К = 0 По РасшифровкаПлатежа.Количество() - 1 Цикл
			СтрокаПроекта = РасшифровкаПлатежа[К];

			Если Не ЗначениеЗаполнено(СтрокаПроекта.Проект) Тогда
				//АБС Пугачев
				//Проект = ?(Выборка.ДоговорКонтрагента.абс_Проекты.Количество() = 0, Справочники.Проекты.ПустаяСсылка(), Выборка.ДоговорКонтрагента.абс_Проекты[0].Проект);
				Проект = ПолучитьПроектДоговора(Выборка.ДоговорКонтрагента);
				//\\АБС Пугачев
			Иначе 
				Проект = СтрокаПроекта.Проект;
			КонецЕсли;
			
			Движение = ТабДвижений.Добавить();
			Движение.Период = Выборка.ППВ.Дата;
			Движение.Активность = Истина;
			Движение.Регистратор = Документ;
			Движение.Контрагент =  Выборка.Контрагент;
			Движение.ДоговорКонтрагента =  Выборка.ДоговорКонтрагента;
			Движение.ФактОперФакт =  Перечисления.абс_ФактОперФакт.Факт;
			Движение.ПриходРасход =  Перечисления.ВидыДвиженийПриходРасход.Приход;
			Движение.ОплатаАванс =  Выборка.ОплатаАванс;
			Движение.Документ = Выборка.Документ;
			 
		    Движение.Проект = Проект;

			Движение.Сумма = ?(Не РаспределениеВал = Неопределено, РаспределениеВал[К], 0);
			Движение.СуммаРегл = ?(Не РаспределениеРег = Неопределено, РаспределениеРег[К], 0);
			
		КонецЦикла;
	
	КонецЦикла;
	
	Возврат ТабДвижений.Количество() > 0;
	
КонецФункции

//АБС НАЧАЛО Задача №08759
Функция ПровестиППИПоПоПроектам(Документ, ТабДвижений) Экспорт
	Если Не глЗначениеПеременной("абс_ПроведениеПоМеханизмуПроектногоУчета") Тогда 
		Возврат Ложь;
	КонецЕсли;
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Регистратор КАК ППИ,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Документ,
	|	СУММА(РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СуммаРег) КАК СуммаРегл,
	|	СУММА(РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СуммаВзаиморасчетов) КАК Сумма,
	|	ВЫБОР
	|		КОГДА РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СчетОплаты В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамВыданным), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Оплата)
	|	КОНЕЦ КАК ОплатаАванс
	|ПОМЕСТИТЬ втРасчетыПоПриобретению
	|ИЗ
	|	РегистрНакопления.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации КАК РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации
	|ГДЕ
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Регистратор = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Регистратор,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Документ,
	|	ВЫБОР
	|		КОГДА РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СчетОплаты В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамВыданным), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал))
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Аванс)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.Оплата)
	|	КОНЕЦ
	|;
	|
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_СчетНаОплатуОплаты.Ссылка КАК СчетНаОплату,
	|	абс_СчетНаОплатуОплаты.ПлатежноеПоручение,
	|	абс_СчетНаОплатуОплаты.Контрагент,
	|	абс_СчетНаОплатуОплаты.ДоговорКонтрагента,
	|	СУММА(абс_СчетНаОплатуОплаты.СуммаПлатежа) КАК СуммаПлатежа,
	|	СУММА(абс_СчетНаОплатуОплаты.СуммаРезерва) КАК СуммаРезерва,
	|	СУММА(абс_СчетНаОплатуОплаты.ВалютнаяСумма) КАК ВалютнаяСумма,
	|	СУММА(абс_СчетНаОплатуОплаты.СуммаРезерваВалютная) КАК СуммаРезерваВалютная
	|ПОМЕСТИТЬ АналитикаСчетовКВПоПоставке
	|ИЗ
	|	Документ.абс_СчетНаОплату.Оплаты КАК абс_СчетНаОплатуОплаты
	|ГДЕ
	|	абс_СчетНаОплатуОплаты.ПлатежноеПоручение = &ДокументСсылка
	|
	|СГРУППИРОВАТЬ ПО
	|	абс_СчетНаОплатуОплаты.ПлатежноеПоручение,
	|	абс_СчетНаОплатуОплаты.Ссылка,
	|	абс_СчетНаОплатуОплаты.Контрагент,
	|	абс_СчетНаОплатуОплаты.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ППИЗаПериод.ППИ КАК ППИ,
	|	АналитикаСчетовКВПоПоставке.Контрагент,
	|	АналитикаСчетовКВПоПоставке.ДоговорКонтрагента,
	|	ППИЗаПериод.ОплатаАванс,
	|	АналитикаСчетовКВПоПоставке.СчетНаОплату КАК СчетНаОплату,
	|	ППИЗаПериод.Сумма КАК Сумма,
	|	ППИЗаПериод.СуммаРегл КАК СуммаРегл,
	|	АналитикаСчетовКВПоПоставке.СуммаПлатежа КАК СуммаПлатежа,
	|	АналитикаСчетовКВПоПоставке.СуммаРезерва КАК СуммаРезерва,
	|	АналитикаСчетовКВПоПоставке.ВалютнаяСумма КАК ВалютнаяСумма,
	|	АналитикаСчетовКВПоПоставке.СуммаРезерваВалютная КАК СуммаРезерваВалютная,
	|	ППИЗаПериод.Документ
	|ИЗ
	|	втРасчетыПоПриобретению КАК ППИЗаПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АналитикаСчетовКВПоПоставке КАК АналитикаСчетовКВПоПоставке
	|		ПО ППИЗаПериод.ППИ = АналитикаСчетовКВПоПоставке.ПлатежноеПоручение
	|ИТОГИ
	|	СУММА(Сумма),
	|	СУММА(СуммаРегл),
	|	МАКСИМУМ(СуммаПлатежа),
	|	МАКСИМУМ(СуммаРезерва),
	|	МАКСИМУМ(ВалютнаяСумма),
	|	МАКСИМУМ(СуммаРезерваВалютная)
	|ПО
	|	ППИ,
	|	СчетНаОплату");
	
    Запрос.УстановитьПараметр("ДокументСсылка", Документ.Ссылка);
	
	ДеревоАналитики = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Для Каждого СтрокаПлатежка Из ДеревоАналитики.Строки Цикл 
		
		Для Каждого СтрокаСчет Из СтрокаПлатежка.Строки Цикл 
			
			ОстатокРезерва = СтрокаСчет.СуммаРезерва;
			ОстатокРезерваВал = СтрокаСчет.СуммаРезерваВалютная;
			
			Для Каждого СтрокаДетали Из СтрокаСчет.Строки Цикл	
				
				ТЗДолиПоПроектам = ПолучитьТаблицуРаспределенияПоПроектам(СтрокаДетали.СчетНаОплату.РаспределениеПоПроектам.Выгрузить(), "НеПустые");
				Если ТЗДолиПоПроектам.Количество() = 0 Тогда 
					//НоваяСтрока = ТЗДолиПоПроектам.Добавить();
					//НоваяСтрока.ДоляРаспределения = СтрокаДетали.СчетНаОплату.СуммаПлатежа;
					Продолжить;
					// По пустым проектам движения делать не стоит.
				КонецЕсли;
				
				ИтогКоэфПоПроектам = ТЗДолиПоПроектам.Итог("ДоляРаспределения");
				
				Резерв = Мин(ОстатокРезерва, СтрокаДетали.СуммаРегл);
				ОстатокРезерва = ОстатокРезерва - Резерв;
				РезервВал = Мин(ОстатокРезерваВал, СтрокаДетали.Сумма);
				ОстатокРезерваВал = ОстатокРезерваВал - РезервВал;
				
				СуммаРег = СтрокаДетали.СуммаРегл - Резерв;
				СуммаВал = СтрокаДетали.Сумма - РезервВал;
				
				РаспределениеРег = ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаРег, ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), , Ложь);    //АБС Коломиец 19560 "Ложь"
				РаспределениеВал = ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаВал, ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), , Ложь);
				
				РаспределениеРезерваРег = ttk_ОбщегоНазначения.РаспределитьПропорционально(Резерв , ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), , Ложь);
				РаспределениеРезерваВал = ttk_ОбщегоНазначения.РаспределитьПропорционально(РезервВал, ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), , Ложь);
				
				Для К = 0 По ТЗДолиПоПроектам.Количество() - 1 Цикл
					
					СтрокаПроекта = ТЗДолиПоПроектам[К];
					
					Если Резерв > 0 Тогда
						
						Движение = ТабДвижений.Добавить();
						Движение.Период = СтрокаДетали.ППИ.Дата;
						Движение.Активность = Истина;
						Движение.Регистратор = Документ;
						Движение.Контрагент =  СтрокаДетали.Контрагент;
						Движение.ДоговорКонтрагента =  СтрокаДетали.ДоговорКонтрагента;
						Движение.ФактОперФакт =  Перечисления.абс_ФактОперФакт.Факт;
						Движение.ПриходРасход =  Перечисления.ВидыДвиженийПриходРасход.Расход;
						Движение.ОплатаАванс =  Перечисления.ВидыОтчетовПоПлатежамКомиссия.Резерв;
						Движение.Документ = СтрокаДетали.Документ;
						
						Движение.Проект = СтрокаПроекта.Проект;
						
						Движение.Сумма = РаспределениеРезерваВал[К];
						Движение.СуммаРегл = РаспределениеРезерваРег[К];
						
					КонецЕсли;
					
					Если СуммаРег > 0 Или СуммаВал > 0 Тогда
						
						Движение = ТабДвижений.Добавить();
						Движение.Период = СтрокаДетали.ППИ.Дата;
						Движение.Активность = Истина;
						Движение.Регистратор = Документ;
						Движение.Контрагент =  СтрокаДетали.Контрагент;
						Движение.ДоговорКонтрагента = СтрокаДетали.ДоговорКонтрагента;
						Движение.ФактОперФакт =  Перечисления.абс_ФактОперФакт.Факт;
						Движение.ПриходРасход =  Перечисления.ВидыДвиженийПриходРасход.Расход;
						Движение.ОплатаАванс =  СтрокаДетали.ОплатаАванс;
						Движение.Документ = СтрокаДетали.Документ;
						
						Движение.Проект = СтрокаПроекта.Проект;
						
						Движение.Сумма = РаспределениеВал[К];
						Движение.СуммаРегл = РаспределениеРег[К];
						
					КонецЕСли;
					
				КонецЦикла;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабДвижений.Количество() > 0;
	
КонецФункции

Функция ПровестиСчетНаОплатуПоПроектам(Документ, ТабДвижений) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_СчетНаОплатуОплаты.Ссылка КАК СчетНаОплату,
	|	абс_СчетНаОплатуОплаты.Контрагент,
	|	абс_СчетНаОплатуОплаты.ДоговорКонтрагента,
	|	СУММА(абс_СчетНаОплатуОплаты.СуммаПлатежа) КАК СуммаРегл,
	|	СУММА(абс_СчетНаОплатуОплаты.ВалютнаяСумма) КАК Сумма
	|ИЗ
	|	Документ.абс_СчетНаОплату.Оплаты КАК абс_СчетНаОплатуОплаты
	|ГДЕ
	|	абс_СчетНаОплатуОплаты.Ссылка = &ДокументСсылка
	|	И абс_СчетНаОплатуОплаты.ПлатежноеПоручение = ЗНАЧЕНИЕ(Документ.ПлатежноеПоручениеИсходящее.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	абс_СчетНаОплатуОплаты.Ссылка,
	|	абс_СчетНаОплатуОплаты.Контрагент,
	|	абс_СчетНаОплатуОплаты.ДоговорКонтрагента");
    Запрос.УстановитьПараметр("ДокументСсылка", Документ.Ссылка);
	
	ТабАналитики = Запрос.Выполнить().Выгрузить();
	Если ТабАналитики.Количество()=0 Тогда

		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Выборка Из ТабАналитики Цикл	
		
		ТЗДолиПоПроектам = Выборка.СчетНаОплату.РаспределениеПоПроектам.Выгрузить();
		Если ТЗДолиПоПроектам.Количество()=0 Тогда 
			//н = ТЗДолиПоПроектам.Добавить();
			//н.ДоляРаспределения = Выборка.СчетНаОплату.СуммаПлатежа;
			Продолжить;
		КонецЕсли;
		
		ИтогКоэфПоПроектам = ТЗДолиПоПроектам.Итог("ДоляРаспределения");
		
		РаспределениеРег = ttk_ОбщегоНазначения.РаспределитьПропорционально(Выборка.СуммаРегл, ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"));
		РаспределениеВал = ttk_ОбщегоНазначения.РаспределитьПропорционально(?(Выборка.Сумма=0, Выборка.СуммаРегл, Выборка.Сумма), ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"));
		
		//АБС_Стрельцов+ добавлено: 01.11.2012
		//важная проверка
		//---------------
		Если РаспределениеРег = Неопределено ИЛИ РаспределениеВал = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		//---------------
		//АБС_Стрельцов-
		
		Для К=0 По ТЗДолиПоПроектам.Количество()-1 Цикл
			СтрокаПроекта = ТЗДолиПоПроектам[К];
			
			Движение = ТабДвижений.Добавить();
			Движение.Период = Выборка.СчетНаОплату.ПериодПлатежа;
			Движение.Активность = Истина;
			Движение.Регистратор = Документ;
			Движение.Контрагент =  Выборка.Контрагент;
			Движение.ДоговорКонтрагента =  Выборка.ДоговорКонтрагента;
			Движение.ФактОперФакт =  Перечисления.абс_ФактОперФакт.ОперФакт;
			Движение.ПриходРасход =  Перечисления.ВидыДвиженийПриходРасход.Расход;
			Движение.ОплатаАванс =  Перечисления.ВидыОтчетовПоПлатежамКомиссия.Оплата;
			 
		    Движение.Проект = СтрокаПроекта.Проект;
			
			Движение.Сумма = РаспределениеВал[К];
			Движение.СуммаРегл = РаспределениеРег[К];

		КонецЦикла;
	
	КонецЦикла;
	
	Возврат ТабДвижений.Количество() > 0;
	
КонецФункции

// Для запуска регламентным заданием
Процедура РасчетОперативныхПлановПоПроектам() Экспорт 
	
	ТекстСообщения = "Начат автоматический пересчет оперативно-плановых данных по проектам";
	ЗаписьЖурналаРегистрации("Расчет оперативно-плановых данных", УровеньЖурналаРегистрации.Информация, , ,ТекстСообщения);
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_УсловияОплатыПоДоговорамСрезПоследних.ДоговорКонтрагента
	|ИЗ
	|	РегистрСведений.абс_УсловияОплатыПоДоговорам.СрезПоследних КАК абс_УсловияОплатыПоДоговорамСрезПоследних
	|ГДЕ
	|	(НЕ абс_УсловияОплатыПоДоговорамСрезПоследних.ДоговорКонтрагента = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|
	|СГРУППИРОВАТЬ ПО
	|	абс_УсловияОплатыПоДоговорамСрезПоследних.ДоговорКонтрагента";
	ВыборкаДоговоров = Запрос.Выполнить().Выбрать();
	ОбработкаРасчета = Обработки.абс_РасчетОперативныхПланов.Создать();
	Пока ВыборкаДоговоров.Следующий() Цикл 
		ОбработкаРасчета.ДоговорКонтрагента = ВыборкаДоговоров.ДоговорКонтрагента;
		ОбработкаРасчета.КоличествоДнейОтсрочки = ВыборкаДоговоров.ДоговорКонтрагента.абс_КоличествоДнейОтсрочкиПлатежа;
		ОбработкаРасчета.РаспределатьРазницуОперПлан = Истина;
		ОбработкаРасчета.ПересчитатьОперативноПлановыеДанные();
		#Если Клиент Тогда 
			Состояние("Пересчет оперативно-плановых данных по договору: " + Строка(ВыборкаДоговоров.ДоговорКонтрагента));
		#КонецЕсли
	КонецЦикла;
	
	ТекстСообщения = "Завершен автоматический пересчет оперативно-плановых данных по проектам";
	ЗаписьЖурналаРегистрации("Расчет оперативно-плановых данных", УровеньЖурналаРегистрации.Информация, , ,ТекстСообщения);
	
КонецПроцедуры
//-------------------------------------------------------------------
//абс_Стрельцов-

//АБС Пугачев
Функция ПолучитьПроектДоговора(Договор) Экспорт
	
	ТаблицаПроектов = Договор.абс_Проекты.Выгрузить();
	КоличествоПроектов = ТаблицаПроектов.Количество();
	Если КоличествоПроектов=0 Тогда
		// проектов нет - возвращаем пустую ссылку
		Возврат Справочники.Проекты.ПустаяСсылка();
	ИначеЕсли КоличествоПроектов=1 Тогда
		// проект один - его и возвращаем
		Возврат ТаблицаПроектов[0].Проект;
	Иначе
		// ищем общего родителя проектов
		ПустойПроект = Справочники.Проекты.ПустаяСсылка();
		МассивПроектов = ТаблицаПроектов.ВыгрузитьКолонку("Проект");
		ТекущийРодитель = МассивПроектов[0].Родитель;
		
		Пока ЗначениеЗаполнено(ТекущийРодитель) Цикл
			ВсеВходят = Истина;
			Для Каждого Проект Из МассивПроектов Цикл
				Если Не Проект.ПринадлежитЭлементу(ТекущийРодитель) Тогда
					ВсеВходят = Ложь;
				КонецЕсли;
			КонецЦикла;
			Если ВсеВходят Тогда
				Возврат ТекущийРодитель;
			Иначе
				ТекущийРодитель = ТекущийРодитель.Родитель;
			КонецЕсли;
		КонецЦикла;
		// нет общего родителя - возвращаем первого непустого родителя
		Для Каждого Проект Из МассивПроектов Цикл
			Если ЗначениеЗаполнено(Проект.Родитель) Тогда
				Возврат Проект.Родитель;
			КонецЕсли;
		КонецЦикла;
		
		// все проекты в корне - возвращаем первый проект
		Возврат МассивПроектов[0];
	КонецЕсли;
	
КонецФункции
//\\АБС Пугачев

//***** Проектный учет. Гетц. Проведение по движениям ДДС зачета аванса (13.06.2013)
Функция ПровестиПТиУПоДДСПоПроектам(Документ, ТабДвижений, ОборотыБюджетов) Экспорт 
	Если Не глЗначениеПеременной("абс_ПроведениеПоМеханизмуПроектногоУчета") Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Контрагент,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.ДоговорКонтрагента,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Регистратор КАК ПоступлениеТоваров,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Документ,
	|	СУММА(РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СуммаРег) КАК СуммаРегл,
	|	СУММА(РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СуммаВзаиморасчетов) КАК Сумма,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОтчетовПоПлатежамКомиссия.ЗачетАванса) КАК ЗачетАванса
	|ПОМЕСТИТЬ втРасчетыПоПриобретению
	|ИЗ
	|	РегистрНакопления.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации КАК РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации
	|ГДЕ
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Регистратор = &ДокументСсылка
	|	И РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СчетОплаты В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамВыданным), ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал))
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Регистратор,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Документ,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Контрагент,
	|	РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровЗаПериод.ПоступлениеТоваров КАК ПоступлениеТоваровСсылка,
	|	ПоступлениеТоваровЗаПериод.ЗачетАванса,
	|	ПоступлениеТоваровЗаПериод.Сумма КАК Сумма,
	|	ПоступлениеТоваровЗаПериод.СуммаРегл КАК СуммаРегл,
	|	ПоступлениеТоваровЗаПериод.Документ,
	|	ПоступлениеТоваровЗаПериод.Контрагент,
	|	ПоступлениеТоваровЗаПериод.ДоговорКонтрагента
	|ИЗ
	|	втРасчетыПоПриобретению КАК ПоступлениеТоваровЗаПериод");
	
    Запрос.УстановитьПараметр("ДокументСсылка", Документ.Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();
	
	ТЗДолиПоПроектам = ОборотыБюджетов.Скопировать(, "Проект, СуммаУпр");
	ТЗДолиПоПроектам.Колонки["СуммаУпр"].Имя = "ДоляРаспределения";	
	
	Пока Выборка.Следующий() Цикл	
		
		Если ТЗДолиПоПроектам.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		ИтогКоэфПоПроектам = ТЗДолиПоПроектам.Итог("ДоляРаспределения");
		
		СуммаРег = Выборка.СуммаРегл;
		СуммаВал = Выборка.Сумма;
		
		РаспределениеРег = ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаРег, ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), , Ложь);    //АБС Коломиец 19560 "Ложь"
		РаспределениеВал = ttk_ОбщегоНазначения.РаспределитьПропорционально(СуммаВал, ТЗДолиПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"), , Ложь);
		
		Для К = 0 По ТЗДолиПоПроектам.Количество() - 1 Цикл
			
			СтрокаПроекта = ТЗДолиПоПроектам[К];
			
			Если СуммаРег > 0 Или СуммаВал > 0 Тогда
				
				Движение = ТабДвижений.Добавить();
				Движение.Период = Выборка.ПоступлениеТоваровСсылка.Дата;
				Движение.Активность = Истина;
				Движение.Регистратор = Документ;
				Движение.Контрагент =  Выборка.Контрагент;
				Движение.ДоговорКонтрагента = Выборка.ДоговорКонтрагента;
				Движение.ФактОперФакт =  Перечисления.абс_ФактОперФакт.Факт;
				Движение.ПриходРасход =  Перечисления.ВидыДвиженийПриходРасход.Расход;
				Движение.ОплатаАванс =  Выборка.ЗачетАванса;
				Движение.Документ = Выборка.Документ;
				
				Движение.Проект = СтрокаПроекта.Проект;
				
				Движение.Сумма = РаспределениеВал[К];
				Движение.СуммаРегл = РаспределениеРег[К];
				
			КонецЕсли;			
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабДвижений.Количество() > 0;
КонецФункции
//***** Проектный учет. Гетц.

//АБС ВСТАВКА №36480 НАЧАЛО
Процедура абс_РеклассификацияБюджетаОчиститьДвижения(Ссылка) Экспорт
	
	НаборЗаписей = РегистрыНакопления.ОборотыБюджетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.абс_УстановкаЛимитовПоСтатьям.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
	НаборЗаписей.Записать();
	
	//Документ.Движения.ОборотыБюджетов.Записывать = Истина;
	//Документ.Движения.ОборотыБюджетов.Очистить();
	//
	//// регистр УстановкаОграниченийПоБюджетам
	//Документ.Движения.абс_УстановкаЛимитовПоСтатьям.Записывать = Истина;
	//Документ.Движения.абс_УстановкаЛимитовПоСтатьям.Очистить();
	//
	//// регистр КонтролируемыеЗначенияБюджетов 
	//Документ.Движения.КонтролируемыеЗначенияБюджетов.Записывать = Истина;
	//Документ.Движения.КонтролируемыеЗначенияБюджетов.Очистить();
	
КонецПроцедуры	

Функция ПостроитьЗапросПоОстаткам(СтруктураПолей,Валюта, ТолькоИнформацияОНаличииЛимита = Ложь, Сценарий = Неопределено, СценарийШапка = Ложь, ЭтоДДС = Ложь) Экспорт
	
	//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
	КВпоПост = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");
	ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
	ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
	ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
	// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

	мВалютаРеглУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
	
	Если Валюта =мВалютаРеглУчета Тогда
		РесурсПлан = "СуммаУпрОборот";
		РесурсЛимитКонтроль = "СуммаСценарияКонтрольОборот";
		РесурсЛимитИсполнение = "СуммаСценарияИсполнениеОборот";
	Иначе
		РесурсПлан = "ВалютнаяСуммаОборот";
		РесурсЛимитКонтроль = "СуммаСценарияКонтрольВалОборот";
		РесурсЛимитИсполнение = "СуммаСценарияИсполнениеВалОборот";		
	КонецЕсли;       	
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьЛимит",Ложь);
	ТаблицаЛимитов = Новый ТаблицаЗначений;
	Результат.Вставить("ТаблицаЛимитов",ТаблицаЛимитов);
	Результат.Вставить("СуммаПлан",0);
	Результат.Вставить("СуммаЛимита",0);
	Результат.Вставить("СуммаОстатокЛимита",0);
	
	
	СтруктураАналитик = НОВЫЙ Структура;
	СтруктураАналитик.Вставить("Организация",СтруктураПолей.Организация);
	СтруктураАналитик.Вставить("абс_ЦФУ", СтруктураПолей.ЦФУ);
	СтруктураАналитик.Вставить("ЦФО", СтруктураПолей.ЦФО);
	СтруктураАналитик.Вставить("абс_ТипРасхода", СтруктураПолей.ТипРасхода);
	// АБС ВСТАВКА 20120205 Отключаем контроль по аналитике "Тип контрагента", "Тип сети"
	// Инициатор: Калымкин
	//ххх Брель Виктор Андреевич 21.06.2018 15:40:26, заявка 77356750<<<
	// абс_КВ
	Если СтруктураПолей.СтатьяОборотов <> КВпоПост Тогда
		СтруктураАналитик.Вставить("абс_КВ",Справочники.абс_КапитальныеВложения.ПустаяСсылка());
	Иначе
		СтруктураАналитик.Вставить("абс_КВ", СтруктураПолей.КВ); 	
	КонецЕсли;
	
	// абс_ТипКонтрагента	
	Если СтруктураПолей.ТипКонтрагента.Родитель <> ТК0101ДЗОТТК И   СтруктураПолей.ТипКонтрагента.Родитель.Родитель <> ТК0101ДЗОТТК И  СтруктураПолей.ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0101ДЗОТТК И 
		СтруктураПолей.ТипКонтрагента.Родитель <> ТК0102ФилиалыТТК И   	СтруктураПолей.ТипКонтрагента.Родитель <> ТК0102ФилиалыТТК И 	СтруктураПолей.ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0102ФилиалыТТК И
		СтруктураПолей.ТипКонтрагента <> ГоловнаяКомпания Тогда
		СтруктураАналитик.Вставить("абс_ТипКонтрагента", Справочники.абс_ТипыКонтрагентов.ПустаяСсылка()); 
	Иначе
		СтруктураАналитик.Вставить("абс_ТипКонтрагента", СтруктураПолей.ТипКонтрагента); 
	КонецЕсли;
	//СтруктураАналитик.Вставить("абс_ТипСети", СтруктураПолей.ТипСети);
	// Брель Виктор Андреевич 21.06.2018 15:40:26 >>>	 
	СтруктураАналитик.Вставить("абс_ТЭО", СтруктураПолей.ТЭО);
	СтруктураАналитик.Вставить("СтатьяОборотов", СтруктураПолей.СтатьяОборотов);
	
	//Бобылев А.А. 12.04.2018 СППР 00-00000066
	Если СтруктураПолей.Свойство("ОбъектБюджетирования") Тогда
		СтруктураАналитик.Вставить("ttk_ОбъектБюджетирования", СтруктураПолей.ОбъектБюджетирования);	
	КонецЕсли;
	//Бобылев А.А.------------------------
	
	//АБС ВСТАВКА №39432 НАЧАЛО «4 марта 2014 г.», Пополитов 	
	Если не ЭтоДДС или (ЭтоДДС и не ЗначениеЗаполнено(Сценарий)) Тогда
		СтруктураАналитик.Вставить("НеСценарий",абс_Бюджетирование.ПолучитьСценарийДляКонтроляДДС(СтруктураПолей.Организация));
	ИначеЕсли ЭтоДДС и ЗначениеЗаполнено(Сценарий) Тогда	
		СтруктураАналитик.Вставить("Сценарий",Сценарий);
	КонецЕсли;
	//\\АБС ВСТАВКА №39432 КОНЕЦ
	
	//АБС НАЧАЛО Задача №08759
	Если СтруктураПолей.Свойство("Проект") Тогда 
		СтруктураАналитик.Вставить("Проект", СтруктураПолей.Проект);
	КонецЕсли;
	//\\АБС КОНЕЦ Задача №08759 
	
	Запрос = Новый Запрос;
	
	СтрокаОтбора = "";
	Для каждого ЭлементСтруктуры из СтруктураАналитик Цикл
		Если ЗначениеЗаполнено(ЭлементСтруктуры.Значение) Тогда
			//АБС НАЧАЛО Задача №08759
			//СтрокаОтбора = СтрокаОтбора+" и "+ ЭлементСтруктуры.Ключ+" = &"+ЭлементСтруктуры.Ключ;
			Если ЭлементСтруктуры.Ключ = "Проект" Тогда
				СтрокаОтбора = СтрокаОтбора+" И "+ЭлементСтруктуры.Ключ+" В(&"+ЭлементСтруктуры.Ключ+")"; 
			ИначеЕсли ЭлементСтруктуры.Ключ = "НеСценарий" Тогда
				СтрокаОтбора = СтрокаОтбора+" И ("+?(ЭтоДДС,"","НЕ")+" Сценарий В (&НеСценарий))"; 				
			Иначе
				СтрокаОтбора = СтрокаОтбора+" И "+ЭлементСтруктуры.Ключ+"=&"+ЭлементСтруктуры.Ключ; 
			КонецЕсли;
			//\\АБС КОНЕЦ Задача №08759
			Запрос.УстановитьПараметр(ЭлементСтруктуры.Ключ,ЭлементСтруктуры.Значение);
		КонецЕсли;
		
	КонецЦикла;
	СтрокаОтбора = Сред(СтрокаОтбора,3);
	
	СтруктураСценариев = ПолучитьСтруктуСценариевПоОрганизации(СтруктураПолей.Организация);  	
	Если Не СценарийШапка Тогда      //АБС Коломиец 13573
		Если СтруктураАналитик.СтатьяОборотов = Справочники.СтатьиОборотовПоБюджетам.НайтиПоНаименованию("Единая статья КВ") Тогда
			Сценарий = СтруктураСценариев.СценарийКВПлан;
		Иначе
			Сценарий = СтруктураСценариев.СценарийПоставка;
		КонецЕсли; 		
	КонецЕсли; 
	
	//Бобылев А.А. 12.04.2018 СППР 00-00000066 
	Запрос.УстановитьПараметр("Сценарий",Сценарий);
	Запрос.УстановитьПараметр("ДатаНач",СтруктураПолей.НачалоПериода);
	Запрос.УстановитьПараметр("ДатаКон",СтруктураПолей.КонецПериода);
	
	//Запрос.Текст = 
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.СтатьяОборотов,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.ЦФО,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.абс_ТипКонтрагента КАК ТипКонтрагента,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.абс_ТипСети КАК ТипСети,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.абс_КВ КАК КВ,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.абс_ТЭО КАК ТЭО,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.абс_ЦФУ КАК ЦФУ,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.абс_ТипРасхода КАК ТипРасхода,
	//|	абс_УстановкаЛимитовПоСтатьямСрезПоследних.Организация
	//|ИЗ
	//|	РегистрСведений.абс_УстановкаЛимитовПоСтатьям.СрезПоследних(&ДатаКон, "+СтрокаОтбора+") КАК абс_УстановкаЛимитовПоСтатьямСрезПоследних";
	////"+СтрокаОтбора+"
	//ТаблицаЛимитов = Запрос.Выполнить().Выгрузить();
	//Если ТаблицаЛимитов.Количество()>0 Тогда
	//	Результат.ЕстьЛимит = истина;
	//	Результат.ТаблицаЛимитов = ТаблицаЛимитов.Скопировать();  		
	//Иначе
	//	Результат.ЕстьЛимит = Ложь;
	//КонецЕсли;
	//
	//// АБС ВСТАВКА 20120215 Регистр "Установка лимитов по статьям" отключен,
	//// отключим так же информацию о неустановленном лимите.
	//Результат.ЕстьЛимит = истина;
	//
	//Если ТолькоИнформацияОНаличииЛимита Тогда
	//	возврат Результат;
	//КонецЕсли;
	// Бобылев А.А. 12.04.2018 СППР 00-00000066---------------------------
	
	//// АБС ИЗМЕНЕНО 20120329
	//// По статье "КВ по поставке" лимит контролируем по сценарию "КВ по поставке ПЛАН"
	//Если СтруктураАналитик.СтатьяОборотов = Справочники.СтатьиОборотовПоБюджетам.НайтиПоНаименованию("Единая статья КВ") Тогда
	//	СценарийКВ = Справочники.СценарииПланирования.НайтиПоНаименованию("КВ по поставке ПЛАН");
	//	Запрос.УстановитьПараметр("Сценарий", СценарийКВ);		
	//КонецЕсли;
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(ОборотыБюджетов."+РесурсПлан+", 0)) КАК СуммаПлан,
	|	ОборотыБюджетов.Сценарий
	|ИЗ
	|	РегистрНакопления.ОборотыБюджетов.Обороты(&ДатаНач, &ДатаКон, , "+СтрокаОтбора+") КАК ОборотыБюджетов
	|ГДЕ
	|	ОборотыБюджетов.Сценарий = &Сценарий
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыБюджетов.Сценарий";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.СуммаПлан = Выборка.СуммаПлан;
	Иначе
		Результат.СуммаПлан = 0;
	КонецЕсли;
	
	// На всякий случай восстановим сценарий, возможно его подменили на КВ
	Запрос.УстановитьПараметр("Сценарий", Сценарий);
	// АБС ВСТАВКА 20120329 КОНЕЦ
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СУММА(ЕСТЬNULL(ОборотыБюджетов."+РесурсЛимитКонтроль+", 0)) КАК СуммаЛимита,
	|	СУММА(ЕСТЬNULL(ОборотыБюджетов."+РесурсЛимитИсполнение+", 0)) КАК СуммаЛимитаИсполнение,
	|	ОборотыБюджетов.Контрагент
	|ИЗ
	|	РегистрНакопления.КонтролируемыеЗначенияБюджетов.Обороты(&ДатаНач, &ДатаКон, , "+СтрокаОтбора+") КАК ОборотыБюджетов
	//|ГДЕ
	//|	ОборотыБюджетов.Сценарий = &Сценарий
	|
	|СГРУППИРОВАТЬ ПО
	|	ОборотыБюджетов.Контрагент";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Результат.СуммаЛимита = Выборка.СуммаЛимита;
		Результат.СуммаОстатокЛимита = Выборка.СуммаЛимита - Выборка.СуммаЛимитаИсполнение;
	Иначе
		
		Результат.СуммаЛимита = 0;
		Результат.СуммаОстатокЛимита = 0;
		
	КонецЕсли;
	возврат Результат;
КонецФункции

Функция ПолучитьСтруктуСценариевПоОрганизации(Организация) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_СценарииПланированияОрганизаций.Организация,
	|	абс_СценарииПланированияОрганизаций.СценарийОперФакт,
	|	абс_СценарииПланированияОрганизаций.СценарийФакт,
	|	абс_СценарииПланированияОрганизаций.СценарийКВПлан,
	|	абс_СценарииПланированияОрганизаций.СценарийПоставка
	|ИЗ
	|	РегистрСведений.абс_СценарииПланированияОрганизаций КАК абс_СценарииПланированияОрганизаций
	|ГДЕ
	|	абс_СценарииПланированияОрганизаций.Организация = &Организация");
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Новый Структура("СценарийОперФакт, СценарийФакт, СценарийКВПлан, СценарийПоставка", Выборка.СценарийОперФакт, Выборка.СценарийФакт, Выборка.СценарийКВПлан, Выборка.СценарийПоставка);
		
	КонецЕсли;
	
	Возврат Новый Структура("СценарийОперФакт, СценарийФакт, СценарийКВПлан, СценарийПоставка", 
	глЗначениеПеременной("абс_СценарийДляОперФакта"), 
	глЗначениеПеременной("абс_СценарийДляФакта"), 
	Справочники.СценарииПланирования.НайтиПоНаименованию("КВ по поставке ПЛАН"),
	Справочники.СценарииПланирования.НайтиПоНаименованию("ТД Движение ТМЗ (закупка/поставка)"));
	
КонецФункции

Процедура абс_РеклассификацияБюджетаДобавитьДвижения(Документ, Отказ, мСтруктураПриемник, мСтруктураИсточник,ПереносМеждуПериодами,
														СуммаТек,СуммаЛимитаТек,СуммаВалТек,СуммаЛимитаВалТек,СуммаТекПриемника,СуммаВалТекПриемника, НачислятьЛимит) Экспорт
		            					
	//------------
	//СТОРНО ДВИЖЕНИЯ
	//------------
	//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
	КВпоПост = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");
	ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
	ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
	ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
	// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

	Если ЗначениеЗаполнено(Документ.ДокументОснованиеЗЗ)
		и не Документ.ДокументОснованиеЗЗ.НефиксированнаяСумма
		и не Документ.СписыватьЛимит
		и Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда
		
		врДокументаОснования = Документ.ДокументОснованиеЗЗ.ПолучитьОбъект();
		врДокументаОснования.Движения.КонтролируемыеЗначенияБюджетов.Прочитать();				
		ТаблицаДляОбработки = врДокументаОснования.Движения.КонтролируемыеЗначенияБюджетов.Выгрузить();						
		Если ТаблицаДляОбработки.Количество() > 0 Тогда  				
			Ресурсы   = Метаданные.РегистрыНакопления.КонтролируемыеЗначенияБюджетов.Ресурсы;
			Измерения = Метаданные.РегистрыНакопления.КонтролируемыеЗначенияБюджетов.Измерения;
			ОбщаяТаблицаДляОбработки = ТаблицаДляОбработки.СкопироватьКолонки();			
			Для Каждого СтрокаТЧ Из ТаблицаДляОбработки Цикл
				Если НачалоМесяца(СтрокаТЧ.Период) = НачалоМесяца(Документ.ИсточникПериодМесяц) Тогда 					
					Для Каждого Ресурс Из Ресурсы Цикл
						Если ЗначениеЗаполнено(СтрокаТЧ[Ресурс.Имя]) Тогда
							СтрокаТЧ[Ресурс.Имя] = -СуммаТек; 
						КонецЕсли;	
					КонецЦикла;					
					ЗаполнитьЗначенияСвойств(ОбщаяТаблицаДляОбработки.Добавить(),СтрокаТЧ);					
				КонецЕсли;	
			КонецЦикла;
			
			ПриходТаблицаДляОбработки = ОбщаяТаблицаДляОбработки.Скопировать();
			
			Структура = новый Структура; 			
			Структура.Вставить("Период"              ,мСтруктураПриемник.ПериодМесяц);
			Структура.Вставить("Сценарий"            ,Документ.Сценарий);
			Структура.Вставить("СтатьяОборотов"      ,мСтруктураПриемник.СтатьяОборотов);
			Структура.Вставить("ЦФО"                 ,мСтруктураПриемник.ЦФО);
			Структура.Вставить("Организация"         ,мСтруктураПриемник.Организация);
			Структура.Вставить("абс_ТипКонтрагента"  ,мСтруктураПриемник.ТипКонтрагента);
			Структура.Вставить("абс_ТипСети"         ,мСтруктураПриемник.ТипСети);
			Структура.Вставить("абс_КВ"              ,мСтруктураПриемник.КВ);
			Структура.Вставить("абс_ТЭО"             ,мСтруктураПриемник.ТЭО);
			Структура.Вставить("абс_ЦФУ"             ,мСтруктураПриемник.ЦФУ);
			Структура.Вставить("абс_ТипРасхода"      ,мСтруктураПриемник.ТипРасхода);
			Структура.Вставить("Валюта"              ,Документ.ВалютаДокумента);  
			Структура.Вставить("Проект"              ,мСтруктураПриемник.Проект);  //АБС Коломиец 29955
			//НФС 2018
			Структура.Вставить("ОбъектБюджетирования",мСтруктураПриемник.ОбъектБюджетирования);
			//НФС 2018
						
			Для Каждого СтрокаТЧ Из ПриходТаблицаДляОбработки Цикл				
				СтрокаТЧ["Период"] = НачалоМесяца(Структура["Период"]);				
				Для Каждого Измерение Из Измерения Цикл
					Если ЗначениеЗаполнено(СтрокаТЧ[Измерение.Имя]) Тогда
						СтрокаТЧ[Измерение.Имя] = Структура[Измерение.Имя]; 
					КонецЕсли;	
				КонецЦикла;
				
				Если СтрокаТЧ["СтатьяОборотов"] = КВпоПост Тогда
					СтрокаТЧ["абс_ТЭО"]     = Структура["абс_ТЭО"];	
					СтрокаТЧ["абс_ТипСети"] = Структура["абс_ТипСети"];
					СтрокаТЧ["абс_КВ"]      = Структура["абс_КВ"];
				КонецЕсли;	
				
				Для Каждого Ресурс Из Ресурсы Цикл
					Если ЗначениеЗаполнено(СтрокаТЧ[Ресурс.Имя]) Тогда
						СтрокаТЧ[Ресурс.Имя] = СуммаТек; 
					КонецЕсли;	
				КонецЦикла;				
				ЗаполнитьЗначенияСвойств(ОбщаяТаблицаДляОбработки.Добавить(),СтрокаТЧ);				
			КонецЦикла;				
			//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
			Для Каждого Строка Из ОбщаяТаблицаДляОбработки   Цикл
				Если Строка.СтатьяОборотов <> КВпоПост Тогда
					Строка.абс_КВ = Неопределено;
				КонецЕсли;
				Если Строка.абс_ТипКонтрагента.Родитель <> ТК0101ДЗОТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0101ДЗОТТК  И  Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0101ДЗОТТК И
					Строка.абс_ТипКонтрагента.Родитель <> ТК0102ФилиалыТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0102ФилиалыТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0102ФилиалыТТК И
					Строка.абс_ТипКонтрагента <> ГоловнаяКомпания Тогда
					Строка.абс_ТипКонтрагента 	  = Неопределено;
				КонецЕсли;
			КонецЦикла;
				
			НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Документ);
			НаборЗаписей.Прочитать();
			НаборЗаписейТекДанные = НаборЗаписей.Выгрузить();
			Для каждого СтрокаНабораЗаписей Из НаборЗаписейТекДанные Цикл
				ЗаполнитьЗначенияСвойств(ОбщаяТаблицаДляОбработки.Добавить(),СтрокаНабораЗаписей,,"абс_ТипСети");
			КонецЦикла;	
			НаборЗаписей.Загрузить(ОбщаяТаблицаДляОбработки);
			НаборЗаписей.Записать();
			// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>
		КонецЕсли; 		
	КонецЕсли;
	
	Если Документ.СписыватьЛимит
		и Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда

		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		//сторно
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураИсточник.ПериодМесяц;
		//Движение.Сценарий           = Сценарий; //он не заполнен во многих ЗЗ
		Движение.СтатьяОборотов     = мСтруктураИсточник.СтатьяОборотов;
		Движение.ЦФО                = мСтруктураИсточник.ЦФО;
		Движение.Организация        = мСтруктураИсточник.Организация;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Если мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ   мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
			мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			мСтруктураИсточник.ТипКонтрагента = ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента = мСтруктураИсточник.ТипКонтрагента;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		//Движение.абс_ТипСети        = мСтруктураИсточник.ТипСети;
		
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если мСтруктураИсточник.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = мСтруктураИсточник.КВ;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>

		Движение.абс_ТЭО            = мСтруктураИсточник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураИсточник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураИсточник.ТипРасхода;
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураИсточник.ОбъектБюджетирования;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураИсточник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		Если ЗначениеЗаполнено(Движение.Сценарий) Тогда
			Движение.СуммаСценарияКонтроль      = -СуммаТек;
			Движение.СуммаСценарияКонтрольВал   = -СуммаТек;
		Иначе
			Движение.СуммаСценарияИсполнение    = -СуммаТек;
			Движение.СуммаСценарияИсполнениеВал = -СуммаТек;
		КонецЕсли;
		Движение.Валюта = Документ.ВалютаДокумента;
		НаборЗаписей.Записать();
		
		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		//приход			
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураПриемник.ПериодМесяц;
		//Движение.Сценарий           = Сценарий;
		Движение.СтатьяОборотов     = мСтруктураПриемник.СтатьяОборотов;
		Движение.ЦФО                = мСтруктураПриемник.ЦФО;
		Движение.Организация        = мСтруктураПриемник.Организация;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Если мСтруктураПриемник.ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
			мСтруктураПриемник.ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ   мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			мСтруктураПриемник.ТипКонтрагента = ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента = мСтруктураПриемник.ТипКонтрагента;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>
		//Движение.абс_ТипСети        = мСтруктураПриемник.ТипСети;
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если мСтруктураПриемник.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = мСтруктураПриемник.КВ;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>
		Движение.абс_ТЭО            = мСтруктураПриемник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураПриемник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураПриемник.ТипРасхода;
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураПриемник.ОбъектБюджетирования;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураПриемник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		Если ЗначениеЗаполнено(Движение.Сценарий) Тогда
			Движение.СуммаСценарияКонтроль      = СуммаТек;
			Движение.СуммаСценарияКонтрольВал   = СуммаТек;
		Иначе
			Движение.СуммаСценарияИсполнение    = СуммаТек;
			Движение.СуммаСценарияИсполнениеВал = СуммаТек;
		КонецЕсли;                                   
		Движение.Валюта = Документ.ВалютаДокумента; 
		
		
		НаборЗаписей.Записать();
		
	КонецЕсли;	
	
	/////////////////////////////////
	Если СуммаТек<>0 Тогда
		НаборЗаписей = РегистрыНакопления.ОборотыБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураИсточник.ПериодМесяц;
		Движение.Сценарий           = Документ.Сценарий;
		Движение.ЦФО                = мСтруктураИсточник.ЦФО;
		Движение.СтатьяОборотов     = мСтруктураИсточник.СтатьяОборотов;
		Движение.Валюта             = Документ.ВалютаДокумента;
		Движение.абс_ТипКонтрагента = мСтруктураИсточник.ТипКонтрагента;
		Движение.абс_ТипСети        = мСтруктураИсточник.ТипСети;
		Движение.абс_КВ             = мСтруктураИсточник.КВ;
		Движение.абс_ТЭО            = мСтруктураИсточник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураИсточник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураИсточник.ТипРасхода;
		Движение.Количество         = -Документ.Количество;
		Движение.СуммаУпр           = -СуммаТек;
		Движение.ВалютнаяСумма      = -СуммаВалТек;
		Движение.СуммаСценария      = -СуммаТек;
		Движение.Организация        = мСтруктураИсточник.Организация;
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураИсточник.ОбъектБюджетирования;
		Движение.ttk_Город = мСтруктураИсточник.Город;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураИсточник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		НаборЗаписей.Записать();
	КонецЕсли;
	
	Если СуммаЛимитаТек<>0 и НЕ Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда
		
		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();

		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураИсточник.ПериодМесяц;
		Движение.Сценарий           = Документ.Сценарий;
		Движение.СтатьяОборотов     = мСтруктураИсточник.СтатьяОборотов;
		Движение.ЦФО                = мСтруктураИсточник.ЦФО;
		Движение.Организация        = мСтруктураИсточник.Организация;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Если мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ    мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ
			мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ        			мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ			мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			мСтруктураИсточник.ТипКонтрагента = ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента = мСтруктураИсточник.ТипКонтрагента;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>
		//Движение.абс_ТипСети        = мСтруктураИсточник.ТипСети;
		
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если мСтруктураИсточник.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = мСтруктураИсточник.КВ;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>
		
		Движение.абс_ТЭО            = мСтруктураИсточник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураИсточник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураИсточник.ТипРасхода;
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураИсточник.ОбъектБюджетирования;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураИсточник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		Если ЗначениеЗаполнено(Документ.Сценарий) Тогда
			Движение.СуммаСценарияКонтроль      = -СуммаЛимитаТек;
			Движение.СуммаСценарияКонтрольВал   = -СуммаЛимитаВалТек;
		Иначе
			Движение.СуммаСценарияИсполнение    = -СуммаЛимитаТек;
			Движение.СуммаСценарияИсполнениеВал = -СуммаЛимитаВалТек;
		КонецЕсли;
		Движение.Валюта = Документ.ВалютаДокумента;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	//--------------------
	//НАЧИСЛЕНИЕ
	//--------------------
	//Сторчевой А.Н. 77139911 05.07.2017 {
	Если НЕ НачислятьЛимит Тогда
		Возврат;
	КонецЕсли;
	// } Сторчевой А.Н. 77139911 05.07.2017		
	Если Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами Тогда
		ПереносЛимитовМеждуПериодами = Истина;
	Иначе	
		ПереносЛимитовМеждуПериодами = Ложь;	
	КонецЕсли;
	
	Если (СуммаТек<>0 И Не ПереносМеждуПериодами) ИЛИ (СуммаТекПриемника <> 0 И ПереносМеждуПериодами) Тогда
		
		НаборЗаписей = РегистрыНакопления.ОборотыБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		Движение                    = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураПриемник.ПериодМесяц;
		врФактСценарий              = мСтруктураПриемник.СтатьяОборотов.абс_СценарийФакт;
		Движение.Сценарий           = ?(ПереносЛимитовМеждуПериодами 
												//АБС ВСТАВКА №36840 НАЧАЛО
												или Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуАналитиками
												//\\АБС ВСТАВКА №36840 КОНЕЦ
												,Документ.Сценарий,?(ЗначениеЗаполнено(врФактСценарий),врФактСценарий,Документ.Сценарий));
		Движение.ЦФО                = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФО           ,мСтруктураПриемник.ЦФО);
		Движение.СтатьяОборотов     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.СтатьяОборотов,мСтруктураПриемник.СтатьяОборотов);
		Движение.Валюта             = Документ.ВалютаДокумента;
		Движение.абс_ТипКонтрагента = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипКонтрагента,мСтруктураПриемник.ТипКонтрагента);
		Движение.абс_ТипСети        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипСети       ,мСтруктураПриемник.ТипСети);
		Движение.абс_КВ             = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.КВ            ,мСтруктураПриемник.КВ);
		Движение.абс_ТЭО            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТЭО           ,мСтруктураПриемник.ТЭО);
		Движение.абс_ЦФУ            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФУ           ,мСтруктураПриемник.ЦФУ);
		Движение.абс_ТипРасхода     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипРасхода    ,мСтруктураПриемник.ТипРасхода);
		Движение.Организация        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Организация   ,мСтруктураПриемник.Организация);
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.ОбъектБюджетирования, мСтруктураПриемник.ОбъектБюджетирования);
		//НФС 2018
		
		Если Не ПереносМеждуПериодами Тогда
			Движение.Количество    = Документ.Количество;
			Движение.СуммаУпр      = СуммаТек;
			Движение.ВалютнаяСумма = СуммаВалТек;
			Движение.СуммаСценария = СуммаТек;
		Иначе 
			Движение.Количество    = Документ.Количество;
			Движение.СуммаУпр      = СуммаТекПриемника;
			Движение.ВалютнаяСумма = СуммаВалТекПриемника;
			Движение.СуммаСценария = СуммаТекПриемника;			
		КонецЕсли;
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.Проект, мСтруктураПриемник.Проект);
		//\\АБС КОНЕЦ Задача №08759
		НаборЗаписей.Записать();
	КонецЕсли;
	
	Если (СуммаЛимитаТек<>0 И Не ПереносМеждуПериодами) ИЛИ (СуммаТекПриемника <> 0 И ПереносМеждуПериодами) 
		и НЕ Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда
		Если ЗначениеЗаполнено(Документ.Сценарий) Тогда
			прСценарий = Документ.Сценарий;
			//АБС ВСТАВКА №36480 НАЧАЛО
			Остаток = ПостроитьЗапросПоОстаткам(мСтруктураПриемник,Документ.ВалютаДокумента,Истина, прСценарий); 
			//\\АБС ВСТАВКА №36480 КОНЕЦ
			//АБС Коломиец 13573
			//Остаток = абс_Бюджетирование.ПостроитьЗапросПоОстаткам(мСтруктураПриемник,ВалютаДокумента,Истина, Сценарий);	
			Если НЕ Остаток.ЕстьЛимит Тогда
				//НФС 2018
				//НаборЗаписей = РегистрыСведений.абс_УстановкаЛимитовПоСтатьям.СоздатьНаборЗаписей();
				//НаборЗаписей.Отбор.Регистратор.Установить(Документ);
				//НаборЗаписей.Прочитать();    			
				//Движение = НаборЗаписей.Добавить();
				//Движение.Период             = мСтруктураПриемник.ПериодМесяц;
				//Движение.Сценарий           = Документ.Сценарий;
				//Движение.СтатьяОборотов     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.СтатьяОборотов,мСтруктураПриемник.СтатьяОборотов);
				//Движение.ЦФО                = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФО           ,мСтруктураПриемник.ЦФО);
				//Движение.абс_ТипКонтрагента = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипКонтрагента,мСтруктураПриемник.ТипКонтрагента);
				//Движение.абс_ТипСети        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипСети       ,мСтруктураПриемник.ТипСети);
				//Движение.абс_КВ             = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.КВ            ,мСтруктураПриемник.КВ);
				//Движение.абс_ТЭО            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТЭО           ,мСтруктураПриемник.ТЭО);
				//Движение.абс_ЦФУ            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФУ           ,мСтруктураПриемник.ЦФУ);
				//Движение.абс_ТипРасхода     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипРасхода    ,мСтруктураПриемник.ТипРасхода);
				//Движение.Организация        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Организация   ,мСтруктураПриемник.Организация);
				//НаборЗаписей.Записать();
				//НФС 2018
			КонецЕсли;
		КонецЕсли;
		
		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураПриемник.ПериодМесяц;
		Движение.Сценарий           = Документ.Сценарий;
		Движение.СтатьяОборотов     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.СтатьяОборотов ,мСтруктураПриемник.СтатьяОборотов);
		Движение.ЦФО                = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФО            ,мСтруктураПриемник.ЦФО);
		Движение.Организация        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Организация    ,мСтруктураПриемник.Организация);
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		ТипКонтрагентаПерем = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипКонтрагента ,мСтруктураПриемник.ТипКонтрагента);
		Если ТипКонтрагентаПерем.Родитель = ТК0101ДЗОТТК ИЛИ    ТипКонтрагентаПерем.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ ТипКонтрагентаПерем.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
			ТипКонтрагентаПерем.Родитель = ТК0102ФилиалыТТК ИЛИ  ТипКонтрагентаПерем.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ ТипКонтрагентаПерем.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			ТипКонтрагентаПерем = ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента =  ТипКонтрагентаПерем;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		//Движение.абс_ТипСети        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипСети        ,мСтруктураПриемник.ТипСети);
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если Движение.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.КВ             ,мСтруктураПриемник.КВ);
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>
		Движение.абс_ТЭО            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТЭО            ,мСтруктураПриемник.ТЭО);
		Движение.абс_ЦФУ            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФУ            ,мСтруктураПриемник.ЦФУ);
		Движение.абс_ТипРасхода     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипРасхода     ,мСтруктураПриемник.ТипРасхода);		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.Проект, мСтруктураПриемник.Проект); 
		//\\АБС КОНЕЦ Задача №08759
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.ОбъектБюджетирования, мСтруктураПриемник.ОбъектБюджетирования);
		//НФС 2018		
		
		Если Не ПереносМеждуПериодами Тогда
			Если ЗначениеЗаполнено(Документ.Сценарий) Тогда
				Движение.СуммаСценарияКонтроль      = СуммаЛимитаТек;
				Движение.СуммаСценарияКонтрольВал   = СуммаЛимитаВалТек;
			Иначе
				Движение.СуммаСценарияИсполнение    = СуммаЛимитаТек;
				Движение.СуммаСценарияИсполнениеВал = СуммаЛимитаВалТек;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Документ.Сценарий) Тогда
				Движение.СуммаСценарияКонтроль      = СуммаТекПриемника;
				Движение.СуммаСценарияКонтрольВал   = СуммаВалТекПриемника;
			Иначе
				Движение.СуммаСценарияИсполнение    = СуммаТекПриемника;
				Движение.СуммаСценарияИсполнениеВал = СуммаВалТекПриемника;
			КонецЕсли;
		КонецЕсли;
		Движение.Валюта = Документ.ВалютаДокумента;
		НаборЗаписей.Записать();
	КонецЕсли;
		
КонецПроцедуры

Процедура абс_РеклассификацияБюджетаДобавитьДвиженияДДС(Документ, Отказ, мСтруктураПриемник, мСтруктураИсточник,ПереносМеждуПериодами,
														СуммаТек,СуммаЛимитаТек,СуммаВалТек,СуммаЛимитаВалТек,СуммаТекПриемника,СуммаВалТекПриемника) Экспорт
		            					
	//------------
	//СТОРНО ДВИЖЕНИЯ
	//------------       	
	//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
	КВпоПост = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");
	ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
	ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
	ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
	// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

	БылоСторноЛимитов = Ложь;
	БылоСторноБюджета = Ложь;
	
	Если (ЗначениеЗаполнено(Документ.ДокументОснованиеЗЗ) и ТипЗнч(Документ.ДокументОснованиеЗЗ) = Тип("ДокументСсылка.абс_СчетНаОплату")
		или ЗначениеЗаполнено(Документ.ДокументОснование) и ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.абс_СчетНаОплату"))
		и Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда
		
		//АБС ВСТАВКА №40552 НАЧАЛО «17 апреля 2014 г.», Пополитов
		Если ЗначениеЗаполнено(Документ.ДокументОснование) и ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.абс_СчетНаОплату") Тогда
			мДокументОснование = Документ.ДокументОснование;
		Иначе
			мДокументОснование = Документ.ДокументОснованиеЗЗ;
		КонецЕсли;			
		СписокСценариевДДС = абс_Бюджетирование.ПолучитьСценарийДляКонтроляДДС(мДокументОснование.Организация);
		//\\АБС ВСТАВКА №40552 КОНЕЦ
		
		врДокументаОснования = мДокументОснование.ПолучитьОбъект();				
		абс_СторноДвиженийДДС(Документ,врДокументаОснования,СписокСценариевДДС,Отказ,мСтруктураПриемник, СуммаТек, "КонтролируемыеЗначенияБюджетов",БылоСторноЛимитов);
		абс_СторноДвиженийДДС(Документ,врДокументаОснования,СписокСценариевДДС,Отказ,мСтруктураПриемник, СуммаТек, "ОборотыБюджетов",БылоСторноБюджета);
		
		Возврат;
		
	КонецЕсли;
	
	Если Документ.СписыватьЛимит И Не БылоСторноЛимитов	И Не (ЗначениеЗаполнено(Документ.ДокументОснование) И ТипЗнч(Документ.ДокументОснование) = Тип("ДокументСсылка.абс_СчетНаОплату"))
		И Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда

		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		//сторно
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураИсточник.ПериодМесяц;
		Движение.Сценарий           = мСтруктураИсточник.Сценарий; //он не заполнен во многих ЗЗ
		Движение.СтатьяОборотов     = мСтруктураИсточник.СтатьяОборотов;
		Движение.ЦФО                = мСтруктураИсточник.ЦФО;
		Движение.Организация        = мСтруктураИсточник.Организация;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Если мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ   мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
			мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ  мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			мСтруктураИсточник.ТипКонтрагента= ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента = мСтруктураИсточник.ТипКонтрагента;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		Движение.абс_ТипСети        = мСтруктураИсточник.ТипСети;
		
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если мСтруктураИсточник.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = мСтруктураИсточник.КВ;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>

		Движение.абс_ТЭО            = мСтруктураИсточник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураИсточник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураИсточник.ТипРасхода;
				
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураИсточник.ОбъектБюджетирования;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураИсточник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		Если ЗначениеЗаполнено(Движение.Сценарий) Тогда
			Движение.СуммаСценарияКонтроль      = -СуммаТек;
			Движение.СуммаСценарияКонтрольВал   = -СуммаТек;
		Иначе
			Движение.СуммаСценарияИсполнение    = -СуммаТек;
			Движение.СуммаСценарияИсполнениеВал = -СуммаТек;
		КонецЕсли;
		Движение.Валюта = Документ.ВалютаДокумента;
		НаборЗаписей.Записать();
		
		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		//приход			
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураПриемник.ПериодМесяц;
		Движение.Сценарий           = мСтруктураПриемник.Сценарий;
		Движение.СтатьяОборотов     = мСтруктураПриемник.СтатьяОборотов;
		Движение.ЦФО                = мСтруктураПриемник.ЦФО;
		Движение.Организация        = мСтруктураПриемник.Организация;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Если мСтруктураПриемник.ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ     мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
			мСтруктураПриемник.ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ     	мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ мСтруктураПриемник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			мСтруктураПриемник.ТипКонтрагента= ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента = мСтруктураПриемник.ТипКонтрагента;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		Движение.абс_ТипСети        = мСтруктураПриемник.ТипСети;
			
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если мСтруктураПриемник.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = мСтруктураПриемник.КВ;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>

		Движение.абс_ТЭО            = мСтруктураПриемник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураПриемник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураПриемник.ТипРасхода;		
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураПриемник.ОбъектБюджетирования;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураПриемник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		Если ЗначениеЗаполнено(Движение.Сценарий) Тогда
			Движение.СуммаСценарияКонтроль      = СуммаТек;
			Движение.СуммаСценарияКонтрольВал   = СуммаТек;
		Иначе
			Движение.СуммаСценарияИсполнение    = СуммаТек;
			Движение.СуммаСценарияИсполнениеВал = СуммаТек;
		КонецЕсли;                                   
		Движение.Валюта = Документ.ВалютаДокумента; 		
		НаборЗаписей.Записать();
		
	КонецЕсли;	
	
	/////////////////////////////////
	Если СуммаТек<>0 и не БылоСторноБюджета Тогда
		НаборЗаписей = РегистрыНакопления.ОборотыБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураИсточник.ПериодМесяц;
		Движение.Сценарий           = мСтруктураИсточник.Сценарий;
		Движение.ЦФО                = мСтруктураИсточник.ЦФО;
		Движение.СтатьяОборотов     = мСтруктураИсточник.СтатьяОборотов;
		Движение.Валюта             = Документ.ВалютаДокумента;
		Движение.абс_ТипКонтрагента = мСтруктураИсточник.ТипКонтрагента;
		Движение.абс_ТипСети        = мСтруктураИсточник.ТипСети;
		Движение.абс_КВ             = мСтруктураИсточник.КВ;
		Движение.абс_ТЭО            = мСтруктураИсточник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураИсточник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураИсточник.ТипРасхода;
		Движение.Количество         = -Документ.Количество;
		Движение.СуммаУпр           = -СуммаТек;
		Движение.ВалютнаяСумма      = -СуммаВалТек;
		Движение.СуммаСценария      = -СуммаТек;
		Движение.Организация        = мСтруктураИсточник.Организация; 
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураИсточник.ОбъектБюджетирования;
		Движение.ttk_Город = мСтруктураИсточник.Город;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураИсточник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	Если СуммаЛимитаТек<>0 и НЕ Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда
		
		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();

		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураИсточник.ПериодМесяц;
		Движение.Сценарий           = мСтруктураИсточник.Сценарий;
		Движение.СтатьяОборотов     = мСтруктураИсточник.СтатьяОборотов;
		Движение.ЦФО                = мСтруктураИсточник.ЦФО;
		Движение.Организация        = мСтруктураИсточник.Организация;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Если мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ   мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
			мСтруктураИсточник.ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ    мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ мСтруктураИсточник.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			мСтруктураИсточник.ТипКонтрагента= ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента = мСтруктураИсточник.ТипКонтрагента;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>
		Движение.абс_ТипСети        = мСтруктураИсточник.ТипСети;
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если мСтруктураИсточник.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = мСтруктураИсточник.КВ;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>
		Движение.абс_ТЭО            = мСтруктураИсточник.ТЭО;
		Движение.абс_ЦФУ            = мСтруктураИсточник.ЦФУ;
		Движение.абс_ТипРасхода     = мСтруктураИсточник.ТипРасхода;
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = мСтруктураИсточник.ОбъектБюджетирования;
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = мСтруктураИсточник.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		Если ЗначениеЗаполнено(мСтруктураИсточник.Сценарий) Тогда
			Движение.СуммаСценарияКонтроль      = -СуммаЛимитаТек;
			Движение.СуммаСценарияКонтрольВал   = -СуммаЛимитаВалТек;
		Иначе
			Движение.СуммаСценарияИсполнение    = -СуммаЛимитаТек;
			Движение.СуммаСценарияИсполнениеВал = -СуммаЛимитаВалТек;
		КонецЕсли;
		Движение.Валюта = Документ.ВалютаДокумента;
		НаборЗаписей.Записать();
	КонецЕсли;
	
	//--------------------
	//НАЧИСЛЕНИЕ
	//--------------------
	Если Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами Тогда
		ПереносЛимитовМеждуПериодами = Истина;
	Иначе	
		ПереносЛимитовМеждуПериодами = Ложь;	
	КонецЕсли;
	
	Если (СуммаТек<>0 И Не ПереносМеждуПериодами) ИЛИ (СуммаТекПриемника <> 0 И ПереносМеждуПериодами) Тогда
		
		НаборЗаписей = РегистрыНакопления.ОборотыБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		
		Движение                    = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураПриемник.ПериодМесяц;
		врФактСценарий              = мСтруктураПриемник.СтатьяОборотов.абс_СценарийФакт;
		//Движение.Сценарий           = ?(ПереносЛимитовМеждуПериодами 
		//										//АБС ВСТАВКА №36840 НАЧАЛО
		//										или Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуАналитиками
		//										//\\АБС ВСТАВКА №36840 КОНЕЦ
		//										,мСтруктураПриемник.Сценарий,?(ЗначениеЗаполнено(врФактСценарий),врФактСценарий,мСтруктураПриемник.Сценарий));
		Движение.Сценарий           = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Сценарий      ,мСтруктураПриемник.Сценарий);
		Движение.ЦФО                = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФО           ,мСтруктураПриемник.ЦФО);
		Движение.СтатьяОборотов     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.СтатьяОборотов,мСтруктураПриемник.СтатьяОборотов);
		Движение.Валюта             = Документ.ВалютаДокумента;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		ТипКонтрагентаПерем = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипКонтрагента,мСтруктураПриемник.ТипКонтрагента);
		Если ТипКонтрагентаПерем.Родитель = ТК0101ДЗОТТК ИЛИ  ТипКонтрагентаПерем.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ ТипКонтрагентаПерем.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ
			ТипКонтрагентаПерем.Родитель = ТК0102ФилиалыТТК ИЛИ    ТипКонтрагентаПерем.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ ТипКонтрагентаПерем.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			ТипКонтрагентаПерем = ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента =  ТипКонтрагентаПерем;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		Движение.абс_ТипСети        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипСети       ,мСтруктураПриемник.ТипСети);
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если Движение.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.КВ            ,мСтруктураПриемник.КВ);
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>
		Движение.абс_ТЭО            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТЭО           ,мСтруктураПриемник.ТЭО);
		Движение.абс_ЦФУ            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФУ           ,мСтруктураПриемник.ЦФУ);
		Движение.абс_ТипРасхода     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипРасхода    ,мСтруктураПриемник.ТипРасхода);
		Движение.Организация        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Организация   ,мСтруктураПриемник.Организация);
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.ОбъектБюджетирования, мСтруктураПриемник.ОбъектБюджетирования);
		Движение.ttk_Город = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.Город, мСтруктураПриемник.Город);
		//НФС 2018

		Если Не ПереносМеждуПериодами Тогда
			Движение.Количество    = Документ.Количество;
			Движение.СуммаУпр      = СуммаТек;
			Движение.ВалютнаяСумма = СуммаВалТек;
			Движение.СуммаСценария = СуммаТек;
		Иначе 
			Движение.Количество    = Документ.Количество;
			Движение.СуммаУпр      = СуммаТекПриемника;
			Движение.ВалютнаяСумма = СуммаВалТекПриемника;
			Движение.СуммаСценария = СуммаТекПриемника;			
		КонецЕсли;
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.Проект, мСтруктураПриемник.Проект);
		//\\АБС КОНЕЦ Задача №08759
		НаборЗаписей.Записать();
	КонецЕсли;
	
	Если (СуммаЛимитаТек <> 0 И Не ПереносМеждуПериодами) ИЛИ (СуммаТекПриемника <> 0 И ПереносМеждуПериодами) 
		и НЕ Документ.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета Тогда
		Если ЗначениеЗаполнено(мСтруктураПриемник.Сценарий) Тогда
			прСценарий = мСтруктураПриемник.Сценарий;
			//АБС ВСТАВКА №36480 НАЧАЛО
			Остаток = ПостроитьЗапросПоОстаткам(мСтруктураПриемник,Документ.ВалютаДокумента,Истина, прСценарий); 
			//\\АБС ВСТАВКА №36480 КОНЕЦ
			//АБС Коломиец 13573
			//Остаток = абс_Бюджетирование.ПостроитьЗапросПоОстаткам(мСтруктураПриемник,ВалютаДокумента,Истина, Сценарий);	
			Если НЕ Остаток.ЕстьЛимит Тогда
				//НФС 2018
				//НаборЗаписей = РегистрыСведений.абс_УстановкаЛимитовПоСтатьям.СоздатьНаборЗаписей();
				//НаборЗаписей.Отбор.Регистратор.Установить(Документ);
				//НаборЗаписей.Прочитать();    			
				//Движение = НаборЗаписей.Добавить();
				//Движение.Период             = мСтруктураПриемник.ПериодМесяц;
				//Движение.Сценарий           = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Сценарий      ,мСтруктураПриемник.Сценарий);
				//Движение.СтатьяОборотов     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.СтатьяОборотов,мСтруктураПриемник.СтатьяОборотов);
				//Движение.ЦФО                = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФО           ,мСтруктураПриемник.ЦФО);
				//Движение.абс_ТипКонтрагента = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипКонтрагента,мСтруктураПриемник.ТипКонтрагента);
				//Движение.абс_ТипСети        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипСети       ,мСтруктураПриемник.ТипСети);
				//Движение.абс_КВ             = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.КВ            ,мСтруктураПриемник.КВ);
				//Движение.абс_ТЭО            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТЭО           ,мСтруктураПриемник.ТЭО);
				//Движение.абс_ЦФУ            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФУ           ,мСтруктураПриемник.ЦФУ);
				//Движение.абс_ТипРасхода     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипРасхода    ,мСтруктураПриемник.ТипРасхода);
				//Движение.Организация        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Организация   ,мСтруктураПриемник.Организация);				
				//НаборЗаписей.Записать();
				//НФС 2018
			КонецЕсли;
		КонецЕсли;
		
		НаборЗаписей = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		НаборЗаписей.Прочитать();
		Движение = НаборЗаписей.Добавить();
		Движение.Период             = мСтруктураПриемник.ПериодМесяц;
		Движение.Сценарий           = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Сценарий       ,мСтруктураПриемник.Сценарий);
		Движение.СтатьяОборотов     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.СтатьяОборотов ,мСтруктураПриемник.СтатьяОборотов);
		Движение.ЦФО                = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФО            ,мСтруктураПриемник.ЦФО);
		Движение.Организация        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.Организация    ,мСтруктураПриемник.Организация);
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		ТипКонтрагентаПерем = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипКонтрагента ,мСтруктураПриемник.ТипКонтрагента);
		Если ТипКонтрагентаПерем.Родитель = ТК0101ДЗОТТК ИЛИ  ТипКонтрагентаПерем.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ ТипКонтрагентаПерем.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
			ТипКонтрагентаПерем.Родитель = ТК0102ФилиалыТТК ИЛИ  ТипКонтрагентаПерем.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ ТипКонтрагентаПерем.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			ТипКонтрагентаПерем = ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента =  ТипКонтрагентаПерем;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>
		Движение.абс_ТипСети        = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипСети        ,мСтруктураПриемник.ТипСети);
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если Движение.СтатьяОборотов = КВпоПост Тогда
			Движение.абс_КВ             = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.КВ             ,мСтруктураПриемник.КВ);
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>
		Движение.абс_ТЭО            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТЭО            ,мСтруктураПриемник.ТЭО);
		Движение.абс_ЦФУ            = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ЦФУ            ,мСтруктураПриемник.ЦФУ);
		Движение.абс_ТипРасхода     = ?(ПереносЛимитовМеждуПериодами,мСтруктураИсточник.ТипРасхода     ,мСтруктураПриемник.ТипРасхода);		
		
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.ОбъектБюджетирования, мСтруктураПриемник.ОбъектБюджетирования);
		//НФС 2018
		
		//АБС НАЧАЛО Задача №08759
		Движение.Проект = ?(ПереносЛимитовМеждуПериодами, мСтруктураИсточник.Проект, мСтруктураПриемник.Проект); 
		//\\АБС КОНЕЦ Задача №08759
		
		Если Не ПереносМеждуПериодами Тогда
			Если ЗначениеЗаполнено(мСтруктураПриемник.Сценарий) Тогда
				Движение.СуммаСценарияКонтроль      = СуммаЛимитаТек;
				Движение.СуммаСценарияКонтрольВал   = СуммаЛимитаВалТек;
			Иначе
				Движение.СуммаСценарияИсполнение    = СуммаЛимитаТек;
				Движение.СуммаСценарияИсполнениеВал = СуммаЛимитаВалТек;
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(мСтруктураИсточник.Сценарий) Тогда
				Движение.СуммаСценарияКонтроль      = СуммаТекПриемника;
				Движение.СуммаСценарияКонтрольВал   = СуммаВалТекПриемника;
			Иначе
				Движение.СуммаСценарияИсполнение    = СуммаТекПриемника;
				Движение.СуммаСценарияИсполнениеВал = СуммаВалТекПриемника;
			КонецЕсли;
		КонецЕсли;
		Движение.Валюта = Документ.ВалютаДокумента;
		НаборЗаписей.Записать();
	КонецЕсли;
		
КонецПроцедуры	
Процедура абс_СторноДвиженийДДС(Документ,врДокументаОснования,СписокСценариевДДС,Отказ,мСтруктураПриемник, СуммаТек, ИмяРегистра = "КонтролируемыеЗначенияБюджетов", БылоСторно) Экспорт
	
	врДокументаОснования.Движения[ИмяРегистра].Прочитать();				
	ТаблицаДляОбработки = врДокументаОснования.Движения[ИмяРегистра].Выгрузить();
	//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
	ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
	ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
	ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
	// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

	Если ТаблицаДляОбработки.Количество() > 0 Тогда  	
		
		Ресурсы   = Метаданные.РегистрыНакопления[ИмяРегистра].Ресурсы;
		Измерения = Метаданные.РегистрыНакопления[ИмяРегистра].Измерения;
		ОбщаяТаблицаДляОбработки = ТаблицаДляОбработки.СкопироватьКолонки();
		
		Для Каждого СтрокаТЧ Из ТаблицаДляОбработки Цикл
			Если НачалоМесяца(СтрокаТЧ.Период) = НачалоМесяца(Документ.ИсточникПериодМесяц) 
				и не СписокСценариевДДС.НайтиПоЗначению(СтрокаТЧ.Сценарий) = Неопределено Тогда 
				
				Для Каждого Ресурс Из Ресурсы Цикл
					Если ЗначениеЗаполнено(СтрокаТЧ[Ресурс.Имя]) Тогда
						СтрокаТЧ[Ресурс.Имя] = -СуммаТек; 
					КонецЕсли;	
				КонецЦикла;
				
				СтрокаОбщаяТаблица = ОбщаяТаблицаДляОбработки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаОбщаяТаблица,СтрокаТЧ);
				СтрокаОбщаяТаблица.Период = НачалоМесяца(СтрокаТЧ.Период);
				
			КонецЕсли;	
		КонецЦикла;
		
		ПриходТаблицаДляОбработки = ОбщаяТаблицаДляОбработки.Скопировать();
		
		Структура = новый Структура; 			
		Структура.Вставить("Период"              ,мСтруктураПриемник.ПериодМесяц);
		Структура.Вставить("Сценарий"            ,мСтруктураПриемник.Сценарий);
		Структура.Вставить("СтатьяОборотов"      ,мСтруктураПриемник.СтатьяОборотов);
		Структура.Вставить("ЦФО"                 ,мСтруктураПриемник.ЦФО);
		Структура.Вставить("Организация"         ,мСтруктураПриемник.Организация);
		Структура.Вставить("абс_ТипКонтрагента"  ,мСтруктураПриемник.ТипКонтрагента);
		Структура.Вставить("абс_ТипСети"         ,мСтруктураПриемник.ТипСети);
		Структура.Вставить("абс_КВ"              ,мСтруктураПриемник.КВ);
		Структура.Вставить("абс_ТЭО"             ,мСтруктураПриемник.ТЭО);
		Структура.Вставить("абс_ЦФУ"             ,мСтруктураПриемник.ЦФУ);
		Структура.Вставить("абс_ТипРасхода"      ,мСтруктураПриемник.ТипРасхода);
		Структура.Вставить("Валюта"              ,Документ.ВалютаДокумента);  
		Структура.Вставить("Проект"              ,мСтруктураПриемник.Проект);  //АБС Коломиец 29955
		
		КВпоПост = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");
		
		Для Каждого СтрокаТЧ Из ПриходТаблицаДляОбработки Цикл
			
			СтрокаТЧ["Период"] = НачалоМесяца(Структура["Период"]);
			
			Для Каждого Измерение Из Измерения Цикл
				Если ЗначениеЗаполнено(СтрокаТЧ[Измерение.Имя]) и Структура.Свойство(Измерение.Имя) Тогда
					СтрокаТЧ[Измерение.Имя] = Структура[Измерение.Имя]; 
				КонецЕсли;	
			КонецЦикла;
			
			Если СтрокаТЧ["СтатьяОборотов"] = КВпоПост Тогда
				СтрокаТЧ["абс_ТЭО"]     = Структура["абс_ТЭО"];	
				СтрокаТЧ["абс_ТипСети"] = Структура["абс_ТипСети"];
				СтрокаТЧ["абс_КВ"]      = Структура["абс_КВ"];
			КонецЕсли;	
			
			Для Каждого Ресурс Из Ресурсы Цикл
				Если ЗначениеЗаполнено(СтрокаТЧ[Ресурс.Имя]) Тогда
					СтрокаТЧ[Ресурс.Имя] = СуммаТек; 
				КонецЕсли;	
			КонецЦикла;
			
			ЗаполнитьЗначенияСвойств(ОбщаяТаблицаДляОбработки.Добавить(),СтрокаТЧ);
			
		КонецЦикла;				
		
		Если ЗначениеЗаполнено(ОбщаяТаблицаДляОбработки) Тогда
			БылоСторно = Истина;
		Иначе	
			Возврат;
		КонецЕсли;	
		//ххх Брель Виктор Андреевич 21.06.2018 12:06:52, заявка 77356750 <<<
		Если   ИмяРегистра =  "КонтролируемыеЗначенияБюджетов" Тогда
			Для Каждого Строка Из ОбщаяТаблицаДляОбработки   Цикл
				Если Строка.СтатьяОборотов <> КВпоПост Тогда
					Строка.абс_КВ = Неопределено;
				КонецЕсли;
				Если Строка.абс_ТипКонтрагента.Родитель <> ТК0101ДЗОТТК И    Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0101ДЗОТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0101ДЗОТТК И 
					Строка.абс_ТипКонтрагента.Родитель <> ТК0102ФилиалыТТК И   					Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0102ФилиалыТТК И 					Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0102ФилиалыТТК И
					Строка.абс_ТипКонтрагента <> ГоловнаяКомпания Тогда
					Строка.абс_ТипКонтрагента 	  = Неопределено;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 12:06:52 >>>

		НаборЗаписей = РегистрыНакопления[ИмяРегистра].СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Документ);
		//НаборЗаписей.Прочитать();
		//НаборЗаписейТекДанные = НаборЗаписей.Выгрузить();
		//Для каждого СтрокаНабораЗаписей Из НаборЗаписейТекДанные Цикл
		//	ЗаполнитьЗначенияСвойств(ОбщаяТаблицаДляОбработки.Добавить(),СтрокаНабораЗаписей);	
		//КонецЦикла;	
		НаборЗаписей.Загрузить(ОбщаяТаблицаДляОбработки);
		НаборЗаписей.Записать();			
		
	КонецЕсли; 		
	
КонецПроцедуры	
//\\АБС ВСТАВКА №36480 КОНЕЦ

//АБС ВСТАВКА №45665 НАЧАЛО «18 августа 2014 г.», Пополитов
Функция СписыватьЛимитПоЗЗ(ДокументОснованиеЗЗ) Экспорт
	
	Возврат ЗначениеЗаполнено(ДокументОснованиеЗЗ) и ДокументОснованиеЗЗ.НефиксированнаяСумма;	
	
КонецФункции	
//\\АБС ВСТАВКА №45665 КОНЕЦ
	
// В процедуре заполняется таблица движений по регистру накопления ОборотыБюджетов
//
// Параметры
//  ТабДвижений  - <ТаблицаЗначений> - таблица движений по регистру накопления ОборотыБюджетов
//  Документ     - <ДокументСсылка.ПеремещениеТоваров> - проводимый документ
//  Отказ        - <Булево> - признак проводить документ или нет
//
// {{KM WARE Погорелов В.М. Заявка № 08.10.2015 начало
Процедура ПроведениеПоБюджетуПеремещениеТоваров(ТабДвижений, Документ, Отказ) Экспорт
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ПеремещениеТоваровТовары.Номенклатура,
		|	ПеремещениеТоваровТовары.абс_Проект,
		|	ПеремещениеТоваровТовары.абс_ПроектНовый
		|ИЗ
		|	Документ.ПеремещениеТоваров.Товары КАК ПеремещениеТоваровТовары
		|ГДЕ
		|	ПеремещениеТоваровТовары.Ссылка = &Документ
		|
		|СГРУППИРОВАТЬ ПО
		|	ПеремещениеТоваровТовары.абс_ПроектНовый,
		|	ПеремещениеТоваровТовары.Номенклатура,
		|	ПеремещениеТоваровТовары.абс_Проект
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйДвиженияССубконто.СчетДт КАК СчетДт,
		|	ХозрасчетныйДвиженияССубконто.СчетКт КАК СчетКт,
		|	ХозрасчетныйДвиженияССубконто.Сумма КАК Сумма,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).Организация КАК Организация,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_ЦФУ КАК абс_ЦФУ,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_ЦФО КАК абс_ЦФО,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_БюджетнаяСтатья КАК абс_БюджетнаяСтатья,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).kwr_БюджетнаяСтатьяСторно КАК kwr_БюджетнаяСтатьяСторно,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_ТипКонтрагента КАК абс_ТипКонтрагента,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_КВ КАК абс_КВ,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_ТЭО КАК абс_ТЭО,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйДвиженияССубконто.ВидСубконтоДт1 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт1
		|		КОГДА ХозрасчетныйДвиженияССубконто.ВидСубконтоДт2 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт2
		|		КОГДА ХозрасчетныйДвиженияССубконто.ВидСубконтоДт3 = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура)
		|			ТОГДА ХозрасчетныйДвиженияССубконто.СубконтоДт3
		|	КОНЕЦ КАК Номенклатура,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_ТипСети КАК абс_ТипСети,
		|	ВЫРАЗИТЬ(ХозрасчетныйДвиженияССубконто.Регистратор КАК Документ.ПеремещениеТоваров).абс_ТипРасхода КАК абс_ТипРасхода,
		|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерПроводки,
		|	ЛОЖЬ КАК ЕстьМапинг
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			,
		|			,
		|			Регистратор = &Документ
		|				И (СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриобретениеОбъектовОсновныхСредств)
		|					И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ТоварыНаСкладах)),
		|			,
		|			) КАК ХозрасчетныйДвиженияССубконто
		// {{KM WARE Погорелов В.М. Заявка № 23.11.2015 начало
		|ГДЕ ХозрасчетныйДвиженияССубконто.Сумма <> 0";	
	    // }}KM WARE Погорелов В.М. Заявка № 23.11.2015 окончание
		
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Документ", Документ);
	
	РезультатыЗапроса      = Запрос.ВыполнитьПакет();
	
	Если РезультатыЗапроса[1].Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаПроектов        = РезультатыЗапроса[0].Выгрузить();
	ТаблицаПредварительная = РезультатыЗапроса[1].Выгрузить();
	
	ПроверитьАналитикиПрочихТиповБюджетныхДокументов(Документ, Отказ, ТаблицаПредварительная);
		
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	СценарийВводОперФакт 	= Справочники.СценарииПланирования.НайтиПоНаименованию("2. Опер. факт");
	СценарийВводФакт		= Справочники.СценарииПланирования.НайтиПоНаименованию("ТД по поставке ФАКТ");
	// {{KM WARE Погорелов В.М. Заявка № 23.11.2015 начало
	// Получение 2х сценариев для отражения
	СценарийКВОперФакт 		= Справочники.СценарииПланирования.НайтиПоНаименованию("КВ по поставке ОПЕР ФАКТ");
	СценарийКВФакт			= Справочники.СценарииПланирования.НайтиПоНаименованию("КВ по поставке ФАКТ");
	// }}KM WARE Погорелов В.М. Заявка № 23.11.2015 окончание
	
	Валюта 			        = глЗначениеПеременной("ВалютаРегламентированногоУчета");	
	
	Для Каждого СтрокаТаблицы Из ТаблицаПредварительная Цикл
		
		Для Сч = 1 По 2 Цикл
		
			Движение = ТабДвижений.Добавить();
			Движение.Период             = Документ.Дата;
			// {{KM WARE Погорелов В.М. Заявка № 23.11.2015 начало
			//Движение.Сценарий 			= СценарийВводОперФакт;
			Если Сч = 1 Тогда
				Движение.Сценарий 			= СценарийКВОперФакт;								
			Иначе
				Движение.Сценарий 			= СценарийВводОперФакт;								
			КонецЕсли;
			// }}KM WARE Погорелов В.М. Заявка № 23.11.2015 окончание
			Движение.Валюта 			= Валюта;
			Движение.абс_ЦФУ 			= СтрокаТаблицы.абс_ЦФУ;
			Движение.ЦФО 				= СтрокаТаблицы.абс_ЦФО;
			Движение.Организация 		= СтрокаТаблицы.Организация;			
			Движение.абс_ТипКонтрагента = СтрокаТаблицы.абс_ТипКонтрагента;
			Движение.абс_ТипСети 		= СтрокаТаблицы.абс_ТипСети;
			Движение.абс_ТЭО 			= СтрокаТаблицы.абс_ТЭО;
			Движение.абс_КВ 			= СтрокаТаблицы.абс_КВ;
			Движение.абс_ТипРасхода 	= СтрокаТаблицы.абс_ТипРасхода;
			
			Проекты = ТаблицаПроектов.НайтиСтроки(Новый Структура("Номенклатура", СтрокаТаблицы.Номенклатура));
            
			Если Сч = 1 Тогда
				
				Если Проекты.Количество() > 0 Тогда
					Движение.Проект 	= Проекты[0].абс_ПроектНовый;
				КонецЕсли;
				Движение.СтатьяОборотов = СтрокаТаблицы.абс_БюджетнаяСтатья;
				Знак 					= 1;
				
			Иначе
				
				Если Проекты.Количество() > 0 Тогда
					Движение.Проект 	= Проекты[0].абс_Проект;
				КонецЕсли;
				Движение.СтатьяОборотов = СтрокаТаблицы.kwr_БюджетнаяСтатьяСторно;
				Знак 					= -1;
				
			КонецЕсли;
			
			// {{KM WARE Погорелов В.М. Заявка № 23.11.2015 начало
			//Если Проекты.Количество() > 0 Тогда
			//	
			//	Если Сч = 1 Тогда
			//		Движение.Проект 	= Проекты[0].абс_ПроектНовый;
			//	Иначе
			//		Движение.Проект 	= Проекты[0].абс_Проект;
			//	КонецЕсли;
			//	
			//КонецЕсли;			
			// }}KM WARE Погорелов В.М. Заявка № 23.11.2015 окончание	
			Движение.ВалютнаяСумма 		= Знак * СтрокаТаблицы.Сумма;
			Движение.СуммаУпр 			= Знак * СтрокаТаблицы.Сумма;
			Движение.СуммаСценария 		= Знак * СтрокаТаблицы.Сумма;			
		
		КонецЦикла;
	    
	КонецЦикла;
	
	// {{KM WARE Погорелов В.М. Заявка № 23.11.2015 начало	
	//ТабДвиженийФакт = ТабДвижений.Скопировать();
	//ТабДвиженийФакт.ЗаполнитьЗначения(СценарийВводФакт,"Сценарий");
	//
	//Для каждого СтрокаТабФакт из ТабДвиженийФакт Цикл
	//	
	//	НоваяСтрока = ТабДвижений.Добавить();		
	//	
	//	ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабФакт);
	//	
	//КонецЦикла;
	// Добавим движения по факту
	ТабДвиженийФакт = ТабДвижений.Скопировать();
	Для каждого СтрокаТабФакт из ТабДвиженийФакт Цикл
		
		НоваяСтрока = ТабДвижений.Добавить();		
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабФакт);
		Если СтрокаТабФакт.СуммаУпр > 0 Тогда
			НоваяСтрока.Сценарий = СценарийКВФакт;									
		Иначе
			НоваяСтрока.Сценарий = СценарийВводФакт;									
		КонецЕсли;
		
	КонецЦикла;
	// }}KM WARE Погорелов В.М. Заявка № 23.11.2015 окончание	
	
КонецПроцедуры// ПроведениеПоБюджетуПеремещениеТоваров() }}KM WARE Погорелов В.М. Заявка № 08.10.2015 окончание
