
Процедура РассчитатьВзносы(ДокументОбъект, ФормаДокумента = Неопределено) Экспорт
	
	Если ДокументОбъект.ИсчисленныеСтраховыеВзносы.Количество() <> 0 Тогда
		
		ТекстВопроса1 = "Текущие данные о взносах будут удалены. Продолжить?";
		Если РаботаСДиалогами.ЗадатьВопрос(ТекстВопроса1, РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
	ДокументОбъект.ИсчисленныеСтраховыеВзносы.Очистить();
	
	Если ФормаДокумента <> Неопределено Тогда
		ФормаДокумента.Обновить();
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	ДокументОбъект.ЗаполнитьИРассчитать(Ложь, Истина);
	
	ОбработкаКомментариев.ПоказатьСообщения();

КонецПроцедуры

Процедура ЗаполнитьИРассчитать(ДокументОбъект, ФормаДокумента) Экспорт
	
	ТабличныеЧасти = ДокументОбъект.Метаданные().ТабличныеЧасти;
	
	СтрокДанных = 0;
	Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		Если ТабличнаяЧасть.Имя = "ФизическиеЛица" Тогда
			Продолжить;	
		КонецЕсли;
		СтрокДанных = СтрокДанных + ДокументОбъект[ТабличнаяЧасть.Имя].Количество();
	КонецЦикла;
	
	Если ЗначениеЗаполнено(СтрокДанных) Тогда
		
		ТекстВопроса1 = "Текущие данные о доходах и взносах будут удалены. Продолжить?";
		Если РаботаСДиалогами.ЗадатьВопрос(ТекстВопроса1, РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
		
	Если ДокументОбъект.ЭтоНовый() Тогда //запишем документ
		Попытка
			ФормаДокумента.ЗаписатьВФорме(РежимЗаписиДокумента.Запись);
		Исключение
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПолучитьПричинуОшибки(ИнформацияОбОшибке()).Описание);
			Возврат 
		КонецПопытки;
	КонецЕсли;
	
	Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
		ДокументОбъект[ТабличнаяЧасть.Имя].Очистить();
	КонецЦикла;
	
	ФормаДокумента.Обновить();
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();

	ДокументОбъект.ЗаполнитьИРассчитать(Истина, Истина);
	
	Если ОбработкаКомментариев.Сообщения.Строки.Количество() = 0 Тогда
		// проверим заполнение табличных частей документа
		ЕстьДанные = Ложь;
		Для каждого ТабличнаяЧасть Из ТабличныеЧасти Цикл
			ЕстьДанные = ЕстьДанные Или ДокументОбъект[ТабличнаяЧасть.Имя].Количество() > 0;
			Если ЕстьДанные Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Не ЕстьДанные Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не обнаружены данные для записи в документ.", , , Перечисления.ВидыСообщений.Информация);
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаКомментариев.ПоказатьСообщения();

КонецПроцедуры

Процедура РассчитатьСкидку(ДокументОбъект, ФормаДокумента) Экспорт
	
	Если ДокументОбъект.НеоблагаемыеСуммыДоходов.Количество() > 0 Тогда
		
		ТекстВопроса1 = "Текущие данные о скидках по материальной помощи будут пересчитаны. Продолжить?";
		Если РаботаСДиалогами.ЗадатьВопрос(ТекстВопроса1, РежимДиалогаВопрос.ДаНет) <> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();

	ДокументОбъект.ЗаполнитьИРассчитать(Истина, Ложь);
	
	Если ОбработкаКомментариев.Сообщения.Строки.Количество() = 0 Тогда
		// проверим заполнение табличных частей документа
		ЕстьДанные = ДокументОбъект.НеоблагаемыеСуммыДоходов.Количество() > 0;
		Если Не ЕстьДанные Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не обнаружены данные для записи в документ.", , , Перечисления.ВидыСообщений.Информация);
		КонецЕсли;
	КонецЕсли;
	
	ОбработкаКомментариев.ПоказатьСообщения();

КонецПроцедуры
