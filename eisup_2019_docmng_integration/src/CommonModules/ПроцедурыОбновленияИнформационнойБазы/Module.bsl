////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры, функции

// общие

// Переписывает реквизиты исправляемых объектов.
//
// Параметры: 
//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Ссылка
//			 остальные поля должны содержать исправленные данные, имена полей 
//           должны соответствовать именам исправляемых реквизитов
//  ТекстСообщения - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбновитьОбъектыПоЗапросу(Запрос = Неопределено, ТекстСообщения = "")

	Если Запрос = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если Клиент Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.Следующий() Цикл
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		ЗаполнитьЗначенияСвойств(Объект,ВыборкаОбъектов);
		#Если Клиент Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
		Объект.Записать();
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Переписывает реквизиты некоторых строк табличной части исправляемых объектов.
//
// Параметры: 
//  Запрос - исполняемый запрос, в котором обязательно присутствуют поля Ссылка и НомерСтроки
//			 остальные поля должны содержать исправленные данные, имена полей 
//           должны соответствовать именам исправляемых реквизитов;
//           кроме того, результат запроса должен быть уорядочен по полю Ссылка
//  ИмяТЧ - строка, имя табличной части объекта
//  ТекстСообщения - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос = Неопределено, ИмяТЧ, ТекстСообщения = "")

	Если Запрос = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если Клиент Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		Объект.ОбменДанными.Загрузка = Истина;
		
		Пока ВыборкаОбъектов.Следующий() Цикл
			СтрокаТЧ = Объект[ИмяТЧ].Найти(ВыборкаОбъектов.НомерСтроки,"НомерСтроки");
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,ВыборкаОбъектов);
			#Если Клиент Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		
		Объект.Записать();
		
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  НаборЗаписей - Регистр<Сведений,...>НаборЗаписей.<Имя> - переписываемый набор записей
//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Регистратор
//			 остальные поля должны соответствовать полям записи заполняемого регистра;
//			 кроме того, результат запроса должен быть упорядочен, 
//			 первое поле упорядочивания - Регистратор
//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ПереписатьНаборыЗаписейПоРегистраторам(НаборЗаписей, Запрос, ТекстЗаголовка)

	#Если Клиент Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если Клиент Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
		Пока ВыборкаРегистраторов.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(),ВыборкаРегистраторов);
			#Если Клиент Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		НаборЗаписей.Записать();
		НаборЗаписей.Очистить();
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// Перезаполняет наборы записей регистраторов исправленными данными и записывает их.
//
// Параметры: 
//  НаборЗаписей - РегистрРасчетаНаборЗаписей.<Имя> - переписываемый набор записей
//  Запрос - исполняемый запрос, в котором обязательно присутствует поле Регистратор
//			 остальные поля должны соответствовать полям записи заполняемого регистра;
//			 кроме того, результат запроса должен быть упорядочен, 
//			 первое поле упорядочивания - Регистратор
//  ТекстЗаголовка - строка, начало сообщения, выводимого в строке состояния
//
// Возвращаемое значение:
//  Нет
//
Процедура ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(НаборЗаписей, ПереписыватьФПД = Истина, Запрос, ТекстЗаголовка)

	#Если Клиент Тогда
		ТекстСообщения = ТекстЗаголовка;
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаРегистраторов = Запрос.Выполнить().Выбрать();
	#Если Клиент Тогда
		ВсегоДоков = ВыборкаРегистраторов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	Пока ВыборкаРегистраторов.СледующийПоЗначениюПоля("Регистратор") Цикл
		НаборЗаписей.Отбор.Регистратор.Установить(ВыборкаРегистраторов.Регистратор);
		Пока ВыборкаРегистраторов.Следующий() Цикл
		    ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(),ВыборкаРегистраторов);
			#Если Клиент Тогда
				Если Номер % 30 = 0 Тогда
					Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
				КонецЕсли;
				Номер = Номер + 1;
			#КонецЕсли
		КонецЦикла;
		НаборЗаписей.Записать(Истина, Ложь, ПереписыватьФПД, Ложь);
		НаборЗаписей.Очистить();
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
КонецПроцедуры

// страховые взносы

Процедура ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,ДатаСведений,ВидТарифа,ПФР,ПФРНакопительная,ФСС,ФФОМС,ТФОМС)

    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = ДатаСведений;
	НоваяСтрока.ВидТарифа = ВидТарифа;
	НоваяСтрока.ПФР = ПФР;
	НоваяСтрока.ПФРНакопительная = ПФРНакопительная;
	НоваяСтрока.ФСС = ФСС;
	НоваяСтрока.ТФОМС = ТФОМС;
	НоваяСтрока.ФФОМС = ФФОМС;

КонецПроцедуры

Процедура ОписатьВидДоходаПоСтраховымВзносам(СпособОтражения, ВходитВБазуПФР, ВходитВБазуФСС, ВходитВБазуФОМС)
	
	Объект = СпособОтражения.ПолучитьОбъект();

	Объект.ВходитВБазуПФР = ВходитВБазуПФР;
	Объект.ВходитВБазуФСС = ВходитВБазуФСС;
	Объект.ВходитВБазуФОМС = ВходитВБазуФОМС;

	Объект.Записать();

КонецПроцедуры

// НДФЛ

Процедура ДобавитьКодДоходаНДФЛ(Код, Наименование, СтавкаНалогообложения)

	СсылкаНаЭлемент = Справочники.ДоходыНДФЛ.НайтиПоКоду(Код);

	Если  СсылкаНаЭлемент.Пустая() Тогда
		Элемент     = Справочники.ДоходыНДФЛ.СоздатьЭлемент();
		Элемент.Код = Код;

	Иначе
		Элемент = СсылкаНаЭлемент.ПолучитьОбъект();

	КонецЕсли;

	Элемент.Наименование     = Наименование;
	Элемент.КодДляОтчетности = Код;
	Элемент.СтавкаНалогообложенияРезидента = СтавкаНалогообложения;

	Элемент.Записать();

КонецПроцедуры

Процедура УстановитьРеквизитыКодаДоходаНДФЛ(КодДохода, СтавкаНалогообложенияРезидента, КодДляОтчетности)

	Объект = КодДохода.ПолучитьОбъект();

	Объект.СтавкаНалогообложенияРезидента = СтавкаНалогообложенияРезидента;
	Объект.КодДляОтчетности               = КодДляОтчетности;

	Объект.Записать();

КонецПроцедуры

Процедура ДобавитьКодВычетаНДФЛ(Код, Код2009 = "", Код2008 = "", Код2007 = "", Наименование, Наименование2008 = "", Наименование2007 = "")

	СсылкаНаЭлемент = Справочники.ВычетыНДФЛ.НайтиПоКоду(Код);

	Если  СсылкаНаЭлемент.Пустая() Тогда
		Элемент     = Справочники.ВычетыНДФЛ.СоздатьЭлемент();
		Элемент.Код = Код;

	Иначе
		Элемент = СсылкаНаЭлемент.ПолучитьОбъект();

	КонецЕсли;

	Элемент.Наименование = Наименование;
	Элемент.Наименование2008 = Наименование2008;
	Элемент.Наименование2007 = Наименование2007;
	Элемент.КодДляОтчетности2009 = Код2009;
	Элемент.КодДляОтчетности2008 = Код2008;
	Элемент.КодДляОтчетности2007 = Код2007;

	Элемент.Записать();

КонецПроцедуры

Процедура ОписатьКодВычетаНДФЛ(СсылкаНаЭлемент, Код2009 = "", Код2008 = "", Код2007 = "", Наименование, Наименование2008 = "", Наименование2007 = "")

	Элемент = СсылкаНаЭлемент.ПолучитьОбъект();

	Элемент.Наименование = Наименование;
	Элемент.Наименование2008 = Наименование2008;
	Элемент.Наименование2007 = Наименование2007;
	Элемент.КодДляОтчетности2009 = Код2009;
	Элемент.КодДляОтчетности2008 = Код2008;
	Элемент.КодДляОтчетности2007 = Код2007;

	Элемент.Записать();

КонецПроцедуры

// Добавляет запись в набор записей регистра "НДФЛВычетыПоДоходам"
//
Процедура ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, КодДохода, ГодовойВычет, НормативЗатрат)

	НоваяЗапись = НаборЗаписей.Добавить();

	НоваяЗапись.Период         = ДатаСведений;
	НоваяЗапись.КодДохода      = КодДохода;
	НоваяЗапись.ГодовойВычет   = ГодовойВычет;
	НоваяЗапись.НормативЗатрат = НормативЗатрат;

КонецПроцедуры

// Добавляет запись в набор записей регистра "НДФЛРазмерВычетов"
//
Процедура ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, КодВычета, Размер, ОграничениеПоДоходам)

	НоваяЗапись = НаборЗаписей.Добавить();

	НоваяЗапись.КодВычета            = КодВычета;
	НоваяЗапись.Период               = ДатаСведений;
	НоваяЗапись.Размер               = Размер;
	НоваяЗапись.ОграничениеПоДоходам = ОграничениеПоДоходам;

КонецПроцедуры

// Выполняет заполнение справочника "ДоходыНДФЛ" 
//
Процедура ЗаполнитьКодыДоходовНДФЛ() Экспорт
	
	Ставка09 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09;
	Ставка13 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13;
	Ставка35 = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35;
	ДоходыНДФЛ = Справочники.ДоходыНДФЛ;
	
	// ОБНОВЛЕНИЕ СПРАВОЧНИКА ДоходыНДФЛ
	
	// Заполнение реквизитов предопределенных элементов
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1010, 			Ставка09, "1010");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1110, 			Ставка09, "1110");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1120, 			Ставка09, "1120");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1200, 			Ставка13, "1200");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1211, 			Ставка13, "1211");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1220, 			Ставка13, "1220");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1240, 			Ставка13, "1240");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1300, 			Ставка13, "1300");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1510, 			Ставка13, "1510");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1520, 			Ставка13, "1520");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1530, 			Ставка13, "1530");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1531, 			Ставка13, "1531");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1532, 			Ставка13, "1532");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1533, 			Ставка13, "1533");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1536, 			Ставка13, "1536");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код1540, 			Ставка13, "1540");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.КодДоходаПоУмолчанию, Ставка13, "2000");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2001, 			Ставка13, "2001");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2010, 			Ставка13, "2010");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2012, 			Ставка13, "2012");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2201, 			Ставка13, "2201");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2202, 			Ставка13, "2202");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2203, 			Ставка13, "2203");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2204, 			Ставка13, "2204");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2205, 			Ставка13, "2205");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2206, 			Ставка13, "2206");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2207, 			Ставка13, "2207");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2208, 			Ставка13, "2208");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2209, 			Ставка13, "2209");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2210, 			Ставка13, "2210");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2220, 			Ставка13, "2220");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2300, 			Ставка13, "2300");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2400, 			Ставка13, "2400");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2530, 			Ставка13, "2530");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2610ПоСтавке13, Ставка13, "2620");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2610ПоСтавке35, Ставка35, "2610");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2640, 			Ставка13, "2640");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2710, 			Ставка13, "2710");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2720, 			Ставка13, "2720");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2730, 			Ставка13, "2730");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2740, 			Ставка35, "2740");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2750, 			Ставка13, "2750");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2760, 			Ставка13, "2760");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2761, 			Ставка13, "2761");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.МатпомощьПриРожденииРебенка,Ставка13, "2762");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2770, 			Ставка13, "2770");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2790, 			Ставка13, "2790");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2791, 			Ставка13, "2791");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2800, 			Ставка13, "2880");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код2900, 			Ставка13, "2900");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код3010, 			Ставка13, "3010");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код3020ПоСтавке13, Ставка13, "3021");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код3020ПоСтавке35, Ставка35, "3020");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код4000, 			Ставка13, "4000");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код4600, 			Ставка13, "4600");
	УстановитьРеквизитыКодаДоходаНДФЛ(ДоходыНДФЛ.Код4800, 			Ставка13, "4800");
	
	// Добавление непредопределенных кодов доходов 
	
	
	// с 1.01.2005 не изменены
	ДобавитьКодДоходаНДФЛ("1400", "Доходы от сдачи в аренду и иного использования имущества (кроме доходов от сдачи в аренду транспортных средств, средств связи, компьютерных сетей)", Ставка13);
	ДобавитьКодДоходаНДФЛ("2510", "Оплата за налогоплательщика товаров, работ, услуг или имущественных прав, в том числе коммунальных услуг, питания, отдыха, обучения в его интересах", Ставка13);
	ДобавитьКодДоходаНДФЛ("2520", "Стоимость товаров, работ, услуг, полученных на безвозмездной основе", Ставка13);
	ДобавитьКодДоходаНДФЛ("2630", "Материальная выгода, полученная от приобретения товаров, работ, услуг у физ. лиц, организаций, явл. взаимозависимыми по отношению к налогоплательщику", Ставка13);
	ДобавитьКодДоходаНДФЛ("2780", "Возмещение (оплата) стоимости приобретенных налогоплательщиком медикаментов в случаях, не подпадающих под действие п. 28 ст. 217 НК РФ", Ставка13);
	
	// введены с 1.01.2005
	ДобавитьКодДоходаНДФЛ("1212", "Доходы в виде денежных (выкупных) сумм, выплачиваемых по договорам страхования при досрочном расторжении договоров страхования", Ставка13);
	
	// введены с 1.01.2006
	ДобавитьКодДоходаНДФЛ("1011", "Проценты (за исключением процентов по облигациям с ипотечным покрытием, эмитированным до 01.01.2007)", Ставка13);
	
	// введены с 1.01.2008
	ДобавитьКодДоходаНДФЛ("1201", "Доходы, полученные в виде страховых выплат по договорам страхования в виде оплаты стоимости санаторно-курортных путевок", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1202", "Доходы, полученные в виде страховых выплат по договорам добровольного страхования жизни (за исключением добровольного пенсионного страхования)", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1203", "Доходы, полученные в виде страховых выплат по договорам добровольного имущественного страхования (включая страхование гражданской ответственности)", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1213", "Доходы в виде денежных (выкупных) сумм при расторжении договора за вычетом сумм страховых взносов, уплаченных по договору добр. пенс. страхования", Ставка13); 
	ДобавитьКодДоходаНДФЛ("1301", "Доходы, полученные от отчуждения авторских или иных смежных прав", Ставка13); 
	
	// ОБНОВЛЕНИЕ РАЗМЕРОВ СКИДОК К ДОХОДАМ
	
	НаборЗаписей = РегистрыСведений.НДФЛВычетыПоДоходам.СоздатьНаборЗаписей();

	ДатаСведений = '20010101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2720, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2730, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2740, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2760, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2770, 2000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2201, 0,	 20);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2202, 0,	 30);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2203, 0,	 40);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2204, 0,	 30);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2205, 0,	 40);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2206, 0,	 25);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2207, 0,	 20);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2208, 0,	 20);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2209, 0,	 30);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код4000, 0,	 20);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код4600, 0,	 20);
	
	ДатаСведений = '20050101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2761, 2000, 0);
	
	ДатаСведений = '20060101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2720, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2730, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2740, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2760, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2770, 4000, 0);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2790, 10000, 0);
	
	ДатаСведений = '20080101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.МатпомощьПриРожденииРебенка, 0, 50000);
	
	ДатаСведений = '20090101';
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код2791, 0, 4300);
	ДобавитьСкидкуКДодохамНДФЛ(НаборЗаписей, ДатаСведений, ДоходыНДФЛ.Код1211, 12000, 0);
	
	// Запишем набор записей в режиме добавления
	НаборЗаписей.Записать(Истина);
	
КонецПроцедуры 

Процедура ЗаполнитьСправочникВычетовНДФЛ()

	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	ДобавитьКодВычетаНДФЛ("620", "620", "620", "620", "Иные суммы, уменьшающие налоговую базу в соответствии с положениями главы 23 Налогового кодекса Российской Федерации", "Иные суммы, уменьшающие налоговую базу", "Иные суммы, уменьшающие налоговую базу");

	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код101, "108", "101", "101", "1000 руб. на каждого ребенка до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта до 24 лет", "600 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей", "600 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет родителям, супругам родителей");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код106, "109", "106", "106", "2000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения, студента до 24 лет, явл. инвалидом I или II группы", "1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей", "1200 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет, являющегося инвалидом I или II группы, родителям, супругам родителей");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код102, "110", "102", "102", "2000 руб. на каждого ребенка единственному родителю (приемному родителю), опекуну, попечителю (начиная с доходов 2009 года)", "1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям", "1200 руб. на каждого ребенка в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента, курсанта в возрасте до 24 лет вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код103, "103", "103", "103", "400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1-2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "400 руб. на налогоплательщика, не относящегося к категориям, перечисленным в пп. 1 - 2 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код104, "104", "104", "104", "500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации", "500 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 2 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код105, "105", "105", "105", "3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации", "3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации", "3000 рублей на налогоплательщика, относящегося к категориям, перечисленным в пп. 1 п. 1 ст. 218 Налогового кодекса Российской Федерации");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код111, "111", "-", "-", "2000 руб. на каждого ребенка родителю (в т.ч приемному) при условии отказа второго родителя (в т.ч. приемного) от получения вычета на этого ребенка", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код107, "112", "107", "107", "4000 руб. на каждого ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, единственному родителю и др.", "2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям", "2400 руб. на каждого ребенка-инвалида в возрасте до 18 лет, на учащегося очной формы обучения, аспиранта, ординатора, студента в возрасте до 24 лет, являющегося инвалидом I или II группы, вдове (вдовцу), одинокому родителю, опекуну или попечителю, приемным родителям");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код113, "113", "-", "-", "4000 руб. на ребенка-инвалида до 18 лет, на учащегося очной формы обучения до 24 лет, явл. инвалидом, при условии отказа от вычета второго родителя", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код306, "306", "-", "-", "Сумма фактически произведенных и документально подтвержденных расходов по приобретению, хранению и реализации паев паевых инвестиционных фондов", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код305, "305", "-", "-", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с заключением, исполнением и с прекращением срочных сделок", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код307, "307", "307", "307", "Сумма расходов на приобретение, реализацию и хранение ценных бумаг, обращающихся на организованном рынке ценных бумаг", "Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)", "Совокупная сумма фактически произведенных налогоплательщиком и документально подтвержденных расходов на приобретение, реализацию и хранение ценных бумаг, включая суммы, с которых был исчислен и уплачен налог при приобретении ценных бумаг в собственность (в том числе получении на безвозмездной основе или с частичной оплатой)");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код308, "308", "-", "-", "Сумма расходов на приобретение реализацию и хранение ценных бумаг, не обращающихся на организованном рынке ценных бумаг", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код309, "309", "-", "-", "Сумма расходов на приобретение реализацию и хранение ценных бумаг, не обр-ся на организованном рынке, но при приобретении отвечавших его требованиям", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код310, "310", "310", "-", "не предоставляется с 1 января 2010 года", "Убыток, полученный в налоговом периоде по операциям купли-продажи ценных бумаг, обращающихся на организованном рынке ценных бумаг", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код311, "311", "313", "311", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории РФ жилого дома, квартиры, комнаты или доли(-ей) в них", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры, комнаты или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 2 000 000 руб.", "Сумма, израсходованная налогоплательщиком на новое строительство либо приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них (кроме сумм, направленных на погашение процентов по целевым займам (кредитам) и фактически израсходованных на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них), в размере фактически произведенных и документально подтвержденных расходов в пределах 1 000 000 руб.");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код312, "312", "312", "312", "Сумма, направленная на погашение процентов по целевым займам (кредитам) на новое строительство или приобретение на территории РФ жилого дома, квартиры", "Сумма, направленная на погашение процентов по целевым займам (кредитам), полученным от кредитных и иных организаций Российской Федерации и фактически израсходованная налогоплательщиком на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них", "Сумма, направленная на погашение процентов по целевым займам (кредитам), полученным от кредитных и иных организаций Российской Федерации и фактически израсходованная налогоплательщиком на новое строительство или приобретение на территории Российской Федерации жилого дома, квартиры или доли (долей) в них");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код319, "319", "-",   "-", "Сумма упл-х пенс-х взносов по договору негосударственного пенсионного обеспечения и/или страх-х взносов по договору добровольного пенсионного страх-ия", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код403, "403", "403", "403", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с выполнением работ (оказанием услуг) по договорам ГПХ", "Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера", "Сумма фактически произведенных и документально подтвержденных расходов, непосредственно связанных с выполнением работ (оказанием услуг) по договорам гражданско-правового характера");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код404, "404", "404", "404", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов", "Сумма фактически произведенных и документально подтвержденных расходов, связанных с получением авторских вознаграждений или вознаграждений за создание, издание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код405, "405", "405", "405", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)", "Сумма в пределах нормативов затрат, связанных с получением авторских вознаграждений и вознаграждений за создание, исполнение или иное использование произведений науки, литературы и искусства, вознаграждений авторам открытий, изобретений и промышленных образцов (в процентах к сумме начисленного дохода)");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код501, "501", "501", "501", "Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей", "Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей", "Вычет из стоимости подарков, полученных от организаций и индивидуальных предпринимателей");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код502, "502", "502", "502", "Вычет из стоимости призов в денежной и натуральной форме на конкурсах и соревнованиях, проводимых в соотв. с решениями Прав-ва РФ и др. органов власти", "Вычет из стоимости призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых в соответствии с решениями Правительства Российской Федерации, Законодательных (представительных) органов государственной власти или представительных органов местного самоуправления", "Вычет из стоимости призов в денежной и натуральной формах, полученных на конкурсах и соревнованиях, проводимых в соответствии с решениями Правительства Российской Федерации, Законодательных (представительных) органов государственной власти или представительных органов местного самоуправления");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код503, "503", "503", "503", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам-пенсионерам", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам, а также бывшим своим работникам, уволившимся в связи с выходом на пенсию по инвалидности или по возрасту");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код504, "504", "504", "504", "Вычет из суммы возмещения (оплаты) работодателями своим работникам, бывшим своим работникам (пенсионерам), а также инвалидам стоимости медикаментов", "Вычет из суммы возмещения (оплаты) работодателями своим работникам, их супругам, родителям и детям, бывшим своим работникам (пенсионерам по возрасту), а также инвалидам стоимости приобретенных ими (для них) медикаментов, назначенных им лечащим врачом", "Вычет из суммы возмещения (оплаты) работодателями своим работникам, их супругам, родителям и детям, бывшим своим работникам (пенсионерам по возрасту), а также инвалидам стоимости приобретенных ими (для них) медикаментов, назначенных им лечащим врачом");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код505, "505", "505", "505", "Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)", "Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)", "Вычет из стоимости выигрышей и призов, полученных на конкурсах, играх и других мероприятиях в целях рекламы товаров (работ, услуг)");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код506, "506", "506", "506", "Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов", "Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов", "Вычет из суммы материальной помощи, оказываемой инвалидам общественными организациями инвалидов");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код507, "507", "507", "507", "Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами, инвалидами ВОВ и приравненных к ним", "Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами Великой Отечественной войны, инвалидами Великой Отечественной войны, вдовами военнослужащих, погибших в период войны с Финляндией, Великой Отечественной войны, войны с Японией, вдовами умерших инвалидов Великой Отечественной войны и бывшими узниками нацистских концлагерей, тюрем и гетто, а также бывшими несовершеннолетними узниками концлагерей, гетто и других мест принудительного содержания, созданных фашистами и их союзниками в период Второй мировой войны", "Вычет из суммы помощи (в денежной и натуральной формах), а также стоимости подарков, полученных ветеранами Великой Отечественной войны, инвалидами Великой Отечественной войны, вдовами военнослужащих, погибших в период войны с Финляндией, Великой Отечественной войны, войны с Японией, вдовами умерших инвалидов Великой Отечественной войны и бывшими узниками нацистских концлагерей, тюрем и гетто, а также бывшими несовершеннолетними узниками концлагерей, гетто и других мест принудительного содержания, созданных фашистами и их союзниками в период Второй мировой войны");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код509, "509", "-",   "-", "Вычет из доходов, полученных работниками в натуральной форме в качестве оплаты труда от организаций - с/х товаропроизводителей и крестьянских х-в", "не предоставлялся", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.МатпомощьПриРожденииРебенка, "508", "508", "-", "Вычет из суммы материальной помощи, оказываемой работодателями своим работникам при рождении (усыновлении, удочерении) ребенка", "Вычет из суммы единовременной материальной помощи, оказываемой работодателями работникам (родителям, усыновителям, опекунам) при рождении (усыновлении, удочерении) ребенка", "не предоставлялся");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код601, "601", "601", "601", "Сумма, уменьшающая налоговую базу по доходам в виде дивидендов", "Сумма, уменьшающая налоговую базу по доходам, полученным в виде дивидендов", "Сумма, уменьшающая налоговую базу по доходам, полученным в виде дивидендов");
	ОписатьКодВычетаНДФЛ(ВычетыНДФЛ.Код607, "607", "-",   "-", "Вычет в сумме уплаченных работодателем страховых взносов за работника на накопительную часть трудовой пенсии, но не более 12000 рублей в год", "не предоставлялся", "не предоставлялся");
	
КонецПроцедуры

// Выполняет заполнение реквизитов справочника "ВычетыНДФЛ" 
//
Процедура ЗаполнитьКодыВычетовНДФЛ() Экспорт
	
	ВычетыНДФЛ = Справочники.ВычетыНДФЛ;
	
	ЗаполнитьСправочникВычетовНДФЛ();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВычетыНДФЛ.Ссылка
	                      |ИЗ
	                      |	Справочник.ВычетыНДФЛ КАК ВычетыНДФЛ
	                      |
	                      |ГДЕ
	                      |	(ВычетыНДФЛ.Предопределенный)");
	
	СписокПредопределенныхКодовВычетов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	НаборЗаписей = РегистрыСведений.НДФЛРазмерВычетов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Период.Использование = Истина;
	НаборЗаписей.Отбор.КодВычета.Использование = Истина;

	НаборЗаписей.Отбор.Период.Значение = '20010101';
	
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20050101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20080101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	НаборЗаписей.Отбор.Период.Значение = '20090101';
	
	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	Для Каждого КодВычета Из СписокПредопределенныхКодовВычетов Цикл
		НаборЗаписей.Отбор.КодВычета.Значение = КодВычета;
		НаборЗаписей.Записать();
	КонецЦикла;

	// Отменим фильтры	
	НаборЗаписей.Отбор.Период.Использование = Ложь;
	НаборЗаписей.Отбор.КодВычета.Использование = Ложь;
	НаборЗаписей.Прочитать();
	
	ДатаСведений = Дата("20010101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101, 300, 20000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 600, 20000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103, 400, 20000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код104, 500, 0);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код105, 3000, 0);
	
	ДатаСведений = Дата("20050101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101,  600, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 1200, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код106, 1200, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код107, 2400, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код311, 1000000, 0);
	
	ДатаСведений = Дата("20080101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код311, 2000000, 0);
	
	ДатаСведений = Дата("20090101");
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код103,  400, 40000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код101, 1000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код102, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код106, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код107, 4000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код111, 2000, 280000);
	ДобавитьРазмерВычетаНДФЛ(НаборЗаписей, ДатаСведений, ВычетыНДФЛ.Код113, 4000, 280000);
	
	// Запишем набор записей в режиме добавления
	НаборЗаписей.Записать();

КонецПроцедуры  

// Процедура заполняет справочники ученых степеней и званий из классификаторов
//
Процедура ЗаполнитьУченыеСтепениИЗвания() Экспорт

	УченыеЗвания = Справочники.УченыеЗвания;
	МакетУченыеЗвания = УченыеЗвания.ПолучитьМакет("КлассификаторУченыеЗвания");
	Для Индекс = 4 По 15 Цикл
		
		Код = СОКРЛП(МакетУченыеЗвания.Область(Индекс, 2, Индекс, 2).Текст);
		Наименование = СОКРЛП(МакетУченыеЗвания.Область(Индекс, 3, Индекс, 3).Текст);
		
		Если Не ЗначениеЗаполнено(Наименование) Тогда
			Продолжить; 
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(УченыеЗвания.НайтиПоНаименованию(Наименование, Истина)) Тогда
			УченыеЗванияОбъект = УченыеЗвания.СоздатьЭлемент();
			УченыеЗванияОбъект.Код = Код;
			УченыеЗванияОбъект.Наименование = Наименование;
			Попытка
				УченыеЗванияОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;	
		
	КонецЦикла;
	
	УченыеСтепени = Справочники.УченыеСтепени;
	МакетУченыеСтепени = УченыеСтепени.ПолучитьМакет("КлассификаторУченыеСтепени");
	Для Индекс = 4 По 5 Цикл
		
		Код = СОКРЛП(МакетУченыеСтепени.Область(Индекс, 2, Индекс, 2).Текст);
		Наименование = СОКРЛП(МакетУченыеСтепени.Область(Индекс, 3, Индекс, 3).Текст);
		
		Если Не ЗначениеЗаполнено(Наименование) Тогда
			Продолжить; 
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(УченыеСтепени.НайтиПоНаименованию(Наименование, Истина)) Тогда
			УченыеСтепениОбъект = УченыеСтепени.СоздатьЭлемент();
			УченыеСтепениОбъект.Код = Код;
			УченыеСтепениОбъект.Наименование = Наименование;
			Попытка
				УченыеСтепениОбъект.Записать();
			Исключение
			КонецПопытки;
		КонецЕсли;	
		
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьУченыеСтепениИЗвания()


// замена ЕСН страховыми взносами

Процедура ЗаполнитьСведенияОРазмерахГосударственныхПособий() Экспорт

	НаборЗаписей = РегистрыСведений.ГосударственныеПособия.СоздатьНаборЗаписей();

	/// На рождение ребёнка
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 4500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриУсыновленииРебенка;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 4500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2005, 1, 1);
	НоваяЗапись.Размер = 6000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриУсыновленииРебенка;
	НоваяЗапись.Период = Дата(2005, 1, 1);
	НоваяЗапись.Размер = 6000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 8000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриУсыновленииРебенка;  // с 2007 года работодатели не выплачивают
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 8000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 8680;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 8840.58;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 9989.86;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриРожденииРебенка;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 10988.85;

	// Постановка на учет в ранние сроки беременности 
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 300;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 325.5;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 331.52;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 374.62;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПриПостановкеНаУчетВРанниеСрокиБеременности;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 412.08;

	// По уходу за ребёнком до 1.5 лет
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 700;


	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 1500;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 3000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 6000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 1627.5;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 3255;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 6510;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 1657.61;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 3315.22;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2008, 7, 1);
	НоваяЗапись.Размер = 6630.44;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 1873.10;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 3746.20;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МаксимумПособияПоУходуЗаРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 7492.40;
	
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПервымРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 2060.41;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.МинимумПособияПоУходуЗаПоследующимРебенкомДоПолутораЛет;
	НоваяЗапись.Период = Дата(2010, 1, 1);
	НоваяЗапись.Размер = 4120.82;

	// По уходу за ребёнком до 3 лет
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ПоУходуЗаРебенкомДо3хЛет;
	НоваяЗапись.Период = Дата(2000, 1, 1);
	НоваяЗапись.Размер = 50;

	// На погребение
	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = Дата(2000, 1, 1);
	НоваяЗапись.Размер = 1000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.ВидПособия = Перечисления.РазмерыГосударственныхПособий.ВСвязиСоСмертью;
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 4000;

	НаборЗаписей.Записать();

	НаборЗаписей = РегистрыСведений.РазмерОграниченияПособияПоНетрудоспособности.СоздатьНаборЗаписей();

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2002, 1, 1);
	НоваяЗапись.Размер = 11700;
	НоваяЗапись.РазмерПоБеременности = 11700;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2005, 1, 1);
	НоваяЗапись.Размер = 12480;
	НоваяЗапись.РазмерПоБеременности = 12480;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2006, 1, 1);
	НоваяЗапись.Размер = 15000;
	НоваяЗапись.РазмерПоБеременности = 15000;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2007, 1, 1);
	НоваяЗапись.Размер = 16125;
	НоваяЗапись.РазмерПоБеременности = 16125;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2007, 9, 1);
	НоваяЗапись.Размер = 16125;
	НоваяЗапись.РазмерПоБеременности = 23400;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2008, 1, 1);
	НоваяЗапись.Размер = 17250;
	НоваяЗапись.РазмерПоБеременности = 23400;

	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период = Дата(2009, 1, 1);
	НоваяЗапись.Размер = 18720;
	НоваяЗапись.РазмерПоБеременности = 25390;
	
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура ЗаполнитьВидыДоходовПоСтраховымВзносам() Экспорт

	СпрВидов = Справочники.ДоходыПоСтраховымВзносам;

	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.РаспределятьПоБазовымНачислениям, Ложь, 	Ложь,   Ложь); 
	
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.НеЯвляетсяОбъектом,		Ложь, 	Ложь, 	Ложь); 
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.НеОблагаетсяЦеликом,	Ложь, 	Ложь,   Ложь); 
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ПособияЗаСчетФСС,		Ложь, 	Ложь,	Ложь);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДенежноеДовольствиеВоеннослужащих,	Ложь, 	Ложь,	Ложь);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДенежноеСодержаниеПрокуроров,		Ложь, 	Истина,	Истина); // ПФР , ФСС, ФОМС
	
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ОблагаетсяЦеликом,				Истина, Истина, Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.Матпомощь,						Истина, Истина,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.МатпомощьПриРожденииРебенка,	Истина, Истина,	Истина);

	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.ДоговорыГПХ,							Истина, Ложь,	Истина); // ПФР , ФСС, ФОМС
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеАудиовизуальныеПроизведения,	Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеГрафическиеПроизведения,		Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеДругиеМузыкальныеПроизведения,	Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеИсполнениеПроизведений,		Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеЛитературныеПроизведения,		Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеМузыкальноСценическиеПроизведение,	Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеНаучныеТруды,					Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеОткрытия,						Истина, Ложь,	Истина);
	ОписатьВидДоходаПоСтраховымВзносам(СпрВидов.АвторскиеСкульптуры,					Истина, Ложь,	Истина);
	
	// ---------------------------------------------------
	// ЗНАЧЕНИЯ СКИДОК К ДОХОДАМ НА 01.01.2010

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Доходы.Ссылка
	|ИЗ
	|	Справочник.ДоходыПоСтраховымВзносам КАК Доходы
	|ГДЕ
	|	Доходы.Предопределенный";

	СписокПредопределенныхКодовДоходов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

	ДатаСведений = '20100101';

	НаборЗаписей = РегистрыСведений.СтраховыеВзносыСкидкиКДоходам.СоздатьНаборЗаписей();

	// Удалим ранее установленные значения на дату сведений по предопределенным элементам
	НаборЗаписей.Отбор.Период.Значение = ДатаСведений;
	НаборЗаписей.Отбор.Период.Использование = Истина;

	НаборЗаписей.Отбор.ВидДохода.ВидСравнения = ВидСравнения.Равно;
	НаборЗаписей.Отбор.ВидДохода.Использование = Истина;
	Для Каждого ВидДохода Из СписокПредопределенныхКодовДоходов Цикл
		НаборЗаписей.Отбор.ВидДохода.Значение = ВидДохода;
		НаборЗаписей.Записать();
	КонецЦикла;

	// Отменим фильтр по кодам доходов перед получением оставшихся записей на дату сведений
	НаборЗаписей.Отбор.ВидДохода.Использование = Ложь;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.Матпомощь;
	НоваяЗапись.ГодоваяСкидка	= 4000;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.МатпомощьПриРожденииРебенка;
	НоваяЗапись.НормативЗатрат	= 50000;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеАудиовизуальныеПроизведения;
	НоваяЗапись.НормативЗатрат	= 30;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеГрафическиеПроизведения;
	НоваяЗапись.НормативЗатрат	= 30;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеДругиеМузыкальныеПроизведения;
	НоваяЗапись.НормативЗатрат	= 25;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеИсполнениеПроизведений;
	НоваяЗапись.НормативЗатрат	= 20;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеЛитературныеПроизведения;
	НоваяЗапись.НормативЗатрат	= 20;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеМузыкальноСценическиеПроизведение;
	НоваяЗапись.НормативЗатрат	= 40;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеНаучныеТруды;
	НоваяЗапись.НормативЗатрат	= 20;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеОткрытия;
	НоваяЗапись.НормативЗатрат	= 30;
 	НоваяЗапись = НаборЗаписей.Добавить();
	НоваяЗапись.Период			= ДатаСведений;
	НоваяЗапись.ВидДохода		= СпрВидов.АвторскиеСкульптуры;
	НоваяЗапись.НормативЗатрат	= 40;
	// Запишем набор записей
	НаборЗаписей.Записать();

КонецПроцедуры

// Выполняет заполнение регистра сведений "ТарифСтраховыхВзносов"
//
Процедура ЗаполнитьСведенияОТарифахСтраховыхВзносов() Экспорт 

	НаборЗаписей = РегистрыСведений.ТарифСтраховыхВзносов.СоздатьНаборЗаписей();
	
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20100101',Перечисления.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим,
			20.0,	6.0,	2.9,	1.1,	2.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20110101',Перечисления.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим,
			26.0,	6.0,	2.9,	2.1,	3.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20100101',Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим,
			14.0,	6.0,	0.0,	0.0,	0.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20110101',Перечисления.ТарифыСтраховыхВзносов.УпрощенныйНалоговыйРежим,
			26.0,	6.0,	2.9,	2.1,	3.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20100101',Перечисления.ТарифыСтраховыхВзносов.ЕНВД,
			14.0,	6.0,	0.0,	0.0,	0.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20110101',Перечисления.ТарифыСтраховыхВзносов.ЕНВД,
			26.0,	6.0,	2.9,	2.1,	3.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20100101',Перечисления.ТарифыСтраховыхВзносов.СельХозПроизводители,
			15.8,	6.0,	1.9,	1.1,	1.2);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20110101',Перечисления.ТарифыСтраховыхВзносов.СельХозПроизводители,
			16.0,	6.0,	1.9,	1.1,	1.2);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20130101',Перечисления.ТарифыСтраховыхВзносов.СельХозПроизводители,
			21.0,	6.0,	2.2,	1.6,	2.1);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20150101',Перечисления.ТарифыСтраховыхВзносов.СельХозПроизводители,
			26.0,	6.0,	2.9,	2.1,	3.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС

	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20100101',Перечисления.ТарифыСтраховыхВзносов.ЕСХН,
			10.3,	6.0,	0.0,	0.0,	0.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20110101',Перечисления.ТарифыСтраховыхВзносов.ЕСХН,
			16.0,	6.0,	1.9,	1.1,	1.2);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20130101',Перечисления.ТарифыСтраховыхВзносов.ЕСХН,
			21.0,	6.0,	2.2,	1.6,	2.1);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20150101',Перечисления.ТарифыСтраховыхВзносов.ЕСХН,
			26.0,	6.0,	2.9,	2.1,	3.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС

	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20100101',Перечисления.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны,
			14.0,	6.0,	0.0,	0.0,	0.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20110101',Перечисления.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны,
			16.0,	6.0,	1.9,	1.1,	1.2);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20130101',Перечисления.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны,
			21.0,	6.0,	2.2,	1.6,	2.1);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20150101',Перечисления.ТарифыСтраховыхВзносов.РезидентТехникоВнедренческойЗоны,
			26.0,	6.0,	2.9,	2.1,	3.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС

	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20100101',Перечисления.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов,
			14.0,	6.0,	0.0,	0.0,	0.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20110101',Перечисления.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов,
			16.0,	6.0,	1.9,	1.1,	1.2);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20130101',Перечисления.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов,
			21.0,	6.0,	2.2,	1.6,	2.1);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС
	ВписатьСтрокуРегистраТарифСтраховыхВзносов(НаборЗаписей,'20150101',Перечисления.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов,
			26.0,	6.0,	2.9,	2.1,	3.0);	// ПФР (всего), ПФРНакопительная, ФСС, ФФОМС, ТФОМС

	НаборЗаписей.Записать();
	
	НаборЗаписей = РегистрыСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СоздатьНаборЗаписей();
    НоваяСтрока = НаборЗаписей.Добавить();
	НоваяСтрока.Период = '20100101';
	НоваяСтрока.Размер = 415000;
	НаборЗаписей.Записать();
	
	
КонецПроцедуры

Процедура ЗаполнитьРасчетнуюБазуСреднегоДляПособий2010() Экспорт

	РасчетыПоСреднему = Новый Массив;
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработку);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуФСС);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоКалендарнымДням);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПоСреднемуЗаработкуДляОтпускаПоШестидневке);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработка);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ДоплатаДоСреднегоЗаработкаФСС);
	РасчетыПоСреднему.Добавить(Перечисления.СпособыРасчетаОплатыТруда.ПособиеПоУходуЗаРебенкомДо1_5Лет);

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетыПоСреднему",РасчетыПоСреднему);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И ДополнительныеНачисленияОрганизаций.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|	И (НЕ ДополнительныеНачисленияОрганизаций.СпособРасчета В (&РасчетыПоСреднему))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка.КодДоходаСтраховыеВзносы = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|	И ДополнительныеНачисленияОрганизаций.ВидРасчета.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И ДополнительныеНачисленияОрганизаций.Ссылка.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.Ссылка.СпособРасчета В (&РасчетыПоСреднему))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL ";
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ОбъектЗаполнения = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010.ПолучитьОбъект();
        ОбъектЗаполнения.ОбменДанными.Загрузка = Истина;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.БазовыеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("БазовыеВидыРасчета", ОбъектЗаполнения.БазовыеВидыРасчета.ВыгрузитьКолонку("ВидРасчета"));
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТВедущие
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета
		|ГДЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|ГДЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка В(&БазовыеВидыРасчета)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ведущие.ВидРасчета
		|ИЗ
		|	ВТВедущие КАК Ведущие
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.ВедущиеВидыРасчета КАК СреднийЗаработокВедущиеВидыРасчета
		|		ПО Ведущие.ВидРасчета = СреднийЗаработокВедущиеВидыРасчета.ВидРасчета
		|			И (СреднийЗаработокВедущиеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоПремиямПособийС2010))
		|ГДЕ
		|	СреднийЗаработокВедущиеВидыРасчета.ВидРасчета ЕСТЬ NULL ";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.ВедущиеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		ОбъектЗаполнения.Записать();
		
	КонецЕсли;
	
	ПериодыОсвобожденияОтРаботы = Новый Массив;
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ГосударственныеОбязанности);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.Простой);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ПростойПоВинеРаботодателя);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыБезОплаты);
	ПериодыОсвобожденияОтРаботы.Добавить(Справочники.КлассификаторИспользованияРабочегоВремени.ОтстранениеОтРаботыСОплатой);
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РасчетыПоСреднему",РасчетыПоСреднему);
	Запрос.УстановитьПараметр("ПериодыОсвобожденияОтРаботы",ПериодыОсвобожденияОтРаботы);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизаций.Ссылка КАК ВидРасчета
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ОсновныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|	И (НЕ ОсновныеНачисленияОрганизаций.СпособРасчета В (&РасчетыПоСреднему))
	|	И (НЕ ОсновныеНачисленияОрганизаций.ОбозначениеВТабелеУчетаРабочегоВремени В (&ПериодыОсвобожденияОтРаботы))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И (НЕ ДополнительныеНачисленияОрганизаций.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия)))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.КодДоходаСтраховыеВзносы В (ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь), ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.СпособРасчета В (&РасчетыПоСреднему))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ОсновныеНачисленияОрганизацийБазовыеВидыРасчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка.КодДоходаСтраховыеВзносы = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|	И ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.ВидРасчета.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL 
	|	И (НЕ ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка.СпособРасчета В (&РасчетыПоСреднему))
	|	И (НЕ ОсновныеНачисленияОрганизацийБазовыеВидыРасчета.Ссылка.ОбозначениеВТабелеУчетаРабочегоВремени В (&ПериодыОсвобожденияОтРаботы))
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка
	|ИЗ
	|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.БазовыеВидыРасчета КАК ДополнительныеНачисленияОрганизаций
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.БазовыеВидыРасчета КАК СреднийЗаработокБазовыеВидыРасчета
	|		ПО ДополнительныеНачисленияОрганизаций.Ссылка = СреднийЗаработокБазовыеВидыРасчета.ВидРасчета
	|			И (СреднийЗаработокБазовыеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
	|ГДЕ
	|	ДополнительныеНачисленияОрганизаций.Ссылка.КодДоходаСтраховыеВзносы = ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|	И ДополнительныеНачисленияОрганизаций.ВидРасчета.КодДоходаСтраховыеВзносы.ВходитВБазуФСС
	|	И (НЕ ДополнительныеНачисленияОрганизаций.Ссылка.ВидПремии В (ЗНАЧЕНИЕ(Перечисление.ВидыПремии.Премия), ЗНАЧЕНИЕ(Перечисление.ВидыПремии.ГодоваяПремия)))
	|	И (НЕ ДополнительныеНачисленияОрганизаций.Ссылка.СпособРасчета В (&РасчетыПоСреднему))
	|	И СреднийЗаработокБазовыеВидыРасчета.ВидРасчета ЕСТЬ NULL "; 
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		ОбъектЗаполнения = ПланыВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010.ПолучитьОбъект();
        ОбъектЗаполнения.ОбменДанными.Загрузка = Истина;
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.БазовыеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		Запрос.УстановитьПараметр("БазовыеВидыРасчета", ОбъектЗаполнения.БазовыеВидыРасчета.ВыгрузитьКолонку("ВидРасчета"));
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета КАК ВидРасчета
		|ПОМЕСТИТЬ ВТВедущие
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета
		|ГДЕ
		|	ДополнительныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ДополнительныеНачисленияОрганизаций КАК ДополнительныеНачисленияОрганизаций
		|ГДЕ
		|	ДополнительныеНачисленияОрганизаций.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций КАК ОсновныеНачисленияОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияОрганизаций.Ссылка В(&БазовыеВидыРасчета)
		|
		|ОБЪЕДИНИТЬ 
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.ВидРасчета
		|ИЗ
		|	ПланВидовРасчета.ОсновныеНачисленияОрганизаций.ВедущиеВидыРасчета КАК ОсновныеНачисленияОрганизацийВедущиеВидыРасчета
		|ГДЕ
		|	ОсновныеНачисленияОрганизацийВедущиеВидыРасчета.Ссылка В(&БазовыеВидыРасчета)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВидРасчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Ведущие.ВидРасчета
		|ИЗ
		|	ВТВедущие КАК Ведущие
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.СреднийЗаработок.ВедущиеВидыРасчета КАК СреднийЗаработокВедущиеВидыРасчета
		|		ПО Ведущие.ВидРасчета = СреднийЗаработокВедущиеВидыРасчета.ВидРасчета
		|			И (СреднийЗаработокВедущиеВидыРасчета.Ссылка = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуПособийС2010))
		|ГДЕ
		|	СреднийЗаработокВедущиеВидыРасчета.ВидРасчета ЕСТЬ NULL ";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ОбъектЗаполнения.ВедущиеВидыРасчета.Добавить(),Выборка);
		КонецЦикла;
		
		ОбъектЗаполнения.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ОбновлениеДокументовПерсучета2010() Экспорт
	
	// Прописываем номера пачек

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АнкетаЗастрахованногоЛица.Ссылка,
	|	АнкетаЗастрахованногоЛица.Номер КАК Номер,
	|	АнкетаЗастрахованногоЛица.Организация КАК Организация,
	|	ГОД(АнкетаЗастрахованногоЛица.Дата) КАК Год,
	|	АнкетаЗастрахованногоЛица.НомерПачки
	|ИЗ
	|	Документ.АнкетаЗастрахованногоЛица КАК АнкетаЗастрахованногоЛица
	|ГДЕ
	|	АнкетаЗастрахованногоЛица.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Ссылка,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Номер,
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация,
	|	ГОД(ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Дата),
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.НомерПачки
	|ИЗ
	|	Документ.ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства КАК ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства
	|ГДЕ
	|	ЗаявлениеОбОбменеДубликатеСтраховогоСвидетельства.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаДСВвПФР.Ссылка,
	|	ПередачаДСВвПФР.Номер,
	|	ПередачаДСВвПФР.Организация,
	|	ГОД(ПередачаДСВвПФР.Дата),
	|	ПередачаДСВвПФР.НомерПачки
	|ИЗ
	|	Документ.ПередачаДСВвПФР КАК ПередачаДСВвПФР
	|ГДЕ
	|	ПередачаДСВвПФР.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Номер,
	|	ПередачаСЗВ4вПФР.Организация,
	|	ГОД(ПередачаСЗВ4вПФР.Дата),
	|	ПередачаСЗВ4вПФР.НомерПачки
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РеестрДСВ3.Ссылка,
	|	РеестрДСВ3.Номер,
	|	РеестрДСВ3.Организация,
	|	ГОД(РеестрДСВ3.Дата),
	|	РеестрДСВ3.НомерПачки
	|ИЗ
	|	Документ.РеестрДСВ3 КАК РеестрДСВ3
	|ГДЕ
	|	РеестрДСВ3.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Ссылка,
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Номер,
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Организация,
	|	ГОД(СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Дата),
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.НомерПачки
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК КАК СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК
	|ГДЕ
	|	СведенияОТрудовомСтажеЗастрахованногоЛицаСЗВК.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Номер,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	ГОД(СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата),
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.НомерПачки
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Год,
	|	Организация,
	|	Номер";
	
	#Если Клиент Тогда
		ТекстСообщения = "Обработка документов перс.учета, часть I";
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	Выборка = Запрос.Выполнить().Выбрать();
	#Если Клиент Тогда
		ВсегоДоков = Выборка.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока Выборка.СледующийПоЗначениюПоля("Год") Цикл
		Пока Выборка.СледующийПоЗначениюПоля("Организация") Цикл
			
			НомерПачки = "";
			Пока Выборка.Следующий() Цикл
				Если Не ЗначениеЗаполнено(Выборка.НомерПачки) Тогда
					ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
					ДокументОбъект.НомерПачки = ПроцедурыПерсонифицированногоУчета.НомерПачкиДокумента(Выборка.Номер);
					ДокументОбъект.ОбменДанными.Загрузка = Истина;
					ДокументОбъект.Записать();
					Если ОбщегоНазначения.ТолькоЦифрыВСтроке(ДокументОбъект.НомерПачки, , Ложь) И НомерПачки < ДокументОбъект.НомерПачки Тогда
						НомерПачки = ДокументОбъект.НомерПачки
					КонецЕсли;
				Иначе 
					Если ОбщегоНазначения.ТолькоЦифрыВСтроке(Выборка.НомерПачки, , Ложь) И НомерПачки < Выборка.НомерПачки Тогда
						НомерПачки = Выборка.НомерПачки
					КонецЕсли;
				КонецЕсли;
				#Если Клиент Тогда
					Если Номер % 30 = 0 Тогда
						Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
					КонецЕсли;
					Номер = Номер + 1;
				#КонецЕсли
			КонецЦикла;
			
			ТекущийНомер = РегламентированнаяОтчетность.ПолучитьСчетчикВыгруженныхФайловПФР(Выборка.Организация, Выборка.Год);
			НомерПачки = Число(НомерПачки);
			Если НомерПачки > ТекущийНомер Тогда
				РегламентированнаяОтчетность.УстановитьСчетчикВыгруженныхФайловПФР(Выборка.Организация, Выборка.Год, НомерПачки);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
	// Обрабатываем данные о стаже
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗаписиОСтажеДляСЗВ4.ФизЛицо КАК ФизЛицо,
	|	ЗаписиОСтажеДляСЗВ4.ОбособленноеПодразделение,
	|	ЗаписиОСтажеДляСЗВ4.КатегорияЗастрахованныхЛиц,
	|	ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи,
	|	ЗаписиОСтажеДляСЗВ4.НомерДополнительнойЗаписи,
	|	ЗаписиОСтажеДляСЗВ4.Год КАК Год,
	|	ЗаписиОСтажеДляСЗВ4.ДатаНачалаПериода,
	|	ЗаписиОСтажеДляСЗВ4.ДатаОкончанияПериода,
	|	ЗаписиОСтажеДляСЗВ4.ОсобыеУсловияТруда,
	|	ЗаписиОСтажеДляСЗВ4.КодПозицииСписка,
	|	ЗаписиОСтажеДляСЗВ4.ОснованиеИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ПервыйПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ВторойПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ТретийПараметрИсчисляемогоСтажа,
	|	ЗаписиОСтажеДляСЗВ4.ОснованиеВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ПервыйПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ВторойПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ТретийПараметрВыслугиЛет,
	|	ЗаписиОСтажеДляСЗВ4.ТерриториальныеУсловия
	|ИЗ
	|	РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтажеДляСЗВ4
	|ГДЕ
	|	ЗаписиОСтажеДляСЗВ4.Год < 2010
	|	И ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Год,
	|	ФизЛицо";
	
	НаборЗаписей = РегистрыСведений.ЗаписиОСтажеДляСЗВ4.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.ФизЛицо.Использование = Истина;
	НаборЗаписей.Отбор.Год.Использование = Истина;
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	
	#Если Клиент Тогда
		ТекстСообщения = "Обработка данных о стаже для перс.учета, часть I";
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	Выборка = Запрос.Выполнить().Выбрать();
	#Если Клиент Тогда
		ВсегоДоков = Выборка.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока Выборка.СледующийПоЗначениюПоля("Год") Цикл
		НаборЗаписей.Отбор.Год.Значение = Выборка.Год;
		Пока Выборка.СледующийПоЗначениюПоля("ФизЛицо") Цикл
			НаборЗаписей.Отбор.ФизЛицо.Значение = Выборка.ФизЛицо;
			Пока Выборка.Следующий() Цикл
				СтрокаНабора = НаборЗаписей.Добавить();
			    ЗаполнитьЗначенияСвойств(СтрокаНабора,Выборка);
				СтрокаНабора.ОтчетныйПериод = Дата(Выборка.Год, 1, 1);
				#Если Клиент Тогда
					Если Номер % 30 = 0 Тогда
						Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
					КонецЕсли;
					Номер = Номер + 1;
				#КонецЕсли
			КонецЦикла;
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
		КонецЦикла;
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ЗаписиОСтажеДляСЗВ4.Год КАК Год
	|ИЗ
	|	РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтажеДляСЗВ4
	|ГДЕ
	|	ЗаписиОСтажеДляСЗВ4.Год >= 2010
	|	И ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)";
	
	ТекстСообщения = "Обработка данных о стаже для перс.учета, часть II";
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	НаборЗаписей = РегистрыСведений.ЗаписиОСтажеДляСЗВ4.СоздатьНаборЗаписей();
	НаборЗаписей.ОбменДанными.Загрузка = Истина;
	НаборЗаписей.Отбор.ОтчетныйПериод.Установить('00010101');
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НаборЗаписей.Отбор.Год.Установить(Выборка.Год);
		НаборЗаписей.Записать();
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли

	// В документах прошлых лет проставляем значения новых реквизитов
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Год,
	|	ПередачаСЗВ4вПФР.Дата КАК Дата,
	|	ПередачаСЗВ4вПФР.Организация КАК Организация,
	|	"""" КАК ТипСведенийСЗВ,
	|	ПередачаСЗВ4вПФР.Руководитель,
	|	ПередачаСЗВ4вПФР.ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Год < 2010
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	ВЫБОР
	|		КОГДА СведенияОТрудовомСтажеИЗаработкеСЗВ4.УдалитьТипСведений = ""ИСХД""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ПЕНСИОННАЯ)
	|	КОНЕЦ,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Руководитель,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ДолжностьРуководителя
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год < 2010
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыРегистра.Ссылка КАК Ссылка,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК Руководитель,
	|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Наименование
	|ПОМЕСТИТЬ ВТДанныеРуководителя
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОтветственныеЛицаОрганизаций.Период) КАК Период,
	|		Документы.Ссылка КАК Ссылка,
	|		Документы.Организация КАК Организация
	|	ИЗ
	|		ВТДокументы КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|			ПО Документы.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|				И Документы.Дата >= ОтветственныеЛицаОрганизаций.Период
	|	ГДЕ
	|		ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|		И Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		Документы.Организация) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО ПериодыРегистра.Период = ОтветственныеЛицаОрганизаций.Период
	|			И ПериодыРегистра.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	2009 КАК Год,
	|	ДАТАВРЕМЯ(2009, 1, 1, 0, 0, 0) КАК ОтчетныйПериод
	|ПОМЕСТИТЬ ВТОтчетныеПериоды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2008,
	|	ДАТАВРЕМЯ(2008, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2007,
	|	ДАТАВРЕМЯ(2007, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2006,
	|	ДАТАВРЕМЯ(2006, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2005,
	|	ДАТАВРЕМЯ(2005, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2004,
	|	ДАТАВРЕМЯ(2004, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2003,
	|	ДАТАВРЕМЯ(2003, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2002,
	|	ДАТАВРЕМЯ(2002, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2001,
	|	ДАТАВРЕМЯ(2001, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	2000,
	|	ДАТАВРЕМЯ(2000, 1, 1, 0, 0, 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка,
	|	Документы.Год,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.Руководитель
	|		ИНАЧЕ Документы.Руководитель
	|	КОНЕЦ КАК Руководитель,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.ДолжностьРуководителя
	|		ИНАЧЕ Документы.ДолжностьРуководителя
	|	КОНЕЦ КАК ДолжностьРуководителя,
	|	Документы.ТипСведенийСЗВ,
	|	ЕСТЬNULL(ОтчетныеПериоды.ОтчетныйПериод, ДАТАВРЕМЯ(2000, 1, 1, 0, 0, 0)) КАК ОтчетныйПериод
	|ИЗ
	|	ВТДокументы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРуководителя КАК ДанныеРуководителя
	|		ПО Документы.Ссылка = ДанныеРуководителя.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОтчетныеПериоды КАК ОтчетныеПериоды
	|		ПО Документы.Год = ОтчетныеПериоды.Год";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов перс.учета, часть II");
	
	// Фиксируем пенсионные документы 2010 года, чтобы их можно было еще раз посмотреть 
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Руководитель,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Проведен
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год = 2010
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.УдалитьТипСведений = ""ПЕНС""
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Дата,
	|	ПередачаСЗВ4вПФР.Организация,
	|	ПередачаСЗВ4вПФР.Руководитель,
	|	ПередачаСЗВ4вПФР.ДолжностьРуководителя
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Проведен
	|	И ПередачаСЗВ4вПФР.Год = 2010
	|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
	|	И ПередачаСЗВ4вПФР.ТипСведений = ""ПЕНС""
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыРегистра.Ссылка КАК Ссылка,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК Руководитель,
	|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Наименование
	|ПОМЕСТИТЬ ВТДанныеРуководителя
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОтветственныеЛицаОрганизаций.Период) КАК Период,
	|		Документы.Ссылка КАК Ссылка,
	|		Документы.Организация КАК Организация
	|	ИЗ
	|		ВТДокументы КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|			ПО Документы.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|				И Документы.Дата >= ОтветственныеЛицаОрганизаций.Период
	|	ГДЕ
	|		ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|		И Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		Документы.Организация) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО ПериодыРегистра.Период = ОтветственныеЛицаОрганизаций.Период
	|			И ПериодыРегистра.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка,
	|	ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0) КАК ОтчетныйПериод,
	|	ИСТИНА КАК СпециальныйДокумент2010года,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.Руководитель
	|		ИНАЧЕ Документы.Руководитель
	|	КОНЕЦ КАК Руководитель,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.ДолжностьРуководителя
	|		ИНАЧЕ Документы.ДолжностьРуководителя
	|	КОНЕЦ КАК ДолжностьРуководителя
	|ИЗ
	|	ВТДокументы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРуководителя КАК ДанныеРуководителя
	|		ПО Документы.Ссылка = ДанныеРуководителя.Ссылка";;
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов перс.учета, часть III");
	
	// Прочие документы 2010 года помечаем на удаление 
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Дата,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Проведен,
	|	ВЫБОР
	|		КОГДА СведенияОТрудовомСтажеИЗаработкеСЗВ4.УдалитьТипСведений = ""ИСХД""
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ПЕНСИОННАЯ)
	|	КОНЕЦ КАК ТипСведенийСЗВ,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Руководитель,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ДолжностьРуководителя
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Год >= 2010
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
	|	И ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.Дата,
	|	ПередачаСЗВ4вПФР.Организация,
	|	ПередачаСЗВ4вПФР.Проведен,
	|	"""",
	|	ПередачаСЗВ4вПФР.Руководитель,
	|	ПередачаСЗВ4вПФР.ДолжностьРуководителя
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Год >= 2010
	|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПериодыРегистра.Ссылка КАК Ссылка,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо КАК Руководитель,
	|	ОтветственныеЛицаОрганизаций.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаОрганизаций.ФизическоеЛицо.Наименование
	|ПОМЕСТИТЬ ВТДанныеРуководителя
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ОтветственныеЛицаОрганизаций.Период) КАК Период,
	|		Документы.Ссылка КАК Ссылка,
	|		Документы.Организация КАК Организация
	|	ИЗ
	|		ВТДокументы КАК Документы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|			ПО Документы.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|				И Документы.Дата >= ОтветственныеЛицаОрганизаций.Период
	|	ГДЕ
	|		ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|		И Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Документы.Ссылка,
	|		Документы.Организация) КАК ПериодыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛицаОрганизаций КАК ОтветственныеЛицаОрганизаций
	|		ПО ПериодыРегистра.Период = ОтветственныеЛицаОрганизаций.Период
	|			И ПериодыРегистра.Организация = ОтветственныеЛицаОрганизаций.СтруктурнаяЕдиница
	|ГДЕ
	|	ОтветственныеЛицаОрганизаций.ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Ссылка,
	|	Документы.ТипСведенийСЗВ,
	|	Документы.Проведен,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.Руководитель
	|		ИНАЧЕ Документы.Руководитель
	|	КОНЕЦ КАК Руководитель,
	|	ВЫБОР
	|		КОГДА Документы.Руководитель = ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)
	|			ТОГДА ДанныеРуководителя.ДолжностьРуководителя
	|		ИНАЧЕ Документы.ДолжностьРуководителя
	|	КОНЕЦ КАК ДолжностьРуководителя,
	|	ДАТАВРЕМЯ(2010, 1, 1, 0, 0, 0) КАК ОтчетныйПериод,
	|	ИСТИНА КАК ПометкаУдаления,
	|	ЛОЖЬ КАК ПринятоВПФР
	|ИЗ
	|	ВТДокументы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеРуководителя КАК ДанныеРуководителя
	|		ПО Документы.Ссылка = ДанныеРуководителя.Ссылка";
	
	ТекстСообщения = "Обработка документов перс.учета, часть IV";
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": подготовка данных ...");
	#КонецЕсли
	ВыборкаОбъектов = Запрос.Выполнить().Выбрать();
	#Если Клиент Тогда
		ВсегоДоков = ВыборкаОбъектов.Количество();
		Номер = 1;
		Состояние(ТекстСообщения + ": обработано 0 из " + ВсегоДоков);
	#КонецЕсли
	Пока ВыборкаОбъектов.Следующий() Цикл
		Объект = ВыборкаОбъектов.Ссылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект,ВыборкаОбъектов,, "Проведен");
		#Если Клиент Тогда
			Если Номер % 30 = 0 Тогда
				Состояние(ТекстСообщения + ": обработано " + Номер + " из " + ВсегоДоков);
			КонецЕсли;
			Номер = Номер + 1;
		#КонецЕсли
		Если ВыборкаОбъектов.Проведен Тогда
			Объект.ОбменДанными.Загрузка = Ложь;
			Объект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
		Иначе
			Объект.ОбменДанными.Загрузка = Истина;
			Объект.Записать();
		КонецЕсли;
	КонецЦикла;
	#Если Клиент Тогда
		Состояние(ТекстСообщения + ": обработано " + ВсегоДоков + " из " + ВсегоДоков);
	#КонецЕсли
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Застрахованные.Ссылка КАК Ссылка,
	|	Застрахованные.ФизЛицо
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК Застрахованные
	|ГДЕ
	|	Застрахованные.СтраховойНомерПФР = """"
	|	И Застрахованные.ФизЛицо.СтраховойНомерПФР <> """"
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество
	|ПОМЕСТИТЬ ВТФИО
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|			&ДатаАктуальности,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					Лица.ФизЛицо КАК ФизЛицо
	|				ИЗ
	|					ВТДокументы КАК Лица)) КАК ФИОФизЛицСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Застрахованные.Ссылка КАК Ссылка,
	|	Застрахованные.НомерСтроки КАК НомерСтроки,
	|	Застрахованные.ФизЛицо,
	|	Застрахованные.АдресДляИнформирования,
	|	ВЫБОР
	|		КОГДА Застрахованные.СтраховойНомерПФР = """"
	|			ТОГДА Застрахованные.ФизЛицо.СтраховойНомерПФР
	|		ИНАЧЕ Застрахованные.СтраховойНомерПФР
	|	КОНЕЦ КАК СтраховойНомерПФР,
	|	ВЫБОР
	|		КОГДА Застрахованные.Фамилия = """"
	|			ТОГДА ЕСТЬNULL(ФИО.Фамилия, """")
	|		ИНАЧЕ Застрахованные.Фамилия
	|	КОНЕЦ КАК Фамилия,
	|	ВЫБОР
	|		КОГДА Застрахованные.Имя = """"
	|			ТОГДА ЕСТЬNULL(ФИО.Имя, """")
	|		ИНАЧЕ Застрахованные.Имя
	|	КОНЕЦ КАК Имя,
	|	ВЫБОР
	|		КОГДА Застрахованные.Отчество = """"
	|			ТОГДА ЕСТЬNULL(ФИО.Отчество, """")
	|		ИНАЧЕ Застрахованные.Отчество
	|	КОНЕЦ КАК Отчество,
	|	Застрахованные.НачисленоСтраховая,
	|	Застрахованные.УплаченоСтраховая,
	|	Застрахованные.НачисленоНакопительная,
	|	Застрахованные.УплаченоНакопительная
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК Застрахованные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
	|		ПО Застрахованные.ФизЛицо = ФИО.ФизЛицо
	|ГДЕ
	|	Застрахованные.Ссылка В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументы КАК Документы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ДатаАктуальности", ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	
	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "РаботникиОрганизации", "Обработка документов перс.учета, часть V");
	
КонецПроцедуры

Процедура ВосстановлениеФлажковВОтпусках() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НачислениеОтпускаРаботникамОрганизаций.Ссылка,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск
	|			ТОГДА НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаОсновногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ОсновнойОтпуск,
	|	ВЫБОР
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск
	|			ТОГДА НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск
	|		КОГДА НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаДополнительногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДополнительныйОтпуск
	|ИЗ
	|	Документ.НачислениеОтпускаРаботникамОрганизаций КАК НачислениеОтпускаРаботникамОрганизаций
	|ГДЕ
	|	(НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаОсновногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И (НЕ НачислениеОтпускаРаботникамОрганизаций.ОсновнойОтпуск)
	|			ИЛИ НачислениеОтпускаРаботникамОрганизаций.ДатаНачалаДополнительногоОтпуска <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И (НЕ НачислениеОтпускаРаботникамОрганизаций.ДополнительныйОтпуск))";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка документов начисления отпуска");

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

// Используется при первоначальном заполнении ИБ
Процедура КодыПерсучета2010() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ПД)
	|			ТОГДА ""27-ПД""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ГД)
	|			ТОГДА ""27-ГД""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ГДХР)
	|			ТОГДА ""27-ГДХР""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_ПДРК)
	|			ТОГДА ""27-ПДРК""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_СМ)
	|			ТОГДА ""27-СМ""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_СМХР)
	|			ТОГДА ""27-СМХР""
	|		КОГДА ОснованияВыслугиЛет.Ссылка = ЗНАЧЕНИЕ(Справочник.ОснованияВыслугиЛет.Ст28_СП)
	|			ТОГДА ""27-СП""
	|		ИНАЧЕ ОснованияВыслугиЛет.Код
	|	КОНЕЦ КАК КодДляОтчетности2010,
	|	ОснованияВыслугиЛет.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ОснованияВыслугиЛет КАК ОснованияВыслугиЛет
	|ГДЕ
	|	ОснованияВыслугиЛет.КодДляОтчетности2010 = """"
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ОсобыеУсловияТруда.Ссылка = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.Ст28_ОС)
	|			ТОГДА ""27-ОС""
	|		КОГДА ОсобыеУсловияТруда.Ссылка = ЗНАЧЕНИЕ(Справочник.ОсобыеУсловияТруда.Ст28_ПЖ)
	|			ТОГДА ""27-ПЖ""
	|		ИНАЧЕ ОсобыеУсловияТруда.Код
	|	КОНЕЦ,
	|	ОсобыеУсловияТруда.Ссылка
	|ИЗ
	|	Справочник.ОсобыеУсловияТруда КАК ОсобыеУсловияТруда
	|ГДЕ
	|	ОсобыеУсловияТруда.КодДляОтчетности2010 = """"
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка";
	
	ОбновитьОбъектыПоЗапросу(Запрос, "Обработка кодов перс.учета");
	
КонецПроцедуры

// Используется при обновлении на функционал ЗУП 2.5.26
//
Процедура ИсправитьКодыДоходовПоПособиям() Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НачисленияПоБольничномуЛисту.Ссылка КАК Ссылка,
	|	НачисленияПоБольничномуЛисту.Ссылка.ПособиеОтражаетсяВРеглУчетеТекущимДокументом
	|ПОМЕСТИТЬ ВТДокументыКОбработке
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.ОтражениеНачислений КАК НачисленияПоБольничномуЛисту
	|ГДЕ
	|	НачисленияПоБольничномуЛисту.КодДоходаЕСН ССЫЛКА Справочник.ДоходыЕСН
	|	И НачисленияПоБольничномуЛисту.Ссылка.ПериодРегистрации >= &ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка";
	Запрос.УстановитьПараметр("ПериодРегистрации", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	Запрос.Выполнить();

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Ссылка КАК Ссылка,
	|	Начисления.НомерСтроки КАК НомерСтроки,
	|	Начисления.СчетДт,
	|	Начисления.СубконтоДт1,
	|	Начисления.СубконтоДт2,
	|	Начисления.СубконтоДт3,
	|	Начисления.СчетКт,
	|	Начисления.СубконтоКт1,
	|	Начисления.СубконтоКт2,
	|	Начисления.СубконтоКт3,
	|	Начисления.СчетДтНУ,
	|	Начисления.СубконтоДтНУ1,
	|	Начисления.СубконтоДтНУ2,
	|	Начисления.СубконтоДтНУ3,
	|	Начисления.СчетКтНУ,
	|	Начисления.СубконтоКтНУ1,
	|	Начисления.СубконтоКтНУ2,
	|	Начисления.СубконтоКтНУ3,
	|	Начисления.ОтражениеВУСН,
	|	Начисления.Результат,
	|	Начисления.ДополнительныйРезультат,
	|	Начисления.ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец,
	|	Начисления.ОблагаетсяЕНВД,
	|	ВЫБОР
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораГПХ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДоговорыГПХ)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеЯвляетсяОбъектом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ОблагаетсяЦеликом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.РаспределятьПоБазовымНачислениям)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеДовольствиеВоеннослужащих)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеСодержаниеПрокуроров)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораАвторские)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка)
	|	КОНЕЦ КАК КодДоходаЕСН,
	|	Начисления.ПодразделениеДт,
	|	Начисления.ПодразделениеКт,
	|	Начисления.СуммаНУ,
	|	Начисления.СуммаПР,
	|	Начисления.СуммаВР,
	|	Начисления.ВидНачисленийОплатыТрудаПоСтатье255НК,   
	|	Начисления.СпособРаспределенияЗатрат,
	|	Начисления.Сторно
	|ИЗ
	|	Документ.НачислениеПоБольничномуЛисту.ОтражениеНачислений КАК Начисления
	|ГДЕ
	|	Начисления.Ссылка В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке КАК Документы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки";

	ОбновитьТабличнуюЧастьОбъектаПоЗапросу(Запрос, "ОтражениеНачислений", "Обработка документов б/л, часть I");
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.ПериодРегистрации,
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.НомерСтроки КАК НомерСтроки,
	|	Начисления.ВидРасчета,
	|	Начисления.ПериодДействия,
	|	Начисления.ПериодДействияНачало,
	|	Начисления.ПериодДействияКонец,
	|	Начисления.Активность,
	|	Начисления.Сторно,
	|	Начисления.Сотрудник,
	|	Начисления.ФизЛицо,
	|	Начисления.Организация,
	|	Начисления.УдалитьПриказ,
	|	Начисления.Результат,
	|	Начисления.ГрафикРаботы,
	|	Начисления.ВидУчетаВремени,
	|	ВЫБОР
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ПособияЗаСчетФСС)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеОблагаетсяЦеликом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ВыплатыЗаСчетПрибыли)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораГПХ)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДоговорыГПХ)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.НеЯвляетсяОбъектом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ОблагаетсяЦеликом)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.Матпомощь)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.Матпомощь)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.МатпомощьПриРожденииРебенка)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.РаспределятьПоБазовымНачислениям)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.РаспределятьПоБазовымНачислениям)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеДовольствиеВоеннослужащих)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДенежноеСодержаниеПрокуроров)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров)
	|		КОГДА Начисления.КодДоходаЕСН = ЗНАЧЕНИЕ(Справочник.ДоходыЕСН.ДоговораАвторские)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.АвторскиеЛитературныеПроизведения)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.ПустаяСсылка)
	|	КОНЕЦ КАК КодДоходаЕСН,
	|	Начисления.ОблагаетсяЕНВД,
	|	Начисления.ОбособленноеПодразделение,
	|	Начисления.ДокументОснование,
	|	Начисления.ОблагаетсяПоДополнительномуТарифу
	|ИЗ
	|	РегистрРасчета.ЕСНОсновныеНачисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке КАК Документы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор,
	|	НомерСтроки";
	
	ПереписатьНаборыЗаписейРегистраРасчетаПоРегистраторам(РегистрыРасчета.ЕСНОсновныеНачисления.СоздатьНаборЗаписей(), Ложь, Запрос, "Обработка документов б/л, часть II");	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Начисления.Регистратор КАК Регистратор,
	|	Начисления.ВидРасчета,
	|	Начисления.Организация,
	|	Начисления.ФизЛицо,
	|	Начисления.КодДоходаЕСН КАК ВидДохода,
	|	Начисления.ОблагаетсяЕНВД,
	|	Начисления.ОбособленноеПодразделение,
	|	Начисления.ОблагаетсяПоДополнительномуТарифу,
	|	Начисления.ПериодРегистрации КАК Период,
	|	СУММА(Начисления.Результат) КАК Результат
	|ИЗ
	|	РегистрРасчета.ЕСНОсновныеНачисления КАК Начисления
	|ГДЕ
	|	Начисления.Регистратор В
	|			(ВЫБРАТЬ
	|				Документы.Ссылка
	|			ИЗ
	|				ВТДокументыКОбработке КАК Документы)
	|
	|СГРУППИРОВАТЬ ПО
	|	Начисления.Регистратор,
	|	Начисления.ВидРасчета,
	|	Начисления.ФизЛицо,
	|	Начисления.Организация,
	|	Начисления.КодДоходаЕСН,
	|	Начисления.ОблагаетсяЕНВД,
	|	Начисления.ОбособленноеПодразделение,
	|	Начисления.ПериодРегистрации,
	|	Начисления.ОблагаетсяПоДополнительномуТарифу
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регистратор";
	
	ПереписатьНаборыЗаписейПоРегистраторам(РегистрыНакопления.СтраховыеВзносыСведенияОДоходах.СоздатьНаборЗаписей(), Запрос, "Обработка документов б/л, часть III");	
	
КонецПроцедуры
