
&НаКлиенте
Процедура ЗаполнитьТаблицуЗначений(Команда)
	
	Если Элементы.Список.ТекущиеДанные= Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТЗСервер(Элементы.Список.ТекущиеДанные.Организация,Элементы.Список.ТекущиеДанные.ЖурналУчета);	
	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьТЗСервер(Организация,ЖурналУчета) 
	
	НаборЗаписей = РегистрыСведений.ttk_ДанныеНДС.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Организация.Установить(Организация); 
	НаборЗаписей.Отбор.ЖурналУчета.Установить(ЖурналУчета); 
	НаборЗаписей.Прочитать(); 

	Для Каждого Запись Из НаборЗаписей Цикл 

		ТаблицаЗначенийНДС=Запись.ТаблицаНДС.Получить();
		
		ЭтаФорма.ОрганизацияТЗ = Организация;
		ЭтаФорма.ЖурналУчетаТЗ = ЖурналУчета;

		ВывестиТаблицуНаФорму(ЭтаФорма,"ТЗ",ТаблицаЗначенийНДС);
		
				
	КонецЦикла; 
				
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьТЗ_ВРегистр(Команда)
	
	 ВыгрузитьТЗ_ВРегистрнаСервере();
		 
КонецПроцедуры

&НаСервере
Процедура ВыгрузитьТЗ_ВРегистрнаСервере() 
	
	Если НЕ ЗначениеЗаполнено(ЭтаФорма.ОрганизацияТЗ) Тогда
		
		   Сообщить("Не указана организация ТЗ!!! Выгрузка в регистр невозможна");
		   
		   Возврат;
		   
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ttk_ДанныеНДС.СоздатьНаборЗаписей(); 
	НаборЗаписей.Отбор.Организация.Установить(ЭтаФорма.ОрганизацияТЗ); 
	НаборЗаписей.Отбор.ЖурналУчета.Установить(ЭтаФорма.ЖурналУчетаТЗ);
	
	НовЗапись = НаборЗаписей.Добавить(); 
	НовЗапись.Организация = ЭтаФорма.ОрганизацияТЗ; 
	НовЗапись.ЖурналУчета = ЭтаФорма.ЖурналУчетаТЗ; 
	
	НовЗапись.ТаблицаНДС = Новый ХранилищеЗначения(ЭтаФорма.ТЗ.Выгрузить()); 

	НаборЗаписей.Записать(Истина); 
	   
	Сообщить("Таблица выгружена!");
	
КонецПроцедуры


&НаСервере
Процедура ВывестиТаблицуНаФорму(УФ,ИмяТЗНаФорме,ТЗ, ТЗОбработчиковСобытий = Неопределено) Экспорт
    
   // СОЗДАНИЕ РЕКВИЗИТОВ ФОРМЫ
 
    МассивДобавляемыхРеквизитов = Новый Массив; 
    
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        МассивДобавляемыхРеквизитов.Добавить(Новый РеквизитФормы(Колонка.Имя, Колонка.ТипЗначения,ИмяТЗНаФорме ,Колонка.Заголовок));    
    КонецЦикла; 
    
    МассивУдаляемыхРеквизитов = УФ.ПолучитьРеквизиты(ИмяТЗНаФорме);
    МассивИменУдаляемыхРеквизитов = Новый Массив;
    
    Для каждого Элемент Из МассивУдаляемыхРеквизитов Цикл
        МассивИменУдаляемыхРеквизитов.Добавить(ИмяТЗНаФорме + "." + Элемент.Имя);
    КонецЦикла; 
    
    УФ.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов,МассивИменУдаляемыхРеквизитов); 
    
   // СОЗДАНИЕ ЭЛЕМЕНТОВ ФОРМЫ
 
    Для каждого Элемент Из МассивУдаляемыхРеквизитов Цикл
        УдаляемыйЭлемент = УФ.Элементы.Найти(ИмяТЗНаФорме + Элемент.Имя);
        УФ.Элементы.Удалить(УдаляемыйЭлемент);
    КонецЦикла; 
    
    Для Каждого Колонка Из ТЗ.Колонки Цикл
        НоваяКолонка = УФ.Элементы.Добавить(ИмяТЗНаФорме + Колонка.Имя, Тип("ПолеФормы"), УФ.Элементы[ИмяТЗНаФорме]); 
        НоваяКолонка.Заголовок = Колонка.Заголовок; 
        НоваяКолонка.ПутьКДанным = ИмяТЗНаФорме + "." + Колонка.Имя;
        НоваяКолонка.Вид = ВидПоляФормы.ПолеВвода; 
        НоваяКолонка.РежимРедактирования = РежимРедактированияКолонки.ВходПриВводе;    
    КонецЦикла;     
    
    УФ[ИмяТЗНаФорме].Загрузить(ТЗ);
    
   // Привязка обработчиков событий
 
    Если ТЗОбработчиковСобытий = Неопределено Тогда
        Возврат;
    КонецЕсли;    
    
    Для Каждого Строка Из ТЗОбработчиковСобытий Цикл
        УФ.Элементы[Строка.ИмяЭлемента].УстановитьДействие(Строка.ИмяСобытия, Строка.ИмяЭлемента + Строка.ИмяСобытия); 
    КонецЦикла;    
    
КонецПроцедуры

