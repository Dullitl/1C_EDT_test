
Функция ПолучитьСписокДоступныхСтатусво(СтруктураПараметров, Пользователь, РолиПользователя) Экспорт
	
	ДоступенОтказ       = Истина;
	
	Если НЕ ЗначениеЗаполнено(Пользователь) Тогда 
		мТекущийПользователь          = глЗначениеПеременной("глТекущийПользователь");
	Иначе
		мТекущийПользователь = Пользователь;
	КонецЕсли;
	
	Если РолиПользователя = Неопределено Тогда 
		мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь);
	Иначе
		мРолиПользователя = РолиПользователя
	КонецЕсли;
	
	Объект = СтруктураПараметров;
	
	ДоступныеОрганизацииДляОтказа = абс_БизнесПроцессы.ПолучитьДоступныеОрганизацииПоРоли(Справочники.РолиИсполнителей.ОтказПоАвизо,мТекущийПользователь);
	ПользовательРуководительБлока = РегистрыСведений.абс_РуководителиБлока.ПользовательЯвляетсяРуководителемБлока(Объект.ЦФО,мТекущийПользователь);
	ОрганизацияКТТК = Справочники.Организации.НайтиПоНаименованию("КТТК");
	
	РолиДляОтказа = Новый Массив;
	РолиДляОтказа.Добавить(Справочники.РолиИсполнителей.ОтказПоАвизо);
	РолиДляОтказа.Добавить(Справочники.РолиИсполнителей.РуководительБухгалтерскойГруппы);
	
	ДоступенОтказ = абс_БизнесПроцессы.ПолучитьДоступныеОрганизацииПоРоли(РолиДляОтказа,мТекущийПользователь);
		
	Список = Новый Массив;	
	Список.Добавить(Объект.Статус);
	ТекСтатус = Объект.ТекущийСтатус;
	
	Если ТекСтатус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка И мТекущийПользователь = Объект.Ответственный Тогда
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеРуководителемБлока);
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отмена);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеРуководителемБлока И ПользовательРуководительБлока Тогда	
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеДЭФ);
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отказ);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеДЭФ И мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеДЭФ) <> Неопределено Тогда	
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ОбработкаБухгалтером);
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отказ);		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ОбработкаБухгалтером И мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеБухгалтером) <> Неопределено Тогда	
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Исполнение);
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отказ);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Исполнение И мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеБухгалтером) <> Неопределено Тогда	
		
		ОрганизацияКТТК = Справочники.Организации.НайтиПоНаименованию("КТТК");
		
		Если ОрганизацияКТТК <> Объект.Организация Тогда
			Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВКЦ);
		Иначе
			Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВФилиал);
		КонецЕсли;
		
		Если ДоступенОтказ Тогда
			Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отказ);
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отказ Тогда	
		Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВФилиал ИЛИ Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВКЦ Тогда	
		Если ДоступенОтказ Тогда
			Список.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отказ);
		КонецЕсли;
	КонецЕсли;	

	Возврат Список;
	
КонецФункции

Процедура ЗаписатьНовыйСтатус(Документ, НовыйСтатус, ПричинаИзмененияСтатуса) Экспорт

	НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовРаспреденияДоходовРасходов.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Документ.Установить(Документ);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();

	Запись.Документ  			= Документ;
	Запись.Пользователь	 		= глЗначениеПеременной("глТекущийПользователь");	
	Запись.СтатусДокумента  	= НовыйСтатус;
	
	Запись.Комментарий 			= ПричинаИзмененияСтатуса;
	
	НаборЗаписей.Записать();

КонецПроцедуры