

Функция ПолучитьСписокДоступныхСтатусов(СтруктураПараметров) Экспорт
	 
	МассивСтатусов = Новый Массив;
	ТекущийСтатус = СтруктураПараметров.ТекущийСтатус;
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));
	
	Если ЗначениеЗаполнено(ТекущийСтатус) Тогда 
		МассивСтатусов.Добавить(ТекущийСтатус);
	КонецЕсли;
		
	Если ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Подготовка Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда   
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.СогласованиеНСИ);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.СогласованиеНСИ Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникГруппыНСИ) = Неопределено Тогда
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Активный);
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Отказ);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Отказ Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда   
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Подготовка);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Активный Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникГруппыНСИ) = Неопределено Тогда
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Отказ);
		КонецЕсли;
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда   
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Корректировка);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Корректировка Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникГруппыНСИ) = Неопределено Тогда
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Активный);
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Отказ);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.ПустаяСсылка() Тогда
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Активный);
	КонецЕсли;
	
	Возврат МассивСтатусов;
	
КонецФункции

Функция ПолучитьСписокДоступныхСтатусов_ВыгрузкаАСБ(СтруктураПараметров) Экспорт
	 
	МассивСтатусов = Новый Массив;
	ТекущийСтатус = СтруктураПараметров.ТекущийСтатус;
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));
	
	Если ЗначениеЗаполнено(ТекущийСтатус) Тогда 
		МассивСтатусов.Добавить(ТекущийСтатус);
	КонецЕсли;
		
	Если ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Подготовка Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда   
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Заполнение);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Заполнение Тогда
		//Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда
		//	МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Сформирован);
		//	МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Отказ);
		//КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Сформирован Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда   
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.ОжиданиеВыгрузки);
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Корректировка);
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Отказ);
		КонецЕсли;
			
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Корректировка Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Сформирован);
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Отказ);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.Отказ Тогда
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено Тогда
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Подготовка);
		КонецЕсли;
		
	ИначеЕсли ТекущийСтатус = Перечисления.абс_СтатусыАСБ.ПустаяСсылка() Тогда
			МассивСтатусов.Добавить(Перечисления.абс_СтатусыАСБ.Подготовка);
	КонецЕсли;
	
	Возврат МассивСтатусов;
	
КонецФункции

Процедура ЗаписатьСтатус(ОбъектСогласования, Статус, ДополнительныеСвойства) Экспорт

	Если Статус = ПолучитьТекущийСтатус(ОбъектСогласования) Тогда
		Возврат;
	КонецЕсли;
	
	//ПричинаИзмененияСтатуса = ПолучитьИзВременногоХранилища(Строка(ОбъектСогласования.УникальныйИдентификатор()));
	ПричинаИзмененияСтатуса = "";
	ДополнительныеСвойства.Свойство("ПричинаИзмененияСтатуса", ПричинаИзмененияСтатуса);
	
	НаборЗаписей = РегистрыСведений.абс_ИсторияСтатусовАСБ.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ОбъектСогласования.Установить(ОбъектСогласования);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();

	Запись.ОбъектСогласования   = ОбъектСогласования;
	Запись.Пользователь	 		= глЗначениеПеременной("глТекущийПользователь");	
	Запись.Статус  				= Статус;	
	Запись.Комментарий 			= ПричинаИзмененияСтатуса;
	
	НаборЗаписей.Записать();

КонецПроцедуры

Функция ПолучитьТекущийСтатус(ОбъектСогласования) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_ИсторияСтатусовАСБСрезПоследних.Статус
	                      |ИЗ
	                      |	РегистрСведений.абс_ИсторияСтатусовАСБ.СрезПоследних(, ОбъектСогласования = &ОбъектСогласования) КАК абс_ИсторияСтатусовАСБСрезПоследних");
						  
	Запрос.УстановитьПараметр("ОбъектСогласования", ОбъектСогласования);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Статус;
	КонецЕсли;
	
	Возврат Неопределено;
		
КонецФункции
