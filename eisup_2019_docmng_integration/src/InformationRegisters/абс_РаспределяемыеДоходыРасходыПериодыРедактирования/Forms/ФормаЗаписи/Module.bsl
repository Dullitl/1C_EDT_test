
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ ВЫБОРА ПЕРИОДА

&НаКлиенте
Процедура ПериодСтрокаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтруктураПараметров = Новый Структура("Значение");
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(СтруктураПараметров, СтандартнаяОбработка, Объект.Период, ЭтаФорма);
	Если СтруктураПараметров.Значение <> Неопределено Тогда 
		ПериодСтрока = СтруктураПараметров.Значение;
	Иначе
		ПериодСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.Период);		
	КонецЕсли;
	
	Объект.Период = КонецМесяца(Объект.Период);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокаПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(ПериодСтрока, Объект.Период);
	ПериодСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.Период);
	
	Объект.Период = КонецМесяца(Объект.Период);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	//РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));
	Если мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительБухгалтерскойГруппы) = Неопределено Тогда 
		ТолькоПросмотр = Истина;
		Элементы.ПериодСтрока.ТолькоПросмотр = Истина;
	КонецЕсли;

КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПериодСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.Период);

КонецПроцедуры

