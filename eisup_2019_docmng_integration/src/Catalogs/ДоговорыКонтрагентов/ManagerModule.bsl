// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БланкСогласования") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БланкСогласования", "Бланк согласования", ПечатьБланка(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПараметрыДоговора(Параметры,Договор)
	Попытка
		Параметры.Подразделение = Договор.абс_Ответственный.абс_Сотрудник.ПодразделениеОрганизации;
	Исключение
	КОНЕЦПопытки;
	Параметры.Ответственный = Договор.абс_Ответственный;
	
	// {{ТТК Сладков А. Заявка № 24.01.2017 начало
	Параметры.ОтветственныйВнутрНомер = Договор.абс_Ответственный.абс_ВнутреннийНомер;	
	// }}ТТК Сладков А. Заявка № 24.01.2017 окончание
	
КонецПроцедуры

Процедура ЗаполнитьСекциюСогласования(Параметры,Договор,Статус)
	
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РеальнаяТаблица.Период КАК Период,
	|	РеальнаяТаблица.Договор,
	|	РеальнаяТаблица.СтатусДоговора,
	|	РеальнаяТаблица.Исполнитель,
	|	РеальнаяТаблица.Комментарий
	|ИЗ
	|	РегистрСведений.абс_ИзменениеСтатусовДоговоров.СрезПоследних(&ТекДата, Договор = &Договор) КАК Срез
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.абс_ИзменениеСтатусовДоговоров КАК РеальнаяТаблица
	|		ПО Срез.Период = РеальнаяТаблица.Период
	|			И Срез.Договор = РеальнаяТаблица.Договор
	|			И Срез.СтатусДоговора = РеальнаяТаблица.СтатусДоговора
	|			И Срез.Исполнитель = РеальнаяТаблица.Исполнитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Договор",Договор);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	й = 0;
	НомерСтрокиСтатус = -1;
	Пока й < ТЗ.Количество() Цикл
		Строка = ТЗ[й];
		Если Строка.СтатусДоговора = Статус Тогда
			Параметры.ДатаПоступления = Формат(Строка.Период,"ДФ=dd.MM.yyyy; ДЛФ=D");
			НомерСтрокиСтатус = й;
			прервать;
		КонецЕсли;
		й = й+1;
	КонецЦИкла;
	Если НомерСтрокиСтатус=-1 Тогда
		возврат;
	КонецЕсли;
	
	Строка = ТЗ[НомерСтрокиСтатус+1];
	Параметры.Замечания = Строка.Комментарий;
	Попытка
		Ответственный = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(СТРОКА.Исполнитель.абс_Сотрудник, ТекущаяДата());
		Параметры.Ответственный = Ответственный.Фамилия +" "+Лев(Ответственный.Имя,1)+". "+Лев(Ответственный.Отчество,1)+".";
	Исключение
		Параметры.Ответственный = СТРОКА.Исполнитель;
	КонецПопытки;
	Параметры.ДатаСогласования = Формат(Строка.Период,"ДФ=dd.MM.yyyy; ДЛФ=D");
	
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьБланка(МассивОбъектов, ОбъектыПечати)

	Макет = ПолучитьМакет("БланкСогласования");
	ТабДокумент = Новый ТабличныйДокумент;
	НомерСтрокиНачало = 1;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорыКонтрагентов_БланкСогласования";
	ЭтоПервыйОбъект = Истина;
		
	Запрос = новый Запрос("ВЫБРАТЬ
	                      |	ДоговорыКонтрагентов.Ссылка КАК Ссылка,
	                      |	ДоговорыКонтрагентов.абс_СтатусДоговора КАК СтатусДоговора,
	                      |	абс_ИзменениеСтатусовДоговоров.Период КАК Период,
	                      |	абс_ИзменениеСтатусовДоговоров.СтатусДоговора КАК Статус,
	                      |	абс_ИзменениеСтатусовДоговоров.Исполнитель КАК Исполнитель,
	                      |	абс_ИзменениеСтатусовДоговоров.Комментарий КАК Комментарий
	                      |ИЗ
	                      |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_ИзменениеСтатусовДоговоров КАК абс_ИзменениеСтатусовДоговоров
	                      |		ПО (абс_ИзменениеСтатусовДоговоров.Договор = ДоговорыКонтрагентов.Ссылка)
	                      |ГДЕ
	                      |	ДоговорыКонтрагентов.Ссылка В(&МассивОбъектов)
	                      |	И абс_ИзменениеСтатусовДоговоров.Договор В(&МассивОбъектов)
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	Ссылка,
	                      |	Период
	                      |ИТОГИ ПО
	                      |	Ссылка");
						  
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	ВыборкаДоговор = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	
	Пока ВыборкаДоговор.Следующий() Цикл
		
		Если 	НЕ ВыборкаДоговор.СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПервоеЛицо И
				НЕ ВыборкаДоговор.СтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Бланк согласования по догвору " + ВыборкаДоговор.Ссылка + 
				" контрагента " + ВыборкаДоговор.Ссылка.Владелец + " можно получить только в статусе подписания или регистрации договора.");
				
			Продолжить;
		КонецЕсли;
			
		Если НЕ ЭтоПервыйОбъект Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЭтоПервыйОбъект = Ложь;
		
		ДатаПоступленияНаРегистрацию = ПолучитьДатуСтатусаПодписанияИрегистрации(ВыборкаДоговор.Ссылка);
		
		Обл = Макет.ПолучитьОбласть("ДоговорШапка");
		Обл.Параметры.Заполнить(ВыборкаДоговор.Ссылка);
		
		Если ЗначениеЗаполнено(ДатаПоступленияНаРегистрацию) Тогда
			Обл.Параметры.ТекДата = ДатаПоступленияНаРегистрацию;
		Иначе
			Обл.Параметры.ТекДата = ТекущаяДата();
		КонецЕсли;
		
		Обл.Параметры.ТекДата = Формат(Обл.Параметры.ТекДата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		Обл.Параметры.Дата = Формат(Обл.Параметры.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		ТабДокумент.Вывести(Обл);
		
		Обл = Макет.ПолучитьОбласть("Контрагент");
		Обл.Параметры.Заполнить(ВыборкаДоговор.Ссылка.Владелец);
		ТабДокумент.Вывести(Обл);
		
		Обл = Макет.ПолучитьОбласть("Договор");
		Обл.Параметры.Заполнить(ВыборкаДоговор.Ссылка);
		ЗаполнитьПараметрыДоговора(Обл.Параметры, ВыборкаДоговор.Ссылка);
		ТабДокумент.Вывести(Обл);		
		
		Обл = Макет.ПолучитьОбласть("ПояснительнаяЗаписка");
		Обл.Параметры.Заполнить(ВыборкаДоговор.Ссылка);
		ТабДокумент.Вывести(Обл);
		
		Обл = Макет.ПолучитьОбласть("ОбластьШапкаСогласования");
		ТабДокумент.Вывести(Обл);
		
		ОблСтрока = Макет.ПолучитьОбласть("ОбластСтрокаСогласования");
		
		ВыборкаСтатусы = ВыборкаДоговор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСтатусы.Следующий() Цикл
			
			ОблСтрока.Параметры.Заполнить(ВыборкаСтатусы);
			
			ТабДокумент.Вывести(ОблСтрока);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДокумент.Вывести(Макет.ПолучитьОбласть("ОбластьПодвал"));
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДоговор.Ссылка);

	
	//Для каждого Ссылка из МассивОбъектов Цикл
	//	Если НЕ ЭтоПервыйОбъект Тогда
	//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	//	КонецЕсли;
	//	ЭтоПервыйОбъект = Ложь;
	//	Обл = Макет.ПолучитьОбласть("ДоговорШапка");
	//	Обл.Параметры.Заполнить(Ссылка);
	//	Обл.Параметры.ТекДата = Формат(ТекущаяДата(),"ДФ=dd.MM.yyyy; ДЛФ=D");
	//	ТабДокумент.Вывести(Обл);
	//	
	//	Обл = Макет.ПолучитьОбласть("Контрагент");
	//	Обл.Параметры.Заполнить(Ссылка.Владелец);
	//	ТабДокумент.Вывести(Обл);
	//	
	//	Обл = Макет.ПолучитьОбласть("Договор");
	//	Обл.Параметры.Заполнить(Ссылка);
	//	ЗаполнитьПараметрыДоговора(Обл.Параметры,Ссылка);
	//	ТабДокумент.Вывести(Обл);
	//	
	//	Обл = Макет.ПолучитьОбласть("ПояснительнаяЗаписка");
	//	Обл.Параметры.Заполнить(Ссылка);
	//	ТабДокумент.Вывести(Обл);
	//	
	//	Обл = Макет.ПолучитьОбласть("Секция01");
	//	ЗаполнитьСекциюСогласования(Обл.Параметры,Ссылка, Перечисления.абсСтатусыДоговоров.ПроверкаДФМ);
	//	ТабДокумент.Вывести(Обл);
	//	
	//  	Обл = Макет.ПолучитьОбласть("Секция02");
	//	Обл.Параметры.Заполнить(Ссылка);
	//	ЗаполнитьСекциюСогласования(Обл.Параметры,Ссылка, Перечисления.абсСтатусыДоговоров.СогласованиеБухгалтерией);
	//	ТабДокумент.Вывести(Обл);

	//  	Обл = Макет.ПолучитьОбласть("Секция03");
	//	ЗаполнитьСекциюСогласования(Обл.Параметры,Ссылка, Перечисления.абсСтатусыДоговоров.СогласованиеПД);		
	//	ТабДокумент.Вывести(Обл);
	//	
	//  	Обл = Макет.ПолучитьОбласть("Секция04");
	//	Обл.Параметры.Заполнить(Ссылка);
	//	ТабДокумент.Вывести(Обл);

	//	
	//КонецЦИКЛА;
	
	ТабДокумент.ПолеСверху = 20;
	ТабДокумент.ПолеСлева = 20;
	ТабДокумент.ПолеСлева = 5;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу = 0;
	

	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДатуСтатусаПодписанияИрегистрации(Ссылка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_ИзменениеСтатусовДоговоровСрезПоследних.Договор,
	|	абс_ИзменениеСтатусовДоговоровСрезПоследних.Период
	|ИЗ
	|	РегистрСведений.абс_ИзменениеСтатусовДоговоров.СрезПоследних(
	|			,
	|			Договор = &Договор
	|				И СтатусДоговора = ЗНАЧЕНИЕ(Перечисление.абсСтатусыДоговоров.Регистрация)) КАК абс_ИзменениеСтатусовДоговоровСрезПоследних");
	
	Запрос.УстановитьПараметр("Договор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Период;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

//Трансфертное
Функция ПолучитьСвойствоКонтрагента(Контрагент) Экспорт
	
	СвойствоКонтрагента = ПланыВидовХарактеристик.СвойстваОбъектов.НайтиПоНаименованию("ВидыВзаимозависимыхКонтрагентов",Истина);
	
	Если СвойствоКонтрагента =  Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;	
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗначенияСвойствОбъектов.Значение
	|ИЗ
	|	РегистрСведений.ЗначенияСвойствОбъектов КАК ЗначенияСвойствОбъектов
	|ГДЕ
	|	ЗначенияСвойствОбъектов.Объект = &Объект
	|	И ЗначенияСвойствОбъектов.Свойство = &Свойство";
	
	Запрос.УстановитьПараметр("Объект", Контрагент);
	Запрос.УстановитьПараметр("Свойство", СвойствоКонтрагента);
	
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи.Следующий();
	
КонецФункции	
//Трансфертное
