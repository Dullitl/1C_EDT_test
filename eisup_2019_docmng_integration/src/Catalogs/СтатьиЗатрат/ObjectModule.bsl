Перем мПользовательДопСогласование Экспорт;
// АБС ВСТАВКА
Перем мТекущийПользователь Экспорт;

Перем мРолиПользователя Экспорт;
// АБС ВСТАВКА КОНЕЦ

// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// не разрешаем любую перезапись в статусе Использование
	// не разрешаем менять родителя
	// не разрешаем перезаписывать группы справочника
	Если Не ЭтоНовый() Тогда //АБС Тупиков (не записывался новый элемент справочника, если указана группа) 
		Если ((абс_СтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.Использование И Ссылка.абс_СтатусСтатьиЗатрат 	= Перечисления.абс_СтатусыНоменклатуры.Использование) 
			ИЛИ НЕ Родитель = Ссылка.Родитель
			ИЛИ ЭтоГруппа)
			И НЕ РольДоступна("ПолныеПрава") Тогда
			
			Отказ = Истина;
			Возврат;
			
		КонецЕсли;
	КонецЕсли;
	
	
	Если НЕ ЭтоГруппа Тогда
		Если абс_СтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.Использование И мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникГруппыНСИ) = Неопределено  Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Только сотрудник группы НСИ может изменять.", Отказ);
			Возврат;
		КонецЕсли;
	
		Если ВидЗатрат.Пустая() Тогда
			Сообщить("Укажите вид затрат!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если ВидЗатрат = Перечисления.ВидыЗатрат.Материальные 
		   И ХарактерЗатрат = Перечисления.ХарактерЗатрат.ПроизводственныеРасходы
		   И СтатусМатериальныхЗатрат.Пустая() Тогда
			Сообщить("Укажите статус материальных затрат!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если ХарактерЗатрат.Пустая() Тогда
			Сообщить("Укажите характер затрат!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если ВидРасходовНУ.Пустая() Тогда
			Сообщить("Укажите вид расходов (НУ)!", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		
		Если Не ЭтоНовый() Тогда

			Если (ВидЗатрат <> Ссылка.ВидЗатрат
					ИЛИ СтатусМатериальныхЗатрат <> Ссылка.СтатусМатериальныхЗатрат
					ИЛИ ХарактерЗатрат <> Ссылка.ХарактерЗатрат)
			   И ПолныеПрава.СтатьяЗатрат_СуществуютСсылкиВРегистрахНакопления(Ссылка)
			Тогда
				ТекстСообщения = "
				|Статья затрат """ + СокрЛП(Ссылка) + """ указана в проведенных документах.
				|Реквизиты ""Характер затрат"", ""Вид затрат"", ""Статус мат. затрат"" не могут быть изменены!";
				ttk_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщения, Отказ);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
	Если СогласованиеБезБП Тогда
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусСтатьиЗатратПоРегистру(Ссылка);
		Если НЕ абс_СтатусСтатьиЗатрат = СтатусПоРегистру и абс_СтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
			СтатусДопСогласования 		= СтатусПоРегистру;
		КонецЕсли;
	КонецЕсли;
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	Попытка
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусСтатьиЗатратПоРегистру(Ссылка);
		
		Если НЕ абс_СтатусСтатьиЗатрат = СтатусПоРегистру ИЛИ НЕ ЗначениеЗаполнено(СтатусПоРегистру) Тогда
			ЗаписатьНовыйСтатус(абс_СтатусСтатьиЗатрат, абс_ПричинаИзмененияСтатуса);		
		КонецЕсли;
		
		СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
		Если Не СогласованиеБезБП Тогда
			// Запустим БП если он еще не запущен
			Если абс_СтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.СогласованиеНСИ Тогда
				БПСогласование = НайтиБПСогласование();
				
				Если Не ЗначениеЗаполнено(БПСогласование) Тогда
					абс_БизнесПроцессы.ЗапуститьБПСогласованияСтатьиЗатрат(Ссылка);	
				КонецЕсли;		
			КонецЕсли;
			
			//Выберем ответственого в случае дополнительного согласования
			Если абс_СтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
				
				БПСогласование = НайтиБПСогласование();
				
				Если НЕ БПСогласование = Неопределено Тогда
					
					БПСогласованиеОбъект = БПСогласование.ПолучитьОбъект();
					
					БПСогласованиеОбъект.ПользовательДопСогласование 	= абс_ПользовательДопСогласование;
					
					Если НЕ СтатусПоРегистру = абс_СтатусСтатьиЗатрат Тогда
						БПСогласованиеОбъект.СтатусДопСогласования 		= СтатусПоРегистру;
					КонецЕсли;
					
					БПСогласованиеОбъект.Записать();
					
				КонецЕсли;
				
			КонецЕсли;
			
			
			//Попробуем закрыть задачу согласования
			
			ЗадачаСогласование = ПолучитьЗадачуПоСтатьеЗатратСогласование();
			
			Если ЗадачаСогласование = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			Если НЕ ЗадачаСогласование.Выполнена Тогда
				
				ЗадачаОбъект = ЗадачаСогласование.ПолучитьОбъект();			
				ЗадачаОбъект.ВыполнитьЗадачу();
			КонецЕсли;
		КонецЕсли;

	Исключение
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при записи статьи затрат: " + ОписаниеОшибки() + ".", Отказ);
		Возврат;
	КонецПопытки;
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	
КонецПроцедуры

 // АБС ВСТАВКА Начало
Процедура ЗаписатьНовыйСтатус(НовыйСтатус, Комментарий = Неопределено) Экспорт
	
	НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовСтатейЗатрат.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.СтатьяЗатрат.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();;

	Запись.СтатьяЗатрат			= Ссылка;
	Запись.Исполнитель	 		= глЗначениеПеременной("глТекущийПользователь");	
	Запись.СтатусСтатьиЗатрат	= НовыйСтатус;
	
	Запись.Комментарий 			= Комментарий;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция НайтиБПСогласование() Экспорт
	
	Возврат абс_БизнесПроцессы.НайтиБизнесПроцессПоСтатьеЗатрат(Ссылка, "абсСогласованиеСтатейЗатрат");	
	
КонецФункции

Функция ПолучитьЗадачуПоСтатьеЗатратСогласование() Экспорт
	
	БП = НайтиБПСогласование();
	
	Если БП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СпТочек = Новый Массив;
	
	Статус = Ссылка.абс_СтатусСтатьиЗатрат;
	
	Если Статус = Перечисления.абс_СтатусыНоменклатуры.Подготовка Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеОтказаноВСогласовании);
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.СогласованиеНСИ Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеДополнительноеСогласование);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ПовторнаяПодготовка);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);		
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Отказ Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеДополнительноеСогласование);
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Использование Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Архив Тогда
// {{KM WARE Лазаревский К.В. Заявка № <Дата dd.mm.yyyy> начало
// точки нет в маршруте
// {{
//		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеСтатьяЗатратУтверждена);
// }}
// }}KM WARE Лазаревский К.В. Заявка № <Дата dd.mm.yyyy> окончание
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеСтатейЗатрат.ТочкиМаршрута.ДействиеОтказаноВСогласовании);
	КонецЕсли;	
		
	Возврат абс_БизнесПроцессы.НайтиЗадачуЗЗ(БП, СпТочек ,, Ложь);
	
КонецФункции

Если абс_СтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
	мПользовательДопСогласование = абс_ПользовательДопСогласование;
КонецЕсли;

мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь);
// АБС ВСТАВКА  КОНЕЦ