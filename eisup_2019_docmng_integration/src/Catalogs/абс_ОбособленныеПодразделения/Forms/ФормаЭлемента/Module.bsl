
////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ (НА СЕРВЕРЕ)

// Процедура УстановитьВидимость()
// Процедура устанавливает видимость элементов управления формы в зависимости от значения реквизита ВидПодразделения
//
// Параметры:
//  Нет
//
&НаСервере
Процедура УстановитьВидимость()

	Если Объект.ВидПодразделения = Перечисления.абс_ВидыПодразделений.ЮридическоеЛицо Тогда
		
		Элементы.Адрес.Видимость = Ложь;
		Элементы.КПП.Видимость = Ложь;
		Элементы.ОКАТО.Видимость = Ложь;
		Элементы.РегистрационныйНомерПФР.Видимость = Ложь;
		Элементы.РегистрационныйНомерФСС.Видимость = Ложь;
		Элементы.РегистрационныйНомерФондЗанятости.Видимость = Ложь;
		Элементы.ОтдельныйСчет.Видимость = Ложь;
		Элементы.ОтдельныйБаланс.Видимость = Ложь;
		Элементы.ПроизводитВыплатыФизЛицам.Видимость = Ложь;
		Элементы.ПодразделениеПроизводящееНачислениеИВыплатуЗППоФилиалу.Видимость 	= Ложь;
		Элементы.ТерриториальныеУсловияПФР.Видимость = Ложь;
		Элементы.РайонныйКоэффициент.Видимость = Ложь;
		Элементы.РайонныйКоэффициентРФ.Видимость = Ложь;
		
	ИначеЕсли Объект.ВидПодразделения = Перечисления.абс_ВидыПодразделений.Филиал Тогда
		
		Элементы.Адрес.Видимость = Истина;
		Элементы.КПП.Видимость = Истина;
		Элементы.ОКАТО.Видимость = Истина;
		Элементы.РегистрационныйНомерПФР.Видимость = Истина;
		Элементы.РегистрационныйНомерФСС.Видимость = Истина;
		Элементы.РегистрационныйНомерФондЗанятости.Видимость = Истина;
		Элементы.ОтдельныйСчет.Видимость = Истина;
		Элементы.ОтдельныйБаланс.Видимость = Истина;
		Элементы.ПроизводитВыплатыФизЛицам.Видимость = Истина;
		Элементы.ПодразделениеПроизводящееНачислениеИВыплатуЗППоФилиалу.Видимость = Истина;
		
		// {{KM WARE Агапов Н.А. Заявка №32447  16.11.2015 начало
		Элементы.ТерриториальныеУсловияПФР.Видимость = Истина;
		Элементы.РайонныйКоэффициент.Видимость = Истина;
		Элементы.РайонныйКоэффициентРФ.Видимость = Истина;
		// }}KM WARE Агапов Н.А. Заявка №32447 16.11.2015 окончание		
	ИначеЕсли Объект.ВидПодразделения = Перечисления.абс_ВидыПодразделений.ОбособленноеПодразделение Тогда
		
		Элементы.Адрес.Видимость = Истина;
		Элементы.КПП.Видимость = Истина;
		Элементы.ОКАТО.Видимость = Истина;
		Элементы.РегистрационныйНомерПФР.Видимость = Ложь;
		Элементы.РегистрационныйНомерФСС.Видимость = Ложь;
		Элементы.РегистрационныйНомерФондЗанятости.Видимость = Ложь;
		Элементы.ОтдельныйСчет.Видимость = Ложь;
		Элементы.ОтдельныйБаланс.Видимость = Ложь;
		Элементы.ПроизводитВыплатыФизЛицам.Видимость = Ложь;
		Элементы.ПодразделениеПроизводящееНачислениеИВыплатуЗППоФилиалу.Видимость 	= Ложь;
		Элементы.ТерриториальныеУсловияПФР.Видимость = Истина;
		Элементы.РайонныйКоэффициент.Видимость = Истина;
		Элементы.РайонныйКоэффициентРФ.Видимость = Истина;
		
	КонецЕсли;
	
КонецПроцедуры // УстановитьВидимость()

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ (НА КЛИЕНТЕ)

// Процедура ФлажкиПриИзменении()
// Процедура устанавливает доступность элементов управления формы в зависимости от установленных "флажков"
//
// Параметры:
//	Нет
//
&НаКлиенте
Процедура ФлажкиПриИзменении()
	
	Если Объект.ОтдельныйСчет И Объект.ОтдельныйБаланс И Объект.ПроизводитВыплатыФизЛицам Тогда
		Элементы.ПодразделениеПроизводящееНачислениеИВыплатуЗППоФилиалу.Доступность = Ложь;
	Иначе
		Элементы.ПодразделениеПроизводящееНачислениеИВыплатуЗППоФилиалу.Доступность = Истина;
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.ВидПодразделения = Перечисления.абс_ВидыПодразделений.ЮридическоеЛицо;		
		Если ЗначениеЗаполнено(Объект.Родитель) Тогда
			Объект.ГоловнаяОрганизация = Объект.Родитель.ГоловнаяОрганизация;
		Иначе
			Объект.ГоловнаяОрганизация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
		КонецЕсли;
		//+++ Григорьев Д.В. - #7758734 (28.04.2017)
		мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));	
		Если Не (мРолиПользователя.Найти(Справочники.РолиИсполнителей.ВедениеОбособленныхПодразделений) <> Неопределено Или мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) <> Неопределено) Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Недостаточно прав для добавления обособленных подразделений!", Отказ);
		КонецЕсли;
		//--- Григорьев Д.В. - #7758734 (28.04.2017)	
	КонецЕсли;
	
	//+++ Григорьев Д.В. - #7758734 (28.04.2017)
	ОбновитьВидимость();
	//--- Григорьев Д.В. - #7758734 (28.04.2017)
	
	УстановитьВидимость();
	ФлажкиПриИзменении();
	//АБС ВСТАВКА №43687 НАЧАЛО «5 июня 2014 г.», Пополитов
	ПолучитьКПП_ОП_Клиент();
	//\\АБС ВСТАВКА №43687 КОНЕЦ
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура ВидПодразделенияПриИзменении(Элемент)
	
	Если Объект.ВидПодразделения = Перечисления.абс_ВидыПодразделений.Филиал Тогда 
		
		Объект.ОтдельныйСчет 				= Истина;
		Объект.ОтдельныйБаланс 				= Истина;
		Объект.ПроизводитВыплатыФизЛицам 	= Истина;
		
	КонецЕсли;
	УстановитьВидимость();
	ФлажкиПриИзменении();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныйСчетПриИзменении(Элемент)
	ФлажкиПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ОтдельныйБалансПриИзменении(Элемент)
	ФлажкиПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ПроизводитВыплатыФизЛицамПриИзменении(Элемент)
	ФлажкиПриИзменении();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделениеПроизводящееНачислениеИВыплатуЗППоФилиалуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = Справочники.абс_ОбособленныеПодразделения.ПолучитьФорму("ФормаВыбора", Элемент);
	
	НовыйОтбор = ФормаВыбора.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
	НовыйОтбор.ВидСравнения 	= ВидСравненияКомпоновкиДанных.ВСписке;
	НовыйОтбор.ЛевоеЗначение	= Новый ПолеКомпоновкиДанных("ВидПодразделения");
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить(Перечисления.абс_ВидыПодразделений.ОбособленноеПодразделение);
	МассивЭлементов.Добавить(Перечисления.абс_ВидыПодразделений.Филиал);
	
	НовыйОтбор.ПравоеЗначение	= МассивЭлементов;
	НовыйОтбор.Использование 	= Истина;
	НовыйОтбор.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;

	ФормаВыбора.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура АдресНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ФормаЗаполненияАдреса = ПолучитьФорму("Справочник.абс_ОбособленныеПодразделения.Форма.ФормаЗаписиАдреса",,Элемент);
	
	//ФормаЗаполненияАдреса.Объект = Объек.Ссылка;
	ФормаЗаполненияАдреса.Тип = Перечисления.ТипыКонтактнойИнформации.Адрес;
	ФормаЗаполненияАдреса.Вид = Справочники.ВидыКонтактнойИнформации.ЮрАдресОрганизации;
	
	ФормаЗаполненияАдреса.Представление = Объект.Адрес;
	
	ФормаЗаполненияАдреса.ПроизвольныйАдрес = Ложь;
	
	РезультатВыбораАдреса = ФормаЗаполненияАдреса.ОткрытьМодально();
	
	Если НЕ РезультатВыбораАдреса = Неопределено Тогда
		Объект.Адрес = РезультатВыбораАдреса;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АдресОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Объект.Адрес = ВыбранноеЗначение.Представление;
	
КонецПроцедуры

//АБС ВСТАВКА 17108				Чистоусов 2012.11.22 15:31:58
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	//Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	ТекстСообщения = "";
	//	ПроверитьНеобходимостьПерезаписиСвязанныхПодразделенийНаСервере(ТекстСообщения);
	//	
	//	Если СписокСвязанныхПодразделенийКПерезаписи.Количество() > 0 Тогда
	//		Ответ = Вопрос(ТекстСообщения, РежимДиалогаВопрос.ОКОтмена);
	//		Если Ответ <> КодВозвратаДиалога.ОК Тогда
	//			Отказ = Истина;
	//		КонецЕсли;
	//	КонецЕсли;		
	//	
	//	СписокПодразделений = Новый СписокЗначений;
	//	Если ЕстьОткрытыеФормыПодразделенийПоТекущемуОбособленному(СписокПодразделений) Тогда
	//		стрПодразделения = "";
	//		Для Каждого Элемент Из СписокПодразделений ЦИкл
	//			стрПодразделения = стрПодразделения + ?(ПустаяСтрока(стрПодразделения), "", ", " + Символы.ПС) + "• " + Элемент.Значение;
	//		КонецЦикла;
	//		
	//		Ответ = Вопрос("В данном сеансе есть открытые формы подразделений организаций, которые должны быть перезаписаны:
	//						|
	//						|" + стрПодразделения + "
	//						|
	//						|Если продолжить, все изменения на этих формах будут потеряны.", РежимДиалогаВопрос.ОКОтмена);
	//		Если Ответ <> КодВозвратаДиалога.ОК Тогда 
	//			Отказ = Истина;
	//		КонецЕсли;
	//	КонецЕсли;		
	//КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Функция ЕстьОткрытыеФормыПодразделенийПоТекущемуОбособленному(СписокКлючейФорм = Неопределено)
	
	ЕстьОткрытые = Ложь;
	
	Оповестить("ПолучитьСписокОткрытыхФорм", Объект.Ссылка, ЭтаФорма);
	СписокОткрытыхФорм = Неопределено;
	// будет работать только на толстом клиенте
	ИмяВрПеременной = "____СписокОткрытыхФорм";
	Если глОбщиеЗначения.Свойство(ИмяВрПеременной, СписокОткрытыхФорм) Тогда
		Если ТипЗнч(СписокОткрытыхФорм) = Тип("СписокЗначений") Тогда
			ЕстьОткрытые = Истина;
			Если СписокКлючейФорм <> Неопределено Тогда
				Для Каждого Элемент Из СписокОткрытыхФорм Цикл 
					СписокКлючейФорм.Добавить(Элемент.Значение);
				КонецЦикла;
			КонецЕсли;			
		КонецЕсли;	
		глОбщиеЗначения.Удалить(ИмяВрПеременной);
	КонецЕсли;
	Возврат ЕстьОткрытые;
	
КонецФункции

&НаСервере
Процедура ПроверитьНеобходимостьПерезаписиСвязанныхПодразделенийНаСервере(ТекстСообщения = "")
	
	СписокСвязанныхПодразделенийКПерезаписи.Очистить();
	Если Не Объект.Ссылка.Пустая() Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ПодразделенияОрганизаций.Ссылка
		               |ИЗ
		               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
		               |ГДЕ
		               |	(ПодразделенияОрганизаций.КодПоОКАТО <> &ОКАТО
		               |			ИЛИ ПодразделенияОрганизаций.КПП <> &КПП
		               |			ИЛИ ПодразделенияОрганизаций.РайонныйКоэффициент <> &РайонныйКоэффициент
		               |			ИЛИ ПодразделенияОрганизаций.РайонныйКоэффициентРФ <> &РайонныйКоэффициентРФ
		               |			ИЛИ ПодразделенияОрганизаций.ТерриториальныеУсловияПФР <> &ТерриториальныеУсловияПФР)
		               |	И ПодразделенияОрганизаций.абс_ОбособленноеПодразделение = &Ссылка";
		Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
		Запрос.УстановитьПараметр("ОКАТО", Объект.ОКАТО);
		Запрос.УстановитьПараметр("КПП", Объект.КПП);
		Запрос.УстановитьПараметр("РайонныйКоэффициент", Объект.РайонныйКоэффициент);
		Запрос.УстановитьПараметр("РайонныйКоэффициентРФ", Объект.РайонныйКоэффициентРФ);
		Запрос.УстановитьПараметр("ТерриториальныеУсловияПФР", Объект.ТерриториальныеУсловияПФР);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		
		ТекстСообщения = "";
		Пока Выборка.Следующий() Цикл
			СписокСвязанныхПодразделенийКПерезаписи.Добавить(Выборка.Ссылка);
			ТекстСообщения = ТекстСообщения + ?(ПустаяСтрока(ТекстСообщения), "", ", " + Символы.ПС) + "• " + Выборка.Ссылка;
		КонецЦикла;
	КонецЕсли;
	ТекстСообщения = "В следующих подразделениях организаций будут обновлены реквизиты:
					|
					|" + ТекстСообщения + "
					|
					|Продолжить?";
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Для Каждого Элемент Из СписокСвязанныхПодразделенийКПерезаписи Цикл
		ТекПодразделениеОбъект = Элемент.Значение.ПолучитьОбъект();
		ТекПодразделениеОбъект.ЗаполнитьРеквизитыПоОбособленномуПодразделению();
		Попытка
			ТекПодразделениеОбъект.Записать();
		Исключение
			Сообщить(ИнформацияОбОшибке().Описание);
			Отказ = Истина;
			Прервать;
		КонецПопытки;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("ИзмененоОбособленноеПодразделение", Объект.Ссылка, ЭтаФорма);
КонецПроцедуры
//\\АБС ВСТАВКА 17108 КОНЕЦ		Чистоусов 2012.11.22 15:31:58

//АБС ВСТАВКА №43687 НАЧАЛО «5 июня 2014 г.», Пополитов 	
&НаКлиенте
Процедура абс_ОтветственноеОПпоНалогуНаПрибыльПриИзменении(Элемент)
	
	ПолучитьКПП_ОП_Клиент();
	
КонецПроцедуры


&НаКлиенте
Процедура ПолучитьКПП_ОП_Клиент()
	
	КПП_ОтветственногоОПпо_налогу_на_прибыль = ПолучитьКПП_ОП_Сервер(Объект.абс_ОтветственноеОПпоНалогуНаПрибыль);
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьКПП_ОП_Сервер(ОП)
	
	Возврат ОП.КПП;	
	
КонецФункции
//\\АБС ВСТАВКА №43687 КОНЕЦ

//+++ Григорьев Д.В. - #7758734 (28.04.2017)
&НаКлиенте
Процедура УстановитьТолькоПросмотрВсемЭлементам(мТолькоПросмотр = Истина)

	Для Каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			Элемент.ТолькоПросмотр = мТолькоПросмотр;
		Исключение
			Элемент.Доступность = Не мТолькоПросмотр;						
		КонецПопытки;
	КонецЦикла;
	
	ЭтаФорма.ТолькоПросмотр = мТолькоПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимость()
	
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));	
	Если Не (мРолиПользователя.Найти(Справочники.РолиИсполнителей.ВедениеОбособленныхПодразделений) <> Неопределено Или мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) <> Неопределено) Тогда
		УстановитьТолькоПросмотрВсемЭлементам();
	КонецЕсли;	
	
КонецПроцедуры	
//--- Григорьев Д.В. - #7758734 (28.04.2017)