Перем мПользовательДопСогласование Экспорт;
// АБС ВСТАВКА
Перем мТекущийПользователь Экспорт;

Перем мРолиПользователя Экспорт;
// АБС ВСТАВКА КОНЕЦ


// Процедура - обработчик события "ПередЗаписью".
//
Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если абс_Статус 			= Перечисления.абс_СтатусыНоменклатуры.Использование И 
		Ссылка.абс_Статус 	= Перечисления.абс_СтатусыНоменклатуры.Использование И НЕ РольДоступна("ПолныеПрава") Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;	
	
	Если НЕ ЭтоГруппа Тогда
		Если абс_Статус = Перечисления.абс_СтатусыНоменклатуры.Использование И мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникГруппыНСИ) = Неопределено  Тогда
			//Сторчевой А.Н. 7767693 20.01.2017 {                                   
			Если НЕ Родитель.Код = "й00000148" Тогда
				// } Сторчевой А.Н. 7767693 20.01.2017
				ttk_ОбщегоНазначения.СообщитьОбОшибке("Только сотрудник группы НСИ может изменять.", Отказ);
				Возврат;
				//Сторчевой А.Н. 7767693 20.01.2017 {
			КонецЕсли;
			// } Сторчевой А.Н. 7767693 20.01.2017
		КонецЕсли;
			
	КонецЕсли;
	
	Если Не ЭтоГруппа Тогда  //АБС+ Тупиков 12.02.2013
		Если Не ЗначениеЗаполнено(абс_Ответственный) Тогда
			абс_Ответственный = ПараметрыСеанса.ТекущийПользователь;
		КонецЕсли;
	КонецЕсли;
	
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
	Если СогласованиеБезБП Тогда
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусСтатьиПрочихПоРегистру(Ссылка);
		Если НЕ абс_Статус = СтатусПоРегистру и абс_Статус = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
			СтатусДопСогласования 		= СтатусПоРегистру;
		КонецЕсли;
	КонецЕсли;
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	
	// АБС ВСТАВКА 
	
	Попытка
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусСтатьиПрочихПоРегистру(Ссылка);
		
		Если НЕ абс_Статус = СтатусПоРегистру ИЛИ НЕ ЗначениеЗаполнено(СтатусПоРегистру) Тогда
			ЗаписатьНовыйСтатус(абс_Статус, абс_ПричинаИзмененияСтатуса);		
		КонецЕсли;
		
		// АБС Изменение Родин Отключение бизнес-процессов 110314
		СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
		Если Не СогласованиеБезБП Тогда
			// Запустим БП если он еще не запущен
			Если абс_Статус = Перечисления.абс_СтатусыНоменклатуры.СогласованиеНСИ Тогда
				БПСогласование = НайтиБПСогласование();
				
				Если Не ЗначениеЗаполнено(БПСогласование) Тогда
					абс_БизнесПроцессы.ЗапуститьБПСогласованияСтатьиПрочих(Ссылка);	
				КонецЕсли;		
			КонецЕсли;
			
			//Выберем ответственого в случае дополнительного согласования
			Если абс_Статус = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
				
				БПСогласование = НайтиБПСогласование();
				
				Если НЕ БПСогласование = Неопределено Тогда
					
					БПСогласованиеОбъект = БПСогласование.ПолучитьОбъект();
					
					БПСогласованиеОбъект.ПользовательДопСогласование 	= абс_ПользовательДопСогласование;
					
					Если НЕ СтатусПоРегистру = абс_Статус Тогда
						БПСогласованиеОбъект.СтатусДопСогласования 		= СтатусПоРегистру;
					КонецЕсли;
					
					БПСогласованиеОбъект.Записать();
									
				КонецЕсли;
				
			КонецЕсли;
			
			// Попробуем закрыть задачу согласования		
			ЗадачаСогласование = ПолучитьЗадачуПоСтатьеПрочихСогласование();
			
			Если ЗадачаСогласование = Неопределено Тогда
				Возврат;
			КонецЕсли;
					
			Если НЕ ЗадачаСогласование.Выполнена Тогда
			
				ЗадачаОбъект = ЗадачаСогласование.ПолучитьОбъект();			
				ЗадачаОбъект.ВыполнитьЗадачу();
			КонецЕсли;	
		КонецЕсли;
		// АБС Изменение Родин Отключение бизнес-процессов 110314
	
	Исключение
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при записи статьи затрат: " + ОписаниеОшибки() + ".", Отказ);
		
		Возврат;
	КонецПопытки;
	// АБС ВСТАВКА КОНЕЦ
	
КонецПроцедуры

 // АБС ВСТАВКА Начало
Процедура ЗаписатьНовыйСтатус(НовыйСтатус, Комментарий = Неопределено) Экспорт
	
	НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовСтатейПрочихДоходовИРасходов.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.СтатьяПрочихДоходовИРасходов.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();;

	Запись.СтатьяПрочихДоходовИРасходов			= Ссылка;
	Запись.Исполнитель	 						= глЗначениеПеременной("глТекущийПользователь");	
	Запись.СтатусСтатьи							= НовыйСтатус;
	
	Запись.Комментарий 							= Комментарий;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция НайтиБПСогласование() Экспорт
	
	Возврат абс_БизнесПроцессы.НайтиБизнесПроцессПоСтатьеПрочих(Ссылка, "абсСогласованиеПрочихДоходовИРасходов");	
	
КонецФункции

Функция ПолучитьЗадачуПоСтатьеПрочихСогласование() Экспорт
	
	БП = НайтиБПСогласование();
	
	Если БП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СпТочек = Новый Массив;
	
	Статус = Ссылка.абс_Статус;
	
	Если Статус = Перечисления.абс_СтатусыНоменклатуры.Подготовка Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеОтказаноВСогласовании);
		
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.СогласованиеНСИ Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеДополнительноеСогласование);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ПовторнаяПодготовка);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);		
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Отказ Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеДополнительноеСогласование);
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Использование Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);

	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Архив Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеСтатьяЗатратУтверждена);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеОтказаноВСогласовании);
	КонецЕсли;	
		
	Возврат абс_БизнесПроцессы.НайтиЗадачуЗЗ(БП, СпТочек ,, Ложь);
	
КонецФункции



Если абс_Статус = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
	мПользовательДопСогласование = абс_ПользовательДопСогласование;
КонецЕсли;

мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь);
// АБС ВСТАВКА  КОНЕЦ