///////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции

Функция ПроверитьИдентификатор(Идентификатор)
	
	Результат = Истина;
	
	ДопустимыеСимволы = "_абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvxyz1234567890";
	ДопустимыеПервыеСимволы = "_абвгдеёжзийклмнопрстуфхцчшщъыьэюяabcdefghijklmnopqrstuvxyz"; 
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Найти(ДопустимыеПервыеСимволы,НРег(Лев(Идентификатор,1)))=0 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДлинаИдентификатора = СтрДлина(Идентификатор);
	
	Для Сч = 2 По ДлинаИдентификатора Цикл
		Если Найти(ДопустимыеСимволы,НРег(Сред(Идентификатор,Сч,1)))=0 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

Функция ПроверитьЗацикливание()
	
	МассивИспользуемыхПоказателей = ИспользуемыеПоказатели.ВыгрузитьКолонку("Показатель");
	
	Пока МассивИспользуемыхПоказателей.Количество()>0 Цикл
		
		Если МассивИспользуемыхПоказателей.Найти(Ссылка)<>Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗЛИЧНЫЕ
		                      |	абс_ФинансовыеПоказателиИспользуемыеПоказатели.Показатель
		                      |ИЗ
		                      |	Справочник.абс_ФинансовыеПоказатели.ИспользуемыеПоказатели КАК абс_ФинансовыеПоказателиИспользуемыеПоказатели
		                      |ГДЕ
		                      |	абс_ФинансовыеПоказателиИспользуемыеПоказатели.Ссылка В(&Показатели)");
		Запрос.УстановитьПараметр("Показатели", МассивИспользуемыхПоказателей);
		МассивИспользуемыхПоказателей = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Показатель");

	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

Процедура ЗаполнитьИспользуемыеПараметры()
	
	ИспользуемыеПоказатели.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_ФинансовыеПоказатели.Код КАК Идентификатор,
	                      |	абс_ФинансовыеПоказатели.Ссылка
	                      |ИЗ
	                      |	Справочник.абс_ФинансовыеПоказатели КАК абс_ФинансовыеПоказатели
	                      |ГДЕ
	                      |	НЕ абс_ФинансовыеПоказатели.ПометкаУдаления
	                      |	И НЕ абс_ФинансовыеПоказатели.ЭтоГруппа
	                      |
	                      |УПОРЯДОЧИТЬ ПО
	                      |	абс_ФинансовыеПоказатели.Код УБЫВ");
						  
	ТаблицаПараметров = Запрос.Выполнить().Выгрузить();
	СтрокаАлгоритма = АлгоритмРассчета;
	Для Каждого СтрокаТаблицы Из ТаблицаПараметров Цикл
		СтрокаПоиска = "";
		Если ВариантРассчета=Перечисления.абс_ВариантыРассчетаФинансовыхПоказателей.Процедура Тогда
			СтрокаПоиска = "ПолучитьЗначениеПоказателя("""+СтрокаТаблицы.Идентификатор+"""";
		ИначеЕсли ВариантРассчета=Перечисления.абс_ВариантыРассчетаФинансовыхПоказателей.Формула Тогда
			СтрокаПоиска = СтрокаТаблицы.Идентификатор;
		КонецЕсли;
		Если ЗначениеЗаполнено(СтрокаПоиска) Тогда
			Если Найти(СтрокаАлгоритма,СтрокаПоиска)>0 Тогда
				СтрокаИспользуемых = ИспользуемыеПоказатели.Найти(СтрокаТаблицы.Ссылка,"Показатель");
				Если СтрокаИспользуемых=Неопределено Тогда
					СтрокаИспользуемых = ИспользуемыеПоказатели.Добавить();
					СтрокаИспользуемых.Показатель = СтрокаТаблицы.Ссылка;
				КонецЕсли;
				СтрокаАлгоритма = СтрЗаменить(СтрокаАлгоритма,СтрокаПоиска,"");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры





////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроверитьИдентификатор(Код) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Неверный идентификатор!";
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьИспользуемыеПараметры();
	Если ВариантРассчета<>Перечисления.абс_ВариантыРассчетаФинансовыхПоказателей.Запрос И ПроверитьЗацикливание() Тогда
		Отказ = Истина;
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Обнаружено зацикливание используемых показателей! Запись невозможна!";
		Сообщение.Сообщить();
	КонецЕсли;
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбъектКопирования,,"Владелец");
	ПараметрыЗапроса = Неопределено;
	Код = "";
	
	ВременныеТаблицы.Очистить();
	Для Каждого СтрокаВТ Из ОбъектКопирования.ВременныеТаблицы Цикл
		НоваяСтрока = ВременныеТаблицы.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВТ);
	КонецЦикла;
	
	ИспользуемыеПоказатели.Очистить();
КонецПроцедуры
