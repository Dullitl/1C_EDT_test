
&НаСервереБезКонтекста
Процедура ОбновитьИзРегистраНаСервере()
	лЗапрос = новый Запрос("ВЫБРАТЬ * ИЗ РегистрСведений.ttk_ОКВЭД2.СрезПоследних УПОРЯДОЧИТЬ ПО Код");
	лтзВыборка = лЗапрос.Выполнить().Выгрузить();
	лСчНовых = 0; лСчОбновлено = 0; лСчОбработано = 0;
	для каждого лСтрокаТЗ из лтзВыборка цикл
		//- Смотрим есть ли элемент с таким кодом. Если нет, создаем.
		лТекКод = СокрЛП(лСтрокаТЗ.Код);
		лЭлемент = Справочники.ttk_ОКВЭД2.НайтиПоКоду(лТекКод);
		если НЕ ЗначениеЗаполнено(лЭлемент) тогда
			лобЭлемент = Справочники.ttk_ОКВЭД2.СоздатьЭлемент();
			лобЭлемент.Код = лТекКод;
			лобЭлемент.Записать();
			лСчНовых = лСчНовых + 1;
			лЭлемент = лобЭлемент.Ссылка;
		конецЕсли;
		лобЭлемент = лЭлемент.ПолучитьОбъект();
		//- Обновляем элемент.
		//* Код заполнили выше.
		//.Наименование
		лНаименование = СокрЛП(Лев(лСтрокаТЗ.Наименование, 150));
		если лобЭлемент.Наименование <> лНаименование тогда
			лобЭлемент.Наименование = лНаименование;
		конецЕсли;
		//.КодКлассификатора (без раздела)
		лКодКлассификатора = Сред(лСтрокаТЗ.Код, 3);
		если лобЭлемент.КодКлассификатора <> лКодКлассификатора тогда
			лобЭлемент.КодКлассификатора = лКодКлассификатора;
		конецЕсли;
		//.НаименованиеПолное
		если лобЭлемент.НаименованиеПолное <> лСтрокаТЗ.Наименование тогда
			лобЭлемент.НаименованиеПолное = лСтрокаТЗ.Наименование;
		конецЕсли;
		//.Раздел
		если лобЭлемент.Раздел <> лСтрокаТЗ.Раздел тогда
			лобЭлемент.Раздел = лСтрокаТЗ.Раздел;
		конецЕсли;
		//.Класс
		если лобЭлемент.Класс <> лСтрокаТЗ.Класс тогда
			лобЭлемент.Класс = лСтрокаТЗ.Класс;
		конецЕсли;
		//.Подкласс
		если лобЭлемент.Подкласс <> лСтрокаТЗ.Подкласс тогда
			лобЭлемент.Подкласс = лСтрокаТЗ.Подкласс;
		конецЕсли;
		//.Группа
		если лобЭлемент.Группа <> лСтрокаТЗ.Группа тогда
			лобЭлемент.Группа = лСтрокаТЗ.Группа;
		конецЕсли;
		//.Подгруппа
		если лобЭлемент.Подгруппа <> лСтрокаТЗ.Подгруппа тогда
			лобЭлемент.Подгруппа = лСтрокаТЗ.Подгруппа;
		конецЕсли;
		//.Вид
		если лобЭлемент.Вид <> лСтрокаТЗ.Вид тогда
			лобЭлемент.Вид = лСтрокаТЗ.Вид;
		конецЕсли;
		//.Включает
		если лобЭлемент.Включает <> лСтрокаТЗ.Включает тогда
			лобЭлемент.Включает = лСтрокаТЗ.Включает;
		конецЕсли;
		//.НеВключает
		если лобЭлемент.НеВключает <> лСтрокаТЗ.НеВключает тогда
			лобЭлемент.НеВключает = лСтрокаТЗ.НеВключает;
		конецЕсли;
		//.ДопИнфо
		если лобЭлемент.ДопИнфо <> лСтрокаТЗ.ДопИнфо тогда
			лобЭлемент.ДопИнфо = лСтрокаТЗ.ДопИнфо;
		конецЕсли;
		//.ИсточникЗагрузки
		если лобЭлемент.ИсточникЗагрузки <> лСтрокаТЗ.ИсточникЗагрузки тогда
			лобЭлемент.ИсточникЗагрузки = лСтрокаТЗ.ИсточникЗагрузки;
		конецЕсли;
		//.Действует
		если лобЭлемент.Действует <> лСтрокаТЗ.Действует тогда
			лобЭлемент.Действует = лСтрокаТЗ.Действует;
		конецЕсли;
		//.Родитель
		лРодитель = ДайРодителяПоКоду(лТекКод);
		если лобЭлемент.Родитель <> лРодитель тогда
			лобЭлемент.Родитель = лРодитель;
		конецЕсли;
		//- Если были изменения элемента, записываем.
		если лобЭлемент.Модифицированность() тогда 
			лобЭлемент.Записать(); 
			лСчОбновлено = лСчОбновлено + 1;
		конецЕсли;
		лСчОбработано = лСчОбработано + 1;
	конецЦикла; //по строкам выборки
	лСчОбработано = лСчОбработано + 1;
	Сообщить("Обработано: " + лСчОбработано);
	Сообщить("Обновлено: " + лСчОбновлено);
	Сообщить("Новых: " + лСчНовых);
	
	//= Еще проверим на лишние - которые есть в справочнике, но нет в регистре (могли быть добавлены вручную).
	лЗапрос2 = новый Запрос;
	лЗапрос2.Текст =
	"ВЫБРАТЬ ttk_ОКВЭД2.Код
	|ИЗ Справочник.ttk_ОКВЭД2 КАК ttk_ОКВЭД2
	|УПОРЯДОЧИТЬ ПО ttk_ОКВЭД2.Код";
	лВыборка2 = лЗапрос2.Выполнить().Выбрать();
	лСчЛишних = 0;
	лмасКодыРегистра = лтзВыборка.ВыгрузитьКолонку("Код");
	пока лВыборка2.Следующий() цикл
		если лмасКодыРегистра.Найти(лВыборка2.Код) = неопределено тогда
			//- Лишний.
			лСчЛишних = лСчЛишних + 1;
			Сообщить(" Лишний код:" + лВыборка2.Код);
		конецЕсли;
	конецЦикла;
	Сообщить("Лишних: " + лСчЛишних);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьИзРегистра(Команда)
	ОбновитьИзРегистраНаСервере();
	ЭтаФорма.ОбновитьОтображениеДанных();
КонецПроцедуры

&НаСервереБезКонтекста
//*** Возвращает родителя элемента по Коду элемента.
Функция ДайРодителяПоКоду(пКод_)
	лРезультат = Справочники.ttk_ОКВЭД2.ПустаяСсылка();
	если НЕ ТипЗнч(пКод_) = Тип("Строка") тогда Возврат лРезультат; конецЕсли;
	если ПустаяСтрока(пКод_) тогда Возврат лРезультат; конецЕсли;
	лКодРодителя = СокрЛП(Лев(пКод_, СтрДлина(пКод_) - 1)); //левая часть кода без одного символа
	если Прав(лКодРодителя, 1) = "." тогда лКодРодителя = СокрЛП(Лев(лКодРодителя, СтрДлина(лКодРодителя) - 1)); конецЕсли; //отсекаем крайнюю правую точку
	пока НЕ ПустаяСтрока(лКодРодителя) цикл
		лРодитель = Справочники.рэсОКВЭД2.НайтиПоКоду(лКодРодителя);
		если ЗначениеЗаполнено(лРодитель) тогда
			лРезультат = лРодитель;
			Прервать;
		конецЕсли;
		лКодРодителя = СокрЛП(Лев(лКодРодителя, СтрДлина(лКодРодителя) - 1)); //убираем один символ справа
		если Прав(лКодРодителя, 1) = "." тогда лКодРодителя = СокрЛП(Лев(лКодРодителя, СтрДлина(лКодРодителя) - 1)); конецЕсли; //отсекаем крайнюю правую точку
	конецЦикла;
	Возврат лРезультат;
КонецФункции //ДайРодителяПоКоду
