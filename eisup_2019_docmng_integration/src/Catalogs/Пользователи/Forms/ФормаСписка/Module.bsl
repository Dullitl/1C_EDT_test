////////////////////////////////////////////////////////////////////////////////
// КОМАНДЫ ФОРМЫ
//

&НаКлиенте
Процедура КонтактнаяИнформация(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		
		Предупреждение("Необходимо выбрать пользователя"); 
		Возврат;
	КонецЕсли; 
	
	ФормаРедактрованияКИ = ПолучитьФорму("Справочник.Пользователи.Форма.РедактированиеКонтактнойИнформации");
	ФормаРедактрованияКИ.Ссылка = ТекущиеДанные.Ссылка;
	ФормаРедактрованияКИ.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппыПользователя(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		
		Предупреждение("Необходимо выбрать пользователя"); 
		Возврат;
	КонецЕсли; 
	
	ФормаНастройкиГруппПользователя = ПолучитьФорму("Справочник.Пользователи.Форма.ФормаНастройкиГруппПользователя");
	ФормаНастройкиГруппПользователя.Пользователь = ТекущиеДанные.Ссылка;
	ФормаНастройкиГруппПользователя.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиПользователя(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		
		Предупреждение("Необходимо выбрать пользователя"); 
		Возврат;
	КонецЕсли; 
	
	ФормаРедактрованияНастроек = ПолучитьФорму("РегистрСведений.НастройкиПользователей.Форма.ФормаРедактированияНастроек");
	ФормаРедактрованияНастроек.НачальноеЗначениеВыбора = ТекущиеДанные.Ссылка;
	ФормаРедактрованияНастроек.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныеПрава(Команда)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		
		Предупреждение("Необходимо выбрать пользователя"); 
		Возврат;
	КонецЕсли; 
	
	Если ТекущиеДанные.ПрофильПолномочийПользователя.Пустая() Тогда
		ФормаРедактирования = ПолучитьФорму("РегистрСведений.ЗначенияДополнительныхПравПользователя.Форма.ФормаРедактирования");
		ФормаРедактирования.Пользователь = ТекущиеДанные.Ссылка;
		ФормаРедактирования.Открыть();		
	Иначе
		Предупреждение("Пользователю назначен профиль.
					|Настройка дополнительных прав выполняется в форме профиля.",, "Дополнительные права");
	КонецЕсли; 
	
КонецПроцедуры
 

////////////////////////////////////////////////////////////////////////////////
// ФОРМА
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	//АБС_Родин
	МассивРазрешенныхПользователей = ПолучитьМассивРазрешенныхПользователей();	
	ЭлементОтбора = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Ссылка");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = МассивРазрешенныхПользователей;
	//АБС_Родин	
	
	//АБС ИЗМЕНЕНО №36432 НАЧАЛО
	//90% тормозов при открытии списка из-за этой проверки, убрал проверку
	//УправлениеПользователямиСервер.ПроверитьСинхронизациюПользователейИУстановитьОформлениеСписка(Список.УсловноеОформление);
	//\\АБС ИЗМЕНЕНО №36432 КОНЕЦ
	
	Если ТекущийРежимЗапуска() = РежимЗапускаКлиентскогоПриложения.ОбычноеПриложение Тогда
		// Доп. сведения доступны только в обычном приложении
		Элементы.ДополнительныеСведения.Видимость = Истина;
		
		мНаличиеПраваАдминистрирования = УправлениеДопПравамиПользователей.ЕстьПравоАдминистрированияПользователей();
		Если НЕ мНаличиеПраваАдминистрирования Тогда 
			Элементы.Администрирование.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ИзмененПользовательИБ" Тогда
		ОбщегоНазначенияКлиентСервер.СнятьУсловноеОформлениеСпискаЗначений(Список.УсловноеОформление, "ЭлементыСправочникаТребующиеВнимания", Параметр);
	КонецЕсли;
	
КонецПроцедуры

//Абс_Родин
&НаСервере
Функция ПолучитьМассивРазрешенныхПользователей()
	 
	 МассивРазрешенныхПользователей = Новый Массив;
	 ЕстьРольСогласования =  Ложь;
	 
	 Запрос = Новый Запрос;
	 Запрос.Текст = 
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	РолиИИсполнители.Исполнитель
	 |ИЗ
	 |	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
	 |ГДЕ
	 |	РолиИИсполнители.Роль В(&Роль)
	 |	И РолиИИсполнители.Исполнитель = &Исполнитель";
	 
	 МассивРолей = Новый Массив;
	 МассивРолей.Добавить(Справочники.РолиИсполнителей.СуперПользователь);
	 МассивРолей.Добавить(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании);
	 МассивРолей.Добавить(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеДЗО);
	 МассивРолей.Добавить(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК);
	 
	 Запрос.УстановитьПараметр("Исполнитель", ПараметрыСеанса.ТекущийПользователь);
	 Запрос.УстановитьПараметр("Роль", МассивРолей);
	 Результат = Запрос.Выполнить();
	 ВыборкаДетальныеЗаписи = Результат.Выбрать();
	 Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		 ЕстьРольСогласования =  Истина;	
	 КонецЕсли;
	 
	 Если ЕстьРольСогласования Тогда 
		 Запрос = Новый Запрос;
		 Запрос.Текст = 
		 "ВЫБРАТЬ
		 |	Пользователи.Ссылка КАК Пользователь
		 |ПОМЕСТИТЬ ДоступКоВсем
		 |ИЗ
		 |	РегистрСведений.НастройкиПравДоступаПользователей КАК НастройкаДоступа
		 |		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
		 |		ПО (ИСТИНА)
		 |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ГруппыПользователей.ПользователиГруппы КАК ГруппыПользователейПользователиГруппы
		 |		ПО НастройкаДоступа.Пользователь = ГруппыПользователейПользователиГруппы.Ссылка
		 |ГДЕ
		 |	НастройкаДоступа.ВидОбъектаДоступа В(&МассивВидовОбъектов)
		 |	И НастройкаДоступа.ВидНаследованияПравДоступаИерархическихСправочников = &НаПодчиненных
		 |	И НастройкаДоступа.ОбъектДоступа В(&СписокПустыхСсылок)
		 |	И ГруппыПользователейПользователиГруппы.Пользователь = &Пользователь
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Пользователь
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ГруппыПользователейПользователиГруппы.Ссылка КАК Пользователь
		 |ПОМЕСТИТЬ ВсеГруппыПользователя
		 |ИЗ
		 |	Справочник.ГруппыПользователей.ПользователиГруппы КАК ГруппыПользователейПользователиГруппы
		 |ГДЕ
		 |	ГруппыПользователейПользователиГруппы.Пользователь = &Пользователь
		 |
		 |ИНДЕКСИРОВАТЬ ПО
		 |	Пользователь
		 |;
		 |
		 |////////////////////////////////////////////////////////////////////////////////
		 |ВЫБРАТЬ
		 |	ГруппыПользователейПользователиГруппы.Пользователь
		 |ИЗ
		 |	Справочник.ГруппыПользователей.ПользователиГруппы КАК ГруппыПользователейПользователиГруппы,
		 |	ВсеГруппыПользователя КАК ВсеГруппыПользователя
		 |ГДЕ
		 |	ГруппыПользователейПользователиГруппы.Ссылка В
		 |			(ВЫБРАТЬ
		 |				ВсеГруппыПользователя.Пользователь
		 |			ИЗ
		 |				ВсеГруппыПользователя КАК ВсеГруппыПользователя)
		 |
		 |СГРУППИРОВАТЬ ПО
		 |	ГруппыПользователейПользователиГруппы.Пользователь
		 |
		 |ОБЪЕДИНИТЬ ВСЕ
		 |
		 |ВЫБРАТЬ
		 |	ДоступКоВсем.Пользователь
		 |ИЗ
		 |	ДоступКоВсем КАК ДоступКоВсем";
		 
		 мМассивПустыхЗначенийОбъектаДоступа = ОбщегоНазначения.МассивПустыхЗначений(Метаданные.РегистрыСведений.НастройкиПравДоступаПользователей.Измерения.ОбъектДоступа.Тип);

		 МассивВидовОбъектов = Новый Массив;
		 МассивВидовОбъектов.Добавить(Перечисления.ВидыОбъектовДоступа.Организации);
		 
		 Запрос.УстановитьПараметр("Пользователь",ПараметрыСеанса.ТекущийПользователь);
		 Запрос.УстановитьПараметр("МассивВидовОбъектов", МассивВидовОбъектов);
		 Запрос.УстановитьПараметр("СписокПустыхСсылок", мМассивПустыхЗначенийОбъектаДоступа);
		 Запрос.УстановитьПараметр("НаПодчиненных", Перечисления.ВидыНаследованияПравДоступаИерархическихСправочников.РаспространитьНаПодчиненных);
		 
		 
		 Выборка = Запрос.Выполнить().Выбрать();
		 Пока Выборка.Следующий() Цикл
			 МассивРазрешенныхПользователей.Добавить(Выборка.Пользователь);	
		 КонецЦикла;	
		 
	 КонецЕсли;
	 
     Возврат МассивРазрешенныхПользователей;
	 
 КонецФункции  
//АБС_Родин

&НаКлиенте
Процедура ИсторияИзмененияПрав(Команда)
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено 
		ИЛИ ТекущиеДанные.ЭтоГруппа Тогда
		
		Предупреждение("Необходимо выбрать пользователя"); 
		Возврат;
	КонецЕсли; 
	
	ФормаНастройкиПрав = ПолучитьФорму("Документ.абс_ЗаявкаНаДобавлениеИзменениеПрав.Форма.ФормаСписка");
	ЭлементОтбора = ФормаНастройкиПрав.Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Пользователь");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбора.ПравоеЗначение = Элементы.Список.ТекущиеДанные.Ссылка;

	ФормаНастройкиПрав.Открыть();

КонецПроцедуры
