//////////////////////////////////////////////////////////////////////////////
// Процедуры и функции для заполнения временных таблиц

// СформироватьДеревоЗаполненияВременныхТаблиц(СписокВременныхТаблиц)
// Формирует дерево значений с временными таблицами, которые должны быть заполнены,
// чтобы заполнились все временные таблицы из списка
// Параметры:
// СписокВременныхТаблиц - СписокЗначений, содержащий временные таблицы, которые должны быть заполнены
//  для выполнения основного запроса
// Возвращаемое заначение:
//  ДеревоЗначений, содержащее полное дерево зависимости временных таблиц из списка 
Функция СформироватьДеревоЗаполненияВременныхТаблиц(СписокВременныхТаблиц) Экспорт
	
	Результат = Новый ДеревоЗначений;
	Результат.Колонки.Добавить("ВременнаяТаблица",Новый ОписаниеТипов("СправочникСсылка.абс_ФинансовыеПоказателиВременныеТаблицы"));
	
	Для Каждого ЭлементСписка Из СписокВременныхТаблиц Цикл
		СтрокаРезультат = Результат.Строки.Добавить();
		СтрокаРезультат.ВременнаяТаблица = ЭлементСписка.Значение;
		ЗаполнитьСтрокиИсточники(СтрокаРезультат);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ЗаполнитьВременныеТаблицы(ДеревоВременныхТаблиц, НачалоПериода, КонецПериода, ДатаРассчета, Организация, МВТ, ЗаполненныеТаблицы, Отказ) Экспорт
	
	Для Каждого СтрокаДерева Из ДеревоВременныхТаблиц.Строки Цикл
		
		Если ЗаполненныеТаблицы.Получить(СтрокаДерева.ВременнаяТаблица.Код)<>Неопределено Тогда
			// временная таблица уже заполнена - не заполняем
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрокаИсточника Из СтрокаДерева.Строки Цикл
			ЗаполнитьВременныеТаблицы(СтрокаИсточника, НачалоПериода, КонецПериода, ДатаРассчета, Организация, МВТ, ЗаполненныеТаблицы, Отказ);
			Если Отказ Тогда
				Возврат;
			КонецЕсли;
		КонецЦикла;
		
		Попытка
			ТекстЗапроса = СтрокаДерева.ВременнаяТаблица.ТекстЗапроса;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса,Символы.ПС," ");
			ПозицияИЗ = Найти(ВРег(ТекстЗапроса)," ИЗ ");
			ТекстЗапроса = Лев(ТекстЗапроса,ПозицияИЗ-1)+" ПОМЕСТИТЬ "+СтрокаДерева.ВременнаяТаблица.Код+Сред(ТекстЗапроса,ПозицияИЗ);
			
			Запрос = Новый Запрос(ТекстЗапроса);
			
			Запрос.МенеджерВременныхТаблиц = МВТ;
			ТаблицаПараметров = СтрокаДерева.ВременнаяТаблица.ПараметрыЗапроса.Получить();
			Для Каждого СтрокаПараметра Из ТаблицаПараметров Цикл
				Запрос.УстановитьПараметр(СтрокаПараметра.Параметр, СтрокаПараметра.Значение);
			КонецЦикла;
			Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
			Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
			Запрос.УстановитьПараметр("ДатаРассчета", ДатаРассчета);
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.Выполнить();
		Исключение
		    Отказ = Истина;
		КонецПопытки;
	КонецЦикла;
КонецПроцедуры



////////////////////////////////////////////////////////////////////////////////
// Вспомогательные процедуры и функции

Процедура ЗаполнитьСтрокиИсточники(СтрокаДерева)
	
	ТаблицаИсточников = СтрокаДерева.ВременнаяТаблица.ВременныеТаблицы;
	Для Каждого СтрокаТаблицы Из ТаблицаИсточников Цикл
		СтрокаИсточника = СтрокаДерева.Строки.Добавить();
		СтрокаИсточника.ВременнаяТаблица = СтрокаТаблицы.ВременнаяТаблица;
		ЗаполнитьСтрокиИсточники(СтрокаИсточника);
	КонецЦикла;
	
КонецПроцедуры
