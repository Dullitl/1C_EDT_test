Перем ПрошлыйИзмененныйРодительОбъектаДоступа;

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
		
		//абс Родин 39895 240414
		Если Не ЗначениеЗаполнено(абс_Организация) Тогда
			Сообщить("Необходимо заполнить организацию!");
			Отказ = Истина;			
		КонецЕсли;
		//абс Родин 39895 240414
	
	ПрошлыйИзмененныйРодительОбъектаДоступа = ?(Не ЭтоНовый() и Не Ссылка.Родитель = Родитель, Ссылка.Родитель, Неопределено);
		НастройкаПравДоступа.ПередЗаписьюНовогоОбъектаСПравамиДоступаПользователей(ЭтотОбъект, Отказ, Родитель);
		
		//АБС НАЧАЛО Задача №08759
		Если НЕ Отказ И ЭтоГруппа И абс_Case Тогда
			
			СписокГрупп = Новый СписокЗначений;
			ПолучитьВсехРодителейПроекта(Ссылка, СписокГрупп);
			Для Каждого с Из СписокГрупп Цикл
				
				Если с.Значение.абс_Case Тогда 
					Сообщить("Нельзя установить признак! Признак уже установлен по группе: "+с.Значение.Наименование);
					Отказ = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;	
		//\\АБС КОНЕЦ Задача №08759
		
		// АБС. Проектный учет
		//Если Не ЭтоНовый() Тогда 
		//	абс_ЗаказПокупателя = Документы.ЗаказПокупателя.НайтиПоРеквизиту("Проект", Ссылка);
		//КонецЕсли;
		//\\АБС
		
		//АБС_Стрельцов+ добавлено: 15.11.2012
		//------------------------------------
		//Если абс_Организация = Справочники.Организации.ПустаяСсылка() Тогда
		//	Сообщить("Не заполнена Организация !", СтатусСообщения.Важное);
		//	Отказ = Истина;
		//КонецЕсли;
		//------------------------------------
		//АБС_Стрельцов-
		
		//АБС_Стрельцов+ добавлено: 10.12.2012
		//проверка ТЧ "Заказы" на наличие дублей значений "Организация"
		//------------------------------------
		РезультатПроверки = абс_ПроектныйУчет.ПроверитьТабличнуюЧастьЗаказыНаДублиОрганизаций(абс_Заказы.Выгрузить());
		Если РезультатПроверки.Свойство("ЕстьДубли") И РезультатПроверки.ЕстьДубли Тогда
			Сообщить("Невозможно записать данный элемент! В табличной части ""Заказы"" существует дублирование организации: """+Строка(РезультатПроверки.Организация)+""" !", СтатусСообщения.Важное);
			Отказ = Истина;
		КонецЕсли;
		//------------------------------------
		//АБС_Стрельцов-

		//АБС ВСТАВКА 10.04.2014 Навценя
		ДополнительныеСвойства.Вставить("ИнтеграцияLotus_ПредыдущееСостояние", ИнтеграцияLotus_ПолучитьПредыдущиеРеквизиты()); 
		ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый()); 
		//АБС ВСТАВКА  КОНЕЦ
		
	КонецЕсли;
	
КонецПроцедуры

//АБС НАЧАЛО Задача №08759
Процедура ПолучитьВсехРодителейПроекта(ТекущийПроект, СписокГрупп) Экспорт //абс_Стрельцов+ добавлено: 25.09.2012
	
	РодительПроекта = ТекущийПроект.Родитель;
	Если РодительПроекта.Пустая() Тогда
		Возврат;
	Иначе
		СписокГрупп.Добавить(РодительПроекта);
		ПолучитьВсехРодителейПроекта(РодительПроекта, СписокГрупп)
	КонецЕсли;	                      
	
КонецПроцедуры
//\\АБС КОНЕЦ Задача №08759

Процедура ПриЗаписи(Отказ)
	
	Если НЕ ОбменДанными.Загрузка Тогда
		НастройкаПравДоступа.ОбновитьПраваДоступаКИерархическимОбъектамПриНеобходимости(Ссылка,ПрошлыйИзмененныйРодительОбъектаДоступа, Отказ);
		
		//АБС ВСТАВКА 10.04.2014 Навценя
		ИнтеграцияLotus_ЗарегистрироватьИзменения(Отказ);
		//АБС ВСТАВКА  КОНЕЦ
		//АБС ВСТАВКА 47329  29.09.2014 13:41:47  Шамов
		Если ЗначениеЗаполнено(КодПроектаКомпании) Тогда
			ПроверитьКодТитула(Отказ);
		КонецЕсли;
		//АБС ВСТАВКА 47329 КОНЕЦ
	
	КонецЕсли;
	// АБС. Проектный учет
	//СоздатьЗаказПокупателя(Отказ);
	//\\АБС
	
КонецПроцедуры

// АБС. Проектный учет
Процедура СоздатьЗаказПокупателя(Отказ)
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(абс_ЗаказПокупателя) Тогда
		
		//АБС_Стрельцов+ добавлено: 15.11.2012
		//---------------------------------------
		Если абс_ЗаказПокупателя.Организация = Справочники.Организации.ПустаяСсылка() Тогда
			//Сообщить("Невозможно выбрать документ Заказ Покупателя, у которого пустая Организация !", СтатусСообщения.Важное);
			//Отказ = Истина;
			ЗаказПокупателяОбъект = абс_ЗаказПокупателя.ПолучитьОбъект();
			ЗаказПокупателяОбъект.Организация = абс_Организация;
			Попытка
				ЗаказПокупателяОбъект.Записать();
			Исключение
				Сообщить("Невозможно было установить организацию для выбранного документа Заказ Покупателя по причине: "+ОписаниеОшибки(), СтатусСообщения.Внимание);
			КонецПопытки;
		КонецЕсли;
		//---------------------------------------
		//АБС_Стрельцов-
		
		Возврат;
	КонецЕсли;
	ЗаказПокупателя = Документы.ЗаказПокупателя.СоздатьДокумент();
	ЗаказПокупателя.Дата = НачалоГода(ТекущаяДата());
	ЗаказПокупателя.Организация = абс_Организация;
	ЗаказПокупателя.Ответственный = Ответственный;
	ЗаказПокупателя.Проект = Ссылка;
	Попытка
		ЗаказПокупателя.Записать(РежимЗаписиДокумента.Запись);
		абс_ЗаказПокупателя = ЗаказПокупателя.Ссылка;
		Записать();
	Исключение
	КонецПопытки;
КонецПроцедуры
//\\АБС


//АБС ВСТАВКА 10.04.2014 Навценя
Функция ИнтеграцияLotus_ПолучитьПредыдущиеРеквизиты()
	
	СтруктураРеквизитов = Новый Структура;
	
	Если ЭтоНовый() Тогда
		Возврат СтруктураРеквизитов;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	Проекты.Родитель,
	                      |	Проекты.Наименование,
	                      |	Проекты.ДатаНачала,
	                      |	Проекты.ДатаОкончания,
	                      |	Проекты.Ответственный,
	                      |	Проекты.Описание,
	                      |	Проекты.КодПроектаКомпании,
	                      |	Проекты.Закрыт,
	                      |	Проекты.абс_Статус,
	                      |	Проекты.абс_Case,
	                      |	Проекты.абс_Организация,
	                      |	Проекты.абс_Доходный,
	                      |	Проекты.абс_ОснованиеПроекта,
	                      |	Проекты.абс_РуководительПроекта,
	                      |	Проекты.абс_ТЭО,
	                      |	Проекты.абс_ВидПроекта,
	                      |	Проекты.абс_Портфель
	                      |ИЗ
	                      |	Справочник.Проекты КАК Проекты
	                      |ГДЕ
	                      |	Проекты.Ссылка = &Ссылка");
						  
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Для Каждого Колонка из Результат.Колонки Цикл 
		СтруктураРеквизитов.Вставить(Колонка.Имя);	
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл 
		ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, Выборка); 	
	КонецЦикла;
	
	Возврат СтруктураРеквизитов;
	
КонецФункции

Процедура ИнтеграцияLotus_ЗарегистрироватьИзменения(Отказ)
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.Свойство("ЭтоНовый") Тогда 
		Возврат;
	КонецЕсли;
		
	Если НЕ ДополнительныеСвойства.Свойство("ИнтеграцияLotus_ПредыдущееСостояние") Тогда 
		Возврат;		
	КонецЕсли;
	
	Узел = Справочники.абс_НастройкиОбменаСSQL.ИнтеграцияLotus_ПолучитьУзелПроекты();
	
	Если НЕ ЗначениеЗаполнено(Узел) Тогда 
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.ЭтоНовый Тогда  
		ПланыОбмена.ЗарегистрироватьИзменения(Узел, Ссылка);
		Возврат;
	КонецЕсли;
	
	Для Каждого реквизит из ДополнительныеСвойства.ИнтеграцияLotus_ПредыдущееСостояние Цикл  
		Если реквизит.значение <> ЭтотОбъект[реквизит.ключ] Тогда 
			ПланыОбмена.ЗарегистрироватьИзменения(Узел, Ссылка);
			Прервать;
		КонецЕсли;
	КонецЦикла;
			
КонецПроцедуры
//АБС ВСТАВКА  КОНЕЦ

//АБС ВСТАВКА 47329  29.09.2014 13:41:47  Шамов
Процедура ПроверитьКодТитула(Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	Проекты.Ссылка
		|ИЗ
		|	Справочник.Проекты КАК Проекты
		|ГДЕ
		|	Проекты.Ссылка <> &Ссылка
		|	И Проекты.КодПроектаКомпании = &КодПроектаКомпании";

	Запрос.УстановитьПараметр("КодПроектаКомпании", КодПроектаКомпании);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);

	Результат = Запрос.Выполнить();
   	Если НЕ Результат.Пустой() Тогда
		Отказ = Истина;
		Сообщить("В базе уже существует проект с кодом проекта компании """ + КодПроектаКомпании + """");
	КонецЕсли;
	
КонецПроцедуры
//АБС ВСТАВКА 47329 КОНЕЦ
