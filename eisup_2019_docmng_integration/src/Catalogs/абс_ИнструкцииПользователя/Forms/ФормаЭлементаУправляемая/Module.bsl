&НаСервере
Процедура УстановитьОтборХранилища()
	
	СписокХранилищаДопИнформации.Отбор.Элементы.Очистить();
	
	ОтборОбъект = СписокХранилищаДопИнформации.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборОбъект.ВидСравнения 	= ВидСравненияКомпоновкиДанных.Равно;
	ОтборОбъект.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект");
	ОтборОбъект.ПравоеЗначение 	= Объект.Ссылка;
	ОтборОбъект.Использование	= Истина;
		
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьОтборХранилища();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьФайлов()
	
	Элементы.СписокХранилищаДопИнформации.Доступность = ЗначениеЗаполнено(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура СписокХранилищаДопИнформацииПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Инструкция не записана.", Отказ);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьОтборХранилища();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступностьФайлов();
	
	#Если не ТолстыйКлиентОбычноеПриложение Тогда 		
		Элементы.СписокХранилищаДопИнформацииКнопкаУдалить.Видимость = ложь;
	#Иначе
		Элементы.СписокХранилищаДопИнформацииКнопкаУдалить.Видимость = РольДоступна("ПолныеПрава");		
	#КонецЕсли		  	
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	УстановитьДоступностьФайлов();
	
	УстановитьОтборХранилища();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСсылкуТекущегоФайла(ТекущаяСтрока)
	
	Возврат ТекущаяСтрока.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура КомандаОткрытьФайл(Команда)
	
	Состояние("Загрузка файла...");
	
	СсылкаНаФайл = ПолучитьСсылкуТекущегоФайла(Элементы.СписокХранилищаДопИнформации.ТекущаяСтрока);
	
	НаименованиеФайла = "";
	                                       
	АдресХран = ПолучитьФайлССервера(СсылкаНаФайл, НаименованиеФайла);
	
	Если АдресХран = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолучитьФайл(АдресХран, НаименованиеФайла, Истина);
	
	Элементы.СписокХранилищаДопИнформации.Обновить();

КонецПроцедуры

&НаКлиенте
Процедура КомандаЗагрузитьФайл(Команда)
				
	Состояние("Отправка файла на сервер...");
	
	АдресХранилища = "";	
	ПутьКФайлу = "";
	
	Если НЕ ПоместитьФайл(АдресХранилища, "", ПутьКФайлу, Истина, УникальныйИдентификатор) Тогда 
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при загрузке файла на сервер.");
		Возврат;
	КонецЕсли;
	
	ИмяФайла = "";
	ИмяКаталога = "";
	
	РаботаСФайлами.ПолучитьКаталогИИмяФайла(ПутьКФайлу, ИмяКаталога, ИмяФайла);
	
	ПередатьФайлНаСервер(АдресХранилища, ИмяФайла);
	
	Элементы.СписокХранилищаДопИнформации.Обновить();
	
	Объект.Дата = ТекущаяДата();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОбновить(Команда)
	
	Элементы.СписокХранилищаДопИнформации.Обновить();
	
КонецПроцедуры

&НаСервере
Функция ПередатьФайлНаСервер(ВремФайл, ИмяФайла)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ВремФайл);
	
	СтруктураВозврата = абс_РаботаСФайлами.ЗаписатьФайлВоВнешнееХранилище(СписокХранилищаДопИнформации.Отбор.Элементы[0].ПравоеЗначение, ДвоичныеДанные, ИмяФайла);
	
	Возврат СтруктураВозврата.Успешно;
			
КонецФункции

&НаСервере
Функция ПолучитьФайлССервера(СсылкаНаФайл, НаименованиеФайла)
	
	ДвоичныеДанные = абс_РаботаСФайлами.ПолучитьФайлИзВнешнегоХранилища(СсылкаНаФайл);
	
	Если ДвоичныеДанные = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Попытка 
		АдресХранилища = "";	
		АдресХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
		
		НаименованиеФайла = СсылкаНаФайл.Наименование;

	Исключение
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при получении файла из хранилища.");
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат АдресХранилища;
			
КонецФункции
      
&НаКлиенте
Процедура ЗагрузитьИнструкцию(Команда)
	
	Состояние("Отправка файла на сервер...");
	
	АдресХранилища = "";	
	ПутьКФайлу = "";
	
	Если НЕ ПоместитьФайл(АдресХранилища, "", ПутьКФайлу, Истина, УникальныйИдентификатор) Тогда 
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при загрузке файла на сервер.");
		Возврат;
	КонецЕсли;
	
	ИмяФайла = "";
	ИмяКаталога = "";
	
	РаботаСФайлами.ПолучитьКаталогИИмяФайла(ПутьКФайлу, ИмяКаталога, ИмяФайла);
	
	ПередатьИнструкциюНаСервер(АдресХранилища, ИмяФайла);
	
КонецПроцедуры

&НаСервере
Процедура ПередатьИнструкциюНаСервер(ВремФайл, ИмяФайла)
	
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(ВремФайл);	
	Реквизит = РеквизитФормыВЗначение("Объект"); 		
	Реквизит.Инструкция = Новый ХранилищеЗначения(ДвоичныеДанные);
	Реквизит.ИмяИнструкции = ИмяФайла;
	Реквизит.Записать();
	ЗначениеВРеквизитФормы(Реквизит, "Объект");
			
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	
	
	Ответ = Вопрос("Продолжить выполнение операции, удалить файл?",  РежимДиалогаВопрос.ДаНет, 0);
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СсылкаНаФайл = ПолучитьСсылкуТекущегоФайла(Элементы.СписокХранилищаДопИнформации.ТекущаяСтрока);
	УдалитьФайлНаСервер(СсылкаНаФайл);	
	Элементы.СписокХранилищаДопИнформации.Обновить();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьФайлНаСервер(СсылкаНаФайл)
		
	Если не СсылкаНаФайл = Неопределено Тогда
		СсылкаНаФайл.Ссылка.ПолучитьОбъект().Удалить();
	КонецЕсли;		
	
КонецПроцедуры


