Перем мПользовательДопСогласование Экспорт;

// Обработчик события элемента ПриКопировании
//
Процедура ПриКопировании(ОбъектКопирования)

	Если Не ЭтоГруппа Тогда
		ЕдиницаХраненияОстатков = Неопределено;
	КонецЕсли; 

	Проект = Справочники.Проекты.ПустаяСсылка();
	
КонецПроцедуры

// Обработчик события ПередЗаписью формы.
//
Процедура ПередЗаписью(Отказ)

	Если НЕ ОбменДанными.Загрузка
	   И НЕ ЭтоГруппа
	   И НЕ ЗначениеЗаполнено(БазоваяЕдиницаИзмерения) Тогда
	    #Если Клиент Тогда
		РаботаСДиалогами.СообщитьПользователюНезаполненРеквизит(Ссылка, "базовая единица");
		#КонецЕсли
		Отказ = Истина;
	КонецЕсли;
	
	// АБС ВСТАВКА Фролов 20111102 Начало
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	
	Если абс_СтатусНоменклатурнойГруппы 			= Перечисления.абс_СтатусыНоменклатуры.Использование И 
		Ссылка.абс_СтатусНоменклатурнойГруппы 	= Перечисления.абс_СтатусыНоменклатуры.Использование И НЕ РольДоступна("ПолныеПрава") Тогда
		
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;
	
	НГСтроительство = Константы.абс_НоменклатурнаяГруппаСтроительство.Получить();
	
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));
	
	
	
	Если мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникГруппыНСИ) = Неопределено Тогда
		
		Если НЕ ПринадлежитЭлементу(НГСтроительство) Тогда
			Если мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительБухгалтерскойГруппы) = Неопределено Тогда
				ttk_ОбщегоНазначения.СообщитьОбОшибке("Запрещено изменять номенклатурные группы", Отказ);
			КонецЕсли;
		Иначе 
			Если Не ЗначениеЗаполнено(Родитель.Организация) Тогда
				ttk_ОбщегоНазначения.СообщитьОбОшибке("Не задана организация в группе", Отказ);
				Возврат;
			КонецЕсли;
			
			РолиДляПроверкиОрганизации = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"),Родитель.Организация);
			
			Если РолиДляПроверкиОрганизации.Найти(Справочники.РолиИсполнителей.ПодготовкаНоменклатурныхГрупп) = Неопределено Тогда
				ttk_ОбщегоНазначения.СообщитьОбОшибке("Запрещено создавать или изменять элементы по организации:  " + Родитель.Организация, Отказ);
			КонецЕсли;
			
		КонецЕсли; 
	КонецЕсли;
	// АБС ВСТАВКА Фролов 20111102 КОНЕЦ
		
	//АБС Добавлено 08.01.11
	
	Если ЭтоНовый() И НЕ ЭтоГруппа Тогда
		абс_Ответственный = глЗначениеПеременной("глТекущийПользователь");		
		
		Если НЕ ЗначениеЗаполнено(абс_СтатусНоменклатурнойГруппы) Тогда
			абс_СтатусНоменклатурнойГруппы = Перечисления.абс_СтатусыНоменклатуры.Подготовка;
		КонецЕсли;
		
	КонецЕсли;	
	//\\АБС Добавлено 08.01.11
	
	// АБС ВСТАВКА 20110211
	// Только сотрудник НСИ может менять группу номенклатуры не в статусе Подготовка
	Если НЕ Родитель = Ссылка.Родитель Тогда
		// Изменен родитель
		
		Если (НЕ абс_СтатусНоменклатурнойГруппы = Перечисления.абс_СтатусыНоменклатуры.Подготовка) И
			 (мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникГруппыНСИ) = Неопределено) Тогда
			 
			 ttk_ОбщегоНазначения.СообщитьОбОшибке("Только сотрудник группы НСИ может изменять группу.", Отказ);
			 
		КонецЕсли;	 
	КонецЕсли;
	// АБС ВСТАВКА 20110211 КОНЕЦ
	
	
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
	Если СогласованиеБезБП Тогда
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусНоменклатурнойГруппыПоРегистру(Ссылка);
		Если НЕ абс_СтатусНоменклатурнойГруппы = СтатусПоРегистру и абс_СтатусНоменклатурнойГруппы = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
			СтатусДопСогласования 		= СтатусПоРегистру;
		КонецЕсли;
	КонецЕсли;
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	
КонецПроцедуры // ПередЗаписью()

Процедура ПриЗаписи(Отказ)
	
	//АБС ВСТАВКА 55423  23.01.2015 13:53:43  Шамов
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	//АБС ВСТАВКА 55423 КОНЕЦ
	// АБС ВСТАВКА СогласованиеНоменклатуры 
	
	Попытка
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусНоменклатурнойГруппыПоРегистру(Ссылка);
		
		Если НЕ абс_СтатусНоменклатурнойГруппы = СтатусПоРегистру ИЛИ НЕ ЗначениеЗаполнено(СтатусПоРегистру) Тогда
			ЗаписатьНовыйСтатус(абс_СтатусНоменклатурнойГруппы, абс_ПричинаИзмененияСтатуса);		
		КонецЕсли;
		
		// АБС Изменение Родин Отключение бизнес-процессов 110314
		СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
		
		Если Не СогласованиеБезБП Тогда
			
			// Запустим БП если он еще не запущен
			Если абс_СтатусНоменклатурнойГруппы = Перечисления.абс_СтатусыНоменклатуры.СогласованиеНСИ Тогда
				БПСогласование = НайтиБПСогласование();
				
				Если Не ЗначениеЗаполнено(БПСогласование) Тогда
					абс_БизнесПроцессы.ЗапуститьБПСогласованияНоменклатурнойГруппы(Ссылка);	
				КонецЕсли;		
			КонецЕсли;
			
			//Выберем ответственого в случае дополнительного согласования
			Если абс_СтатусНоменклатурнойГруппы = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
				
				БПСогласование = НайтиБПСогласование();
				
				Если НЕ БПСогласование = Неопределено Тогда
					
					БПСогласованиеОбъект = БПСогласование.ПолучитьОбъект();
					
					БПСогласованиеОбъект.ПользовательДопСогласование 	= абс_ПользовательДопСогласование;
					
					Если НЕ СтатусПоРегистру = абс_СтатусНоменклатурнойГруппы Тогда
						БПСогласованиеОбъект.СтатусДопСогласования 		= СтатусПоРегистру;
					КонецЕсли;
					
					БПСогласованиеОбъект.Записать();
					
				КонецЕсли;
				
			КонецЕсли;
			
			
			//Попробуем закрыть задачу согласования
			
			ЗадачаСогласование = ПолучитьЗадачуПоНоменклатурнойГруппеСогласование();
			
			Если ЗадачаСогласование = Неопределено Тогда
				Возврат;
			КонецЕсли;
			Если ЗадачаСогласование <> Неопределено Тогда		
				Если НЕ ЗадачаСогласование.Выполнена Тогда
					
					ЗадачаОбъект = ЗадачаСогласование.ПолучитьОбъект();			
					ЗадачаОбъект.ВыполнитьЗадачу();
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		// АБС Изменение Родин Отключение бизнес-процессов 110314
	    //АБС ВСТАВКА 46201  29.09.2014 17:56:54  Шамов
		абс_Архив = абс_СтатусНоменклатурнойГруппы = Перечисления.абс_СтатусыНоменклатуры.Архив;
		//АБС ВСТАВКА 46201 КОНЕЦ
	Исключение
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при записи номенклатурной группы: " + ОписаниеОшибки() + ".", Отказ);
		
		Возврат;
	КонецПопытки;
	// АБС ВСТАВКА СогласованиеНоменклатуры КОНЕЦ
	
	// АБС генерация проекта НАЧАЛО
	Если абс_СтатусНоменклатурнойГруппы <> Перечисления.абс_СтатусыНоменклатуры.Использование Или Не Константы.абс_ПроведениеПоМеханизмуПроектногоУчета.Получить() Тогда
		Возврат;
	КонецЕсли;
	// Синхронизация наименования подчиненного договора, если таковой существует
	Если Не Отказ И ЗначениеЗаполнено(Проект) И Не Наименование = Проект.Наименование Тогда 
		ПроектОбъект = Проект.ПолучитьОбъект();
		ПроектОбъект.Наименование = Наименование;
		Попытка
			ПроектОбъект.Записать();
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
	КонецЕсли;
	//АБС_Стрельцов+ добавлено: 05.11.2012
	//
	ЕСли Не ПринадлежитЭлементу(Константы.абс_НоменклатурнаяГруппаСтроительство.Получить()) Тогда
		Возврат;
	КонецЕСли;
	//
	//АБС_Стрельцов-
	
	ЗапросПроекты = Новый Запрос;
	ЗапросПроекты.Текст = "ВЫБРАТЬ
	|         Проекты.Ссылка
	|ИЗ
	|         Справочник.Проекты КАК Проекты
	|ГДЕ
	|         Проекты.Код = &Код";
	
	ЗапросПроекты.Параметры.Вставить("Код",Ссылка.Код);
	ВыборкаПроекты = ЗапросПроекты.Выполнить().Выбрать();
	
	Если (Не Отказ) И (Не Ссылка.ЭтоГруппа) И (Ссылка.Проект.Пустая()) И (НЕ ВыборкаПроекты.Следующий()) Тогда
		// список с кодами родителей до первого найденного (Корень)
		Корень = Справочники.НоменклатурныеГруппы.ПустаяСсылка();
		Родители = Новый ТаблицаЗначений;
		Родители.Колонки.Добавить("Наименование");
		Родители.Колонки.Добавить("Код");
		
		ТекущийРодитель = Ссылка.Родитель;
		Пока ТекущийРодитель <> Справочники.НоменклатурныеГруппы.ПустаяСсылка() Цикл  
			
			ЗапросПроекты.Параметры.Вставить("Код",ТекущийРодитель.Код);
			ВыборкаПроекты = ЗапросПроекты.Выполнить().Выбрать();
			
			Если ВыборкаПроекты.Следующий() Тогда
				Корень = ВыборкаПроекты.Ссылка;
				Прервать;
			КонецЕсли;
			
			НоваяСтрока = Родители.Добавить();
			НоваяСтрока.Наименование = ТекущийРодитель.Наименование;
			НоваяСтрока.Код = ТекущийРодитель.Код;
			ТекущийРодитель = ТекущийРодитель.Родитель;
			
		КонецЦикла;
		
		// Новый проект с иерархией
		
		РодительПроект = Корень;
		Кол = Родители.Количество();
		Попытка
			Для ц = 1 По Кол Цикл
				НовыйЭлемент = Справочники.Проекты.СоздатьГруппу();
				НовыйЭлемент.Код = Родители[Кол-ц].Код;
				НовыйЭлемент.Наименование = Родители[Кол-ц].Наименование;
				НовыйЭлемент.Родитель = РодительПроект;
				НовыйЭлемент.ОбменДанными.Загрузка = Истина;
				НовыйЭлемент.Записать();
				РодительПроект = НовыйЭлемент.Ссылка;
			КонецЦикла;
			
			НовыйПроект = Справочники.Проекты.СоздатьЭлемент();
			НовыйПроект.Код = Ссылка.Код;
			НовыйПроект.Наименование = Ссылка.Наименование;
			НовыйПроект.абс_Организация = Ссылка.Организация;
			НовыйПроект.Родитель = РодительПроект;
			НовыйПроект.ОбменДанными.Загрузка = Истина;
			НовыйПроект.Записать();
			
			//Ссылка.Проект = НовыйПроект.Ссылка;
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
	КонецЕсли;
	//\\ АБС генерация проекта КОНЕЦ
	Если Не Отказ И ЗначениеЗаполнено(Проект) И Не Наименование = Проект.Наименование Тогда 
		ПроектОбъект = Проект.ПолучитьОбъект();
		ПроектОбъект.Наименование = Наименование;
		Попытка
			ПроектОбъект.Записать();
		Исключение
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = ОписаниеОшибки();
			Сообщение.Сообщить();
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры



Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	Если НЕ ЭтоГруппа Тогда
		БазоваяЕдиницаИзмерения = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяЕдиницаПоКлассификатору");
		СтавкаНДС               = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяСтавкаНДС");
    КонецЕсли;
КонецПроцедуры

// АБС ВСТАВКА начало
Процедура ЗаписатьНовыйСтатус(НовыйСтатус, Комментарий = Неопределено) Экспорт
	
	НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовНоменклатурныхГрупп.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.НоменклатурнаяГруппа.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();

	Запись.НоменклатурнаяГруппа			= Ссылка;
	Запись.Исполнитель	 		= глЗначениеПеременной("глТекущийПользователь");	
	Запись.СтатусНоменклатурнойГруппы	= НовыйСтатус;
	
	Запись.Комментарий 			= Комментарий;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция НайтиБПСогласование() Экспорт
	
	Возврат абс_БизнесПроцессы.НайтиБизнесПроцессПоНоменклатурнойГруппе(Ссылка, "абсСогласованиеНоменклатурныхГрупп");	
	
КонецФункции

Функция ПолучитьЗадачуПоНоменклатурнойГруппеСогласование() Экспорт
	
	БП = НайтиБПСогласование();
	
	Если БП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СпТочек = Новый Массив;
	
	Статус = Ссылка.абс_СтатусНоменклатурнойГруппы;
	
	Если Статус = Перечисления.абс_СтатусыНоменклатуры.Подготовка Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеОтказаноВСогласовании);
		
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.СогласованиеНСИ Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеДополнительноеСогласование);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ПовторнаяПодготовка);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);		
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Отказ Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеДополнительноеСогласование);
		
	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Использование Тогда
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ);

	ИначеЕсли Статус = Перечисления.абс_СтатусыНоменклатуры.Архив Тогда
		
		//АБС ВСТАВКА 55423  23.01.2015 13:53:43  Шамов
		//СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеНоменклатурнаяГруппаУтверждена);
		//АБС ВСТАВКА 55423 КОНЕЦ
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеНоменклатурныхГрупп.ТочкиМаршрута.ДействиеОтказаноВСогласовании);
	КонецЕсли;	
		
	Возврат абс_БизнесПроцессы.НайтиЗадачуЗЗ(БП, СпТочек ,, Ложь);
	
КонецФункции
// АБС ВСТАВКА конец

Если абс_СтатусНоменклатурнойГруппы = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
	мПользовательДопСогласование = абс_ПользовательДопСогласование;
КонецЕсли;
