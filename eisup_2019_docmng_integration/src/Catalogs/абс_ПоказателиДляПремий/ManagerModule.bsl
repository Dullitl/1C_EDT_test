
Функция РассчитатьПоказатель(Знач Период, Показатель, Знач Сотрудник, Знач НачалоПериода, Знач КонецПериода, Знач МесяцНачисления, СсылкаНаДокумент, Знач Месяц = 0, Знач ДатаНачала,Знач ДатаОкончания, Знач ТаблицаПоказателейПоСотруднику) Экспорт 
	
	Значение = 0;
	
	Если ТипЗнч(Показатель) = Тип("СправочникСсылка.ПоказателиСхемМотивации") Тогда 
		
		Попытка
			Выполнить(Показатель.абс_АлгоритмРасчета);
		Исключение
			ОбщегоНазначенияЗК.СообщитьОбОшибке(ОписаниеОшибки());
		КонецПопытки;
		
	Иначе 
	
		Если Показатель.ТипПоказателя = Перечисления.абс_ВидыПоказателей.Вручную Тогда 
			
			//Запрос = Новый Запрос(
			//"ВЫБРАТЬ ПЕРВЫЕ 1
			//|	абс_ЗначенияПоказателейСрезПоследних.Значение
			//|ИЗ
			//|	РегистрСведений.абс_ЗначенияПоказателей.СрезПоследних(
			//|			&Период,
			//|			Сотрудник = &Сотрудник
			//|				И Показатель = &Показатель) КАК абс_ЗначенияПоказателейСрезПоследних");
			//Запрос.УстановитьПараметр("Период", Период);
			//Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
			//Запрос.УстановитьПараметр("Показатель", Показатель);
			//
			//Выборка = Запрос.Выполнить().Выбрать();
			//Если Выборка.Следующий() Тогда 
			//	Значение = Выборка.Значение;
			//КонецЕсли;
		
		Иначе 
			
			Попытка
				
				ОбъектПоказатель = Показатель.ПолучитьОбъект();
				
				ОбъектПоказатель.Период 			= Период;  
				ОбъектПоказатель.Показатель 		= Показатель; 
				ОбъектПоказатель.Сотрудник 			= Сотрудник; 
				ОбъектПоказатель.НачалоПериода 		= НачалоПериода; 
				ОбъектПоказатель.КонецПериода 		= КонецПериода; 
				ОбъектПоказатель.МесяцНачисления 	= МесяцНачисления;
				ОбъектПоказатель.СсылкаНаДокумент 	= СсылкаНаДокумент;
				ОбъектПоказатель.Значение 			= Значение;
				ОбъектПоказатель.Месяц	 			= Месяц;
				ОбъектПоказатель.ДатаНачала			= ДатаНачала;
				ОбъектПоказатель.ДатаОкончания		= ДатаОкончания;
				ОбъектПоказатель.ТаблицаПоказателейПоСотруднику = ТаблицаПоказателейПоСотруднику;
				ОбъектПоказатель.ВыполнитьМодуль();
				
				Значение = ОбъектПоказатель.Значение;
				
			Исключение
				ОбщегоНазначенияЗК.СообщитьОбОшибке(ОписаниеОшибки());
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Значение;
	
КонецФункции

Функция НайтиПоказатель(Идентификатор) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ПоказателиСхемМотивации.Ссылка
	|ИЗ
	|	Справочник.ПоказателиСхемМотивации КАК ПоказателиСхемМотивации
	|ГДЕ
	|	ПоказателиСхемМотивации.Идентификатор = &Идентификатор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	абс_ПоказателиДляПремий.Ссылка
	|ИЗ
	|	Справочник.абс_ПоказателиДляПремий КАК абс_ПоказателиДляПремий
	|ГДЕ
	|	абс_ПоказателиДляПремий.Идентификатор = &Идентификатор");
	
	Запрос.УстановитьПараметр("Идентификатор", Идентификатор);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда 
		Возврат Выборка.Ссылка;
	Иначе 
		Возврат Справочники.ПоказателиСхемМотивации.ПустаяСсылка();
	КонецЕсли;
	
КонецФункции

Функция ПроверитьАлгоритм(Показатель) Экспорт 
	
	Период = ТекущаяДата();
	Выборка = Справочники.СотрудникиОрганизаций.Выбрать();
	Выборка.Следующий();
	Сотрудник = Выборка.Ссылка;
	АлгоритмРаботает = Истина;
	НачалоПериода = НачалоМесяца(ТекущаяДата());
	КонецПериода = КонецМесяца(ТекущаяДата());
	МесяцНачисления = НачалоПериода;
	Месяц = 0;
	
	
	Значение = 0;
	
	Если ТипЗнч(Показатель) = Тип("СправочникСсылка.ПоказателиСхемМотивации") Тогда 
		
			Попытка
				Выполнить(Показатель.абс_АлгоритмРасчета);
			Исключение
				ОбщегоНазначенияЗК.СообщитьОбОшибке(ОписаниеОшибки());
				АлгоритмРаботает = Ложь;
			КонецПопытки;
		
	Иначе 
	
		Если Показатель.ТипПоказателя = Перечисления.абс_ВидыПоказателей.Вручную Тогда 
			// Заполняет пользователь
		Иначе 
			
			Попытка
				
				ОбъектПоказатель = Показатель.ПолучитьОбъект();
				
				ОбъектПоказатель.Период = Период;  
				ОбъектПоказатель.Показатель = Показатель; 
				ОбъектПоказатель.Сотрудник = Сотрудник; 
				ОбъектПоказатель.НачалоПериода = НачалоПериода; 
				ОбъектПоказатель.КонецПериода = КонецПериода; 
				ОбъектПоказатель.МесяцНачисления = МесяцНачисления;
				ОбъектПоказатель.Значение = Значение;
				
				ОбъектПоказатель.ВыполнитьМодуль();
				
				Значение = ОбъектПоказатель.Значение;
				
			Исключение
				ОбщегоНазначенияЗК.СообщитьОбОшибке(ОписаниеОшибки());
				АлгоритмРаботает = Ложь;
			КонецПопытки;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат АлгоритмРаботает;
	
КонецФункции

