Перем ДеревоСвойств Экспорт;
Перем Excel;
Перем Workbook;  



Процедура ПрочитатьФайл() Экспорт
	
	Попытка
		Excel = Новый COMОбъект("Excel.Application");
	Исключение
		Сообщить("Не найдена установленная версия MS Excel");
		Возврат;
	КонецПопытки;
	
	Попытка
		Workbook = Excel.Workbooks.Open(ПутьКФайлу);
	Исключение
		Сообщить("Не удается открыть файл по указанному пути");
		Возврат;
	КонецПопытки;
	
	Workbook.Activate();

							
	Попытка  			
		
		ОпределитьГруппуОС();
		ДеревоСвойств = ПланыВидовХарактеристик.абс_СвойстваОС.ПолучитьДеревоСвойств(
					Справочники.ОсновныеСредства.ПустаяСсылка(),ГруппаОС,
					Перечисления.абс_ВидыОбъектовНевижимостиОС.ПустаяСсылка());

		ЗаполнитьДерево();
		
	Исключение
		
		Сообщить(ИнформацияОбОшибке().Описание + " Номер строки: " + ИнформацияОбОшибке().НомерСтроки);
		
	КонецПопытки;	
	
	Workbook.Close();
	Excel.Quit();
							
КонецПроцедуры

Процедура ЗаписатьСвойства() Экспорт
	
	Для й = 7 по ДеревоСвойств.Колонки.Количество()-1 Цикл 
		
		КодОС = ДеревоСвойств.Колонки[й].Имя;
		ОС = Справочники.ОсновныеСредства.НайтиПоКоду(КодОС);
		
		Если ОС = Неопределено ИЛИ ОС.Пустая() Тогда 
			Сообщить("[НЕ НАЙДЕНО ОС ПО КОДУ] " + Строка(КодОС));
			Продолжить;
		КонецЕсли;
		
		НаборЗаписей = РегистрыСведений.абс_ЗначенияСвойствОС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОС.Установить(ОС);
		
		РазобратьДерево(НаборЗаписей, ДеревоСвойств, ОС, ДеревоСвойств.Колонки[й].Имя);
		
		НаборЗаписей.Записать();
 
		
	КонецЦикла;
	
	Сообщить("[ЗАГРУЗКА ЗАВЕРШЕНА]");

	
КонецПроцедуры



Процедура ЗаполнитьДерево()
	
	Sheet = Excel.Sheets(1);	
	й = 2; ж = 4;
	КоличествоСтрок = Sheet.Cells.SpecialCells(11).Row;
	КоличествоКолонок = Sheet.Cells.SpecialCells(11).Column;

	Пока ж <=КоличествоКолонок Цикл	
		
		КодОС = СокрЛП(Sheet.Cells(1, ж).Text);
		ДеревоСвойств.Колонки.Добавить(КодОС, ДеревоСвойств.Колонки.Значение.ТипЗначения); 
		
		Пока й <= КоличествоСтрок Цикл 
			
			ОбработкаПрерыванияПользователя();
			КодСвойства = СокрЛП(Sheet.Cells(й, 1).Text);
			
			Если ПустаяСтрока(КодСвойства) Тогда 
				й = й + 1;
				Продолжить;
			КонецЕсли;
	
			Свойство = ПланыВидовХарактеристик.абс_СвойстваОС.НайтиПоКоду(КодСвойства);
			
			Если Свойство = Неопределено ИЛИ Свойство.Пустая() Тогда 
				Сообщить("[НЕ НАЙДЕНО СВОЙСТВО ПО КОДУ] " + Строка(КодСвойства));
				й = й + 1;
				Продолжить;
			КонецЕсли;
			
			Если Свойство.ЭтоГруппа Тогда 
				й = й + 1;
				Продолжить;
			КонецЕсли;
			
			строкаДерева = ДеревоСвойств.Строки.Найти(Свойство, "Свойство", Истина);
			
			Если строкаДерева = Неопределено Тогда 
				Сообщить("[НЕ НАЙДЕНО СВОЙСТВО ] " + Строка(Свойство));
			КонецЕсли;
			
			строкаДерева[КодОС] = СокрЛП(Sheet.Cells(й, ж).Value); 
			
			й = й + 1;		
			
		КонецЦикла;
		
		ж = ж + 1;
		й = 2;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОпределитьГруппуОС()
	
	ГруппаОС.Пустая();
	
	Sheet = Excel.Sheets(1);	
	й = 2; 
	КоличествоСтрок = Sheet.Cells.SpecialCells(11).Row;
	
	Пока й <= КоличествоСтрок Цикл 
		
		ОбработкаПрерыванияПользователя();
		КодСвойства = СокрЛП(Sheet.Cells(й, 1).Text);
		
		Если ПустаяСтрока(КодСвойства) Тогда 
			й = й + 1;
			Продолжить;
		КонецЕсли;
		
		Свойство = ПланыВидовХарактеристик.абс_СвойстваОС.НайтиПоКоду(КодСвойства);
		
		Если Свойство = Неопределено ИЛИ Свойство.Пустая() Тогда 
			й = й + 1;
			Продолжить;
		КонецЕсли;
		
		Если Свойство.ТранспортноеСредство Тогда 
			ГруппаОС = Перечисления.ГруппыОС.ТранспортныеСредства;
			Возврат;
		Иначе
			ГруппаОС = Перечисления.ГруппыОС.Здания;
			Возврат;
		КонецЕсли;
	
	КонецЦикла;
		
КонецПроцедуры
	
Процедура РазобратьДерево(НаборЗаписей, Ветка, ОС, Колонка)
	
	Для Каждого строка из Ветка.Строки Цикл
		
		Если НЕ строка.ЭтоГруппа Тогда 
			строкаНабора = НаборЗаписей.Добавить();
			строкаНабора.ОС = ОС;
			строкаНабора.Свойство = строка.Свойство;
			строкаНабора.Значение = ПолучитьЗначение(строка, строка[Колонка]);
		КонецЕсли;
		
		Если строка.Строки.Количество() > 0 Тогда 
			РазобратьДерево(НаборЗаписей,строка, ОС, Колонка);
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецПроцедуры

Функция ПолучитьЗначение(строка, Значение)
	
	ЗначениеРеестра = Значение;
	ТекущийТип = строка.ТипЗначения;
	ЗначениеРеестра = ТекущийТип.ПривестиЗначение(Значение);
	
	Если ТипЗнч(ЗначениеРеестра) = Тип("Булево") Тогда
		Если Значение = "Да" Тогда 
			ЗначениеРеестра =  Истина;
		ИначеЕсли Значение = "Нет" Тогда 
			ЗначениеРеестра = Ложь;
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗначениеРеестра) = Тип("СправочникСсылка.Контрагенты") Тогда 
   		ЗначениеРеестра = Справочники.Контрагенты.НайтиПоКоду(СокрЛп(Значение));
	ИначеЕсли ТипЗнч(ЗначениеРеестра) = Тип("СправочникСсылка.Должности") Тогда 
   		ЗначениеРеестра = Справочники.Должности.НайтиПоКоду(СокрЛп(Значение));
	ИначеЕсли ТипЗнч(ЗначениеРеестра) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда 
   		ЗначениеРеестра = Справочники.Должности.НайтиПоКоду(СокрЛп(Значение));
	ИначеЕсли ТипЗнч(ЗначениеРеестра) = Тип("ПеречислениеСсылка.абс_АрендуемоеСобственное") Тогда
		Если Значение = "Арендуемое" Тогда
			ЗначениеРеестра = Перечисления.абс_АрендуемоеСобственное.Арендуемое;	
		ИначеЕсли Значение = "Собственное" Тогда
			ЗначениеРеестра = Перечисления.абс_АрендуемоеСобственное.Собственное;	
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗначениеРеестра) = Тип("ПеречислениеСсылка.абс_ТипКровли") Тогда
		Если Значение = "Мягкая" Тогда
			ЗначениеРеестра = Перечисления.абс_ТипКровли.Мягкая;	
		ИначеЕсли Значение = "Твердая" Тогда
			ЗначениеРеестра = Перечисления.абс_ТипКровли.Твердая;	
		КонецЕсли;			
	КонецЕсли;
	
	Возврат ЗначениеРеестра;
	
КонецФункции


