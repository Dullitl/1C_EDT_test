// Хранит соответствие, при помощи которого храним и показываем содержимое пачки
Перем СоответствиеСсылокИОбъектов Экспорт;

Перем МассивПрошлыхПериодов Экспорт;

////////////////////////////////////////////////////////////////////////////////

// Процедура выводить сообщения в специальное окно сообщений
// тексты сообщений берутся из переменной МассивСообщений
//
Процедура ВывестиСообщенияОбОшибках(МассивСообщений) Экспорт
	
	Если МассивСообщений.Количество() > 0 Тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		ОбработкаКомментариев.ДобавитьСообщение("Подготовка данных для передачи в ПФР", Перечисления.ВидыСообщений.Раздел);
		Для каждого ЭлементМассива Из МассивСообщений Цикл
			Если ЭлементМассива.РасшифровкаСообщения <> Неопределено И ЭлементМассива.РасшифровкаСообщения.Количество() > 1 Тогда
				РодительскаяСтрока = ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения);
				Для Каждого ЭлементРасшифровки Из ЭлементМассива.РасшифровкаСообщения Цикл
					МассивРасшифровки = Новый Массив;
					МассивРасшифровки.Добавить(Новый Структура("Представление, Расшифровка", ЭлементРасшифровки.Представление, ЭлементРасшифровки.Расшифровка));
					ОбработкаКомментариев.ДобавитьСообщение("", Перечисления.ВидыСообщений.Информация, МассивРасшифровки, РодительскаяСтрока);
					
				КонецЦикла;
			Иначе
				ОбработкаКомментариев.ДобавитьСообщение(ЭлементМассива.ТекстСообщения, ЭлементМассива.ВидСообщения, ЭлементМассива.РасшифровкаСообщения);
			КонецЕсли
		КонецЦикла;
		ОбработкаКомментариев.ПоказатьСообщения();
	КонецЕсли;	
	
КонецПроцедуры // ВывестиСообщенияОбОшибках()

// Создает структуру, с параметрами выводимого сообщения 
// для помещения в массив сообщений-структур
Функция СоздатьСообщениеСтруктуру(ТекстСообщения, ВидСообщения, РасшифровкаСообщения = Неопределено) Экспорт 
	СтруктураСообщения = Новый Структура;
	СтруктураСообщения.Вставить("ТекстСообщения", ТекстСообщения);
	СтруктураСообщения.Вставить("ВидСообщения", ВидСообщения);
	СтруктураСообщения.Вставить("РасшифровкаСообщения", РасшифровкаСообщения);
	Возврат СтруктураСообщения
КонецФункции // СоздатьСообщениеСтруктуру()

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьТаблицуДокументовАДВ() Экспорт 
	
	СоответствиеСсылокИОбъектов = Новый Соответствие;
	ПачкиДокументов.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Запрос.УстановитьПараметр("ДатаЗаменыЕСН", ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФР.Ссылка,
	|	ПередачаСЗВ4вПФР.НомерПачки КАК НомерПачки,
	|	ПередачаСЗВ4вПФР.НеСодержитСЗВ КАК НеПоказыватьКадровику,
	|	ПередачаСЗВ4вПФР.ОтчетныйПериод
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
	|ГДЕ
	|	ПередачаСЗВ4вПФР.Организация = &Организация
	|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = &ОтчетныйПериод
	|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
	|	И (НЕ ПередачаСЗВ4вПФР.ПометкаУдаления)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.НомерПачки,
	|	ЛОЖЬ,
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод
	|ИЗ
	|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПередачаСЗВ4вПФР.ПачкиДокументов КАК ПередачаСЗВ4вПФРПачкиДокументов
	|		ПО СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка = ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка
	|ГДЕ
	|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация
	|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод = &ОтчетныйПериод
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
	|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления)
	|	И ПередачаСЗВ4вПФРПачкиДокументов.Ссылка ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПачки";
	
	РаботаетНеРасчетчик = Не НастройкаПравДоступаПереопределяемый.ДоступнаРольРасчетчикаРегл();
	
	МассивПачек = Новый Массив;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если РаботаетНеРасчетчик И Выборка.НеПоказыватьКадровику Тогда
			Продолжить;
		КонецЕсли;
		СтрокаПачки = ПачкиДокументов.Добавить();
		СтрокаПачки.Пачка			= Выборка.Ссылка;
		СтрокаПачки.ОтчетныйПериод	= Выборка.ОтчетныйПериод;
		МассивПачек.Добавить(Выборка.Ссылка);
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		Если ТипЗнч(Выборка.Ссылка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
			ПустыеСтроки = ДокументОбъект.ПачкиДокументов.НайтиСтроки(Новый Структура("ДокументПачка", Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПустаяСсылка()));
			Если ПустыеСтроки.Количество() > 0 Тогда
				Для каждого СтрокаДокумента Из ПустыеСтроки Цикл
					ДокументОбъект.ПачкиДокументов.Удалить(СтрокаДокумента);
				КонецЦикла; 
			КонецЕсли;
		КонецЕсли;
		СоответствиеСсылокИОбъектов.Вставить(Выборка.Ссылка,ДокументОбъект);
	КонецЦикла;
	
	МассивПрошлыхПериодов = Новый Массив;
	Если Не РаботаетНеРасчетчик Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияПринятыеПФР.КомплектДокументов КАК Пачка,
		|	СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР КАК ОтчетныйПериод
		|ИЗ
		|	РегистрСведений.СведенияПринятыеПФР КАК СведенияПринятыеПФР
		|ГДЕ
		|	СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР < &ОтчетныйПериод
		|	И СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР >= &ДатаЗаменыЕСН
		|	И СведенияПринятыеПФР.КомплектДокументов <> ЗНАЧЕНИЕ(Документ.ПередачаСЗВ4ВПФР.ПустаяСсылка)
		|	И СведенияПринятыеПФР.Организация = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОтчетныйПериод УБЫВ";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ПачкиДокументов.Добавить(), Выборка);
			МассивПачек.Добавить(Выборка.Пачка);
			СоответствиеСсылокИОбъектов.Вставить(Выборка.Пачка, Выборка.Пачка.ПолучитьОбъект());
		КонецЦикла;
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР КАК ОтчетныйПериодПерсучетаПФР
		|ИЗ
		|	РегистрСведений.СведенияПринятыеПФР КАК СведенияПринятыеПФР
		|ГДЕ
		|	СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР < &ОтчетныйПериод
		|	И СведенияПринятыеПФР.Организация = &Организация
		|	И СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР >= &ДатаЗаменыЕСН
		|	И СведенияПринятыеПФР.КомплектДокументов <> ЗНАЧЕНИЕ(Документ.ПередачаСЗВ4ВПФР.ПустаяСсылка)
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.Период < ДАТАВРЕМЯ(2010, 7, 1)
		|			ТОГДА НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, ГОД)
		|		КОГДА СтраховыеВзносыСведенияОДоходах.Период < ДАТАВРЕМЯ(2011, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, КВАРТАЛ)
		|	КОНЕЦ
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходах.Период >= &ДатаЗаменыЕСН
		|	И СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение = &Организация
		|	И СтраховыеВзносыСведенияОДоходах.Период < &ОтчетныйПериод
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВЫБОР
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации < ДАТАВРЕМЯ(2010, 7, 1)
		|			ТОГДА НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, ГОД)
		|		КОГДА ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации < ДАТАВРЕМЯ(2011, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(2010, 7, 1)
		|		ИНАЧЕ НАЧАЛОПЕРИОДА(ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации, КВАРТАЛ)
		|	КОНЕЦ
		|ИЗ
		|	РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизаций
		|ГДЕ
		|	ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации >= &ДатаЗаменыЕСН
		|	И ОсновныеНачисленияРаботниковОрганизаций.ПериодРегистрации < &ОтчетныйПериод
		|	И ОсновныеНачисленияРаботниковОрганизаций.ОбособленноеПодразделение = &Организация
		|
		|УПОРЯДОЧИТЬ ПО
		|	ОтчетныйПериодПерсучетаПФР";
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивПрошлыхПериодов.Добавить(Выборка.ОтчетныйПериодПерсучетаПФР);
		КонецЦикла;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ПачкиАДВ", МассивПачек);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка КАК Ссылка
	|ИЗ
	|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов КАК ПередачаСЗВ4вПФРПачкиДокументов
	|ГДЕ
	|	ПередачаСЗВ4вПФРПачкиДокументов.Ссылка В(&ПачкиАДВ)
	|	И ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка <> ЗНАЧЕНИЕ(Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПустаяСсылка)";
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеСсылокИОбъектов.Вставить(Выборка.Ссылка,Выборка.Ссылка.ПолучитьОбъект()) 
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТаблицуДокументовАДВ()

Процедура ЗаполнитьТаблицуДокументовСПВ() Экспорт 
	
	СоответствиеСсылокИОбъектов = Новый Соответствие;
	ПачкиСПВ.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.НомерПачки КАК НомерПачки
	|ИЗ
	|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
	|ГДЕ
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация = &Организация
	|	И СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод = &ОтчетныйПериод
	|	И (НЕ СведенияОВзносахИСтраховомСтажеСПВ1.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПачки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПачкиСПВ.Добавить().Пачка = Выборка.Ссылка;
		СоответствиеСсылокИОбъектов.Вставить(Выборка.Ссылка,Выборка.Ссылка.ПолучитьОбъект()) 
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТаблицуДокументовАДВ()

Процедура ЗаполнитьТаблицуДокументовСЗВ63() Экспорт 
	
	СоответствиеСсылокИОбъектов = Новый Соответствие;
	ПачкиСЗВ63.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйГод);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка,
	|	СведенияОНачисленномЗаработкеСЗВ63.НомерПачки КАК НомерПачки
	|ИЗ
	|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
	|ГДЕ
	|	СведенияОНачисленномЗаработкеСЗВ63.Организация = &Организация
	|	И СведенияОНачисленномЗаработкеСЗВ63.ОтчетныйПериод = &ОтчетныйПериод
	|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерПачки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ПачкиСЗВ63.Добавить().Пачка = Выборка.Ссылка;
		СоответствиеСсылокИОбъектов.Вставить(Выборка.Ссылка,Выборка.Ссылка.ПолучитьОбъект()) 
	КонецЦикла;
	
КонецПроцедуры // ЗаполнитьТаблицуДокументовАДВ()

////////////////////////////////////////////////////////////////////////////////

// Получает значения общих для всех видов документов реквизитов
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   Структура, содержащая значения реквизитов
//
Функция СтруктураОбщихРеквизитовДокумента()
	
	СтруктураРеквизитов = Новый Структура("Организация,ОтчетныйПериод,ФорматФайла,Ответственный,Руководитель,ДолжностьРуководителя,Дата,ОписьАДВ62");
	СтруктураРеквизитов.Дата = ОбщегоНазначенияЗК.ПолучитьРабочуюДату(); 
	СтруктураРеквизитов.Организация = Организация;
	СтруктураРеквизитов.ОтчетныйПериод = ОтчетныйПериод;
	СтруктураРеквизитов.ФорматФайла = Перечисления.ФорматФайлаПФР.Версия07;
	ЗаполнитьЗначенияСвойств(СтруктураРеквизитов, ПроцедурыПерсонифицированногоУчета.ДанныеРуководителяОрганизации(Организация, СтруктураРеквизитов.Дата));
	СтруктураРеквизитов.Ответственный = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнойОтветственный");
	Если СтруктураРеквизитов.Ответственный.Пустая() Тогда
		СтруктураРеквизитов.Ответственный = глЗначениеПеременной("глТекущийПользователь")
	КонецЕсли;
	
    Возврат СтруктураРеквизитов
	
КонецФункции // СтруктураОбщихРеквизитовДокумента()

////////////////////////////////////////////////////////////////////////////////

Функция СоздатьАДВ(ЭтоАДВ11 = Ложь, СтруктураРеквизитов = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.ПередачаСЗВ4вПФР.СоздатьДокумент();
	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.НеСодержитСЗВ = ЭтоАДВ11;
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ДокОбъект);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.ПередачаСЗВ4вПФР.ПолучитьСсылку());
	Если ЭтоАДВ11 Тогда
		ДокОбъект.АвтозаполнениеСтрокЗадолженности();
	КонецЕсли;
	
	СтрокаПачки = ПачкиДокументов.Добавить();
	СтрокаПачки.Пачка			= ДокОбъект.ПолучитьСсылкуНового();
	СтрокаПачки.ОтчетныйПериод	= ДокОбъект.ОтчетныйПериод;
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Пачка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции // СоздатьАДВ()

Функция СоздатьСЗВ6(ВСоставеОписи = Истина, ДокументОбъектАДВ11 = Неопределено, СтруктураРеквизитов = Неопределено, КатегорияЗастрахованныхЛиц = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.СоздатьДокумент();
   	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	ДокОбъект.ТипФормДокументов = "СЗВ-6-2";
	ДокОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ДокОбъект);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПолучитьСсылку());
	
	Если ВСоставеОписи Тогда
		СтрокаПачки = ДокументОбъектАДВ11.ПачкиДокументов.Добавить();
		СтрокаПачки.ДокументПачка = ДокОбъект.ПолучитьСсылкуНового();
		СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.ДокументПачка, ДокОбъект);
		Если ИзменятьПозициюСтроки Тогда
			ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
		КонецЕсли;
	Иначе
		СтрокаПачки = ПачкиДокументов.Добавить();
		СтрокаПачки.Пачка			= ДокОбъект.ПолучитьСсылкуНового();
		СтрокаПачки.ОтчетныйПериод	= ДокОбъект.ОтчетныйПериод;
		СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Пачка, ДокОбъект);
		Если ИзменятьПозициюСтроки Тогда
			ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции

Функция СоздатьСПВ(СтруктураРеквизитов = Неопределено, КатегорияЗастрахованныхЛиц = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.СведенияОВзносахИСтраховомСтажеСПВ1.СоздатьДокумент();
   	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	ДокОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ДокОбъект);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.СведенияОВзносахИСтраховомСтажеСПВ1.ПолучитьСсылку());
	
	СтрокаПачки = ПачкиСПВ.Добавить();
	СтрокаПачки.Пачка = ДокОбъект.ПолучитьСсылкуНового();
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Пачка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции

Функция СоздатьСЗВ63(СтруктураРеквизитов = Неопределено, КатегорияЗастрахованныхЛиц = Неопределено, ИзменятьПозициюСтроки = Ложь, ТабличноеПоле = Неопределено) Экспорт
	
	Если СтруктураРеквизитов = Неопределено Тогда
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
	КонецЕсли;
	
	ДокОбъект = Документы.СведенияОНачисленномЗаработкеСЗВ63.СоздатьДокумент();
   	ЗаполнитьЗначенияСвойств(ДокОбъект, СтруктураРеквизитов);
	ДокОбъект.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ;
	ДокОбъект.ТипДоговора = Перечисления.ТипДоговораСЗВ63.Трудовой;
	ДокОбъект.ОтчетныйПериод = ОтчетныйГод;
	ДокОбъект.КатегорияЗастрахованныхЛиц = КатегорияЗастрахованныхЛиц;
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ДокОбъект);
	ДокОбъект.УстановитьНовыйНомер();
	ДокОбъект.УстановитьСсылкуНового(Документы.СведенияОНачисленномЗаработкеСЗВ63.ПолучитьСсылку());
	
	СтрокаПачки = ПачкиСЗВ63.Добавить();
	СтрокаПачки.Пачка = ДокОбъект.ПолучитьСсылкуНового();
	СоответствиеСсылокИОбъектов.Вставить(СтрокаПачки.Пачка, ДокОбъект);
	Если ИзменятьПозициюСтроки Тогда
		ТабличноеПоле.ТекущаяСтрока = СтрокаПачки;
	КонецЕсли;
	
	Возврат ДокОбъект
	
КонецФункции

Функция АвтозаполнениеПачек(ТипСведений, СсылкаНаДокументКомплекта = Неопределено) Экспорт
	
	ТекущаяСтрока = Неопределено;
	
	ДатаСозданияДокументов = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
	
	// информация об ошибках
	МассивСообщений = Новый Массив;
	СписокФизЛицБезСтрахНомеров = Новый СписокЗначений;
	
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Или ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		
		ТаблицаСтажа = ПроцедурыПерсонифицированногоУчетаПолныеПрава.ДанныеОСтажеИВзносах(ДатаСозданияДокументов, ОтчетныйПериод, Организация, ?(ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ, Неопределено, Пенсионеры.ВыгрузитьКолонку("ФизЛицо"))); 
		
		Если ТаблицаСтажа.Количество() > 0 Тогда
			
			Если ДатаСозданияДокументов < НачалоДня(ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериод)) Тогда
				МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("При расчете сумм уплаченных взносов учтены данные, зарегистрированные по " + Формат(ДатаСозданияДокументов,"ДЛФ=DD"), Перечисления.ВидыСообщений.ВажнаяИнформация));
			КонецЕсли;
			
			СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
			
			Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
				
				ОбъектАДВ62 = СоздатьАДВ(Ложь, СтруктураРеквизитов);
				ОбъектАДВ62.РасчетСтраховыхВзносов = СсылкаНаДокументКомплекта;
				ТекущаяСтрока = ПачкиДокументов[ПачкиДокументов.Количество() - 1];
				
				ТипФормДокументов = "";
				КатегорияЗЛ = "";
				ЛьготыПоУсловиямТруда = "";
				ЛьготыПоВыслуге = "";
				НовыйДок = Неопределено;
				
				Для каждого СтрокаТЗ Из ТаблицаСтажа Цикл
					
					Если ТипФормДокументов <> СтрокаТЗ.ТипФормДокументов Или ЛьготыПоУсловиямТруда <> СтрокаТЗ.ЛьготыПоУсловиямТруда Или ЛьготыПоВыслуге <> СтрокаТЗ.ЛьготыПоВыслуге Или КатегорияЗЛ <> СтрокаТЗ.КатегорияЗастрахованныхЛиц Тогда
						
						Если НовыйДок = Неопределено Или НовыйДок.РаботникиОрганизации.Количество() <> 0 Тогда
							НовыйДок = СоздатьСЗВ6(Истина, ОбъектАДВ62, СтруктураРеквизитов);
						КонецЕсли;
						ЗаполнитьЗначенияСвойств(НовыйДок,СтрокаТЗ,"ТипФормДокументов, КатегорияЗастрахованныхЛиц");
						
						ТипФормДокументов = СтрокаТЗ.ТипФормДокументов;
						КатегорияЗЛ = СтрокаТЗ.КатегорияЗастрахованныхЛиц;
						ЛьготыПоУсловиямТруда = СтрокаТЗ.ЛьготыПоУсловиямТруда;
						ЛьготыПоВыслуге = СтрокаТЗ.ЛьготыПоВыслуге;
						
					КонецЕсли;
					
					// Если у физлица нет страхового номера, то в пачки его включать не будем: проверка на указание пустого или неверного страхового номера ("   -   -      ")
					Если СтрокаТЗ.НетСтраховогоНомера Тогда
						СписокФизЛицБезСтрахНомеров.Добавить(СтрокаТЗ.ФизЛицо, СтрокаТЗ.Наименование);
						Продолжить;
					КонецЕсли;	
					
					Если НовыйДок.РаботникиОрганизации.Количество() = 200 Тогда
						
						НовыйДок = СоздатьСЗВ6(Истина, ОбъектАДВ62, СтруктураРеквизитов);
						ЗаполнитьЗначенияСвойств(НовыйДок,СтрокаТЗ,"ТипФормДокументов, КатегорияЗастрахованныхЛиц");
						
					КонецЕсли; 
					
					СтрокаТабличнойЧасти = НовыйДок.РаботникиОрганизации.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЗ);
					Фамилия = СтрокаТЗ.Фамилия;
					Имя = СтрокаТЗ.Имя;
					Отчество = СтрокаТЗ.Отчество;
					Если Не ЗначениеЗаполнено(Фамилия + Имя + Отчество) Тогда
						ОбщегоНазначения.ФамилияИнициалыФизЛица(СтрокаТЗ.Наименование,Фамилия,Имя,Отчество);
					КонецЕсли;
					СтрокаТабличнойЧасти.Фамилия = Фамилия;
					СтрокаТабличнойЧасти.Имя = Имя;
					СтрокаТабличнойЧасти.Отчество = Отчество;
					
				КонецЦикла;
				
			Иначе
				
				КатегорияЗЛ = ТаблицаСтажа[0].КатегорияЗастрахованныхЛиц;
				НовыйДок = СоздатьСПВ(СтруктураРеквизитов, КатегорияЗЛ);
				ТекущаяСтрока = ПачкиСПВ[ПачкиСПВ.Количество() - 1];
				
				Для каждого СтрокаТЗ Из ТаблицаСтажа Цикл
					
					Если КатегорияЗЛ <> СтрокаТЗ.КатегорияЗастрахованныхЛиц Тогда
						
						Если НовыйДок.РаботникиОрганизации.Количество() <> 0 Тогда
							НовыйДок.РассчитатьВзносы();
							НовыйДок = СоздатьСПВ(СтруктураРеквизитов, СтрокаТЗ.КатегорияЗастрахованныхЛиц);
						КонецЕсли;
						
						КатегорияЗЛ = СтрокаТЗ.КатегорияЗастрахованныхЛиц;
						
					КонецЕсли;
					
					// Если у физлица нет страхового номера, то в пачки его включать не будем: проверка на указание пустого или неверного страхового номера ("   -   -      ")
					Если СтрокаТЗ.НетСтраховогоНомера Тогда
						СписокФизЛицБезСтрахНомеров.Добавить(СтрокаТЗ.ФизЛицо, СтрокаТЗ.Наименование);
						Продолжить;
					КонецЕсли;	
					
					Если НовыйДок.РаботникиОрганизации.Количество() = 200 Тогда
						
						НовыйДок.РассчитатьВзносы();
						НовыйДок = СоздатьСПВ(СтруктураРеквизитов, СтрокаТЗ.КатегорияЗастрахованныхЛиц);
						
					КонецЕсли; 
					
					СтрокаТабличнойЧасти = НовыйДок.РаботникиОрганизации.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти,СтрокаТЗ);
					Фамилия = СтрокаТЗ.Фамилия;
					Имя = СтрокаТЗ.Имя;
					Отчество = СтрокаТЗ.Отчество;
					Если Не ЗначениеЗаполнено(Фамилия + Имя + Отчество) Тогда
						ОбщегоНазначения.ФамилияИнициалыФизЛица(СтрокаТЗ.Наименование,Фамилия,Имя,Отчество);
					КонецЕсли;
					СтрокаТабличнойЧасти.Фамилия = Фамилия;
					СтрокаТабличнойЧасти.Имя = Имя;
					СтрокаТабличнойЧасти.Отчество = Отчество;
					СтрокаПенсионера = Пенсионеры.Найти(СтрокаТабличнойЧасти.ФизЛицо,"ФизЛицо");
					Если СтрокаПенсионера <> Неопределено Тогда
						СтрокаТабличнойЧасти.ДатаСоставления = СтрокаПенсионера.ДатаСоставления
					КонецЕсли;
					
				КонецЦикла;
				
				НовыйДок.РассчитатьВзносы();
				
			КонецЕсли;
			
		Иначе
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("По организации " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация,"Наименование") + " не обнаружено сведений о стаже и взносах!", Перечисления.ВидыСообщений.Ошибка));
		КонецЕсли;
		
	Иначе
		
		ДатаС = Дата(ОтчетныйГод, 1, 1);
		ДатаПо = Мин(ДатаСозданияДокументов,КонецГода(ДатаС));
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПроцедурыПерсонифицированногоУчета.ПоместитьВМенеджерСоответствиеТарифаКатегории(Запрос.МенеджерВременныхТаблиц);
		Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
		Запрос.УстановитьПараметр("ОбособленноеПодразделение", Организация);
		Запрос.УстановитьПараметр("Начало", ДатаС);
		Запрос.УстановитьПараметр("Окончание", ДатаПо);
		Запрос.УстановитьПараметр("ДатаАктуальности", ДатаСозданияДокументов);
		Запрос.УстановитьПараметр("ДатаНовойРедакцииЗакона212", ПроведениеРасчетов.ДатаРасширенияПеречняЛьготныхТарифовСтраховыхВзносов());
		
		МассивВидовДохода = Новый Массив;
		Если ОтчетныйГод < Год(ПроведениеРасчетов.ДатаЗаменыЕСНСтраховымиВзносами()) Тогда
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ПособияЗаСчетФСС);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ДенежноеДовольствиеВоеннослужащих);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ДенежноеСодержаниеПрокуроров);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.НеОблагаетсяЦеликом);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ОблагаетсяЦеликом);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.МатпомощьПриРожденииРебенка);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.Матпомощь);
			МассивВидовДохода.Добавить(Справочники.ДоходыЕСН.ВыплатыЗаСчетПрибыли);
		Иначе
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ПособияЗаСчетФСС);
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДенежноеДовольствиеВоеннослужащих);
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДенежноеСодержаниеПрокуроров);
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ДоходыСтудентовЗаРаботуВСтудотрядеПоТрудовомуДоговору);
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.НеОблагаетсяЦеликом);
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.ОблагаетсяЦеликом);
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.МатпомощьПриРожденииРебенка);
			МассивВидовДохода.Добавить(Справочники.ДоходыПоСтраховымВзносам.Матпомощь);
		КонецЕсли;
		Запрос.УстановитьПараметр("ВидыДохода", МассивВидовДохода);
		ДтНачМесяца = ДатаС;
		ТекстПериодов = "ВЫБРАТЬ
		|	&Начало КАК Период
		|ПОМЕСТИТЬ ВТПериоды";
		ДтНачМесяца = ДобавитьМесяц(ДтНачМесяца, 1);
		Пока ДтНачМесяца <= ДатаПо Цикл
			ТекстПериодов =  ТекстПериодов + "
			|ОБЪЕДИНИТЬ
			|
			|ВЫБРАТЬ
			|	ДАТАВРЕМЯ("+Формат(ДтНачМесяца, "ДФ=yyyy")+", "+Месяц(ДтНачМесяца)+", 1) КАК Период
			|";
			ДтНачМесяца = ДобавитьМесяц(ДтНачМесяца, 1);
		КонецЦИкла;
		Запрос.Текст = ТекстПериодов;
		Запрос.Выполнить();
		ОсновнойТекст = 
		"ВЫБРАТЬ
		|	ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних.Размер КАК Размер
		|ПОМЕСТИТЬ ВТПредельнаяВеличина
		|ИЗ
		|	РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов.СрезПоследних(&Окончание, ) КАК ПредельнаяВеличинаБазыСтраховыхВзносовСрезПоследних
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Периоды.Период КАК Период,
		|	ЕСТЬNULL(УчетнаяПолитикаНалоговыйУчет.ВидТарифаСтраховыхВзносов, ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОбщийНалоговыйРежим)) КАК ВидТарифаСтраховыхВзносов
		|ПОМЕСТИТЬ ВТТарифыОрганизации
		|ИЗ
		|	(ВЫБРАТЬ
		|		Периоды.Период КАК Период,
		|		УчетнаяПолитикаНалоговыйУчет.Организация КАК Организация,
		|		МАКСИМУМ(УчетнаяПолитикаНалоговыйУчет.Период) КАК ПериодРегистра
		|	ИЗ
		|		ВТПериоды КАК Периоды
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|			ПО Периоды.Период >= УчетнаяПолитикаНалоговыйУчет.Период
		|				И (УчетнаяПолитикаНалоговыйУчет.Организация = &ГоловнаяОрганизация)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		Периоды.Период,
		|		УчетнаяПолитикаНалоговыйУчет.Организация) КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаНалоговыйУчет КАК УчетнаяПолитикаНалоговыйУчет
		|		ПО Периоды.ПериодРегистра = УчетнаяПолитикаНалоговыйУчет.Период
		|			И Периоды.Организация = УчетнаяПолитикаНалоговыйУчет.Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТФизлица
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
		|			&Начало,
		|			&Окончание,
		|			МЕСЯЦ,
		|			ВидДохода <> ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|				И Организация = &ГоловнаяОрганизация
		|				И ОбособленноеПодразделение = &ОбособленноеПодразделение) КАК СтраховыеВзносыСведенияОДоходах
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ФИОФизЛицСрезПоследних.ФизЛицо КАК ФизЛицо,
		|	ФИОФизЛицСрезПоследних.Фамилия,
		|	ФИОФизЛицСрезПоследних.Имя,
		|	ФИОФизЛицСрезПоследних.Отчество
		|ПОМЕСТИТЬ ВТФИО
		|ИЗ
		|	РегистрСведений.ФИОФизЛиц.СрезПоследних(
		|			&ДатаАктуальности,
		|			ФизЛицо В
		|				(ВЫБРАТЬ
		|					Лица.ФизЛицо КАК ФизЛицо
		|				ИЗ
		|					ВТФизлица КАК Лица)) КАК ФИОФизЛицСрезПоследних
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СрезПоследнихДат.ПериодРегистрации КАК ПериодРегистрации,
		|	СрезПоследнихДат.Физлицо КАК Физлицо,
		|	СведенияОбИнвалидностиФизлиц.Инвалидность
		|ПОМЕСТИТЬ ВТИнвалиды
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТПериоды.Период КАК ПериодРегистрации,
		|		СведенияОбИнвалидностиФизлиц.Физлицо КАК Физлицо,
		|		МАКСИМУМ(СведенияОбИнвалидностиФизлиц.Период) КАК Период
		|	ИЗ
		|		ВТПериоды КАК ВТПериоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
		|			ПО (КОНЕЦПЕРИОДА(ВТПериоды.Период, МЕСЯЦ) >= СведенияОбИнвалидностиФизлиц.Период)
		|	ГДЕ
		|		СведенияОбИнвалидностиФизлиц.Физлицо В
		|				(ВЫБРАТЬ
		|					Лица.ФизЛицо КАК ФизЛицо
		|				ИЗ
		|					ВТФизлица КАК Лица)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СведенияОбИнвалидностиФизлиц.Физлицо,
		|		ВТПериоды.Период) КАК СрезПоследнихДат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СведенияОбИнвалидностиФизлиц КАК СведенияОбИнвалидностиФизлиц
		|		ПО СрезПоследнихДат.Период = СведенияОбИнвалидностиФизлиц.Период
		|			И СрезПоследнихДат.Физлицо = СведенияОбИнвалидностиФизлиц.Физлицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СрезПоследнихДат.ПериодРегистрации КАК ПериодРегистрации,
		|	СрезПоследнихДат.Физлицо КАК Физлицо,
		|	ГражданствоФизЛиц.НеИмеетПравоНаПенсию
		|ПОМЕСТИТЬ ВТГражданство
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТПериоды.Период КАК ПериодРегистрации,
		|		ГражданствоФизЛиц.ФизЛицо КАК Физлицо,
		|		МАКСИМУМ(ГражданствоФизЛиц.Период) КАК Период
		|	ИЗ
		|		ВТПериоды КАК ВТПериоды
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
		|			ПО (КОНЕЦПЕРИОДА(ВТПериоды.Период, МЕСЯЦ) >= ГражданствоФизЛиц.Период)
		|	ГДЕ
		|		ГражданствоФизЛиц.ФизЛицо В
		|				(ВЫБРАТЬ
		|					Лица.ФизЛицо КАК ФизЛицо
		|				ИЗ
		|					ВТФизлица КАК Лица)
		|	
		|	СГРУППИРОВАТЬ ПО
		|		ГражданствоФизЛиц.ФизЛицо,
		|		ВТПериоды.Период) КАК СрезПоследнихДат
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГражданствоФизЛиц КАК ГражданствоФизЛиц
		|		ПО СрезПоследнихДат.Период = ГражданствоФизЛиц.Период
		|			И СрезПоследнихДат.Физлицо = ГражданствоФизЛиц.ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СтраховыеВзносыСведенияОДоходах.Организация,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
		|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.Период < &ДатаНовойРедакцииЗакона212
		|			ТОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОблагаетсяЕНВД,
		|	СтраховыеВзносыСведенияОДоходах.Период КАК Период,
		|	СУММА(СтраховыеВзносыСведенияОДоходах.РезультатОборот) КАК РезультатОборот,
		|	СУММА(СтраховыеВзносыСведенияОДоходах.СкидкаОборот) КАК СкидкаОборот
		|ПОМЕСТИТЬ ВТСведенияОДоходах
		|ИЗ
		|	РегистрНакопления.СтраховыеВзносыСведенияОДоходах.Обороты(
		|			&Начало,
		|			&Окончание,
		|			МЕСЯЦ,
		|			Физлицо В
		|					(ВЫБРАТЬ
		|						Лица.ФизЛицо КАК ФизЛицо
		|					ИЗ
		|						ВТФизлица КАК Лица)
		|				И ВидДохода <> ЗНАЧЕНИЕ(Справочник.ДоходыПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|				И Организация = &ГоловнаяОрганизация) КАК СтраховыеВзносыСведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СтраховыеВзносыСведенияОДоходах.ФизЛицо,
		|	СтраховыеВзносыСведенияОДоходах.Организация,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
		|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение,
		|	СтраховыеВзносыСведенияОДоходах.Период,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.Период < &ДатаНовойРедакцииЗакона212
		|			ТОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо
		|ПОМЕСТИТЬ ВТФизлицаБезОблагаемойБазы
		|ИЗ
		|	ВТСведенияОДоходах КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВЫБОР
		|			КОГДА СведенияОДоходах.ВидДохода.ВходитВБазуПФР
		|					ИЛИ СведенияОДоходах.ВидДохода.ВходитВБазуФОМС
		|				ТОГДА СведенияОДоходах.РезультатОборот - СведенияОДоходах.СкидкаОборот
		|			ИНАЧЕ 0
		|		КОНЕЦ) < 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ФизЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(СтраховыеВзносыСведенияОДоходах.Период, МЕСЯЦ) КАК ПериодРегистрации,
		|	СтраховыеВзносыСведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода В (&ВидыДохода)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.Трудовой)
		|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипДоговораСЗВ63.ГражданскоПравовой)
		|	КОНЕЦ КАК ТипДоговора,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Инвалиды.Инвалидность, ЛОЖЬ)
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ОрганизацияИнвалидов)
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
		|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ТарифыСтраховыхВзносов.ЕНВД)
		|		ИНАЧЕ ВидыТарифныхСтавок.ВидТарифаСтраховыхВзносов
		|	КОНЕЦ КАК ВидТарифаСтраховыхВзносов,
		|	СтраховыеВзносыСведенияОДоходах.РезультатОборот КАК Результат,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(Гражданство.НеИмеетПравоНаПенсию, ЛОЖЬ)
		|			ТОГДА 0
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуПФР
		|			ТОГДА СтраховыеВзносыСведенияОДоходах.РезультатОборот - СтраховыеВзносыСведенияОДоходах.СкидкаОборот
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК ОблагаемаяБазаПФР
		|ПОМЕСТИТЬ ВТДоходыПоТарифам
		|ИЗ
		|	ВТСведенияОДоходах КАК СтраховыеВзносыСведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИнвалиды КАК Инвалиды
		|		ПО СтраховыеВзносыСведенияОДоходах.Период = Инвалиды.ПериодРегистрации
		|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Инвалиды.Физлицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданство КАК Гражданство
		|		ПО СтраховыеВзносыСведенияОДоходах.Период = Гражданство.ПериодРегистрации
		|			И СтраховыеВзносыСведенияОДоходах.ФизЛицо = Гражданство.Физлицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифыОрганизации КАК ВидыТарифныхСтавок
		|		ПО СтраховыеВзносыСведенияОДоходах.Период = ВидыТарифныхСтавок.Период
		|ГДЕ
		|	(НЕ СтраховыеВзносыСведенияОДоходах.ФизЛицо В
		|				(ВЫБРАТЬ
		|					Физлица.ФизЛицо
		|				ИЗ
		|					ВТФизлицаБезОблагаемойБазы КАК Физлица))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) КАК Период,
		|	СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) КАК ЗаГод,
		|	СУММА(ВЫБОР
		|			КОГДА НАЧАЛОПЕРИОДА(Периоды.Период, МЕСЯЦ) = СведенияОДоходах.ПериодРегистрации
		|				ТОГДА СведенияОДоходах.ОблагаемаяБазаПФР
		|			ИНАЧЕ 0
		|		КОНЕЦ) КАК ЗаМесяц
		|ПОМЕСТИТЬ ВТБазаНарастающимИтогом
		|ИЗ
		|	ВТПериоды КАК Периоды
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоТарифам КАК СведенияОДоходах
		|		ПО (СведенияОДоходах.ПериодРегистрации МЕЖДУ НАЧАЛОПЕРИОДА(Периоды.Период, ГОД) И Периоды.Период)
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	Периоды.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
		|	ОблагаемаяБаза.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер >= 0
		|			ТОГДА ОблагаемаяБаза.ЗаГод - Предел.Размер
		|		ИНАЧЕ 0
		|	КОНЕЦ - ВЫБОР
		|		КОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер >= 0
		|			ТОГДА ЕСТЬNULL(ОблагаемаяБазаПрошлогоМесяца.ЗаГод, 0) - Предел.Размер
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК СуммаПревысившаяПредел
		|ПОМЕСТИТЬ ВТБазаПревышенияДохода
		|ИЗ
		|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельнаяВеличина КАК Предел
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаНарастающимИтогом КАК ОблагаемаяБазаПрошлогоМесяца
		|		ПО ОблагаемаяБаза.ФизЛицо = ОблагаемаяБазаПрошлогоМесяца.ФизЛицо
		|			И (ОблагаемаяБаза.Период = ДОБАВИТЬКДАТЕ(ОблагаемаяБазаПрошлогоМесяца.Период, МЕСЯЦ, 1))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СведенияОДоходах.ПериодРегистрации КАК Период,
		|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.ТипДоговора,
		|	СУММА(СведенияОДоходах.ОблагаемаяБазаПФР) КАК ЗаМесяц
		|ПОМЕСТИТЬ ВТБазаЗаМесяцПоОбособленноеПодразделение
		|ИЗ
		|	ВТДоходыПоТарифам КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	СведенияОДоходах.ОбособленноеПодразделение,
		|	СведенияОДоходах.ПериодРегистрации,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов,
		|	СведенияОДоходах.ТипДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СведенияОДоходах.Период КАК Период,
		|	МАКСИМУМ(СведенияОДоходах.ЗаМесяц) КАК ЗаМесяц
		|ПОМЕСТИТЬ ВТМаксБазаЗаМесяц
		|ИЗ
		|	ВТБазаЗаМесяцПоОбособленноеПодразделение КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	СведенияОДоходах.Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|	СведенияОДоходах.Период КАК Период,
		|	СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	МАКСИМУМ(БазаЗаМесяцПоОбособленным.ТипДоговора) КАК ТипДоговора
		|ПОМЕСТИТЬ ВТОбособленноеПодразделениеМаксБазы
		|ИЗ
		|	(ВЫБРАТЬ
		|		СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|		СведенияОДоходах.Период КАК Период,
		|		СведенияОДоходах.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|		МАКСИМУМ(БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов,
		|		БазаЗаМесяцПоОбособленным.ЗаМесяц КАК ЗаМесяц
		|	ИЗ
		|		(ВЫБРАТЬ
		|			СведенияОДоходах.ФизЛицо КАК ФизЛицо,
		|			СведенияОДоходах.Период КАК Период,
		|			СведенияОДоходах.ЗаМесяц КАК ЗаМесяц,
		|			МАКСИМУМ(БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение) КАК ОбособленноеПодразделение
		|		ИЗ
		|			ВТМаксБазаЗаМесяц КАК СведенияОДоходах
		|				ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|				ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|					И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
		|					И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
		|		
		|		СГРУППИРОВАТЬ ПО
		|			СведенияОДоходах.ФизЛицо,
		|			СведенияОДоходах.Период,
		|			СведенияОДоходах.ЗаМесяц) КАК СведенияОДоходах
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|			ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|				И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
		|				И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
		|				И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
		|	
		|	СГРУППИРОВАТЬ ПО
		|		СведенияОДоходах.ФизЛицо,
		|		СведенияОДоходах.Период,
		|		СведенияОДоходах.ОбособленноеПодразделение,
		|		БазаЗаМесяцПоОбособленным.ЗаМесяц) КАК СведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|		ПО СведенияОДоходах.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|			И СведенияОДоходах.Период = БазаЗаМесяцПоОбособленным.Период
		|			И СведенияОДоходах.ЗаМесяц = БазаЗаМесяцПоОбособленным.ЗаМесяц
		|			И СведенияОДоходах.ОбособленноеПодразделение = БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизЛицо,
		|	СведенияОДоходах.Период,
		|	СведенияОДоходах.ОбособленноеПодразделение,
		|	СведенияОДоходах.ВидТарифаСтраховыхВзносов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОблагаемаяБаза.ФизЛицо КАК ФизЛицо,
		|	ОблагаемаяБаза.Период КАК Период,
		|	ВЫБОР
		|		КОГДА ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел = 0
		|				ИЛИ ОблагаемаяБаза.ЗаМесяц = 0
		|			ТОГДА 0
		|		ИНАЧЕ ВЫРАЗИТЬ((ВЫРАЗИТЬ(ПревышениеДоходаПоВсемОП.СуммаПревысившаяПредел КАК ЧИСЛО(25, 10))) * (ВЫРАЗИТЬ(БазаЗаМесяцПоОбособленным.ЗаМесяц КАК ЧИСЛО(25, 10))) / (ВЫРАЗИТЬ(ОблагаемаяБаза.ЗаМесяц КАК ЧИСЛО(25, 10))) КАК ЧИСЛО(15, 2))
		|	КОНЕЦ КАК СуммаПревысившаяПредел,
		|	БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение,
		|	БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов,
		|	БазаЗаМесяцПоОбособленным.ТипДоговора
		|ПОМЕСТИТЬ ВТПревышениеДоходаПоОбособленноеПодразделение
		|ИЗ
		|	ВТБазаНарастающимИтогом КАК ОблагаемаяБаза
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаПревышенияДохода КАК ПревышениеДоходаПоВсемОП
		|		ПО ОблагаемаяБаза.ФизЛицо = ПревышениеДоходаПоВсемОП.ФизЛицо
		|			И ОблагаемаяБаза.Период = ПревышениеДоходаПоВсемОП.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТБазаЗаМесяцПоОбособленноеПодразделение КАК БазаЗаМесяцПоОбособленным
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
		|			ПО БазаЗаМесяцПоОбособленным.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
		|				И БазаЗаМесяцПоОбособленным.Период = ОбособленноеПодразделениеДляОкругления.Период
		|				И БазаЗаМесяцПоОбособленным.ОбособленноеПодразделение = ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение
		|				И БазаЗаМесяцПоОбособленным.ВидТарифаСтраховыхВзносов = ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов
		|				И БазаЗаМесяцПоОбособленным.ТипДоговора = ОбособленноеПодразделениеДляОкругления.ТипДоговора
		|		ПО ОблагаемаяБаза.Период = БазаЗаМесяцПоОбособленным.Период
		|			И ОблагаемаяБаза.ФизЛицо = БазаЗаМесяцПоОбособленным.ФизЛицо
		|ГДЕ
		|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение ЕСТЬ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Превышение.ФизЛицо КАК ФизЛицо,
		|	Превышение.Период КАК Период,
		|	Превышение.СуммаПревысившаяПредел,
		|	Превышение.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	Превышение.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
		|	Превышение.ТипДоговора
		|ПОМЕСТИТЬ ВТПревышениеДохода
		|ИЗ
		|	ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Превышение.ФизЛицо,
		|	Превышение.Период,
		|	СУММА(Превышение.СуммаПревысившаяПредел),
		|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов,
		|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
		|	ОбособленноеПодразделениеДляОкругления.ТипДоговора
		|ИЗ
		|	(ВЫБРАТЬ
		|		Превышение.ФизЛицо КАК ФизЛицо,
		|		Превышение.Период КАК Период,
		|		-Превышение.СуммаПревысившаяПредел КАК СуммаПревысившаяПредел
		|	ИЗ
		|		ВТПревышениеДоходаПоОбособленноеПодразделение КАК Превышение
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		Превышение.ФизЛицо,
		|		Превышение.Период,
		|		Превышение.СуммаПревысившаяПредел
		|	ИЗ
		|		ВТБазаПревышенияДохода КАК Превышение) КАК Превышение
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОбособленноеПодразделениеМаксБазы КАК ОбособленноеПодразделениеДляОкругления
		|		ПО Превышение.ФизЛицо = ОбособленноеПодразделениеДляОкругления.ФизЛицо
		|			И Превышение.Период = ОбособленноеПодразделениеДляОкругления.Период
		|
		|СГРУППИРОВАТЬ ПО
		|	Превышение.ФизЛицо,
		|	Превышение.Период,
		|	ОбособленноеПодразделениеДляОкругления.ВидТарифаСтраховыхВзносов,
		|	ОбособленноеПодразделениеДляОкругления.ОбособленноеПодразделение,
		|	ОбособленноеПодразделениеДляОкругления.ТипДоговора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыВзносов.ФизЛицо КАК ФизЛицо,
		|	ДоходыВзносов.ПериодРегистрации КАК Период,
		|	МЕСЯЦ(ДоходыВзносов.ПериодРегистрации) КАК Месяц,
		|	ДоходыВзносов.ВидТарифаСтраховыхВзносов КАК ВидТарифаСтраховыхВзносов,
		|	ДоходыВзносов.ТипДоговора,
		|	СУММА(ДоходыВзносов.Результат) КАК НачисленоВсего,
		|	СУММА(ДоходыВзносов.ОблагаемаяБазаПФР) - МАКСИМУМ(ПревышениеДоходаПФР.СуммаПревысившаяПредел) КАК ОблагаемаяБазаПФР
		|ПОМЕСТИТЬ ВТДоходыПоТарифамДоговорам
		|ИЗ
		|	ВТДоходыПоТарифам КАК ДоходыВзносов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПревышениеДохода КАК ПревышениеДоходаПФР
		|		ПО ДоходыВзносов.ФизЛицо = ПревышениеДоходаПФР.ФизЛицо
		|			И ДоходыВзносов.ОбособленноеПодразделение = ПревышениеДоходаПФР.ОбособленноеПодразделение
		|			И ДоходыВзносов.ПериодРегистрации = ПревышениеДоходаПФР.Период
		|			И ДоходыВзносов.ВидТарифаСтраховыхВзносов = ПревышениеДоходаПФР.ВидТарифаСтраховыхВзносов
		|			И ДоходыВзносов.ТипДоговора = ПревышениеДоходаПФР.ТипДоговора
		|ГДЕ
		|	ДоходыВзносов.ОбособленноеПодразделение = &ОбособленноеПодразделение
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыВзносов.ФизЛицо,
		|	ДоходыВзносов.ВидТарифаСтраховыхВзносов,
		|	ДоходыВзносов.ТипДоговора,
		|	ДоходыВзносов.ПериодРегистрации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Доходы.ФизЛицо.СтраховойНомерПФР = """"
		|			ТОГДА ИСТИНА
		|		КОГДА Доходы.ФизЛицо.СтраховойНомерПФР = ""   -   -      ""
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НетСтраховогоНомера,
		|	Доходы.ФизЛицо КАК ФизЛицо,
		|	Доходы.ФизЛицо.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|	Доходы.Месяц КАК Месяц,
		|	СУММА(Доходы.НачисленоВсего) КАК Заработок,
		|	СУММА(Доходы.ОблагаемаяБазаПФР) КАК ОблагаетсяВзносами,
		|	СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
		|	Доходы.ТипДоговора КАК ТипДоговора,
		|	Доходы.ФизЛицо.Наименование КАК Порядок,
		|	ФИО.Фамилия,
		|	ФИО.Имя,
		|	ФИО.Отчество
		|ИЗ
		|	ВТДоходыПоТарифамДоговорам КАК Доходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИО КАК ФИО
		|		ПО Доходы.ФизЛицо = ФИО.ФизЛицо
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеТарифаКатегории КАК СоответствиеТарифаКатегории
		|		ПО Доходы.ВидТарифаСтраховыхВзносов = СоответствиеТарифаКатегории.ВидТарифаСтраховыхВзносов
		|			И (ГОД(Доходы.Период) МЕЖДУ СоответствиеТарифаКатегории.ГодС И СоответствиеТарифаКатегории.ГодПо)
		|
		|СГРУППИРОВАТЬ ПО
		|	Доходы.ФизЛицо,
		|	Доходы.Месяц,
		|	СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц,
		|	Доходы.ТипДоговора,
		|	Доходы.ФизЛицо.СтраховойНомерПФР,
		|	Доходы.ФизЛицо.Наименование,
		|	ФИО.Фамилия,
		|	ФИО.Имя,
		|	ФИО.Отчество
		|
		|УПОРЯДОЧИТЬ ПО
		|	КатегорияЗастрахованныхЛиц,
		|	ТипДоговора,
		|	Порядок,
		|	ФизЛицо,
		|	Месяц";
		
		Запрос.Текст = СтрЗаменить(ОсновнойТекст,"РегистрСведений.УчетнаяПолитикаНалоговыйУчет", ЗаполнениеРегламентированнойОтчетностиПереопределяемый.ИмяУчетнойПолитики()); 	
		
		РезультатЗапроса = Запрос.Выполнить();
		Если РезультатЗапроса.Пустой() Тогда
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("По организации " + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация,"Наименование") + " не обнаружено сведений о заработке!", Перечисления.ВидыСообщений.Ошибка));
			ВывестиСообщенияОбОшибках(МассивСообщений);
			Возврат Неопределено
		КонецЕсли;
		
		Если ДатаСозданияДокументов < НачалоДня(ДатаПо) Тогда
			МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("При расчете сумм заработка учтены данные, зарегистрированные по " + Формат(ДатаСозданияДокументов,"ДЛФ=DD"), Перечисления.ВидыСообщений.ВажнаяИнформация));
		КонецЕсли;
		
		СтруктураРеквизитов = СтруктураОбщихРеквизитовДокумента();
			
		Выборка = РезультатЗапроса.Выбрать();
		БылоСтрок = ПачкиСЗВ63.Количество();
		Пока Выборка.СледующийПоЗначениюПоля("КатегорияЗастрахованныхЛиц") Цикл
			Пока Выборка.СледующийПоЗначениюПоля("ТипДоговора") Цикл
				
				НовыйДок = СоздатьСЗВ63(СтруктураРеквизитов);
				ЗаполнитьЗначенияСвойств(НовыйДок,Выборка,"КатегорияЗастрахованныхЛиц,ТипДоговора");
                НовыйДок.ОписьАДВ62 = СсылкаНаДокументКомплекта;
				Пока Выборка.СледующийПоЗначениюПоля("Порядок") Цикл
					Пока Выборка.СледующийПоЗначениюПоля("ФизЛицо") Цикл
						
						// Если у физлица нет страхового номера, то в пачки его включать не будем: проверка на указание пустого или неверного страхового номера ("   -   -      ")
						Если Выборка.НетСтраховогоНомера Тогда
							СписокФизЛицБезСтрахНомеров.Добавить(Выборка.ФизЛицо, Выборка.Порядок);
							Продолжить;
						КонецЕсли;	
						
						Если НовыйДок.СотрудникиОрганизации.Количество() = 200 Тогда
							НовыйДок = СоздатьСЗВ63(СтруктураРеквизитов);
							ЗаполнитьЗначенияСвойств(НовыйДок, Выборка, "КатегорияЗастрахованныхЛиц,ТипДоговора");
			                НовыйДок.ОписьАДВ62 = СсылкаНаДокументКомплекта;
						КонецЕсли; 
					
						СтрокаТабличнойЧасти = НовыйДок.СотрудникиОрганизации.Добавить();
						ЗаполнитьЗначенияСвойств(СтрокаТабличнойЧасти, Выборка);
						Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Фамилия + СтрокаТабличнойЧасти.Имя + СтрокаТабличнойЧасти.Отчество) Тогда
							Фамилия = ""; Имя = ""; Отчество = "";
							ОбщегоНазначения.ФамилияИнициалыФизЛица(Выборка.Порядок,Фамилия,Имя,Отчество);
							СтрокаТабличнойЧасти.Фамилия = Фамилия;
							СтрокаТабличнойЧасти.Имя = Имя;
							СтрокаТабличнойЧасти.Отчество = Отчество;
						КонецЕсли;
						
						Пока Выборка.Следующий() Цикл
							ЗаполнитьЗначенияСвойств(НовыйДок.СведенияОЗаработке.Добавить(), Выборка);
						КонецЦикла;
						
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		ТекущаяСтрока = ПачкиСЗВ63[БылоСтрок];
		
	КонецЕсли;
	
	Если СписокФизЛицБезСтрахНомеров.Количество() > 0 Тогда
		
		МассивФизЛиц = Новый Массив;
		Для Каждого ЭлементСписка Из СписокФизЛицБезСтрахНомеров Цикл
			МассивФизЛиц.Добавить(Новый Структура("Представление, Расшифровка", ЭлементСписка.Представление, ЭлементСписка.Значение));
		КонецЦикла;
		МассивСообщений.Добавить(СоздатьСообщениеСтруктуру("Следующие физические лица не включены в пачки документов перс.учета из-за отсутствия страховых номеров ПФР:", Перечисления.ВидыСообщений.ВажнаяИнформация, МассивФизЛиц));
		
	КонецЕсли; 
	
	Если МассивСообщений.Количество() > 0 Тогда
		ВывестиСообщенияОбОшибках(МассивСообщений);
	КонецЕсли; 
	
	Возврат ТекущаяСтрока
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ = Неопределено) Экспорт
	
	ЗаменяемаяСсылка = ЭлементСоответствия.Ключ;
	НовыйДокОбъект = ЭлементСоответствия.Значение;
	
	Если ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.СведенияОТрудовомСтажеИЗаработкеСЗВ4")Тогда
		Если ТаблицаУдаленныхСЗВ.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхСЗВ[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхСЗВ.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектДляПоказаФизлиц.ЭтоНовый() Тогда
				Если ДокументОбъектДляПоказаФизлиц.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектДляПоказаФизлиц = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектДляПоказаФизлиц.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектДляПоказаФизлиц = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиДокументов.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			Иначе
				Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
					Если ТипЗнч(ЭлементСоответствия.Ключ) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
						СтрокаТабличнойЧастиДокументаПередачи =  ЭлементСоответствия.Значение.ПачкиДокументов.Найти(ЗаменяемаяСсылка, "ДокументПачка");
						Если СтрокаТабличнойЧастиДокументаПередачи <> Неопределено Тогда
							СтрокаТабличнойЧастиДокументаПередачи.ДокументПачка = НоваяСсылка;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла; 
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗнч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.ПередачаСЗВ4ВПФР") Тогда
		Если ТаблицаУдаленныхАДВ11.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхАДВ11[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхАДВ11.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.ПачкиДокументов.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.ПачкиДокументов Цикл
				ДобавляемаяСтрока = УдаленныйДокОбъект.ПачкиДокументов.Добавить();
				ДобавляемаяСтрока.ДокументПачка = СтрокаТЧ.ДокументПачка;
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗадолженности.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗадолженности Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗадолженности.Добавить(), СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектАДВ11.ЭтоНовый() Тогда
				Если ДокументОбъектАДВ11.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектАДВ11 = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектАДВ11.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектАДВ11 = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиДокументов.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗНч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.СведенияОВзносахИСтраховомСтажеСПВ1") Тогда
		Если ТаблицаУдаленныхАДВ11.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхАДВ11[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхАДВ11.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.РаботникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.РаботникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.РаботникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектСПВ.ЭтоНовый() Тогда
				Если ДокументОбъектСПВ.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектСПВ = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектСПВ.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектСПВ = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиСПВ.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	ИначеЕсли ТипЗНч(ЗаменяемаяСсылка) = Тип("ДокументСсылка.СведенияОНачисленномЗаработкеСЗВ63") Тогда
		Если ТаблицаУдаленныхАДВ11.Количество() > 0  Тогда
			УдаленныйДокОбъект = ТаблицаУдаленныхАДВ11[0].Ссылка.ПолучитьОбъект();
			ТаблицаУдаленныхАДВ11.Удалить(0);
			ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект, НовыйДокОбъект, , "Проведен");
			УдаленныйДокОбъект.СотрудникиОрганизации.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СотрудникиОрганизации Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СотрудникиОрганизации.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.СведенияОЗаработке.Очистить();
			Для Каждого СтрокаТЧ Из НовыйДокОбъект.СведенияОЗаработке Цикл
				ЗаполнитьЗначенияСвойств(УдаленныйДокОбъект.СведенияОЗаработке.Добавить(),СтрокаТЧ);
			КонецЦикла;
			УдаленныйДокОбъект.Записать();
			НоваяСсылка = УдаленныйДокОбъект.Ссылка;
			Если ДокументОбъектСЗВ63.ЭтоНовый() Тогда
				Если ДокументОбъектСЗВ63.ПолучитьСсылкуНового() = ЗаменяемаяСсылка Тогда
					ДокументОбъектСЗВ63 = УдаленныйДокОбъект
				КонецЕсли;
			Иначе
				Если ДокументОбъектСЗВ63.Ссылка = ЗаменяемаяСсылка Тогда
					ДокументОбъектСЗВ63 = УдаленныйДокОбъект
				КонецЕсли;
			КонецЕсли;
			СтрокаПачки = ПачкиСЗВ63.Найти(ЗаменяемаяСсылка, "Пачка");
			Если СтрокаПачки <> Неопределено Тогда
				СтрокаПачки.Пачка = НоваяСсылка
			КонецЕсли;
			СоответствиеСсылокИОбъектов.Удалить(ЗаменяемаяСсылка);
			СоответствиеСсылокИОбъектов.Вставить(НоваяСсылка, УдаленныйДокОбъект);
		Иначе
			НовыйДокОбъект.Записать();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры // ЗаписатьНовыйДокументПоверхСтарого()

Процедура СохранитьДанные(УдаляемыеДокументы, ТипСведений, Организация, ВыполнятьСохранениеСведенийПринятыхВПФР, ОтдельныйДокумент = Неопределено) Экспорт
	
	НачатьТранзакцию();
	
	// Сохраняем измененные документы
	Если ОтдельныйДокумент = Неопределено Тогда
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			Если НЕ ЭлементСоответствия.Значение.ЭтоНовый() И ЭлементСоответствия.Значение.Модифицированность() Тогда
				ЭлементСоответствия.Значение.Записать(?(ЭлементСоответствия.Значение.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	// Помечаем на удаление удаляемые объекты
	Если УдаляемыеДокументы <> Неопределено Тогда
		Пока УдаляемыеДокументы.Следующий() Цикл
			ДокОбъект = УдаляемыеДокументы.Ссылка.ПолучитьОбъект();
			ДокОбъект.УстановитьПометкуУдаления(Истина);
		КонецЦикла;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	
	// Записываем в базу новые, только созданные документы на место удаленных документов
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ПередачаСЗВ4вПФР.Ссылка
		|ИЗ
		|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
		|ГДЕ
		|	ПередачаСЗВ4вПФР.ПометкаУдаления";
		ТаблицаУдаленныхАДВ11 = Запрос.Выполнить().Выгрузить();
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
		|ГДЕ
		|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления";
		ТаблицаУдаленныхСЗВ = Запрос.Выполнить().Выгрузить();
		
		Если ОтдельныйДокумент = Неопределено Тогда
			
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ);
				КонецЕсли;
			КонецЦикла;
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				Если НЕ ЭлементСоответствия.Значение.ЭтоНовый() И ЭлементСоответствия.Значение.Модифицированность() Тогда
					ЭлементСоответствия.Значение.Записать(?(ЭлементСоответствия.Значение.Проведен,РежимЗаписиДокумента.Проведение, РежимЗаписиДокумента.Запись));
				КонецЕсли;
			КонецЦикла;
		Иначе
			Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
				Если ЭлементСоответствия.Ключ = ОтдельныйДокумент Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхАДВ11, ТаблицаУдаленныхСЗВ);
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка
		|ИЗ
		|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
		|ГДЕ
		|	СведенияОВзносахИСтраховомСтажеСПВ1.ПометкаУдаления";
		ТаблицаУдаленныхСПВ = Запрос.Выполнить().Выгрузить();
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			
			Если ОтдельныйДокумент = Неопределено Тогда
				Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСПВ);
				КонецЕсли;
			ИначеЕсли ЭлементСоответствия.Ключ = ОтдельныйДокумент Тогда
				ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСПВ);
			КонецЕсли;
			
		КонецЦикла;
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка
		|ИЗ
		|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
		|ГДЕ
		|	СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления";
		ТаблицаУдаленныхСЗВ = Запрос.Выполнить().Выгрузить();
		Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
			
			Если ОтдельныйДокумент = Неопределено Тогда
				Если ЭлементСоответствия.Значение.ЭтоНовый() Тогда
					ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСЗВ);
				КонецЕсли;
			ИначеЕсли ЭлементСоответствия.Ключ = ОтдельныйДокумент Тогда
				ЗаписатьНовыйДокумент(ЭлементСоответствия, ТаблицаУдаленныхСЗВ);
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Запишем сведения о документах, принятых в ПФР
	Если ВыполнятьСохранениеСведенийПринятыхВПФР Тогда
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("СписокПериодов",	МассивПрошлыхПериодов);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияПринятыеПФР.Организация,
		|	СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР,
		|	СведенияПринятыеПФР.КомплектДокументов
		|ИЗ
		|	РегистрСведений.СведенияПринятыеПФР КАК СведенияПринятыеПФР
		|ГДЕ
		|	СведенияПринятыеПФР.Организация = &Организация
		|	И (НЕ СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР В (&СписокПериодов))";
		
		НаборЗаписей = РегистрыСведений.СведенияПринятыеПФР.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Организация.Установить(Организация);
		НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
		
		Для Каждого ПрошлыйПериод из МассивПрошлыхПериодов Цикл
			СтрокаПачки = ПачкиДокументов.Найти(ПрошлыйПериод, "ОтчетныйПериод");
			Если СтрокаПачки <> Неопределено Тогда
				Запись = НаборЗаписей.Добавить();
				Запись.Организация					= Организация;
				Запись.ОтчетныйПериодПерсучетаПФР	= ПрошлыйПериод;
				Запись.КомплектДокументов			= СтрокаПачки.Пачка;
			КонецЕсли;
		КонецЦикла;
		
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
	ЗафиксироватьТранзакцию();
	
КонецПроцедуры

Функция ДокументыБылиМодифицированы() Экспорт

	ДокументыМодифицированы = Ложь;
	
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		Если ЭлементСоответствия.Значение.Модифицированность() Тогда
			ДокументыМодифицированы = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ДокументыМодифицированы

КонецФункции // ДокументыМодифицированы()

Функция КоличествоПринятыхПФРДокументов() Экспорт

	Возврат ПачкиДокументов.Количество() - ПачкиДокументов.НайтиСтроки(Новый Структура("ОтчетныйПериод", ОтчетныйПериод)).Количество();

КонецФункции // КоличествоПринятыхПФРДокументов()

Функция НеиспользуемыеДокументы(ТипСведений, Организация, ОтчетныйПериод, ОтчетныйГод) Экспорт

	СписокДокументовДерева = Новый Массив;
	Для каждого ЭлементСоответствия Из СоответствиеСсылокИОбъектов Цикл
		СписокДокументовДерева.Добавить(ЭлементСоответствия.Ключ);
	КонецЦикла;
	
	// получаем список удаляемых документов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокДокументовДерева", СписокДокументовДерева);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериод);
	Если ТипСведений = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ Тогда
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка
		|ИЗ
		|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4 КАК СведенияОТрудовомСтажеИЗаработкеСЗВ4
		|ГДЕ
		|	СведенияОТрудовомСтажеИЗаработкеСЗВ4.Организация = &Организация
		|	И СведенияОТрудовомСтажеИЗаработкеСЗВ4.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.ПометкаУдаления)
		|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.Ссылка В (&СписокДокументовДерева))
		|	И (НЕ СведенияОТрудовомСтажеИЗаработкеСЗВ4.СпециальныйДокумент2010года)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПередачаСЗВ4вПФР.Ссылка
		|ИЗ
		|	Документ.ПередачаСЗВ4вПФР КАК ПередачаСЗВ4вПФР
		|ГДЕ
		|	ПередачаСЗВ4вПФР.Организация = &Организация
		|	И ПередачаСЗВ4вПФР.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ ПередачаСЗВ4вПФР.ПометкаУдаления)
		|	И (НЕ ПередачаСЗВ4вПФР.СпециальныйДокумент2010года)
		|	И (НЕ ПередачаСЗВ4вПФР.Ссылка В (&СписокДокументовДерева))
		|	И (НЕ ПередачаСЗВ4вПФР.НеСодержитСЗВ)";
	
	ИначеЕсли ТипСведений = Перечисления.ТипыСведенийСЗВ.ПЕНСИОННАЯ Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка
		|ИЗ
		|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
		|ГДЕ
		|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация = &Организация
		|	И СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ СведенияОВзносахИСтраховомСтажеСПВ1.ПометкаУдаления)
		|	И (НЕ СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка В (&СписокДокументовДерева))";
		
	Иначе
		Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйГод);
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка
		|ИЗ
		|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
		|ГДЕ
		|	СведенияОНачисленномЗаработкеСЗВ63.Организация = &Организация
		|	И СведенияОНачисленномЗаработкеСЗВ63.ОтчетныйПериод = &ОтчетныйПериод
		|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления)
		|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.Ссылка В (&СписокДокументовДерева))";
		
	КонецЕсли;
	УдаляемыеДокументы = Запрос.Выполнить().Выбрать();
	
	Возврат УдаляемыеДокументы
	
КонецФункции // НеиспользуемыеДокументы()

Функция ПодобранПолныйКомплектПринятыхПФРДокументов() Экспорт

	КоличествоДоковПрошлогоПериода = КоличествоПринятыхПФРДокументов();
	Возврат МассивПрошлыхПериодов.Количество() = 0 Или КоличествоДоковПрошлогоПериода = МассивПрошлыхПериодов.Количество()

КонецФункции // ПодобранПолныйКомплектПринятыхПФРДокументов()

Процедура УдалитьПустойЗаголовок(ДеревоСообщений)

	ПоследнееСообщение = ДеревоСообщений.Строки[ДеревоСообщений.Строки.Количество() - 1];
	Если ПоследнееСообщение.Строки.Количество() = 0 Тогда
		ДеревоСообщений.Строки.Удалить(ПоследнееСообщение);
	КонецЕсли;
	
КонецПроцедуры

Функция ПроверитьКомплектДокументов(ПачкаАДВ62, СообщатьОбУспехе = Ложь) Экспорт
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ДеревоСообщений = ОбработкаКомментариев.Сообщения;
	
	ДокументОбъект = СоответствиеСсылокИОбъектов[ПачкаАДВ62];
	ОтчетныйПериодАДВ62 = ДокументОбъект.ОтчетныйПериод;
    ДеревоАДВ62 = Неопределено;
	
	РСВ1 = ДокументОбъект.РасчетСтраховыхВзносов;
	ПоказателиОтчета = Неопределено;
	
	// проверка отдельных документов
	
	// РСВ-1
	ЕстьОшибкиРСВ1 = Ложь;
	Если ЗначениеЗаполнено(РСВ1) Тогда
		
		РазделПроверкиРСВ1 = ОбработкаКомментариев.ДобавитьСообщение("Проверка расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
		ФормаРасчетаРСВ1 = ФормаРасчетаРСВ1(РСВ1);
		РСВ1Объект = ФормаРасчетаРСВ1.мСохраненныйДок;
		ЕстьОшибкиРСВ1 = Не ФормаРасчетаРСВ1.ПроверитьПоказатели();
		ОтчетныйПериодРСВ1 = ПроцедурыПерсонифицированногоУчета.НачалоОтчетногоПериодаПерсучета(ФормаРасчетаРСВ1.мДатаКонцаПериодаОтчета);
		
		Если ЕстьОшибкиРСВ1 Тогда
			Для каждого СтрокаОшибки Из ФормаРасчетаРСВ1.ТаблицаСообщений Цикл
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаОшибки.Описание,,,,,РазделПроверкиРСВ1);
			КонецЦикла;
		Иначе	
			ОбработкаКомментариев.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , РазделПроверкиРСВ1);		
		КонецЕсли;
		
		Если РСВ1Объект.Организация = ДокументОбъект.Организация И Не ЕстьОшибкиРСВ1 Тогда
			Данные = РСВ1Объект.ДанныеОтчета.Получить();
			ИмяРаздела = "ПолеТабличногоДокументаТитульный";
			ИмяПоля = "НомРег1";
			Значение = Неопределено;
			Если ТипЗнч(Данные) = Тип("Структура") И Данные.Свойство("ПоказателиОтчета",Значение) Тогда
				ПоказателиОтчета = Значение;
				Если ТипЗнч(ПоказателиОтчета) = Тип("Структура") И ПоказателиОтчета.Свойство(ИмяРаздела,Значение) Тогда
					Если ТипЗнч(Значение) = Тип("Структура") И Значение.Свойство(ИмяПоля,Значение) Тогда
					Иначе 
						ПоказателиОтчета = Неопределено;
					КонецЕсли;	
				Иначе 
					ПоказателиОтчета = Неопределено;
				КонецЕсли;
			Иначе 
				ПоказателиОтчета = Неопределено;
			КонецЕсли;
			Если ПоказателиОтчета = Неопределено Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не удалось разобрать данные указанного в Описи АДВ-6-2 Расчета РСВ-1!", ЕстьОшибкиРСВ1);
			Иначе	
				ТитульныйЛист = ПоказателиОтчета.ПолеТабличногоДокументаТитульный;
				ИННизРСВ1 = "";
				Для Сч = 1 По 12 Цикл
					ИННизРСВ1 = ИННизРСВ1 + ТитульныйЛист["ИНН" + Сч];
				КонецЦикла;
				КППизРСВ1 = "";
				Для Сч = 1 По 9 Цикл
					КППизРСВ1 = КППизРСВ1 + ТитульныйЛист["КПП" + Сч];
				КонецЦикла;
				КППизРСВ1 = СтрЗаменить(КППизРСВ1, "-","");
				РегНомерПФРизРСВ1 = "";
				Для Сч = 1 По 14 Цикл
					РегНомерПФРизРСВ1 = РегНомерПФРизРСВ1 + ТитульныйЛист["НомРег" + Сч];
				КонецЦикла;
				
				Если ОтчетныйПериодРСВ1 < ПроведениеРасчетов.ДатаСниженияТарифовСтраховыхВзносов() Тогда // за 2010 и 2011 годы
					
					НачисленоРСВ1НаСтраховую = 0;
					НачисленоРСВ1НаНакопительную = 0;
					
					ЗадолженностьНаСтраховуюНаНачалоПериода = 0;
					ЗадолженностьНаНакопительнуюНаНачалоПериода = 0;
					ЗадолженностьНаСтраховуюНаКонецПериода = 0;
					ЗадолженностьНаНакопительнуюНаКонецПериода = 0;
					                                                                                                                                                                                                     
					УплаченоРСВ1НаСтраховую = 0;
					УплаченоРСВ1НаНакопительную = 0;
					
					ОбъектОбложенияРСВ1 = 0;
					ОблагаемаяБазаРСВ1 = 0;
					
					Разделы = Данные.ДанныеМногостраничныхРазделов.Раздел12;
					Для каждого ЛистДанных Из Разделы Цикл
						ПоказателиРазделов = ЛистДанных.Данные;
						
						НачисленоРСВ1НаСтраховую = НачисленоРСВ1НаСтраховую + ПоказателиРазделов.П000100011403;
						НачисленоРСВ1НаНакопительную = НачисленоРСВ1НаНакопительную + ПоказателиРазделов.П000100011404;
						
						ЗадолженностьНаСтраховуюНаНачалоПериода = ЗадолженностьНаСтраховуюНаНачалоПериода + ПоказателиРазделов.П000100010003 + (ПоказателиРазделов.П000100011003 - ПоказателиРазделов.П000100011403) - (ПоказателиРазделов.П000100014003 - ПоказателиРазделов.П000100014403);
						ЗадолженностьНаНакопительнуюНаНачалоПериода = ЗадолженностьНаНакопительнуюНаНачалоПериода + ПоказателиРазделов.П000100010004 + (ПоказателиРазделов.П000100011004 - ПоказателиРазделов.П000100011404) - (ПоказателиРазделов.П000100014004 - ПоказателиРазделов.П000100014404);
						ЗадолженностьНаСтраховуюНаКонецПериода = ЗадолженностьНаСтраховуюНаКонецПериода + ПоказателиРазделов.П000100015003;
						ЗадолженностьНаНакопительнуюНаКонецПериода = ЗадолженностьНаНакопительнуюНаКонецПериода + ПоказателиРазделов.П000100015004;
						                                                                                                                                                                                                     
						УплаченоРСВ1НаСтраховую =  + ПоказателиРазделов.П000100014403;
						УплаченоРСВ1НаНакопительную =  + ПоказателиРазделов.П000100014404;
						
						ОбъектОбложенияРСВ1 = ОбъектОбложенияРСВ1 + ПоказателиРазделов.П000200020003 - ПоказателиРазделов.П000200021003 - ПоказателиРазделов.П000200021403 - ПоказателиРазделов.П000200021503;
					    ОблагаемаяБазаРСВ1 = ОблагаемаяБазаРСВ1 + ПоказателиРазделов.П000200022003 + ПоказателиРазделов.П000200022103;
					КонецЦикла; 
					
					УплаченоРСВ1НаСтраховую = УплаченоРСВ1НаСтраховую - ?(ЗадолженностьНаСтраховуюНаКонецПериода < 0, -ЗадолженностьНаСтраховуюНаКонецПериода, 0) + ?(ЗадолженностьНаСтраховуюНаНачалоПериода < 0, -ЗадолженностьНаСтраховуюНаНачалоПериода,0);
					УплаченоРСВ1НаНакопительную = УплаченоРСВ1НаНакопительную - ?(ЗадолженностьНаНакопительнуюНаКонецПериода < 0, -ЗадолженностьНаНакопительнуюНаКонецПериода, 0) + ?(ЗадолженностьНаНакопительнуюНаНачалоПериода < 0, -ЗадолженностьНаНакопительнуюНаНачалоПериода,0);
					
					Раздел3 = ПоказателиОтчета.ПолеТабличногоДокументаРаздел30;
					ОбъектОбложенияИнвалидовРСВ1 = Раздел3.П000300030003 - Раздел3.П000300031003 - Раздел3.П000300031403 - Раздел3.П000300031503;
					ОблагаемаяБазаИнвалидовРСВ1 = Раздел3.П000300032003 + Раздел3.П000300032103;
				Иначе
					НачисленоРСВ1НаСтраховую = 0;
					НачисленоРСВ1НаНакопительную = 0;
					УплаченоРСВ1НаСтраховую = 0;
					УплаченоРСВ1НаНакопительную = 0;
					ОбъектОбложенияРСВ1 = 0;
					ОблагаемаяБазаРСВ1 = 0;
					ОбъектОбложенияИнвалидовРСВ1 = 0;
					ОблагаемаяБазаИнвалидовРСВ1 = 0;
				КонецЕсли;
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
		
	// АДВ-6-2
	ЕстьОшибкиАДВ62 = Ложь;
	ДокументОбъект.ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибкиАДВ62);
	Если Не ЕстьОшибкиАДВ62 Тогда
		ЕстьОшибки = Ложь;
		ДеревоАДВ62 = ПроцедурыПерсонифицированногоУчета.ПреобразоватьВДеревоXML(РегламентированнаяОтчетность.ПолучитьТекстФайла(ДокументОбъект, ЕстьОшибки));
		Если ДеревоАДВ62 <> Неопределено Тогда
			ДеревоАДВ62 = ДеревоАДВ62.Строки.Найти("ФайлПФР","Имя");
		КонецЕсли;
		Если ДеревоАДВ62 <> Неопределено Тогда
			ДеревоАДВ62 = ДеревоАДВ62.Строки.Найти("ПачкаВходящихДокументов","Имя");
		КонецЕсли;
		Если ДеревоАДВ62 <> Неопределено Тогда
			СтрокаОписи = ДеревоАДВ62.Строки.Найти("ВХОДЯЩАЯ_ОПИСЬ_ПО_СТРАХОВЫМ_ВЗНОСАМ", "Имя");
			ДеревоАДВ62 = ДеревоАДВ62.Строки.Найти("ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ", "Имя");
		КонецЕсли;
		Если ДеревоАДВ62 <> Неопределено Тогда // ДеревоАДВ62 теперь содержит только тег ОПИСЬ_СВЕДЕНИЙ_ПЕРЕДАВАЕМЫХ_СТРАХОВАТЕЛЕМ
			ИнформацияОПачкеАДВ62 = ПроцедурыПерсонифицированногоУчета.ДанныеОписиАДВ_6_3(СтрокаОписи);
			СтрокиИсходныхПачек = ДеревоАДВ62.Строки.НайтиСтроки(Новый Структура("Имя","СведенияОбИсходныхСведениях"));
			ВсегоКатегорийАДВ62 = 0;
			НачисленоАДВ62НаСтраховую = 0;
			НачисленоАДВ62НаНакопительную = 0;
			УплаченоАДВ62НаСтраховую = 0;
			УплаченоАДВ62НаНакопительную = 0;
			МассивКатегорий = Новый Массив;
			Для каждого СтрокаДерева Из СтрокиИсходныхПачек Цикл
				Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "ТипСтрокиОсведениях") = "ПО КАТЕГОРИИ" Тогда
					ВсегоКатегорийАДВ62 = ВсегоКатегорийАДВ62 + 1;
					МассивКатегорий.Добавить(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "КодКатегории"));
				КонецЕсли;
				Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "ТипСтрокиОсведениях") = "ПО СТРАХОВАТЕЛЮ" Тогда
					СтрокаНаСтраховую = СтрокаДерева.Строки.Найти("СуммаВзносовНаСтраховую", "Имя");
					СтрокаНаНакопительную = СтрокаДерева.Строки.Найти("СуммаВзносовНаНакопительную", "Имя");
					Если СтрокаНаСтраховую <> Неопределено Тогда
						НачисленоАДВ62НаСтраховую = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаНаСтраховую, "Начислено"));
						УплаченоАДВ62НаСтраховую = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаНаСтраховую, "Уплачено"));
					КонецЕсли;
					Если СтрокаНаНакопительную <> Неопределено Тогда
						НачисленоАДВ62НаНакопительную = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаНаНакопительную, "Начислено"));
						УплаченоАДВ62НаНакопительную = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаНаНакопительную, "Уплачено"));
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			СтрокиКорректирующихПачек = ДеревоАДВ62.Строки.НайтиСтроки(Новый Структура("Имя","СведенияОкорректирующихСведениях"));
			Для каждого СтрокаДерева Из СтрокиКорректирующихПачек Цикл
				Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "ТипСтрокиОсведениях") = "ПО КАТЕГОРИИ" Тогда
					КодКатегории = ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "КодКатегории");
					Если МассивКатегорий.Найти(КодКатегории) = Неопределено Тогда
						ВсегоКатегорийАДВ62 = ВсегоКатегорийАДВ62 + 1;
					КонецЕсли;
				КонецЕсли;
				Если ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаДерева, "ТипСтрокиОсведениях") = "ПО СТРАХОВАТЕЛЮ" Тогда
					СтрокаНаСтраховую = СтрокаДерева.Строки.Найти("СуммаВзносовНаСтраховую", "Имя");
					СтрокаНаНакопительную = СтрокаДерева.Строки.Найти("СуммаВзносовНаНакопительную", "Имя");
					Если СтрокаНаСтраховую <> Неопределено Тогда
						ДоУплачено = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаНаСтраховую, "ДоуплаченоНаСтраховую"));
						УплаченоАДВ62НаСтраховую = УплаченоАДВ62НаСтраховую - ?(ДоУплачено < 0, -ДоУплачено, 0);
					КонецЕсли;
					Если СтрокаНаНакопительную <> Неопределено Тогда
						ДоУплачено = Число(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(СтрокаНаСтраховую, "ДоуплаченоНаНакопительную"));
						УплаченоАДВ62НаНакопительную = УплаченоАДВ62НаНакопительную - ?(ДоУплачено < 0, -ДоУплачено, 0);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		Иначе 
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не удалось разобрать сохраненный файл Описи АДВ-6-2!", ЕстьОшибкиАДВ62);
		КонецЕсли;
	КонецЕсли;
	УдалитьПустойЗаголовок(ДеревоСообщений);
	
	// СЗВ-6-1,2
	ЕстьОшибкиСЗВ6 = Ложь;
	ЕстьОшибкиРасчетаСЗВ6 = Ложь;
	Для каждого ПачкаСЗВ6 Из ДокументОбъект.ПачкиДокументов Цикл
		СоответствиеСсылокИОбъектов[ПачкаСЗВ6.ДокументПачка].ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибкиСЗВ6);
	КонецЦикла;
	Если Не ПодобранПолныйКомплектПринятыхПФРДокументов() Тогда
		ПропущенныеПериоды = "";
		Для Каждого РасчетныйПериод Из МассивПрошлыхПериодов Цикл
			Если ПачкиДокументов.Найти(РасчетныйПериод, "ОтчетныйПериод") = Неопределено Тогда
				ПропущенныеПериоды = ПропущенныеПериоды + ПроцедурыПерсонифицированногоУчета.ОписаниеОтчетногоПериодаДляПоказа(РасчетныйПериод) + ", "
			КонецЕсли;
		КонецЦикла;
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Подобраны не все переданные ранее в ПФР сведения! Отсутствуют сведения за периоды: " + Лев(ПропущенныеПериоды, СтрДлина(ПропущенныеПериоды)-2), ЕстьОшибкиРасчетаСЗВ6);
	КонецЕсли;
	
	// СЗВ-6-3
	ЕстьОшибкиСЗВ63 = Ложь;
	СоответствиеСсылокИОбъектовСЗВ63 = Новый Соответствие;
	СоответствиеСсылокИФайловСЗВ63 = Новый Соответствие;
	ВыборкаСЗВ63 = СЗВ63ЗаГод(ДокументОбъект);
	Если ВыборкаСЗВ63 <> Неопределено Тогда
		Пока ВыборкаСЗВ63.Следующий() Цикл
			
			ОбъектСЗВ63 = ВыборкаСЗВ63.Ссылка.ПолучитьОбъект();
			СоответствиеСсылокИОбъектовСЗВ63.Вставить(ВыборкаСЗВ63.Ссылка, ОбъектСЗВ63);
			
			ЕстьОшибки = Ложь;
			ОбъектСЗВ63.ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки);
			Если ЕстьОшибки Тогда
				ЕстьОшибкиСЗВ63 = Истина;
			Иначе 				
				ДеревоСЗВ63 = ПроцедурыПерсонифицированногоУчета.ПреобразоватьВДеревоXML(РегламентированнаяОтчетность.ПолучитьТекстФайла(ОбъектСЗВ63, ЕстьОшибки));
				Если ДеревоСЗВ63 <> Неопределено Тогда
					ДеревоСЗВ63 = ДеревоСЗВ63.Строки.Найти("ФайлПФР","Имя");
				КонецЕсли;
				Если ДеревоСЗВ63 <> Неопределено Тогда
					ДеревоСЗВ63 = ДеревоСЗВ63.Строки.Найти("ПачкаВходящихДокументов","Имя");
				КонецЕсли;
				Если ДеревоСЗВ63 <> Неопределено Тогда // ДеревоСЗВ63 теперь содержит только тег ПачкаВходящихДокументов
					СоответствиеСсылокИФайловСЗВ63.Вставить(ВыборкаСЗВ63.Ссылка, ДеревоСЗВ63);
				Иначе 
					ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не удалось разобрать сохраненный файл формы СЗВ-6-3 № " + ОбъектСЗВ63.НомерПачки + "!", ЕстьОшибкиСЗВ63);
				КонецЕсли;
			КонецЕсли;
			УдалитьПустойЗаголовок(ДеревоСообщений);
			
		КонецЦикла;
	КонецЕсли;
	
	// проверка полноты комплекта
	
	РазделПроверкиКомплекта = Неопределено;
	
	Если Не ЗначениеЗаполнено(РСВ1) Тогда
		РазделПроверкиКомплекта = ОбработкаКомментариев.ДобавитьСообщение("Проверка полноты комплекта представляемых документов", Перечисления.ВидыСообщений.Информация);
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан подаваемый вместе с Описью АДВ-6-2 Расчет РСВ-1!", ЕстьОшибкиРСВ1,,,,РазделПроверкиКомплекта);
	КонецЕсли;
	
	Если ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериодАДВ62) = КонецГода(ОтчетныйПериодАДВ62) И ВыборкаСЗВ63.Количество() = 0 Тогда
		Если РазделПроверкиКомплекта = Неопределено Тогда
			РазделПроверкиКомплекта = ОбработкаКомментариев.ДобавитьСообщение("Проверка полноты комплекта представляемых документов", Перечисления.ВидыСообщений.Информация);
		КонецЕсли;
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не подготовлены подаваемые вместе с Описью АДВ-6-2 сведения СЗВ-6-3!", ЕстьОшибкиСЗВ63,,,,РазделПроверкиКомплекта);
	КонецЕсли;
	
	// перекрестная проверка документов
	
	ЕстьОшибкиРСВ1_СЗВ63 = Ложь;
	ЕстьОшибкиАДВ62_СЗВ63 = Ложь;
	ЕстьОшибкиАДВ62_РСВ1 = Ложь;
	
	// дополнительные проверки для отчетного периода "Календарный год"
	Если Не ЕстьОшибкиСЗВ63 И ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериодАДВ62) = КонецГода(ОтчетныйПериодАДВ62) Тогда 
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		ПроцедурыПерсонифицированногоУчета.ПоместитьВМенеджерСоответствиеТарифаКатегории(Запрос.МенеджерВременныхТаблиц);
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка
		|ПОМЕСТИТЬ ВТФормыСЗВ_6_12
		|ИЗ
		|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов КАК ПередачаСЗВ4вПФРПачкиДокументов
		|ГДЕ
		|	ПередачаСЗВ4вПФРПачкиДокументов.Ссылка = &Ссылка
		|	И ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияПринятыеПФР.КомплектДокументов КАК Опись
		|ПОМЕСТИТЬ ВТПредыдущиеОписиАДВ62
		|ИЗ
		|	РегистрСведений.СведенияПринятыеПФР КАК СведенияПринятыеПФР
		|ГДЕ
		|	СведенияПринятыеПФР.Организация = &Организация
		|	И ГОД(СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР) = &ОтчетныйГод
		|	И СведенияПринятыеПФР.ОтчетныйПериодПерсучетаПФР <> &ОтчетныйПериод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка
		|ПОМЕСТИТЬ ВТПредыдущиеФормыСЗВ_6_12
		|ИЗ
		|	Документ.ПередачаСЗВ4вПФР.ПачкиДокументов КАК ПередачаСЗВ4вПФРПачкиДокументов
		|ГДЕ
		|	ПередачаСЗВ4вПФРПачкиДокументов.Ссылка В
		|			(ВЫБРАТЬ
		|				ПредыдущиеОписиАДВ62.Опись
		|			ИЗ
		|				ВТПредыдущиеОписиАДВ62 КАК ПредыдущиеОписиАДВ62)
		|	И ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка.ТипСведенийСЗВ <> ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ)
		|	И (ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
		|			ИЛИ ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)
		|				И ГОД(ПередачаСЗВ4вПФРПачкиДокументов.ДокументПачка.КорректируемыйПериод) = &ОтчетныйГод)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(СоответствиеТарифаКатегории.ВидТарифаСтраховыхВзносов) КАК ВидТарифаСтраховыхВзносов,
		|	СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц
		|ПОМЕСТИТЬ ВТТарифПоКатегории
		|ИЗ
		|	ВТСоответствиеТарифаКатегории КАК СоответствиеТарифаКатегории
		|ГДЕ
		|	&ОтчетныйГод МЕЖДУ СоответствиеТарифаКатегории.ГодС И СоответствиеТарифаКатегории.ГодПо
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеТарифаКатегории.КатегорияЗастрахованныхЛиц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Застрахованные.Ссылка,
		|	Застрахованные.ФизЛицо,
		|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц,
		|	Застрахованные.СтраховойНомерПФР,
		|	Застрахованные.Фамилия,
		|	Застрахованные.Имя,
		|	Застрахованные.Отчество
		|ПОМЕСТИТЬ ВТФормыСЗВ_6_3
		|ИЗ
		|	Документ.СведенияОНачисленномЗаработкеСЗВ63.СотрудникиОрганизации КАК Застрахованные
		|ГДЕ
		|	Застрахованные.Ссылка.ОписьАДВ62 = &Ссылка
		|	И Застрахованные.Ссылка.ОтчетныйПериод = &ОтчетныйГод
		|	И Застрахованные.Ссылка.Организация = &Организация
		|	И Застрахованные.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Застрахованные.Ссылка,
		|	Застрахованные.НомерСтроки,
		|	Застрахованные.ФизЛицо,
		|	Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц,
		|	Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная КАК НачисленоВзносов,
		|	Застрахованные.СтраховойНомерПФР,
		|	Застрахованные.Фамилия,
		|	Застрахованные.Имя,
		|	Застрахованные.Отчество
		|ПОМЕСТИТЬ ВТЗастрахованныеСЗВ_6_12
		|ИЗ
		|	Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК Застрахованные
		|ГДЕ
		|	Застрахованные.Ссылка В
		|			(ВЫБРАТЬ
		|				ФормыСЗВ_6_12.ДокументПачка
		|			ИЗ
		|				ВТФормыСЗВ_6_12 КАК ФормыСЗВ_6_12)
		|	И (Застрахованные.НачисленоСтраховая <> 0
		|			ИЛИ Застрахованные.НачисленоНакопительная <> 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СУММА(ДанныеДокументов.НачисленоВзносов) КАК НачисленоВзносов,
		|	ДанныеДокументов.ФизЛицо,
		|	ДанныеДокументов.КатегорияЗастрахованныхЛиц,
		|	ДанныеДокументов.СтраховойНомерПФР,
		|	ДанныеДокументов.Фамилия,
		|	ДанныеДокументов.Имя,
		|	ДанныеДокументов.Отчество
		|ПОМЕСТИТЬ ВТЗастрахованныеСЗВ_6_12заГод
		|ИЗ
		|	(ВЫБРАТЬ
		|		Застрахованные.НачисленоСтраховая + Застрахованные.НачисленоНакопительная КАК НачисленоВзносов,
		|		Застрахованные.ФизЛицо КАК ФизЛицо,
		|		Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
		|		Застрахованные.СтраховойНомерПФР КАК СтраховойНомерПФР,
		|		Застрахованные.Фамилия КАК Фамилия,
		|		Застрахованные.Имя КАК Имя,
		|		Застрахованные.Отчество КАК Отчество
		|	ИЗ
		|		Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК Застрахованные
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОТрудовомСтажеИЗаработкеСЗВ4.РаботникиОрганизации КАК КорректирующиеСведения
		|			ПО Застрахованные.ФизЛицо = КорректирующиеСведения.ФизЛицо
		|				И Застрахованные.Ссылка.КатегорияЗастрахованныхЛиц = КорректирующиеСведения.Ссылка.КатегорияЗастрахованныхЛиц
		|				И (КорректирующиеСведения.Ссылка В
		|					(ВЫБРАТЬ
		|						ФормыСЗВ_6_12.ДокументПачка
		|					ИЗ
		|						ВТПредыдущиеФормыСЗВ_6_12 КАК ФормыСЗВ_6_12
		|					ГДЕ
		|						ФормыСЗВ_6_12.ДокументПачка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.КОРРЕКТИРУЮЩАЯ)))
		|				И (ВЫБОР
		|					КОГДА Застрахованные.Ссылка.ТипСведенийСЗВ = ЗНАЧЕНИЕ(Перечисление.ТипыСведенийСЗВ.ИСХОДНАЯ)
		|						ТОГДА Застрахованные.Ссылка.ОтчетныйПериод
		|					ИНАЧЕ Застрахованные.Ссылка.КорректируемыйПериод
		|				КОНЕЦ = КорректирующиеСведения.Ссылка.КорректируемыйПериод)
		|	ГДЕ
		|		Застрахованные.Ссылка В
		|				(ВЫБРАТЬ
		|					ФормыСЗВ_6_12.ДокументПачка
		|				ИЗ
		|					ВТПредыдущиеФормыСЗВ_6_12 КАК ФормыСЗВ_6_12)
		|		И (Застрахованные.НачисленоСтраховая <> 0
		|				ИЛИ Застрахованные.НачисленоНакопительная <> 0)
		|		И КорректирующиеСведения.ФизЛицо ЕСТЬ NULL 
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ЗастрахованныеПоследнегоКвартала.НачисленоВзносов,
		|		ЗастрахованныеПоследнегоКвартала.ФизЛицо,
		|		ЗастрахованныеПоследнегоКвартала.КатегорияЗастрахованныхЛиц,
		|		ЗастрахованныеПоследнегоКвартала.СтраховойНомерПФР,
		|		ЗастрахованныеПоследнегоКвартала.Фамилия,
		|		ЗастрахованныеПоследнегоКвартала.Имя,
		|		ЗастрахованныеПоследнегоКвартала.Отчество
		|	ИЗ
		|		ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеПоследнегоКвартала) КАК ДанныеДокументов
		|
		|СГРУППИРОВАТЬ ПО
		|	ДанныеДокументов.ФизЛицо,
		|	ДанныеДокументов.КатегорияЗастрахованныхЛиц,
		|	ДанныеДокументов.СтраховойНомерПФР,
		|	ДанныеДокументов.Фамилия,
		|	ДанныеДокументов.Имя,
		|	ДанныеДокументов.Отчество
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Застрахованные.ФизЛицо,
		|	Застрахованные.КатегорияЗастрахованныхЛиц,
		|	СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.ОблагаетсяВзносами, 0)) * СтавкиТарифа.ПФР / 100 КАК ВзносовКНачислению
		|ПОМЕСТИТЬ ВТВзносыПоЗаработкуСЗВ_6_3
		|ИЗ
		|	ВТФормыСЗВ_6_3 КАК Застрахованные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифПоКатегории КАК ТарифПоКатегории
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифСтраховыхВзносов.СрезПоследних(&КонецГода, ) КАК СтавкиТарифа
		|			ПО ТарифПоКатегории.ВидТарифаСтраховыхВзносов = СтавкиТарифа.ВидТарифа
		|		ПО Застрахованные.КатегорияЗастрахованныхЛиц = ТарифПоКатегории.КатегорияЗастрахованныхЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОНачисленномЗаработкеСЗВ63.СведенияОЗаработке КАК ЗаработокПоМесяцам
		|		ПО Застрахованные.Ссылка = ЗаработокПоМесяцам.Ссылка
		|			И Застрахованные.ФизЛицо = ЗаработокПоМесяцам.ФизЛицо
		|			И (ЗаработокПоМесяцам.Месяц В (10, 11, 12))
		|
		|СГРУППИРОВАТЬ ПО
		|	Застрахованные.ФизЛицо,
		|	Застрахованные.КатегорияЗастрахованныхЛиц,
		|	СтавкиТарифа.ПФР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Застрахованные.ФизЛицо,
		|	Застрахованные.КатегорияЗастрахованныхЛиц,
		|	СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.ОблагаетсяВзносами, 0)) * СтавкиТарифа.ПФР / 100 КАК ВзносовКНачислению
		|ПОМЕСТИТЬ ВТВзносыПоЗаработкуСЗВ_6_3заГод
		|ИЗ
		|	ВТФормыСЗВ_6_3 КАК Застрахованные
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТарифПоКатегории КАК ТарифПоКатегории
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ТарифСтраховыхВзносов.СрезПоследних(&КонецГода, ) КАК СтавкиТарифа
		|			ПО ТарифПоКатегории.ВидТарифаСтраховыхВзносов = СтавкиТарифа.ВидТарифа
		|		ПО Застрахованные.КатегорияЗастрахованныхЛиц = ТарифПоКатегории.КатегорияЗастрахованныхЛиц
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОНачисленномЗаработкеСЗВ63.СведенияОЗаработке КАК ЗаработокПоМесяцам
		|		ПО Застрахованные.Ссылка = ЗаработокПоМесяцам.Ссылка
		|			И Застрахованные.ФизЛицо = ЗаработокПоМесяцам.ФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	Застрахованные.ФизЛицо,
		|	Застрахованные.КатегорияЗастрахованныхЛиц,
		|	СтавкиТарифа.ПФР
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗастрахованныеСЗВ_6_12.ФизЛицо,
		|	ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц КАК КатегорияЗастрахованныхЛиц,
		|	ВЫБОР
		|		КОГДА ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению < 0
		|			ТОГДА Заработок.ВзносовКНачислению - ЗастрахованныеСЗВ_6_12.НачисленоВзносов
		|		ИНАЧЕ ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению
		|	КОНЕЦ КАК РасхождениеВоВзносах,
		|	Заработок.ВзносовКНачислению,
		|	ЗастрахованныеСЗВ_6_12.НачисленоВзносов,
		|	ЗастрахованныеСЗВ_6_12.Фамилия + "" "" + ЗастрахованныеСЗВ_6_12.Имя + "" "" + ЗастрахованныеСЗВ_6_12.Отчество КАК ФИОЗастрахованного
		|ИЗ
		|	ВТЗастрахованныеСЗВ_6_12заГод КАК ЗастрахованныеСЗВ_6_12
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВзносыПоЗаработкуСЗВ_6_3заГод КАК Заработок
		|		ПО ЗастрахованныеСЗВ_6_12.ФизЛицо = Заработок.ФизЛицо
		|			И ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц = Заработок.КатегорияЗастрахованныхЛиц
		|ГДЕ
		|	Заработок.ФизЛицо ЕСТЬ НЕ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФИОЗастрахованного,
		|	КатегорияЗастрахованныхЛиц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА Застрахованные.КатегорияЗастрахованныхЛиц = ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицПФР.ООИ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЭтоДоходыИнвалидов,
		|	СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.ОблагаетсяВзносами, 0)) КАК ОблагаемаяБаза,
		|	СУММА(ЕСТЬNULL(ЗаработокПоМесяцам.Заработок, 0)) КАК Заработок,
		|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Застрахованные.Ссылка) КАК КоличествоПачек
		|ИЗ
		|	ВТФормыСЗВ_6_3 КАК Застрахованные
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СведенияОНачисленномЗаработкеСЗВ63.СведенияОЗаработке КАК ЗаработокПоМесяцам
		|		ПО Застрахованные.Ссылка = ЗаработокПоМесяцам.Ссылка
		|			И Застрахованные.ФизЛицо = ЗаработокПоМесяцам.ФизЛицо
		|
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА Застрахованные.КатегорияЗастрахованныхЛиц = ЗНАЧЕНИЕ(Перечисление.КатегорииЗастрахованныхЛицПФР.ООИ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗастрахованныеСЗВ_6_12.ФизЛицо,
		|	ЗастрахованныеСЗВ_6_12.Ссылка,
		|	ЗастрахованныеСЗВ_6_12.Ссылка.НомерПачки КАК НомерПачкиСЗВ6_12,
		|	ЗастрахованныеСЗВ_6_12.НомерСтроки КАК НомерСтрокиСЗВ6_12,
		|	ВЫБОР
		|		КОГДА ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению < 0
		|			ТОГДА Заработок.ВзносовКНачислению - ЗастрахованныеСЗВ_6_12.НачисленоВзносов
		|		ИНАЧЕ ЗастрахованныеСЗВ_6_12.НачисленоВзносов - Заработок.ВзносовКНачислению
		|	КОНЕЦ КАК РасхождениеВоВзносах,
		|	Заработок.ВзносовКНачислению,
		|	ЗастрахованныеСЗВ_6_12.НачисленоВзносов
		|ИЗ
		|	ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеСЗВ_6_12
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВзносыПоЗаработкуСЗВ_6_3 КАК Заработок
		|		ПО ЗастрахованныеСЗВ_6_12.ФизЛицо = Заработок.ФизЛицо
		|			И ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц = Заработок.КатегорияЗастрахованныхЛиц
		|ГДЕ
		|	Заработок.ФизЛицо ЕСТЬ НЕ NULL 
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПачкиСЗВ6_12,
		|	НомерСтрокиСЗВ6_12
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗастрахованныеСЗВ_6_12.ФизЛицо,
		|	ЗастрахованныеСЗВ_6_12.Ссылка,
		|	ЗастрахованныеСЗВ_6_12.Ссылка.НомерПачки КАК НомерПачкиСЗВ6_12,
		|	ЗастрахованныеСЗВ_6_12.НомерСтроки КАК НомерСтрокиСЗВ6_12,
		|	ФормыСЗВ_6_3.Ссылка.НомерПачки КАК НомерПачкиСЗВ_6_3,
		|	ВЫБОР
		|		КОГДА ФормыСЗВ_6_3.Ссылка ЕСТЬ NULL 
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОтсуствуетФормаСЗВ63,
		|	ВЫБОР
		|		КОГДА ЗастрахованныеСЗВ_6_12.СтраховойНомерПФР <> ФормыСЗВ_6_3.СтраховойНомерПФР
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеСовпадаетСНИЛС,
		|	ВЫБОР
		|		КОГДА ЗастрахованныеСЗВ_6_12.Имя <> ФормыСЗВ_6_3.Имя
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеСовпадаетИмя,
		|	ВЫБОР
		|		КОГДА ЗастрахованныеСЗВ_6_12.Отчество <> ФормыСЗВ_6_3.Отчество
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеСовпадаетОтчество,
		|	ВЫБОР
		|		КОГДА ЗастрахованныеСЗВ_6_12.Фамилия <> ФормыСЗВ_6_3.Фамилия
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НеСовпадаетФамилия,
		|	ЗастрахованныеСЗВ_6_12.Фамилия + "" "" + ЗастрахованныеСЗВ_6_12.Имя + "" "" + ЗастрахованныеСЗВ_6_12.Отчество КАК ФИОЗастрахованного
		|ИЗ
		|	ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеСЗВ_6_12
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФормыСЗВ_6_3 КАК ФормыСЗВ_6_3
		|		ПО ЗастрахованныеСЗВ_6_12.ФизЛицо = ФормыСЗВ_6_3.ФизЛицо
		|			И ЗастрахованныеСЗВ_6_12.КатегорияЗастрахованныхЛиц = ФормыСЗВ_6_3.КатегорияЗастрахованныхЛиц
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерПачкиСЗВ6_12,
		|	НомерСтрокиСЗВ6_12,
		|	НомерПачкиСЗВ_6_3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЕСТЬNULL(ЗастрахованныеСЗВ_6_12.Количество, 0) КАК КоличествоЗастрахованныхСЗВ_6_12,
		|	ЕСТЬNULL(ФормыСЗВ_6_3.Количество, 0) КАК КоличествоФормСЗВ_6_3
		|ИЗ
		|	(ВЫБРАТЬ
		|		1 КАК Поле) КАК СтрокаЗапроса
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(1) КАК Количество
		|		ИЗ
		|			ВТФормыСЗВ_6_3 КАК ФормыСЗВ_6_3) КАК ФормыСЗВ_6_3
		|		ПО (ИСТИНА)
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			СУММА(1) КАК Количество
		|		ИЗ
		|			ВТЗастрахованныеСЗВ_6_12 КАК ЗастрахованныеСЗВ_6_12) КАК ЗастрахованныеСЗВ_6_12
		|		ПО (ИСТИНА)";
		Запрос.УстановитьПараметр("Ссылка", ПачкаАДВ62);
		Запрос.УстановитьПараметр("Организация", ДокументОбъект.Организация);
		Запрос.УстановитьПараметр("ОтчетныйГод", Год(ОтчетныйПериодАДВ62));
		Запрос.УстановитьПараметр("ОтчетныйПериод", ОтчетныйПериодАДВ62);
		Запрос.УстановитьПараметр("КонецГода", КонецГода(ОтчетныйПериодАДВ62));
		Результаты = Запрос.ВыполнитьПакет();
		ВсегоРезультатов = Результаты.Количество();
		
		// Сверка отдельных реквизитов документов персонифицированного учета «Сведений о сумме выплат и иных вознаграждений, начисляемых плательщиками страховых взносов - страхователями в пользу физического лица» (формы СЗВ-6-3, АДВ-6-4) и Расчета по начисленным и уплаченным страховым взносам (форма РСВ-1)
		РазделСверкиРСВ1иСЗВ63 = Неопределено;
		Если Не ЕстьОшибкиРСВ1 И ОтчетныйПериодРСВ1 = ОтчетныйПериодАДВ62 И РСВ1Объект.Организация = ДокументОбъект.Организация И ОтчетныйПериодРСВ1 < ПроведениеРасчетов.ДатаСниженияТарифовСтраховыхВзносов() Тогда
			
			ОбъектОбложенияСЗВ63 = 0;
			ОблагаемаяБазаСЗВ63 = 0;
			ОбъектОбложенияИнвалидовСЗВ63 = 0;
			ОблагаемаяБазаИнвалидовСЗВ63 = 0;
			КоличествоПачекСЗВ63 = 0;
			КоличествоПачекИнвалидовСЗВ63 = 0;
			ВыборкаСверкиДоходов = Результаты[ВсегоРезультатов - 4].Выбрать();
			Пока ВыборкаСверкиДоходов.Следующий() Цикл
				Если ВыборкаСверкиДоходов.ЭтоДоходыИнвалидов Тогда
					КоличествоПачекИнвалидовСЗВ63 = ВыборкаСверкиДоходов.КоличествоПачек;
					ОбъектОбложенияИнвалидовСЗВ63 = ВыборкаСверкиДоходов.Заработок;
					ОблагаемаяБазаИнвалидовСЗВ63 = ВыборкаСверкиДоходов.ОблагаемаяБаза;
				Иначе
					КоличествоПачекСЗВ63 = ВыборкаСверкиДоходов.КоличествоПачек;
					ОбъектОбложенияСЗВ63 = ВыборкаСверкиДоходов.Заработок;
					ОблагаемаяБазаСЗВ63 = ВыборкаСверкиДоходов.ОблагаемаяБаза;
				КонецЕсли;
			КонецЦикла;
			
			Если ОбъектОбложенияСЗВ63 + 0.5 * КоличествоПачекСЗВ63 < ОбъектОбложенияРСВ1 Тогда
				РазделСверкиРСВ1иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-3 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Общая сумма заработка, указанная в формах СЗВ-6-3" + ?(ОбъектОбложенияИнвалидовСЗВ63 =0, "", " (за исключением форм по категории ООИ)") + ", меньше облагаемых взносами в ПФР сумм, указанных в разделе 2 Расчета РСВ-1!", ЕстьОшибкиРСВ1_СЗВ63,,,,РазделСверкиРСВ1иСЗВ63);
			КонецЕсли;
			Разность = Макс(ОблагаемаяБазаСЗВ63 - ОблагаемаяБазаРСВ1, ОблагаемаяБазаРСВ1 - ОблагаемаяБазаСЗВ63);
			ДопустимоеРасхождение = Окр(КоличествоПачекСЗВ63/2);
			Если Разность > ДопустимоеРасхождение Тогда
				Если РазделСверкиРСВ1иСЗВ63 = Неопределено Тогда
					РазделСверкиРСВ1иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-3 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
				КонецЕсли;
				ОбработкаКомментариев.ДобавитьСообщение("За отчетный период сформировано " + КоличествоПачекСЗВ63 + " " + ОбщегоНазначения.ФормаМножественногоЧисла("пачка", "пачки", "пачек", КоличествоПачекСЗВ63) + " форм СЗВ-6-3. Допустимое различие показателей Расчета РСВ-1 и форм СЗВ-6-3 составляет " + ДопустимоеРасхождение + " руб.", Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иСЗВ63);
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, указанная в формах СЗВ-6-3" + ?(ОбъектОбложенияИнвалидовСЗВ63 =0, "", " (за исключением форм по категории ООИ)") + ", и сумма показателей колонки ""Всего с начала расчетного периода"" по строкам 220 и 221 раздела 2 Расчета РСВ-1 различаются более чем на " + ДопустимоеРасхождение + " руб.!", ЕстьОшибкиРСВ1_СЗВ63,,,,РазделСверкиРСВ1иСЗВ63);
			КонецЕсли;
			Если ОбъектОбложенияИнвалидовСЗВ63 + 0.5 * КоличествоПачекИнвалидовСЗВ63 < ОбъектОбложенияИнвалидовРСВ1 Тогда
				Если РазделСверкиРСВ1иСЗВ63 = Неопределено Тогда
					РазделСверкиРСВ1иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-3 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Общая сумма заработка, указанная в формах СЗВ-6-3 по категории ООИ, меньше облагаемых взносами в ПФР сумм, указанных в разделе 3 Расчета РСВ-1!", ЕстьОшибкиРСВ1_СЗВ63,,,,РазделСверкиРСВ1иСЗВ63);
			КонецЕсли;
			Разность = Макс(ОблагаемаяБазаИнвалидовСЗВ63 - ОблагаемаяБазаИнвалидовРСВ1, ОблагаемаяБазаИнвалидовРСВ1 - ОблагаемаяБазаИнвалидовСЗВ63);
			Если Разность > 1 Тогда
				Если РазделСверкиРСВ1иСЗВ63 = Неопределено Тогда
					РазделСверкиРСВ1иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-3 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Общая сумма облагаемой базы, указанная в формах СЗВ-6-3 по категории ООИ, и сумма показателей колонки ""Всего с начала расчетного периода"" по строкам 320 и 321 раздела 3 Расчета РСВ-1 различаются более чем на 1 руб.!", ЕстьОшибкиРСВ1_СЗВ63,,,,РазделСверкиРСВ1иСЗВ63);
			КонецЕсли;
			
		КонецЕсли;
		
		// Сверка «Сведений о сумме выплат и иных вознаграждений, начисляемых плательщиками страховых взносов - страхователями в пользу физического лица» (по форме СЗВ-6-3, АДВ-6-4) со сведениями персонифицированного учета о стаже и начисленным и уплаченным страховым взносам (по форме АДВ-6-2, СЗВ-6-2, СЗВ-6-1)
		РазделСверкиАДВ62иСЗВ63 = Неопределено;
		Если Не ЕстьОшибкиАДВ62 И Не ЕстьОшибкиСЗВ6 Тогда
			
			Для каждого Элемент Из СоответствиеСсылокИОбъектовСЗВ63 Цикл
				ОбъектСЗВ63 = Элемент.Значение;
				
				Если ОбъектСЗВ63.Организация <> ДокументОбъект.Организация Тогда
					Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
						РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					ОбщегоНазначения.ВывестиИнформациюОбОшибке("Пачка СЗВ-6-3 № " + ОбъектСЗВ63.НомерПачки + " оформлена на " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("другую организацию!"), ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
				Иначе
					
					ДеревоСЗВ63 = СоответствиеСсылокИФайловСЗВ63[Элемент.Ключ];
					ДеревоСЗВ63 = ДеревоСЗВ63.Строки.Найти("ВХОДЯЩАЯ_ОПИСЬ_ПО_СУММАМ_ВЫПЛАТ", "Имя");
					
					Если СокрЛП(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(ДеревоСЗВ63, "ИНН")) <> СокрЛП(ИнформацияОПачкеАДВ62.ИНН) Тогда
						Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
							РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
						КонецЕсли;
						ОбщегоНазначения.ВывестиИнформациюОбОшибке("В Описи АДВ-6-2 и пачке СЗВ-6-3 № " + ОбъектСЗВ63.НомерПачки + " не совпадает ИНН!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиАДВ62иСЗВ63);
					КонецЕсли;
					Если СокрЛП(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(ДеревоСЗВ63, "КПП")) <> СокрЛП(ИнформацияОПачкеАДВ62.КПП) Тогда
						Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
							РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
						КонецЕсли;
						ОбщегоНазначения.ВывестиИнформациюОбОшибке("В Описи АДВ-6-2 и пачке СЗВ-6-3 № " + ОбъектСЗВ63.НомерПачки + " не совпадает КПП!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиАДВ62иСЗВ63);
					КонецЕсли;
					Если СокрЛП(ПроцедурыПерсонифицированногоУчета.ИзвлечьДанное(ДеревоСЗВ63, "РегистрационныйНомер")) <> СокрЛП(ИнформацияОПачкеАДВ62.РегНомерПФР) Тогда
						Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
							РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
						КонецЕсли;
						ОбщегоНазначения.ВывестиИнформациюОбОшибке("В Описи АДВ-6-2 и пачке СЗВ-6-3 № " + ОбъектСЗВ63.НомерПачки + " не совпадает регистрационный номер страхователя в ПФР!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиАДВ62иСЗВ63);
					КонецЕсли;
					
				КонецЕсли;
				Если ОбъектСЗВ63.ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ИСХОДНАЯ И ОбъектСЗВ63.ОтчетныйПериод <> Год(ОтчетныйПериодАДВ62) Тогда
					Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
						РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					ОбщегоНазначения.ВывестиИнформациюОбОшибке("Исходная пачка СЗВ-6-3 № " + ОбъектСЗВ63.НомерПачки + " содержит данные за другой отчетный период!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
				КонецЕсли;
			КонецЦикла;
			
			ВыборкаСверкиКоличества = Результаты[ВсегоРезультатов - 1].Выбрать();
			ВыборкаСверкиКоличества.Следующий();
			Если ВыборкаСверкиКоличества.КоличествоФормСЗВ_6_3 < ВыборкаСверкиКоличества.КоличествоЗастрахованныхСЗВ_6_12 Тогда
				Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
					РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Количество исходных форм СЗВ-6-3 меньше количества исходных форм СЗВ-6-1(2), содержащих ненулевые начисленные взносы!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
			КонецЕсли;
			
			КоличествоПредыдущихПериодовГода = 0;
			ПроверяемыйГод = Год(ОтчетныйПериодАДВ62);
			Для каждого ПрошлыйПериод Из МассивПрошлыхПериодов Цикл
				Если Год(ПрошлыйПериод) = ПроверяемыйГод И ПрошлыйПериод < ОтчетныйПериодАДВ62 Тогда
					КоличествоПредыдущихПериодовГода = КоличествоПредыдущихПериодовГода + 1;
				КонецЕсли;
			КонецЦикла;
			КоличествоПринятыхКомплектовГода = 0;
			Для каждого СтрокаТЧ Из ПачкиДокументов Цикл
				Если Год(СтрокаТЧ.ОтчетныйПериод) = ПроверяемыйГод И СтрокаТЧ.ОтчетныйПериод < ОтчетныйПериодАДВ62 Тогда
					КоличествоПринятыхКомплектовГода = КоличествоПринятыхКомплектовГода + 1;
				КонецЕсли;
			КонецЦикла; 
			
			ВыборкаСверкиЗастрахованных = Результаты[ВсегоРезультатов - 2].Выбрать();
			ВыборкаСверкиВзносов = Результаты[ВсегоРезультатов - 3].Выбрать();
			СтруктураПоиска = Новый Структура("Ссылка, НомерСтрокиСЗВ6_12");
			Пока ВыборкаСверкиЗастрахованных.Следующий() Цикл
				НачалоСообщения = "Для застрахованного " + СокрЛП(ВыборкаСверкиЗастрахованных.ФИОЗастрахованного) + ", указанного в строке " + ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ6_12 + " пачки СЗВ-6-1(2) № " + ВыборкаСверкиЗастрахованных.НомерПачкиСЗВ6_12 + ": ";
				Если ВыборкаСверкиЗастрахованных.ОтсуствуетФормаСЗВ63 Тогда
					Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
						РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "отсутствуют формы СЗВ-6-3!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
				Иначе 
					НачалоСообщенияНесовпадения = НачалоСообщения + "в пачке СЗВ-6-3 № " + ВыборкаСверкиЗастрахованных.НомерПачкиСЗВ_6_3 + " не совпадает ";
					Если ВыборкаСверкиЗастрахованных.НеСовпадаетСНИЛС Тогда
						Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
							РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
						КонецЕсли;
						ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщенияНесовпадения + "СНИЛС!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
					КонецЕсли;
					Если ВыборкаСверкиЗастрахованных.НеСовпадаетФамилия Тогда
						Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
							РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
						КонецЕсли;
						ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщенияНесовпадения + "фамилия!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
					КонецЕсли;
					Если ВыборкаСверкиЗастрахованных.НеСовпадаетИмя Тогда
						Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
							РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
						КонецЕсли;
						ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщенияНесовпадения + "имя!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
					КонецЕсли;
					Если ВыборкаСверкиЗастрахованных.НеСовпадаетОтчество Тогда
						Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
							РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
						КонецЕсли;
						ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщенияНесовпадения + "отчество!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
					КонецЕсли;
					
					Если СтруктураПоиска.Ссылка <> ВыборкаСверкиЗастрахованных.Ссылка И СтруктураПоиска.НомерСтрокиСЗВ6_12 <> ВыборкаСверкиЗастрахованных.НомерСтрокиСЗВ6_12 Тогда
						ЗаполнитьЗначенияСвойств(СтруктураПоиска, ВыборкаСверкиЗастрахованных);
						// сверка начисленных взносов за текущий отчетный период
						ВыборкаСверкиВзносов.Сбросить();
						Если ВыборкаСверкиВзносов.НайтиСледующий(СтруктураПоиска) Тогда
							Если ВыборкаСверкиВзносов.РасхождениеВоВзносах > 0.03 Тогда
								Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
									РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
								КонецЕсли;
								ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + " сумма начисленных взносов, указанная в форме СЗВ-6-1,2 (" + Формат(ВыборкаСверкиВзносов.НачисленоВзносов,"ЧДЦ=2; ЧГ=0") + "), отличается от суммы взносов, исчисленной по всем формам СЗВ-6-3 (" + Формат(ВыборкаСверкиВзносов.ВзносовКНачислению,"ЧДЦ=2; ЧГ=0") + "), более чем на 3 копейки!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
			// сверка начисленных взносов за год в целом
			ВыборкаСверкиВзносовЗаГод = Результаты[ВсегоРезультатов - 5].Выбрать();
			Пока ВыборкаСверкиВзносовЗаГод.Следующий() Цикл
				Если ВыборкаСверкиВзносовЗаГод.РасхождениеВоВзносах > 0.03 Тогда
					Если РазделСверкиАДВ62иСЗВ63 = Неопределено Тогда
						РазделСверкиАДВ62иСЗВ63 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных форм СЗВ-6-1(2) и сведений о заработке СЗВ-6-3", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					ОбщегоНазначения.ВывестиИнформациюОбОшибке("Для застрахованного " + СокрЛП(ВыборкаСверкиВзносовЗаГод.ФИОЗастрахованного) + ": сумма начисленных взносов, указанная в формах СЗВ-6-1,2 текущего года по категории ЗЛ " + ВыборкаСверкиВзносовЗаГод.КатегорияЗастрахованныхЛиц + " (" + Формат(ВыборкаСверкиВзносовЗаГод.НачисленоВзносов,"ЧДЦ=2; ЧГ=0") + "), отличается от суммы взносов, исчисленной по всем формам СЗВ-6-3 этой же категории (" + Формат(ВыборкаСверкиВзносовЗаГод.ВзносовКНачислению,"ЧДЦ=2; ЧГ=0") + "), более чем на 3 копейки!", ЕстьОшибкиАДВ62_СЗВ63,,,,РазделСверкиАДВ62иСЗВ63);
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Сверка отдельных реквизитов Описи сведений персонифицированного учета (формы АДВ-6-2) и Расчета по начисленным и уплаченным страховым взносам (форма РСВ-1)
	Если Не ЕстьОшибкиСЗВ6 И Не ЕстьОшибкиАДВ62 И Не ЕстьОшибкиРСВ1 Тогда
		
		РазделСверкиРСВ1иАДВ62 = Неопределено;
		
		Если РСВ1Объект.Организация <> ДокументОбъект.Организация Тогда
			РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Расчет РСВ-1 оформлен на " + ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("другую организацию!"), ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
		Иначе
			
			ИННизАДВ62 = ?(СтрДлина(СокрЛП(ИнформацияОПачкеАДВ62.ИНН)) = 10,"00","") + СокрЛП(ИнформацияОПачкеАДВ62.ИНН);
			Если СокрЛП(ИННизРСВ1) <> ИННизАДВ62 Тогда
				Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
					РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("В Описи АДВ-6-2 и Расчете РСВ-1 не совпадает ИНН!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			КонецЕсли;
			Если СокрЛП(КППизРСВ1) <> СокрЛП(ИнформацияОПачкеАДВ62.КПП) Тогда
				Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
					РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("В Описи АДВ-6-2 и Расчете РСВ-1 не совпадает КПП!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			КонецЕсли;
			Если СокрЛП(РегНомерПФРизРСВ1) <> СокрЛП(ИнформацияОПачкеАДВ62.РегНомерПФР) Тогда
				Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
					РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("В Описи АДВ-6-2 и Расчете РСВ-1 не совпадает регистрационный номер страхователя в ПФР!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ОтчетныйПериодРСВ1 <> ОтчетныйПериодАДВ62 Тогда
			
			Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
				РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
			КонецЕсли;
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Период Расчета РСВ-1 не соответствует отчетному периоду Описи АДВ-6-2", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			
		Иначе	
			
			ДопустимоеРасхождение = Окр(ВсегоКатегорийАДВ62/2);
			СообщениеОРасхожденииУжеВыводилось = Ложь;
			
			Разность = Макс(НачисленоРСВ1НаСтраховую - НачисленоАДВ62НаСтраховую, НачисленоАДВ62НаСтраховую - НачисленоРСВ1НаСтраховую);
			Если Разность > ДопустимоеРасхождение Тогда
				Если Не СообщениеОРасхожденииУжеВыводилось Тогда
					Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
						РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					СообщениеОРасхожденииУжеВыводилось = Истина;
					ОбработкаКомментариев.ДобавитьСообщение("В Описи АДВ-6-2 присутствует " + ВсегоКатегорийАДВ62 + " " + ОбщегоНазначения.ФормаМножественногоЧисла("категория", "категории", "категорий", ВсегоКатегорийАДВ62) + " застрахованных лиц. Допустимое различие показателей Расчета РСВ-1 и Описи АДВ-6-2 составляет " + ДопустимоеРасхождение + " руб.", Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иАДВ62);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Суммы начисленных взносов на страховую часть пенсии в Расчете РСВ-1 и Описи АДВ-6-2 различаются более чем на " + ДопустимоеРасхождение + " руб.!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			КонецЕсли;
			Разность = Макс(НачисленоРСВ1НаНакопительную - НачисленоАДВ62НаНакопительную, НачисленоАДВ62НаНакопительную - НачисленоРСВ1НаНакопительную);
			Если Разность > ДопустимоеРасхождение Тогда
				Если Не СообщениеОРасхожденииУжеВыводилось Тогда
					Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
						РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					СообщениеОРасхожденииУжеВыводилось = Истина;
					ОбработкаКомментариев.ДобавитьСообщение("В Описи АДВ-6-2 присутствует " + ВсегоКатегорийАДВ62 + " " + ОбщегоНазначения.ФормаМножественногоЧисла("категория", "категории", "категорий", ВсегоКатегорийАДВ62) + " застрахованных лиц. Допустимое различие показателей Расчета РСВ-1 и Описи АДВ-6-2 составляет " + ДопустимоеРасхождение + " руб.", Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иАДВ62);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Суммы начисленных взносов на накопительную часть пенсии в Расчете РСВ-1 и Описи АДВ-6-2 различаются более чем на " + ДопустимоеРасхождение + " руб.!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			КонецЕсли;
			Разность = Макс(УплаченоРСВ1НаСтраховую - УплаченоАДВ62НаСтраховую, УплаченоАДВ62НаСтраховую - УплаченоРСВ1НаСтраховую);
			Если Разность > ДопустимоеРасхождение Тогда
				Если Не СообщениеОРасхожденииУжеВыводилось Тогда
					Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
						РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					СообщениеОРасхожденииУжеВыводилось = Истина;
					ОбработкаКомментариев.ДобавитьСообщение("В Описи АДВ-6-2 присутствует " + ВсегоКатегорийАДВ62 + " " + ОбщегоНазначения.ФормаМножественногоЧисла("категория", "категории", "категорий", ВсегоКатегорийАДВ62) + " застрахованных лиц. Допустимое различие показателей Расчета РСВ-1 и Описи АДВ-6-2 составляет " + ДопустимоеРасхождение + " руб.", Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иАДВ62);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Суммы уплаченных взносов на страховую часть пенсии в Расчете РСВ-1 и Описи АДВ-6-2 различаются более чем на " + ДопустимоеРасхождение + " руб.!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			КонецЕсли;
			Разность = Макс(УплаченоРСВ1НаНакопительную - УплаченоАДВ62НаНакопительную, УплаченоАДВ62НаНакопительную - УплаченоРСВ1НаНакопительную);
			Если Разность > ДопустимоеРасхождение Тогда
				Если Не СообщениеОРасхожденииУжеВыводилось Тогда
					Если РазделСверкиРСВ1иАДВ62 = Неопределено Тогда
						РазделСверкиРСВ1иАДВ62 = ОбработкаКомментариев.ДобавитьСообщение("Сверка данных Описи АДВ-6-2 и Расчета РСВ-1", Перечисления.ВидыСообщений.Информация);
					КонецЕсли;
					СообщениеОРасхожденииУжеВыводилось = Истина;
					ОбработкаКомментариев.ДобавитьСообщение("В Описи АДВ-6-2 присутствует " + ВсегоКатегорийАДВ62 + " " + ОбщегоНазначения.ФормаМножественногоЧисла("категория", "категории", "категорий", ВсегоКатегорийАДВ62) + " застрахованных лиц. Допустимое различие показателей Расчета РСВ-1 и Описи АДВ-6-2 составляет " + ДопустимоеРасхождение + " руб.", Перечисления.ВидыСообщений.Информация,,РазделСверкиРСВ1иАДВ62);
				КонецЕсли;
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Суммы уплаченных взносов на накопительную часть пенсии в Расчете РСВ-1 и Описи АДВ-6-2 различаются более чем на " + ДопустимоеРасхождение + " руб.!", ЕстьОшибкиАДВ62_РСВ1,,,,РазделСверкиРСВ1иАДВ62);
			КонецЕсли;
			
		КонецЕсли;
			
	КонецЕсли;
	
	ЕстьОшибки = ЕстьОшибкиРСВ1 Или ЕстьОшибкиАДВ62 Или ЕстьОшибкиСЗВ6 Или ЕстьОшибкиРасчетаСЗВ6 Или ЕстьОшибкиСЗВ63 Или ЕстьОшибкиРСВ1_СЗВ63 Или ЕстьОшибкиАДВ62_СЗВ63 Или ЕстьОшибкиАДВ62_РСВ1;	
	
	Если Не ЕстьОшибки Тогда
		ОбработкаКомментариев.УдалитьСообщения();
		Если СообщатьОбУспехе Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке("Ошибок не обнаружено!");
		КонецЕсли;
	КонецЕсли;
	
    Возврат ЕстьОшибки
	
КонецФункции

Функция СЗВ63ЗаГод(ДокументОбъектАДВ62 = Неопределено) Экспорт

	Если ДокументОбъектАДВ62 = Неопределено Тогда
		ДокументОбъектАДВ62 = ДокументОбъектАДВ11
	КонецЕсли;
	ОтчетныйПериодПоиска = ДокументОбъектАДВ62.ОтчетныйПериод;
	
	Если ПроцедурыПерсонифицированногоУчета.ОкончаниеОтчетногоПериодаПерсучета(ОтчетныйПериодПоиска) = КонецГода(ОтчетныйПериодПоиска) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СведенияОНачисленномЗаработкеСЗВ63.Ссылка
		|ИЗ
		|	Документ.СведенияОНачисленномЗаработкеСЗВ63 КАК СведенияОНачисленномЗаработкеСЗВ63
		|ГДЕ
		|	СведенияОНачисленномЗаработкеСЗВ63.ОписьАДВ62 = &ОписьАДВ62
		|	И (НЕ СведенияОНачисленномЗаработкеСЗВ63.ПометкаУдаления)";
		Запрос.УстановитьПараметр("ОписьАДВ62", ДокументОбъектАДВ62.Ссылка);
		Выборка = Запрос.Выполнить().Выбрать();
	Иначе 	
		Выборка = Неопределено
	КонецЕсли; 
	
	Возврат Выборка
	
КонецФункции // СЗВ63ЗаГод()

Функция ФормаРасчетаРСВ1(РасчетСтраховыхВзносов) Экспорт

	ДокументОбъект = РасчетСтраховыхВзносов.ПолучитьОбъект();
	
	ВыбраннаяФорма = ДокументОбъект.ВыбраннаяФорма;
	
	Отчет = Отчеты.РегламентированныйОтчетРСВ1.Создать();
	Отчет.мСохраненныйДок = ДокументОбъект;
	Отчет.мВыбраннаяФорма = ВыбраннаяФорма;
	
	// определяем границы периода построения отчета
	Отчет.мДатаНачалаПериодаОтчета = НачалоДня(ДокументОбъект.ДатаНачала);
	Отчет.мДатаКонцаПериодаОтчета  = КонецДня(ДокументОбъект.ДатаОкончания);
	Отчет.мПериодичность = ДокументОбъект.Периодичность;
	
	Если Отчет.Метаданные().Формы.Найти(СокрП(ВыбраннаяФорма)) <> Неопределено Тогда
		ВыбФормаОтчета = Отчет.ПолучитьФорму(СокрП(ВыбраннаяФорма), , РасчетСтраховыхВзносов);
	Иначе
		// Если не удалось найти форму с таким названием (могла быть переименована),
		// то по умолчанию выдаем текущую (действующую) форму
		ВыбраннаяФорма = Отчет.мТаблицаФормОтчета[0].ФормаОтчета;
		ВыбФормаОтчета = Отчет.ПолучитьФорму(ВыбраннаяФорма, , РасчетСтраховыхВзносов);
	КонецЕсли;
	
	ВыбФормаОтчета.Инициализация(Истина);
	
	Возврат ВыбФормаОтчета

КонецФункции // ФормаРасчетаРСВ1()

////////////////////////////////////////////////////////////////////////////////

СоответствиеСсылокИОбъектов = Новый Соответствие;
