Процедура ЗагрузитьПравила() Экспорт
	
	Т = Новый ТабличныйДокумент;
	
	Т.Вывести(ЭтотОбъект.ПолучитьМакет("МакетЗадачиУведомления"));
	
	ТаблицаПравил.Очистить();
	
	Для Н = 2 по Т.ВысотаТаблицы Цикл
		
		СтрокаПравила = ТаблицаПравил.Добавить();
		
		СтрокаПравила.НомерПравила 					= Т.Область(Н, 1).Текст;
		СтрокаПравила.ИмяДокумента                  = Т.Область(Н, 2).Текст;
		СтрокаПравила.ИмяРеквизитаСтатуса           = Т.Область(Н, 3).Текст;
		СтрокаПравила.ИмяПеречисленияСтатуса        = Т.Область(Н, 4).Текст;
		СтрокаПравила.ИмяСтатуса                    = Т.Область(Н, 5).Текст;
		СтрокаПравила.ИмяБизнесПроцесса             = Т.Область(Н, 6).Текст;
        СтрокаПравила.ИмяРеквизитаДокумента         = Т.Область(Н, 7).Текст;
		СтрокаПравила.ИмяТочкиМаршрута              = Т.Область(Н, 8).Текст;
		СтрокаПравила.ЗадачаТолькоИнициатору        = Т.Область(Н, 9).Текст = "Да";
		СтрокаПравила.ИмяПроцедурыПриСозданииЗадач	= Т.Область(Н, 10).Текст;
		
		СтрокаПравила.СтатусДокументаСсылка			= Перечисления[СтрокаПравила.ИмяПеречисленияСтатуса][СтрокаПравила.ИмяСтатуса];
		СтрокаПравила.ТочкаМаршрутаСсылка			= БизнесПроцессы[СтрокаПравила.ИмяБизнесПроцесса].ТочкиМаршрута[СтрокаПравила.ИмяТочкиМаршрута];
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура НайтиЗадачиПоПравилу(НомерПравила) Экспорт
	
	Состояние("Обработка правила " + НомерПравила + " из " + ТаблицаПравил.Количество() + "...");
	
	СтрокаПравила = ТаблицаПравил.Найти(НомерПравила, "НомерПравила");
	
	Если Не ЗначениеЗаполнено(СтрокаПравила) Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абсЗадачаДоговора.Ссылка КАК ЗадачаСсылка,
	|	абсЗадачаДоговора.БизнесПроцесс КАК БизнесПроцесс,
	|	абсЗадачаДоговора.ТочкаМаршрута КАК ТочкаМаршрута,
	|	абсЗадачаДоговора.ИнициаторБП КАК ИнициаторБП,
	|	абсЗадачаДоговора.Исполнитель КАК ИсполнительЗадачи,
	|	абсЗадачаДоговора.БизнесПроцесс.ДокументВводаБюджета КАК Документ,
	|	абсЗадачаДоговора.БизнесПроцесс.ДокументВводаБюджета.Статус КАК СтатусДокумента
	|ИЗ
	|	Задача.абсЗадачаДоговора КАК абсЗадачаДоговора
	|ГДЕ
	|	(НЕ абсЗадачаДоговора.Выполнена)
	|	И абсЗадачаДоговора.ТочкаМаршрута = &ТочкаМаршрута
	|	И абсЗадачаДоговора.БизнесПроцесс.ДокументВводаБюджета.Статус <> &СтатусДокумента
	|	И ВЫБОР
	|			КОГДА &ЗадачаТолькоИнициатору
	|				ТОГДА (НЕ абсЗадачаДоговора.ИнициаторБП = абсЗадачаДоговора.Исполнитель)
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И абсЗадачаДоговора.Исполнитель = &Исполнитель";
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абсЗадачаДоговора.Ссылка КАК ЗадачаСсылка,
	|	абсЗадачаДоговора.БизнесПроцесс КАК БизнесПроцесс,
	|	абсЗадачаДоговора.ТочкаМаршрута КАК ТочкаМаршрута,
	|	абсЗадачаДоговора.ИнициаторБП КАК ИнициаторБП,
	|	абсЗадачаДоговора.Исполнитель КАК ИсполнительЗадачи,
	|	абсЗадачаДоговора.БизнесПроцесс." + СтрокаПравила.ИмяРеквизитаДокумента + " КАК Документ,
	|	абсЗадачаДоговора.БизнесПроцесс." + СтрокаПравила.ИмяРеквизитаДокумента + "." + СтрокаПравила.ИмяРеквизитаСтатуса + " КАК СтатусДокумента
	|ИЗ
	|	Задача.абсЗадачаДоговора КАК абсЗадачаДоговора
	|ГДЕ
	|	(НЕ абсЗадачаДоговора.Выполнена)
	|	И абсЗадачаДоговора.ТочкаМаршрута = &ТочкаМаршрута
	|	//И абсЗадачаДоговора.БизнесПроцесс." + СтрокаПравила.ИмяРеквизитаДокумента + "." + СтрокаПравила.ИмяРеквизитаСтатуса + " <> &СтатусДокумента
	|	//И ВЫБОР
	|	//		КОГДА &ЗадачаТолькоИнициатору
	|	//			ТОГДА (НЕ абсЗадачаДоговора.ИнициаторБП = абсЗадачаДоговора.Исполнитель)
	|	//		ИНАЧЕ ИСТИНА
	|	//	КОНЕЦ
	|	И абсЗадачаДоговора.Исполнитель = &Исполнитель";
	
	                          
	Запрос.УстановитьПараметр("ЗадачаТолькоИнициатору", СтрокаПравила.ЗадачаТолькоИнициатору);
	Запрос.УстановитьПараметр("ТочкаМаршрута"	, БизнесПроцессы[СтрокаПравила.ИмяБизнесПроцесса].ТочкиМаршрута[СтрокаПравила.ИмяТочкиМаршрута]);
	Запрос.УстановитьПараметр("Статусдокумента"	, Перечисления[СтрокаПравила.ИмяПеречисленияСтатуса][СтрокаПравила.ИмяСтатуса]);
	Запрос.УстановитьПараметр("Исполнитель"		, Пользователь);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаТабЗадач = ЗадачиУведомления.Добавить();
		
		СтрокаТабЗадач.НомерПравила = НомерПравила;
		СтрокатабЗадач.Удалить = Истина;
		ЗаполнитьЗначенияСвойств(СтрокаТабЗадач, Выборка);
		
	КонецЦикла;	
	
КонецПроцедуры

Процедура ВыполнитьЗадачи() Экспорт
	
	МассивБП = Новый Массив();
	
	СтрокиЗадач = ЗадачиУведомления.НайтиСтроки(Новый Структура("Удалить", Истина));
	
	Для Каждого СтрокаЗадачи Из СтрокиЗадач Цикл
		
		Если МассивБП.Найти(СтрокаЗадачи.БизнесПроцесс) = Неопределено Тогда 
			
			МассивБП.Добавить(СтрокаЗадачи.БизнесПроцесс);
			                                                                            
		КонецЕсли;
		
	КонецЦикла;	
	
	
	Для Каждого БПСсылка Из МассивБП Цикл
		
		ВыполнитьЗадачуПоБП(БПСсылка);
		
	КонецЦикла;
			
КонецПроцедуры

Процедура ВыполнитьЗадачуПоБП(БПСсылка)
	
	// Найдем первую задачу по БП и выполним ее
	СтрокаЗадачи = ЗадачиУведомления.Найти(БПСсылка, "БизнесПроцесс");
	
	Если СтрокаЗадачи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗадачаСсылка = СтрокаЗадачи.ЗадачаСсылка;
	
	Если НЕ ЗадачаСсылка.Выполнена Тогда
		
		ЗадачаОбъект = ЗадачаСсылка.ПолучитьОбъект();
		
		ЗадачаОбъект.ВыполнитьЗадачу();
		
		Сообщить("Выполнена задача " + ЗадачаОбъект.Ссылка);
		
	КонецЕсли;
	 
КонецПроцедуры



	


