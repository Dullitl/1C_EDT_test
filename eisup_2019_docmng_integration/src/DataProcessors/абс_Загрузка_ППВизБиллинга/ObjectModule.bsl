 Перем ТаблицаЗагрузки;
 Перем мВалютаРег;
 
 Функция ЗагрузитьППВ(Форма) Экспорт
	ТаблицаЗагрузки.Очистить();
    Текст = Новый ТекстовыйДокумент;
	Текст.Прочитать(Путь);
	КоличествоСтрок = Текст.КоличествоСтрок();
	Для й =НачНомер По КоличествоСтрок Цикл
		ТекСтрока = Текст.ПолучитьСтроку(й);
		сч =0;
		НоваяСтрока = ТаблицаЗагрузки.Добавить();
		Пока Найти(ТекСтрока,";")>0 Цикл
			
			ПозицияРазделителя = Найти(ТекСтрока,";");
			Если ПозицияРазделителя>0 Тогда
				
				Если Сч <> 14 Тогда
					НоваяСтрока[сч] = Лев(ТекСтрока,ПозицияРазделителя-1);
					ТекСтрока = Сред(ТекСтрока,ПозицияРазделителя+1);
				Иначе
					НоваяСтрока[сч] = СтрЗаменить(ТекСтрока,";","");
					ТекСтрока = "";
				КонецЕсли;
			сч = сч+1;
			ОбработкаПрерыванияПользователя();
			КонецЕсли;
		КонецЦикла;
			//НоваяСтрока[сч] = ТекСтрока;

	КонецЦикла;
	

	
	//////////////////////////////////////////////////////////
	Для Каждого СтрокаДанных Из ТаблицаЗагрузки Цикл
		ОбработкаПрерыванияПользователя();
		//НайденныйДокумент = Документы.ПлатежноеПоручениеВходящее.НайтиПоНомеру(СтрокаДанных.НомерПП,СтрокаДанных.ДатаПП);
		//Если НайденныйДокумент.Пустая() Тогда
			НайденныйДокумент = ПолучитьДокумент(СтрокаДанных.НомерПП,СтрокаДанных.ДатаПП,СтрокаДанных.ИННПлательщика);
		//КонецЕсли;
		Если НайденныйДокумент.Пустая() Тогда
			
			Если СтрокаДанных.КлассУслуг =17 ТОгда
				Продолжить;
			КонецЕсли;
			ДокументПлатежа = Документы.ПлатежноеПоручениеВходящее.СоздатьДокумент();
			Если СтрДлина(СтрокаДанных.ДатаПП) =10 Тогда
			ДокументПлатежа.Дата = Дата(Прав(СтрокаДанных.ДатаПП,4)+Сред(СтрокаДанных.ДатаПП,4,2)+Лев(СтрокаДанных.ДатаПП,2));
			
			КонецЕсли;
			//ДокументПлатежа.Номер =СтрокаДанных.НомерПП;
			ДокументПлатежа.ВалютаДокумента = мВалютаРег;
			ДокументПлатежа.ОтражатьВБухгалтерскомУчете = Истина;
			ДокументПлатежа.ОтраженоВОперУчете = Истина;
			ДокументПлатежа.ОтражатьВНалоговомУчете = Истина;
			ДокументПлатежа.Ответственный = глЗначениеПеременной("глТекущийПользователь");
			ДокументПлатежа.Оплачено = Истина;
			ДокументПлатежа.Комментарий = "#Загружен из биллинга";
			ДокументПлатежа.ДатаВходящегоДокумента = ДокументПлатежа.Дата;
			ДокументПлатежа.НомерВходящегоДокумента = Лев(СтрокаДанных.НомерПП,30);
			
			ДокументПлатежа.ДатаОплаты = ДокументПлатежа.Дата;
			ДокументПлатежа.ВидОперации = Перечисления.ВидыОперацийПоступлениеБезналичныхДенежныхСредств.ОплатаПокупателя;
			ДокументПлатежа.НазначениеПлатежа = СтрокаДанных.НазначениеПлатежа;
			ДокументПлатежа.КурсДокумента = 1;
			ДокументПлатежа.абс_ЗагруженаИзБиллинга = Истина;
			//ДокументПлатежа.Организация = ?(СтрокаДанных.КлассУслуг =17, ОрганизацияKTTK,Организация);
			
			ДокументПлатежа.Организация = Организация;
			ДокументПлатежа.СчетОрганизации = ПолучитьРасчетныйСчет(ДокументПлатежа.Организация,СтрокаДанных);
			СтрокаРасшифровки = ДокументПлатежа.РасшифровкаПлатежа.Добавить();
			СтрокаРасшифровки.ДоговорКонтрагента = ПолучитьДоговор(СтрокаДанных);
			ДокументПлатежа.Контрагент = ПолучитьКонтрагента(СтрокаДанных,СтрокаРасшифровки.ДоговорКонтрагента);
			СтрокаРасшифровки.КурсВзаиморасчетов =1;
			СтрокаРасшифровки.КратностьВзаиморасчетов=1;
			СтрокаРасшифровки.СуммаВзаиморасчетов = ?(ЗначениеЗаполнено(СтрокаДанных.СуммаОпл),?(ЗначениеЗаполнено(Число(СтрокаДанных.СуммаОпл)),Число(СтрокаДанных.СуммаОпл),Число(СтрокаДанных.СуммаПП)),Число(СтрокаДанных.СуммаПП));
			СтрокаРасшифровки.СтатьяДвиженияДенежныхСредств = Статья;
			СтрокаРасшифровки.СтавкаНДС=Перечисления.СтавкиНДС.НДС18;
			СтрокаРасшифровки.ДокументРасчетовСКонтрагентом = ПолучитьДокументРасчетов(СтрокаРасшифровки,СтрокаДанных);
			Если ЗначениеЗаполнено(СтрокаРасшифровки.ДокументРасчетовСКонтрагентом) Тогда
				Если Не ЗначениеЗаполнено(ДокументПлатежа.Контрагент) Тогда
					ДокументПлатежа.Контрагент = СтрокаРасшифровки.ДокументРасчетовСКонтрагентом.Контрагент;
				КонецЕсли;	
				Если Не ЗначениеЗаполнено(СтрокаРасшифровки.ДоговорКонтрагента ) Тогда
					СтрокаРасшифровки.ДоговорКонтрагента  = СтрокаРасшифровки.ДокументРасчетовСКонтрагентом.ДоговорКонтрагента;
				КонецЕсли;
			КонецЕсли;
			СтрокаРасшифровки.СуммаПлатежа = СтрокаРасшифровки.СуммаВзаиморасчетов;
			УправлениеДенежнымиСредствами.ЗаполнитьСчетаУчетаПлатежейБУ(ДокументПлатежа,глЗначениеПеременной("глТекущийПользователь"),Истина);
			СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СокрЛП(СтрокаДанных.КлассУслуг));
			Если Найти(""+СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом,"76") >0 Тогда
				СтрокаРасшифровки.СчетУчетаРасчетовПоАвансам = СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом;
			КонецЕсли;
			
			УправлениеДенежнымиСредствами.ПересчитатьСуммуНДС(СтрокаРасшифровки);
			ДокументПлатежа.СуммаДокумента =ДокументПлатежа.СуммаДокумента+СтрокаРасшифровки.СуммаПлатежа;
			ДокументПлатежа.Записать();
			//Заполнение журнала
			//Журнал = Новый ТаблицаЗначений;
			СтруктураОтбора = Новый Структура("ДокументПлатежа,ДокументРасчетов");
			СтруктураОтбора.Вставить("ДокументПлатежа",ДокументПлатежа.Ссылка);
			СтруктураОтбора.Вставить("ДокументРасчетов",СтрокаРасшифровки.ДокументРасчетовСКонтрагентом);
			
			
			МассивСтрок = Форма.Журнал.НайтиСтроки(СтруктураОтбора);
			Если МассивСтрок.Количество()=0 Тогда
				НоваяСтрокаЖурнала = Форма.Журнал.Добавить();
				НоваястрокаЖурнала.ДокументПлатежа =ДокументПлатежа.Ссылка;
				НоваястрокаЖурнала.Контрагент = ДокументПлатежа.Контрагент;
				НоваястрокаЖурнала.Организация = ДокументПлатежа.Организация;
				НоваястрокаЖурнала.СуммаПлатежа = ?(ЗначениеЗаполнено(СтрокаДанных.СуммаОпл),?(ЗначениеЗаполнено(Число(СтрокаДанных.СуммаОпл)),Число(СтрокаДанных.СуммаОпл),Число(СтрокаДанных.СуммаПП)),Число(СтрокаДанных.СуммаПП));
				НоваястрокаЖурнала.ДокументРасчетов = СтрокаРасшифровки.ДокументРасчетовСКонтрагентом;
			КонецЕсли;
			
		Иначе
			Если НайденныйДокумент.СуммаДокумента< Число(СтрокаДанных.СуммаПП) Тогда
				ДокументПлатежа = НайденныйДокумент.получитьОбъект();
				СтрокаРасшифровки = ДокументПлатежа.РасшифровкаПлатежа.Добавить();
				ДокументПлатежа.ДатаОплаты = ДокументПлатежа.Дата;
				СтрокаРасшифровки.ДоговорКонтрагента = ПолучитьДоговор(СтрокаДанных);
				Если Не ЗначениеЗаполнено(ДокументПлатежа.Контрагент) Тогда
				ДокументПлатежа.Контрагент = ПолучитьКонтрагента(СтрокаДанных,СтрокаРасшифровки.ДоговорКонтрагента);
                КонецЕсли;
				СтрокаРасшифровки.КурсВзаиморасчетов =1;
				СтрокаРасшифровки.КратностьВзаиморасчетов=1;
				СтрокаРасшифровки.СуммаВзаиморасчетов = ?(ЗначениеЗаполнено(СтрокаДанных.СуммаОпл),?(ЗначениеЗаполнено(Число(СтрокаДанных.СуммаОпл)),Число(СтрокаДанных.СуммаОпл),Число(СтрокаДанных.СуммаПП)),Число(СтрокаДанных.СуммаПП));
				СтрокаРасшифровки.СтавкаНДС=Перечисления.СтавкиНДС.НДС18;
				СтрокаРасшифровки.СуммаПлатежа =  СтрокаРасшифровки.СуммаВзаиморасчетов ;
				СтрокаРасшифровки.СтатьяДвиженияДенежныхСредств = Статья;
				СтрокаРасшифровки.ДокументРасчетовСКонтрагентом = ПолучитьДокументРасчетов(СтрокаРасшифровки,СтрокаДанных);
				УправлениеДенежнымиСредствами.ЗаполнитьСчетаУчетаПлатежейБУ(ДокументПлатежа,глЗначениеПеременной("глТекущийПользователь"),Истина);
				СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СокрЛП(СтрокаДанных.КлассУслуг));
				Если Найти(""+СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом,"76") >0 Тогда
					СтрокаРасшифровки.СчетУчетаРасчетовПоАвансам = СтрокаРасшифровки.СчетУчетаРасчетовСКонтрагентом;
				КонецЕсли;
				
				УправлениеДенежнымиСредствами.ПересчитатьСуммуНДС(СтрокаРасшифровки);
				Если ЗначениеЗаполнено(СтрокаРасшифровки.ДокументРасчетовСКонтрагентом) Тогда
					Если Не ЗначениеЗаполнено(ДокументПлатежа.Контрагент) Тогда
						ДокументПлатежа.Контрагент = СтрокаРасшифровки.ДокументРасчетовСКонтрагентом.Контрагент;
					КонецЕсли;	
					Если Не ЗначениеЗаполнено(СтрокаРасшифровки.ДоговорКонтрагента ) Тогда
						СтрокаРасшифровки.ДоговорКонтрагента  = СтрокаРасшифровки.ДокументРасчетовСКонтрагентом.ДоговорКонтрагента;
					КонецЕсли;
				КонецЕсли;
				ДокументПлатежа.СуммаДокумента =ДокументПлатежа.СуммаДокумента+СтрокаРасшифровки.СуммаПлатежа;
				ДокументПлатежа.Записать();
				СтруктураОтбора = Новый Структура("ДокументПлатежа,ДокументРасчетов");
				СтруктураОтбора.Вставить("ДокументПлатежа",ДокументПлатежа.Ссылка);
				СтруктураОтбора.Вставить("ДокументРасчетов",СтрокаРасшифровки.ДокументРасчетовСКонтрагентом);
				МассивСтрок = Форма.Журнал.НайтиСтроки(СтруктураОтбора);
				Если МассивСтрок.Количество()=0 Тогда
					НоваяСтрокаЖурнала = Форма.Журнал.Добавить();
					НоваястрокаЖурнала.ДокументПлатежа =ДокументПлатежа.Ссылка;
					НоваястрокаЖурнала.Контрагент = ДокументПлатежа.Контрагент;
					НоваястрокаЖурнала.Организация = ДокументПлатежа.Организация;
					НоваястрокаЖурнала.СуммаПлатежа = ?(ЗначениеЗаполнено(СтрокаДанных.СуммаОпл),?(ЗначениеЗаполнено(Число(СтрокаДанных.СуммаОпл)),Число(СтрокаДанных.СуммаОпл),Число(СтрокаДанных.СуммаПП)),Число(СтрокаДанных.СуммаПП));
					НоваястрокаЖурнала.ДокументРасчетов = СтрокаРасшифровки.ДокументРасчетовСКонтрагентом;
				КонецЕсли;

			КонецЕсли;
			
			//Заполнение журнала
			//Журнал = Новый ТаблицаЗначений;
			
			
			
			
		КонецЕсли;
		
	КонецЦикла;
	
	
КонецФункции

Функция ПолучитьДокумент(Номер,Дата,ИНН)
	НайденныйДокумент = Документы.ПлатежноеПоручениеВходящее.ПустаяСсылка();
	Если ЗначениеЗаполнено(Номер) И ЗначениеЗаполнено(Дата) Тогда
		Если СтрДлина(Дата)=10 Тогда
			ДатаДок = Дата(Прав(Дата,4)+Сред(Дата,4,2)+Лев(Дата,2));
			Запрос = Новый Запрос;
			Запрос.Текст ="ВЫБРАТЬ
			              |	ПлатежноеПоручениеВходящее.Ссылка
			              |ИЗ
			              |	Документ.ПлатежноеПоручениеВходящее КАК ПлатежноеПоручениеВходящее
			              |ГДЕ
			              |	ПлатежноеПоручениеВходящее.НомерВходящегоДокумента = &Номер
			              |	И ПлатежноеПоручениеВходящее.ДатаВходящегоДокумента = &Дата
			              |	И ПлатежноеПоручениеВходящее.абс_ЗагруженаИзБиллинга
			              |	И ПлатежноеПоручениеВходящее.Контрагент.ИНН = &ИНН
			              |	И ПлатежноеПоручениеВходящее.Организация = &Организация";
			Запрос.УстановитьПараметр("Номер",СокрЛП(Номер));
			Запрос.УстановитьПараметр("Дата",ДатаДок);
			Запрос.УстановитьПараметр("ИНН",ИНН);
			Запрос.УстановитьПараметр("Организация",Организация);
			
			

			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				НайденныйДокумент = Выборка.Ссылка;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	Возврат НайденныйДокумент;
	
	
КонецФункции

Функция ПолучитьКонтрагента(СтрокаДанных,ДоговорКонтрагента)
	
	НайденныйКонтрагент = Справочники.Контрагенты.ПустаяСсылка();
	Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда
		Возврат ДоговорКонтрагента.Владелец;
	КонецЕсли;
	
	Если НайденныйКонтрагент.Пустая() Тогда
		Если ЗначениеЗаполнено(СтрокаДанных.ИННПлательщика) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	Контрагенты.Ссылка
		               |ИЗ
		               |	Справочник.Контрагенты КАК Контрагенты
		               |ГДЕ
		               |	Контрагенты.ИНН = &ИНН";
		Запрос.УстановитьПараметр("ИНН",СокрЛП(СтрокаДанных.ИННПлательщика));
		Выборка = Запрос.Выполнить().Выбрать();
		Кол = Выборка.Количество();
		Если Выборка.Следующий() Тогда
			Если Кол = 1 Тогда
			НайденныйКонтрагент = Выборка.ссылка;
			КонецЕсли;
		КонецЕсли;
		
		КонецЕсли;
	КонецЕсли;
	Возврат НайденныйКонтрагент;
КонецФункции

Функция ПолучитьДоговор(СтрокаДанных)
	
	НайдДоговор = Справочники.ДоговорыКонтрагентов.ПустаяСсылка();
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ДоговорыКонтрагентов.Ссылка
		               |ИЗ
		               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		               |ГДЕ
					   |	 ДоговорыКонтрагентов.Организация = &Организация И 
		               |	 ДоговорыКонтрагентов.абс_ЛицевойСчетБиллинга = &НомерЛС";
		Запрос.УстановитьПараметр("Номер",СтрокаДанных.НомерДоговора);
		Запрос.УстановитьПараметр("НомерЛС",СокрЛП(СтрокаДанных.НомерЛС));
		Запрос.УстановитьПараметр("Организация",Организация);
		
		
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			НайдДоговор = Выборка.ссылка;
		Иначе
			Если ЗначениеЗаполнено(СокрЛП(СтрокаДанных.ИННПлательщика)) Тогда
				Запрос = Новый Запрос;
				Запрос.Текст = "ВЫБРАТЬ
				|	ДоговорыКонтрагентов.Ссылка
				|ИЗ
				|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
				|ГДЕ
				|	ДоговорыКонтрагентов.Организация = &Организация И
				|	ДоговорыКонтрагентов.Владелец.ИНН = &ИНН";
				Запрос.УстановитьПараметр("ИНН",СокрЛП(СтрокаДанных.ИННПлательщика));
				Запрос.УстановитьПараметр("Организация",Организация);

				ВыборкаДоговоров = запрос.Выполнить().Выбрать();
				Если ВыборкаДоговоров.Количество() =1 Тогда
					Если ВыборкаДоговоров.Следующий() Тогда
						НайдДоговор = ВыборкаДоговоров.ссылка;	
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;

	Возврат НайдДоговор;
КонецФункции

Функция ПолучитьДокументРасчетов(СтрокаРасшифровки,СтрокаДанных)
	НайдДок = Документы.РеализацияТоваровУслуг.ПустаяСсылка();
	Если ЗначениеЗаполнено(СтрокаДанных.НомерДок) И ЗначениеЗаполнено(СтрокаДанных.ДатаДок) Тогда
		Если СтрДлина(СтрокаДанных.ДатаДок)=10 Тогда
			ДатаДок = Дата(Прав(СтрокаДанных.ДатаДок,4)+Сред(СтрокаДанных.ДатаДок,4,2)+Лев(СтрокаДанных.ДатаДок,2)); 
			НайдДок = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(СокрЛП(СтрокаДанных.НомерДок),ДатаДок);
		Иначе
			НайдДок = Документы.РеализацияТоваровУслуг.НайтиПоНомеру(СокрЛП(СтрокаДанных.НомерДок),ТекущаяДата());
		КонецЕсли;
	
	КонецЕсли;
	Возврат НайдДок;
КонецФункции

Функция ПолучитьРасчетныйСчет(Организация,СтрокаДанных)
	
	НайдРС = Справочники.БанковскиеСчета.ПустаяСсылка();
	Если ЗначениеЗаполнено(Организация) И ЗначениеЗаполнено(СтрокаДанных.НомерСчета) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст ="ВЫБРАТЬ
		|	БанковскиеСчета.Ссылка
		|ИЗ
		|	Справочник.БанковскиеСчета КАК БанковскиеСчета
		|ГДЕ
		|	БанковскиеСчета.Владелец = &Организация
		|	И БанковскиеСчета.НомерСчета = &НомерСчета";
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("НомерСчета",СтрокаДанных.НомерСчета);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			НайдРС = Выборка.Ссылка;
		Иначе 
			Сообщить("Не найден р/с по "+Организация+" с номером счета "+СтрокаДанных.НомерСчета);
		КонецЕсли;
	КонецЕсли;
	Возврат НайдРС;

КонецФункции


ТаблицаЗагрузки = Новый ТаблицаЗначений;
ТаблицаЗагрузки.Колонки.Добавить("НомерПП");
ТаблицаЗагрузки.Колонки.Добавить("ДатаПП");
ТаблицаЗагрузки.Колонки.Добавить("СуммаПП");
ТаблицаЗагрузки.Колонки.Добавить("ИННПлательщика");
ТаблицаЗагрузки.Колонки.Добавить("НаименованиеПлательщика");
ТаблицаЗагрузки.Колонки.Добавить("НомерСчета");
ТаблицаЗагрузки.Колонки.Добавить("ИННПолучателя");
ТаблицаЗагрузки.Колонки.Добавить("НаименованиеПолучателя");
ТаблицаЗагрузки.Колонки.Добавить("НомерЛС");
ТаблицаЗагрузки.Колонки.Добавить("НомерДоговора");
ТаблицаЗагрузки.Колонки.Добавить("СуммаОпл");
ТаблицаЗагрузки.Колонки.Добавить("НомерДок");
ТаблицаЗагрузки.Колонки.Добавить("ДатаДок");
ТаблицаЗагрузки.Колонки.Добавить("КлассУслуг");
ТаблицаЗагрузки.Колонки.Добавить("НазначениеПлатежа");

мВалютаРег = Константы.ВалютаРегламентированногоУчета.Получить();




