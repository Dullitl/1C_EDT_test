&НаКлиенте
Процедура ВыгрузитьРеквизиты(Команда)
	
	ОчиститьСообщения();
	
	Если Не ПроверитьЗаполнение() ТОгда
		Возврат;
	КонецЕсли;                                
	Если НЕ ЗначениеЗаполнено(АдресВыгрузки) Тогда
		Сообщение = Новый СообщениеПользователю();
		Если СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту") Тогда
        	Сообщение.Текст = Нстр ("ru = 'Не выбрана учетная запись электронной почты'");
			Сообщение.Поле = "УчетнаяЗапись";
		ИначеЕсли СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог") Тогда
			Сообщение.Текст = Нстр ("ru = 'Не выбран каталог выгрузки файла'");
			Сообщение.Поле = "Каталог";
		КонецЕсли;	
		Сообщение.Поле = "АдресВыгрузки";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	Адрес = ВыгрузитьРеквизитыОрганизации();
	Если СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог") Тогда
		ИмяФайла = АдресВыгрузки + "\" + СтрЗаменить(Наименование,"""","") + ".xml";
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
		ДвоичныеДанные.Записать(ИмяФайла);
		ПоказатьОповещениеПользователя(НСтр ("ru = 'Реквизиты выгружены в файл'"));
	ИначеЕсли СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту") Тогда
		#Если Не ВебКлиент Тогда
			ПолноеИмяФайла = КаталогВременныхФайлов() + СтрЗаменить(Наименование,"""","") + ".xml";
		#Иначе
			ФайловыеФункцииКлиент.ПроинициализироватьПутьКРабочемуКаталогу();
			ПутьКЛокальномуКэшуФайлов = ФайловыеФункцииКлиентПовтИсп.ПолучитьПерсональныеНастройкиРаботыСФайлами().ПутьКЛокальномуКэшуФайлов;
			ПолноеИмяФайла = ПутьКЛокальномуКэшуФайлов + СтрЗаменить(Наименование,"""","") + ".xml";
		#КонецЕсли
		ДвоичныеДанные = ПолучитьИзВременногоХранилища(Адрес);
		ДвоичныеДанные.Записать(ПолноеИмяФайла);
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Тема", "Реквизиты "+Наименование);
		ПараметрыФормы.Вставить("УчетнаяЗапись", АдресВыгрузки);
		ИмяФайла = ПолноеИмяФайла;
		Пока Истина Цикл
			Поз = Макс(Найти(ИмяФайла, "\"), Найти(ИмяФайла, "/"));
			Если Поз = 0 Тогда
				Прервать;
			КонецЕсли;
			ИмяФайла = Сред(ИмяФайла, Поз+1);
		КонецЦикла;
		Вложения = Новый СписокЗначений;
		НовыйЭлемент = Вложения.Добавить(ПолноеИмяФайла, ИмяФайла);
		ПараметрыФормы.Вставить("Вложения", Вложения);
		Форма=ПолучитьФорму("ОбщаяФорма.РедактированиеНовогоПисьма", ПараметрыФормы);
		Форма.Открыть();
	КонецЕсли;
	
	ЭтаФорма.Закрыть();

КонецПроцедуры

&НаКлиенте
Функция ВыбратьКаталогОбмена()
	
	РежимВыбора = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогКаталога = Новый ДиалогВыбораФайла(РежимВыбора);
	ДиалогКаталога.Каталог = Элементы.Каталог.ТекстРедактирования;
	ДиалогКаталога.Заголовок = НСтр("ru = 'Выберите каталог для выгрузки'");
	Если ДиалогКаталога.Выбрать() Тогда
		Возврат ДиалогКаталога.Каталог;
	КонецЕсли;
	
	Возврат "";
		
КонецФункции

&НаСервере
Функция ВыгрузитьРеквизитыОрганизации()
	
	КонтрагентXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Контрагент","4.02");
	КонтрагентXDTO.Установить("ИД", ИНН + "_" + КПП);
	КонтрагентXDTO.Установить("Наименование", Наименование);
	
	Если НЕ ЭлектронныеДокументыПереопределяемый.ЭтоФизЛицо(Организация) Тогда
		ЮрФизЛицоXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("РеквизитыЮрЛица","4.02");
		ЮрФизЛицоXDTO.Установить("ОфициальноеНаименование", НаименованиеПолное);
		Если ЗначениеЗаполнено(КПП) Тогда
			ЮрФизЛицоXDTO.Установить("КПП",КПП);
		КонецЕсли;	
		
		Если ЗначениеЗаполнено(Руководитель) Тогда
			РуководительXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Контрагент","4.02");
			РуководительXDTO.Установить ("ИД", Руководитель);
			ФизЛицоРуководительXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Контрагент.ФизЛицо","4.02");
			ФизЛицоРуководительXDTO.Установить("ПолноеНаименование", Руководитель);
			ФизЛицоРуководительXDTO.Установить("Должность", ДолжностьРуководителя);
			РуководительXDTO.Установить ("ФизЛицо", ФизЛицоРуководительXDTO);
			ЮрФизЛицоXDTO.Установить("Руководитель", РуководительXDTO);
		КонецЕсли;	
		Если ЗначениеЗаполнено(ЮридическийАдрес) Тогда
			АдресXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Адрес","4.02");
			АдресXDTO.Установить("Представление", ЮридическийАдрес);
			Если ЗначениеЗаполнено(ЗначенияПолейЮрАдрес) Тогда
				РазобратьАдрес(АдресXDTO, ЗначенияПолейЮрАдрес);
			КонецЕсли;
			ЮрФизЛицоXDTO.Установить("ЮридическийАдрес",АдресXDTO);                    
		КонецЕсли;
		ИмяСвойства = "ЮрЛицо";
	Иначе	
		ЮрФизЛицоXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("РеквизитыФизЛица","4.02");
		ЮрФизЛицоXDTO.Установить("ПолноеНаименование", НаименованиеПолное);
		Если ЗначениеЗаполнено(ЮридическийАдрес) Тогда
			АдресXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Адрес","4.02");
			АдресXDTO.Установить("Представление", ЮридическийАдрес);
			Если ЗначениеЗаполнено(ЗначенияПолейЮрАдрес) Тогда
				РазобратьАдрес(АдресXDTO, ЗначенияПолейЮрАдрес);
			КонецЕсли;
			ЮрФизЛицоXDTO.Установить("АдресРегистрации",АдресXDTO);                    
		КонецЕсли;	
		Если ЗначениеЗаполнено(СвидетельствоДата) И ЗначениеЗаполнено(СвидетельствоНомер) Тогда
			СвидетельствоXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("РеквизитыФизЛица.Свидетельство","4.02");
			СвидетельствоXDTO.Установить("Номер", 		СвидетельствоНомер);
			СвидетельствоXDTO.Установить("ДатаВыдачи", 	СвидетельствоДата);
			ЮрФизЛицоXDTO.Установить("Свидетельство", СвидетельствоXDTO);
		КонецЕсли;	
		
		ИмяСвойства = "ФизЛицо";
	КонецЕсли;	
	         
	ЮрФизЛицоXDTO.Установить("ИНН",ИНН);
	Если ЗначениеЗаполнено(ОКПО) Тогда
		ЮрФизЛицоXDTO.Установить("ОКПО", ОКПО);
	КонецЕсли;
	Если ЗначениеЗаполнено(ФактическийАдрес) Тогда
		АдресXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Адрес","4.02");
		АдресXDTO.Установить("Представление", ФактическийАдрес);
		Если ЗначениеЗаполнено(ЗначенияПолейФактАдрес) Тогда
			РазобратьАдрес(АдресXDTO, ЗначенияПолейФактАдрес);
		КонецЕсли;
		КонтрагентXDTO.Установить("Адрес",АдресXDTO);                    
	КонецЕсли;	
			
	КонтрагентXDTO.Установить(ИмяСвойства, ЮрФизЛицоXDTO);
	
	БанковскиеРеквизиты = ЭлектронныеДокументыПереопределяемый.ПолучитьБанковскиеРеквизиты(БанковскиеСчета.Выгрузить(Новый Структура("Выбран", Истина), "БанковскийСчет"));
	Если БанковскиеРеквизиты.Количество()>0 Тогда
	
		РасчетныеСчетаXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Контрагент.РасчетныеСчета","4.02"); 
	
		Для Каждого Счет из БанковскиеРеквизиты Цикл
			РасчетныйСчетXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("РасчетныйСчет","4.02");
			РасчетныйСчетXDTO.Установить("НомерСчета", Счет.РасчетныйСчет);
			БанкXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Банк","4.02");
			БанкXDTO.Установить("БИК", Счет.БИК);
			БанкXDTO.Установить("СчетКорреспондентский", Счет.КорреспондентскийСчет);
			БанкXDTO.Установить("Наименование", Строка(Счет.Банк));
			РасчетныйСчетXDTO.Установить("Банк", БанкXDTO);
			РасчетныеСчетаXDTO.РасчетныйСчет.Добавить(РасчетныйСчетXDTO);
		КонецЦикла;	
		КонтрагентXDTO.Установить("РасчетныеСчета", РасчетныеСчетаXDTO);
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Телефон) Тогда
		КонтактнаяИнформацияXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("КонтактнаяИнформация","4.02");
		КонтактнаяИнформацияXDTO.Установить("Тип", "Телефон рабочий");
		КонтактнаяИнформацияXDTO.Установить("Значение", Телефон);
	
		КонтактыXDTO = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Контрагент.Контакты","4.02");
		КонтактыXDTO.Контакт.Добавить(КонтактнаяИнформацияXDTO);
		КонтрагентXDTO.Установить("Контакты", КонтактыXDTO);
	КонецЕсли;	

	КонтрагентXDTO.Проверить();
	
	ИмяФайла = КаталогВременныхФайлов() + УникальныйИдентификатор + ".xml";
	НоваяЗаписьXML = Новый ЗаписьXML;
	НоваяЗаписьXML.ОткрытьФайл(ИмяФайла, "UTF-8");
	НоваяЗаписьXML.ЗаписатьОбъявлениеXML();
	ФабрикаXDTO.ЗаписатьXML(НоваяЗаписьXML, КонтрагентXDTO,,,, НазначениеТипаXML.Явное);
	НоваяЗаписьXML.Закрыть();
	ДвоичныеДанные  = Новый ДвоичныеДанные(ИмяФайла);
	
	УдалитьФайлы(ИмяФайла);
	
	Возврат ПоместитьВоВременноеХранилище(ДвоичныеДанные);

КонецФункции

&НаСервере
Процедура РазобратьАдрес (ОбъектXDTO, Значение)

	Значение = СтрЗаменить(Значение,"Индекс",		  "Почтовый индекс");
	Значение = СтрЗаменить(Значение,"НаселенныйПункт","Населенный пункт");
	ДопустимыеТипы = "Почтовый индекс, Страна, Регион, Район, Населенный пункт, Город, Улица, Дом, Корпус, Квартира";
	
	Для Индекс=1 По СтрЧислоСтрок(Значение) Цикл
		ТекСтрока = СтрПолучитьСтроку(Значение, Индекс);
		Тип = Сред(ТекСтрока,1,Найти(ТекСтрока,"=")-1);
		Если Найти(ДопустимыеТипы, Тип)>0 Тогда
    		АдресноеПоле = ЭлектронныеДокументыФорматОбмена.ПолучитьОбъектТипаCML("Адрес.АдресноеПоле","4.02");
			АдресноеПоле.Установить("Тип",Тип);
			АдресноеПоле.Установить("Значение",Сред(ТекСтрока,Найти(ТекСтрока,"=")+1));
			ОбъектXDTO.АдресноеПоле.Добавить(АдресноеПоле);
		КонецЕсли;
 	КонецЦикла
 

КонецПроцедуры

&НаСервере
Функция ОпределитьУчетнуюЗапись()
	
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	               |	УчетныеЗаписиЭлектроннойПочты.Ссылка
	               |ИЗ
	               |	Справочник.УчетныеЗаписиЭлектроннойПочты КАК УчетныеЗаписиЭлектроннойПочты
	               |ГДЕ
	               |	УчетныеЗаписиЭлектроннойПочты.ПометкаУдаления = ЛОЖЬ
	               |	И УчетныеЗаписиЭлектроннойПочты.ОтветственныйЗаОбработкуПисем = &ОтветственныйЗаОбработкуПисем
	               |	И УчетныеЗаписиЭлектроннойПочты.ИспользоватьДляОтправки = ИСТИНА";
	Запрос.УстановитьПараметр("ОтветственныйЗаОбработкуПисем",ПараметрыСеанса.ТекущийПользователь);
	Результат = Запрос.Выполнить().Выбрать();
	Если Результат.Количество()=1 Тогда
		Результат.Следующий();
		Возврат Результат.Ссылка;
	КонецЕсли;
	
	Возврат Справочники.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка();

КонецФункции	

&НаКлиенте
Процедура СпособВыгрузкиПриИзменении(Элемент)
	АдресВыгрузки = "";
	Если СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту") Тогда
		АдресВыгрузки = ОпределитьУчетнуюЗапись();
	КонецЕсли;
	ОбновитьФорму();
	ЭтаФорма.Модифицированность=Ложь;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация;
	СтруктураДанных = СформироватьСтруктуруРеквизитов();
	ЭлектронныеДокументыПереопределяемый.ПолучитьРеквизитыОрганизации(Организация,СтруктураДанных);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, СтруктураДанных);
	ТаблБанковскиеСчета = ЭлектронныеДокументыПереопределяемый.ПолучитьБанковскиеСчета(Организация);
	БанковскиеСчета.Загрузить(ТаблБанковскиеСчета);

КонецПроцедуры

&НаСервере
Функция СформироватьСтруктуруРеквизитов()
	
	СтруктураВозврата = Новый Структура();
	СтруктураВозврата.Вставить("Наименование");
	СтруктураВозврата.Вставить("НаименованиеПолное");
	СтруктураВозврата.Вставить("ИНН");
	СтруктураВозврата.Вставить("КПП");
	СтруктураВозврата.Вставить("ОКПО");
	СтруктураВозврата.Вставить("ДолжностьРуководителя");
	СтруктураВозврата.Вставить("Руководитель");
	СтруктураВозврата.Вставить("ЮрФизЛицо");
	СтруктураВозврата.Вставить("СвидетельствоДата");
	СтруктураВозврата.Вставить("СвидетельствоНомер");
	СтруктураВозврата.Вставить("ЮридическийАдрес");
	СтруктураВозврата.Вставить("ЗначенияПолейЮрАдрес");
	СтруктураВозврата.Вставить("ФактическийАдрес");
	СтруктураВозврата.Вставить("ЗначенияПолейФактАдрес");
	СтруктураВозврата.Вставить("Телефон");
	Возврат СтруктураВозврата;

КонецФункции

&НаКлиенте
Процедура КаталогНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	НовКаталог = ВыбратьКаталогОбмена();
	Если ЗначениеЗаполнено(НовКаталог) Тогда
		АдресВыгрузки = НовКаталог;
	КонецЕсли;	
КонецПроцедуры
    
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Не ЗначениеЗаполнено(СпособВыгрузки) Тогда
		СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог");
	КонецЕсли;	
	ОбновитьФорму();
КонецПроцедуры
	
&НаКлиенте
Процедура ОбновитьФорму()
	Если СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезЭлектроннуюПочту") Тогда
		Элементы.СтраницыПолучателей.ТекущаяСтраница = Элементы.СтраницаПисьмо;
	ИначеЕсли СпособВыгрузки = ПредопределенноеЗначение("Перечисление.СпособыОбменаЭД.ЧерезКаталог") Тогда
		Элементы.СтраницыПолучателей.ТекущаяСтраница = Элементы.СтраницаКаталог;
	КонецЕсли;
	Если ЮрФизЛицо = ЭлектронныеДокументыПереопределяемый.НайтиПеречисление("ЮрФизЛицо","ИндивидуальныйПредприниматель") Тогда
		Элементы.ГруппаРуководитель.Видимость=Ложь;
		Элементы.КПП.Видимость = Ложь;
		НадписьСвидетельство = "Свидетельство №" + СвидетельствоНомер + " от " + Формат(СвидетельствоДата,"ДФ=dd.MM.yyyy");
	Иначе
		Элементы.Свидетельство.Видимость = Ложь;
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура УчетнаяЗаписьНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	АдресВыгрузки = ПредопределенноеЗначение("Справочник.УчетныеЗаписиЭлектроннойПочты.ПустаяСсылка");
КонецПроцедуры
    
&НаКлиенте
Процедура БанковскиеСчетаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "БанковскийСчет" Тогда
		ОткрытьЗначение(Элемент.ТекущиеДанные.БанковскийСчет);
	КонецЕсли	
КонецПроцедуры

&НаКлиенте
Процедура БанковскиеСчетаВыбранПриИзменении(Элемент)
	Если Элементы.БанковскиеСчета.ТекущиеДанные.Выбран Тогда
		НомерСтроки=0;
		ТекНомер = Элементы.БанковскиеСчета.ТекущаяСтрока+1;
		Для Каждого Строка ИЗ БанковскиеСчета Цикл
			НомерСтроки=НомерСтроки + 1;
			Если НомерСтроки<>ТекНомер Тогда
				Строка.Выбран = Ложь;
			КонецЕсли;
		КонецЦикла	
	КонецЕсли	
КонецПроцедуры
        
&НаКлиенте
Процедура КаталогПриИзменении(Элемент)
	ЭтаФорма.Модифицированность=Ложь;
КонецПроцедуры

