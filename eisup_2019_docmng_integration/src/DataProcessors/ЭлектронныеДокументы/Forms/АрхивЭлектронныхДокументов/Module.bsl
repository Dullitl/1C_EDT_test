////////////////////////////////////////////////////////////////
// МЕТОДЫ ПО РАБОТЕ С ФОРМОЙ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Ответственный = ОбщегоНазначения.ТекущийПользователь();
	ЭлектронныеДокументы.УстановитьОтборВСпискеПоЭлементу(Список, "Ответственный", Ответственный);
	
	ОтветственныйИсх = Ответственный;
	ЭлектронныеДокументы.УстановитьОтборВСпискеПоЭлементу(СписокИсх, "Ответственный", ОтветственныйИсх);
	
	СтатусНераспакованногоПакета = Перечисления.СтатусыПакетовЭД.КРаспаковке;
	ЭлектронныеДокументы.УстановитьОтборВСпискеПоЭлементу(НераспакованныеПакеты, "Статус", СтатусНераспакованногоПакета);
	
	СтатусНеотправленногоПакета = Перечисления.СтатусыПакетовЭД.ПодготовленКОтправке;
	ЭлектронныеДокументы.УстановитьОтборВСпискеПоЭлементу(НеотправленныеПакеты, "Статус", СтатусНеотправленногоПакета);
	
	АктуальныеВидыЭД = ЭлектронныеДокументыПереопределяемый.АктуальныеВидыЭД();
	Элементы.ВидЭД.СписокВыбора.ЗагрузитьЗначения(АктуальныеВидыЭД);
	Элементы.ВидЭДИсх.СписокВыбора.ЗагрузитьЗначения(АктуальныеВидыЭД);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////
// МЕТОДЫ ПО РАБОТЕ С БЫСТРЫМИ ОТБОРАМИ

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ЭлектронныеДокументы.ОтборПоЭлементуПриЗагрузкеИзНастроек(ЭтаФорма, Список, "ВидЭД",	Настройки);
	ЭлектронныеДокументы.ОтборПоЭлементуПриЗагрузкеИзНастроек(ЭтаФорма, Список, "СтатусЭД",	Настройки);
	
	ЭлектронныеДокументы.ОтборПоЭлементуПриЗагрузкеИзНастроек(ЭтаФорма, СписокИсх, "ВидЭДИсх",		Настройки);
	ЭлектронныеДокументы.ОтборПоЭлементуПриЗагрузкеИзНастроек(ЭтаФорма, СписокИсх, "СтатусЭДИсх",	Настройки);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(Список, "Ответственный", Ответственный);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЭДПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(Список, "ВидЭД", ВидЭД);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЭДПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(Список, "СтатусЭД", СтатусЭД);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНераспакованногоПакетаПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(НераспакованныеПакеты, "Контрагент", КонтрагентНераспакованногоПакета);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусНераспакованногоПакетаПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(НераспакованныеПакеты, "Статус", СтатусНераспакованногоПакета);
	
КонецПроцедуры

&НаКлиенте
Процедура КонтрагентНеотправленногоПакетаПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(НеотправленныеПакеты, "Контрагент", КонтрагентНеотправленногоПакета);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусНеотправленногоПакетаПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(НеотправленныеПакеты, "Статус", СтатусНеотправленногоПакета);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтветственныйИсхПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(СписокИсх, "Ответственный", ОтветственныйИсх);
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЭДИсхПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(СписокИсх, "ВидЭДИсх", ВидЭДИсх);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусЭДИсхПриИзменении(Элемент)
	
	УстановитьОтборВСпискеПоЭлементуКлиент(СписокИсх, "СтатусЭДИсх", СтатусЭДИсх);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОТБОРА ПО ЭЛЕМЕНТУ НА КЛИЕНТЕ

&НаКлиенте
Процедура УстановитьОтборВСпискеПоЭлементуКлиент(СписокЭД, ВидЭлемента, ЗначениеЭлемента)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(СписокЭД.Отбор, ВидЭлемента, ЗначениеЭлемента, ВидСравненияКомпоновкиДанных.Равно,,ЗначениеЗаполнено(ЗначениеЭлемента));
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	НоваяСтруктура = Неопределено;
	Если ЭтоПроизвольныйДокумент(ВыбраннаяСтрока, НоваяСтруктура) Тогда
		ОткрытьФорму("Документ.ПроизвольныйЭД.Форма.ФормаДокумента", НоваяСтруктура);
		Возврат;
	КонецЕсли;
	
	ЭлектронныеДокументыКлиент.ОткрытьЭДДляПросмотра(ВыбраннаяСтрока);
	
КонецПроцедуры

&НаСервере
Функция ЭтоПроизвольныйДокумент(Объект, СтруктураПараметров)
	
	Если ТипЗнч(Объект.ВладелецФайла) = Тип("ДокументСсылка.ПроизвольныйЭД") Тогда
		СтруктураПараметров = Новый Структура("Объект", Объект.ВладелецФайла);
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ УСТАНОВКИ ОТВЕТСТВЕННОГО

&НаКлиенте
Процедура УстановитьОтветственного(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ВыборГруппПользователей", Ложь);
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе", Истина);
	ПараметрыФормы.Вставить("РежимВыбора", Истина);
	
	НовыйОтветственный = ОткрытьФормуМодально("Справочник.Пользователи.ФормаВыбора", ПараметрыФормы, ЭтаФорма);
	
	Если НЕ НовыйОтветственный = Неопределено Тогда
		КоличествоОбработанных = УстановитьОтветственногоЭД(Элементы.Список.ВыделенныеСтроки, НовыйОтветственный);
		ЭлектронныеДокументыКлиент.ОповеститьПользователяОСменеОтветственного(КоличествоОбработанных, Элементы.Список, НовыйОтветственный);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УстановитьОтветственногоЭД(Знач СписокОбъектов, НовыйОтветственный)
	
	Возврат УстановитьЗначениеРеквизитаЭД("Ответственный", СписокОбъектов, НовыйОтветственный); 
	
КонецФункции

////////////////////////////////////////////////////////////////

&НаСервере
Функция УстановитьЗначениеРеквизитаЭД(ВидПараметра, Знач СписокОбъектов, Знач ЗначениеПараметра)
	
	МассивЭД = Новый Массив();
	КоличествоОбработанных = 0;
	
	Для Каждого ЭлСписка Из СписокОбъектов Цикл
		Если ТипЗнч(ЭлСписка) = Тип("СтрокаГруппировкиДинамическогоСписка") Тогда
			Продолжить;
		КонецЕсли;
		МассивЭД.Добавить(ЭлСписка.Ссылка);
	КонецЦикла;
	
	Если МассивЭД = 0 Тогда
		Возврат КоличествоОбработанных;
	КонецЕсли;
	
	Если ВидПараметра = "Ответственный" Тогда
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	ЭДПрисоединенныеФайлы.Ссылка,
		                      |	ЭДПрисоединенныеФайлы.Ответственный
		                      |ИЗ
		                      |	Справочник.ЭДПрисоединенныеФайлы КАК ЭДПрисоединенныеФайлы
		                      |ГДЕ
		                      |	ЭДПрисоединенныеФайлы.Ссылка В(&МассивЭД)
		                      |	И ЭДПрисоединенныеФайлы.Ответственный <> &Ответственный");
		
		Запрос.УстановитьПараметр("МассивЭД", 		МассивЭД);
		Запрос.УстановитьПараметр("Ответственный",	ЗначениеПараметра);
	Иначе
		Возврат 0;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	НачатьТранзакцию();
	
	Пока Выборка.Следующий() Цикл
		
		Попытка
			ЗаблокироватьДанныеДляРедактирования(Выборка.Ссылка);
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось заблокировать электронный документ (%Объект%). %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Объект%",         Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщийТекстОшибки = ОбщийТекстОшибки+Символы.ПС+ТекстОшибки;
			ОтменитьТранзакцию();
			ВызватьИсключение ТекстОшибки;
		КонецПопытки;
		
		ОбъектОбработки = Выборка.Ссылка.ПолучитьОбъект();
		
		Если ВидПараметра = "Ответственный" Тогда
			ОбъектОбработки.Ответственный = ЗначениеПараметра;
		КонецЕсли;
			
		Попытка
			ОбъектОбработки.Записать();
			КоличествоОбработанных = КоличествоОбработанных + 1;
		Исключение
			ТекстОшибки = НСтр("ru='Не удалось выполнить запись электронного документа (%Объект%). %ОписаниеОшибки%'");
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%Объект%",         Выборка.Ссылка);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ОписаниеОшибки%", КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			ОбщийТекстОшибки = ОбщийТекстОшибки+Символы.ПС+ТекстОшибки;
			ОтменитьТранзакцию();
			ВызватьИсключение ТекстОшибки;
		КонецПопытки
		
	КонецЦикла;
	
	ЗафиксироватьТранзакцию();
	
	Возврат КоличествоОбработанных;
	
КонецФункции

////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ СРАВНЕНИЯ ЭД

&НаКлиенте
Процедура СравнитьДанныеЭД(ТекущийСписок)
	
	#Если НЕ ТолстыйКлиентУправляемоеПриложение И НЕ ТолстыйКлиентОбычноеПриложение Тогда
		Сообщить(НСтр("ru='Сравнение электронных документов можно сделать только в режиме толстого клиента.'"));
		Возврат;
	#Иначе
		Если ТекущийСписок.ТекущиеДанные = Неопределено
			ИЛИ ТекущийСписок.ВыделенныеСтроки.Количество() <> 2 Тогда
			Возврат;
		КонецЕсли;
		ТекущийЭД 		= ТекущийСписок.ВыделенныеСтроки.Получить(0);
		ПослВерсияЭД 	= ТекущийСписок.ВыделенныеСтроки.Получить(1);
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ЭДПервый", ПослВерсияЭД);
		СтруктураПараметров.Вставить("ЭДВторой", ТекущийЭД);
		ЭлектронныеДокументыКлиент.ВыполнитьСравнениеЭД(СтруктураПараметров);
	#КонецЕсли
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьДанныеЭДВх(Команда)
	
	СравнитьДанныеЭД(Элементы.Список);
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьДанныеЭДИсх(Команда)
	
	СравнитьДанныеЭД(Элементы.СписокИсх);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАСПАКОВКИ ПЭД

&НаКлиенте
Процедура Распаковать(Команда)
	
	// распаковываем только выделенные строки
	ЭлектронныеДокументыКлиент.РаспаковатьМассивПакетовЭД(Элементы.НераспакованныеПакеты.ВыделенныеСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура Отправить(Команда)
	
	// отправить только выделенные строки
	ЗаголовокОповещения = НСтр("ru = 'Обмен электронными документами'");
	ТекстОповещения = НСтр("ru = 'Отправленных пакетов нет'");
	КолОтправленныхПакетов = ЭлектронныеДокументыКлиент.ОтправитьМассивПакетовЭД(Элементы.НеотправленныеПакеты.ВыделенныеСтроки);
	Если ЗначениеЗаполнено(КолОтправленныхПакетов) Тогда
		ТекстОповещения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Отправлено пакетов: (%1)'"), КолОтправленныхПакетов);
	КонецЕсли;
	ПоказатьОповещениеПользователя(ЗаголовокОповещения, , ТекстОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьСостояниеЭД" Тогда
		Элементы.Список.Обновить();
		Элементы.СписокИсх.Обновить();
		Элементы.НераспакованныеПакеты.Обновить();
		Элементы.НеотправленныеПакеты.Обновить();
		Элементы.ВсеПакеты.Обновить();
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ УСТАНОВКИ СТАТУСОВ

&НаКлиенте
Процедура УстановитьСтатусКРаспаковке(Команда)
	
	ТаблицаПакетов = "НераспакованныеПакеты";
	Количество = УстановитьСтатусПакетов(ТаблицаПакетов, ПредопределенноеЗначение("Перечисление.СтатусыПакетовЭД.КРаспаковке"));
	ТекстОповещения = НСтр("ru = 'Изменен статус пакетов на ""К распаковке"": (%1) '");
	ТекстОповещения = СтрЗаменить(ТекстОповещения, "%1", Количество);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Обмен электронными документами'"), , ТекстОповещения);
	Элементы[ТаблицаПакетов].Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусОтменен(Команда)
	
	Если Команда.Имя = "УстановитьСтатусОтмененНераспакованныеПакеты" Тогда
		ТаблицаПакетов = "НераспакованныеПакеты";
	Иначе
		ТаблицаПакетов = "НеотправленныеПакеты";
	КонецЕсли;
	
	Количество = УстановитьСтатусПакетов(ТаблицаПакетов, ПредопределенноеЗначение("Перечисление.СтатусыПакетовЭД.Отменен"));
	ТекстОповещения = НСтр("ru = 'Изменен статус пакетов на ""Отменен"": (%1) '");
	ТекстОповещения = СтрЗаменить(ТекстОповещения, "%1", Количество);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Обмен электронными документами'"), , ТекстОповещения);
	Элементы[ТаблицаПакетов].Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьСтатусПодготовленКОтправке(Команда)
	
	ТаблицаПакетов = "НеотправленныеПакеты";
	Количество = УстановитьСтатусПакетов(ТаблицаПакетов, ПредопределенноеЗначение("Перечисление.СтатусыПакетовЭД.ПодготовленКОтправке"));
	ТекстОповещения = НСтр("ru = 'Изменен статус пакетов на ""Подготовлен к отправке"": (%1) '");
	ТекстОповещения = СтрЗаменить(ТекстОповещения, "%1", Количество);
	ПоказатьОповещениеПользователя(НСтр("ru = 'Обмен электронными документами'"), , ТекстОповещения);
	Элементы[ТаблицаПакетов].Обновить();
	
КонецПроцедуры

&НаСервере
Функция УстановитьСтатусПакетов(ТаблицаПакетов, СтатусПакета)
	
	КоличествоИзмененных = 0;
	Для Каждого СтрокаТаблицы Из Элементы[ТаблицаПакетов].ВыделенныеСтроки Цикл
		Попытка
			Пакет = СтрокаТаблицы.Ссылка.ПолучитьОбъект();
			Пакет.СтатусПакета = СтатусПакета;
			Пакет.Записать();
			КоличествоИзмененных = КоличествоИзмененных + 1;
		Исключение
			ТекстСообщения = КраткоеПредставлениеОшибки(ИнформацияОбОшибке());
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЭлектронныеДокументы.ОбработатьИсключениеПоЭДНаСервере(НСтр("ru = 'изменение статуса пакетов ЭД'"), ТекстОшибки, ТекстСообщения);
		КонецПопытки;
	КонецЦикла;
	Возврат КоличествоИзмененных;
	
КонецФункции

