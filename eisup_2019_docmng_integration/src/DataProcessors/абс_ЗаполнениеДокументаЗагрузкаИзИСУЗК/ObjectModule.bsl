
Перем Прокси Экспорт;

Процедура Инициализировать(Объект, ИмяТабличнойЧасти = Неопределено, ТаблицаВозврата = Неопределено) Экспорт
	
	Если ИмяТабличнойЧасти = "ФизическиеЛица" Тогда
						
		ТаблицаДокумента = Объект.ФизическиеЛица.ВыгрузитьКолонки();
		Для Каждого FLDataТекущий Из ТаблицаВозврата  Цикл
			
			ФизЛицоНайдено = Ложь;
			Попытка
				Код = Число(СокрЛП(FLDataТекущий.Code));
				Код = СтрЗаменить(Строка(Код), " ", "");
				Код = СтрЗаменить(Код, Символы.НПП, "");
			Исключение
				Код = СокрЛП(FLDataТекущий.Code);
			КонецПопытки;
			ФизЛицо = Справочники.ФизическиеЛица.НайтиПоРеквизиту("абс_КодИСУЗК", Код);
			
			Если ЗначениеЗаполнено(ФизЛицо) Тогда
				ФизЛицоНайдено = Истина;
				//ФИО = СокрЛП(ФизЛицо.Наименование);
				//текФИО = СтрЗаменить(ФИО," ",Символы.ПС);
				//Если СтрЧислоСтрок(текФИО)=3 Тогда
				//	Фамилия = СтрПолучитьСтроку(текФИО, 1);
				//	Имя = СтрПолучитьСтроку(текФИО, 2);
				//	Отчество = СтрПолучитьСтроку(текФИО, 3);
				//ИначеЕсли СтрЧислоСтрок(текФИО)=2 Тогда
				//	Фамилия = СтрПолучитьСтроку(текФИО, 1);
				//	Имя = СтрПолучитьСтроку(текФИО, 2);
				//	Отчество = "";
				//КонецЕсли;

				//Если СокрЛП(Фамилия) = СокрЛП(FLDataТекущий.Family) И
				//	 СокрЛП(Имя) = СокрЛП(FLDataТекущий.Name) И
				//	 СокрЛП(Отчество) = СокрЛП(FLDataТекущий.Patronym) Тогда
				//	 ФизЛицоНайдено = Истина;
				//КонецЕсли;
				
				//ФИО_ИСУЗК = СокрЛП(FLDataТекущий.Family) + " "+ СокрЛП(FLDataТекущий.Name)+ " " + СокрЛП(FLDataТекущий.Patronym);
				//Если ФИО = ФИО_ИСУЗК Тогда
				//	ФизЛицоНайдено = Истина;
				//Иначе
				//	ФизЛицоНайдено = Ложь;
				//	ФизЛицо = Справочники.ФизическиеЛица.ПустаяСсылка();
				//КонецЕсли;
	
			КонецЕсли;
				
			Если НЕ ФизЛицоНайдено Тогда
			
				НоваяСтрока = ТаблицаДокумента.Добавить();
				НоваяСтрока.Фл = Истина;
				НоваяСтрока.КодФизЛица = Код;
				НоваяСтрока.Фамилия = СокрЛП(FLDataТекущий.Family);
				НоваяСтрока.Имя = СокрЛП(FLDataТекущий.Name);
				НоваяСтрока.Отчество = СокрЛП(FLDataТекущий.Patronym);
				НоваяСтрока.ДатаРождения = FLDataТекущий.DateOfBirth;
				НоваяСтрока.ФизЛицо =  ФизЛицо;
			КонецЕсли;
				
		КонецЦикла;
    			
		Объект.ФизическиеЛица.Загрузить(ТаблицаДокумента);
		
	ИначеЕсли ИмяТабличнойЧасти = "Сотрудники" Тогда
		
		ТаблицаДокумента = Объект.Сотрудники.ВыгрузитьКолонки();
		//Сообщить(ТаблицаДокумента.Количество());
		Для Каждого EmpDataТекущий Из ТаблицаВозврата Цикл
			
			Если Не ЗначениеЗаполнено(EmpDataТекущий.Job) ИЛИ ЗначениеЗаполнено(EmpDataТекущий.DateOfDismissal) Тогда
				Продолжить;
			КонецЕсли;
			
			СотрудникНайден = Ложь;
			
			Попытка
				КодСотр = Число(СокрЛП(EmpDataТекущий.Code));
			Исключение
				КодСотр = СокрЛП(EmpDataТекущий.Code);
			КонецПопытки;
			КодСотр = СтрЗаменить(Строка(КодСотр), " ", "");
			КодСотр = СтрЗаменить(КодСотр, Символы.НПП, "");
			КодСотр = ""+Организация.Префикс+КодСотр;
			
			Если СтрДлина(КодСотр) > 10 Тогда
				КодСотр = Лев(КодСотр, 4)+Прав(КодСотр, СтрДлина(КодСотр)-7);
			КонецЕсли;
			
			Сотрудник = Справочники.СотрудникиОрганизаций.НайтиПоРеквизиту("абс_КодИСУЗК", СокрЛП(КодСотр));
			
			Попытка
				КодПодр = Число(СокрЛП(EmpDataТекущий.CodeDep));
				КодПодр = СтрЗаменить(Строка(КодПодр), " ", "");
				КодПодр = СтрЗаменить(КодПодр, Символы.НПП, "");
			Исключение
				КодПодр = СокрЛП(EmpDataТекущий.CodeDep);
			КонецПопытки;

			КодПодразделения = КодПодр;
			Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоРеквизиту("абс_КодИСУЗК", КодПодр, , Организация);
			Должность = Справочники.ДолжностиОрганизаций.НайтиПоНаименованию(СокрЛП(EmpDataТекущий.Job), Истина);
           			
			Если ЗначениеЗаполнено(Сотрудник) Тогда
				Если СОтрудник.ТекущееПодразделениеОрганизации = Подразделение И
					СОтрудник.Должность = Должность Тогда
					СотрудникНайден = Истина;
				КонецЕсли;
			КонецЕсли;	
				
	        Если Не СотрудникНайден Тогда
			
				НоваяСтрока = ТаблицаДокумента.Добавить();
				НоваяСтрока.Фл = Истина;
				НоваяСтрока.Код = СокрЛП(КодСотр);
				НоваяСтрока.ФИО = СокрЛП(EmpDataТекущий.FIO);
				текФИО = СтрЗаменить(НоваяСтрока.ФИО," ",Символы.ПС);
				Если СтрЧислоСтрок(текФИО) >= 3 Тогда
					НоваяСтрока.Фамилия = СтрПолучитьСтроку(текФИО, 1);
					НоваяСтрока.Имя = СтрПолучитьСтроку(текФИО, 2);
					НоваяСтрока.Отчество = СтрПолучитьСтроку(текФИО, 3);
				ИначеЕсли СтрЧислоСтрок(текФИО)=2 Тогда
					НоваяСтрока.Фамилия = СтрПолучитьСтроку(текФИО, 1);
					НоваяСтрока.Имя = СтрПолучитьСтроку(текФИО, 2);
					НоваяСтрока.Отчество = "";
				ИначеЕсли СтрЧислоСтрок(текФИО)=1 Тогда
					НоваяСтрока.Фамилия = СтрПолучитьСтроку(текФИО, 1);
                КонецЕсли;
						
				Попытка 
					КодФЛ = Число(СокрЛП(EmpDataТекущий.CodeFL));
					КодФЛ = СтрЗаменить(Строка(КодФЛ), " ", "");
					КодФЛ = СтрЗаменить(КодФЛ, Символы.НПП, "");
				Исключение
					КодФЛ = СокрЛП(EmpDataТекущий.CodeFL);
				КонецПопытки;
				НоваяСтрока.ФизЛицо = Справочники.ФизическиеЛица.НайтиПоРеквизиту("абс_КодИСУЗК", КодФЛ);
				НоваяСтрока.КодФизЛица = КодФЛ;
				
				НоваяСтрока.Сотрудник = Сотрудник;
				НоваяСтрока.ДатаРождения = EmpDataТекущий.DataOfBirth;
				НоваяСтрока.КодДолжности = СокрЛП(EmpDataТекущий.CodeJob);
				НоваяСтрока.НаименованиеДолжности = EmpDataТекущий.Job;
				НоваяСтрока.Грейд = EmpDataТекущий.Grade;
				НоваяСтрока.НаименованиеПодразделения = EmpDataТекущий.DepName;
				НоваяСтрока.КодЦФО = "";
				НоваяСтрока.НаименованиеЦФО = "";
				НоваяСтрока.ДатаПриема = EmpDataТекущий.DateOfAdmission;
				НоваяСтрока.ДатаУвольнения = EmpDataТекущий.DateOfDismissal;
				
				НоваяСтрока.КодПодразделения = КодПодразделения;
				НоваяСтрока.Подразделение = Подразделение;
				НоваяСтрока.Должность = Должность;
				Если НЕ НоваяСтрока.Сотрудник.Пустая() Тогда
					НоваяСтрока.Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("абс_Сотрудник", НоваяСтрока.Сотрудник);
				Иначе
					НоваяСтрока.Пользователь = Неопределено;
				КонецЕсли;
				НоваяСтрока.ЛогинОС = EmpDataТекущий.Login;
			КонецЕсли;				
		КонецЦикла;
        		
		Объект.Сотрудники.Загрузить(ТаблицаДокумента);
		
	ИначеЕсли ИмяТабличнойЧасти = "Подразделения" Тогда

		ТаблицаДокумента = Объект.Подразделения.ВыгрузитьКолонки();
		//Сообщить(ТаблицаДокумента.Количество());
		Для Каждого DepDataТекущий Из ТаблицаВозврата Цикл
	
			ПодразделениеНайдено = Ложь;
			Попытка
				КодПодр = Число(СокрЛП(DepDataТекущий.Code));
				КодПодр = СтрЗаменить(Строка(КодПодр), " ", "");
				КодПодр = СтрЗаменить(КодПодр, Символы.НПП, "");
			Исключение
				КодПодр = СокрЛП(DepDataТекущий.Code);
			КонецПопытки;

			Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоРеквизиту("абс_КодИСУЗК", КодПодр, , Объект.Организация);

			Если ЗначениеЗаполнено(Подразделение) Тогда
				ПодразделениеНайдено = Истина;
			КонецЕсли;
			
			Если Не ПодразделениеНайдено Тогда
				НоваяСтрока = ТаблицаДокумента.Добавить();
				НоваяСтрока.Фл = Истина;
				НоваяСтрока.Подразделение = Подразделение;
				НоваяСтрока.Код = КодПодр;
				НоваяСтрока.Наименование = DepDataТекущий.Name;
				НоваяСтрока.ПолноеНаименование = DepDataТекущий.FullName;
				НоваяСтрока.Категория = DepDataТекущий.Category;
				НоваяСтрока.Статус = DepDataТекущий.Status;
				НоваяСтрока.ДатаСоздания = DepDataТекущий.DateBegin;
				НоваяСтрока.ДатаРасформирования = DepDataТекущий.DateEnd;
				
				Попытка
					КодРодителя = Число(СокрЛП(DepDataТекущий.ParentCode));
					КодРодителя = СтрЗаменить(Строка(КодРодителя), " ", "");
					КодРодителя = СтрЗаменить(КодРодителя, Символы.НПП, "");
				Исключение
					КодРодителя = СокрЛП(DepDataТекущий.ParentCode);
				КонецПопытки;
				
				НоваяСтрока.КодРодителя = КодРодителя;
				
				Если ЗначениеЗаполнено(КодРодителя) Тогда
					НоваяСтрока.Родитель = Справочники.ПодразделенияОрганизаций.НайтиПоРеквизиту("абс_КодИСУЗК", КодРодителя, , Объект.Организация);
				КонецЕсли;	
				НоваяСтрока.Используется = DepDataТекущий.Actual;
				НоваяСтрока.Уровень = DepDataТекущий.Level;
			КонецЕсли;
							
		КонецЦикла;
	
		Объект.Подразделения.Загрузить(ТаблицаДокумента);
		
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьФизЛицо(Код,Фамилия,Имя,Отчество,ДатаРождения) Экспорт
	
	СтруктураВозврата = Новый Структура("ФизЛицо,Описание");
	СтруктураВозврата.Вставить("Описание","");
	Описание = "";
	ФизЛицо = Справочники.ФизическиеЛица.НайтиПоРеквизиту("абс_КодИСУЗК", Код);
	ФИО = Фамилия+" "+Имя+" "+Отчество;
	Если ЗначениеЗаполнено(ФизЛицо) Тогда
		//АБС Заявка 9266 Начало
		Если Найти(""+ФизЛицо,Имя)>0 И Найти(""+ФизЛицо,Отчество)>0 И Найти(""+ФизЛицо,Фамилия)>0 Тогда
			
			СтруктураВозврата.Вставить("ФизЛицо", ФизЛицо);
			СтруктураВозврата.Вставить("Описание", "Физ. Лицо найдено "+ФизЛицо);
			
		Иначе  //АБС Заявка 9266 Конец
			//Требуется обновить ФИО и сотрудника
			НаборЗаписей = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ФизЛицо.Установить(ФизЛицо.Ссылка);
			НаборЗаписей.Прочитать();
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.ФизЛицо = ФизЛицо.Ссылка;
			НоваяЗапись.Фамилия = Фамилия;
			НоваяЗапись.Период = ТекущаяДата();
			НоваяЗапись.Имя = Имя;
			НоваяЗапись.Отчество = Отчество;
			НаборЗаписей.Записать(Истина);
			Об = ФизЛицо.ПолучитьОбъект();
			Об.Наименование = ФИО;
			Об.ОбменДанными.Загрузка = Истина;
			Об.Записать();
			СтруктураВозврата.Вставить("Описание","Изменены ФИО физ.лица "+ФизЛицо+" ");
		КонецЕсли;	
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ФИОФизЛицСрезПоследних.ФизЛицо
		               |ИЗ
		               |	РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
		               |ГДЕ
		               |	ФИОФизЛицСрезПоследних.Фамилия = &Фамилия
		               |	И ФИОФизЛицСрезПоследних.Имя = &Имя
		               |	И ФИОФизЛицСрезПоследних.Отчество = &Отчество
		               |	И ФИОФизЛицСрезПоследних.ФизЛицо.абс_КодИСУЗК = &Код";
		Запрос.УстановитьПараметр("Фамилия",Фамилия);
		Запрос.УстановитьПараметр("Имя",Имя);
		Запрос.УстановитьПараметр("Отчество",Отчество);
		Запрос.УстановитьПараметр("Код",СокрЛП(Код));
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			СтруктураВозврата.Вставить("ФизЛицо",Выборка.ФизЛицо);
			СтруктураВозврата.Вставить("Описание","");
		Иначе
			НовыйФЛ = Справочники.ФизическиеЛица.СоздатьЭлемент();
			НовыйФЛ.абс_КодИСУЗК = СокрЛП(Код);
			НовыйФЛ.ДатаРождения = ДатаРождения;
			НовыйФЛ.Наименование = Фамилия+" "+Имя+" "+Отчество;
			НовыйФЛ.УстановитьНовыйКод();
			НовыйФЛ.Записать();
			
			НайденноеФизЛицо = НовыйФЛ.Ссылка;
			НаборЗаписей = РегистрыСведений.ФИОФизЛиц.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.ФизЛицо.Установить(НайденноеФизЛицо);
			НаборЗаписей.Прочитать();
			НоваяЗапись = НаборЗаписей.Добавить();
			НоваяЗапись.ФизЛицо = НайденноеФизЛицо;
			НоваяЗапись.Фамилия = Фамилия;
			НоваяЗапись.Период = '198001010000';
			НоваяЗапись.Имя = Имя;
			НоваяЗапись.Отчество = Отчество;
			НаборЗаписей.Записать(Истина);
			СтруктураВозврата.Вставить("ФизЛицо",НайденноефизЛицо);
			СтруктураВозврата.Вставить("Описание","#Создано физ. лицо "+НайденноеФизЛицо+" с кодом ИСУЗК "+Код+" под пользователем "+ГлЗначениеПеременной("ГлТекущийПользователь")+" время создания "+ТекущаяДата()+""+Символы.ПС);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтруктураВозврата;
КонецФункции

Функция СоздатьПодразделение(СтрокаДанных) Экспорт
	
	СтруктураВозврата = Новый Структура("Подразделение,Описание");
	СтруктураВозврата.Вставить("Подразделение",Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	СтруктураВозврата.Вставить("Описание","");
	
	Если ЗначениеЗаполнено(СтрокаДанных.КодРодителя) Тогда
		Родитель = Справочники.ПодразделенияОрганизаций.НайтиПоРеквизиту("абс_КодИСУЗК", СтрокаДанных.КодРодителя, , Организация);
		Если Родитель.Пустая() Тогда
			СтруктураВозврата.Описание = "Не найдено подразделение с кодом ИСУЗК "+СтрокаДанных.КодРодителя+", которое указано в качестве родителя";
			Возврат СтруктураВозврата;
		КонецЕсли;
	Иначе
		Родитель = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
	КонецЕсли;
	
	Подразделение = Справочники.ПодразделенияОрганизаций.НайтиПоРеквизиту("абс_КодИСУЗК", СтрокаДанных.Код, , Организация);
	
	Если Не ЗначениеЗаполнено(Подразделение) И ЗначениеЗаполнено(Организация) Тогда
		
		НовоеПодразделение = Справочники.ПодразделенияОрганизаций.СоздатьЭлемент();
		НовоеПодразделение.абс_КодИСУЗК = СокрЛП(СтрокаДанных.Код);
		НовоеПодразделение.Владелец = Организация;
		НовоеПодразделение.Наименование = СтрокаДанных.Наименование;
		НовоеПодразделение.Родитель = Родитель;
		НовоеПодразделение.ОбменДанными.Загрузка = Истина;
		НовоеПодразделение.абс_Используется = СтрокаДанных.Используется;
		НовоеПодразделение.УстановитьНовыйКод();
		НовоеПодразделение.Записать();
		СтруктураВозврата.Вставить("Описание","#Создано подразделение "+НовоеПодразделение.Ссылка+" с кодом ИСУЗК "+СтрокаДанных.Код+" под пользователем "+ГлЗначениеПеременной("ГлТекущийПользователь")+" время создания "+ТекущаяДата());
		Подразделение = НовоеПодразделение.Ссылка;
		СтруктураВозврата.Вставить("Подразделение",Подразделение);
		
	Иначе 
		Если ЗначениеЗаполнено(Подразделение) Тогда
			СтруктураВозврата.Вставить("Подразделение",Подразделение);
		КонецЕсли;
		Если Подразделение.Родитель <> Родитель Тогда
			СтруктураВозврата.Описание = "Код ИСУЗК родителя найденного подразделения не соответствует загруженному";
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция СоздатьСотрудника(СтрокаТабличнойЧасти) Экспорт
	
	СтруктураВозврата = Новый Структура("Сотрудник,Описание");
	СтруктураВозврата.Вставить("Описание","");
	СтруктураВозврата.Вставить("Сотрудник",Справочники.СотрудникиОрганизаций.ПустаяСсылка());
	
	Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Должность) Тогда
		СтрокаТабличнойЧасти.Должность = СоздатьДолжность(СтрокаТабличнойЧасти.КодДолжности, СтрокаТабличнойЧасти.НаименованиеДолжности);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.ФизЛицо) И ЗначениеЗаполнено(СтрокаТабличнойЧасти.Подразделение)  Тогда
		
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сотрудник) Тогда
			НовыйСотрудник = СтрокаТабличнойЧасти.Сотрудник.ПолучитьОбъект();
		Иначе
			НовыйСотрудник = Справочники.СотрудникиОрганизаций.СоздатьЭлемент();
		КонецЕсли;	
		НовыйСотрудник.Актуальность = Истина;
		НовыйСотрудник.Физлицо = СтрокаТабличнойЧасти.ФизЛицо;
		НовыйСотрудник.абс_КодИСУЗК = СокрЛП(СтрокаТабличнойЧасти.Код);
		НовыйСотрудник.Наименование = ""+?(ПустаяСтрока(СтрокаТабличнойЧасти.ФИО), СтрокаТабличнойЧасти.ФизЛицо.Наименование, СтрокаТабличнойЧасти.ФИО);
		НовыйСотрудник.ДатаПриемаНаРаботу = СтрокаТабличнойЧасти.ДатаПриема;
		НовыйСотрудник.ДатаУвольнения = СтрокаТабличнойЧасти.ДатаУвольнения;
		НовыйСотрудник.ПодразделениеОрганизации = СтрокаТабличнойЧасти.Подразделение;
		НовыйСотрудник.Должность = СтрокаТабличнойЧасти.Должность;
		НовыйСотрудник.ОбособленноеПодразделение = СтрокаТабличнойЧасти.Подразделение.Владелец;
		НовыйСотрудник.Организация = Организация;
		НовыйСотрудник.ВидДоговора = Перечисления.ВидыДоговоровСФизЛицами.ТрудовойДоговор;
		НовыйСотрудник.ВидЗанятости = Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы;
		НовыйСотрудник.УстановитьНовыйКод();
		НовыйСотрудник.Записать();
		СтруктураВозврата.Вставить("Сотрудник",НовыйСотрудник.Ссылка);
		СтруктураВозврата.Вставить("Описание","#Создан сотрудник "+НовыйСотрудник.Ссылка+" с кодом "+СтрокаТабличнойЧасти.Код+" под пользователем "+ГлЗначениеПеременной("ГлТекущийПользователь")+" время создания "+ТекущаяДата()+""+Символы.ПС);
		СформироватьПриемНаРаботу(НовыйСотрудник.Ссылка,СтрокаТабличнойЧасти.Подразделение,СтрокаТабличнойЧасти.Должность,Сотрудники);
	КонецЕсли;
	
	Возврат СтруктураВозврата;	
КонецФункции

Функция СоздатьДолжность(Код, Наименование, Обновлять = Ложь)
	
	Должность = Справочники.ДолжностиОрганизаций.НайтиПоНаименованию(Наименование,Истина);
	
	Если Не ЗначениеЗаполнено(Должность) Тогда
		НоваяДолжность = Справочники.ДолжностиОрганизаций.СоздатьЭлемент();
		НоваяДолжность.Наименование = Наименование;
		НоваяДолжность.Код = СокрЛП(Код);
		НоваяДолжность.ОбменДанными.Загрузка = Истина;
		НоваяДолжность.Записать();
		Должность = НоваяДолжность.Ссылка;
	КонецЕсли;
	
	Возврат Должность.Ссылка;
	
КонецФункции

Процедура СоздатьОбновитьДолжности() Экспорт
	
	ТабДолжностей = Сотрудники.Выгрузить(, "Должность,КодДолжности,НаименованиеДолжности");
	
	ТабДолжностей.Свернуть("Должность,КодДолжности,НаименованиеДолжности");
	
	Для Каждого СтрДолжность Из ТабДолжностей Цикл
		
		СтрДолжность.Должность = СоздатьДолжность(СтрДолжность.КодДолжности, СтрДолжность.НаименованиеДолжности, Ложь);
		
		СтрокиСотрПоДолжности = Сотрудники.НайтиСтроки(Новый Структура("КодДолжности", СтрДолжность.КодДолжности));
		
		Для Каждого СтрСотрПоДолжности Из СтрокиСотрПоДолжности Цикл
			
			СтрСотрПоДолжности.Должность = СтрДолжность.Должность;
					
		КонецЦикла;
	КонецЦикла;
		        
КонецПроцедуры

Процедура СформироватьПриемНаРаботу(Сотрудник,Подразделение,Должность,ТЗСотрудники) Экспорт
	
	Если ТЗСотрудники<>Неопределено Тогда
		СтрокаСотрудника = ТЗСотрудники.Найти(Сотрудник,"Сотрудник");
	Иначе
		СтрокаСотрудника = Неопределено;
	КонецЕсли;
	
	Если СтрокаСотрудника<>Неопределено Тогда
		//Проверяем подразделение в документе и в приеме, если отличаются, формируем кадровое перемещение
		мСтароеПодразделение = СтрокаСотрудника.Сотрудник.ТекущееПодразделениеОрганизации;
		мСтараяДолжность  = СтрокаСотрудника.Сотрудник.Должность;
		ИзменилосьПодразделение = Ложь;
		ИзмениласьДолжность = Ложь;
		Если ЗначениеЗаполнено(Подразделение) Тогда
			Если Подразделение<>мСтароеПодразделение Тогда
				ИзменилосьПодразделение = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Должность) Тогда
			Если Должность<>мСтараяДолжность Тогда
				ИзмениласьДолжность = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Подразделение) Тогда
			Если ИзменилосьПодразделение ИЛИ ИзмениласьДолжность Тогда
				Док = Документы.КадровоеПеремещениеОрганизаций.СоздатьДокумент();
				Док.Дата = ТекущаяДата();
				Док.Организация = Подразделение.Владелец;
				СтрокаФЛ = Док.ФизическиеЛица.Добавить();
				СтрокаФЛ.ФизическоеЛицо = Сотрудник.ФизЛицо;
				СтрокаРаботника = Док.РаботникиОрганизации.Добавить();
				СтрокаРаботника.Сотрудник = Сотрудник;
				СтрокаРаботника.ФизЛицо  = Сотрудник.ФизЛицо;
				СтрокаРаботника.ЗанимаемыхСтавок=1;
				СтрокаРаботника.ДатаНачала = НачалоДня(ТекущаяДата());
				СтрокаРаботника.ГрафикРаботы =Справочники.ГрафикиРаботы.НайтиПоНаименованию("Пятидневка");
				Если  ИзмениласьДолжность Тогда
					СтрокаРаботника.Должность =Должность;  
					СтрокаСотрудника.Должность =Должность;
				Иначе
					СтрокаРаботника.Должность =СтрокаСотрудника.Должность;
				КонецЕсли;
				Если  ИзменилосьПодразделение Тогда
					СтрокаРаботника.ПодразделениеОрганизации =Подразделение;
					СтрокаСотрудника.Подразделение =Подразделение;
				Иначе
					СтрокаРаботника.ПодразделениеОрганизации= СтрокаСотрудника.ПодразделениеОрганизации;
				КонецЕсли;
				Попытка
					Док.Записать(РежимЗаписиДокумента.Проведение);
				Исключение
					Док.Записать(РежимЗаписиДокумента.Запись);
				КонецПопытки;
				Сообщить("Записан документ "+Док.Ссылка);
				
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		НовыйПрием = Документы.ПриемНаРаботуВОрганизацию.СоздатьДокумент();
		НовыйПрием.Дата = ТекущаяДата();
		НовыйПрием.Организация = Сотрудник.Организация;
		НоваяСтрока = НовыйПрием.РаботникиОрганизации.Добавить();
		НоваяСтрока.Сотрудник = Сотрудник;
		НоваяСтрока.ФизЛицо = Сотрудник.ФизЛицо;
		НоваяСтрока.ГрафикРаботы = Справочники.ГрафикиРаботы.НайтиПоНаименованию("Пятидневка");
		НоваяСтрока.Должность = Должность;
		НоваяСтрока.ЗанимаемыхСтавок =1;
		НоваяСтрока.ПодразделениеОрганизации = Подразделение;
		НоваяСтрока.ДатаПриема = ?(ЗначениеЗаполнено(Сотрудник.ДатаПриемаНаРаботу),Сотрудник.ДатаПриемаНаРаботу,НачалоГода(ТекущаяДата()));
		Попытка
			НовыйПрием.Записать(РежимЗаписиДокумента.Проведение);
			Если ТЗСотрудники<>Неопределено Тогда
				СтрокаТЗ = ТЗСотрудники.Добавить();
				СтрокаТЗ.Сотрудник = Сотрудник;
				СтрокаТЗ.Должность = Должность;
			КонецЕсли;
			СтрокаТЗ.ПодразделениеОрганизации = Подразделение;
		Исключение
			НовыйПрием.Записать(РежимЗаписиДокумента.Запись);
		КонецПопытки;
		
	КонецЕсли;
	//АБС Заявка 9266
	СотрудникОбъект = Сотрудник.ПолучитьОбъект();
	СотрудникОбъект.ПодразделениеОрганизации = Подразделение;
	СотрудникОбъект.Должность = Должность;
	СотрудникОбъект.Записать();
	
	//АБС Заявка 9266

КонецПроцедуры


Процедура Заполнить() Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		//Сообщить("Не указана организация!");
		Возврат;
	КонецЕсли;
	
	//текОбъект.Организация = Организация;
	
	//АБС ВСТАВКА №40078 НАЧАЛО «25 апреля 2014 г.», Пополитов
	Если не абс_СерверныеФункции.абс_ДаннаяБазаНеКопия() Тогда
		Возврат;	
	КонецЕсли;	
	//\\АБС ВСТАВКА №40078 КОНЕЦ	
	
	СообщениеОбОшибке = "";
	
	ТаблицаВозврата = абс_WebServiceСервер.ИнициализацияWebServiceFL(Организация.Код, СообщениеОбОшибке);
	Если ТаблицаВозврата <> Неопределено Тогда
		Инициализировать(ЭтотОбъект, "ФизическиеЛица", ТаблицаВозврата);
	Иначе
		//Сообщить(СообщениеОбОшибке);
	КонецЕсли;
	
	Для Каждого Стр Из ФизическиеЛица Цикл
		Если Стр.Фл И Не ЗначениеЗаполнено(Стр.ФизЛицо) Тогда
			СтруктураВозврата = СоздатьФизЛицо(Стр.КодФизЛица,Стр.Фамилия,Стр.Имя,Стр.Отчество,Стр.ДатаРождения);
			Стр.ФизЛицо = СтруктураВозврата.ФизЛицо;
			Стр.Описание =СтруктураВозврата.Описание;
		ИначеЕсли Стр.Фл И ЗначениеЗаполнено(Стр.ФизЛицо) Тогда
			Если Найти(Стр.ФизЛицо.Наименование,Стр.Фамилия)=0 Тогда
				СтруктураВозврата = СоздатьФизЛицо(Стр.КодФизЛица,Стр.Фамилия,Стр.Имя,Стр.Отчество,Стр.ДатаРождения);
				Стр.ФизЛицо = СтруктураВозврата.ФизЛицо;
				Стр.Описание =СтруктураВозврата.Описание;
			КонецЕсли;

		КонецЕсли;
	КонецЦикла;

	
	ТаблицаВозвратаПодр = абс_WebServiceСервер.ИнициализацияWebServiceDep(Организация.Код, СообщениеОбОшибке);
	Если ТаблицаВозвратаПодр <> Неопределено Тогда
		Инициализировать(ЭтотОбъект, "Подразделения", ТаблицаВозвратаПодр);
	Иначе
		//Сообщить(СообщениеОбОшибке);
	КонецЕсли;
    
	Подразделения.Сортировать("Уровень,Код");
	Для Каждого Стр Из Подразделения Цикл
		Если Стр.Фл И Не ЗначениеЗаполнено(Стр.Подразделение) Тогда
			СтруктураВозврата = СоздатьПодразделение(Стр); 
			Стр.Подразделение = СтруктураВозврата.Подразделение;
			Стр.Описание = СтруктураВозврата.Описание;
		КонецЕсли;
	КонецЦикла;	

	
	ТаблицаВозвратаСотр = абс_WebServiceСервер.ИнициализацияWebServiceEmp(Организация.Код, СообщениеОбОшибке);
	Если ТаблицаВозвратаСотр <> Неопределено Тогда
		Инициализировать(ЭтотОбъект, "Сотрудники", ТаблицаВозвратаСотр);
	Иначе
		//Сообщить(СообщениеОбОшибке);
	КонецЕсли;
    	
	Для Каждого Стр Из Сотрудники Цикл
		
		Если Стр.Фл Тогда
		//Если Стр.Фл И Не ЗначениеЗаполнено(Стр.Сотрудник) Тогда
			СтруктураВозврата =СоздатьСотрудника(Стр); 
			Стр.Сотрудник = СтруктураВозврата.Сотрудник;
			Стр.Описание =  СтруктураВозврата.Описание;
		ИначеЕсли Стр.Фл И ЗначениеЗаполнено(Стр.Сотрудник) Тогда
			Если ЗначениеЗаполнено(Стр.ФизЛицо) И ЗначениеЗаполнено(Стр.ФИО) Тогда
				ФИО = Стр.ФИО;
				Если Найти(СокрЛП(Стр.Сотрудник.Наименование),СокрЛП(Стр.Фамилия))=0 Тогда
					Об = Стр.Сотрудник.ПолучитьОбъект();
					Об.Наименование = ФИО;
					Об.ОбменДанными.Загрузка = Истина;
					Об.Записать();
					Стр.Описание = "Изменены ФИО сотрудника "+ФИО+" "+" под пользователем "+ГлЗначениеПеременной("ГлТекущийПользователь")+" время создания "+ТекущаяДата()+""+Символы.ПС;
				КонецЕсли;
				Если ЗначениеЗаполнено(Стр.Пользователь) Тогда
					Если Найти(СокрЛП(Стр.Пользователь.Код),СокрЛП(Стр.Фамилия))=0 Тогда
						Об = Стр.Пользователь.ПолучитьОбъект();
						Об.Код = ФИО;
						Об.Наименование = ФИО;
						Об.ОбменДанными.Загрузка = Истина;
						Об.Записать();
						Стр.Описание = "Изменены ФИО пользователя "+ФИО+" "+" под пользователем "+ГлЗначениеПеременной("ГлТекущийПользователь")+" время создания "+ТекущаяДата()+""+Символы.ПС;
	                КонецЕсли;
				КонецЕсли;
			
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
    		
КонецПроцедуры

