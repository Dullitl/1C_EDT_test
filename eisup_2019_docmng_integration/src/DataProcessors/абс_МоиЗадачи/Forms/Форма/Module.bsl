 &НаСервере
Процедура ЗагрузитьНастройкиОбработки() Экспорт 
	
	СтруктураНастроек = ХранилищеОбщихНастроек.Загрузить("абс_МоиЗадачи",,,);
	
	Если ТипЗнч(СтруктураНастроек) = Тип("НастройкиКомпоновкиДанных") Тогда 
		//КомпоновщикНастроекКомпоновкиДанны.ЗагрузитьНастройки(СтруктураНастроек);
		
		Для каждого Элемент Из СтруктураНастроек.Отбор.Элементы Цикл
			ЭлементОтбораДанных = КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
			ЗаполнитьЗначенияСвойств(ЭлементОтбораДанных,Элемент);	
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиОбработки()
	
	МассивПустыхНастроек = Новый Массив;
	
	Для каждого Элемент Из КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы Цикл
		Если Строка(Элемент.ЛевоеЗначение) = "" Тогда	
			МассивПустыхНастроек.Добавить(Элемент);
		КонецЕсли;	
	КонецЦикла;
	
	Для каждого Элемент Из МассивПустыхНастроек Цикл
		КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Удалить(Элемент);
	КонецЦикла;
	
	ХранилищеОбщихНастроек.Сохранить("абс_МоиЗадачи",  ,КомпоновщикНастроекКомпоновкиДанных.Настройки, ,);
	
КонецПроцедуры

 &НаСервере
Процедура ЗагрузитьНастройкиОтбораПоУмолчанию()
 
	СхемаКомпоновкиДанных = РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");            
	
	КомпоновщикНастроекКомпоновкиДанных.Инициализировать(
		Новый ИсточникДоступныхНастроекКомпоновкиДанных(ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.УникальныйИдентификатор)));
	КомпоновщикНастроекКомпоновкиДанных.ЗагрузитьНастройки(СхемаКомпоновкиДанных.НастройкиПоУмолчанию);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ЗагрузитьНастройкиОтбораПоУмолчанию(); 
	ЗагрузитьНастройкиОбработки();
КонецПроцедуры

Процедура ЗаполнитьСписокЗадач()
	 
	СхемаКомпоновкиДанных =  РеквизитФормыВЗначение("Объект").ПолучитьМакет("Макет");             
	// Компоновка макета компоновки данных.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	НастройкиКомпоновкиДанных =  КомпоновщикНастроекКомпоновкиДанных.ПолучитьНастройки();
	НастройкиКомпоновкиДанных.ПараметрыДанных.Элементы[0].Значение = глЗначениеПеременной("глТекущийПользователь");	
	НастройкиКомпоновкиДанных.ПараметрыДанных.Элементы[1].Значение = ВыборПериода.ДатаНачала;
	НастройкиКомпоновкиДанных.ПараметрыДанных.Элементы[2].Значение = ВыборПериода.ДатаОкончания;
			
	МакетКомпоновкиДанных = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновкиДанных,,,Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	Запрос = Новый Запрос(МакетКомпоновкиДанных.НаборыДанных.НаборДанных.Запрос);
	
	// Заполнение параметров с полей отбора компоновщика настроек формы обработки.
	Для каждого Параметр Из МакетКомпоновкиДанных.ЗначенияПараметров Цикл
		Запрос.Параметры.Вставить(Параметр.Имя, Параметр.Значение);
	КонецЦикла;
	
	Задачи.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьНастройки(Команда)
	Если Элементы.КомпоновщикНастроекКомпоновкиДанныхПользовательскиеНастройки.Видимость Тогда
		Элементы.ПоказатьНастройки.Заголовок = "Показать настройки";	
	Иначе
		Элементы.ПоказатьНастройки.Заголовок = "Скрыть настройки";	
	КонецЕсли;
	
	Элементы.КомпоновщикНастроекКомпоновкиДанныхПользовательскиеНастройки.Видимость = Не Элементы.КомпоновщикНастроекКомпоновкиДанныхПользовательскиеНастройки.Видимость;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	ЗаполнитьСписокЗадач();
	
	//Если Задачи.Количество()  > 0 Тогда
	//	Элементы.Задачи.ТекущаяСтрока = Задачи[Задачи.Количество() - 1];
	//КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОрганизациюПользователя()
	мПользователь = глЗначениеПеременной("глТекущийПользователь");
	Возврат мПользователь.абс_Сотрудник.Организация;	
КонецФункции 

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ВыборПериода.ДатаНачала     = ДобавитьМесяц(абс_СерверныеФункции.ПолучитьДатуСервера() ,-2);
	ВыборПериода.ДатаОкончания  = абс_СерверныеФункции.ПолучитьДатуСервера();

	
	Если КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Количество() = 0 Тогда
		ЭлементОтбораДанных = КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Организация");
		ЭлементОтбораДанных.ПравоеЗначение = ПолучитьОрганизациюПользователя();
		ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораДанных.Использование  = Истина;
		
		ЭлементОтбораДанных = КомпоновщикНастроекКомпоновкиДанных.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));	
		ЭлементОтбораДанных.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("ВидЗадачи");
		ЭлементОтбораДанных.ПравоеЗначение = "";
		ЭлементОтбораДанных.ВидСравнения   = ВидСравненияКомпоновкиДанных.Равно;
		ЭлементОтбораДанных.Использование  = Ложь;
	КонецЕсли;
	
	ЗаполнитьСписокЗадач();

КонецПроцедуры

&НаКлиенте
Процедура абс_ОткрытьФорму(Ссылка, Форма)
	Структура = Новый Структура("Ключ", Ссылка);
	Форма = ПолучитьФорму(Форма, Структура);
	Форма.Открыть();	
КонецПроцедуры

&НаКлиенте
Процедура ЗадачиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Строка = Элементы.Задачи.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(Строка.ОбъектЗадачи) Тогда
		Если ТипЗнч(Строка.ОбъектЗадачи) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Справочник.СтатьиЗатрат.Форма.ФормаЭлемента");
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Справочник.ПрочиеДоходыИРасходы.Форма.ФормаЭлемента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("СправочникСсылка.НоменклатурныеГруппы") Тогда
			абс_ОткрытьФорму(Строка.Объект, "Справочник.НоменклатурныеГруппы.Форма.ФормаЭлемента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("СправочникСсылка.Номенклатура") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Справочник.Номенклатура.Форма.ФормаЭлемента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_ЗадачаВТехподдержку") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_ЗадачаВТехподдержку.Форма.ФормаДокумента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("СправочникСсылка.ОсновныеСредства") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Справочник.ОсновныеСредства.Форма.ФормаЭлемента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_ЗаявкаНаДобавлениеИзменениеПрав") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_ЗаявкаНаДобавлениеИзменениеПрав.Форма.ФормаДокумента1");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_РезервыПроизведенныхРасходов") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_РезервыПроизведенныхРасходов.Форма.ФормаДокумента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.Абс_АктПриёмкиВыполненныхРабот") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.Абс_АктПриёмкиВыполненныхРабот.Форма.ФормаДокумента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_ВводБюджета") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_ВводБюджета.Форма.ФормаДокумента");				
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_РеклассификацияБюджета") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_РеклассификацияБюджета.Форма.ФормаДокумента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_ЗаявкаНаЗаведениеДоговоров") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_ЗаявкаНаЗаведениеДоговоров.Форма.ФормаДокумента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Справочник.ДоговорыКонтрагентов.Форма.ФормаЭлемента");
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("СправочникСсылка.Контрагенты") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Справочник.Контрагенты.Форма.ФормаЭлемента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_ЗаявкаНаИзменениеРеквизитовКонтрагента") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_ЗаявкаНаИзменениеРеквизитовКонтрагента.Форма.ФормаДокумента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_ЗакупочныйЗаказ") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_ЗакупочныйЗаказ.Форма.ФормаДокумента");			
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.абс_СчетНаОплату") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.абс_СчетНаОплату.Форма.ФормаДокумента");
		ИначеЕсли ТипЗнч(Строка.ОбъектЗадачи) = Тип("ДокументСсылка.ДоговорНаВыполнениеРаботСФизЛицом") Тогда
			абс_ОткрытьФорму(Строка.ОбъектЗадачи, "Документ.ДоговорНаВыполнениеРаботСФизЛицом.Форма.ФормаДокумента");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	СохранитьНастройкиОбработки();
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериодаПриИзменении(Элемент)
	ЗаполнитьСписокЗадач();
КонецПроцедуры

