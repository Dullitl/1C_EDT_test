////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура УстановитьОтборВзаимозависимыхЛиц()
	
	ЭлементОтбораДанных = ВзаимозависимыеЛица.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
	ЭлементОтбораДанных.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Организация");
	ЭлементОтбораДанных.Использование = Истина;
	ЭлементОтбораДанных.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
	ЭлементОтбораДанных.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
	ЭлементОтбораДанных.ПравоеЗначение = Параметры.Организация; 	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьЗначенияСвойств(Объект, Параметры);
	УстановитьОтборВзаимозависимыхЛиц();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокНаСервере(ДатаНачала, КонтрагентыБезСтраны)
// +++ввв 24.03.2016 г.
	Перем СписокОфшоров;
	
	СписокОфшоров=Новый ТаблицаЗначений;
	СписокОфшоров.Колонки.Добавить("СтранаРегистрации");
	КонтролируемыеСделки.ЗаполнитьТаблицуОфшоров(СписокОфшоров);
// ---ввв 24.03.2016 г.	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка.Наименование";
	
	Запрос.УстановитьПараметр("ИНН", "7708503727");
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		йКонтрагент = ВыборкаДетальныеЗаписи.Ссылка;
		Для каждого Организация Из Взаимозависимыелица.Отбор.Элементы[0].ПравоеЗначение Цикл
			НаборЗаписей = РегистрыСведений.ВзаимозависимыеЛица.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Контрагент.Установить(ВыборкаДетальныеЗаписи.Ссылка);
			НаборЗаписей.Отбор.Организация.Установить(Организация);
			
			НаборЗаписей.Прочитать();
			Если НаборЗаписей.Количество() = 0 Тогда
				НоваяЗапись =  НаборЗаписей.Добавить();
				НоваяЗапись.Контрагент    = йКонтрагент;
				НоваяЗапись.Организация   = Организация;
				НоваяЗапись.Период        = НачалоГода(ДатаНачала);
				
				НоваяЗапись.ТипВзаимозависимости  = Перечисления.ТипыВзаимозависимости.ВзаимозависимыПоКодексу;
				НоваяЗапись.ЯвляетсяПлательщикомНалогаНаПрибыль = Истина;
				НаборЗаписей.Записать();
			КонецЕсли;
		КонецЦикла;
// +++ввв 16.09.2016 г.
		Если ЗначениеЗаполнено(йКонтрагент.абс_Страна) Тогда
			Записи = РегистрыСведений.УчастникиКонтролируемыхСделок.СоздатьНаборЗаписей();
			Записи.Отбор.Контрагент.Значение = йКонтрагент.Ссылка;
			Записи.Отбор.Контрагент.Использование = Истина;
			Запись = Записи.Добавить();           
			Запись.Контрагент = йКонтрагент.Ссылка;
			Запись.СтранаРегистрации = йКонтрагент.абс_Страна;
			Запись.ЗарегистрированВСтранеСЛьготнымНалогообложением =
				?(Запись.СтранаРегистрации = Справочники.КлассификаторСтранМира.Россия,
				Ложь, (СписокОфшоров.Найти(Запись.СтранаРегистрации)<>Неопределено));
			Записи.Записать();
		// Романова Н.Г. 25.10.2016 - #7723268 
		Иначе
			КонтрагентыБезСтраны.Добавить(йКонтрагент);		
		КонецЕсли;
// ---ввв 16.09.2016 г.
	КонецЦикла;
// +++ввв 24.03.2016 г.
	СписокОфшоров.Очистить();
// ---ввв 24.03.2016 г.
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписок(Команда)
	ДатаНачала = "";
	ВвестиДату(ДатаНачала,"Введите дату начала действия новых записей",);
	
	Если ДатаНачала <> "" Тогда
		
		// Романова Н.Г. 25.10.2016 - #7723268
		КонтрагентыБезСтраны = Новый Массив;	
		
		ЗаполнитьСписокНаСервере(ДатаНачала, КонтрагентыБезСтраны);
		
		Для Каждого йКонтрагент из КонтрагентыБезСтраны Цикл 
			Текст = "У контрагента " + йКонтрагент + " (код " + йКонтрагент.Код + ") не указана страна.";
			Сообщить(Текст);			
		КонецЦикла;
		// ---Романова Н.Г. 25.10.2016
	КонецЕсли;
	
	// {{KM WARE Агапов Н.А. Заявка №32701 16.11.2015 начало
	ЗаполнитьРегистр();
	// }}KM WARE Агапов Н.А. Заявка №32701 16.11.2015 окончание
КонецПроцедуры

&НаСервере
// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// {{KM WARE Агапов Н.А. Заявка №32701 16.11.2015 начало
Процедура ЗаполнитьРегистр()

	

КонецПроцедуры // ЗаполнитьРегистр() }}KM WARE Агапов Н.А. Заявка №32701 16.11.2015 окончание

&НаСервере
// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура ДозаполнитьСтрануНаСервере()
	Перем СписокОфшоров;
	
	СписокОфшоров=Новый ТаблицаЗначений;
	СписокОфшоров.Колонки.Добавить("СтранаРегистрации");
	КонтролируемыеСделки.ЗаполнитьТаблицуОфшоров(СписокОфшоров);
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Контрагенты.Ссылка
	|ИЗ
	|	Справочник.Контрагенты КАК Контрагенты
	|ГДЕ
	|	Контрагенты.ИНН = &ИНН";
	
	Запрос.УстановитьПараметр("ИНН", "7708503727");
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		йКонтрагент = ВыборкаДетальныеЗаписи.Ссылка;
		Если ЗначениеЗаполнено(йКонтрагент.абс_Страна) Тогда
			Записи = РегистрыСведений.УчастникиКонтролируемыхСделок.СоздатьНаборЗаписей();
			Записи.Отбор.Контрагент.Значение = йКонтрагент.Ссылка;
			Записи.Отбор.Контрагент.Использование = Истина;
			Запись = Записи.Добавить();           
			Запись.Контрагент = йКонтрагент.Ссылка;
			Запись.СтранаРегистрации = йКонтрагент.абс_Страна;
			Запись.ЗарегистрированВСтранеСЛьготнымНалогообложением =
				?(Запись.СтранаРегистрации = Справочники.КлассификаторСтранМира.Россия,
				Ложь, (СписокОфшоров.Найти(Запись.СтранаРегистрации)<>Неопределено));
			Записи.Записать();
		КонецЕсли;
	КонецЦикла;
	СписокОфшоров.Очистить();
КонецПроцедуры 

&НаКлиенте
Процедура ДозаполнитьСтрану(Команда)
	ДозаполнитьСтрануНаСервере();
КонецПроцедуры
