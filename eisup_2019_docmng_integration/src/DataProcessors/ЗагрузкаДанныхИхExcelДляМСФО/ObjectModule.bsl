Перем Ошибка;
Перем ТаблицаОсновныхСредств;

Функция АБС(Чис)
	возврат ?(Чис<0,-Чис,Чис);
КонецФункции	

Процедура ПолучитьГодМесяцЧисло(г,м,д,СтрокаДата)
	Точка = Найти(СтрокаДата,".");
	Если Точка=0 Тогда
		возврат;
	КонецЕсли;
	Попытка
		д = Число(Лев(СтрокаДата,Точка - 1));
	Исключение
	КонецПопытки;
	СтрокаДата = Сред(СтрокаДата,Точка+1);
	
	Точка = Найти(СтрокаДата,".");
	Если Точка=0 Тогда
		возврат;
	КонецЕсли;
	Попытка
		м = Число(Лев(СтрокаДата,Точка - 1));
	Исключение
	КонецПопытки;
	СтрокаДата = Сред(СтрокаДата,Точка+1);
	ДлинаСтроки = СтрДлина(СтрокаДата);
	Если ДлинаСтроки<=2 Тогда
		Попытка
			г = 2000+Число(СтрокаДата);
			
		Исключение
		КонецПопытки;
	Иначе	
	Попытка
		г = Число(СтрокаДата);
		
	Исключение
	КонецПопытки;
	КонецЕсли;
	 
КонецПроцедуры

Процедура ВывестиДеревоВМакет(ТЗОшибок)
	Макет = ПолучитьМакет("Макет");
	ТабДок = Новый ТабличныйДокумент;
	ОблШапка = Макет.ПолучитьОбласть("Шапка");
	ТабДок.Вывести(ОблШапка);
	ОблШапка = Макет.ПолучитьОбласть("ШапкаТЧ");
	Сч = 0;
	Для каждого Колонка из ТЗОшибок.Колонки Цикл
		Сч = Сч+1;
		ОблШапка.Параметры["ИмяКолонки"+Сч] = Колонка.Заголовок;		
	КонецЦикла;	
	ТабДок.Вывести(ОблШапка);
	Обл = Макет.ПолучитьОбласть("Строка");
	Для каждого СтрокаРодитель из ТЗОшибок.Строки Цикл
		Если СтрокаРодитель.Строки.Количество()=0 Тогда
			ВидОшибки = "Ошибок нет";
			Обл.Параметры["ИмяКолонки"+1] = ВидОшибки;
			Для Сч = 2 по ТЗОшибок.Колонки.Количество() Цикл
				Обл.Параметры["ИмяКолонки"+Сч] = СтрокаРодитель[Сч-1];
			КонецЦикла;	
			ТабДок.Вывести(Обл);

		Иначе
			Для каждого СтрокаОшибка из СтрокаРодитель.Строки Цикл
				ВидОшибки = СтрокаОшибка.ВидОшибки;
				Обл.Параметры["ИмяКолонки"+1] = ВидОшибки;
				Для Сч = 2 по ТЗОшибок.Колонки.Количество() Цикл
					Обл.Параметры["ИмяКолонки"+Сч] = СтрокаРодитель[Сч-1];
				КонецЦикла;	
				ТабДок.Вывести(Обл); 
			КонецЦикла;	
		КонецЕсли;	
	КонецЦикла;
	ТабДок.ТолькоПросмотр=Истина;
	ТабДок.ОтображатьГруппировки=Ложь;
	ТабДок.ОтображатьЗаголовки=Ложь;
	ТабДок.ОтображатьСетку=Ложь;
	ТабДок.Показать();
	
КонецПроцедуры	

Функция НайтиОсновноеСредство(ИнвНомер,Наименование,СтрокаСообщения,Строка,СтрокаТЗОшибок)
	ИнвНомерФайл = ИнвНомер;
	//Пока (Лев(ИнвНомерФайл,1) = "0") или (Лев(ИнвНомерФайл,1) = " ") или (Лев(ИнвНомерФайл,1) = "О") или (Лев(ИнвНомерФайл,1) = "С") Цикл
	//	ИнвНомерФайл = Сред(ИнвНомерФайл,2);
	//КонецЦикла;	
	СтрокаОС = ТаблицаОсновныхСредств.Найти(ИнвНомерФайл,"ИнвНомер");
	Если СтрокаОС = неопределено Тогда
		СтрокаСообщения = "ОС по инв. номеру "+ИнвНомер+" не найдено";
		СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
		СтрокаОшибка.ВидОшибки = СтрокаСообщения;
		СтрокаТЗОшибок.ПСтБУ1С = 0;
		СтрокаТЗОшибок.АмортБУ1С = 0;
		возврат Справочники.ОсновныеСредства.ПустаяСсылка();
	КонецЕсли;
	ОС = СтрокаОС.ОС;
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Код,
	|	ОсновныеСредства.Ссылка,
	|	ЕСТЬNULL(СтоимостьОСБухгалтерскийУчетОстатки.СтоимостьОстаток, 0) КАК ПСтБУ,
	|	ЕСТЬNULL(СтоимостьОСБухгалтерскийУчетОстатки.АмортизацияОстаток, 0) КАК АмортБУ
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОСБухгалтерскийУчет.Остатки(&Дата, ) КАК СтоимостьОСБухгалтерскийУчетОстатки
	|		ПО СтоимостьОСБухгалтерскийУчетОстатки.ОсновноеСредство = ОсновныеСредства.Ссылка
	|ГДЕ
	|	ОсновныеСредства.Ссылка = &ОС
	|	И ОсновныеСредства.ЭтоГруппа = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("ОС",ОС);
	Запрос.УстановитьПараметр("Дата",?( ЗначениеНеЗаполнено(Документ),КонецДня(ТекущаяДата()),КонецДня(Документ.Дата)));
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Количество()=1 Тогда
		Выборка.Следующий();
		СтрокаТЗОшибок.ПСтБУ1С = Выборка.ПСтБУ;
		СтрокаТЗОшибок.АмортБУ1С = Выборка.АмортБУ;

		Если АБС(Строка.ПСтБУ-Выборка.ПСтБУ)>1 Тогда
			СтрокаСообщения ="Первоначальная стоимость в файле больше чем на рубль отличается от первоначальной стоимости по БУ";
			СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
			СтрокаОшибка.ВидОшибки = СтрокаСообщения;
			Ошибка = Истина;
		КонецЕсли;
		
		Если АБС(Строка.АмортБУ-Выборка.АмортБУ)>1 Тогда
			СтрокаСообщения ="Сумма накопленной амортизации в файле больше чем на рубль отличается от амортизации по БУ";
			СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
			СтрокаОшибка.ВидОшибки = СтрокаСообщения;
			Ошибка = Истина;
		КонецЕсли;
		
		возврат Выборка.Ссылка;
	//ИначеЕсли Выборка.Количество()=0 Тогда
	//Иначе
	//	//попробуем найти по полному совпадению кода
	//	Пока Выборка.Следующий() Цикл
	//		Если Прав("000000000"+Выборка.Код,9) = Прав("0000000000"+ИнвНомер,9) Тогда
	//			Если АБС(Строка.ПСтБУ-Выборка.ПСтБУ)>1 Тогда
	//				СтрокаСообщения = "Первоначальная стоимость в файле больше чем на рубль отличается от первоначальной стоимости по БУ";
	//				СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
	//				СтрокаОшибка.ВидОшибки = СтрокаСообщения;
	//				Ошибка = Истина;
	//			КонецЕсли;
	//			
	//			Если АБС(Строка.АмортБУ-Выборка.АмортБУ)>1 Тогда
	//				СтрокаСообщения = "Сумма накопленной амортизации в файле больше чем на рубль отличается от амортизации по БУ";
	//				СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
	//				СтрокаОшибка.ВидОшибки = СтрокаСообщения;
	//				Ошибка = Истина;
	//			КонецЕсли;
	//			СтрокаТЗОшибок.ПСтБУ1С = Выборка.ПСтБУ;
	//			СтрокаТЗОшибок.АмортБУ1С = Выборка.АмортБУ;
	//			возврат Выборка.Ссылка;
	//		КонецЕсли;	   
	//	КонецЦикла;   
	//	//если не нашли пробуем найти по наименованию
	//	Выборка.Сбросить();
	//	Пока Выборка.Следующий() Цикл
	//		Если Выборка.Ссылка.Наименование = Наименование Тогда
	//			Если АБС(Строка.ПСтБУ-Выборка.ПСтБУ)>1 Тогда
	//				СтрокаСообщения = "Первоначальная стоимость в файле больше чем на рубль отличается от первоначальной стоимости по БУ";
	//				СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
	//				СтрокаОшибка.ВидОшибки = СтрокаСообщения;
	//				Ошибка = Истина;
	//			КонецЕсли;
	//			
	//			Если АБС(Строка.АмортБУ-Выборка.АмортБУ)>1 Тогда
	//				СтрокаСообщения = "Сумма накопленной амортизации в файле больше чем на рубль отличается от амортизации по БУ";
	//				СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
	//				СтрокаОшибка.ВидОшибки = СтрокаСообщения;
	//				Ошибка = Истина;
	//			КонецЕсли;
	//			СтрокаТЗОшибок.ПСтБУ1С = Выборка.ПСтБУ;
	//			СтрокаТЗОшибок.АмортБУ1С = Выборка.АмортБУ;
	//			возврат Выборка.Ссылка;
	//		КонецЕсли;	   
	//	КонецЦикла;   
	//	//все равно не нашли - возвращаем первое найденное
	//	Выборка.Сбросить();
	//	Выборка.Следующий();
	//	Если АБС(Строка.ПСтБУ-Выборка.ПСтБУ)>1 Тогда
	//		СтрокаСообщения = "Первоначальная стоимость в файле больше чем на рубль отличается от первоначальной стоимости по БУ";
	//		СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
	//		СтрокаОшибка.ВидОшибки = СтрокаСообщения;
	//		Ошибка = Истина;
	//	КонецЕсли;
	//	
	//	Если АБС(Строка.АмортБУ-Выборка.АмортБУ)>1 Тогда
	//		СтрокаСообщения = "Сумма накопленной амортизации в файле больше чем на рубль отличается от амортизации по БУ";
	//		СтрокаОшибка = СтрокаТЗОшибок.Строки.Добавить();
	//		СтрокаОшибка.ВидОшибки = СтрокаСообщения;
	//		Ошибка = Истина;
	//	КонецЕсли;
	//	СтрокаТЗОшибок.ПСтБУ1С = Выборка.ПСтБУ;
	//	СтрокаТЗОшибок.АмортБУ1С = Выборка.АмортБУ;		
	//	возврат выборка.Ссылка;
	КонецЕсли;
Конецфункции

Функция СоздатьТаблицуОсновныхСредств() Экспорт
	
	ТабОС = Новый ТаблицаЗначений;
	ТабОС.Колонки.Добавить("ИнвНомер");
	ТабОС.Колонки.Добавить("ОС");
	ТабОС.Колонки.Добавить("ДатаПринятия");
	ТабОС.Колонки.Добавить("ПСтБУ"); //Первоначальная стоимость БУ
	ТабОС.Колонки.Добавить("АмортБУ"); //Накопленная амортизация  БУ
	ТабОС.Колонки.Добавить("СрокМСФО");
	ТабОС.Колонки.Добавить("ПСтМСФО");	//Первоначальная стоимость МСФО
	ТабОС.Колонки.Добавить("АмортМСФО");//Накопленная амортизация  МСФО
	
	ТаблицаОсновныхСредств = Новый ТаблицаЗначений;
	ТаблицаОсновныхСредств.Колонки.Добавить("ОС");
	ТаблицаОсновныхСредств.Колонки.Добавить("ИнвНомер");
	Выборка = Справочники.ОсновныеСредства.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если выборка.ЭтоГруппа Тогда
			продолжить;
		КонецЕсли;
	    
		ИнвНомер = Выборка.Код;
		ИнвНомер = СтрЗаменить(ИнвНомер," ","");
		ИнвНомер = СтрЗаменить(ИнвНомер,"А-","");
		
		Если ЗаменаЗапятойНаТочкуВИнвНомере Тогда
			ИнвНомер = СтрЗаменить(ИнвНомер,".",",");
		КонецЕсли;	
		//Пока (Лев(ИнвНомер,1) = "0") или (Лев(ИнвНомер,1) = " ") или (Лев(ИнвНомер,1) = "О") или (Лев(ИнвНомер,1) = "С") Цикл
		//	ИнвНомер = Сред(ИнвНомер,2);
		//КонецЦикла;
		Если Выборка.ЦельИспользования.ЭтоГруппа Тогда
			Сообщить("цель использования ОС с кодом "+Выборка.Код+" является группой и будет перенесена некорректно");
		КонецЕсли;
		Строка = ТаблицаОсновныхСредств.Добавить();
		Строка.ИнвНомер = ИнвНомер;
		Строка.ОС = Выборка.Ссылка;
	КонецЦикла;	
	
	ТЗОшибок = Новый ДеревоЗначений;
	ТЗОшибок.Колонки.Добавить("ВидОшибки",,"Вид ошибки");
	ТЗОшибок.Колонки.Добавить("НомерСтроки",,"Номер строки файла");
	ТЗОшибок.Колонки.Добавить("ИнвНомер1С",,"Инвентарный номер 1С");
	ТЗОшибок.Колонки.Добавить("ИнвНомер",,"Инвентарный номер в файле");
	ТЗОшибок.Колонки.Добавить("НаименованиеОС1С",,"Наименование ОС в 1С");
	ТЗОшибок.Колонки.Добавить("НаименованиеОС",,"Наименование ОС в файле");
	ТЗОшибок.Колонки.Добавить("ПСтБУ",,"Первоначальная стоимость ОС по БУ в файле"); //Первоначальная стоимость БУ
	ТЗОшибок.Колонки.Добавить("ПСтБУ1С",,"Первоначальная стоимость ОС по БУ по данным учета"); //Первоначальная стоимость БУ
	ТЗОшибок.Колонки.Добавить("АмортБУ",,"Накопленная амортизация ОС по БУ в файле"); //Накопленная амортизация  БУ
	ТЗОшибок.Колонки.Добавить("АмортБУ1С",,"Накопленная амортизация ОС по БУ по данным учета"); //Накопленная амортизация  БУ
	ТЗОшибок.Колонки.Добавить("ПСтМСФО",,"Первоначальная стоимость ОС по МСФО в файле");	//Первоначальная стоимость МСФО
	ТЗОшибок.Колонки.Добавить("АмортМСФО",,"Накопленная амортизация ОС по МСФО в файле");//Накопленная амортизация  МСФО
	
	
	Эксел = Новый COMОбъект("Excel.Application");
	WorkBook = Эксел.Workbooks.Open(СокрЛП(Путь));
	Workbook.Activate();
	лист = WorkBook.Worksheets(1);
	ИндексНачала = 0;
	Н = 1;
	ЗначениеВПервомСтолбце = "А";

	Пока Истина Цикл
		ЗначениеВПервомСтолбце = СокрЛП(Лист.Cells(Н,1).Value);
		Попытка
			Индекс = Число(ЗначениеВПервомСтолбце);
		Исключение
			Индекс = -1;
		КонецПопытки;
		Если Индекс<>-1 Тогда
			  ИндексНачала = н;
			  прервать;
		КонецЕсли;	  
		Н = Н+1;
		Если Н>=10 Тогда
			прервать;
		КонецЕсли;	
	КонецЦикла;	
	Если ИндексНачала = 0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("В первом столбце файла должны быть указаны номера строк (1,2,3,...)
		|Файл не удовлетворяет формату!!!");
		WorkBook.Close(ложь);
		Ошибка = Истина;
		возврат ТабОС;
	КонецЕсли;
	
	Для й = ИндексНачала по 100000 Цикл
		состояние("Обрабатывается строка файла Excel № "+й);
		СтрокаСообщения = "";
		ИнвНомер = СтрЗаменить(СокрЛП(Лист.Cells(й,6).Value),Символы.НПП,"");
		НаименованиеОС = СокрЛП(Лист.Cells(й,2).Value);
		Если ПустаяСтрока(ИнвНомер) Тогда
			 прервать;
		КонецЕсли;	
		СтрокаОС = ТЗОшибок.Строки.Добавить();
		СтрокаОС.НомерСтроки = й;
		СтрокаОС.ИнвНомер = ИнвНомер;
		СтрокаОС.НаименованиеОС = НаименованиеОС;
		ПСтБУ = СтрЗаменить(СокрЛП(Лист.Cells(й,3).Value),",",".");
		ПСтБУ = СтрЗаменить(ПСтБУ,Символы.НПП,"");
		Попытка
			ПСтБУ = Число(ПСтБУ);
		Исключение
			СтрокаСообщения = "не указана первоначальная стоимость БУ";
			СтрокаОшибка = СтрокаОС.Строки.Добавить();
			СтрокаОшибка.ВидОшибки = СтрокаСообщения;
			ПСтБУ=0;
		КонецПопытки;
		СтрокаОС.ПСтБУ = ПСтБУ;
		
		АмортБУ = СтрЗаменить(СокрЛП(Лист.Cells(й,14).Value),",",".");
		АмортБУ = СтрЗаменить(АмортБУ,Символы.НПП,"");
		Попытка
			АмортБУ = Число(АмортБУ);
		Исключение
			СтрокаСообщения = "не указана накопленная амортизация по БУ";
			СтрокаОшибка = СтрокаОС.Строки.Добавить();
			СтрокаОшибка.ВидОшибки = СтрокаСообщения;

			АмортБУ=0;
		КонецПопытки;
		СтрокаОС.АмортБУ = АмортБУ;

		СрокМСФО = СтрЗаменить(СокрЛП(Лист.Cells(й,17).Value),",",".");
		СрокМСФО = СтрЗаменить(СрокМСФО,Символы.НПП,"");
		Попытка
			СрокМСФО = Число(СрокМСФО)*12;
		Исключение
			СтрокаСообщения ="не указан срок полезного использования по МСФО";
			СтрокаОшибка = СтрокаОС.Строки.Добавить();
			СтрокаОшибка.ВидОшибки = СтрокаСообщения;
			СрокМСФО=0;
			Ошибка = Истина;
		КонецПопытки;
          //14+16
		ПСтМСФО14 = СтрЗаменить(СокрЛП(Лист.Cells(й,14).Value),",",".");
		ПСтМСФО14 = СтрЗаменить(ПСтМСФО14,Символы.НПП,"");
	    ПСтМСФО16 = СтрЗаменить(СокрЛП(Лист.Cells(й,16).Value),",",".");
		ПСтМСФО16 = СтрЗаменить(ПСтМСФО16,Символы.НПП,"");
        ПСтМСФО14 = ?(ПСтМСФО14="",0,ПСтМСФО14);
		ПСтМСФО16 = ?(ПСтМСФО16="",0,ПСтМСФО16);
		Попытка
			ПСтМСФО = Число(ПСтМСФО14)+Число(ПСтМСФО16);
		Исключение
			СтрокаСообщения ="не указана расчетная инфлированная стоимость МСФО";
			СтрокаОшибка = СтрокаОС.Строки.Добавить();
			СтрокаОшибка.ВидОшибки = СтрокаСообщения;
			ПСтМСФО=0;
			Ошибка = Истина;
		КонецПопытки;
		СтрокаОС.ПСтМСФО = ПСтМСФО;

  		АмортМСФО = СтрЗаменить(СокрЛП(Лист.Cells(й,14).Value),",",".");
		АмортМСФО = СтрЗаменить(АмортМСФО,Символы.НПП,"");
		Попытка
			АмортМСФО = Число(АмортМСФО);
		Исключение
			СтрокаСообщения ="не указана накопленная амортизация по МСФО";
			СтрокаОшибка = СтрокаОС.Строки.Добавить();
			СтрокаОшибка.ВидОшибки = СтрокаСообщения;
			АмортМСФО=0;
            Ошибка = Истина;
		КонецПопытки;
		СтрокаОС.АмортМСФО = АмортМСФО;

		ДатаПринятия =СокрЛП(Лист.Cells(й,9).Value);
		Попытка
			ДатаПринятия = Дата(ДатаПринятия);
		Исключение	
			г = 1;
			м = 1;
			д = 1;
			ПолучитьГодМесяцЧисло(г,м,д,ДатаПринятия);
			Если г = 1 Тогда
				СтрокаСообщения = "не указана дата принятия к учету или дата принятия к учету записана в неверном формате!";
				СтрокаОшибка = СтрокаОС.Строки.Добавить();
				СтрокаОшибка.ВидОшибки = СтрокаСообщения;
			КонецЕсли;
			ДатаПринятия = Дата(г,м,д);
		КонецПопытки;
		НоваяСтрока = ТабОС.Добавить();
		НоваяСтрока.ИнвНомер = ИнвНомер;
		НоваяСтрока.ПСтБУ = ПСтБУ;
		НоваяСтрока.ПСтМСФО = ПСтМСФО;
		НоваяСтрока.АмортМСФО = АмортМСФО;
		НоваяСтрока.АмортБУ = АмортБУ;
		НоваяСтрока.СрокМСФО = СрокМСФО;
		НоваяСтрока.ОС = НайтиОсновноеСредство(ИнвНомер,НаименованиеОС,СтрокаСообщения,НоваяСтрока,СтрокаОС);	
		СтрокаОС.ИнвНомер1С =НоваяСтрока.ОС.Код;
		СтрокаОС.НаименованиеОС1С =НоваяСтрока.ОС.Наименование;
		НоваяСтрока.ДатаПринятия = ДатаПринятия;
		
		//НоваяСтрока.ДатаПринятия 	 = СтруктПараметров.Дата;


		
		Если Не ПустаяСтрока(СтрокаСообщения) и СообщатьОбОшибках Тогда
			сообщить("В строке № "+й+" обнаружены следующие несоответствия между данными РСБУ и МСФО:"+СтрокаСообщения,СтатусСообщения.ОченьВажное);
		КонецЕсли ;
		ОбработкаПрерыванияПользователя();
	КонецЦикла;	
	WorkBook.Close(ложь);
	ЧислоСтрок =й-ИндексНачала;
	Сообщить("Обработано "+ЧислоСтрок+" строк файла");
	ВывестиДеревоВМакет(ТЗОшибок);
	возврат ТабОС;
КонецФункции

Процедура ЗагрузитьИзExcelВПереносПроводок(Форма = Неопределено) Экспорт
	Ошибка = Ложь;
	ТабОС = СоздатьТаблицуОсновныхСредств();
	Если НеЗагружатьЕслиОбнаруженыОшибки и Ошибка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Обнаружены несоответствия данных РСБУ и МСФО!");
		возврат;
	КонецЕсли;	
	//ТабОС.ВыбратьСтроку();
	НаборЗаписей = РегистрыБухгалтерии.Международный.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(Документ.Ссылка);
    НаборЗаписей.Прочитать();
	ТабДвижений = НаборЗаписей.Выгрузить();
	Сч = 0;
	Кол = ТабДвижений.Количество();
	Для каждого СтрокаДвижение из ТабДвижений Цикл
		Сч = Сч+1;
		состояние("Обработано "+Сч+" движений из "+Кол);
		Если ТипЗнч(СтрокаДвижение.СубконтоДт1) = Тип("СправочникССылка.ОсновныеСредства") Тогда
			СтрокаТабОС = ТабОс.Найти(СтрокаДвижение.СубконтоДт1,"ОС");
			Если НЕ СтрокаТабОС = Неопределено Тогда
				СтрокаДвижение.Сумма = СтрокаТабОС.ПСтМСФО;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(СтрокаДвижение.СубконтоКт1) = Тип("СправочникССылка.ОсновныеСредства") Тогда
			СтрокаТабОС = ТабОс.Найти(СтрокаДвижение.СубконтоКт1,"ОС");
			Если НЕ СтрокаТабОС = Неопределено Тогда
				СтрокаДвижение.Сумма = СтрокаТабОС.АмортМСФО;
			КонецЕсли;	
		КонецЕсли;
	КонецЦикла;	
	НаборЗаписей.Загрузить(ТабДвижений);
	состояние("Запись движений....");
	НаборЗаписей.Записать();
	//Формирование проводки по 02 МСФО
	ДокОбъект = Документ.ПолучитьОбъект();
	Ном=0;
	Для Каждого СтрокаТабОС ИЗ ТабОС Цикл
		//Если (СтрокаТабОС.АмортБУ = 0) и (СтрокаТабОС.АмортМСФО <>0) Тогда
		// begin www
		Если  (СтрокаТабОС.АмортМСФО <>0) Тогда
		// end www

		Если СтрокаТабОС.ОС.ЦельИспользования.Пустая() Тогда
				сообщить("не указана цель использования для ОС "+СтрокаТабОС.ОС+" код "+СтрокаТабОС.ОС.код);
				сообщить("Заполнение выполнено некорректно");
				Ном=Ном+1;
				продолжить;
			КонецЕсли;	

			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ
			|		СоответствиеСчетовБУиМСФОСрезПоследних.Период,
			|СоответствиеСчетовБУиМСФОСрезПоследних.Значение,
			|СоответствиеСчетовБУиМСФОСрезПоследних.СчетМеждународный

			|ИЗ
			|	РегистрСведений.СоответствиеСчетовБУиМСФО.СрезПоследних(
			|&ВыбДата,
			|Значение = &ВыбЦель
			|	И СчетХозрасчетный = &СчХЗ) КАК СоответствиеСчетовБУиМСФОСрезПоследних";
			
			Запрос.УстановитьПараметр("СчХЗ",ПланыСчетов.Хозрасчетный.АмортизацияОС_01.Ссылка);
			Запрос.УстановитьПараметр("ВыбДата",Документ.Дата);
			Запрос.УстановитьПараметр("ВыбЦель",СтрокаТабОС.ОС.ЦельИспользования);
			
			Результат = Запрос.Выполнить();
			ВыборкаЗапроса = Результат.Выбрать();
			ВыборкаЗапроса.Следующий();
			СчетКт = ВыборкаЗапроса.СчетМеждународный;
			
			Если СчетКт = Неопределено Тогда
				сообщить("не найдено соответствие для цели использования по ОС "+СтрокаТабОС.ОС+" код "+СтрокаТабОС.ОС.код);
				сообщить("Заполнение выполнено некорректно");
				Ном=Ном+1;
				продолжить;
			КонецЕсли;	
			Движение = ДокОбъект.Движения.Международный.Добавить();
			Движение.Период = Документ.Дата;
			Движение.СчетДт = ПланыСчетов.Международный.Служебный;
			Движение.СчетКт = СчетКт;
			Движение.Организация = Документ.Организация;
			Движение.Содержание = "Ввод остаток по ОС (начисл. амортизация)";
			Движение.сумма = СтрокаТабОС.АмортМСФО;
			Движение.СубконтоКт.ОсновныеСредства = СтрокаТабОС.ОС;
			//Сообщить("добавлено движение по ОС "+СтрокаТабОС.ОС+" код "+СтрокаТабОС.ОС.код);
		КонецЕсли;	
		
	КонецЦикла;
	ДокОбъект.Движения.Международный.Записать(Ложь);
	Если Ном>0 Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Заполнение из файла выполнено некорректно");
	КонецЕсли;	
//\\Формирование проводки по 02 МСФО	
КонецПроцедуры	


Процедура ЗагрузитьИзExcelВПоступлениеОС() Экспорт
	Ошибка = Ложь;
	ТабОС = СоздатьТаблицуОсновныхСредств();
	Если НеЗагружатьЕслиОбнаруженыОшибки и Ошибка Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Обнаружены несоответсвия между РСБУ и МСФО!");
		возврат;
	КонецЕсли;	
	//ТабОС.ВыбратьСтроку();
	Если ТипЗнч(Документ) = Тип("ДокументОбъект.ПоступлениеОсновныхСредствМеждународный") Тогда
		Объект = Документ;
	Иначе
		Объект = Документ.ПолучитьОбъект();
	КонецЕсли;	
	ТабЧасть =Объект.ОсновныеСредства;
	Для каждого СтрокаТЧ из ТабЧасть Цикл
		состояние("Обрабатывается строка табличной части № "+СтрокаТЧ.НомерСтроки);
		СтрокаТабОС = ТабОС.Найти(СтрокаТЧ.ОсновноеСредство,"ОС");
		Если СтрокаТабОС = Неопределено Тогда
			сообщить("Строка № "+СтрокаТЧ.НомерСтроки+" не изменена,т.к. основное средство "+СтрокаТЧ.ОсновноеСредство.Код+" отсутствует в файле Excel",СтатусСообщения.Внимание);
		Иначе
			СтрокаТЧ.СрокПолезногоИспользования = СтрокаТабОС.СрокМСФО;
			СтрокаТЧ.СуммаНачисленнойАмортизации = СтрокаТабОС.АмортМСФО;
			КодСчетаСниженияСтоимости = Лев(СтрокаТЧ.СчетУчета.Код,СтрДлина(СтрокаТЧ.СчетУчета.Код)-1)+"3";
			СтрокаТЧ.СчетСниженияСтоимости = ПланыСчетов.Международный.НайтиПоКоду(КодСчетаСниженияСтоимости);
			КодСчетаНачисленияАмортизации = Лев(СтрокаТЧ.СчетУчета.Код,СтрДлина(СтрокаТЧ.СчетУчета.Код)-1)+"2";
			СтрокаТЧ.СчетНачисленияАмортизации = ПланыСчетов.Международный.НайтиПоКоду(КодСчетаНачисленияАмортизации);
			СтрокаТЧ.МетодНачисленияАмортизации=Перечисления.МетодыНачисленияАмортизацииОСМеждународный.Линейный;
			СтрокаТЧ.ПервоначальнаяСтоимость = СтрокаТабОС.ПСтМСФО;
			СтрокаТЧ.ДатаПринятияКУчету = СтрокаТабОС.ДатаПринятия;
		КонецЕсли;	
	КонецЦикла;	
	Попытка
	Объект.Записать();
	Исключение
	КонецПопытки;
КонецПроцедуры	