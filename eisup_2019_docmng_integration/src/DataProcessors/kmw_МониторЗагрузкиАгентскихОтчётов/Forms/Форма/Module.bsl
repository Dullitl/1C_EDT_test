
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	УстановитьПривилегированныйРежим(Истина);
	ПутьФаловЗагрузки = Константы.kmw_ПапкаОтчетовАгентовПутьСервера.Получить();
	Если ЗначениеЗаполнено(ПутьФаловЗагрузки) Тогда
		Объект.ПутьФаловЗагрузки = ПутьФаловЗагрузки;
	КонецЕсли; 
	//ВидАгентскогоДоговора = Константы.kmw_ВидАгентскогоДоговора.Получить();
	//Если ЗначениеЗаполнено(ВидАгентскогоДоговора) Тогда
	//	ВидДоговора = ВидАгентскогоДоговора;
	//КонецЕсли; 
	ОбновитьСписок();
КонецПроцедуры

// ОбновлениеСтатусовДокументов
//
Процедура ОбновлениеСтатусовДокументов()
	Для каждого ТекСтрока Из Объект.АгентскиеДоговоры Цикл
		ТекСтрока.Статус = РегистрыСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.ВернутьСтатусДокумента(ТекСтрока.ДокументОКОП);
	КонецЦикла;
КонецПроцедуры // ()


&НаКлиенте
Процедура ВывестиДоговоры(Команда)
	Если ПроверитьЗаполнение() Тогда
		
		ВывестиДоговорыСервер();
	
	КонецЕсли;   
		
КонецПроцедуры

Процедура ВывестиДоговорыСервер()
	Объект.АгентскиеДоговоры.Очистить();

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ 
		//ПЕРВЫЕ 2
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ОтчетКомиссионераОПродажах_вз.ДокументОКОП КАК ДокументОКОП,
		|	ДоговорыКонтрагентов.ВидДоговора,
		|	абс_ИсторияСтатусовКадровоРасчетныхДокументовСрезПоследних.Статус КАК Статус,
		|	абс_ИсторияСтатусовКадровоРасчетныхДокументовСрезПоследних.Пользователь КАК Пользователь,
		|	абс_ИсторияСтатусовКадровоРасчетныхДокументовСрезПоследних.Комментарий КАК Комментарий
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОтчетКомиссионераОПродажах.Ссылка КАК ДокументОКОП,
		|			ОтчетКомиссионераОПродажах.ДоговорКонтрагента КАК ДоговорКонтрагента
		|		ИЗ
		|			Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
		|		ГДЕ
		|			ОтчетКомиссионераОПродажах.Дата >= &НачалоПериода
		|			И ОтчетКомиссионераОПродажах.Дата <= &КонецПериода) КАК ОтчетКомиссионераОПродажах_вз
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.СрезПоследних КАК абс_ИсторияСтатусовКадровоРасчетныхДокументовСрезПоследних
		|			ПО ОтчетКомиссионераОПродажах_вз.ДокументОКОП = абс_ИсторияСтатусовКадровоРасчетныхДокументовСрезПоследних.Документ
		|		ПО ДоговорыКонтрагентов.Ссылка = ОтчетКомиссионераОПродажах_вз.ДоговорКонтрагента
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговоровКонтрагентов
		|	И ДоговорыКонтрагентов.Организация = &Организация";

	//Запрос.УстановитьПараметр("ВидДоговоровКонтрагентов", Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером);
	Запрос.УстановитьПараметр("ВидДоговоровКонтрагентов", ВидДоговора);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.ЗаПериод));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ЗаПериод));

	Результат = Запрос.Выполнить();
	//Результат.Выгрузить();
	Объект.АгентскиеДоговоры.Загрузить(Результат.Выгрузить());
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьДокументыПоТЧ(Команда)
	ПодготовитьДокументыПоТЧ_Сервер();
КонецПроцедуры

Процедура ПодготовитьДокументыПоТЧ_Сервер(ИмяТЧ=Неопределено)
	Если ИмяТЧ=Неопределено Тогда
		ИмяТЧ = "АгентскиеДоговоры";
		Договоры_тз = Объект[ИмяТЧ];
	Иначе
		Договоры_тз = ЭтаФорма[ИмяТЧ];
	КонецЕсли;  
	Для каждого ТекСтрТЧ Из Договоры_тз Цикл
		//Если ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП)=Ложь ИЛИ СоздаватьПовторно  Тогда
		Если ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП)=Ложь ИЛИ (СоздаватьПовторно И ТекСтрТЧ.Пометка) Тогда
			
			НовДок 				= Документы.ОтчетКомиссионераОПродажах.СоздатьДокумент();
			ПараметрыЗаполнения = Новый Структура("Дата,ДоговорКонтрагента,Контрагент,Организация",НачалоДня(КонецМесяца(Объект.ЗаПериод)), ТекСтрТЧ.Договор, ТекСтрТЧ.Договор.Владелец, ТекСтрТЧ.Договор.Организация);
			
			НовДок.Заполнить(ПараметрыЗаполнения);
			
		// {{KM WARE Клепиков А.Г. Агентский блок 15.10.2015 начало
		//заполнение данных документов по умолчанию ВРЕМЕННО !!!
			НовДок.Комментарий = "Создан :<"+ НовДок+"> Дата создания:" + ТекущаяДата();
		
	    //Закладка "Учет затрат"
		    НовДок.УчитыватьНДС 							= ИСТИНА;
		    НовДок.СпособРасчетаКомиссионногоВознаграждения = Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается;
		    НовДок.ОтражатьВБухгалтерскомУчете 				= ИСТИНА;
		    НовДок.ОтражатьВНалоговомУчете 					= ИСТИНА;
			НовДок.СтатьяЗатрат 							= Справочники.СтатьиЗатрат.НайтиПоКоду("000000316") ; //Расходы на продажу
			НовДок.НоменклатурнаяГруппа 					= Справочники.НоменклатурныеГруппы.НайтиПоКоду("ДХС0701"); //Последние мили (LM)
			НовДок.Подразделение 							= Справочники.Подразделения.НайтиПоКоду("ЦФО1282");  //Внутренний контроль
			НовДок.ПодразделениеОрганизации 				= Справочники.ПодразделенияОрганизаций.НайтиПоКоду("ОXSH11016");//Внутренний контроль
			НовДок.СчетУчетаЗатрат 							= ПланыСчетов.Хозрасчетный.ПрочиеДоходы;  //91.01
			НовДок.СчетУчетаЗатратНУ 						= ПланыСчетов.Налоговый.ВнереализационныеДоходы; //
			НовДок.Субконто1 								= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("й00000047"); //Прочие доходы  
			НовДок.Субконто2 								= Справочники.ас_ПериодыОтражения.НайтиПоКоду("20153");      //20153
			НовДок.СубконтоНУ1 								= Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("й00000047");
			НовДок.СубконтоНУ2 								= Справочники.ас_ПериодыОтражения.НайтиПоКоду("20153");      //20153

			
	    //Закладка "Счета учета расчетов"
			НовДок.СчетУчетаРасчетовСКонтрагентом 			= ПланыСчетов.Хозрасчетный.РасчетыСПокупателями;
			НовДок.СчетУчетаРасчетовПоАвансамПолученным 	= ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным;
			НовДок.СчетУчетаРасчетовЗаПосредническиеУслуги 	= ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками;
			НовДок.СчетУчетаРасчетовПоАвансамВыданным 		= ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным;
			НовДок.СчетУчетаНДС 							= ПланыСчетов.Хозрасчетный.НДСпоПриобретеннымУслугам;
			
		//Закладка "Учет Затрат услуг"	
			НовСтрока 		= НовДок.kmw_ЗатратыУслуги.Добавить();
			Номенклатура 	= Справочники.Номенклатура.НайтиПоКоду("10000181205"); //Доступ в Интернет FTTB - Плата за подключение
			
			НовСтрока.Номенклатура = Номенклатура;
			СчетаУчетаНоменклатуры = ЗаполнитьСчетаУчета(Номенклатура);
			
			Если СчетаУчетаНоменклатуры.Количество()<> 0 Тогда
				НовСтрока.СчетЗатрат 	= СчетаУчетаНоменклатуры[0].СчетУчетаБУ;
				НовСтрока.СчетЗатратНУ 	= СчетаУчетаНоменклатуры[0].СчетУчетаНУ;
				НовСтрока.СчетУчетаНДС 	= СчетаУчетаНоменклатуры[0].СчетУчетаНДС;
			КонецЕсли;

			НовСтрока.Содержание 	= Номенклатура.НаименованиеПолное;
			НовСтрока.СтатьяЗатрат 	= Номенклатура.СтатьяЗатрат;
			
			//НовСтрока.Субконто1 = Справочники.ПодразделенияОрганизаций.;
			//НовСтрока. = Номенклатура.;
			//НовСтрока. = Номенклатура.;
// }}KM WARE Клепиков А.Г. Агентский блок 15.10.2015 окончание			

			НовДок.Записать(РежимЗаписиДокумента.Запись);
			
			ТекСтрТЧ.ДокументОКОП = НовДок.Ссылка;
		ИначеЕсли ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП) Тогда
			
		//ИначеЕсли СоздаватьПовторно = Ложь Тогда
		//	Продолжить;
		КонецЕсли; 
			
		Если ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП) Тогда
			Если ИмяТЧ = "АгентскиеДоговоры" Тогда
				ТекСтрТЧ.ДокументОКОП 	= НовДок.Ссылка;
				ТекСтрТЧ.Комментарий 	= "Подготовка из монитора";
				
				РегистрыСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.УстановитьСтатус(ТекСтрТЧ.ДокументОКОП, Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка,,ТекСтрТЧ.Комментарий);
			Иначе
				ИмяФайла 	= ТекСтрТЧ.ИмяФайла;
				ПолноеИмя 	= Объект.ПутьФаловЗагрузки+ИмяФайла;
				
				Если ПроверитьСуществованиеКаталога(ПолноеИмя)=Ложь Тогда
					ТекСтрТЧ.Комментарий = "Не найден файл "+ПолноеИмя;
				Иначе	
					ДД 					= Новый ДвоичныеДанные(Объект.ПутьФаловЗагрузки+ИмяФайла);
					СтруктураВозврата 	= абс_РаботаСФайлами.ЗаписатьФайлВоВнешнееХранилище(ТекСтрТЧ.ДокументОКОП, ДД,ИмяФайла);
					
					Если СтруктураВозврата.Успешно Тогда
						
						ФайлЗагрузки 	= СтруктураВозврата.ХранилищеСсылка;
						ТекДок 			= ТекСтрТЧ.ДокументОКОП.ПолучитьОбъект();
						
						ТекДок.kmw_ФайлЗагрузки 		= ФайлЗагрузки;
						ТекДок.kmw_Статус 				= Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка;
						ТекДок.kmw_КомментарийЗагрузки 	= "Прикреплён полученный файл";
					    ТекДок.Записать(РежимЗаписиДокумента.Запись);
						
						ПереместитьФайл(ПолноеИмя,ИмяКаталогаОбработанных+"\"+ИмяФайла+".xlsx");
						ТекСтрТЧ.Комментарий = ТекДок.kmw_КомментарийЗагрузки;
						РегистрыСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.УстановитьСтатус(ТекСтрТЧ.ДокументОКОП, Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка,,ТекСтрТЧ.Комментарий);
					Иначе
						ТекСтрТЧ.Комментарий = "Не найден файл "+ИмяФайла+" в функции ЗаписатьФайлВоВнешнееХранилище";
					КонецЕсли; 
				КонецЕсли; 
			КонецЕсли; 
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыДокументов(Команда)
	ОбновлениеСтатусовДокументов();
КонецПроцедуры

&НаКлиенте
Процедура ЗаПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ВидДоговораПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ОбновитьСписок();
КонецПроцедуры

Процедура ОбновитьСписок()
	Список.Параметры.УстановитьЗначениеПараметра("ВидДоговоровКонтрагентов", ВидДоговора);
	Список.Параметры.УстановитьЗначениеПараметра("Организация", Объект.Организация);
	Список.Параметры.УстановитьЗначениеПараметра("НачалоПериода", НачалоМесяца(Объект.ЗаПериод));
	Список.Параметры.УстановитьЗначениеПараметра("КонецПериода", КонецМесяца(Объект.ЗаПериод));
КонецПроцедуры


&НаКлиенте
Процедура Страницы_ПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница=Элементы.ДинамическийСписок Тогда
		ОбновитьСписок();
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура ПодготовитьДокументыПоВыделенному(Команда)
	ВыделеныСтроки_мс = Элементы.Список.ВыделенныеСтроки;
	БылиВыделены_фмс = Новый ФиксированныйМассив(ВыделеныСтроки_мс); //ФиксированныйМассив вместо массива, чтобы он не обновлялся при смене ткущей строки
	ПодготовитьДокументыПоВыделенному_(БылиВыделены_фмс);
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьДокументыПоВыделенному_(Знач ВыделеныСтроки_мс)
	ДоговорыДляДокументов_мс = Новый Массив;
	
	Для каждого ТекВыдСтрока Из ВыделеныСтроки_мс Цикл
		Элементы.Список.ТекущаяСтрока = ТекВыдСтрока;
		ДанныеСтроки = Элементы.Список.ТекущиеДанные;
		Если ДанныеСтроки.Свойство("ДокументОКОП") И ЗначениеЗаполнено(ДанныеСтроки.ДокументОКОП)=Ложь Тогда
			ДоговорыДляДокументов_мс.Добавить(ДанныеСтроки.Договор);
		КонецЕсли; 
	КонецЦикла;
	СоздадимДокументыДоговоров(ДоговорыДляДокументов_мс);
	
КонецПроцедуры

Процедура СоздадимДокументыДоговоров(ДоговорыДляДокументов_мс)
	Для каждого ТекДоговор Из ДоговорыДляДокументов_мс Цикл
			НовДок = Документы.ОтчетКомиссионераОПродажах.СоздатьДокумент();
			ПараметрыЗаполнения = Новый Структура("Дата,ДоговорКонтрагента,Контрагент,Организация",НачалоДня(КонецМесяца(Объект.ЗаПериод)), ТекДоговор, ТекДоговор.Владелец, Объект.Организация);
			НовДок.Заполнить(ПараметрыЗаполнения); 
			НовДок.kmw_Статус = Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка; 
			НовДок.kmw_КомментарийЗагрузки ="Создан из монитора"; 
			НовДок.СпособРасчетаКомиссионногоВознаграждения =Перечисления.СпособыРасчетаКомиссионногоВознаграждения.НеРассчитывается;
			НовДок.УчитыватьНДС = ИСТИНА;
		    НовДок.Записать(РежимЗаписиДокумента.Запись);
			ДокументОКОП = НовДок.Ссылка;
			Комментарий = "Создан из монитора";
			РегистрыСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.УстановитьСтатус(ДокументОКОП, Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка,,Комментарий);
	КонецЦикла; 
	ОбновитьСписок();
	ВывестиДоговорыСервер();
КонецПроцедуры

&НаКлиенте
Процедура ПрикрепитьФайлыПоТЧ(Команда)
	ПрикрепитьФайлыПоТЧ_Сервер();
КонецПроцедуры

Процедура ПрикрепитьФайлыПоТЧ_Сервер()
	ПроверитьПодготовитьКаталог();
	Для каждого ТекСтрТЧ Из Объект.АгентскиеДоговоры Цикл
		Если ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП) И ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП.kmw_ФайлЗагрузки)=Ложь Тогда
			ИмяФайла = "Отчет Агента "+СокрЛП(ТекСтрТЧ.Договор.Владелец.ИНН)+" дог "+СокрЛП(ТекСтрТЧ.Договор.Код)+" за "+Формат(КонецМесяца(Объект.ЗаПериод),"ДФ=yyyy-MM-dd")+".xlsx";
			ИмяФайла = РаботаСФайлами.УдалитьЗапрещенныеСимволыИмени(ИмяФайла);
			ПолноеИмя = Объект.ПутьФаловЗагрузки+ИмяФайла;
			Если ПроверитьСуществованиеКаталога(ПолноеИмя)=Ложь Тогда
				ТекСтрТЧ.Комментарий = "Не найден файл "+ПолноеИмя;
			Иначе	
				ДД = Новый ДвоичныеДанные(Объект.ПутьФаловЗагрузки+ИмяФайла);
				СтруктураВозврата = абс_РаботаСФайлами.ЗаписатьФайлВоВнешнееХранилище(ТекСтрТЧ.ДокументОКОП, ДД,ИмяФайла);
				Если СтруктураВозврата.Успешно Тогда
					ФайлЗагрузки = СтруктураВозврата.ХранилищеСсылка;
					ТекДок = ТекСтрТЧ.ДокументОКОП.ПолучитьОбъект();  
					ТекДок.kmw_ФайлЗагрузки = ФайлЗагрузки;
					ТекДок.kmw_Статус = Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка;
					ТекДок.kmw_КомментарийЗагрузки = "Прикреплён полученный файл";
				    ТекДок.Записать(РежимЗаписиДокумента.Запись);
					ТекСтрТЧ.Комментарий = "Прикреплён полученный файл";
					ПереместитьФайл(ПолноеИмя,ИмяКаталогаОбработанных+"\"+ИмяФайла+".xlsx");
				Иначе
					ТекСтрТЧ.Комментарий = "Не найден файл "+ИмяФайла+" в функции ЗаписатьФайлВоВнешнееХранилище";
				КонецЕсли; 
			КонецЕсли; 
			РегистрыСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.УстановитьСтатус(ТекСтрТЧ.ДокументОКОП, Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка,,ТекСтрТЧ.Комментарий);
		КонецЕсли; 
	КонецЦикла; 
КонецПроцедуры
 
//&НаКлиентеНаСервере
Функция ПроверитьСуществованиеКаталога(ИмяКаталога) Экспорт
    КаталогНаДиске = Новый Файл(ИмяКаталога);
    Если КаталогНаДиске.Существует() Тогда
        Возврат Истина;
    Иначе
        Возврат Ложь;
    КонецЕсли;
КонецФункции 

//&НаКлиенте
Процедура ПроверитьПодготовитьКаталог()
	Объект.ПутьФаловЗагрузки=Сокрлп(Объект.ПутьФаловЗагрузки);
	Если ЗначениеЗаполнено(Объект.ПутьФаловЗагрузки)=Ложь ИЛИ ПроверитьСуществованиеКаталога(Сокрлп(Объект.ПутьФаловЗагрузки))=Ложь Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не обнаружен каталог со стороны сервера "+Объект.ПутьФаловЗагрузки, ,"Объект.ПутьФаловЗагрузки");
		Возврат;
	КонецЕсли;
	
	Объект.ПутьФаловЗагрузки=Объект.ПутьФаловЗагрузки+?(Прав(Объект.ПутьФаловЗагрузки,1)="\","","\");
	ИмяКаталогаОбработанных = Объект.ПутьФаловЗагрузки+СокрЛП(Объект.Организация.Префикс)+" за "+Формат(КонецМесяца(Объект.ЗаПериод),"ДФ=yyyy-MM-dd")+" ОБРАБОТАНО";
	Если ПроверитьСуществованиеКаталога(ИмяКаталогаОбработанных)=Ложь Тогда
		СоздатьКаталог(ИмяКаталогаОбработанных);
	КонецЕсли;
КонецПроцедуры
 

&НаКлиенте
Процедура ПрикрепитьФайлы(Команда)
	ПрикрепитьФайлы_Сервер();

    ПрикрепитьФайлыПоТЗ_Сервер();
	Элементы.Список.Обновить();
КонецПроцедуры

Процедура ПрикрепитьФайлы_Сервер()
	
	ПроверитьПодготовитьКаталог();
	
	НовыеФайлы_мс = НайтиФайлы(Объект.ПутьФаловЗагрузки,"*.xlsx",Ложь);
	НайденыФайлы.Очистить();
    //подготовим тз для поиска документов к файлам
	Для каждого ТекФайл Из НовыеФайлы_мс Цикл
		Если ЗначениеЗаполнено(ТекФайл.Имя) Тогда
			НоваяСтрокаПоИмениФайла(Строка(ТекФайл.Имя));
		КонецЕсли; 
		//ДокументФайла = НайтиДокументПоИмениФайла(Строка(ТекФайл.Имя));	
	КонецЦикла; 
	//

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДанныеПоиска_вт.АгентИНН,
		|	ДанныеПоиска_вт.АгентКодДоговора,
		|	ДанныеПоиска_вт.ИмяФайла,
		|	ДанныеПоиска_вт.ДатаДок
		|ПОМЕСТИТЬ ДанныеПоиска__ВТ
		|ИЗ
		|	&ДанныеПоиска_вт КАК ДанныеПоиска_вт
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ДанныеПоиска__ВТ.ДатаДок,
		|	ДанныеПоиска__ВТ.АгентИНН,
		|	ДанныеПоиска__ВТ.АгентКодДоговора,
		|	ДанныеПоиска__ВТ.ИмяФайла,
		|	ДоговорыКонтрагентов.Владелец КАК Контрагент
		|ПОМЕСТИТЬ ДоговорыАгентов__ВТ
		|ИЗ
		|	ДанныеПоиска__ВТ КАК ДанныеПоиска__ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ПО ДанныеПоиска__ВТ.АгентИНН = ДоговорыКонтрагентов.Владелец.ИНН
		|			И ДанныеПоиска__ВТ.АгентКодДоговора = ДоговорыКонтрагентов.Номер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ОтчетКомиссионераОПродажах.Ссылка КАК ДокументОКОП,
		|	ДоговорыАгентов__ВТ.Договор,
		|	ДоговорыАгентов__ВТ.ДатаДок,
		|	ДоговорыАгентов__ВТ.АгентИНН,
		|	ДоговорыАгентов__ВТ.АгентКодДоговора,
		|	ДоговорыАгентов__ВТ.ИмяФайла,
		|	ДоговорыАгентов__ВТ.Контрагент
		|ИЗ
		|	ДоговорыАгентов__ВТ КАК ДоговорыАгентов__ВТ
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОтчетКомиссионераОПродажах.Ссылка КАК Ссылка,
		|			ОтчетКомиссионераОПродажах.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|			ОтчетКомиссионераОПродажах.Дата КАК ДатаОтчета
		|		ИЗ
		|			Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
		|		ГДЕ
		|			(ОтчетКомиссионераОПродажах.kmw_Статус = &Подготовка
		|					ИЛИ ОтчетКомиссионераОПродажах.kmw_Статус = &Отказ)) КАК ОтчетКомиссионераОПродажах
		|		ПО ДоговорыАгентов__ВТ.Договор = ОтчетКомиссионераОПродажах.ДоговорКонтрагента
		|			И (ДоговорыАгентов__ВТ.ДатаДок <= КОНЕЦПЕРИОДА(ОтчетКомиссионераОПродажах.ДатаОтчета, МЕСЯЦ)
		|				И ДоговорыАгентов__ВТ.ДатаДок >= НАЧАЛОПЕРИОДА(ОтчетКомиссионераОПродажах.ДатаОтчета, МЕСЯЦ))";

		
	Запрос.УстановитьПараметр("ДанныеПоиска_вт", НайденыФайлы.Выгрузить(,"АгентИНН,АгентКодДоговора,ИмяФайла,ДатаДок"));
	Запрос.УстановитьПараметр("КонДняМесяца", КонецДня(Объект.ЗаПериод));
	Запрос.УстановитьПараметр("НачДняМесяца", НачалоДня(Объект.ЗаПериод));
	Запрос.УстановитьПараметр("Отказ", Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Отказ);
	Запрос.УстановитьПараметр("Подготовка", Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка);

	Результат = Запрос.Выполнить();
    Результат_тз = Результат.Выгрузить();
	//Результат_тз.ВыбратьСтроку("Это надо видеть!");
	НайденыФайлы.Загрузить(Результат_тз);
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();

	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
КонецПроцедуры

// {{KM WARE Агапов Н.А. Заявка № 03.11.2015 начало
&НаСервере
Функция ПоискКонтрагентаПоИНН(ИНН)
	Контрагент = справочники.Контрагенты.НайтиПоРеквизиту("ИНН",ИНН);
		 
	возврат Контрагент;
КонецФункции

&НаСервере
Функция ПоискДоговорПоКоду(Код)
	Договор = справочники.ДоговорыКонтрагентов.НайтиПоКоду(Код);
		 
	возврат Договор;
КонецФункции

// }}KM WARE Агапов Н.А. Заявка № 03.11.2015 окончание


Процедура НоваяСтрокаПоИмениФайла(Знач ИмяФайла)
	НовСтрока = НайденыФайлы.Добавить();
	НовСтрока.ИмяФайла = ИмяФайла;
	
	//Вычислим ИНН контрагента документа
	АгентИНН = СокрЛП(Лев(ИмяФайла,12));
	НовСтрока.АгентИНН = АгентИНН;
	
		
	Если Сред(ИмяФайла,13,1)<>"_" Тогда
		Сообщить("не верный формат имени файла:"+НовСтрока.ИмяФайла+" ИНН не верной длины
		| Документ не создан.",СтатусСообщения.Важное);
		возврат;
	КонецЕсли; 
	ОстатокИмяФайла = Сред(ИмяФайла,14);
	
	//Вычислим НомерДоговора
	АгентНомерДоговора = Лев(ОстатокИмяФайла,8);
	НовСтрока.АгентКодДоговора = АгентНомерДоговора;
	Если Сред(ОстатокИмяФайла,9,1)<>"_" Тогда
		Сообщить("не верный формат имени файла:"+ОстатокИмяФайла+" Номер Договора не верной длины
		| Документ не создан.",СтатусСообщения.Важное);
		возврат;
	КонецЕсли; 
	ОстатокИмяФайла = Сред(ОстатокИмяФайла,10);
	
	//Вычислим дату документа
	ГодДок = Лев(ОстатокИмяФайла,4);
	МесДок = Сред(ОстатокИмяФайла,5,2);
	
	Попытка
		ДатаДок = Дата(Число(ГодДок),Число(МесДок), 1);
		ДатаДок = НачалоДня(КонецМесяца(ДатаДок));
	Исключение
		Сообщить("не верный формат имени файла:"+НовСтрока.ИмяФайла+"
		| Документ не создан.",СтатусСообщения.Важное);
		возврат;
	КонецПопытки; 
	НовСтрока.ДатаДок = ДатаДок;
	ОстатокИмяФайла = Сред(ОстатокИмяФайла,7);
    	
КонецПроцедуры // ()
 
Процедура ПрикрепитьФайлыПоТЗ_Сервер()
	Объект.ПутьФаловЗагрузки=Сокрлп(Объект.ПутьФаловЗагрузки);
	Если ЗначениеЗаполнено(Объект.ПутьФаловЗагрузки)=Ложь ИЛИ ПроверитьСуществованиеКаталога(Сокрлп(Объект.ПутьФаловЗагрузки))=Ложь Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Не обнаружен каталог со стороны сервера "+Объект.ПутьФаловЗагрузки, ,"Объект.ПутьФаловЗагрузки");
		Возврат;
	КонецЕсли;
	
	Объект.ПутьФаловЗагрузки=Объект.ПутьФаловЗагрузки+?(Прав(Объект.ПутьФаловЗагрузки,1)="\","","\");
	ИмяКаталогаОбработанных = Объект.ПутьФаловЗагрузки+СокрЛП(Объект.Организация.Префикс)+" за "+Формат(КонецМесяца(Объект.ЗаПериод),"ДФ=yyyy-MM-dd")+" ОБРАБОТАНО";
	Если ПроверитьСуществованиеКаталога(ИмяКаталогаОбработанных)=Ложь Тогда
		СоздатьКаталог(ИмяКаталогаОбработанных);
	КонецЕсли;  
	
	
	Для каждого ТекСтрТЧ Из НайденыФайлы Цикл
		Если ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП)=Ложь И ЗначениеЗаполнено(ТекСтрТЧ.ИмяФайла) Тогда
			Сообщить("Получен файл:"+ТекСтрТЧ.ИмяФайла+" с неверным наименованием. ");
		//ИначеЕсли ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП)	И ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП.kmw_ФайлЗагрузки)=Ложь Тогда
		ИначеЕсли ЗначениеЗаполнено(ТекСтрТЧ.ДокументОКОП) Тогда
			ИмяФайла = ТекСтрТЧ.ИмяФайла;
			ПолноеИмя = Объект.ПутьФаловЗагрузки+ИмяФайла;
			Если ПроверитьСуществованиеКаталога(ПолноеИмя)=Ложь Тогда
				ТекСтрТЧ.Комментарий = "Не найден файл "+ПолноеИмя;
			Иначе	
				ДД = Новый ДвоичныеДанные(Объект.ПутьФаловЗагрузки+ИмяФайла);
				СтруктураВозврата = абс_РаботаСФайлами.ЗаписатьФайлВоВнешнееХранилище(ТекСтрТЧ.ДокументОКОП, ДД,ИмяФайла);
				Если СтруктураВозврата.Успешно Тогда
					ФайлЗагрузки = СтруктураВозврата.ХранилищеСсылка;
					ТекДок = ТекСтрТЧ.ДокументОКОП.ПолучитьОбъект();  
					ТекДок.kmw_ФайлЗагрузки = ФайлЗагрузки;
					ТекДок.kmw_Статус = Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка;
					ТекДок.kmw_КомментарийЗагрузки = "Прикреплён полученный файл";
				    ТекДок.Записать(РежимЗаписиДокумента.Запись);
					ТекСтрТЧ.Комментарий = "Прикреплён полученный файл";
					ПереместитьФайл(ПолноеИмя,ИмяКаталогаОбработанных+"\"+ИмяФайла+".xlsx");
				Иначе
					ТекСтрТЧ.Комментарий = "Не найден файл "+ИмяФайла+" в функции ЗаписатьФайлВоВнешнееХранилище";
				КонецЕсли; 
			КонецЕсли; 
			РегистрыСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.УстановитьСтатус(ТекСтрТЧ.ДокументОКОП, Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка,,ТекСтрТЧ.Комментарий);
		КонецЕсли; 
	КонецЦикла; 
	
	//Оставшимся без файлов допишем

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ДоговорыКонтрагентов.Ссылка КАК Договор,
		|	ОтчетКомиссионераОПродажах_вз.ДокументОКОП КАК ДокументОКОП,
		|	ДоговорыКонтрагентов.ВидДоговора
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			ОтчетКомиссионераОПродажах.Ссылка КАК ДокументОКОП,
		|			ОтчетКомиссионераОПродажах.ДоговорКонтрагента КАК ДоговорКонтрагента
		|		ИЗ
		|			Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
		|		ГДЕ
		|			ОтчетКомиссионераОПродажах.Дата >= &НачалоПериода
		|			И ОтчетКомиссионераОПродажах.Дата <= &КонецПериода
		|			И ОтчетКомиссионераОПродажах.kmw_ФайлЗагрузки = &ПустойФайлЗагрузки) КАК ОтчетКомиссионераОПродажах_вз
		|		ПО ДоговорыКонтрагентов.Ссылка = ОтчетКомиссионераОПродажах_вз.ДоговорКонтрагента
		|ГДЕ
		|	ДоговорыКонтрагентов.ВидДоговора = &ВидДоговоровКонтрагентов
		|	И ДоговорыКонтрагентов.Организация = &Организация";

	Запрос.УстановитьПараметр("ВидДоговоровКонтрагентов", ВидДоговора);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ЗаПериод));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Объект.ЗаПериод));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ПустойФайлЗагрузки", Справочники.ХранилищеДополнительнойИнформации.ПустаяСсылка());

	Результат = Запрос.Выполнить();

	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ИмяФайла = "Отчет Агента "+СокрЛП(ВыборкаДетальныеЗаписи.Договор.Владелец.ИНН)+" дог "+СокрЛП(ВыборкаДетальныеЗаписи.Договор.Код)+" за "+Формат(КонецМесяца(Объект.ЗаПериод),"ДФ=yyyy-MM-dd")+".xlsx";
		ИмяФайла = РаботаСФайлами.УдалитьЗапрещенныеСимволыИмени(ИмяФайла);
		ТекДок = ВыборкаДетальныеЗаписи.ДокументОКОП.ПолучитьОбъект();  
		ТекДок.kmw_КомментарийЗагрузки = "Не найден файл "+ИмяФайла;
	    ТекДок.Записать(РежимЗаписиДокумента.Запись);
		
		РегистрыСведений.абс_ИсторияСтатусовКадровоРасчетныхДокументов.УстановитьСтатус(ВыборкаДетальныеЗаписи.ДокументОКОП, Перечисления.абс_СтатусыКадровоРасчетныхДокументов.Подготовка,,"Не найден файл "+ИмяФайла);
	КонецЦикла;

КонецПроцедуры
 

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ИмяПоля = СтрЗаменить(Поле.Имя,"Список","");
	ТД = Элементы.Список.ТекущиеДанные;
	Если ТД = Неопределено Тогда
		Возврат;
	КонецЕсли; 
	
	Попытка
		ОткрытьЗначение(ТД[ИмяПоля]);
	Исключение
		
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ЖурналДокументов(Команда)
	ЖД_уф = ОткрытьФорму("Документ.ОтчетКомиссионераОПродажах.Форма.ФормаСпискаУправляемая");
	ПериодЖурнала=Новый СтандартныйПериод;
	ПериодЖурнала.Вариант=ВариантСтандартногоПериода.ПроизвольныйПериод;
	ПериодЖурнала.ДатаНачала=НачалоМесяца(Объект.ЗаПериод);
	ПериодЖурнала.ДатаОкончания=КонецМесяца(Объект.ЗаПериод);
	
	ЖД_уф.Элементы.Список.Период = ПериодЖурнала;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьФайлы(Команда)
	ПрикрепитьФайлы_Сервер();
	
	// {{KM WARE Агапов Н.А. Заявка № 03.11.2015 начало
	//Для каждого НовСтрока из НайденыФайлы цикл
	//	НовСтрока.Контрагент 	= ПоискКонтрагентаПоИНН(НовСтрока.АгентИНН);
	//	НовСтрока.Договор 		= ПоискДоговорПоКоду(НовСтрока.АгентКодДоговора);
	//КонецЦикла;
    // }}KM WARE Агапов Н.А. Заявка № 03.11.2015 окончание

	Если ФормироватьДокументы  Тогда
		ПодготовитьДокументыПоТЧ_Сервер("НайденыФайлы");
	КонецЕсли; 
КонецПроцедуры

&НаСервере
Функция ПоискКонтра(Номенклатура)

КонецФункции

&НаКлиенте
Процедура ВременноУдалить(Команда)
 
	ВременноУдалить_();
КонецПроцедуры

Процедура ВременноУдалить_()
	//Если Найти(Строка(ТипЗнч(Удаляемый)),"Документ")>0 Тогда
	Удаляемый_об = Удаляемый.ПолучитьОбъект();
	Удаляемый_об.Удалить();
	//КонецЕсли; 
КонецПроцедуры

&НаКлиенте
Процедура ГодМесяцПриИзменении(Элемент)
	Объект.ЗаПериод = Дата(Макс(Год,2010),Макс(Месяц,1),1);
    ГодМесяц_ПериодНДС();
КонецПроцедуры

Процедура ГодМесяц_ПериодНДС()
	
	КодПериода = Формат(Год, "ЧЦ=4; ЧГ=0");
	Если Месяц<4 Тогда
		КодПериода=""+КодПериода+"1";
	ИначеЕсли Месяц<7 Тогда
		КодПериода=""+КодПериода+"2";
	ИначеЕсли Месяц<10 Тогда
		КодПериода=""+КодПериода+"3";
	Иначе
		КодПериода=""+КодПериода+"4";
	КонецЕсли;
	Объект.ПериодОтражения = Справочники.ас_ПериодыОтражения.НайтиПоКоду(КодПериода);
	ОбновитьСписок();

КонецПроцедуры

&НаСервере
Функция ЗаполнитьСчетаУчета(Номенклатура)
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СчетаУчетаНоменклатуры.СчетДоходовВРозницеБУ,
		|	СчетаУчетаНоменклатуры.СчетДоходовОтРеализацииБУ,
		|	СчетаУчетаНоменклатуры.СчетДоходовОтРеализацииНУ,
		|	СчетаУчетаНоменклатуры.СчетРасходовБУ,
		|	СчетаУчетаНоменклатуры.СчетРасходовВРозницеБУ,
		|	СчетаУчетаНоменклатуры.СчетРасходовНУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаБУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаВРозницеБУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаВРозницеНУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаЗабалансовыйБУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаЗабалансовыйНУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаНДС,
		|	СчетаУчетаНоменклатуры.СчетУчетаНДСУплаченногоНаТаможне,
		|	СчетаУчетаНоменклатуры.СчетУчетаНУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаПередачиБУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаПередачиЗабалансовыйБУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаПередачиЗабалансовыйНУ,
		|	СчетаУчетаНоменклатуры.СчетУчетаПередачиНУ,
		|	СчетаУчетаНоменклатуры.ПринадлежностьНоменклатуры,
		|	СчетаУчетаНоменклатуры.Склад
		|ИЗ
		|	РегистрСведений.СчетаУчетаНоменклатуры КАК СчетаУчетаНоменклатуры
		|ГДЕ
		|	СчетаУчетаНоменклатуры.Организация = &Организация
		|	И СчетаУчетаНоменклатуры.Номенклатура = &Номенклатура";
		
		Запрос.УстановитьПараметр("Организация", Объект.Организация);
		Запрос.УстановитьПараметр("Номенклатура", Номенклатура);

        Возврат Запрос.Выполнить().Выгрузить();
КонецФункции 

// {{KM WARE Клепиков А.Г. Агентский блок 17.10.2015 начало

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого Строка  Из НайденыФайлы Цикл
		Строка.Пометка = ЛОЖЬ;		
	КонецЦикла; 
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого Строка  Из НайденыФайлы Цикл
		Строка.Пометка = ИСТИНА;		
	КонецЦикла; 
КонецПроцедуры


&НаКлиенте
Процедура ФормироватьДокументы(Команда)
	ПодготовитьДокументыПоТЧ_Сервер("НайденыФайлы");
КонецПроцедуры
// }}KM WARE Клепиков А.Г. Агентский блок 17.10.2015 окончание