
Перем мВалютаРегламентированногоУчета Экспорт;
Перем мПравильныйДоговор Экспорт;

Процедура НайтиДублиПоСписку() Экспорт 
	
	НайденныеОбъекты.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДоговорыКонтрагентов.Ссылка,
	               |	ДоговорыКонтрагентов.Владелец
	               |ПОМЕСТИТЬ Договоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Ссылка В(&СписокДоговоров)
	               |	И ДоговорыКонтрагентов.абс_СтатусДоговора в (&СтатусДоговора)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка
	               |ПОМЕСТИТЬ Взаиморасчеты
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, ДоговорКонтрагента В (&СписокДоговоров)) КАК ВзаиморасчетыСКонтрагентамиОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Регистр.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |	Регистр.Сделка КАК Сделка,
	               |	Регистр.СчетОплаты,
	               |	ВЫБОР
	               |		КОГДА (НЕ Регистр.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом)
	               |			ТОГДА НЕОПРЕДЕЛЕНО
	               |		ИНАЧЕ ЕСТЬNULL(Регистр.Документ, НЕОПРЕДЕЛЕНО)
	               |	КОНЕЦ КАК ДокументРасчетовСКонтрагентом,
	               |	ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) КАК СуммаВзаиморасчетовОстаток,
	               |	ВЫБОР
	               |		КОГДА Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	               |			ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0)
	               |		КОГДА ЕСТЬNULL(Регистр.СуммаРегОстаток, 0) = 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА КурсыВалютСрезПоследних.Кратность ЕСТЬ NULL 
	               |							ИЛИ КурсыВалютСрезПоследних.Кратность = 0
	               |						ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0)
	               |					ИНАЧЕ ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / КурсыВалютСрезПоследних.Кратность
	               |				КОНЕЦ
	               |		ИНАЧЕ ЕСТЬNULL(Регистр.СуммаРегОстаток, 0)
	               |	КОНЕЦ КАК СуммаРеглОстаток,
	               |	Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ДоговорКонтрагентаВалютаВзаиморасчетов,
	               |	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
	               |	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
	               |ПОМЕСТИТЬ ВР
	               |ИЗ
	               |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(, ДоговорКонтрагента В (&СписокДоговоров)) КАК Регистр
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних
	               |		ПО Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВР.ДоговорКонтрагента,
	               |	ВР.Сделка,
	               |	ВР.СчетОплаты КАК СчетУчетаРасчетов,
	               |	ВР.ДокументРасчетовСКонтрагентом,
	               |	СУММА(ВР.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	СУММА(ВР.СуммаРеглОстаток) КАК СуммаРеглОстаток,
	               |	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
	               |	МАКСИМУМ(ВР.КурсВзаиморасчетов) КАК КурсВзаиморасчетов,
	               |	МАКСИМУМ(ВР.КратностьВзаиморасчетов) КАК КратностьВзаиморасчетов
	               |ПОМЕСТИТЬ ПР
	               |ИЗ
	               |	ВР КАК ВР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВР.ДоговорКонтрагента,
	               |	ВР.Сделка,
	               |	ВР.ДокументРасчетовСКонтрагентом,
	               |	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
	               |	ВР.СчетОплаты
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ВР.СуммаВзаиморасчетовОстаток) <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПР.ДоговорКонтрагента,
	               |	СУММА(ПР.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	СУММА(ПР.СуммаРеглОстаток) КАК СуммаРеглОстаток
	               |ПОМЕСТИТЬ ВзаиморасчетыРегл
	               |ИЗ
	               |	ПР КАК ПР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПР.ДоговорКонтрагента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Договоры.Ссылка КАК Договор,
	               |	Договоры.Владелец КАК Контрагент,
	               |	ЕСТЬNULL(Взаиморасчеты.СуммаВзаиморасчетовОстаток, 0) КАК Сумма,
	               |	ЕСТЬNULL(ВзаиморасчетыРегл.СуммаРеглОстаток, 0) КАК СуммаРегл
	               |ИЗ
	               |	Договоры КАК Договоры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Взаиморасчеты КАК Взаиморасчеты
	               |		ПО Договоры.Ссылка = Взаиморасчеты.ДоговорКонтрагента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВзаиморасчетыРегл КАК ВзаиморасчетыРегл
	               |		ПО Договоры.Ссылка = ВзаиморасчетыРегл.ДоговорКонтрагента";
				   
				   
   Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоров);
   Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", мВалютаРегламентированногоУчета);
   Запрос.УстановитьПараметр("ДатаДокумента", ТекущаяДата());
   
	//абс Родин Лимитный контроль	
	МассивСтатусовДоговоров = Новый Массив;
	МассивСтатусовДоговоров.Добавить(Перечисления.абсСтатусыДоговоров.Исполнение);	
	МассивСтатусовДоговоров.Добавить(Перечисления.абсСтатусыДоговоров.Корректировка);	
	МассивСтатусовДоговоров.Добавить(Перечисления.абсСтатусыДоговоров.СогласованиеОФКПослеКоррректировки);	
	МассивСтатусовДоговоров.Добавить(Перечисления.абсСтатусыДоговоров.ОтказПослеКорректировки);	
	//абс Родин Лимитный контроль	
   
   Запрос.УстановитьПараметр("СтатусДоговора", МассивСтатусовДоговоров);

   
   ВыборкаДоговоров = Запрос.Выполнить().Выбрать();
   
   Пока ВыборкаДоговоров.Следующий() Цикл
	   
	   Стр = НайденныеОбъекты.Добавить();
	   Стр.Контрагент                  = ВыборкаДоговоров.Контрагент;
	   Стр.ДоговорКонтрагента          = ВыборкаДоговоров.Договор;
	   Стр.ОстатокПоВзаиморасчетам     = ?(ВыборкаДоговоров.Сумма < 0, -ВыборкаДоговоров.Сумма, ВыборкаДоговоров.Сумма);
	   Стр.ОстатокПоВзаиморасчетамРегл = ?(ВыборкаДоговоров.СуммаРегл < 0, -ВыборкаДоговоров.СуммаРегл, ВыборкаДоговоров.СуммаРегл)
	   
   КонецЦикла;
	
КонецПроцедуры

Процедура НайтиДубли() Экспорт 
	
	НайденныеОбъекты.Очистить();
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ДоговорыКонтрагентов.Ссылка,
	               |	ДоговорыКонтрагентов.Владелец
	               |ПОМЕСТИТЬ Договоры
	               |ИЗ
	               |	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	               |ГДЕ
	               |	ДоговорыКонтрагентов.Организация = &Организация
	               |	И ДоговорыКонтрагентов.Владелец.ИНН = &ИНН
	               |	И ДоговорыКонтрагентов.Владелец.КПП = &КПП
	               |	И ДоговорыКонтрагентов.Номер = &Номер
	               |	И ДоговорыКонтрагентов.ВидДоговора = &ВидДоговора
	               |	И ДоговорыКонтрагентов.абс_СтатусДоговора В(&СтатусДоговора)
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	               |	СУММА(ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка
	               |ПОМЕСТИТЬ Взаиморасчеты
	               |ИЗ
	               |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(, Организация = &Организация) КАК ВзаиморасчетыСКонтрагентамиОстатки
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	               |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Регистр.ДоговорКонтрагента КАК ДоговорКонтрагента,
	               |	Регистр.Сделка КАК Сделка,
	               |	Регистр.СчетОплаты,
	               |	ВЫБОР
	               |		КОГДА НЕ Регистр.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом
	               |			ТОГДА НЕОПРЕДЕЛЕНО
	               |		ИНАЧЕ ЕСТЬNULL(Регистр.Документ, НЕОПРЕДЕЛЕНО)
	               |	КОНЕЦ КАК ДокументРасчетовСКонтрагентом,
	               |	ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) КАК СуммаВзаиморасчетовОстаток,
	               |	ВЫБОР
	               |		КОГДА Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	               |			ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0)
	               |		КОГДА ЕСТЬNULL(Регистр.СуммаРегОстаток, 0) = 0
	               |			ТОГДА ВЫБОР
	               |					КОГДА КурсыВалютСрезПоследних.Кратность ЕСТЬ NULL 
	               |							ИЛИ КурсыВалютСрезПоследних.Кратность = 0
	               |						ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0)
	               |					ИНАЧЕ ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / КурсыВалютСрезПоследних.Кратность
	               |				КОНЕЦ
	               |		ИНАЧЕ ЕСТЬNULL(Регистр.СуммаРегОстаток, 0)
	               |	КОНЕЦ КАК СуммаРеглОстаток,
	               |	Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ДоговорКонтрагентаВалютаВзаиморасчетов,
	               |	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
	               |	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
	               |ПОМЕСТИТЬ ВР
	               |ИЗ
	               |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(, Организация = &Организация) КАК Регистр
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних
	               |		ПО Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВР.ДоговорКонтрагента,
	               |	ВР.Сделка,
	               |	ВР.СчетОплаты КАК СчетУчетаРасчетов,
	               |	ВР.ДокументРасчетовСКонтрагентом,
	               |	СУММА(ВР.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	СУММА(ВР.СуммаРеглОстаток) КАК СуммаРеглОстаток,
	               |	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
	               |	МАКСИМУМ(ВР.КурсВзаиморасчетов) КАК КурсВзаиморасчетов,
	               |	МАКСИМУМ(ВР.КратностьВзаиморасчетов) КАК КратностьВзаиморасчетов
	               |ПОМЕСТИТЬ ПР
	               |ИЗ
	               |	ВР КАК ВР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВР.ДоговорКонтрагента,
	               |	ВР.Сделка,
	               |	ВР.ДокументРасчетовСКонтрагентом,
	               |	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
	               |	ВР.СчетОплаты
	               |
	               |ИМЕЮЩИЕ
	               |	СУММА(ВР.СуммаВзаиморасчетовОстаток) <> 0
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПР.ДоговорКонтрагента,
	               |	СУММА(ПР.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	               |	СУММА(ПР.СуммаРеглОстаток) КАК СуммаРеглОстаток
	               |ПОМЕСТИТЬ ВзаиморасчетыРегл
	               |ИЗ
	               |	ПР КАК ПР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ПР.ДоговорКонтрагента
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	Договоры.Ссылка КАК Договор,
	               |	Договоры.Владелец КАК Контрагент,
	               |	ЕСТЬNULL(Взаиморасчеты.СуммаВзаиморасчетовОстаток, 0) КАК Сумма,
	               |	ЕСТЬNULL(ВзаиморасчетыРегл.СуммаРеглОстаток, 0) КАК СуммаРегл
	               |ИЗ
	               |	Договоры КАК Договоры
	               |		ЛЕВОЕ СОЕДИНЕНИЕ Взаиморасчеты КАК Взаиморасчеты
	               |		ПО Договоры.Ссылка = Взаиморасчеты.ДоговорКонтрагента
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВзаиморасчетыРегл КАК ВзаиморасчетыРегл
	               |		ПО Договоры.Ссылка = ВзаиморасчетыРегл.ДоговорКонтрагента";
				   
				   
   Запрос.УстановитьПараметр("Организация", Организация);
   Запрос.УстановитьПараметр("ИНН", ИНН);
   Запрос.УстановитьПараметр("КПП", КПП);
   Запрос.УстановитьПараметр("Номер", НомерДоговора);
   Запрос.УстановитьПараметр("ВидДоговора", ВидДоговора);
   Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", мВалютаРегламентированногоУчета);
   Запрос.УстановитьПараметр("ДатаДокумента", ТекущаяДата());
   
   ВыборкаДоговоров = Запрос.Выполнить().Выбрать();
   
   Пока ВыборкаДоговоров.Следующий() Цикл
	   
	   Стр = НайденныеОбъекты.Добавить();
	   Стр.Контрагент                  = ВыборкаДоговоров.Контрагент;
	   Стр.ДоговорКонтрагента          = ВыборкаДоговоров.Договор;
	   Стр.ОстатокПоВзаиморасчетам     = ?(ВыборкаДоговоров.Сумма < 0, -ВыборкаДоговоров.Сумма, ВыборкаДоговоров.Сумма);
	   Стр.ОстатокПоВзаиморасчетамРегл = ?(ВыборкаДоговоров.СуммаРегл < 0, -ВыборкаДоговоров.СуммаРегл, ВыборкаДоговоров.СуммаРегл)
	   
   КонецЦикла;
	
КонецПроцедуры
	
Функция СформироватьЗапросПоЗадолженностиДоговорКор(КонтрагентКор, ДоговорПравильный)	
		
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент",  КонтрагентКор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ТекущаяДата());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", мВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаДокумента", ДоговорПравильный.ВалютаВзаиморасчетов);
	Отбор = Новый Структура;
	Отбор.Вставить("Контрагент", КонтрагентКор);
	Отбор.Вставить("Правильный", Ложь);
	СписокДоговоровНайдены = НайденныеОбъекты.Выгрузить(Отбор, "ДоговорКонтрагента");	
	СписокДоговоровНайдены.Свернуть("ДоговорКонтрагента");
	Запрос.УстановитьПараметр("СписокДоговоров", СписокДоговоровНайдены);
	Запрос.УстановитьПараметр("Период", Новый Граница(ТекущаяДата(),ВидГраницы.Включая)); 
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	Запрос.УстановитьПараметр("СчетОплаты", Массив); 

	Запрос.Текст = 
		
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Регистр.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Регистр.Сделка КАК Сделка,
	|	Регистр.СчетОплаты,
	|	ВЫБОР
	|		КОГДА (НЕ Регистр.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Регистр.Документ, НЕОПРЕДЕЛЕНО)
	|	КОНЕЦ КАК ДокументРасчетовСКонтрагентом,
	|	ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) КАК СуммаВзаиморасчетовОстаток,
	|	ВЫБОР
	|		КОГДА Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	|			ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0)
	|		КОГДА ЕСТЬNULL(Регистр.СуммаРегОстаток, 0) = 0
	|			ТОГДА ВЫБОР
	|					КОГДА КурсыВалютСрезПоследних.Кратность ЕСТЬ NULL 
	|							ИЛИ КурсыВалютСрезПоследних.Кратность = 0
	|						ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0)
	|					ИНАЧЕ ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / КурсыВалютСрезПоследних.Кратность
	|				КОНЕЦ
	|		ИНАЧЕ ЕСТЬNULL(Регистр.СуммаРегОстаток, 0)
	|	КОНЕЦ КАК СуммаРеглОстаток,
	|	Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ДоговорКонтрагентаВалютаВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
	|ПОМЕСТИТЬ ВР
	|ИЗ
	|	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(
	|			,
	|			Контрагент = &Контрагент
	|				И СчетОплаты В ИЕРАРХИИ (&СчетОплаты)
	|				И Организация = &Организация
	|				И (ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаДокумента
	|					ИЛИ &ВалютаДокумента = &ВалютаРегламентированногоУчета
	|						И ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА)
	|				И ДоговорКонтрагента В (&СписокДоговоров)) КАК Регистр
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних
	|		ПО Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВР.ДоговорКонтрагента,
	|	ВР.Сделка,
	|	ВР.СчетОплаты КАК СчетУчетаРасчетов,
	|	ВР.ДокументРасчетовСКонтрагентом,
	|	СУММА(ВР.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	|	СУММА(ВР.СуммаРеглОстаток) КАК СуммаРеглОстаток,
	|	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
	|	МАКСИМУМ(ВР.КурсВзаиморасчетов) КАК КурсВзаиморасчетов,
	|	МАКСИМУМ(ВР.КратностьВзаиморасчетов) КАК КратностьВзаиморасчетов
	|ПОМЕСТИТЬ ПР
	|ИЗ
	|	ВР КАК ВР
	|
	|СГРУППИРОВАТЬ ПО
	|	ВР.ДоговорКонтрагента,
	|	ВР.Сделка,
	|	ВР.ДокументРасчетовСКонтрагентом,
	|	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
	|	ВР.СчетОплаты
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВР.СуммаВзаиморасчетовОстаток) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПР.ДоговорКонтрагента,
	|	ПР.Сделка,
	|	ПР.СчетУчетаРасчетов КАК СчетУчетаРасчетов,
	|	ПР.ДокументРасчетовСКонтрагентом,
	|	ПР.СуммаВзаиморасчетовОстаток,
	|	ПР.СуммаРеглОстаток,
	|	ПР.ДоговорКонтрагентаВалютаВзаиморасчетов,
	|	ПР.КурсВзаиморасчетов,
	|	ПР.КратностьВзаиморасчетов
	|ИЗ
	|	ПР КАК ПР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВР
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПР";
	 	 

	Возврат Запрос.Выполнить();

КонецФункции

Функция СформироватьЗапросПоЗадолженностиДоговорПравильный(ДоговорПравильный)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент",  ДоговорПравильный.Владелец);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ТекущаяДата());
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", мВалютаРегламентированногоУчета);
	Запрос.УстановитьПараметр("ВалютаДокумента", ДоговорПравильный.ВалютаВзаиморасчетов);
	Запрос.УстановитьПараметр("Договор", ДоговорПравильный);
	Запрос.УстановитьПараметр("Период", Новый Граница(ТекущаяДата(),ВидГраницы.Включая)); 
    Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками);
	Массив.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами);
	Запрос.УстановитьПараметр("СчетОплаты", Массив); 
	
	Запрос.Текст = 
		 
 	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
 	|	Регистр.ДоговорКонтрагента КАК ДоговорКонтрагента,
 	|	Регистр.Сделка КАК Сделка,
 	|	Регистр.СчетОплаты,
 	|	ВЫБОР
 	|		КОГДА (НЕ Регистр.ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом)
 	|			ТОГДА НЕОПРЕДЕЛЕНО
 	|		ИНАЧЕ ЕСТЬNULL(Регистр.Документ, НЕОПРЕДЕЛЕНО)
 	|	КОНЕЦ КАК ДокументРасчетовСКонтрагентом,
 	|	ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) КАК СуммаВзаиморасчетовОстаток,
 	|	ВЫБОР
 	|		КОГДА Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
 	|			ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0)
 	|		КОГДА ЕСТЬNULL(Регистр.СуммаРегОстаток, 0) = 0
 	|			ТОГДА ВЫБОР
 	|					КОГДА КурсыВалютСрезПоследних.Кратность ЕСТЬ NULL 
 	|							ИЛИ КурсыВалютСрезПоследних.Кратность = 0
 	|						ТОГДА ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0)
 	|					ИНАЧЕ ЕСТЬNULL(Регистр.СуммаВзаиморасчетовОстаток, 0) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / КурсыВалютСрезПоследних.Кратность
 	|				КОНЕЦ
 	|		ИНАЧЕ ЕСТЬNULL(Регистр.СуммаРегОстаток, 0)
 	|	КОНЕЦ КАК СуммаРеглОстаток,
 	|	Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ДоговорКонтрагентаВалютаВзаиморасчетов,
 	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
 	|	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
 	|ПОМЕСТИТЬ ВР
 	|ИЗ
 	|	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(
 	|			&Период,
 	|			Контрагент = &Контрагент
 	|				И СчетОплаты В ИЕРАРХИИ (&СчетОплаты)
 	|				И Организация = &Организация
 	|				И (ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаДокумента
 	|					ИЛИ &ВалютаДокумента = &ВалютаРегламентированногоУчета
 	|						И ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА)
 	|				И ДоговорКонтрагента = &Договор) КАК Регистр
 	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних
 	|		ПО Регистр.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ
 	|	ВР.ДоговорКонтрагента,
 	|	ВР.Сделка,
 	|	ВР.СчетОплаты КАК СчетУчетаРасчетов,
 	|	ВР.ДокументРасчетовСКонтрагентом,
 	|	СУММА(ВР.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
 	|	СУММА(ВР.СуммаРеглОстаток) КАК СуммаРеглОстаток,
 	|	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
 	|	МАКСИМУМ(ВР.КурсВзаиморасчетов) КАК КурсВзаиморасчетов,
 	|	МАКСИМУМ(ВР.КратностьВзаиморасчетов) КАК КратностьВзаиморасчетов
 	|ПОМЕСТИТЬ ПР
 	|ИЗ
 	|	ВР КАК ВР
 	|
 	|СГРУППИРОВАТЬ ПО
 	|	ВР.ДоговорКонтрагента,
 	|	ВР.Сделка,
 	|	ВР.ДокументРасчетовСКонтрагентом,
 	|	ВР.ДоговорКонтрагентаВалютаВзаиморасчетов,
 	|	ВР.СчетОплаты
 	|
 	|ИМЕЮЩИЕ
 	|	СУММА(ВР.СуммаВзаиморасчетовОстаток) <> 0
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|ВЫБРАТЬ
 	|	ПР.ДоговорКонтрагента,
 	|	ПР.Сделка,
 	|	ПР.СчетУчетаРасчетов КАК СчетУчетаРасчетов,
 	|	ПР.ДокументРасчетовСКонтрагентом,
 	|	ПР.СуммаВзаиморасчетовОстаток,
 	|	ПР.СуммаРеглОстаток,
 	|	ПР.ДоговорКонтрагентаВалютаВзаиморасчетов,
 	|	ПР.КурсВзаиморасчетов,
 	|	ПР.КратностьВзаиморасчетов
 	|ИЗ
 	|	ПР КАК ПР
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|УНИЧТОЖИТЬ ВР
 	|;
 	|
 	|////////////////////////////////////////////////////////////////////////////////
 	|УНИЧТОЖИТЬ ПР";
  	

	Возврат Запрос.Выполнить();

КонецФункции

// Заполняет документ остатками дебиторской задолженности контрагента по данным упр.учета
//
Процедура ЗаполнитьОстаткамиЗадолженностиДоговорКор(КонтрагентКор, ДоговорПравильный) Экспорт
	
	РезультатЗапроса = СформироватьЗапросПоЗадолженностиДоговорКор(КонтрагентКор, ДоговорПравильный);
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока                               = СуммыДолга.Добавить();
		
		Если Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями Тогда
			НоваяСтрока.СчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
			НоваяСтрока.СчетУчетаАвансов              = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным;
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал Тогда
			НоваяСтрока.СчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
			НоваяСтрока.СчетУчетаАвансов              = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал;	
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ Тогда
			НоваяСтрока.СчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
			НоваяСтрока.СчетУчетаАвансов              = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ;			
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным Тогда
			НоваяСтрока.СчетУчетаРасчетов             = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями ;
			НоваяСтрока.СчетУчетаАвансов              = Выборка.СчетУчетаРасчетов ;	
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал Тогда
			НоваяСтрока.СчетУчетаРасчетов             = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал ;
			НоваяСтрока.СчетУчетаАвансов              = Выборка.СчетУчетаРасчетов ;	
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ Тогда
			НоваяСтрока.СчетУчетаРасчетов             = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ ;
			НоваяСтрока.СчетУчетаАвансов              = Выборка.СчетУчетаРасчетов ;					
		Иначе
			НоваяСтрока.СчетУчетаАвансов              = Выборка.СчетУчетаРасчетов;
	        НоваяСтрока.СчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
		КонецЕсли;
		
		НоваяСтрока.ДоговорКонтрагента            = Выборка.ДоговорКонтрагента;
		НоваяСтрока.Сделка                        = Выборка.Сделка;
		НоваяСтрока.ДокументРасчетовСКонтрагентом = Выборка.ДокументРасчетовСКонтрагентом;
		НоваяСтрока.КурсВзаиморасчетов            = Выборка.КурсВзаиморасчетов;
		НоваяСтрока.КратностьВзаиморасчетов       = Выборка.КратностьВзаиморасчетов;
		НоваяСтрока.ВидЗадолженности              = ?(Выборка.СуммаВзаиморасчетовОстаток>0,Перечисления.ВидыЗадолженности.Кредиторская,Перечисления.ВидыЗадолженности.Дебиторская);
		НоваяСтрока.Сумма                         = ?(Выборка.СуммаВзаиморасчетовОстаток< 0, -Выборка.СуммаВзаиморасчетовОстаток, Выборка.СуммаВзаиморасчетовОстаток); 
		НоваяСтрока.СуммаРегл                     = ?(Выборка.СуммаРеглОстаток<0, -Выборка.СуммаРеглОстаток, Выборка.СуммаРеглОстаток);
		НоваяСтрока.КонтрагентКор                 = КонтрагентКор;
		
	КонецЦикла;
	           
КонецПроцедуры

// Заполняет документ остатками кредиторской задолженности контрагента по данным упр.учета
//
Процедура ЗаполнитьОстаткамиЗадолженностиДоговорПравильный(ДоговорПравильный) Экспорт

	РезультатЗапроса = СформироватьЗапросПоЗадолженностиДоговорПравильный(ДоговорПравильный);
	Выборка = РезультатЗапроса.Выбрать();
	
	табРаспределениеПоКонтрагентам = СуммыДолга.Выгрузить();
	табРаспределениеПоКонтрагентам.Свернуть("КонтрагентКор, СчетУчетаРасчетов, ВидЗадолженности", "СуммаРегл");
	табРаспределениеПоКонтрагентам.Колонки.Добавить("СуммаРаспр");
	табРаспределениеПоКонтрагентам.ЗаполнитьЗначения(0, "СуммаРаспр");
	
	Пока Выборка.Следующий() Цикл
				
		Если Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями Тогда
			НоваяСтрокаСчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
			НоваяСтрокаСчетУчетаАвансов              = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным;
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал Тогда
			НоваяСтрокаСчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
			НоваяСтрокаСчетУчетаАвансов              = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал;	
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ Тогда
			НоваяСтрокаСчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
			НоваяСтрокаСчетУчетаАвансов              = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ;			
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным Тогда
			НоваяСтрокаСчетУчетаРасчетов             = ПланыСчетов.Хозрасчетный.РасчетыСПокупателями ;
			НоваяСтрокаСчетУчетаАвансов              = Выборка.СчетУчетаРасчетов ;	
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал Тогда
			НоваяСтрокаСчетУчетаРасчетов             = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал ;
			НоваяСтрокаСчетУчетаАвансов              = Выборка.СчетУчетаРасчетов ;	
		ИначеЕсли Выборка.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ Тогда
			НоваяСтрокаСчетУчетаРасчетов             = ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ ;
			НоваяСтрокаСчетУчетаАвансов              = Выборка.СчетУчетаРасчетов ;					
		Иначе
			НоваяСтрокаСчетУчетаАвансов              = Выборка.СчетУчетаРасчетов;
	        НоваяСтрокаСчетУчетаРасчетов             = Выборка.СчетУчетаРасчетов;
		КонецЕсли;
		
		НоваяСтрокаВидЗадолженности                 = ?(Выборка.СуммаВзаиморасчетовОстаток>0, Перечисления.ВидыЗадолженности.Кредиторская, Перечисления.ВидыЗадолженности.Дебиторская);
		НоваяСтрокаСумма                            = ?(Выборка.СуммаВзаиморасчетовОстаток< 0, -Выборка.СуммаВзаиморасчетовОстаток, Выборка.СуммаВзаиморасчетовОстаток); 
		НоваяСтрокаСуммаРегл                        = ?(Выборка.СуммаРеглОстаток<0, -Выборка.СуммаРеглОстаток, Выборка.СуммаРеглОстаток);		

		Отбор = Новый Структура();
		Отбор.Вставить("СчетУчетаРасчетов", НоваяСтрокаСчетУчетаРасчетов);
        Отбор.Вставить("ВидЗадолженности", ?(НоваяСтрокаВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская, 
		Перечисления.ВидыЗадолженности.Дебиторская, Перечисления.ВидыЗадолженности.Кредиторская));
		НайдСтрокиРаспред = табРаспределениеПоКонтрагентам.НайтиСтроки(Отбор);
		
		НоваяСтрокаСуммаНов = 0;
		
		Для Каждого Стр Из НайдСтрокиРаспред Цикл
			
			Если НоваяСтрокаСуммаРегл <= 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НераспредСумма = Стр.СуммаРегл - Стр.СуммаРаспр;
			
			Если НераспредСумма <> 0 Тогда
				
				 СуммаРаспрПоСтр = Мин(НоваяСтрокаСуммаРегл, НераспредСумма);
				 
				 Стр.СуммаРаспр  = Стр.СуммаРаспр + СуммаРаспрПоСтр;
				 НоваяСтрокаСуммаНов = //НоваяСтрокаСуммаНов + 
				 Стр.СуммаРаспр;
				 
				 НоваяСтрока                               = СуммыДолга.Добавить();
				 НоваяСтрока.СчетУчетаАвансов              = НоваяСтрокаСчетУчетаАвансов;
				 НоваяСтрока.СчетУчетаРасчетов             = НоваяСтрокаСчетУчетаРасчетов;		
				 НоваяСтрока.ДоговорКонтрагента            = Выборка.ДоговорКонтрагента;		
				 НоваяСтрока.Сделка                        = Выборка.Сделка;
				 НоваяСтрока.ДокументРасчетовСКонтрагентом = Выборка.ДокументРасчетовСКонтрагентом;
				 НоваяСтрока.КурсВзаиморасчетов            = Выборка.КурсВзаиморасчетов;
				 НоваяСтрока.КратностьВзаиморасчетов       = Выборка.КратностьВзаиморасчетов;
				 НоваяСтрока.ВидЗадолженности              = НоваяСтрокаВидЗадолженности;
				 НоваяСтрока.Сумма                         = НоваяСтрокаСуммаНов; 
				 НоваяСтрока.СуммаРегл                     = НоваяСтрокаСуммаНов;
				 НоваяСтрока.КонтрагентКор                 = Стр.КонтрагентКор;
				                                           
				 НоваяСтрокаСуммаРегл                      = НоваяСтрокаСуммаРегл - НоваяСтрокаСуммаНов;
				 
			КонецЕсли;
			
		КонецЦикла;
		
		
	КонецЦикла;
	
	Для Каждого Стр Из табРаспределениеПоКонтрагентам Цикл
		
		НераспредСумма = Стр.СуммаРегл - Стр.СуммаРаспр;
		
		Если НераспредСумма <> 0 Тогда
			
			НоваяСтрока                               = СуммыДолга.Добавить();
			
			//Если  ДоговорПравильный.ВестиПоДокументамРасчетовСКонтрагентом Тогда
			//	ДокРасч = Документы.ДокументРасчетовСКонтрагентом.СоздатьДокумент();
			//	ДокРасч.Дата               = ТекущаяДата();
			//	ДокРасч.Организация        = Организация;
			//	ДокРасч.Контрагент         = ДоговорПравильный.Владелец;
			//	ДокРасч.ДоговорКонтрагента = ДоговорПравильный;
			//	ДокРасч.ВалютаДокумента    = ДоговорПравильный.ВалютаВзаиморасчетов;
			//	//	ДокРасч.ДатаВходящегоДокумента  = Выборка.ДокументРасчетовСКонтрагентом.Дата;
			//	//	ДокРасч.НомерВходящегоДокумента = Выборка.ДокументРасчетовСКонтрагентом.Номер;
			//	ДокРасч.СуммаДокумента          = ?(НераспредСумма<0, -НераспредСумма, НераспредСумма);
			//	//	ДокРасч.Комментарий             = "#" + Строка(Выборка.ДокументРасчетовСКонтрагентом);
			//	ДокРасч.Записать();
			//	НоваяСтрока.ДокументРасчетовСКонтрагентом = ДокРасч.Ссылка;
			//КонецЕсли;
						
			НоваяСтрока.ДоговорКонтрагента            = ДоговорПравильный;
			ОтборКурс = Новый Структура;
			ОтборКурс.Вставить("Валюта", ДоговорПравильный.ВалютаВзаиморасчетов);
			Курс = РегистрыСведений.КурсыВалют.СрезПоследних(ТекущаяДата(), ОтборКурс);
			Если Курс.Количество() > 0 Тогда				
				НоваяСтрока.КурсВзаиморасчетов            = Курс[0].Курс;
				НоваяСтрока.КратностьВзаиморасчетов       = Курс[0].Кратность;
			Иначе
				НоваяСтрока.КурсВзаиморасчетов            = 1;
				НоваяСтрока.КратностьВзаиморасчетов       = 1;
			КонецЕсли;
			НоваяСтрока.ВидЗадолженности              = ?(Стр.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская, Перечисления.ВидыЗадолженности.Кредиторская, Перечисления.ВидыЗадолженности.Дебиторская);
			НоваяСтрока.Сумма                         = ?(НераспредСумма< 0, -НераспредСумма, НераспредСумма); 
			НоваяСтрока.СуммаРегл                     = ?(НераспредСумма< 0, -НераспредСумма, НераспредСумма);		
			НоваяСтрока.КонтрагентКор                 = Стр.КонтрагентКор;
			
			ЗаполнитьСчетаУчетаВСтрокеТабЧасти(НоваяСтрока, Истина, НоваяСтрока.ДоговорКонтрагента.Владелец);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПересчитатьСуммуПоСтроке(СтрокаДанных,ПересчетВалютнойСуммы = Ложь)

	Если СтрокаДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВалютаДоговора = СтрокаДанных.ДоговорКонтрагента.ВалютаВзаиморасчетов;
	Если ПересчетВалютнойСуммы Тогда
		СтрокаДанных.Сумма = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаДанных.СуммаРегл,
				             мВалютаРегламентированногоУчета, ВалютаДоговора,
					         1, СтрокаДанных.КурсВзаиморасчетов,
					         1,СтрокаДанных.КратностьВзаиморасчетов);
	Иначе
		СтрокаДанных.СуммаРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(СтрокаДанных.Сумма,
					             ВалютаДоговора,мВалютаРегламентированногоУчета,
					             СтрокаДанных.КурсВзаиморасчетов, 1, 
					             СтрокаДанных.КратностьВзаиморасчетов, 1);
	КонецЕсли;  

	
КонецПроцедуры

Процедура ЗаполнитьСчетаУчетаВСтрокеТабЧастиПрочие(СтрокаТЧ, ЗаполнятьБУ,ТекКонтрагент) Экспорт
	
	Если ЗаполнятьБУ Тогда
		
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Организация, ТекКонтрагент, СтрокаТЧ.ДоговорКонтрагента);
    	
		Если СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
			//СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетов;
			//СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансов;
		ИначеЕсли СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем 
			ИЛИ СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
			//СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетовПокупателя;
			//СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансовПокупателя;
		ИначеЕсли СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетовСКомитентом;
			СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансов;
		Иначе //.Прочее
			СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетовПокупателя;
			СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансовПокупателя;
		КонецЕсли;
		
	Иначе
		
		СтрокаТЧ.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		СтрокаТЧ.СчетУчетаАвансов  = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		
	КонецЕсли;
                                                                  
КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабЧасти()

Процедура ЗаполнитьСчетаУчетаВСтрокеТабЧасти(СтрокаТЧ, ЗаполнятьБУ,ТекКонтрагент) Экспорт
	
	Если ЗаполнятьБУ Тогда
		
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Организация, ТекКонтрагент, СтрокаТЧ.ДоговорКонтрагента);
    	
		Если СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
			СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетов;
			СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансов;
		ИначеЕсли СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем 
			ИЛИ СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером Тогда
			СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетовПокупателя;
			СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансовПокупателя;
		ИначеЕсли СтрокаТЧ.ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом Тогда
			СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетовСКомитентом;
			СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансов;
		Иначе //.Прочее
			СтрокаТЧ.СчетУчетаРасчетов = СчетаУчета.СчетРасчетовПокупателя;
			СтрокаТЧ.СчетУчетаАвансов  = СчетаУчета.СчетАвансовПокупателя;
		КонецЕсли;
		
	Иначе
		
		СтрокаТЧ.СчетУчетаРасчетов = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		СтрокаТЧ.СчетУчетаАвансов  = ПланыСчетов.Хозрасчетный.ПустаяСсылка();
		
	КонецЕсли;
                                                                  
КонецПроцедуры // ЗаполнитьСчетаУчетаВСтрокеТабЧасти()


мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
мПравильныйДоговор = Неопределено;
