
&НаСервере
Процедура Инициализировать(ИмяТабличнойЧасти = Неопределено, ТабличноеПолеДокумента = Неопределено) Экспорт
		
	Если ЗначениеЗаполнено(Документ.ВалютаПланирования)
		И Документ.ВалютаПланирования <> Константы.ВалютаУправленческогоУчета.Получить() тогда
		ДанныеПоВалюте = Истина;
	КонецЕсли;
				
	ЗаполнитьМакет();
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакет()
	         
	Макет = Обработки.абс_ЗагрузкаВводаПланаБюджета.ПолучитьМакет("МакетШапка");
	 
	ОбластьОтступ 		= Макет.ПолучитьОбласть("ОбластьОтступ");
	ОбластьАналитика 	= Макет.ПолучитьОбласть("ОбластьАналитика");
	ОбластьСумма 		= Макет.ПолучитьОбласть("ОбластьПодписьСуммы");
	ОбластьСтрока 		= Макет.ПолучитьОбласть("ОбластьСтрокаСуммы");
	ОбластьСтрокаАналитика 		= Макет.ПолучитьОбласть("ОбластьСтрокаАналитика");
	
	//мСоответствиеКолонокАналитикам = Новый Соответствие();
	ПолеТабличногоДокументаЗагрузка.Очистить();
	ПолеТабличногоДокументаЗагрузка.Вывести(ОбластьОтступ);
	
	//мКоличествоКолонокВСоответствии = 1;
	
	Если НЕ КапВложения Тогда
		// Бюджетная статья, тип контрагента
		ВывестиПодписьКолонки("БюджетнаяСтатья", "Бюджетная статья"	, Макет, ОбластьАналитика);
		ВывестиПодписьКолонки("ТипКонтрагента", "Тип контрагента"	, Макет, ОбластьАналитика);
		ВывестиПодписьКолонки("ТипСети"								, "Тип сети"		, Макет, ОбластьАналитика); //АБС Коломиец 15.02
				
	Иначе
		
		ВывестиПодписьКолонки("ТипРасходаНаПроизводствоИРеализацию"	, "Тип расхода"		, Макет, ОбластьАналитика);
		ВывестиПодписьКолонки("ТипКонтрагента"						, "Тип контрагента"	, Макет, ОбластьАналитика);
		ВывестиПодписьКолонки("ТипСети"								, "Тип сети"		, Макет, ОбластьАналитика);
		ВывестиПодписьКолонки("КВ"									, "КВ"				, Макет, ОбластьАналитика);
		ВывестиПодписьКолонки("ТЭО"									, "ТЭО"				, Макет, ОбластьАналитика);
		
	КонецЕсли;
	
	СоответствиеНомеровМесяцам = Новый Соответствие;
	СоответствиеНомеровМесяцам.Вставить(1,"Янв.");
	СоответствиеНомеровМесяцам.Вставить(2,"Фев.");
	СоответствиеНомеровМесяцам.Вставить(3,"Март");
	СоответствиеНомеровМесяцам.Вставить(4,"Апр.");
	СоответствиеНомеровМесяцам.Вставить(5,"Май");
	СоответствиеНомеровМесяцам.Вставить(6,"Июнь");
	СоответствиеНомеровМесяцам.Вставить(7,"Июль");
	СоответствиеНомеровМесяцам.Вставить(8,"Авг.");
	СоответствиеНомеровМесяцам.Вставить(9,"Сен.");
	СоответствиеНомеровМесяцам.Вставить(10,"Окт.");
	СоответствиеНомеровМесяцам.Вставить(11,"Нояб.");
	СоответствиеНомеровМесяцам.Вставить(12,"Дек.");	
	
	Для н = 1 по 12 Цикл
		
		СуффиксПериода = Прав("0" + н, 2);
		
		ВывестиПодписьКолонки("СуммаРуб" + СуффиксПериода, СоответствиеНомеровМесяцам.Получить(н) + " (руб.)", Макет, ОбластьСумма);
		
		Если ДанныеПоВалюте Тогда
			ВывестиПодписьКолонки("СуммаВал" + СуффиксПериода, СоответствиеНомеровМесяцам.Получить(н) + " (вал.)", Макет, ОбластьСумма);
		КонецЕсли;

	КонецЦикла;	
	                                    
	Для Каждого СтрокаТЧ из мТЧ_Бюджет цикл
		ПолеТабличногоДокументаЗагрузка.Вывести(ОбластьОтступ);
		
		Если НЕ КапВложения Тогда
			// Бюджетная статья, тип контрагента
			ВывестиСтроку("БюджетнаяСтатья", СтрокаТЧ.БюджетнаяСтатья, Макет, ОбластьСтрокаАналитика);
			ВывестиСтроку("ТипКонтрагента", СтрокаТЧ.ТипКонтрагента, Макет, ОбластьСтрокаАналитика);
			ВывестиСтроку("ТипСети"		  , СтрокаТЧ.ТипСети, Макет, ОбластьСтрокаАналитика);  //АБС Коломиец 15.02
			
		Иначе
			
			ВывестиСтроку("ТипРасходаНаПроизводствоИРеализацию"	, СтрокаТч.ТипРасходаНаПроизводствоИРеализацию		, Макет, ОбластьСтрокаАналитика);
			ВывестиСтроку("ТипКонтрагента"						, СтрокаТЧ.ТипКонтрагента	, Макет, ОбластьСтрокаАналитика);
			ВывестиСтроку("ТипСети"								, СтрокаТЧ.ТипСети, Макет, ОбластьСтрокаАналитика);
			ВывестиСтроку("КВ"									, СтрокаТЧ.КВ				, Макет, ОбластьСтрокаАналитика);
			ВывестиСтроку("ТЭО"									, СтрокаТЧ.ТЭО				, Макет, ОбластьСтрокаАналитика);
			
		КонецЕсли;
		
		Для н = 1 по 12 Цикл
			
			СуффиксПериода = Прав("0" + н, 2);
			
			ВывестиСтроку("СуммаРуб" + СуффиксПериода, СтрокаТЧ["СуммаРуб" + СуффиксПериода], Макет, ОбластьСтрока);
			
			Если ДанныеПоВалюте Тогда
				ВывестиСтроку("СуммаВал" + СуффиксПериода, СтрокаТЧ["СуммаВал" + СуффиксПериода], Макет, ОбластьСтрока);
			КонецЕсли;
		КонецЦикла;	
		
	КонецЦикла;
	
	//Элементы.ПолеТабличногоДокументаЗагрузка.Вывести(ОбластьОтступ);
		
КонецПроцедуры

Процедура ВывестиПодписьКолонки(КлючКолонки, ПредставлениеКолонки, Макет, ОбластьМакета)
	
	//мКоличествоКолонокВСоответствии = мКоличествоКолонокВСоответствии + 1;
	
	мСоответствиеКолонокАналитикам.Добавить(КлючКолонки);
	
	ОбластьМакета.Параметры.Подпись = ПредставлениеКолонки;	
	ПолеТабличногоДокументаЗагрузка.Присоединить(ОбластьМакета);
	
КонецПроцедуры

Процедура ВывестиСтроку(КлючКолонки, ПредставлениеКолонки, Макет, ОбластьМакета)
	
	//мКоличествоКолонокВСоответствии = мКоличествоКолонокВСоответствии + 1;
	
	//мСоответствиеКолонокАналитикам.Вставить(КлючКолонки, мКоличествоКолонокВСоответствии);
	
	ОбластьМакета.Параметры.Подпись = ПредставлениеКолонки;	
	ПолеТабличногоДокументаЗагрузка.Присоединить(ОбластьМакета);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьБюджетнуюСтатью(НаименованиеСтатьи)
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиОборотовПоБюджетам.Ссылка
	|ИЗ
	|	Справочник.СтатьиОборотовПоБюджетам КАК СтатьиОборотовПоБюджетам
	|ГДЕ
	|	СтатьиОборотовПоБюджетам.Наименование = &Наименование
	|	И (НЕ СтатьиОборотовПоБюджетам.ПометкаУдаления)
	|	И (НЕ СтатьиОборотовПоБюджетам.Ссылка В ИЕРАРХИИ (&СсылкаКорзина))
	|	И СтатьиОборотовПоБюджетам.абс_ДоходнаяСтатья = &БюджетДоходов";
	
	Запрос.УстановитьПараметр("Наименование", НаименованиеСтатьи);
	Запрос.УстановитьПараметр("СсылкаКорзина", Справочники.СтатьиОборотовПоБюджетам.НайтиПоНаименованию("Корзина"));
	Запрос.УстановитьПараметр("БюджетДоходов", Документ.БюджетДоходов);	
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Процедура ПриОткрытии()
	Инициализировать(); 
КонецПроцедуры

&НаСервере
Функция ЗагрузитьВТЧ()
	
	Объект.ТабЗагрузки.Очистить();
	
	Для н = 2 по ПолеТабличногоДокументаЗагрузка.ВысотаТаблицы Цикл
		
		СтрокаТабЗагрузки = Объект.ТабЗагрузки.Добавить();
		
		Для Каждого КлючЗначение Из мСоответствиеКолонокАналитикам Цикл
			
			ИмяРеквизита = КлючЗначение.Значение; //
			
			ЭтоСумма = Ложь;
			
			Если Найти(КлючЗначение.Значение, "Сумма") > 0 Тогда    //
				ЭтоСумма = Истина;
			КонецЕсли;
			
			ТекЗначение = СокрЛП(ПолеТабличногоДокументаЗагрузка.Область(н, КлючЗначение.ПолучитьИдентификатор() + 2).Текст);
			
			Если НЕ ЭтоСумма Тогда
				ТипРеквизита = ТипЗнч(СтрокаТабЗагрузки[ИмяРеквизита]);
				
				ЭтоСправочник = Справочники.ТипВсеСсылки().СодержитТип(ТипРеквизита);
				
				ЭкземплярТипаРеквизита = Новый (ТипРеквизита);
				
				Если ЭтоСправочник Тогда
					Если ТекЗначение = "" тогда
						ЭлементСсылка = Справочники[ЭкземплярТипаРеквизита.Метаданные().Имя].ПустаяСсылка();
					Иначе
						
						ТипМетаданных = ЭкземплярТипаРеквизита.Метаданные().Имя;
						
						Если ТипМетаданных = "СтатьиОборотовПоБюджетам" Тогда
							ЭлементСсылка = ПолучитьБюджетнуюСтатью(ТекЗначение);
						Иначе
							ЭлементСсылка = Справочники[ЭкземплярТипаРеквизита.Метаданные().Имя].НайтиПоНаименованию(ТекЗначение);
						КонецЕсли;
						
					КонецЕсли;
					
					СтрокаТабЗагрузки[КлючЗначение.Значение] = ЭлементСсылка;    //
					
				КонецЕсли;  
				
			Иначе
				
				ЗначениеЧислом = 0;
				
				Попытка
					ЗначениеЧислом = Число(ТекЗначение);
					
				Исключение
					
				КонецПопытки;
				
				СтрокаТабЗагрузки[КлючЗначение.Значение] = ЗначениеЧислом;  //
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Объект.ТабЗагрузки;
	//Документ.Бюджет.Загрузить(Объект.ТабЗагрузки.Выгрузить());
		
КонецФункции

&НаКлиенте
Процедура КомандаВыполнитьЗагрузку(Команда)
	
	Если Вопрос("Табличная часть документа будет замещена введенными данными! Заменить данные в документе?", РежимДиалогаВопрос.ДаНет)=КодВозвратаДиалога.Да тогда
		ЭтаФорма.Закрыть(ЗагрузитьВТЧ());
	Иначе
		ЭтаФорма.Закрыть();
	КонецЕсли;	
    
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Документ   = Параметры.ДокВводБюджета;
	мТЧ_Бюджет.Загрузить(Параметры.мТЧ_Бюджет.Выгрузить());
	
КонецПроцедуры




