Процедура Обработать() Экспорт
	Счета = ПланыСчетов.Международный;
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	               |	СписокОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	               |	0 КАК КоличествоВыпущеннойПродукции,
	               |	СведенияОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	               |	СведенияОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	               |	СведенияОС.СчетУчета КАК СчетУчета,
	               |	СведенияОС.СчетЗатрат КАК СчетЗатрат,
	               |	СведенияОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	               |	СведенияОС.СчетСниженияСтоимости КАК СчетСниженияСтоимости,
	               |	СведенияОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	               |	СведенияОС.КоэффициентУскорения КАК КоэффициентУскорения,
	               |	СведенияОС.ПредполагаемыйОбъемПродукции КАК ПредполагаемыйОбъемПродукции,
	               |	СведенияОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	               |	СведенияОС.СправедливаяСтоимость КАК СправедливаяСтоимость,
	               |	СведенияОС.МестонахождениеОбъекта КАК МестонахождениеОбъекта,
	               |	СведенияОС.МОЛ КАК МОЛ,
	               |	СведенияОС.НачислятьАмортизацию КАК НачислятьАмортизацию,
	               |	СведенияОС.СуммаНачисленнойАмортизации КАК СуммаНачисленнойАмортизации,
	               |	СведенияОС.Состояние КАК Состояние,
	               |	СведенияОС.Субконто1 КАК Субконто1,
	               |	СведенияОС.Субконто2 КАК Субконто2,
	               |	СведенияОС.Субконто3 КАК Субконто3,
	               |	УчетнаяПолитика.МетодОценкиОсновныхСредств КАК МетодОценкиОсновныхСредств,
	               |	СписокОС.НомерСтроки
	               |ИЗ
	               |	Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства КАК СписокОС
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
	               |		&Дата,
	               |		ОсновноеСредство В
	               |		    (ВЫБРАТЬ
	               |		        Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства.ОсновноеСредство
	               |		    ИЗ
	               |		        Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства
	               |		    ГДЕ
	               |		        Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства.Ссылка = &Ссылка)) КАК СведенияОС
	               |		ПО СведенияОС.ОсновноеСредство = СписокОС.ОсновноеСредство
	               |			И (СведенияОС.НачислятьАмортизацию)
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаМеждународныйУчет.СрезПоследних(&Дата, Организация = &Организация) КАК УчетнаяПолитика
	               |		ПО (ИСТИНА)
	               |ГДЕ
	               |	СписокОС.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецМесяца(Документ.Дата),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Документ.Организация);
	ВыборкаОС = Запрос.Выполнить().Выбрать();
	
	
	
	Пока ВыборкаОС.Следующий() Цикл
		ДатаУстановки = НачалоМесяца(ВыборкаОС.ДатаПринятияКУчету);
		Сумма = 0;
		СчетУчета = ВыборкаОС.СчетУчета;
		СчетЗатрат = ВыборкаОС.СчетЗатрат;
		СчетНачисленияАмортизации = ВыборкаОС.СчетНачисленияАмортизации;
		СчетСниженияСтоимости = ВыборкаОС.СчетСниженияСтоимости;

		ОставшеесяЧислоМесяцев = ВыборкаОС.СрокПолезногоИспользования - Окр((НачалоМесяца(КонецМесяца(Документ.Дата)+1)-ДатаУстановки)/60/60/24/30,0);
		Если ОставшеесяЧислоМесяцев>=0 Тогда			
			продолжить;
		КонецЕсли;
		МассивСчетов = Новый Массив();
		МассивСчетов.Добавить(ВыборкаОС.СчетУчета);
		МассивСчетов.Добавить(ВыборкаОС.СчетНачисленияАмортизации);
		МассивСчетов.Добавить(ВыборкаОС.СчетСниженияСтоимости);
		БухИтоги = Обработки.БухгалтерскиеИтоги.Создать();
		БухИтоги.РассчитатьИтоги("Международный", "КонечныйОстатокДт,КонечныйОстатокКт", "Сумма", "Счет,Субконто1", КонецМесяца(Документ.Дата), КонецМесяца(Документ.Дата), , МассивСчетов, ПланыВидовХарактеристик.ВидыСубконтоМеждународные.ОсновныеСредства, , ,"Организация", Документ.Организация);
		НакопленнаяАмортизация = БухИтоги.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет,Субконто1", СчетНачисленияАмортизации, ВыборкаОС.ОсновноеСредство);
		ОстаточнаяСтоимость = БухИтоги.ПолучитьИтог("СуммаКонечныйОстатокДт", "Счет,Субконто1", СчетУчета, ВыборкаОС.ОсновноеСредство)-
					НакопленнаяАмортизация -
					БухИтоги.ПолучитьИтог("СуммаКонечныйОстатокКт", "Счет,Субконто1", СчетСниженияСтоимости, ВыборкаОС.ОсновноеСредство);
					Если НакопленнаяАмортизация = 0 Тогда
						продолжить;
					КонецЕсли;	
		Коэффициент = ОстаточнаяСтоимость / НакопленнаяАмортизация;			
		СтрокаДокумента = Документ.ОсновныеСредства[ВыборкаОС.НомерСтроки-1];
		НовыйСрок = СтрокаДокумента.СрокПолезногоИспользования+Окр(СтрокаДокумента.СрокПолезногоИспользования*Коэффициент+0.5,0);
		НовыйСрок = НовыйСрок - ОставшеесяЧислоМесяцев;
		сообщить("В строке № "+ВыборкаОС.НомерСтроки+" срок полезного использования изменен с "+СтрокаДокумента.СрокПолезногоИспользования+" на "+НовыйСрок);
		СтрокаДокумента.СрокПолезногоИспользования = НовыйСрок;
		
	КонецЦикла;	
			

КонецПроцедуры	

//Процедура ОбработкаВсехОсновныхСредств() Экспорт
//	Счета = ПланыСчетов.Международный;
//		
//	Запрос = Новый Запрос;
//	Запрос.Текст = "ВЫБРАТЬ
//				   |	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
//				   |	СписокОС.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
//				   |	0 КАК КоличествоВыпущеннойПродукции,
//				   |	СведенияОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
//				   |	СведенияОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
//				   |	СведенияОС.СчетУчета КАК СчетУчета,
//				   |	СведенияОС.СчетЗатрат КАК СчетЗатрат,
//				   |	СведенияОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
//				   |	СведенияОС.СчетСниженияСтоимости КАК СчетСниженияСтоимости,
//				   |	СведенияОС.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
//				   |	СведенияОС.КоэффициентУскорения КАК КоэффициентУскорения,
//				   |	СведенияОС.ПредполагаемыйОбъемПродукции КАК ПредполагаемыйОбъемПродукции,
//				   |	СведенияОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
//				   |	СведенияОС.СправедливаяСтоимость КАК СправедливаяСтоимость,
//				   |	СведенияОС.МестонахождениеОбъекта КАК МестонахождениеОбъекта,
//				   |	СведенияОС.МОЛ КАК МОЛ,
//				   |	СведенияОС.НачислятьАмортизацию КАК НачислятьАмортизацию,
//				   |	СведенияОС.СуммаНачисленнойАмортизации КАК СуммаНачисленнойАмортизации,
//				   |	СведенияОС.Состояние КАК Состояние,
//				   |	СведенияОС.Субконто1 КАК Субконто1,
//				   |	СведенияОС.Субконто2 КАК Субконто2,
//				   |	СведенияОС.Субконто3 КАК Субконто3,
//				   |	УчетнаяПолитика.МетодОценкиОсновныхСредств КАК МетодОценкиОсновныхСредств,
//				   |	СписокОС.НомерСтроки
//				   |ИЗ
//				   |	Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства КАК СписокОС
//				   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
//				   |		&Дата,
//				   |		ОсновноеСредство В
//				   |		    (ВЫБРАТЬ
//				   |		        Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства.ОсновноеСредство
//				   |		    ИЗ
//				   |		        Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства
//				   |		    ГДЕ
//				   |		        Документ.ПоступлениеОсновныхСредствМеждународный.ОсновныеСредства.Ссылка = &Ссылка)) КАК СведенияОС
//				   |		ПО СведенияОС.ОсновноеСредство = СписокОС.ОсновноеСредство
//				   |			И (СведенияОС.НачислятьАмортизацию)
//				   |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаМеждународныйУчет.СрезПоследних(&Дата, Организация = &Организация) КАК УчетнаяПолитика
//				   |		ПО (ИСТИНА)
//				   |ГДЕ
//				   |	СписокОС.Ссылка = &Ссылка";
//	
//	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
//	Запрос.УстановитьПараметр("Дата", Новый Граница(КонецМесяца(Документ.Дата),ВидГраницы.Включая));
//	Запрос.УстановитьПараметр("Организация", Документ.Организация);
//	ВыборкаОС = Запрос.Выполнить().Выбрать();
//	
//	
//КонецПроцедуры	

