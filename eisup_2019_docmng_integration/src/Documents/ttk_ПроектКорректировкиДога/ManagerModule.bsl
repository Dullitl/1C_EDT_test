
Функция ПолучитьДоступныеСтатусы(ТекСтатус) Экспорт
	
	СписокСтатусов = Новый СписокЗначений;
	
	Если ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.СогласованиеДК);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.СогласованиеДК Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Завершен);
	Иначе
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
	КонецЕсли;	
	
	Возврат СписокСтатусов;
	
КонецФункции

Функция ПолучитьОстаткиДебиторскойЗадолженностиУпр(ПараметрыОтбора) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Контрагент",  ПараметрыОтбора.КонтрагентДебитор);
	Запрос.УстановитьПараметр("Организация", ПараметрыОтбора.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ПараметрыОтбора.Дата);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	Запрос.УстановитьПараметр("ВалютаДокумента", ПараметрыОтбора.ВалютаДокумента);
	
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента,
	 |	ВзаиморасчетыСКонтрагентами.Сделка,
	 |	ЕСТЬNULL(ВзаиморасчетыПоДокументам.ДокументРасчетовСКонтрагентом, НЕОПРЕДЕЛЕНО) КАК ДокументРасчетовСКонтрагентом,
	 |	ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	 |	ВЫБОР
	 |		КОГДА ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	 |			ТОГДА ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток)
	 |		КОГДА ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаРеглОстаток, 0) = 0
	 |			ТОГДА ВЫБОР
	 |					КОГДА КурсыВалютСрезПоследних.Кратность ЕСТЬ NULL 
	 |							ИЛИ КурсыВалютСрезПоследних.Кратность = 0
	 |						ТОГДА ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0)
	 |					ИНАЧЕ ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / КурсыВалютСрезПоследних.Кратность
	 |				КОНЕЦ
	 |		ИНАЧЕ ВзаиморасчетыПоДокументам.СуммаРеглОстаток
	 |	КОНЕЦ КАК СуммаРеглОстаток,
	 |	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	 |	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
	 |	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
	 |ИЗ
	 |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	 |		,
	 |		Контрагент = &Контрагент
	 |		    И Организация = &Организация
	 |		    И (ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаДокумента
	 |		        ИЛИ &ВалютаДокумента = &ВалютаРегламентированногоУчета
	 |		            И ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА)) КАК ВзаиморасчетыСКонтрагентами
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(
	 |		,
	 |		Контрагент = &Контрагент
	 |		    И Организация = &Организация
	 |		    И УпрУчет = ИСТИНА
	 |		    И (ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаДокумента
	 |		        ИЛИ &ВалютаДокумента = &ВалютаРегламентированногоУчета
	 |		            И ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА)) КАК ВзаиморасчетыПоДокументам
	 |		ПО ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента = ВзаиморасчетыПоДокументам.ДоговорКонтрагента
	 |			И ВзаиморасчетыСКонтрагентами.Сделка = ВзаиморасчетыПоДокументам.Сделка
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних
	 |		ПО ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
	 |ГДЕ
	 |	ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) > 0";

	РезультатЗапроса = Запрос.Выполнить();

	Возврат РезультатЗапроса.Выбрать();
	
КонецФункции

Функция ПолучитьОстаткиКредиторскойЗадолженностиУпр(ПараметрыОтбора) Экспорт
	
	Запрос = Новый Запрос;
	
	Если ПараметрыОтбора.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.ПроведениеВзаимозачета Тогда
		Запрос.УстановитьПараметр("Контрагент",  ПараметрыОтбора.КонтрагентКредитор);
	Иначе
		Запрос.УстановитьПараметр("Контрагент",  ПараметрыОтбора.КонтрагентДебитор);
	КонецЕсли;
	Запрос.УстановитьПараметр("Организация", ПараметрыОтбора.Организация);
	Запрос.УстановитьПараметр("ДатаДокумента", ПараметрыОтбора.Дата);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", глЗначениеПеременной("ВалютаРегламентированногоУчета"));
	Запрос.УстановитьПараметр("ВалютаДокумента", ПараметрыОтбора.ВалютаДокумента);
	
	Запрос.Текст = 
	 "ВЫБРАТЬ
	 |	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента,
	 |	ВзаиморасчетыСКонтрагентами.Сделка,
	 |	ЕСТЬNULL(ВзаиморасчетыПоДокументам.ДокументРасчетовСКонтрагентом, НЕОПРЕДЕЛЕНО) КАК ДокументРасчетовСКонтрагентом,
	 |	ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) КАК СуммаВзаиморасчетовОстаток,
	 |	ВЫБОР
	 |		КОГДА ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаРегламентированногоУчета
	 |			ТОГДА ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток)
	 |		КОГДА ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаРеглОстаток, 0) = 0
	 |			ТОГДА ВЫБОР
	 |					КОГДА КурсыВалютСрезПоследних.Кратность ЕСТЬ NULL 
	 |							ИЛИ КурсыВалютСрезПоследних.Кратность = 0
	 |						ТОГДА ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0)
	 |					ИНАЧЕ ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) * ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) / КурсыВалютСрезПоследних.Кратность
	 |				КОНЕЦ
	 |		ИНАЧЕ ВзаиморасчетыПоДокументам.СуммаРеглОстаток
	 |	КОНЕЦ КАК СуммаРеглОстаток,
	 |	ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов,
	 |	ЕСТЬNULL(КурсыВалютСрезПоследних.Курс, 0) КАК КурсВзаиморасчетов,
	 |	ЕСТЬNULL(КурсыВалютСрезПоследних.Кратность, 0) КАК КратностьВзаиморасчетов
	 |ИЗ
	 |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	 |		,
	 |		Контрагент = &Контрагент
	 |		    И Организация = &Организация
	 |		    И (ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаДокумента
	 |		        ИЛИ &ВалютаДокумента = &ВалютаРегламентированногоУчета
	 |		            И ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА)) КАК ВзаиморасчетыСКонтрагентами
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(
	 |		,
	 |		Контрагент = &Контрагент
	 |		    И Организация = &Организация
	 |		    И УпрУчет = ИСТИНА
	 |		    И (ДоговорКонтрагента.ВалютаВзаиморасчетов = &ВалютаДокумента
	 |		        ИЛИ &ВалютаДокумента = &ВалютаРегламентированногоУчета
	 |		            И ДоговорКонтрагента.РасчетыВУсловныхЕдиницах = ИСТИНА)) КАК ВзаиморасчетыПоДокументам
	 |		ПО ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента = ВзаиморасчетыПоДокументам.ДоговорКонтрагента
	 |			И ВзаиморасчетыСКонтрагентами.Сделка = ВзаиморасчетыПоДокументам.Сделка
	 |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалют.СрезПоследних(&ДатаДокумента, ) КАК КурсыВалютСрезПоследних
	 |		ПО ВзаиморасчетыСКонтрагентами.ДоговорКонтрагента.ВалютаВзаиморасчетов = КурсыВалютСрезПоследних.Валюта
	 |ГДЕ
	 |	ЕСТЬNULL(ВзаиморасчетыПоДокументам.СуммаВзаиморасчетовОстаток, ВзаиморасчетыСКонтрагентами.СуммаВзаиморасчетовОстаток) < 0";

	РезультатЗапроса = Запрос.Выполнить();

	Возврат РезультатЗапроса.Выбрать();
	
КонецФункции

Функция КорректировкаДолга(ТабДок, Ссылка) Экспорт

	Макет = Документы.ttk_ПроектКорректировкиДога.ПолучитьМакет("КорректировкаДолга");
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаДолга.Ссылка.Номер КАК Номер,
	|	КорректировкаДолга.Ссылка.Дата КАК Дата,
	|	КорректировкаДолга.Ссылка.КонтрагентДебитор КАК Получатель,
	|	КорректировкаДолга.Ссылка.Организация КАК Поставщик,
	|	КорректировкаДолга.Ссылка.Организация КАК Организация,
	|	КорректировкаДолга.НомерСтроки КАК НомерСтроки,
	|	КорректировкаДолга.ДоговорКонтрагента КАК ДоговорВзаиморасчетов,
	|	КорректировкаДолга.ДоговорКонтрагента.Представление КАК ПредставлениеДоговора,
	|	КорректировкаДолга.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК Валюта,
	|	КорректировкаДолга.Сделка КАК Сделка,
	|	КорректировкаДолга.Сделка.Представление КАК ПредставлениеСделки,
	|	ВЫБОР
	|		КОГДА КорректировкаДолга.ВидЗадолженности = &УвеличениеДолга
	|			ТОГДА КорректировкаДолга.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК УвеличениеДолгаКонтрагента,
	|	ВЫБОР
	|		КОГДА КорректировкаДолга.ВидЗадолженности = &УменьшениеДолга
	|			ТОГДА КорректировкаДолга.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК УменьшениеДолгаКонтрагента
	|ИЗ
	|	Документ.ttk_ПроектКорректировкиДога.СуммыДолга КАК КорректировкаДолга
	|ГДЕ
	|	КорректировкаДолга.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ ПО
	|	Валюта";
	Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("УвеличениеДолга", Перечисления.ВидыЗадолженности.Кредиторская);
	Запрос.УстановитьПараметр("УменьшениеДолга", Перечисления.ВидыЗадолженности.Дебиторская);

	Шапка = Запрос.Выполнить();
	ТабДок.Очистить();
	
	ТабДок.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КорректировкаДолга_КорректировкаДолга";
	
	// Выводим шапку накладной
	ЗаголовокВыведен = Ложь;
	НомерПП = 0;
	
	ВыборкаВалют       = Шапка.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаВалют.Следующий() Цикл
		
		ИтогоВПлюс  = 0;
		ИтогоВМинус = 0;
		ВыборкаСтрокТовары = ВыборкаВалют.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Если НЕ ЗаголовокВыведен Тогда
				
				ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");
				ОбластьМакета.Параметры.ТекстЗаголовка = ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ВыборкаСтрокТовары, "Корректировка долга");
				ТабДок.Вывести(ОбластьМакета);
				
				ОбластьМакета = Макет.ПолучитьОбласть("Поставщик");
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
				ОбластьМакета.Параметры.ПредставлениеПоставщика = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ВыборкаСтрокТовары.Организация, ВыборкаСтрокТовары.Дата), "ПолноеНаименование,");
				ТабДок.Вывести(ОбластьМакета);
				
				ОбластьМакета = Макет.ПолучитьОбласть("Покупатель");
				ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
				ОбластьМакета.Параметры.ПредставлениеПолучателя = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ВыборкаСтрокТовары.Получатель, ВыборкаСтрокТовары.Дата), "ПолноеНаименование,");
				ТабДок.Вывести(ОбластьМакета);
				
				ОбластьМакета = Макет.ПолучитьОбласть("ШапкаТаблицы");
				ЗаголовокВыведен = Истина;
				ТабДок.Вывести(ОбластьМакета);
				
			КонецЕсли;
			
			ОбластьМакета = Макет.ПолучитьОбласть("Строка");
			НомерПП = НомерПП + 1;
			ОбластьМакета.Параметры.НомерПП = НомерПП;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			ТабДок.Вывести(ОбластьМакета);
			
			ИтогоВПлюс  = ИтогоВПлюс  + ВыборкаСтрокТовары.УвеличениеДолгаКонтрагента;
			ИтогоВМИнус = ИтогоВМИнус + ВыборкаСтрокТовары.УменьшениеДолгаКонтрагента;
			
		КонецЦикла;
		
		ОбластьМакета = Макет.ПолучитьОбласть("Подписи");
		ОбластьМакета.Параметры.ИтогоВПлюс  = ИтогоВПлюс;
		ОбластьМакета.Параметры.ИтогоВМИнус = ИтогоВМИнус;
		ОбластьМакета.Параметры.Валюта      = ВыборкаВалют.Валюта;
		ТабДок.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	Возврат ТабДок;
		
КонецФункции
	
