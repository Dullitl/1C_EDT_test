
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если НЕ ЗначениеЗаполнено(Организация) Тогда
		Сообщить("Проведение невозможно, не заполнен реквизит: Организация!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаСдачиВАренду) Тогда
		Сообщить("Проведение невозможно, не заполнен реквизит: ""Дата сдачи в аренду""!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(Арендатор) Тогда
		Сообщить("Проведение невозможно, не заполнен реквизит: Арендатор!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

	Если НЕ ЗначениеЗаполнено(НомерДоговора) Тогда
		Сообщить("Проведение невозможно, не заполнен реквизит: Номер договора!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Событие)ИЛИ Не ЗначениеЗаполнено(СобытиеРегл) Тогда
		Сообщить("Проведение невозможно, не заполнен реквизит: Событие!");
		Отказ = Истина;
		Возврат;
	КонецЕсли;

   
	//Формирование шапки документа	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	абс_СдачаВАрендуОс.Ссылка,
	|	абс_СдачаВАрендуОс.ВерсияДанных,
	|	абс_СдачаВАрендуОс.Номер,
	|	абс_СдачаВАрендуОс.Дата,
	|	абс_СдачаВАрендуОс.Организация,
	|	абс_СдачаВАрендуОс.ДатаСдачиВАренду,
	|	абс_СдачаВАрендуОс.Арендатор,
	|	абс_СдачаВАрендуОс.НомерДоговора,
	|	абс_СдачаВАрендуОс.ОжидаемаяДатаВозврата,
	|	абс_СдачаВАрендуОс.Событие,
	|	абс_СдачаВАрендуОс.СобытиеРегл,
	|	абс_СдачаВАрендуОс.СпособОтраженияРасходовПоАмортизации,
	|	абс_СдачаВАрендуОс.Комментарий
	|ИЗ
	|	Документ.абс_СдачаВАрендуОс КАК абс_СдачаВАрендуОс
	|ГДЕ
	|	абс_СдачаВАрендуОс.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТЗШапки = Запрос.Выполнить().Выгрузить();
	СтруктураШапкиДокумента =ТЗШапки[0]; 
	//Данные из ТЧ ОсновныеСредства. 
	ТабОС = ОсновныеСредства.выгрузить();
	
	Если Не Отказ Тогда
		//Создать движения по регистрам.
		ДвиженияПоРегистрам(ТабОС, СтруктураШапкиДокумента);
	КонецЕсли;
	
	
	
КонецПроцедуры

Процедура ДвиженияПоРегистрам(ТабОС, СтруктураШапкиДокумента)
	//Движения по регистру 	РС «Способы по отражению расходов по амортизации (БУ)»
	ДвижениеПоРегиструСпособыОтраженияРасходовБух( ТабОС, СтруктураШапкиДокумента);
	
	//Движения по регистру 	РС «Способы по отражению расходов по амортизации (НУ)»
	ДвижениеПоРегиструСпособыОтраженияРасходовНал( ТабОС, СтруктураШапкиДокумента);
	
	//Движения по регистру 	РС «Способы по отражению расходов по амортизации (УПР.)»
	ДвижениеПоРегиструСпособыОтраженияРасходовУпр( ТабОС, СтруктураШапкиДокумента);
	
	//Движения по регистру 	РС События ОС
	ДвижениеПоРегиструСобытияОС( ТабОС, СтруктураШапкиДокумента);
	
	//Движения по регистру 	РС События ОС Организаций 
	ДвижениеПоРегиструСобытияОСОрганизаций(ТабОС, СтруктураШапкиДокумента);
	
	//Движения по регистру 	абс_ОсСданныеВАренду 
	ДвижениеПоРегиструОсСданныеВАренду(ТабОС, СтруктураШапкиДокумента);
	
	//Меняем признак собственности = в аренде
	МеняемПризнакСобственности(ТабОС);
	
КонецПроцедуры

Процедура ДвижениеПоРегиструОсСданныеВАренду(ТабОС, СтруктураШапкиДокумента)
	СобытиеОС     = Движения.абс_ОсСданныеВАренду;
	Для каждого Строка ИЗ ТабОС Цикл
		СтрокаДвижения = СобытиеОС.Добавить();
		СтрокаДвижения.Период = Дата;
		СтрокаДвижения.Регистратор = Ссылка;
		СтрокаДвижения.Организация = СтруктураШапкиДокумента.Организация;
		СтрокаДвижения.ОС = Строка.ОсновноеСредство;
		СтрокаДвижения.СобытиеОС = СтруктураШапкиДокумента.СобытиеРегл;
		СтрокаДвижения.Арендатор = СтруктураШапкиДокумента.Арендатор;
		СтрокаДвижения.ДатаСдачиВАренду = СтруктураШапкиДокумента.ДатаСдачиВАренду;
		СтрокаДвижения.ОжидаемаяДатаВозврата = СтруктураШапкиДокумента.ОжидаемаяДатаВозврата;
		СтрокаДвижения.НомерДоговора = СтруктураШапкиДокумента.НомерДоговора;
	КонецЦикла;
	СобытиеОС.Записать();
КонецПроцедуры




// Процедура формирования движений по регистру Сопособы отражения расходов по амортизации ОС бух.
//
Процедура ДвижениеПоРегиструСпособыОтраженияРасходовБух( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет;
	
	Если ЗначениеЗаполнено(СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации) Тогда
		
		Для Каждого СтрокаОС Из ТабОС Цикл
			
			
			НоваяСтрока = НаборДвижений.Добавить();
			НоваяСтрока.Период           = Дата;
			НоваяСтрока.Активность       = Истина;
			НоваяСтрока.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
			НоваяСтрока.Организация      = СтруктураШапкиДокумента.Организация;
			НоваяСтрока.СпособыОтраженияРасходовПоАмортизации = СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации;
			
			
		КонецЦикла;
	КонецЕсли;
	
	НаборДвижений.Записать();	
КонецПроцедуры // ДвижениеПоРегиструСпособыОтраженияРасходовБух()


// Процедура формирования движений по регистру Сопособы отражения расходов по амортизации ОС нал.
//
Процедура ДвижениеПоРегиструСпособыОтраженияРасходовНал( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет;
	
	Если ЗначениеЗаполнено(СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации) Тогда
		Для Каждого СтрокаОС Из ТабОС Цикл
			
			НоваяСтрока = НаборДвижений.Добавить();
			НоваяСтрока.Период           = Дата;
			НоваяСтрока.Активность       = Истина;
			НоваяСтрока.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
			НоваяСтрока.Организация      = СтруктураШапкиДокумента.Организация;
			НоваяСтрока.СпособыОтраженияРасходовПоАмортизации = СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации;
			
		КонецЦикла;
	КонецЕсли;
	
	НаборДвижений.Записать();
	
КонецПроцедуры // ДвижениеПоРегиструСпособыОтраженияРасходовНал()

////////

// Процедура формирования движений по регистру Сопособы отражения расходов по амортизации ОС.
//
Процедура ДвижениеПоРегиструСпособыОтраженияРасходовУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СпособыОтраженияРасходовПоАмортизацииОС;
	
	Если ЗначениеЗаполнено(СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации) Тогда
		Для Каждого СтрокаОС Из ТабОС Цикл
			
			
			НоваяСтрока = НаборДвижений.Добавить();
			НоваяСтрока.Период           = Дата;
			НоваяСтрока.Активность       = Истина;
			НоваяСтрока.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
			НоваяСтрока.СпособыОтраженияРасходовПоАмортизации = СтруктураШапкиДокумента.СпособОтраженияРасходовПоАмортизации;
			
		КонецЦикла;
	КонецЕсли;
	
	НаборДвижений.Записать();
	
КонецПроцедуры // ДвижениеПоРегиструСпособыОтраженияРасходовУпр()


Процедура ДвижениеПоРегиструСобытияОС( ТабОС, СтруктураШапкиДокумента)
	
	СобытиеОС     = Движения.СобытияОС;
	
	Для каждого СтрокаТЧ Из ТабОС Цикл
		
		Движение = СобытиеОС.Добавить();
		Движение.Период            = Дата;
		Движение.ОсновноеСредство  = СтрокаТЧ.ОсновноеСредство;
		Движение.Событие           = СтруктураШапкиДокумента.Событие;
		Движение.НазваниеДокумента = Метаданные().Представление();
		Движение.НомерДокумента    = СтруктураШапкиДокумента.Номер;
		
	КонецЦикла;
	СобытиеОС.Записать();
	
	
КонецПроцедуры


Процедура ДвижениеПоРегиструСобытияОСОрганизаций(ТабОС, СтруктураШапкиДокумента)
	
	СобытиеОСБух  = Движения.СобытияОСОрганизаций;
	
	Для каждого СтрокаТЧ Из ТабОС Цикл
		
		Движение = СобытиеОСБух.Добавить();
		
		Движение.Период             = Дата;
		Движение.ОсновноеСредство   = СтрокаТЧ.ОсновноеСредство;
		Движение.Организация        = СтруктураШапкиДокумента.Организация;
		Движение.Событие            = СтруктураШапкиДокумента.СобытиеРегл;
		Движение.НазваниеДокумента 	= Метаданные().Представление();
		Движение.НомерДокумента    	= Номер;
		
	КонецЦикла;
	СобытиеОСБух.Записать();
	
КонецПроцедуры


Процедура МеняемПризнакСобственности(ТабОС)
	
	Для каждого Строка ИЗ ТабОС Цикл
		
		ОбъектОС = Строка.ОсновноеСредство.ПолучитьОбъект();
		Если Не ВозвратИзАренды Тогда
			ОбъектОС.ПризнакСобственности = Перечисления.абсПризнакиСобственностиОС.ВАренде;
		Иначе 
			ОбъектОС.ПризнакСобственности = Перечисления.абсПризнакиСобственностиОС.ВСобственности;
		КонецЕсли;
		ОбъектОС.Записать();
		
	КонецЦикла;
	
КонецПроцедуры
