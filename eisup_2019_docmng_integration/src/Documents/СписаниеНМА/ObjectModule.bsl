Перем мУдалятьДвижения;

// Строки, хранят реквизиты имеющие смысл только для бух. учета и упр. соответственно
// в случае если документ не отражается в каком-то виде учета, делаются невидимыми
Перем мСтрокаРеквизитыБухУчета Экспорт;		// (Регл)
Перем мСтрокаРеквизитыУпрУчета Экспорт; // (Упр)
Перем мСтрокаРеквизитыНалУчета Экспорт;		// (Регл)
Перем мВалютаРегламентированногоУчета;
Перем ПоддержкаПБУ18;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для определенного вида учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета() Экспорт
	
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр();
	ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл();
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчета()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для управленческого учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()
	
	мСтрокаРеквизитыУпрУчета = "";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаУпр()

// Процедура заполняет структуры именами реквизитов, которые имеют смысл
// только для регламентированного учета
//
Процедура ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()
	
	мСтрокаРеквизитыБухУчета = "СчетСписанияБУ, СубконтоБУ, НадписьСчетСписанияБУ, НадписьСубконтоБУ";
	мСтрокаРеквизитыНалУчета = "СчетСписанияНУ, СубконтоНУ, НадписьСчетСписанияНУ, НадписьСубконтоНУ";
	
КонецПроцедуры // ЗаполнитьСписокРеквизитовЗависимыхОтТиповУчетаРегл()

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверяется также правильность заполнения реквизитов ссылочных полей документа.
// Проверка выполняется по объекту и по выборке из результата запроса по шапке.
//
// Параметры: 
//  СтруктураШапкиДокумента - выборка из результата запроса по шапке документа,
//  Отказ                   - флаг отказа в проведении,
//  Заголовок               - строка, заголовок сообщения об ошибке проведения.
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)

	// Документ должен принадлежать хотя бы к одному виду учета (управленческий, бухгалтерский, налоговый)
	ОбщегоНазначения.ПроверитьПринадлежностьКВидамУчета(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	// Укажем, что надо проверить:
	СтруктураОбязательныхПолей = Новый Структура("Организация, НематериальныйАктив");

	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда
		СтруктураОбязательныхПолей.Вставить("СчетСписанияБУ");
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
		СтруктураОбязательныхПолей.Вставить("СчетСписанияНУ");
	КонецЕсли;
	
	// Теперь вызовем общую процедуру проверки.
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураОбязательныхПолей, Отказ, Заголовок);
	
КонецПроцедуры // ПроверитьЗаполнениеШапки()

Процедура ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	ДвиженияПоРегистрамРегл(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	//При распределении амортизации производилась промежуточная запись проводок.
	//Необходимо записать проводки с сохранением предыдущих движений.
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете и не Отказ Тогда
		Движения.Хозрасчетный.Записать(Ложь);
	КонецЕсли; 
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете и не Отказ тогда
		Движения.Налоговый.Записать(Ложь);
	КонецЕсли; 
КонецПроцедуры

Процедура ДвиженияПоРегистрамРегл(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	Если (НЕ СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете) И (НЕ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете) Тогда
		Возврат;
	КонецЕсли;
	
	СписыватьВНУ = (НематериальныйАктив.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР);
				   //ИЛИ НЕ (СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
				   //	И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
				   //		  ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
				   //		  ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
				   // 		 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа));
	СписыватьВНУ = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный и не абс_НеПродолжатьАмортизироватьВ_НУ_ПослеСписания;						 
	ТекОрганизация = СтруктураШапкиДокумента.Организация;
	ДатаДока       = СтруктураШапкиДокумента.Дата;
	НомерЖурнала   = "НА";
	
	// Отражение выбытия объекта
	СостояниеНМА           = Движения.СостоянияНМАОрганизаций;
	АмортизацияБУ          = Движения.СтоимостьНМАБухгалтерскийУчет;
	АмортизацияНУ          = Движения.СтоимостьНМАНалоговыйУчет;
	ПроводкиБУ             = Движения.Хозрасчетный;
	ПроводкиНУ             = Движения.Налоговый;
	
    //Получение информации о текущем состоянии НМА
	Период = Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка);
	ТаблицаТекущегоСостояния = УправлениеВнеоборотнымиАктивами.ОпределитьСтоимостьПоСпискуНМА(СтруктураШапкиДокумента.Организация,СтруктураШапкиДокумента.НематериальныйАктив,Период);

	//Определение суммы амортизации за месяц, распределение в соответствии со способом отражения БУ
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете тогда
		ТаблицаАмортизацииБУ = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНМА_НИОКР_БухРегл(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.НематериальныйАктив,Истина);

		ТаблицаАмортизацииБУ.Колонки.НМА.Имя = "ОбъектУчета";
		ТаблицаАмортизацииБУ.Колонки.Бух.Имя = "Сумма";
		ТаблицаАмортизацииБУ.Колонки.СчетАмортизацииБУ.Имя = "СчетАмортизации";
		ТаблицаАмортизацииБУ.Колонки.Добавить("СчетАмортизацииНУ");
    	ПроводкиБУ   = Движения.Хозрасчетный;
		ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииБУ, СтруктураШапкиДокумента, "Бух", "НА");
		ПроводкиБУ.Записать(Ложь);

	КонецЕсли;
	       	
	//Определение суммы амортизации за месяц, распределение в соответствии со способом отражения НУ
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете И СписыватьВНУ Тогда

		ТаблицаАмортизацииНУ = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНМА_НИОКР_НалогРегл(ЭтотОбъект,СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.НематериальныйАктив,Истина);
		ТаблицаАмортизацииНУ.Колонки.НМА.Имя   = "ОбъектУчета";
		ТаблицаАмортизацииНУ.Колонки.Налог.Имя = "Сумма";
		ТаблицаАмортизацииНУ.Колонки.Добавить("СчетАмортизации");
		
		Если ПоддержкаПБУ18 Тогда
			НалоговыйУчет.РасчетРазницПоАмортизации(СтруктураШапкиДокумента, "НМА", СтруктураШапкиДокумента.НематериальныйАктив, ТаблицаАмортизацииНУ, ТабЗатрат, ТаблицаАмортизацииБУ);
		КонецЕсли;
		ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииНУ, СтруктураШапкиДокумента, "Нал", "НА");
		
	КонецЕсли;

	ТекНМА = СтруктураШапкиДокумента.НематериальныйАктив;
	
	//Движения по регистру СостояниеНМА
	Движение = СостояниеНМА.Добавить();
	Движение.Период              = ДатаДока;
	Движение.НематериальныйАктив = ТекНМА;
	Движение.Организация         = ТекОрганизация;
	Движение.Состояние           = Перечисления.ВидыСостоянийНМА.Списан;
	
	Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете Тогда

		СтрокаАмортизации = ТаблицаАмортизацииБУ.Найти(ТекНМА,"ОбъектУчета");
		СтрокаТТС         = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_БУ");

		Если СтрокаАмортизации = Неопределено тогда
			АмортизацияЗаМесяц = 0;
		Иначе
			АмортизацияЗаМесяц = СтрокаАмортизации.Сумма;
		КонецЕсли;
		АмортизацияВсего = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.АмортизацияБУ) + АмортизацияЗаМесяц;
		СтоимостьНМА 	 = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.СтоимостьБУ);
		
		//Отражение начисления амортизации за месяц в регистре СтоимостьНМАБухгалтерскийУчет
		Если АмортизацияЗаМесяц > 0 Тогда
			Движение = АмортизацияБУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = АмортизацияЗаМесяц;
			Движение.Стоимость               = 0;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Приход;
		КонецЕсли;
		
		//Списание остатков регистра СтоимостьНМАБухгалтерскийУчет
		Если не (АмортизацияВсего = 0 и СтоимостьНМА = 0) Тогда
			Движение = АмортизацияБУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = АмортизацияВсего;
			Движение.Стоимость               = СтоимостьНМА;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Расход;
		КонецЕсли; 
		
		//Формирование проводок по списанию амортизации и остаточной стоимости БУ
		Если СтрокаТТС <> Неопределено Тогда

			СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаБУ;
			СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииБУ;

			// Списание амортизации Д (Счет амортизации) К (счет учета) если амортизация учитывается на отдельном счете
			Если АмортизацияВсего<>0 и не (СчетУчетаСтоимости = СчетУчетаАмортизации) Тогда
				Проводка = ПроводкиБУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				Проводка.Сумма        = АмортизацияВсего;

				Проводка.СчетДт       = СчетУчетаАмортизации;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);

				Проводка.СчетКт       = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			КонецЕсли;

			// списание остаточной стоимости Д 91.02 К 09.01
			ОстаточнаяСтоимость = СтоимостьНМА - АмортизацияВсего;

			Если ОстаточнаяСтоимость <> 0 Тогда

				Проводка = ПроводкиБУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				Проводка.Сумма        = ОстаточнаяСтоимость;

				Проводка.СчетДт       = СтруктураШапкиДокумента.СчетСписанияБУ;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтруктураШапкиДокумента.СубконтоБУ);

				Проводка.СчетКт      = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);

			КонецЕсли;

		КонецЕсли;
    КонецЕсли;

	//АБС ВСТАВКА №20035 НАЧАЛО
	НелинейныйБезГрупп = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
							И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
									ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
									ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
									ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа);
	
									
	//НелинейныйСГруппами = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
	//						И (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа);	
	//								
	//Линейный = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Линейный;	
	//Отражение списания НМА(НЕ НИОКР) в НУ
	ПроводкиПоНУ_Не_НИОКР(Заголовок, СтруктураШапкиДокумента, ТабЗатрат, ТаблицаАмортизацииБУ, Отказ, ПроводкиНУ, АмортизацияНУ, ТекНМА, ТаблицаТекущегоСостояния);	
	//АБС ВСТАВКА №20035 КОНЕЦ	   	
	
	//Отражение списания НМА(НИОКР) в НУ
	Если СтруктураШапкиДокумента.ОтражатьВНалоговомУчете И СписыватьВНУ  Тогда 

		СтрокаАмортизации = ТаблицаАмортизацииНУ.Найти(ТекНМА,"ОбъектУчета");
		СтрокаТТС         = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_НУ");

		Если СтрокаАмортизации = Неопределено тогда
			АмортизацияЗаМесяц = 0;
		Иначе
			АмортизацияЗаМесяц = СтрокаАмортизации.Сумма;
		КонецЕсли;
		АмортизацияВсегоБУ = АмортизацияВсего;		
		
		//АБС ИЗМЕНЕНИЕ 38165  08.02.2014 13:15:15  Коломиец
		МассивРазниц = Новый Массив;
		МассивРазниц.Добавить(0);
		МассивРазниц.Добавить(0);
		//АБС ИЗМЕНЕНИЕ 38165 КОНЕЦ
		
		Если НематериальныйАктив.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР Тогда   //АБС ИЗМЕНЕНИЕ 38165  08.02.2014 13:24:45  Коломиец
			АмортизацияВсего   = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.АмортизацияНУ) + АмортизацияЗаМесяц;    
			СтоимостьНМА 	   = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.СтоимостьНУ);
			//АБС ИЗМЕНЕНИЕ 38165  08.02.2014 13:15:15  Коломиец
			ВидУчета = Перечисления.ВидыУчетаПоПБУ18.НУ;
		Иначе
			МассивРаспределнияНУ = Новый Массив;
			МассивРаспределнияНУ.Добавить(АмортизацияВсего);
			МассивРаспределнияНУ.Добавить(СтоимостьНМА - АмортизацияВсего);
			РасчетРазниц(СтруктураШапкиДокумента, МассивРаспределнияНУ, МассивРазниц, НелинейныйБезГрупп);
			ВидУчета = Перечисления.ВидыУчетаПоПБУ18.ВР;
		КонецЕсли;
        //АБС ИЗМЕНЕНИЕ 38165 КОНЕЦ
			
		//Отражение начисления амортизации за месяц в регистре СтоимостьНМАНалоговыйУчет
		Если АмортизацияЗаМесяц > 0 Тогда
			Движение = АмортизацияНУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = ?(не НелинейныйБезГрупп,АмортизацияЗаМесяц,АмортизацияВсегоБУ - АмортизацияВсего + АмортизацияЗаМесяц);
			Движение.Стоимость               = 0;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Приход;
		КонецЕсли;
		
		//Списание остатков регистра СтоимостьНМАНалоговыйУчет
		Если не (АмортизацияВсего = 0 и СтоимостьНМА = 0) и не НелинейныйБезГрупп Тогда
			Движение = АмортизацияНУ.Добавить();
			Движение.Период					 = ДатаДока;
			Движение.НематериальныйАктив     = ТекНМА;
			Движение.Организация             = ТекОрганизация;
			Движение.Амортизация             = АмортизацияВсего;
			Движение.Стоимость               = СтоимостьНМА;
			Движение.ВидДвижения			 = ВидДвиженияНакопления.Расход;
		КонецЕсли; 
				
		//Формирование проводок по списанию амортизации и остаточной стоимости НУ
		Если СтрокаТТС <> Неопределено Тогда

			СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаНУ;
			СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииНУ;
			
			Если АмортизацияВсего - МассивРазниц[0] <> 0 и не (СчетУчетаСтоимости = СчетУчетаАмортизации) Тогда  //АБС ИЗМЕНЕНИЕ 38165  09.02.2014 17:37:25  Коломиец
			//Если АмортизацияВсего<>0 и не (СчетУчетаСтоимости = СчетУчетаАмортизации) Тогда

				Проводка = ПроводкиНУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				//АБС ИЗМЕНЕНИЕ 38165  08.02.2014 13:15:15  Коломиец
				//Проводка.Сумма        = АмортизацияВсего;
                Проводка.Сумма        = АмортизацияВсего - МассивРазниц[0];   
                Проводка.ВидУчетаДт = ВидУчета;
			    Проводка.ВидУчетаКт = ВидУчета;
                //АБС ИЗМЕНЕНИЕ 38165  КОНЕЦ
				Проводка.СчетДт      = СчетУчетаАмортизации;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);

				Проводка.СчетКт      = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
				
			КонецЕсли;

			// списание остаточной стоимости Д 91.02 К 09.01
			ОстаточнаяСтоимость = СтоимостьНМА - АмортизацияВсего;

			Если ОстаточнаяСтоимость  - МассивРазниц[1] <> 0 Тогда  //АБС ИЗМЕНЕНИЕ 38165  09.02.2014 17:37:25  Коломиец
			//Если ОстаточнаяСтоимость <> 0 Тогда

				Проводка = ПроводкиНУ.Добавить();

				Проводка.НомерЖурнала = НомерЖурнала;
				Проводка.Период       = ДатаДока;
				Проводка.Организация  = ТекОрганизация;
				Проводка.Содержание   = "Списание НМА";
				//АБС ИЗМЕНЕНИЕ 38165  08.02.2014 13:15:15  Коломиец
				//Проводка.Сумма        = ОстаточнаяСтоимость;
                Проводка.Сумма        = ОстаточнаяСтоимость - МассивРазниц[1];
				Проводка.ВидУчетаДт = ВидУчета;
			    Проводка.ВидУчетаКт = ВидУчета;
                //АБС ИЗМЕНЕНИЕ 38165  КОНЕЦ
				
				Проводка.СчетДт       = СтруктураШапкиДокумента.СчетСписанияНУ;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СубконтоНУ);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);

				Проводка.СчетКт       = СчетУчетаСтоимости;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);					
				
			КонецЕсли;

		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.ОтражатьВУправленческомУчете Тогда
		// Для документа, у которого есть своя валюта, переведем в валюту документа.
		Для каждого Амортизация из ТаблицаАмортизацииБУ Цикл
			Амортизация.Сумма = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(Амортизация.Сумма,
														   мВалютаРегламентированногоУчета,
														   СтруктураШапкиДокумента.ВалютаУправленческогоУчета,
														   1,
														   СтруктураШапкиДокумента.КурсВалютыУправленческогоУчета,
														   1,
														   СтруктураШапкиДокумента.КратностьВалютыУправленческогоУчета);
        КонецЦикла;
		
		УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямУпр(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииБУ, СтруктураШапкиДокумента);
	КонецЕсли; 
	
КонецПроцедуры

//АБС ВСТАВКА №20035 НАЧАЛО
Процедура СписатьОстаткаНМА_в_НУ(СтруктураШапкиДокумента, ПроводкиНУ, ТаблицаЗатрат)
	
	Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.НематериальныеАктивы))
	|			ТОГДА ВЫБОР
	|					КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	|						ТОГДА ВЫБОР
	|								КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|									ТОГДА -ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|								ИНАЧЕ ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПР,
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.НематериальныеАктивы))
	|			ТОГДА ВЫБОР
	|					КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	|						ТОГДА ВЫБОР
	|								КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|									ТОГДА -ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|								ИНАЧЕ ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.НематериальныеАктивы))
	|			ТОГДА ВЫБОР
	|					КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ)
	|						ТОГДА ВЫБОР
	|								КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|									ТОГДА -ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|								ИНАЧЕ ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУ,
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.АмортизацияНематериальныхАктивов))
	|			ТОГДА ВЫБОР
	|					КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	|						ТОГДА ВЫБОР
	|								КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|									ТОГДА -ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|								ИНАЧЕ ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияСуммаПР,
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.АмортизацияНематериальныхАктивов))
	|			ТОГДА ВЫБОР
	|					КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	|						ТОГДА ВЫБОР
	|								КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|									ТОГДА -ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|								ИНАЧЕ ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияСуммаВР,
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.АмортизацияНематериальныхАктивов))
	|			ТОГДА ВЫБОР
	|					КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ)
	|						ТОГДА ВЫБОР
	|								КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|									ТОГДА -ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|								ИНАЧЕ ЕСТЬNULL(НалоговыйОстатки.СуммаОстаток, 0)
	|							КОНЕЦ
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияСуммаНУ,
	|	НалоговыйОстатки.Субконто1,
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.НематериальныеАктивы))
	|			ТОГДА НалоговыйОстатки.Счет
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|	КОНЕЦ КАК СчетКт,
	|	ВЫБОР
	|		КОГДА НалоговыйОстатки.Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.АмортизацияНематериальныхАктивов))
	|			ТОГДА НалоговыйОстатки.Счет
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ПустаяСсылка)
	|	КОНЕЦ КАК СчетДт
	|ПОМЕСТИТЬ вр
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(
	|			&Дата,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.НематериальныеАктивы), ЗНАЧЕНИЕ(ПланСчетов.Налоговый.АмортизацияНематериальныхАктивов)),
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&НематериальныйАктив)) КАК НалоговыйОстатки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(вр.СуммаПР - вр.АмортизацияСуммаПР) КАК СуммаПР,
	|	СУММА(вр.СуммаВР - вр.АмортизацияСуммаВР) КАК СуммаВР,
	|	СУММА(вр.СуммаНУ - вр.АмортизацияСуммаНУ) КАК СуммаНУ,
	|	СУММА(вр.АмортизацияСуммаПР) КАК АмортизацияСуммаПР,
	|	СУММА(вр.АмортизацияСуммаВР) КАК АмортизацияСуммаВР,
	|	СУММА(вр.АмортизацияСуммаНУ) КАК АмортизацияСуммаНУ,
	|	вр.Субконто1 КАК Субконто,
	|	МАКСИМУМ(вр.СчетКт) КАК СчетКт,
	|	МАКСИМУМ(вр.СчетДт) КАК СчетДт
	|ИЗ
	|	вр КАК вр
	|
	|СГРУППИРОВАТЬ ПО
	|	вр.Субконто1";
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Дата", Новый Граница(КонецМесяца(Дата),ВидГраницы.Включая));
	СтруктураПараметров.Вставить("Организация",Организация);
	СтруктураПараметров.Вставить("НематериальныйАктив",НематериальныйАктив);
	
	Результат = абс_Привилегированный.ВыполнитьЗапрос(Текст,СтруктураПараметров).Выбрать();
	//В таблице только 1 строка
	АмортизацияСуммаНУ = 0;
	АмортизацияСуммаПР = 0;
	АмортизацияСуммаВР = 0;	
	Для Каждого Строка Из ТаблицаЗатрат Цикл
		АмортизацияСуммаНУ = ЕстьNULL(Строка.СуммаНал);
		АмортизацияСуммаПР = ЕстьNULL(Строка.ПостояннаяРазница);
		АмортизацияСуммаВР = ЕстьNULL(Строка.ВременнаяРазница);
	КонецЦикла;	
	
	Пока Результат.Следующий() Цикл     
		
		ПроводкаПоНУ(ПроводкиНУ,Результат.Субконто, ЕстьNULL(Результат.АмортизацияСуммаНУ) + АмортизацияСуммаНУ, "НУ", ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов, Результат.СчетКт);
		ПроводкаПоНУ(ПроводкиНУ,Результат.Субконто, ЕстьNULL(Результат.АмортизацияСуммаПР) + АмортизацияСуммаПР, "ПР", ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов, Результат.СчетКт);
		ПроводкаПоНУ(ПроводкиНУ,Результат.Субконто, ЕстьNULL(Результат.АмортизацияСуммаВР) + АмортизацияСуммаВР, "ВР", ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов, Результат.СчетКт);
		ПроводкаПоНУ(ПроводкиНУ,СтруктураШапкиДокумента.СубконтоНУ, ЕстьNULL(Результат.СуммаНУ) - АмортизацияСуммаНУ, "НУ", СтруктураШапкиДокумента.СчетСписанияНУ, Результат.СчетКт);
		ПроводкаПоНУ(ПроводкиНУ,СтруктураШапкиДокумента.СубконтоНУ, ЕстьNULL(Результат.СуммаПР) - АмортизацияСуммаПР, "ПР", СтруктураШапкиДокумента.СчетСписанияНУ, Результат.СчетКт);
		ПроводкаПоНУ(ПроводкиНУ,СтруктураШапкиДокумента.СубконтоНУ, ЕстьNULL(Результат.СуммаВР) - АмортизацияСуммаВР, "ВР", СтруктураШапкиДокумента.СчетСписанияНУ, Результат.СчетКт);
		
	КонецЦикла;	
	
КонецПроцедуры

Функция ЕстьNULL(СуммаПроводки)
	Возврат ?(СуммаПроводки = null, 0, СуммаПроводки);	
КонецФункции	

Процедура ПроводкаПоНУ(ПроводкиНУ,Субконто,СуммаПроводки,ВидУчета,СчетУчетаДт,СчетУчетаКт)
	
	Если не ЕстьNULL(СуммаПроводки) = 0 Тогда
		Проводка = ПроводкиНУ.Добавить();
		Проводка.НомерЖурнала = "НА";
		Проводка.Период       = Дата;
		Проводка.Организация  = Организация;
		Проводка.Содержание   = "Списание НМА";	
		Проводка.Сумма        = СуммаПроводки;		
		Проводка.СчетДт       = СчетУчетаДт;
		Если ТипЗнч(Субконто) = Тип("СправочникСсылка.ПрочиеДоходыИРасходы") Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", Субконто);
		Иначе
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", Субконто);
		КонецЕсли;
		Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18[ВидУчета];
		Проводка.СчетКт       = СчетУчетаКт;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", НематериальныйАктив);
		Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18[ВидУчета];
	КонецЕсли;
		
КонецПроцедуры	

Процедура ПроводкиПоНУ_Не_НИОКР(Заголовок, СтруктураШапкиДокумента, ТабЗатрат, ТаблицаАмортизацииБУ, Отказ, 
						ПроводкиНУ, АмортизацияНУ, ТекНМА, ТаблицаТекущегоСостояния)
	 
	Если Отказ
		или не ПоддержкаПБУ18
		или не СтруктураШапкиДокумента.ОтражатьВНалоговомУчете 
		или не абс_НеПродолжатьАмортизироватьВ_НУ_ПослеСписания Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ТекОрганизация = СтруктураШапкиДокумента.Организация;
	ДатаДока       = СтруктураШапкиДокумента.Дата;
	НомерЖурнала   = "НА";
	
	ТаблицаАмортизацииНУ = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНМА_НИОКР_НалогРегл(ЭтотОбъект,СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Организация, СтруктураШапкиДокумента.НематериальныйАктив,Истина);
	ТаблицаАмортизацииНУ.Колонки.НМА.Имя   = "ОбъектУчета";
	ТаблицаАмортизацииНУ.Колонки.Налог.Имя = "Сумма";
	ТаблицаАмортизацииНУ.Колонки.Добавить("СчетАмортизации");
	
	Если ПоддержкаПБУ18 Тогда
		НалоговыйУчет.РасчетРазницПоАмортизации(СтруктураШапкиДокумента, "НМА", СтруктураШапкиДокумента.НематериальныйАктив, ТаблицаАмортизацииНУ, ТабЗатрат, ТаблицаАмортизацииБУ);
	КонецЕсли;
	ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииНУ, СтруктураШапкиДокумента, "Нал", "НА");
	
	СтрокаАморТабЗатрат = ТабЗатрат.Найти(ТекНМА,"ОбъектУчета");
	СтрокаАмортизации   = ТаблицаАмортизацииНУ.Найти(ТекНМА,"ОбъектУчета");
	СтрокаТТС           = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_НУ");
	
	//Формирование проводок по списанию амортизации и остаточной стоимости НУ
	Если СтрокаТТС = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаНУ;
	СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииНУ;
		
	Если СтрокаАморТабЗатрат = Неопределено тогда
		АмортизацияЗаМесяц = 0;
	Иначе   		
		АмортизацияЗаМесяц = ЕстьNULL(СтрокаАморТабЗатрат.СуммаНал)+ЕстьNULL(СтрокаАморТабЗатрат.ПостояннаяРазница)+ЕстьNULL(СтрокаАморТабЗатрат.ВременнаяРазница);
	КонецЕсли;
	АмортизацияВсего = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.АмортизацияНУ) +  АмортизацияЗаМесяц;
	СтоимостьНМА 	 = ?(СтрокаТТС = Неопределено,0,СтрокаТТС.СтоимостьНУ);
	
	//Отражение начисления амортизации за месяц в регистре СтоимостьНМАНалоговыйУчет
	Если АмортизацияЗаМесяц > 0 Тогда
		Движение = АмортизацияНУ.Добавить();
		Движение.Период					 = ДатаДока;
		Движение.НематериальныйАктив     = ТекНМА;
		Движение.Организация             = ТекОрганизация;
		Движение.Амортизация             = АмортизацияЗаМесяц;
		Движение.Стоимость               = 0;
		Движение.ВидДвижения			 = ВидДвиженияНакопления.Приход;
	КонецЕсли;
	
	//Списание остатков регистра СтоимостьНМАНалоговыйУчет
	Если не (АмортизацияВсего = 0 и СтоимостьНМА = 0) Тогда
		Движение = АмортизацияНУ.Добавить();
		Движение.Период					 = ДатаДока;
		Движение.НематериальныйАктив     = ТекНМА;
		Движение.Организация             = ТекОрганизация;
		Движение.Амортизация             = АмортизацияВсего;
		Движение.Стоимость               = СтоимостьНМА;
		Движение.ВидДвижения			 = ВидДвиженияНакопления.Расход;
	КонецЕсли; 	
	
	//НелинейныйБезГрупп = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
	//						И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа);
	//
	//								
	//НелинейныйСГруппами = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
	//						И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
	//								ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа);	
	//								
	//Линейный = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Линейный;										 
	//
	//Если Линейный или абс_НеПродолжатьАмортизироватьВ_НУ_ПослеСписания Тогда
		
		СписатьОстаткаНМА_в_НУ(СтруктураШапкиДокумента, ПроводкиНУ, ТабЗатрат);

	//ИначеЕсли НелинейныйБезГрупп Тогда
	//	
	//ИначеЕсли НелинейныйСГруппами Тогда 			
	//		
	//КонецЕсли;
	
КонецПроцедуры	
//АБС ВСТАВКА №20035 КОНЕЦ

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)

	
	Если мУдалятьДвижения Тогда
		ttk_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	// Сформируем структуру реквизитов шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	СтруктураПолейУчетнойПолитикиНУ = Новый Структура("МетодНачисленияАмортизацииНУ");
	ttk_ОбщегоНазначения.ДополнитьПоложениямиУчетнойПолитики(СтруктураШапкиДокумента, СтруктураШапкиДокумента.Дата, Отказ, СтруктураШапкиДокумента.Организация, "Нал", СтруктураПолейУчетнойПолитикиНУ);
	
	Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	
	ДеревоПолейЗапросаПоШапке = УправлениеЗапасами.СформироватьДеревоПолейЗапросаПоШапке();
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "ВалютаУправленческогоУчета", "ВалютаУправленческогоУчета");
	УправлениеЗапасами.ДобавитьСтрокуВДеревоПолейЗапросаПоШапке(ДеревоПолейЗапросаПоШапке, "Константы", "КурсВалютыУправленческогоУчета", "КурсВалютыУправленческогоУчета");
	СтруктураШапкиДокумента = УправлениеЗапасами.СформироватьЗапросПоДеревуПолей(ЭтотОбъект, ДеревоПолейЗапросаПоШапке, СтруктураШапкиДокумента, мВалютаРегламентированногоУчета);

	Если Не Отказ Тогда
		ПараметрыУчетнойПолитикиРегл = ttk_ОбщегоНазначения.ПолучитьПараметрыУчетнойПолитикиРегл(Дата, Организация, Ложь);
		Если ЗначениеЗаполнено(ПараметрыУчетнойПолитикиРегл) Тогда
			ПоддержкаПБУ18 = ПараметрыУчетнойПолитикиРегл.ПоддержкаПБУ18;
		Иначе
			ПоддержкаПБУ18 = Ложь;
		КонецЕсли;
		
		ДвиженияПоРегистрам(СтруктураШапкиДокумента, Отказ, Заголовок);
		//ДвиженияПоРазницам(СтруктураШапкиДокумента);      38165
		КорректировкаДвижений(СтруктураШапкиДокумента) 
	КонецЕсли;

КонецПроцедуры // ОбработкаПроведения()

Процедура КорректировкаДвижений(СтруктураШапкиДокумента)
	
	//АБС ВСТАВКА №20035 НАЧАЛО
	НелинейныйБезГрупп = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
							И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
									ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
									ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
									ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа);
	Если не НелинейныйБезГрупп или абс_НеПродолжатьАмортизироватьВ_НУ_ПослеСписания Тогда
		Возврат;
	КонецЕсли;					
	
	//Движения.Налоговый.Прочитать();  		          		       АБС ИЗМЕНЕНИЕ 38165  09.02.2014 19:40:02  Коломиец
	//Для каждого Проводка Из Движения.Налоговый Цикл
	//	Если Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ Тогда
	//		Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР;
	//	КонецЕсли;
	//	Если Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ Тогда
	//		Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ВР;
	//	КонецЕсли;
	//	Проводка.НомерЖурнала = "ВР";     
	//КонецЦикла;
	//Движения.Налоговый.Записать();	
	
	Движения.ЗатратыНалоговыйУчет.Прочитать();  		          		
	Для каждого Проводка Из Движения.ЗатратыНалоговыйУчет Цикл
		Если не Проводка.Сумма = 0 Тогда
			Проводка.ВременнаяРазница = Проводка.ВременнаяРазница + Проводка.Сумма;
			Проводка.Сумма = 0;
		КонецЕсли;
	КонецЦикла;
	Если Движения.ЗатратыНалоговыйУчет.Модифицированность() Тогда
		Движения.ЗатратыНалоговыйУчет.Записать();	
	КонецЕсли;
	
	//\\АБС ВСТАВКА №20035 КОНЕЦ 	
	
КонецПроцедуры	

Процедура КорректировкаДвиженийРазница() 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Регистратор",Ссылка);
	Запрос.УстановитьПараметр("Счет1",СчетСписанияБУ);
	Запрос.УстановитьПараметр("Счет2",СчетСписанияНУ);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ХозрасчетныйОбороты.СуммаОборот КАК Сумма,
	               |	""05"" КАК Счет,
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.КорСубконто1 КАК КорСубконто1
	               |ПОМЕСТИТЬ вр
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияНематериальныхАктивов), , , , ) КАК ХозрасчетныйОбороты
	               |ГДЕ
	               |	ХозрасчетныйОбороты.Регистратор = &Регистратор
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	-НалоговыйОбороты.СуммаОборот,
	               |	""05"",
	               |	НалоговыйОбороты.Субконто1,
	               |	НалоговыйОбороты.КорСубконто1
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Обороты(, , Регистратор, Счет = ЗНАЧЕНИЕ(ПланСчетов.Налоговый.АмортизацияНематериальныхАктивов), , , , ) КАК НалоговыйОбороты
	               |ГДЕ
	               |	НалоговыйОбороты.Регистратор = &Регистратор
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.СуммаОборот,
	               |	""91"",
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.КорСубконто1
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Регистратор, Счет = &Счет1, , , , ) КАК ХозрасчетныйОбороты
	               |ГДЕ
	               |	ХозрасчетныйОбороты.Регистратор = &Регистратор
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	-ХозрасчетныйОбороты.СуммаОборот,
	               |	""91"",
	               |	ХозрасчетныйОбороты.Субконто1,
	               |	ХозрасчетныйОбороты.КорСубконто1
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Обороты(, , Регистратор, Счет = &Счет2, , , , ) КАК ХозрасчетныйОбороты
	               |ГДЕ
	               |	ХозрасчетныйОбороты.Регистратор = &Регистратор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	СУММА(вр.Сумма) КАК Сумма,
	               |	вр.Счет,
	               |	вр.Субконто1,
	               |	вр.КорСубконто1
	               |ИЗ
	               |	вр КАК вр
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	вр.Счет,
	               |	вр.Субконто1,
	               |	вр.КорСубконто1";
				   
	Результат = Запрос.Выполнить().Выбрать();
	Движения.Налоговый.Прочитать();
	
	Пока Результат.Следующий() Цикл
		
		Если Результат.Счет = "05" и не ?(Результат.Сумма=null,0,Результат.Сумма) = 0 Тогда
			Проводка              = Движения.Налоговый.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = Организация;  		
			Проводка.СчетДт       = ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", Результат.Субконто1);	
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;  
			Проводка.Сумма        = Результат.Сумма;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = ПланыСчетов.Налоговый.НематериальныеАктивыОрганизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", Результат.КорСубконто1);	
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР; 
			Проводка.НомерЖурнала = "ВР";
		КонецЕсли;
		Если Результат.Счет = "91" и не ?(Результат.Сумма=null,0,Результат.Сумма) = 0 Тогда
			Проводка              = Движения.Налоговый.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = Организация;   		
			Проводка.СчетДт       = СчетСписанияНУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", Результат.Субконто1);	
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;  
			Проводка.Сумма        = Результат.Сумма;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = ПланыСчетов.Налоговый.НематериальныеАктивыОрганизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", Результат.КорСубконто1);	
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР; 
			Проводка.НомерЖурнала = "ВР";
		КонецЕсли;
		Если Движения.Налоговый.Модифицированность() Тогда
			Движения.Налоговый.Записать();	
		КонецЕсли;	
		
	КонецЦикла;	 				 
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью

Процедура ДвиженияПоРазницам(СтруктураШапкиДокумента)

	Если Не СтруктураШапкиДокумента.ОтражатьВНалоговомУчете или НЕ ПоддержкаПБУ18 Тогда 
		Возврат;
	КонецЕсли;	
	
	СписыватьВНУ = (НематериальныйАктив.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР);
						//ИЛИ НЕ (СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный
						//	И НЕ (НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ВосьмаяГруппа
						//		  ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДевятаяГруппа
						//		  ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ДесятаяГруппа
						// 		 ИЛИ НематериальныйАктив.АмортизационнаяГруппа = Перечисления.АмортизационныеГруппы.ОтдельнаяГруппа))
	СписыватьВНУ = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный и не абс_НеПродолжатьАмортизироватьВ_НУ_ПослеСписания;
	Если НЕ СписыватьВНУ Тогда  		  
		Возврат;
	КонецЕсли;
	
	Период = Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка);
	ТаблицаТекущегоСостояния = УправлениеВнеоборотнымиАктивами.ОпределитьСтоимостьПоСпискуНМА(СтруктураШапкиДокумента.Организация,СтруктураШапкиДокумента.НематериальныйАктив,Период);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	НалоговыйОстатки.Субконто1 КАК Субконто1,
	               |	НалоговыйОстатки.СуммаОстатокКт КАК Сумма02ПР,
	               |	0 КАК Сумма02ВР,
	               |	0 КАК Сумма01ПР,
	               |	0 КАК Сумма01ВР,
	               |	0 КАК Сумма01
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&КонДата,
	               |			Счет В ИЕРАРХИИ (&НалоговыйАмортизацияНМА_01),
	               |			,
	               |			ВидУчета = &ВидУчетаПР
	               |				И Организация = &Организация
	               |				И Субконто1 = &СписокНМА) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1,
	               |	0,
	               |	НалоговыйОстатки.СуммаОстатокКт,
	               |	0,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&КонДата,
	               |			Счет В ИЕРАРХИИ (&НалоговыйАмортизацияНМА_01),
	               |			,
	               |			ВидУчета = &ВидУчетаВР
	               |				И Организация = &Организация
	               |				И Субконто1 = &СписокНМА) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1,
	               |	0,
	               |	0,
	               |	НалоговыйОстатки.СуммаОстатокДт,
	               |	0,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&КонДата,
	               |			Счет В ИЕРАРХИИ (&НалоговыйНМАвОрганизации),
	               |			,
	               |			ВидУчета = &ВидУчетаПР
	               |				И Организация = &Организация
	               |				И Субконто1 = &СписокНМА) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1,
	               |	0,
	               |	0,
	               |	0,
	               |	НалоговыйОстатки.СуммаОстатокДт,
	               |	0
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&КонДата,
	               |			Счет В ИЕРАРХИИ (&НалоговыйНМАвОрганизации),
	               |			,
	               |			ВидУчета = &ВидУчетаВР
	               |				И Организация = &Организация
	               |				И Субконто1 = &СписокНМА) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1,
	               |	0,
	               |	0,
	               |	0,
	               |	0,
	               |	НалоговыйОстатки.СуммаОстатокДт
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Остатки(
	               |			&КонДата,
	               |			Счет В ИЕРАРХИИ (&ХозрасчетныйНМАвОрганизации),
	               |			,
	               |			Организация = &Организация
	               |				И Субконто1 = &СписокНМА) КАК НалоговыйОстатки
	               |ИТОГИ
	               |	СУММА(Сумма02ПР),
	               |	СУММА(Сумма02ВР),
	               |	СУММА(Сумма01ПР),
	               |	СУММА(Сумма01ВР),
	               |	СУММА(Сумма01)
	               |ПО
	               |	Субконто1";
	
	Запрос.УстановитьПараметр("НачДата", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонДата", Новый Граница(КонецМесяца(Дата),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВидУчетаВР",Перечисления.ВидыУчетаПоПБУ18.ВР);
	Запрос.УстановитьПараметр("ВидУчетаПР",Перечисления.ВидыУчетаПоПБУ18.ПР);
	Запрос.УстановитьПараметр("ХозрасчетныйНМАвОрганизации", ПланыСчетов.Хозрасчетный.НематериальныеАктивы);
	Запрос.УстановитьПараметр("НалоговыйАмортизацияНМА_01", ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("НалоговыйНМАвОрганизации", ПланыСчетов.Налоговый.НематериальныеАктивы);
	Запрос.УстановитьПараметр("СписокНМА",НематериальныйАктив);

	ПроводкиНУ              = Движения.Налоговый;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Субконто1");
	Пока Выборка.Следующий() Цикл
		ТекНМА = Выборка.Субконто1;
		
		СтрокаТТС = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_НУ");

		Если СтрокаТТС = Неопределено Тогда
			Продолжить;
		КОнецЕсли;
		   
		СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаНУ;
		СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииНУ;
		
		Если Выборка.Сумма01Вр - Выборка.Сумма02Вр <> 0 Тогда      
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетСписанияНУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СубконтоНУ);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;  
			Проводка.Сумма        = Выборка.Сумма01Вр - Выборка.Сумма02Вр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР; 
			Проводка.НомерЖурнала = "ВР";
		КонецЕсли;
		
		Если Выборка.Сумма02Вр <> 0 И СчетУчетаСтоимости <> СчетУчетаАмортизации Тогда
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетУчетаАмортизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ВР;  
			Проводка.Сумма        = Выборка.Сумма02Вр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ВР; 
			Проводка.НомерЖурнала = "ВР";
		КонецЕсли;             
			
		Если Выборка.Сумма01Пр - Выборка.Сумма02Пр <> 0 Тогда
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетСписанияНУ;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СубконтоНУ);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ПР;  
			Проводка.Сумма        = Выборка.Сумма01Пр - Выборка.Сумма02Пр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ПР; 
			Проводка.НомерЖурнала = "ПР";
		КонецЕсли;
		
		Если Выборка.Сумма02Пр <> 0 И СчетУчетаСтоимости <> СчетУчетаАмортизации Тогда
			Проводка              = ПроводкиНУ.Добавить();
			Проводка.Период       = Дата;
			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			
			Проводка.СчетДт       = СчетУчетаАмортизации;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
			
			Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ПР;  
			Проводка.Сумма        = Выборка.Сумма02Пр;
			Проводка.Содержание   = "Списание НМА";
			Проводка.СчетКт       = СчетУчетаСтоимости;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
			
			Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ПР; 
			Проводка.НомерЖурнала = "ПР";
		КонецЕсли;
		
	КонецЦикла;
		
	ПроводкиНУ.Записать(Ложь);	
	
КонецПроцедуры

//АБС ИЗМЕНЕНИЕ 38165  07.02.2014 15:20:12  Коломиец
Процедура РасчетРазниц(СтруктураШапкиДокумента, МассивРаспределнияНУ, МассивРазниц, НелинейныйБезГрупп)
	
	Если Не СтруктураШапкиДокумента.ОтражатьВНалоговомУчете или НЕ ПоддержкаПБУ18 Тогда 
		Возврат;
	КонецЕсли;	
			
	//СписыватьВНУ = (НематериальныйАктив.ВидОбъектаУчета = Перечисления.ВидыОбъектовУчетаНМА.РасходыНаНИОКР);
	СписыватьВНУ = СтруктураШапкиДокумента.МетодНачисленияАмортизацииНУ = Перечисления.МетодыНачисленияАмортизации.Нелинейный и не абс_НеПродолжатьАмортизироватьВ_НУ_ПослеСписания;
	Если НЕ СписыватьВНУ Тогда  		  
		Возврат;
	КонецЕсли;
	
	Период = Новый МоментВремени(СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.Ссылка);
	ТаблицаТекущегоСостояния = УправлениеВнеоборотнымиАктивами.ОпределитьСтоимостьПоСпискуНМА(СтруктураШапкиДокумента.Организация,СтруктураШапкиДокумента.НематериальныйАктив,Период);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	НалоговыйОстатки.Субконто1 КАК Субконто1,
	               |	НалоговыйОстатки.СуммаОстатокДт КАК Сумма01ПР,
	               |	0 КАК Сумма01НУ
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&КонДата,
	               |			Счет В ИЕРАРХИИ (&НалоговыйНМАвОрганизации),
	               |			,
	               |			ВидУчета = &ВидУчетаПР
	               |				И Организация = &Организация
	               |				И Субконто1 = &СписокНМА) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1,
	               |	0,
	               |	НалоговыйОстатки.СуммаОстатокДт
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&КонДата,
	               |			Счет В ИЕРАРХИИ (&НалоговыйНМАвОрганизации),
	               |			,
	               |			ВидУчета = &ВидУчетаНУ
	               |				И Организация = &Организация
	               |				И Субконто1 = &СписокНМА) КАК НалоговыйОстатки
	               |ИТОГИ
	               |	СУММА(Сумма01ПР),
	               |	СУММА(Сумма01НУ)
	               |ПО
	               |	Субконто1";
	
	Запрос.УстановитьПараметр("НачДата", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("КонДата", Новый Граница(КонецМесяца(Дата),ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ВидУчетаПР",Перечисления.ВидыУчетаПоПБУ18.ПР);
	Запрос.УстановитьПараметр("ВидУчетаНУ",Перечисления.ВидыУчетаПоПБУ18.НУ);
	Запрос.УстановитьПараметр("НалоговыйАмортизацияНМА_01", ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов);
	Запрос.УстановитьПараметр("НалоговыйНМАвОрганизации", ПланыСчетов.Налоговый.НематериальныеАктивы);
	Запрос.УстановитьПараметр("СписокНМА",НематериальныйАктив);
		
	РезультатЗапроса = Запрос.Выполнить();
	
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "Субконто1");
	Если Выборка.Следующий() Тогда
				
		ТекНМА = Выборка.Субконто1;
		
		СтрокаТТС = ТаблицаТекущегоСостояния.Найти(ТекНМА,"НМА_НУ");
		
		Если СтрокаТТС <> Неопределено Тогда
			
			СчетУчетаСтоимости   = СтрокаТТС.СчетУчетаНУ;
			СчетУчетаАмортизации = СтрокаТТС.СчетАмортизацииНУ;
			
			ПроводкиНУ = Движения.Налоговый;

			Если Выборка.Сумма01Пр  <> 0 Тогда
								
				МассивПР = ttk_ОбщегоНазначения.РаспределитьПропорционально(Выборка.Сумма01Пр, МассивРаспределнияНУ, , Ложь);
				
				Если МассивПР[0] <> 0 Тогда
					Проводка              = ПроводкиНУ.Добавить();
					Проводка.Период       = Дата;
					Проводка.Организация  = СтруктураШапкиДокумента.Организация;
					
					Проводка.СчетДт       = СчетУчетаАмортизации;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
					
					Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ПР;  
					Проводка.Сумма        = МассивПР[0];
					Проводка.Содержание   = "Списание НМА";
					Проводка.СчетКт       = СчетУчетаСтоимости;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
					
					Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ПР; 
					Проводка.НомерЖурнала = "ПР";
					
					МассивРазниц[0] = МассивРазниц[0] + МассивПР[0];
					
				КонецЕсли;
				
				Если МассивПР[1] <> 0 Тогда
					Проводка              = ПроводкиНУ.Добавить();
					Проводка.Период       = Дата;
					Проводка.Организация  = СтруктураШапкиДокумента.Организация;
					
					Проводка.СчетДт       = СчетСписанияНУ;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СубконтоНУ);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);
					
					Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.ПР;  
					Проводка.Сумма        = МассивПР[1];
					Проводка.Содержание   = "Списание НМА";
					Проводка.СчетКт       = СчетУчетаСтоимости;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
					
					Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.ПР; 
					Проводка.НомерЖурнала = "ПР";
					
					МассивРазниц[1] = МассивРазниц[1] + МассивПР[1];
					
				КонецЕсли;
								
			КонецЕсли;			
			
			Если НЕ НелинейныйБезГрупп Тогда
				
				Если Выборка.Сумма01НУ  <> 0 Тогда
					
					МассивНУ = ttk_ОбщегоНазначения.РаспределитьПропорционально(Выборка.Сумма01НУ, МассивРаспределнияНУ, , Ложь);
					
					Если МассивНУ[0] <> 0 Тогда
						Проводка              = ПроводкиНУ.Добавить();
						Проводка.Период       = Дата;
						Проводка.Организация  = СтруктураШапкиДокумента.Организация;
						
						Проводка.СчетДт       = СчетУчетаАмортизации;
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
						
						Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.НУ;  
						Проводка.Сумма        = МассивНУ[0];
						Проводка.Содержание   = "Списание НМА";
						Проводка.СчетКт       = СчетУчетаСтоимости;
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
						
						Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.НУ; 
						Проводка.НомерЖурнала = "НУ";
						
						МассивРазниц[0] = МассивРазниц[0] + МассивНУ[0];
						
					КонецЕсли;
					
					Если МассивНУ[1] <> 0 Тогда
						Проводка              = ПроводкиНУ.Добавить();
						Проводка.Период       = Дата;
						Проводка.Организация  = СтруктураШапкиДокумента.Организация;
						
						Проводка.СчетДт       = СчетСписанияНУ;
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СубконтоНУ);
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "НематериальныеАктивы", ТекНМА);
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РасходыНаНИОКР"      , ТекНМА);
						
						Проводка.ВидУчетаКт   = Перечисления.ВидыУчетаПоПБУ18.НУ;  
						Проводка.Сумма        = МассивНУ[1];
						Проводка.Содержание   = "Списание НМА";
						Проводка.СчетКт       = СчетУчетаСтоимости;
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "НематериальныеАктивы", ТекНМА);
						БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РасходыНаНИОКР"      , ТекНМА);
						
						Проводка.ВидУчетаДт   = Перечисления.ВидыУчетаПоПБУ18.НУ; 
						Проводка.НомерЖурнала = "НУ";
						
						МассивРазниц[1] = МассивРазниц[1] + МассивНУ[1];
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ПроводкиНУ.Записать(Ложь);
	
	Возврат;
	
	КонецЕсли;
		
КонецПроцедуры
//АБС ИЗМЕНЕНИЕ 38165 КОНЕЦ

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

