&НаКлиенте
Перем мСтатус,НовыйДокумент,мПользователь;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НовыйДокумент = Ложь;
	УстановитьВидимость();
	УстановитьДоступность();
	
	мСтатус = Объект.Статус;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) или Не Объект.Проведен Тогда
		НовыйДокумент = Истина;	
	КонецЕсли;
	мПользователь = Объект.Пользователь;
	ммСтатус = Объект.Статус;
	ЗаполнитьСтатусы();
	абс_ЗаполнитьОрганизациюПодразделенияПоУмолчанию();
		
	//АБС ВСТАВКА НАЧАЛО, Пополитов
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		абс_СлужебныеФункции.абс_ИсторияОткрытияОбъектовЗапись(Объект.Ссылка);	
	КонецЕсли;
	//\\АБС ВСТАВКА КОНЕЦ 
	
	ПроверитьГруппуДоступа = "изменена пользователем без роли «"+ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК")+"»";
	
	// {{KM WARE Токарев Н.А. Заявка №33282 14.07.2015 начало
	// добавление сортировки ТЧ Группа пользователей
	НастройкаГруппПользователей.Сортировать("ГруппаДоступа ВОЗР");
	// }}KM WARE Токарев Н.А. Заявка №33282 14.07.2015 окончание
КонецПроцедуры

//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов	
&НаКлиенте
Процедура абс_ЗаполнитьОрганизациюПодразделенияПоУмолчанию()
	
	Для Каждого Строка Из Объект.ПодразделенияПоУмолчанию Цикл
		Строка.Организация = ПолучитьОрганизациюИзПодразделения(Строка.Подразделение); 	
	КонецЦикла;	
	Для Каждого Строка Из Объект.ПодразделенияПоУмолчаниюОсновное Цикл
		Строка.Организация = ПолучитьОрганизациюИзПодразделения(Строка.Подразделение);	
	КонецЦикла;		
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОрганизациюИзПодразделения(СтрЗначение)
		
	тПодразделение = "";
	
	Если ТипЗнч(СтрЗначение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		тПодразделение = СтрЗначение;	
	КонецЕсли;	
	Если ТипЗнч(СтрЗначение) = Тип("Строка") и не СтрЗначение = "" и не ЗначениеЗаполнено(тПодразделение) Тогда
		тПодразделение = ПолучитьПодразделенияОрганизаций(СтрЗначение,Объект.Организация);	
	КонецЕсли;	     	 	
	Если ТипЗнч(СтрЗначение) = Тип("Строка") и не СтрЗначение = "" и не ЗначениеЗаполнено(тПодразделение) Тогда
		тПодразделение = ПолучитьПодразделенияОрганизацийИзКонстанты(СтрЗначение);	
	КонецЕсли;	
	
	жОрганизация = "";
	Если ЗначениеЗаполнено(тПодразделение) и ТипЗнч(тПодразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
    	жОрганизация = СокрЛП(тПодразделение.Владелец);
	КонецЕсли;	
	
	Возврат жОрганизация;
	
КонецФункции
//\\АБС ВСТАВКА №31046 КОНЕЦ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РольСотрудникЕИСУП = Справочники.абс_ТиповыеРоли.НайтиПоРеквизиту("НаименованиеЗаданноеВКонфигураторе","абс_СотрудникКомпании");
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		НовыйДокумент = Истина;
		Если Не ЗначениеЗаполнено(ДокументОбъект.ВидОперации) Тогда
			ДокументОбъект.ВидОперации = Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ВводНовогоПользователяСРучнойУстановкойПрав;	
		Иначе
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Документ нельзя ввести путем копирования!";
			Сообщение.Сообщить();
			//Если ДокументОбъект.ВидОперации <>  Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда
			//	ДокументОбъект.Пользователь      =  "";
			//	ДокументОбъект.Сотрудник         =  "";
			//	ДокументОбъект.ФизическоеЛицо    =  "";
			//КонецЕсли;
		КонецЕсли;
		
		ДокументОбъект.Организация              = ПолучитьОрганизациюПоУмолчанию();
		ДокументОбъект.ПодразделениеОрганизации = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеПоУмолчанию(ДокументОбъект.Организация);
		
		ДокументОбъект.ГруппаПользователя = ПолучитьГруппуПользователя(ДокументОбъект.Организация);
		
		//Очистка цветов
		//Для каждого Стр Из ДокументОбъект.ТиповыеРолиЕИСУП Цикл
		//	Если Стр.Использование Тогда
		//		Стр.ТекущаяРоль = Истина;
		//	Иначе
		//		Стр.ТекущаяРоль = Ложь;
		//	КонецЕсли;
		//КонецЦикла;
		//
		//Для каждого Стр Из ДокументОбъект.ЦФУ Цикл
		//	Если Стр.Ответственный Тогда
		//		Стр.ОтветственныйТекущая = Истина;
		//	Иначе 	
		//		Стр.ОтветственныйТекущая = Ложь;
		//	КонецЕсли;	
		//	
		//	Если Стр.Просмотр Тогда
		//		Стр.ПросмотрТекущая = Истина;
		//	Иначе
		//		Стр.ПросмотрТекущая = Ложь;
		//	КонецЕсли;	
		//	
		//	Если Стр.ЦФУРНПД Тогда
		//		Стр.ЦФУРНПДТекущая = Истина;
		//	Иначе	
		//		Стр.ЦФУРНПДТекущая = Ложь;
		//	КонецЕсли;	
		//КонецЦикла;
		//
		//Для каждого Стр Из ДокументОбъект.ЦФО Цикл
		//	Если Стр.Ответственный Тогда
		//		Стр.ОтветственныйТекущая = Истина;	
		//	Иначе
		//		Стр.ОтветственныйТекущая = Ложь;
		//	КонецЕсли;	
		//	
		//	Если Стр.Просмотр Тогда
		//		Стр.ПросмотрТекущая = Истина;
		//	Иначе
		//		Стр.ПросмотрТекущая = Ложь;
		//	КонецЕсли;	
		//	
		//	Если Стр.ЦФОРНПД Тогда
		//		Стр.ЦФОРНПДТекущая = Истина;
		//	Иначе
		//		Стр.ЦФОРНПДТекущая = Ложь;
		//	КонецЕсли;	
		//КонецЦикла;
		//
		//Для каждого Стр Из ДокументОбъект.Подразделения Цикл
		//	Если Стр.Просмотр Тогда
		//		Стр.ПросмотрТекущий = Истина;	
		//	Иначе
		//		Стр.ПросмотрТекущий = Ложь;
		//	КонецЕсли;
		//КонецЦикла;
		//
		//
		//Для каждого Стр Из ДокументОбъект.ПодразделенияПоУмолчанию Цикл
		//	Если Стр.Ответственный Тогда
		//		Стр.ОтветственныйТекущая = Истина;	
		//	Иначе
		//		Стр.ОтветственныйТекущая = Ложь;
		//	КонецЕсли;
		//КонецЦикла;

		
		НоваяСтрока = ДокументОбъект.ТиповыеРолиЕИСУП.Добавить();
		НоваяСтрока.Роль 		  = Справочники.абс_ТиповыеРоли.НайтиПоРеквизиту("НаименованиеЗаданноеВКонфигураторе","Пользователь");
		НоваяСтрока.ТекущаяРоль   = Истина;
		НоваяСтрока.Использование = Истина;

		НоваяСтрока = ДокументОбъект.ТиповыеРолиЕИСУП.Добавить();
		НоваяСтрока.Роль 		  = РольСотрудникЕИСУП.Ссылка;
		НоваяСтрока.ТекущаяРоль   = Истина;
		НоваяСтрока.Использование = Истина;

		ЗаполнитьРолиБП(РольСотрудникЕИСУП,Истина,Неопределено);
		
		ДокументОбъект.Статус      = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка;
		ДокументОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь");
		ДокументОбъект.абс_ПричинаИзмененияСтатуса = "Ввод нового документа";
		
		ЗаполнитьГруппыПользователей(ДокументОбъект,Истина);
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		 
		ЭтаФорма.СтатусыЗаявок = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка;
		
		Если ДокументОбъект.ВидОперации <>  Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя  Тогда
			ЗаполнитьПодразделенияПоУмолчанию();	
		КонецЕсли;
		
		ИсторияСтатусов.Параметры.УстановитьЗначениеПараметра("Заявка",Документы.абс_ЗаявкаНаДобавлениеИзменениеПрав.ПустаяСсылка());

	КонецЕсли; 		
	
	Если Объект.ТиповыеРолиЕИСУП.Количество() > 0 Тогда
		ТЗ = Объект.ТиповыеРолиЕИСУП.Выгрузить();
		ТЗ.Колонки.Добавить("Приоритет",Новый ОписаниеТипов("Число"));
		
		Если ТЗ.Колонки.Найти("ТекущаяРоль") = Неопределено Тогда
			ТЗ.Колонки.Добавить("ТекущаяРоль",Новый ОписаниеТипов("Булево"));
		КонецЕсли;
		
		Если ТЗ.Колонки.Найти("НеАктивность") = Неопределено Тогда
			ТЗ.Колонки.Добавить("НеАктивность",Новый ОписаниеТипов("Булево"));
		КонецЕсли;

		Для каждого Стр Из ТЗ Цикл
			Стр.Приоритет   =  Стр.Роль.Приоритет;  	
		КонецЦикла;
		
		ЗначениеВРеквизитФормы(ТЗ,"НаборТиповыхРолей");
		ЭтаФорма.СтатусыЗаявок = Объект.Статус;
	КонецЕсли;
	
	СпособОтображенияТиповыхРолей = 1;
	ЗаполнитьТиповыеРоли(1);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьГруппыПользователей(ДокументОбъект,Ложь);  
		ИсторияСтатусов.Параметры.УстановитьЗначениеПараметра("Заявка",Объект.Ссылка);
	КонецЕсли;
	
	//ЗаполнитьСтатусы();
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗаполнитьРолиБП(РольСотрудникЕИСУП,Истина,Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
функция ПолучитьСтатусСотрудникаДляОбменаСИСУЗК(ДокументОбъект)
	СтатусСотрудникаДляОбменаСИСУЗК = Ложь;
	
	Для каждого Роль Из ДокументОбъект.ТиповыеРолиЕИСУП Цикл
		Если Роль.Использование и Роль.Роль.РольИСУЗК Тогда	
			СтатусСотрудникаДляОбменаСИСУЗК = Истина;	
		КонецЕсли;	
	КонецЦикла;	
	
	Для каждого Роль Из ДокументОбъект.РолиВЦепочкахСогласования Цикл
		Если Роль.Использование и Роль.Роль.абс_РольИСУЗК Тогда	
			СтатусСотрудникаДляОбменаСИСУЗК = Истина;	
		КонецЕсли;	
	КонецЦикла;	
	
	Возврат СтатусСотрудникаДляОбменаСИСУЗК;
КонецФункции
 
&НаСервере
функция ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ДокументОбъект.ВидОперации <> Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда 
		Если ДокументОбъект.Статус <> Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена Тогда
			мПользователь   = Справочники.Пользователи.НайтиПоРеквизиту("абс_Сотрудник",ДокументОбъект.Сотрудник);
			
			Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
				Если мПользователь <> Справочники.Пользователи.ПустаяСсылка() Тогда
					Сообщение = Новый СообщениеПользователю;
					Сообщение.Текст = "Для сотрудника "+ СокрЛП(ДокументОбъект.Сотрудник.Наименование) +" уже существует пользователь!";
					Сообщение.Сообщить();
					Отказ = Истина;	
				КонецЕсли;		
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;	
	
	ЭтоСотрудникДляОбменаСИСУЗК = ПолучитьСтатусСотрудникаДляОбменаСИСУЗК(ДокументОбъект);
	
	Если ЭтоСотрудникДляОбменаСИСУЗК Тогда
		Если ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка Тогда
			Если Не ЗначениеЗаполнено(ДокументОбъект.Сотрудник.абс_КодИСУЗК) Тогда
				Сообщение = Новый СообщениеПользователю;
				Сообщение.Текст = "Для сотрудника "+ СокрЛП(ДокументОбъект.Сотрудник.Наименование) +" не указан код ИСУЗК!";
				Сообщение.Сообщить();
				Отказ = Истина;	
			КонецЕсли;	
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.ПодразделениеОрганизации) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для сотрудника "+ СокрЛП(ДокументОбъект.Сотрудник.Наименование) +" не указано подразделение! Просьба проверить корректность заведения приема на работу  в ИСУЗК. В случае корректности его заведения, просьба оставить заявку в модуле Сопровождение ЕИСУП";
		Сообщение.Сообщить();
		Отказ = Истина;	
	КонецЕсли;	

КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьСтатусВРегистр(СтрокаПричиныИзмененияСтатуса)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");	
	Если Не ДокументОбъект.ПраваОтменены Тогда
		
		// АБС Изменение Родин Отключение бизнес-процессов 110314
		СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
		ДоступнаЗапись = Ложь;
		
		Если Не СогласованиеБезБП Тогда
			Если  ДокументОбъект.Статус <> Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Исполняется И  ДокументОбъект.Статус <> Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.ИсполняетсяВводЗадач И   ДокументОбъект.Статус <> Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Исполнено Тогда
				ДоступнаЗапись = Истина;
			КонецЕсли;	
		Иначе
			Если  ДокументОбъект.Статус <> Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена Тогда
				ДоступнаЗапись = Истина;
			КонецЕсли;	
		КонецЕсли;	
		
		Если ДоступнаЗапись Тогда	
			// АБС Изменение Родин Отключение бизнес-процессов 110314
			
			СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусПоЗаявкеНаИзмениеПрав(ДокументОбъект.Ссылка);
			
			НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовЗаявокНаДобавлениеИзменениеПрав.СоздатьНаборЗаписей();
			
			НаборЗаписей.Отбор.Заявка.Установить(ДокументОбъект.Ссылка);
			НаборЗаписей.Прочитать();
			
			Запись = НаборЗаписей.Добавить();
			Запись.Период              = абс_СерверныеФункции.ПолучитьДатуСервера();
			
			Запись.Заявка				= ДокументОбъект.Ссылка;
			Запись.Исполнитель	 		= глЗначениеПеременной("глТекущийПользователь");	
			Запись.СтатусЗаявки  		= ДокументОбъект.Статус;
			
			Запись.Комментарий 			= СтрокаПричиныИзмененияСтатуса;
			
			НаборЗаписей.Записать();
		КонецЕсли;	
		
		
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Если ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		УстановитьДоступность();
		
		Если мСтатус <> Объект.Статус или НовыйДокумент Тогда
			
			Если НЕ НовыйДокумент Тогда
				СтрокаПричиныИзмененияСтатуса = "";
				ВвестиСтроку(СтрокаПричиныИзмененияСтатуса,"Введите причину изменения статуса",,Истина);
				Объект.абс_ПричинаИзмененияСтатуса = СтрокаПричиныИзмененияСтатуса;
				мСтатус = Объект.Статус;
			КонецЕсли;
			
			ЗаписатьСтатусВРегистр(СтрокаПричиныИзмененияСтатуса);
			НовыйДокумент = Ложь;
		КонецЕсли;   
		
		ЗаполнитьСтатусы();
	КонецЕсли;
	
	ИсторияСтатусов.Параметры.УстановитьЗначениеПараметра("Заявка",Объект.Ссылка);
	абс_ЗаполнитьОрганизациюПодразделенияПоУмолчанию();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ШАПКИ ФОРМЫ

&НаСервере
Процедура ПриИзмененииПользователяНаСервере()
	
	ОчиститьТЧНаСервере();
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Сотрудник          = ДокументОбъект.Пользователь.абс_Сотрудник;
	ДокументОбъект.ФизическоеЛицо     = ДокументОбъект.Пользователь.ФизЛицо;
	ДокументОбъект.ГруппаПользователя = ДокументОбъект.Пользователь.Родитель;
	ДокументОбъект.Организация	      = ДокументОбъект.Сотрудник.Организация;
	
	ПользовательИБ = абс_БизнесПроцессыУведомления.ПолучитьПользователяИБ(ДокументОбъект);	

	Если ПользовательИБ <> Неопределено Тогда
		ДокументОбъект.ДоменноеИмя        = ПользовательИБ.ПользовательОС;	
	КонецЕсли;
	
	ДокументОбъект.ПодразделениеОрганизации = абс_БизнесПроцессыУведомления.ПолучитьПодразделение(ДокументОбъект);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	ЗаполнитьПраваСуществующегоПользователя(Объект.Пользователь);
	
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииСотрудникаНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	мПользователь   = Справочники.Пользователи.НайтиПоРеквизиту("абс_Сотрудник",ДокументОбъект.Сотрудник);

	Если ДокументОбъект.ВидОперации = Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда
		ОчиститьТЧНаСервере();
		ДокументОбъект.Пользователь   = мПользователь.Ссылка;
		
		Если ЗначениеЗаполнено(ДокументОбъект.Пользователь) Тогда
			ДокументОбъект.ГруппаПользователя = ДокументОбъект.Пользователь.Родитель;
		КонецЕсли;
		
		ЗаполнитьПраваСуществующегоПользователя(Объект.Пользователь);
	Иначе
		Если мПользователь <> Справочники.Пользователи.ПустаяСсылка() Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Для сотрудника "+ СокрЛП(ДокументОбъект.Сотрудник.Наименование) +" уже существует пользователь!";
			Сообщение.Сообщить();
		КонецЕсли;	
	КонецЕсли;
	
	ДокументОбъект.Организация	      =  ДокументОбъект.Сотрудник.Организация;

	ДокументОбъект.ПодразделениеОрганизации = ?(ДокументОбъект.Сотрудник.ВидДоговора <> Перечисления.ВидыДоговоровСФизЛицами.Подряда,      //АБС Коломиец 26620
	абс_БизнесПроцессыУведомления.ПолучитьПодразделение(ДокументОбъект), абс_БизнесПроцессыУведомления.ПолучитьТекущееПодразделение(ДокументОбъект));
	Если Не ЗначениеЗаполнено(ДокументОбъект.ПодразделениеОрганизации) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Для сотрудника "+ СокрЛП(ДокументОбъект.Сотрудник.Наименование) +" не указано подразделение!";
		Сообщение.Сообщить();
	КонецЕсли;	
	
	ДокументОбъект.ФизическоеЛицо = ДокументОбъект.Сотрудник.ФизЛицо;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура ПриИзмененииФизЛицаНаСервере()
	ОчиститьТЧНаСервере();
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Пользователь   = Справочники.Пользователи.НайтиПоРеквизиту("ФизЛицо",ДокументОбъект.Сотрудник);
	ДокументОбъект.Сотрудник      = ДокументОбъект.Пользователь.абс_Сотрудник;
	ДокументОбъект.ПодразделениеОрганизации = ДокументОбъект.Сотрудник.ПодразделениеОрганизации;
	ДокументОбъект.ГруппаПользователя = ДокументОбъект.Пользователь.Родитель;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	ЗаполнитьПраваСуществующегоПользователя(Объект.Пользователь);
		
КонецПроцедуры

&НаСервере
Процедура ОчиститьПользователяНаСервере(мПользователь)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Пользователь = мПользователь;
    ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

КонецПроцедуры

&НаСервере
Функция ПолучитьВозможностьВыбратьПользователя()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	МожноВыбрать = абс_БизнесПроцессыУведомления.ПолучитьВозможностьВыбратьПользователяСервер(ДокументОбъект);
	Возврат МожноВыбрать;  
КонецФункции


&НаКлиенте
Процедура ПользовательПриИзменении(Элемент)
	
	//ПриИзмененииОрганизации();
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя") Тогда
		
		МожноВыбрать = ПолучитьВозможностьВыбратьПользователя();
		
		Если Не МожноВыбрать Тогда
			
			ОчиститьПользователяНаСервере(мПользователь);
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "По данному пользователю существуют не завершенные заявки на изменение прав, дождитесь их выполнения";
			Сообщение.Сообщить();
		Иначе
			
			ПриИзмененииПользователяНаСервере();
			УстановитьДоступность();
			ЗаполнитьТиповыеРоли(СпособОтображенияТиповыхРолей);
			//// нач ВСТАВКА Нарыжный 08.10.2013 33558
			//Для Каждого СтрокаНаборТиповыхРолейИСУЗК из НаборТиповыхРолейИСУЗК Цикл 
			//	Элементы.НаборТиповыхРолейИСУЗК.ТекущаяСтрока = СтрокаНаборТиповыхРолейИСУЗК.ПолучитьИдентификатор();
			//	НаборТиповыхРолейИСУЗКПриИзменении(Элементы.НаборТиповыхРолейИСУЗК);
			//КонецЦикла;
			//// кон ВСТАВКА Нарыжный 08.10.2013 33558
			мПользователь = Объект.Пользователь;
			ЗаполнитьСтатусы();
		КонецЕсли;
		
	КонецЕсли;
	 
КонецПроцедуры

&НаКлиенте
Процедура СотрудникПриИзменении(Элемент)
	ПриИзмененииСотрудникаНаСервере();
	ПриИзмененииОрганизации();
КонецПроцедуры

&НаКлиенте
Процедура ФизическоеЛицоПриИзменении(Элемент)
	ПриИзмененииФизЛицаНаСервере();
	//// нач ВСТАВКА Нарыжный 08.10.2013 33558
	//Если ЗначениеЗаполнено(Объект.Пользователь) Тогда 
	//	Для Каждого СтрокаНаборТиповыхРолейИСУЗК из НаборТиповыхРолейИСУЗК Цикл 
	//		Элементы.НаборТиповыхРолейИСУЗК.ТекущаяСтрока = СтрокаНаборТиповыхРолейИСУЗК.ПолучитьИдентификатор();
	//		НаборТиповыхРолейИСУЗКПриИзменении(Элементы.НаборТиповыхРолейИСУЗК);
	//	КонецЦикла;
	//КонецЕсли;
	//// кон ВСТАВКА Нарыжный 08.10.2013 33558
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТЧНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ДокументОбъект.ВидОперации = Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда
		ДокументОбъект.ЦФО.Очистить();
		ДокументОбъект.ЦФУ.Очистить();
	//	ЗаполнитьЦФУЦФО();
	КонецЕсли;
	
//	ДокументОбъект.ГруппыДоступаПользователя.Очистить();
	ДокументОбъект.РолиВЦепочкахСогласования.Очистить();
	ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.Очистить();
	
	Для каждого Стр Из ДокументОбъект.Подразделения Цикл
		Стр.Просмотр           = Ложь;
		Стр.ПросмотрТекущий    = Ложь;
	КонецЦикла;
	
	Для каждого Стр Из ДокументОбъект.ГруппыДоступаПользователя Цикл
		Стр.ТекущаяГруппа     = Ложь;
		Стр.Использование     = Ложь;
		Стр.Просмотр          = Ложь;
		Стр.Редактирование    = Ложь;
		Стр.НеДоступнаРольКТТК= Ложь;
	КонецЦикла;

	
	Для каждого Стр Из ДокументОбъект.ПодразделенияПоУмолчанию Цикл
		Стр.Ответственный           = Ложь;
		Стр.ОтветственныйТекущая    = Ложь;
	КонецЦикла;
	
	//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
	Для каждого Стр Из ДокументОбъект.ПодразделенияПоУмолчаниюОсновное Цикл
		Стр.Ответственный           = Ложь;
		Стр.ОтветственныйТекущая    = Ложь;
	КонецЦикла;	
	//\\АБС ВСТАВКА №45096 КОНЕЦ

	ДокументОбъект.ТиповыеРолиЕИСУП.Очистить();	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект"); 
КонецПроцедуры
 
&НаСервере
Процедура ОчиститьНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Пользователь    = "";
	ДокументОбъект.ФизическоеЛицо  = "";
	ДокументОбъект.Сотрудник       = "";
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРолиБПИСУЗК()
    Использование = Истина;
 	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура("Роль");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_РолиИИсполнителиИСУЗК.Роль  КАК Роль
	|ИЗ
	|	РегистрСведений.абс_РолиИИсполнителиИСУЗК КАК абс_РолиИИсполнителиИСУЗК
	|ГДЕ
	|	абс_РолиИИсполнителиИСУЗК.Исполнитель = &Исполнитель
	|	И абс_РолиИИсполнителиИСУЗК.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Исполнитель",ДокументОбъект.Пользователь);
	Запрос.УстановитьПараметр("Организация",ДокументОбъект.Организация);

	РолиБП = Запрос.Выполнить().Выбрать();
	Пока РолиБП.Следующий() Цикл
		Отбор.Роль = РолиБП.Роль;
		
		Если НЕ РолиБП.Роль.абс_РольИСУЗК Тогда
			Строки = ДокументОбъект.РолиВЦепочкахСогласования.НайтиСтроки(Отбор);
		Иначе	
			Строки = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.НайтиСтроки(Отбор);
		КонецЕсли;
		
		Если Использование <> Неопределено Тогда
			Если Использование Тогда
				Если Строки.Количество() = 0 Тогда
					
					Если НЕ РолиБП.Роль.абс_РольИСУЗК Тогда
						НоваяСтрока = ДокументОбъект.РолиВЦепочкахСогласования.Добавить();
					Иначе
						НоваяСтрока = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.Добавить();
					//	НоваяСтрока.ТекущаяРоль = Истина;
					КонецЕсли;	
					
					НоваяСтрока.Роль = РолиБП.Роль;
					НоваяСтрока.Использование = Истина;
				Иначе
					Строки[0].Использование = Истина;
				КонецЕсли;	
			Иначе	
				Для каждого Стр Из Строки Цикл
					Стр.Использование = Ложь;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ДокументОбъект.РолиВЦепочкахСогласования.Сортировать("Роль ВОЗР");           
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьПраваСуществующегоПользователя(Пользователь)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ЗначениеЗаполнено(Пользователь) Тогда
		ТЗ = Новый ТаблицаЗначений;
		абс_БизнесПроцессыУведомления.ЗаполнитьПраваПользователей(ДокументОбъект, ТЗ, Пользователь);
		ЗаполнитьГруппыПользователей(ДокументОбъект, Ложь);
		ЗаполнитьТиповыеРоли(СпособОтображенияТиповыхРолей);
		ЗначениеВРеквизитФормы(ТЗ, "НаборТиповыхРолей");
	КонецЕсли;
	
	МассивРолей = Новый Массив;
	Для каждого Стр Из ДокументОбъект.ТиповыеРолиЕИСУП Цикл
		Если Стр.Использование Тогда
			МассивРолей.Добавить(Стр.Роль);
			//АБС ВСТАВКА 48958  31.10.2014 17:33:48  Попов
			Роль = Стр.Роль.НаименованиеЗаданноеВКонфигураторе;
			Если Роль = "абс_РуководительДФМ" Тогда
				Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДФМ");
			ИначеЕсли  Роль = "абс_СотрудникОФК" Тогда
				Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеОФК");
			ИначеЕсли  Роль= "абс_СотрудникДРУ" Тогда
				Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДРУ");	 
			ИначеЕсли  Роль = "абс_СотрудникПД" Тогда
				Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеПД");
			ИначеЕсли  Роль = "абс_ДирККР" Тогда
				Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДирККР");
			Иначе
				Продолжить;
			КонецЕсли;
			СтрокаТЧ = ДокументОбъект.ПодразделенияПоУмолчанию.Найти(Подразделение,"Подразделение");
			Если СтрокаТЧ <> Неопределено Тогда
				СтрокаТЧ.Ответственный = Истина;	
			КонецЕсли;
		   	
			СтрокаТЧ = ДокументОбъект.ПодразделенияПоУмолчаниюОсновное.Найти(Подразделение,"Подразделение");
			Если СтрокаТЧ <> Неопределено Тогда
				СтрокаТЧ.Ответственный = Истина;	
			КонецЕсли;

			//АБС ВСТАВКА 48958 КОНЕЦ
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	ЗаполнитьРолиБП(МассивРолей,Истина,Неопределено);

	Если Константы.абс_ИспользоватьРегистрРолиИсполнителиИСУЗК.Получить() Тогда
		ЗаполнитьРолиБПИСУЗК();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура СсылкаВидОперацииПриИзмененииНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	РольСотрудникЕИСУП = Справочники.абс_ТиповыеРоли.НайтиПоРеквизиту("НаименованиеЗаданноеВКонфигураторе","абс_СотрудникКомпании");

	Если Объект.ВидОперации = Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда
		Если ЗначениеЗаполнено(Объект.Пользователь) Тогда	
			ЗаполнитьПраваСуществующегоПользователя(Объект.Пользователь);
			ЗаполнитьГруппыПользователей(ДокументОбъект,Ложь);
		КонецЕсли;	
	Иначе
		

		НоваяСтрока = ДокументОбъект.ТиповыеРолиЕИСУП.Добавить();
		НоваяСтрока.Роль 		  = Справочники.абс_ТиповыеРоли.НайтиПоРеквизиту("НаименованиеЗаданноеВКонфигураторе","Пользователь");
		НоваяСтрока.ТекущаяРоль   = Истина;
		НоваяСтрока.Использование = Истина;

		НоваяСтрока = ДокументОбъект.ТиповыеРолиЕИСУП.Добавить();
		НоваяСтрока.Роль 		  = РольСотрудникЕИСУП.Ссылка;
		НоваяСтрока.ТекущаяРоль   = Истина;
		НоваяСтрока.Использование = Истина;
		
	КонецЕсли;	
	
	ДокументОбъект.Сотрудник         = "";
	ДокументОбъект.ФизическоеЛицо    = "";
	ДокументОбъект.Пользователь      = "";
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
	Если Объект.ВидОперации <> Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда
		ЗаполнитьТиповыеРоли(СпособОтображенияТиповыхРолей);
		ЗаполнитьРолиБП(РольСотрудникЕИСУП,Истина,Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчисткаДокумента()

    МассивСтрокДляУдаления = Новый Массив;
	
	Для каждого Стр Из НаборТиповыхРолей Цикл
		Если (СпособОтображенияТиповыхРолей = 2 или СпособОтображенияТиповыхРолей = 3) и Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя") Тогда
			Если (СокрЛП(Стр.Роль.Наименование) <> "Пользователь") Тогда 	
				МассивСтрокДляУдаления.Добавить(Стр);
			КонецЕсли;	
		ИначеЕсли (СпособОтображенияТиповыхРолей = 2 ИЛИ СпособОтображенияТиповыхРолей = 3) и Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя") Тогда
			МассивСтрокДляУдаления.Добавить(Стр);
		ИначеЕсли СокрЛП(Стр.Роль.Наименование) <> "Пользователь" Тогда	
			Стр.Использование = Ложь; 
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Стр Из МассивСтрокДляУдаления Цикл
		НаборТиповыхРолей.Удалить(Стр);
	КонецЦикла;
	
	Если Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя")  Тогда
		//ЗаполнитьПодразделенияПоУмолчанию();
	КонецЕсли;
	
	ОчиститьТЧНаСервере();
	УстановитьВидимость();
	СсылкаВидОперацииПриИзмененииНаСервере();
	УстановитьДоступность();
	// // нач ВСТАВКА Нарыжный 08.10.2013 33558
	//Если Объект.ВидОперации <> ПолучитьЗначениеПеречисленияНаСервере("абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав", "ИзменениеПравТекущегоПользователя") Тогда
	//		Для Каждого СтрокаНаборТиповыхРолейИСУЗК из НаборТиповыхРолейИСУЗК Цикл 
	//			Элементы.НаборТиповыхРолейИСУЗК.ТекущаяСтрока = СтрокаНаборТиповыхРолейИСУЗК.ПолучитьИдентификатор();
	//			НаборТиповыхРолейИСУЗКПриИзменении(Элементы.НаборТиповыхРолейИСУЗК);
	//		КонецЦикла;
	//КонецЕсли;		
	//// кон ВСТАВКА Нарыжный 08.10.2013 33558	
КонецПроцедуры


&НаКлиенте
Процедура СсылкаВидОперацииПриИзменении(Элемент)
	
	ОчисткаДокумента();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ТАБЛИЦ ФОРМЫ 

&НаКлиенте
Процедура ЦФОПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено и не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация) Тогда
		Элемент.ТекущиеДанные.Организация = Объект.Организация;	
	КонецЕсли;		
	
	Если НЕ ОтменаРедактирования Тогда
		Отбор = Новый Структура("ЦФО,Организация");
		Отбор.ЦФО =  Элемент.ТекущиеДанные.ЦФО;
		Отбор.Организация =  Элемент.ТекущиеДанные.Организация;
		Строки = Объект.ЦФО.НайтиСтроки(Отбор);
		Если Строки.Количество() > 1  Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "ЦФО "+ СокрЛП(Элемент.ТекущиеДанные.ЦФО.Наименование) + " уже выбран в табличной части!";
			Сообщение.Сообщить();
			Отказ = Истина;	
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.ЦФО)  Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "ЦФО не заполнено или заполнено некорректно! Для отказа от заполнения строки нажмите Esc";
			Сообщение.Сообщить();
			Отказ = Истина;	
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФУПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если Элемент.ТекущиеДанные <> Неопределено и не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация) Тогда
		Элемент.ТекущиеДанные.Организация = Объект.Организация;	
	КонецЕсли;	
	
	Если Не ОтменаРедактирования Тогда
		Отбор = Новый Структура("ЦФУ,Организация");
		Отбор.ЦФУ =  Элемент.ТекущиеДанные.ЦФУ;
		Отбор.Организация =  Элемент.ТекущиеДанные.Организация;
		Строки = Объект.ЦФУ.НайтиСтроки(Отбор);
		Если Строки.Количество() > 1 Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "ЦФУ "+ СокрЛП(Элемент.ТекущиеДанные.ЦФУ.Наименование) + " уже выбран в табличной части!";
			Сообщение.Сообщить();
			Отказ = Истина;	
		КонецЕсли;	
		
		Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.ЦФУ) Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "ЦФУ не заполнено или заполнено некорректно! Для отказа от заполнения строки нажмите Esc";
			Сообщение.Сообщить();
			Отказ = Истина;	
		КонецЕсли;	
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ЦФОПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Элемент.ТекущиеДанные.ИерархияЦФО = абс_БизнесПроцессыУведомления.ПолучитьИерархиюЦФО(Элемент.ТекущиеДанные.ЦФО);
		Если не ЗначениеЗаполнено(Элемент.ТекущиеДанные.Организация) Тогда
			Элемент.ТекущиеДанные.Организация = Объект.Организация;	
		КонецЕсли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СпособыОтображенияРолейПриИзменении(Элемент)
	ЗаполнитьТиповыеРоли(СпособОтображенияТиповыхРолей);
	//// нач ВСТАВКА Нарыжный 08.10.2013 33558
	//		Для Каждого СтрокаНаборТиповыхРолейИСУЗК из НаборТиповыхРолейИСУЗК Цикл 
	//			Элементы.НаборТиповыхРолейИСУЗК.ТекущаяСтрока = СтрокаНаборТиповыхРолейИСУЗК.ПолучитьИдентификатор();
	//			НаборТиповыхРолейИСУЗКПриИзменении(Элементы.НаборТиповыхРолейИСУЗК);
	//		КонецЦикла;
	//// кон ВСТАВКА Нарыжный 08.10.2013 33558	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ КОМАНД

&НаКлиенте
Функция ПолучитьИмяТЧ(ТабличнаяЧастьИсточник)
	
	мТабличнаяЧастьИсточник = "";
	
	Если ТабличнаяЧастьИсточник = "НаборТиповыхРолей" Тогда
		мТабличнаяЧастьИсточник = "Типовые роли ЕИСУП";
	ИначеЕсли ТабличнаяЧастьИсточник = "НаборТиповыхРолейИСУЗК" Тогда	
		мТабличнаяЧастьИсточник = "Типовые роли ИСУЗК";	
	ИначеЕсли ТабличнаяЧастьИсточник = "РолиВЦепочкахСогласования" Тогда	
		мТабличнаяЧастьИсточник = "Роли в цепочках согласования";	
	ИначеЕсли ТабличнаяЧастьИсточник = "РолиВЦепочкахСогласованияИСУЗК" Тогда	
		мТабличнаяЧастьИсточник = "Роли в цепочках согласования ИСУЗК";	
	ИначеЕсли ТабличнаяЧастьИсточник = "ЦФО" Тогда	
		мТабличнаяЧастьИсточник = "ЦФО";	
	ИначеЕсли ТабличнаяЧастьИсточник = "ЦФУ" Тогда	
		мТабличнаяЧастьИсточник = "ЦФУ";	
	КонецЕсли;
	
	Возврат мТабличнаяЧастьИсточник;
КонецФункции 

&НаКлиенте
Процедура ПроставитьРолиПоСоответствию(ИспользованиеИсточник,ОтветственныйИсточник,ПросмотрИсточник,РольИсточник,ТабличнаяЧастьИсточник,ЦФОРНПДИсточник,ИмяКолонки)
	
	мТабличнаяЧастьИсточник = ПолучитьИмяТЧ(ТабличнаяЧастьИсточник);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_НастройкаСоответствийПрав.ТабличнаяЧастьПриемник,
	|	абс_НастройкаСоответствийПрав.ИспользованиеПриемник,
	|	абс_НастройкаСоответствийПрав.РольПриемник,
	|	абс_НастройкаСоответствийПрав.ИспользованиеИсточник,
	|	абс_НастройкаСоответствийПрав.ОтветственныйИсточник,
	|	абс_НастройкаСоответствийПрав.ПросмотрИсточник,
	|	абс_НастройкаСоответствийПрав.ЦФОРНПДИсточник
	|ИЗ
	|	РегистрСведений.абс_НастройкаСоответствийПрав КАК абс_НастройкаСоответствийПрав
	|ГДЕ
	|	абс_НастройкаСоответствийПрав.ТабличнаяЧастьИсточник = &ТабличнаяЧастьИсточник
	|	И ВЫБОР
	|			КОГДА &РольИсточник <> НЕОПРЕДЕЛЕНО
	|				ТОГДА абс_НастройкаСоответствийПрав.РольИсточник = &РольИсточник
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИмяКолонки = ""ЦФООтветственный""
	|					ИЛИ &ИмяКолонки = ""ЦФУОтветственный""
	|				ТОГДА абс_НастройкаСоответствийПрав.ОтветственныйИсточник
	|			КОГДА &ИмяКолонки = ""ЦФОПросмотр""
	|					ИЛИ &ИмяКолонки = ""ЦФУПросмотр""
	|				ТОГДА абс_НастройкаСоответствийПрав.ПросмотрИсточник
	|			КОГДА &ИмяКолонки = ""ЦФОРНПД""
	|				ТОГДА абс_НастройкаСоответствийПрав.ЦФОРНПДИсточник
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("РольИсточник", РольИсточник);
	Запрос.УстановитьПараметр("ТабличнаяЧастьИсточник", мТабличнаяЧастьИсточник);
	Запрос.УстановитьПараметр("ИмяКолонки", ИмяКолонки);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Использование = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ТЧПриемник    = ВыборкаДетальныеЗаписи.ТабличнаяЧастьПриемник;
		
		Если  ВыборкаДетальныеЗаписи.ИспользованиеПриемник = ВыборкаДетальныеЗаписи.ИспользованиеИсточник Тогда
			Использование = ИспользованиеИсточник; 	
		Иначе
			
			Если  ВыборкаДетальныеЗаписи.ИспользованиеИсточник и  ИспользованиеИсточник Тогда
				Использование = Ложь; 
			КонецЕсли;
		КонецЕсли;	
			
		Роль          = ВыборкаДетальныеЗаписи.РольПриемник;
		
		Если ИмяКолонки = "ЦФООтветственный" ИЛИ ИмяКолонки = "ЦФУОтветственный" Тогда
			Использование = ?(ВыборкаДетальныеЗаписи.ОтветственныйИсточник = ВыборкаДетальныеЗаписи.ИспользованиеПриемник,ОтветственныйИсточник, Не ОтветственныйИсточник);
		ИначеЕсли 	ИмяКолонки = "ЦФОПросмотр" ИЛИ ИмяКолонки = "ЦФУПросмотр" Тогда
			Использование = ?(ВыборкаДетальныеЗаписи.ПросмотрИсточник = ВыборкаДетальныеЗаписи.ИспользованиеПриемник,ПросмотрИсточник, Не ПросмотрИсточник);
		ИначеЕсли 	ИмяКолонки = "ЦФОРНПД" Тогда
			Использование = ?(ВыборкаДетальныеЗаписи.ЦФОРНПДИсточник = ВыборкаДетальныеЗаписи.ИспользованиеПриемник,ЦФОРНПДИсточник, Не ЦФОРНПДИсточник);
		КонецЕсли;
		
		
		Если ТипЗнч(Роль) = Тип("СправочникСсылка.абс_ТиповыеРоли") и ЗначениеЗаполнено(Роль) Тогда	
			
			ЗаписатьВТЧнаСервере(Роль,Использование,Ложь);	
			ЗаполнитьРолиБП(Роль,Использование,Неопределено);
			
			Если ТЧПриемник = "Типовые роли ИСУЗК" Тогда
				ТЧ = НаборТиповыхРолейИСУЗК;	
			Иначе
				ТЧ = НаборТиповыхРолей;	
			КонецЕсли;	
			
			Отбор = Новый Структура("Роль",Роль);
			Строки = ТЧ.НайтиСтроки(Отбор);
			Если Строки.Количество() <> 0 Тогда
				Строки[0].Использование = Использование;	
			Иначе
				Если СпособОтображенияТиповыхРолей = 2 Тогда
					НоваяСтрока = ТЧ.Добавить();
					НоваяСтрока.Роль = Роль;
					НоваяСтрока.Использование = Использование;
					НоваяСтрока.Приоритет = Роль.Приоритет;
				КонецЕсли;	
			КонецЕсли;	
			
			
		ИначеЕсли ТипЗнч(Роль) = Тип("СправочникСсылка.РолиИсполнителей") и ЗначениеЗаполнено(Роль) Тогда
			ЗаполнитьРолиБП(Неопределено,Использование,Роль);
		КонецЕсли;
		
	КонецЦикла;
	
	
	
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//АБС_Вставка 000024503 290114 Родин
&НаСервере
Процедура УстановитьОтветственногоВПодразделении(Роль,Использование)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если  Роль = "абс_РуководительДФМ" Тогда
		Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДФМ");
	ИначеЕсли  Роль = "абс_СотрудникОФК" Тогда
		Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеОФК");
	ИначеЕсли  Роль = "абс_СотрудникДРУ" Тогда
		Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДРУ");	 
	ИначеЕсли  Роль = "абс_СотрудникПД" Тогда
		Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеПД");
	ИначеЕсли  Роль = "абс_ДирККР" Тогда
		Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДирККР");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Подразделение) Тогда 
		СтрокаТЧ = ДокументОбъект.ПодразделенияПоУмолчанию.Найти(Подразделение,"Подразделение");
		Если СтрокаТЧ <> Неопределено Тогда
			СтрокаТЧ.Ответственный = Использование;	
		КонецЕсли;
		//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
		СтрокаТЧ = ДокументОбъект.ПодразделенияПоУмолчаниюОсновное.Найти(Подразделение,"Подразделение");
		Если СтрокаТЧ <> Неопределено Тогда
			СтрокаТЧ.Ответственный = Использование;	
		КонецЕсли;
		//\\АБС ВСТАВКА №45096 КОНЕЦ  		
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры
//АБС_Вставка 000024503 290114 Родин

&НаСервере
Функция ПолучитьОрганизациюПоУмолчанию()
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НастройкиПользователей.Значение КАК Организация
		|ИЗ
		|	РегистрСведений.НастройкиПользователей КАК НастройкиПользователей
		|ГДЕ
		|	НастройкиПользователей.Пользователь = &Пользователь
		|	И НастройкиПользователей.Настройка = &Настройка";

	Запрос.УстановитьПараметр("Настройка", ПланыВидовХарактеристик.НастройкиПользователей.ОсновнаяОрганизация);
	Запрос.УстановитьПараметр("Пользователь", ПараметрыСеанса.ТекущийПользователь);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.Организация;	
	КонецЕсли;
	
КонецФункции	

//&НаСервере
//Функция ПолучитьПодразделениеПоУмолчанию(мОрганизация)
//	Если ЗначениеЗаполнено(мОрганизация) Тогда	
//		Запрос = Новый Запрос;
//		Запрос.Текст = 
//		"ВЫБРАТЬ
//		|	ПодразделенияОрганизаций.Ссылка КАК ПодразделениеОрганизации
//		|ИЗ
//		|	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
//		|ГДЕ
//		|	ПодразделенияОрганизаций.Владелец = &Владелец
//		|	И ПодразделенияОрганизаций.абс_ЯвляетсяДирекцией = ИСТИНА";
//		
//		Запрос.УстановитьПараметр("Владелец", мОрганизация);
//		Результат = Запрос.Выполнить();
//		ВыборкаДетальныеЗаписи = Результат.Выбрать();
//		Если ВыборкаДетальныеЗаписи.Следующий() Тогда
//			Возврат ВыборкаДетальныеЗаписи.ПодразделениеОрганизации;	
//		КонецЕсли;
//	КонецЕсли;
//КонецФункции

&НаСервере
Процедура ЗаполнитьЦФУЦФО()
	//ДокументОбъект = РеквизитФормыВЗначение("Объект");
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	абс_ЦФУ.Ссылка КАК ЦФУ,
	//|	ЛОЖЬ КАК Ответственный,
	//|	ЛОЖЬ КАК Просмотр
	//|ИЗ
	//|	Справочник.абс_ЦФУ КАК абс_ЦФУ";
	//
	//ДокументОбъект.ЦФУ.Загрузить(Запрос.Выполнить().Выгрузить());	
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	Подразделения.Ссылка КАК ЦФО,
	//|	ЛОЖЬ КАК Ответственный,
	//|	ЛОЖЬ КАК Просмотр
	//|ИЗ
	//|	Справочник.Подразделения КАК Подразделения
	//|ГДЕ
	//|	ВЫБОР
	//|			КОГДА &ЭтоКТТК
	//|				ТОГДА Подразделения.абс_ЦФОИспользуетсяКТТК = ИСТИНА
	//|			ИНАЧЕ Подразделения.абс_ЦФОИспользуетсяДЗО = ИСТИНА
	//|		КОНЕЦ";
	//
	//Запрос.УстановитьПараметр("ЭтоКТТК",?(Объект.Организация.абс_СтатусОрганизации = ПредопределенноеЗначение("Перечисление.абс_СтатусОрганизации.ДЗО"),Ложь,Истина));
	//ДокументОбъект.ЦФО.Загрузить(Запрос.Выполнить().Выгрузить());
	//
	//ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодразделенияПоУмолчанию()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура("Подразделение");
	
	Отбор.Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДФМ");
	Строки = ДокументОбъект.Подразделения.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Тогда
	//	НоваяСтрока =  ДокументОбъект.Подразделения.Добавить();
	//	НоваяСтрока.Подразделение = Отбор.Подразделение;	
			
		//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
		//НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчанию.Добавить();
		НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчаниюОсновное.Добавить();
		//\\АБС ВСТАВКА №45096 КОНЕЦ 		
		НоваяСтрока.Подразделение = СокрЛП(Отбор.Подразделение);
		НоваяСтрока.Ответственный = Ложь;
	КонецЕсли;	
	
	
	Отбор.Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеОФК");
	Строки = ДокументОбъект.Подразделения.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Тогда
		//НоваяСтрока =  ДокументОбъект.Подразделения.Добавить();
		//НоваяСтрока.Подразделение = Отбор.Подразделение;
		
		//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
		//НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчанию.Добавить();
		НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчаниюОсновное.Добавить();
		//\\АБС ВСТАВКА №45096 КОНЕЦ 	
		НоваяСтрока.Подразделение = СокрЛП(Отбор.Подразделение);
		НоваяСтрока.Ответственный = Ложь;

	КонецЕсли;
	
	Отбор.Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДРУ");
	Строки = ДокументОбъект.Подразделения.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Тогда
		//НоваяСтрока =  ДокументОбъект.Подразделения.Добавить();
		//НоваяСтрока.Подразделение = Отбор.Подразделение;
		
		//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
		//НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчанию.Добавить();
		НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчаниюОсновное.Добавить();
		//\\АБС ВСТАВКА №45096 КОНЕЦ 	
		НоваяСтрока.Подразделение = СокрЛП(Отбор.Подразделение);
		НоваяСтрока.Ответственный = Ложь;

	КонецЕсли;	
	
	
	Отбор.Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеПД");
	Строки = ДокументОбъект.Подразделения.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Тогда
		//НоваяСтрока =  ДокументОбъект.Подразделения.Добавить();
		//НоваяСтрока.Подразделение = Отбор.Подразделение;
		
		//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
		//НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчанию.Добавить();
		НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчаниюОсновное.Добавить();
		//\\АБС ВСТАВКА №45096 КОНЕЦ 	
		НоваяСтрока.Подразделение = СокрЛП(Отбор.Подразделение);
		НоваяСтрока.Ответственный = Ложь;

	КонецЕсли;
	
	Отбор.Подразделение = абс_БизнесПроцессыУведомления.ПолучитьПодразделениеИзКонстанты("абс_ПодразделениеДирККР");
	Строки = ДокументОбъект.Подразделения.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Тогда
		//НоваяСтрока =  ДокументОбъект.Подразделения.Добавить();
		//НоваяСтрока.Подразделение = Отбор.Подразделение;
		
		//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
		//НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчанию.Добавить();
		НоваяСтрока =  ДокументОбъект.ПодразделенияПоУмолчаниюОсновное.Добавить();
		//\\АБС ВСТАВКА №45096 КОНЕЦ 	
		НоваяСтрока.Подразделение = СокрЛП(Отбор.Подразделение);
		НоваяСтрока.Ответственный = Ложь;

	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьМассивСтатусовНаСервере(СписокСтатусов)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	СтатусОрганизации = ДокументОбъект.Организация.абс_СтатусОрганизации;
	ПользовательИСУЗК = Ложь;

	Если ДокументОбъект.ВидОперации = Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда
		Для каждого Стр Из ДокументОбъект.ТиповыеРолиЕИСУП Цикл
			Если Не Стр.Роль.РольИСУЗК Тогда
				Продолжить
			КонецЕсли;
			Если (Стр.Использование и Не Стр.ТекущаяРоль) ИЛИ (Не Стр.Использование и Стр.ТекущаяРоль) Тогда
				ПользовательИСУЗК = Истина;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого Стр Из ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК Цикл
			Если Стр.ТекущаяРоль Тогда
				ПользовательИСУЗК = Истина;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для каждого Стр Из ДокументОбъект.ТиповыеРолиЕИСУП Цикл
			Если Стр.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_ПользовательИСУЗК" и Стр.Использование Тогда
				ПользовательИСУЗК = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументОбъект.Ссылка) ИЛИ НЕ ДокументОбъект.Проведен Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка);
	Иначе
		СписокСтатусов.Добавить(ДокументОбъект.Статус);
		Если ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка Тогда
			Если СтатусОрганизации = Перечисления.абс_СтатусОрганизации.ДЗО ИЛИ СтатусОрганизации = Перечисления.абс_СтатусОрганизации.Филиал Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеДЗО);
			Иначе
				Если ПользовательИСУЗК Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеРуководителемКадровойСлужбы);
				Иначе
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК);
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеДЗО Тогда
			//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов  	  	
			КолГрупп = 0;
			Для Каждого СтрокаГруппы из Объект.ГруппыДоступаПользователя Цикл
				Если не СтрокаГруппы.Использование Тогда
					Продолжить;
				КонецЕсли;	
				КолГрупп = КолГрупп + 1;				
			КонецЦикла;	
			
			Если (КолГрупп < 2) или (КолГрупп >= 2 и ДоступнаРольИсполнителяПоТекОрганизациям(ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеДЗО"))) Тогда
			//\\АБС ВСТАВКА №31046 КОНЕЦ	
				
				Если ПользовательИСУЗК Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеРуководителемКадровойСлужбы);
				Иначе	
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК);
				КонецЕсли;
				
			//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов	
			КонецЕсли;
			//\\АБС ВСТАВКА №31046 КОНЕЦ
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка);
			//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена);
			//СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Отказ);
		ИначеЕсли ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена);
			Если СтатусОрганизации = Перечисления.абс_СтатусОрганизации.ДЗО  ИЛИ СтатусОрганизации = Перечисления.абс_СтатусОрганизации.Филиал Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеДЗО);
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка);
			КонецЕсли;
		ИначеЕсли ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеРуководителемКадровойСлужбы Тогда	
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеГлавнымБухгалтером);
		//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка);
		ИначеЕсли ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеГлавнымБухгалтером Тогда	
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК);
			//СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка);
		КонецЕсли;
		//+++ Григорьев Д.В. - Добавим в список статус утверждение заявки для суперпользователя.
		мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(ПараметрыСеанса.ТекущийПользователь);
		Если мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) <> Неопределено Тогда
			Если СписокСтатусов.Найти(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена) = Неопределено Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена);
			КонецЕсли;
		КонецЕсли;
		//--- Григорьев Д.В.
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСтатусы()
	
	СписокСтатусов = Новый Массив();
	ПолучитьМассивСтатусовНаСервере(СписокСтатусов);
	Элементы.Статус.СписокВыбора.ЗагрузитьЗначения(СписокСтатусов);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьГруппыПользователей(ДокументОбъект,НовыйДокумент)
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("Использование");
	ТЗ.Колонки.Добавить("ГруппаДоступа");
	//АБС ВСТАВКА №55401 НАЧАЛО «10 февраля 2015 г.», Пополитов 	
	ТЗ.Колонки.Добавить("Просмотр");
	ТЗ.Колонки.Добавить("Редактирование");
	ТЗ.Колонки.Добавить("НеДоступнаРольКТТК");
	//\\АБС ВСТАВКА №55401 КОНЕЦ
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГруппыПользователей.Ссылка КАК ГруппаДоступа
	|ИЗ
	|	Справочник.ГруппыПользователей КАК ГруппыПользователей
	|ГДЕ
	|	НЕ ГруппыПользователей.ПометкаУдаления";
	
	Отбор = Новый Структура("ГруппаПользователя");
	
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Если НовыйДокумент Тогда
			НоваяСтрокаТЧ = ДокументОбъект.ГруппыДоступаПользователя.Добавить();
			НоваяСтрокаТЧ.ГруппаПользователя = ВыборкаДетальныеЗаписи.ГруппаДоступа;
						
			Если СокрЛП(ВыборкаДетальныеЗаписи.ГруппаДоступа.Наименование) = СокрЛП(ДокументОбъект.Организация.Наименование) Тогда
				НоваяСтрокаТЧ.ТекущаяГруппа = Истина;
				НоваяСтрокаТЧ.Использование = Истина;
				НоваяСтрокаТЧ.Просмотр      = Истина;
				НоваяСтрокаТЧ.Редактирование= Истина;				
			КонецЕсли;
			
		КонецЕсли;	
		
		Отбор.ГруппаПользователя = ВыборкаДетальныеЗаписи.ГруппаДоступа;
		Строки = ДокументОбъект.ГруппыДоступаПользователя.НайтиСтроки(Отбор);
		НоваяСтрока = ТЗ.Добавить();
		Если Строки.Количество() > 0 Тогда
			//АБС ВСТАВКА №55401 НАЧАЛО «10 февраля 2015 г.», Пополитов 
			//НоваяСтрока.Использование = Строки[0].Использование;
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Строки[0]);
			Если НоваяСтрока.Использование и СокрЛП(Строки[0].ГруппаПользователя.Наименование) = СокрЛП(ДокументОбъект.Организация.Наименование) Тогда
				НоваяСтрока.Просмотр       = Истина;
				НоваяСтрока.Редактирование = Истина;
			КонецЕсли;	
			//\\АБС ВСТАВКА №55401 КОНЕЦ      			
		КонецЕсли;
		
		НоваяСтрока.ГруппаДоступа  = ВыборкаДетальныеЗаписи.ГруппаДоступа;
		
	КонецЦикла;
	ЗначениеВРеквизитФормы(ТЗ,"НастройкаГруппПользователей");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРолиБП(Роль,Использование,РольБП,ТекГруппыДоступа = Неопределено)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура("Роль");
	
	//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов
	//МассивОрганизаций = Новый Массив;
	//МассивОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
	//МассивОрганизаций.Добавить(Объект.Организация);    	
	МассивОрганизаций = ДокументОбъект.абс_ПолучитьМассивОрганизаций(ТекГруппыДоступа);
	МассивОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
	//\\АБС ВСТАВКА №31046 КОНЕЦ	
	
	Если РольБП = Неопределено Тогда 
		
		Если Использование <> Неопределено Тогда
			Если Не Использование Тогда
				МассивИспользуемыхРолей = Новый Массив;
				Строки = НаборТиповыхРолей.НайтиСтроки(Новый Структура("Использование",Истина));
				Для каждого Стр Из Строки Цикл
					Если ТипЗнч(Роль) = Тип("СправочникСсылка.абс_ТиповыеРоли") Тогда 
						Если Стр.Роль <> Роль Тогда
							МассивИспользуемыхРолей.Добавить(Стр.Роль);
						КонецЕсли;
					Иначе	
						Если Роль.Найти(Стр.Роль) = Неопределено Тогда
							МассивИспользуемыхРолей.Добавить(Стр.Роль);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;		
				
				Запрос = Новый Запрос;
				Запрос.Текст = 
				"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
				|	абс_СоответствиеТиповыхРолейИРолейБП.РольБП КАК Роль
				|ИЗ
				|	РегистрСведений.абс_СоответствиеТиповыхРолейИРолейБП КАК абс_СоответствиеТиповыхРолейИРолейБП
				|ГДЕ
				|	абс_СоответствиеТиповыхРолейИРолейБП.ТиповаяРоль В(&ТиповаяРоль)
				|	И ВЫБОР
				|			КОГДА абс_СоответствиеТиповыхРолейИРолейБП.ДобавитьОрганизациюВИсключение
				|				ТОГДА НЕ абс_СоответствиеТиповыхРолейИРолейБП.Организация = &ОднаОрганизация
				|			ИНАЧЕ абс_СоответствиеТиповыхРолейИРолейБП.Организация В (&Организация)
				|		КОНЕЦ";
				
				//АБС ВСТАВКА №31192 НАЧАЛО «5 февраля 2015 г.», Пополитов
		        Запрос.УстановитьПараметр("ОднаОрганизация", Объект.Организация);
				//\\АБС ВСТАВКА №31192 КОНЕЦ    				
				Запрос.УстановитьПараметр("Организация", МассивОрганизаций);
				Запрос.УстановитьПараметр("ТиповаяРоль", МассивИспользуемыхРолей);
				ТЗДублиРолей = Запрос.Выполнить().Выгрузить();
				
			КонецЕсли;
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	абс_СоответствиеТиповыхРолейИРолейБП.РольБП КАК Роль
		|ИЗ
		|	РегистрСведений.абс_СоответствиеТиповыхРолейИРолейБП КАК абс_СоответствиеТиповыхРолейИРолейБП
		|ГДЕ
		|	ВЫБОР
		|			КОГДА абс_СоответствиеТиповыхРолейИРолейБП.ДобавитьОрганизациюВИсключение
		|				ТОГДА НЕ абс_СоответствиеТиповыхРолейИРолейБП.Организация = &ОднаОрганизация
		|			ИНАЧЕ абс_СоответствиеТиповыхРолейИРолейБП.Организация В (&Организация)
		|		КОНЕЦ";
		
		Если ТипЗнч(Роль) = Тип("СправочникСсылка.абс_ТиповыеРоли") Тогда
			Запрос.Текст =  Запрос.Текст + " и абс_СоответствиеТиповыхРолейИРолейБП.ТиповаяРоль = &ТиповаяРоль";
		Иначе	
			Запрос.Текст =  Запрос.Текст + " и абс_СоответствиеТиповыхРолейИРолейБП.ТиповаяРоль В (&ТиповаяРоль)";
		КонецЕсли;
		
		//АБС ВСТАВКА №31192 НАЧАЛО «5 февраля 2015 г.», Пополитов
		Запрос.УстановитьПараметр("ОднаОрганизация", Объект.Организация);
		//\\АБС ВСТАВКА №31192 КОНЕЦ  		
		Запрос.УстановитьПараметр("Организация", МассивОрганизаций);
		Запрос.УстановитьПараметр("ТиповаяРоль", Роль);
		РолиБП = Запрос.Выполнить().Выбрать();
		Пока РолиБП.Следующий() Цикл
			Отбор.Роль = РолиБП.Роль;
			
			Если НЕ РолиБП.Роль.абс_РольИСУЗК Тогда
				Строки = ДокументОбъект.РолиВЦепочкахСогласования.НайтиСтроки(Отбор);
			Иначе
				Строки = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.НайтиСтроки(Отбор);
			КонецЕсли;
			
			Если Использование <> Неопределено Тогда
				Если Использование Тогда
					Если Строки.Количество() = 0 Тогда
						
						Если НЕ РолиБП.Роль.абс_РольИСУЗК Тогда
							НоваяСтрока = ДокументОбъект.РолиВЦепочкахСогласования.Добавить();
						Иначе
							НоваяСтрока = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.Добавить();
							//НоваяСтрока.ТекущаяРоль   = Истина;
						КонецЕсли;
						
						НоваяСтрока.Роль = РолиБП.Роль;
						НоваяСтрока.Использование = Истина;
						
					Иначе
						Строки[0].Использование = Истина;
					КонецЕсли;	
				Иначе	
					Для каждого Стр Из Строки Цикл
						//ДокументОбъект.РолиВЦепочкахСогласования.Удалить(Стр);
						
						Если ТЗДублиРолей.Найти(РолиБП.Роль,"Роль") = Неопределено Тогда  
							Стр.Использование = Ложь;
						КонецЕсли;
						
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Отбор.Роль = РольБП;
		Если Использование <> Неопределено Тогда
			Если  Использование Тогда
				
				Если НЕ Отбор.Роль.абс_РольИСУЗК Тогда
					Строки = ДокументОбъект.РолиВЦепочкахСогласования.НайтиСтроки(Отбор);
				Иначе
					Строки = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.НайтиСтроки(Отбор);
				КонецЕсли;	
				
				Если Строки.Количество() = 0 Тогда
					НоваяСтрока = ДокументОбъект.РолиВЦепочкахСогласования.Добавить();
					НоваяСтрока.Роль = РольБП;
					НоваяСтрока.Использование = Истина;
				Иначе
					Строки[0].Использование = Истина;
				КонецЕсли;
			Иначе
				
				Если НЕ Отбор.Роль.абс_РольИСУЗК Тогда
					Строки = ДокументОбъект.РолиВЦепочкахСогласования.НайтиСтроки(Отбор);
				Иначе
					Строки = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.НайтиСтроки(Отбор);
				КонецЕсли;
				
				Для каждого Стр Из Строки Цикл
					Стр.Использование = Ложь;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
    ДокументОбъект.РолиВЦепочкахСогласования.Сортировать("Роль ВОЗР");           
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	ВидимостьРеквизитовФИО = Ложь;	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ВводНовогоПользователяСРучнойУстановкойПрав") или Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ВводНовогоПользователяСКопированиемПравСуществующего") Тогда
		ВидимостьРеквизитовФИО = Истина;
	КонецЕсли;
	
	ВидимостьРеквизитовКопированияПрав = Ложь;
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ВводНовогоПользователяСКопированиемПравСуществующего") Тогда
		ВидимостьРеквизитовКопированияПрав = Истина;
	КонецЕсли;
	ВидимостьРеквизитовКопированияПрав = ВидимостьРеквизитовКопированияПрав;
	Элементы.ПользовательОснование.Видимость = ВидимостьРеквизитовКопированияПрав;
	
	//+++ Григорьев Д.В.
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя") Тогда
		Элементы.ФормаСкопироватьПрава.Доступность = Истина;
	Иначе
		Элементы.ФормаСкопироватьПрава.Доступность = Ложь;
	КонецЕсли;
	//--- Григорьев Д.В.
	
//	Элементы.Фамилия.Видимость          =  ВидимостьРеквизитовФИО;
//	Элементы.Имя.Видимость              =  ВидимостьРеквизитовФИО;
//	Элементы.Отчество.Видимость         =  ВидимостьРеквизитовФИО;
	Элементы.ДоменноеИмя.Видимость      =  Истина;
	Элементы.ИзменитьДоменнноеИмя.Видимость =  Истина;
	
	ДоступнаРольКТТК = ДоступнаРольИсполнителя(ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК"));
	
	//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов  	
	//Элементы.Группа2.Видимость = ДоступнаРольКТТК;
	//\\АБС ВСТАВКА №31046 КОНЕЦ
	
	Элементы.РолиВЦепочкахСогласования.Видимость      = ДоступнаРольКТТК;
	Элементы.РолиВЦепочкахСогласованияИСУЗК.Видимость = ДоступнаРольКТТК;
	Элементы.ГруппаПользователя.Видимость =  ДоступнаРольКТТК;
	Элементы.ПрофильПолномочийПользователя.Видимость = Ложь;
	
	//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов
	ДоступныПолныеПрава = ДоступныПолныеПрава();
	Элементы.ПодразделенияИзКонстант.Видимость = ДоступныПолныеПрава;
	Элементы.ГруппаПодразделенийВыбора.ОтображениеСтраниц = ?(ДоступныПолныеПрава,ОтображениеСтраницФормы.ЗакладкиСверху,ОтображениеСтраницФормы.Нет);
	//\\АБС ВСТАВКА №45096 КОНЕЦ
	
КонецПроцедуры

//АБС ВСТАВКА №45096 НАЧАЛО «4 июля 2014 г.», Пополитов   	
&НаСервереБезКонтекста
Функция ДоступныПолныеПрава()
    Возврат РольДоступна("ПолныеПрава");
КонецФункции
//\\АБС ВСТАВКА №45096 КОНЕЦ

Функция ДоступнаРольИсполнителя(Роль)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ОтборПоОрганизации = Новый Массив;
	ОтборПоОрганизации.Добавить(ДокументОбъект.Организация);
	
	ОрганизацияКТТК = Справочники.Организации.НайтиПоНаименованию("КТТК");
	
	РольДоступнаПользователю = Ложь;
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РолиИИсполнители.Роль
		|ИЗ
		|	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
		|ГДЕ
		|	РолиИИсполнители.Исполнитель = &Исполнитель
		|	И РолиИИсполнители.Роль = &Роль
		|	И РолиИИсполнители.Организация в (&Организация)";

	Запрос.УстановитьПараметр("Исполнитель", глЗначениеПеременной("глТекущийПользователь"));
	
	Если Роль = Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК Тогда
		ОтборПоОрганизации.Очистить();
		ОтборПоОрганизации.Добавить(ОрганизацияКТТК);	
	КонецЕсли;
	
	Если (Роль = Справочники.РолиИсполнителей.СогласованиеГлавнымБухгалтером ИЛИ Роль = Справочники.РолиИсполнителей.СогласованиеРуководителемКадровойСлужбы) и ДокументОбъект.Организация.абс_СтатусОрганизации = Перечисления.абс_СтатусОрганизации.Филиал Тогда
		ОтборПоОрганизации.Добавить(ОрганизацияКТТК);	
	КонецЕсли;	
	
	Запрос.УстановитьПараметр("Организация", ОтборПоОрганизации);
	Запрос.УстановитьПараметр("Роль",Роль);

	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		РольДоступнаПользователю = Истина;
	КонецЦикла;
	
    Возврат РольДоступнаПользователю;
	 
КонецФункции // ()

Функция ДоступнаРольИсполнителяПоТекОрганизациям(Роль)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	РольДоступнаПользователюПоЛюбойОрганизации = Ложь;
	ОтборПоОрганизациям = ДокументОбъект.абс_ПолучитьМассивОрганизаций();
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	РолиИИсполнители.Роль,
	               |	РолиИИсполнители.Организация
	               |ИЗ
	               |	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
	               |ГДЕ
	               |	РолиИИсполнители.Исполнитель = &Исполнитель
	               |	И РолиИИсполнители.Роль = &Роль
	               |	И РолиИИсполнители.Организация В(&Организация)";

	Запрос.УстановитьПараметр("Исполнитель", глЗначениеПеременной("глТекущийПользователь"));   	
	Запрос.УстановитьПараметр("Организация", ОтборПоОрганизациям);
	Запрос.УстановитьПараметр("Роль",Роль);

	Результат = Запрос.Выполнить().Выбрать();
	Пока Результат.Следующий() Цикл
		РольДоступнаПользователюПоЛюбойОрганизации = Истина;
		ИндексМассива = ОтборПоОрганизациям.Найти(Результат.Организация);
		Если не ИндексМассива = Неопределено Тогда
			ОтборПоОрганизациям.Удалить(ИндексМассива);	
		КонецЕсли;	
	КонецЦикла;
	
    Возврат РольДоступнаПользователюПоЛюбойОрганизации и не ЗначениеЗаполнено(ОтборПоОрганизациям);
	 
КонецФункции // ()

&НаСервере
Функция ДоступноИзменениеСтатуса()
    ДоступноИзменениеСтатуса = Ложь;
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Если ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка Тогда
		
		Если ДокументОбъект.Организация.абс_СтатусОрганизации = Перечисления.абс_СтатусОрганизации.ДЗО ИЛИ ДокументОбъект.Организация.абс_СтатусОрганизации = Перечисления.абс_СтатусОрганизации.Филиал Тогда
			ДоступноИзменениеСтатуса =  ДоступнаРольИсполнителя(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеДЗО);
		Иначе
			ДоступноИзменениеСтатуса =  ДоступнаРольИсполнителя(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК);	
		КонецЕсли;	
		
		Если ДокументОбъект.Ответственный = глЗначениеПеременной("глТекущийПользователь")  Тогда
			ДоступноИзменениеСтатуса = Истина;	
		КонецЕсли;
		
	ИначеЕсли ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеДЗО Тогда 
		ДоступноИзменениеСтатуса =  ДоступнаРольИсполнителя(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеДЗО);
	ИначеЕсли ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК Тогда	
		ДоступноИзменениеСтатуса =  ДоступнаРольИсполнителя(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК);
	ИначеЕсли  ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеГлавнымБухгалтером Тогда	
		ДоступноИзменениеСтатуса =  ДоступнаРольИсполнителя(Справочники.РолиИсполнителей.СогласованиеГлавнымБухгалтером);
	ИначеЕсли  ДокументОбъект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеРуководителемКадровойСлужбы   Тогда	
		ДоступноИзменениеСтатуса =  ДоступнаРольИсполнителя(Справочники.РолиИсполнителей.СогласованиеРуководителемКадровойСлужбы);
	КонецЕсли;
	
	//Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
	//	ДоступноИзменениеСтатуса = Ложь;
	//КонецЕсли;
	
	
    Возврат ДоступноИзменениеСтатуса;
КонецФункции

Функция НеДоступноДляРедактирования()
	Если Объект.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции 

&НаКлиенте
Процедура УстановитьДоступность()
	Элементы.Статус.Доступность = ДоступноИзменениеСтатуса();
	мТолькоПросмотр = НеДоступноДляРедактирования();
	//Если мТолькоПросмотр Тогда
		Элементы.НаборТиповыхРолей.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.РолиВЦепочкахСогласования.ТолькоПросмотр = мТолькоПросмотр;
		
		Элементы.НаборТиповыхРолейИСУЗК.ТолькоПросмотр         = мТолькоПросмотр;
		Элементы.РолиВЦепочкахСогласованияИСУЗК.ТолькоПросмотр = мТолькоПросмотр;
		
		Если ЗначениеЗаполнено(Объект.ПрофильПолномочийПользователя) Тогда
			Элементы.НаборТиповыхРолей.ТолькоПросмотр 		  = Истина;
			Элементы.РолиВЦепочкахСогласования.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		Элементы.ЦФУ.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.ЦФО.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.СрокДействияПрав.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.Подразделения.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.НастройкаГруппПользователей.ТолькоПросмотр = мТолькоПросмотр;
		
		//АБС_Изменено Родин 000024503   290114
		//Элементы.ПодразделенияПоУмолчанию.ТолькоПросмотр = мТолькоПросмотр;
		//АБС_Изменено Родин 000024503   290114
		
	//	Если  мТолькоПросмотр Тогда
			Элементы.ИзменитьДоменнноеИмя.Видимость = Не мТолькоПросмотр;
	//	КонецЕсли;
		
		Элементы.Пользователь.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.Сотрудник.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.ФизическоеЛицо.ТолькоПросмотр = мТолькоПросмотр;
		//
	//	Элементы.Фамилия.ТолькоПросмотр = мТолькоПросмотр;
	//	Элементы.Имя.ТолькоПросмотр = мТолькоПросмотр;
	//	Элементы.Отчество.ТолькоПросмотр = мТолькоПросмотр;
		
		Элементы.Организация.ТолькоПросмотр = Истина;
		Элементы.ПодразделениеОрганизации.ТолькоПросмотр =  Истина;
		Элементы.ВидОперации.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.ПользовательОснование.ТолькоПросмотр = мТолькоПросмотр;
		Элементы.ГруппаПользователя.ТолькоПросмотр =  Истина;
		Элементы.ПрофильПолномочийПользователя.ТолькоПросмотр = мТолькоПросмотр;
		//Элементы.ДоменноеИмя.ТолькоПросмотр	= мТолькоПросмотр;
		
		Если  Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя") Тогда
			Элементы.Пользователь.ТолькоПросмотр = Истина;
		Иначе
			Элементы.Сотрудник.ТолькоПросмотр = Истина;
		КонецЕсли;
		
		// АБС Изменение Родин Отключение бизнес-процессов 110314
		СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
		НеДоступноПроведение = Ложь;
		Если Не СогласованиеБезБП Тогда
			Если Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Исполнено") или  Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Исполняется") или Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.ИсполняетсяВводЗадач") Тогда
				НеДоступноПроведение = Истина;
			КонецЕсли;	
		Иначе
			Если Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена")Тогда
				НеДоступноПроведение = Истина;
			КонецЕсли;	
		КонецЕсли;
		
		Если НеДоступноПроведение Тогда
			Элементы.ФормаПровести.Доступность = Ложь;
			Элементы.ФормаЗаписать.Доступность = Ложь;
			Элементы.ФормаПровестиИЗакрыть.Доступность = Ложь;	
		КонецЕсли;
		// АБС Изменение Родин Отключение бизнес-процессов 110314
		
		Элементы.ФизическоеЛицо.ТолькоПросмотр = Истина;

		// {{KM WARE Токарев Н.А. Заявка №33282 14.07.2015 начало
		// добавление сортировки ТЧ Группа пользователей
		НастройкаГруппПользователей.Сортировать("ГруппаДоступа ВОЗР");
		// }}KM WARE Токарев Н.А. Заявка №33282 14.07.2015 окончание
		
	//КонецЕсли;	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТиповыеРоли(ВариантЗаполнения)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");

	ТекущийНаборРолей = РеквизитФормыВЗначение("НаборТиповыхРолей");
	НовыйНаборРолей   = ТекущийНаборРолей.Скопировать();
	НовыйНаборРолейИСУЗК   = ТекущийНаборРолей.Скопировать();
	//НовыйНаборРолей.Колонки.Добавить("РольИСУЗК");
	НовыйНаборРолей.Очистить();
	НовыйНаборРолейИСУЗК.Очистить();	
	
	Отбор = Новый Структура("Роль");
	
	Запрос = Новый Запрос;
	//АБС ВСТАВКА №29993 НАЧАЛО «15 декабря 2014 г.», Пополитов
	Запрос.УстановитьПараметр("НеДелатьОтбор",РольДоступна("ПолныеПрава"));
	//\\АБС ВСТАВКА №29993 КОНЕЦ   	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_ТиповыеРоли.Ссылка КАК Роль,
	|	абс_ТиповыеРоли.Приоритет КАК Приоритет,
	|	абс_ТиповыеРоли.Активна
	|ИЗ
	|	Справочник.абс_ТиповыеРоли КАК абс_ТиповыеРоли
	|ГДЕ
	|	ВЫБОР
	|			КОГДА &НеДелатьОтбор = ИСТИНА
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ абс_ТиповыеРоли.Активна = ИСТИНА
	|		КОНЕЦ";
	
	ТзТиповыеРоли = Запрос.Выполнить().Выгрузить();
	Для каждого Стр Из ТзТиповыеРоли Цикл
		
		//Если  ВариантЗаполнения = 3 и НЕ Стр.Роль.РольИСУЗК Тогда
		//	Продолжить;
		//КонецЕсли; 
		
		СтрокаСРолью = ДокументОбъект.ТиповыеРолиЕИСУП.Найти(Стр.Роль);
		
		Если (ВариантЗаполнения <> 2) или (СтрокаСРолью <> Неопределено и ВариантЗаполнения = 2) Тогда
			
			Если ВариантЗаполнения = 2 и Не СтрокаСРолью.Использование Тогда
				Продолжить;	
			КонецЕсли;
			
			Если Стр.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_ПользовательИСУЗК" или
				Стр.Роль.НаименованиеЗаданноеВКонфигураторе = "КадровикРегламентированныхДанных" или
				Стр.Роль.НаименованиеЗаданноеВКонфигураторе = "РасчетчикРегламентированнойЗарплаты" Тогда
				Продолжить;
			КонецЕсли;
			
			Если Стр.Роль.РольИСУЗК Тогда
				НоваяСтрока = НовыйНаборРолейИСУЗК.Добавить();
			Иначе
				НоваяСтрока = НовыйНаборРолей.Добавить();
			КонецЕсли;
			
			НоваяСтрока.Роль = Стр.Роль;
			//АБС ВСТАВКА №29993 НАЧАЛО «15 декабря 2014 г.», Пополитов
			НоваяСтрока.НеАктивность = не Стр.Активна;
			//\\АБС ВСТАВКА №29993 КОНЕЦ
			Если СтрокаСРолью <>  Неопределено Тогда 
				НоваяСтрока.Использование =  СтрокаСРолью.Использование;
				НоваяСтрока.ТекущаяРоль   =  СтрокаСРолью.ТекущаяРоль;
			КонецЕсли;  			
			
			Если Стр.Роль.НаименованиеЗаданноеВКонфигураторе = "Пользователь" Тогда
				НоваяСтрока.Использование  = Истина;
			КонецЕсли;
			
			НоваяСтрока.Приоритет   =  Стр.Приоритет;
			//НоваяСтрока.РольИСУЗК   =  ?(Стр.Роль.РольИСУЗК,1,0);
		КонецЕсли;
	КонецЦикла;	
	
	НовыйНаборРолей.Сортировать("Роль ВОЗР");
	НовыйНаборРолейИСУЗК.Сортировать("Роль ВОЗР");

	//НовыйНаборРолейИСУЗК.Колонки 
	
	ЗначениеВРеквизитФормы(НовыйНаборРолей,"НаборТиповыхРолей");
	ЗначениеВРеквизитФормы(НовыйНаборРолейИСУЗК ,"НаборТиповыхРолейИСУЗК");
	
КонецПроцедуры

&НаСервере
Процедура ЗаписатьВТЧнаСервере(Роль,Использование,ТекущаяРоль)
	
	ТекущийНаборРолей = РеквизитФормыВЗначение("НаборТиповыхРолей");
	ДокументОбъект    = РеквизитФормыВЗначение("Объект");
	//	ДокументОбъект.ТиповыеРолиЕИСУП.Очистить();
	
	Отбор = Новый Структура("Роль",Роль);
	
	Строки =  ДокументОбъект.ТиповыеРолиЕИСУП.НайтиСтроки(Отбор);
	Если Строки.Количество() = 0 Тогда
		НоваяСтрока = ДокументОбъект.ТиповыеРолиЕИСУП.Добавить();
		НоваяСтрока.Роль 		  = Роль;
		НоваяСтрока.ТекущаяРоль   = ТекущаяРоль;
		НоваяСтрока.Использование = Использование;
	Иначе
		Строки[0].Использование   = Использование;
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура ДобавитьПодразделениеДляОтветственного()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	абс_БизнесПроцессыУведомления.ДобавитьПодразделениеВТЧ(ДокументОбъект);	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ПроверитьВозможностьУбратьРоль(ИмяРеквизита,ИмяТабличнойЧасти,Отказ,ТекстОшибки,ОсновнойРеквизит)
	ДокументОбъект    = РеквизитФормыВЗначение("Объект");
	
	Отбор = Новый Структура(ИмяРеквизита,Истина);
	Строки =  ДокументОбъект[ИмяТабличнойЧасти].НайтиСтроки(Отбор);
	Если Строки.Количество() > 0 Тогда
		Отказ = Истина;
		Для каждого Стр Из Строки Цикл
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя снять роль: "+ ТекстОшибки + " в " +СокрЛП(Стр[ОсновнойРеквизит].Наименование);
			Сообщение.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейПриИзменении(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		
		Если СокрЛП(ПолучитьРеквизитНасервере(Элементы.НаборТиповыхРолей.ТекущиеДанные.Роль,"Наименование")) = "Пользователь" Тогда
			Элементы.НаборТиповыхРолей.ТекущиеДанные.Использование = Истина;
		Иначе
			ЗаписатьВТЧнаСервере(Элементы.НаборТиповыхРолей.ТекущиеДанные.Роль,Элементы.НаборТиповыхРолей.ТекущиеДанные.Использование,Элементы.НаборТиповыхРолей.ТекущиеДанные.ТекущаяРоль);	
			ЗаполнитьРолиБП(Элементы.НаборТиповыхРолей.ТекущиеДанные.Роль,Элементы.НаборТиповыхРолей.ТекущиеДанные.Использование,Неопределено);
		КонецЕсли;
		
		Если Элемент.ТекущийЭлемент.Имя = "Использование" и  Элемент.ТекущиеДанные.Использование Тогда
			Если Элемент.ТекущиеДанные.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_ДиректорДирекции" или Элемент.ТекущиеДанные.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_РуководительДепартамента" Тогда 
				ДобавитьПодразделениеДляОтветственного();			 
			КонецЕсли;
		КонецЕсли;
		
		//АБС_Вставка 000024503 290114 Родин
		УстановитьОтветственногоВПодразделении(Элемент.ТекущиеДанные.Роль.НаименованиеЗаданноеВКонфигураторе,Элемент.ТекущиеДанные.Использование);
		//АБС_Вставка 000024503 290114 Родин
		
		ПроставитьРолиПоСоответствию(Элементы.НаборТиповыхРолей.ТекущиеДанные.Использование,Ложь,Ложь,Элементы.НаборТиповыхРолей.ТекущиеДанные.Роль,Элемент.Имя,Ложь,Неопределено);
		
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура СтатусыЗаявокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
//	ЗаполнитьСтатусы();
КонецПроцедуры

&НаСервере
Процедура ИзменитьСтатусНаСервере(НовыйСтатус)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.Статус = НовыйСтатус;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект"); 
КонецПроцедуры

//&НаКлиенте
//Процедура СтатусыЗаявокПриИзменении(Элемент)
//	ИзменитьСтатусНаСервере(Этаформа.СтатусыЗаявок);
//	УстановитьДоступность();
//КонецПроцедуры



&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	//АБС ВСТАВКА №37062 НАЧАЛО «23 апреля 2014 г.», Пополитов
	СписокСтатусов = Новый СписокЗначений;
	СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Подготовка"));
	СписокСтатусов.Добавить(ПредопределенноеЗначение("Перечисление.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК")); 
	Если не Объект.Ссылка.Статус = ммСтатус и не СписокСтатусов.НайтиПоЗначению(Объект.Ссылка.Статус) = Неопределено Тогда
		ПредупредитПриСменеСтатуса = "";
		Для Каждого СтрокаТЧ Из НаборТиповыхРолей Цикл
			Если СтрокаТЧ.Использование
				и "абс_СотрудникДЭБ" = СокрЛП(ПолучитьРеквизитНасервере(СтрокаТЧ.Роль,"НаименованиеЗаданноеВКонфигураторе")) Тогда
				ПредупредитПриСменеСтатуса = "«Сотрудник ДЭБ (ЕИСУП)»";	
			КонецЕсли;	
		КонецЦикла;		
		Если не ПредупредитПриСменеСтатуса = "" Тогда
			Ответ = Вопрос("Установлена роль "+ПредупредитПриСменеСтатуса+", продолжить?", РежимДиалогаВопрос.ДаНет, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				ммСтатус = Объект.Статус;
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли; 	
 	//\\АБС ВСТАВКА №37062 КОНЕЦ      	
	
//	ЗаполнитьСтатусы();
	//СтрокаПричиныИзмененияСтатуса = "";
//	ВвестиСтроку(СтрокаПричиныИзмененияСтатуса,"Введите причину изменения статуса",,Истина);
//	ПриИзмененииСтатусаНаСервере(мСтатус);
//Объект.абс_ПричинаИзмененияСтатуса = СтрокаПричиныИзмененияСтатуса;
	//УстановитьДоступность();

	//АБС Шамов
	ИзменитьСтатусНаСервере(ммСтатус);
	//Объект.Статус = ммСтатус;	
	//\\
	//Элемент.РежимВыбораИзСписка = Ложь;
	//Элемент.КнопкаВыбора        = Ложь;
		
КонецПроцедуры

&НаСервере
Функция ПолучитьРеквизитНаСервере(РеквизитДокумента,Реквизит)
	Возврат РеквизитДокумента[Реквизит];	
КонецФункции

&НаКлиенте
Процедура НаборТиповыхРолейПриАктивизацииСтроки(Элемент)
	
	Если Элементы.НаборТиповыхРолей.ТекущийЭлемент <> Неопределено и Элементы.НаборТиповыхРолей.ТекущиеДанные <> Неопределено Тогда	
		мОписаниеРоли = ПолучитьРеквизитНасервере(Элементы.НаборТиповыхРолей.ТекущиеДанные.Роль,"Описание");
		ОписаниеРоли = "Описание роли: " + мОписаниеРоли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РолиВЦепочкахСогласованияПриАктивизацииСтроки(Элемент)
	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСписокГрупп()
	СписокГрупп = Новый СписокЗначений;
	Для каждого Стр Из Объект.ГруппыДоступаПользователя Цикл
		СписокГрупп.Добавить(Стр.ГруппаПользователя);
	КонецЦикла;
	
	Возврат СписокГрупп;
	
КонецФункции 

&НаКлиенте
Процедура УстановитьГруппыПользователя(Команда)
	мТолькоПросмотр = НеДоступноДляРедактирования();
	СписокГрупп = ПолучитьСписокГрупп();
	
	ПараметрыФормы = Новый Структура("СписокГруппДоступа,ТолькоПросмотр",СписокГрупп,мТолькоПросмотр);
	Форма = ПолучитьФорму("Документ.абс_ЗаявкаНаДобавлениеИзменениеПрав.Форма.Форма",ПараметрыФормы,ЭтаФорма);
	Форма.ОткрытьМодально();
КонецПроцедуры

&НаСервере
Процедура ОбработкаОповещенияПодборГруппДоступаНаСервере(Параметр)
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура("ГруппаПользователя");
	
	Для каждого Стр Из Параметр Цикл
		Отбор.ГруппаПользователя = Стр.ГруппаПользователя;	
		Строки = ДокументОбъект.ГруппыДоступаПользователя.НайтиСтроки(Отбор);
		
		Если Стр.Активна Тогда	
			Если Строки.Количество() = 0  Тогда
				НоваяСтрока = ДокументОбъект.ГруппыДоступаПользователя.Добавить();
				НоваяСтрока.ГруппаПользователя = Стр.ГруппаПользователя;
			КонецЕсли;
		Иначе
			Если Строки.Количество() > 0  Тогда
				ДокументОбъект.ГруппыДоступаПользователя.Удалить(Строки[0]);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "ПодборГруппДоступа" Тогда
		ОбработкаОповещенияПодборГруппДоступаНаСервере(Параметр);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПрофильПолномочийПользователяПриИзмененииНаСервере()

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.РолиВЦепочкахСогласования.Очистить();
	ДокументОбъект.ТиповыеРолиЕИСУП.Очистить();	
	
	СписокТиповыхРолей = Новый Массив;
	Если ЗначениеЗаполнено(Объект.ПрофильПолномочийПользователя) Тогда
		Для каждого Роль Из Объект.ПрофильПолномочийПользователя.СоставРолей Цикл
			ТиповаяРоль = Справочники.абс_ТиповыеРоли.НайтиПоРеквизиту("НаименованиеЗаданноеВКонфигураторе",СокрЛП(Роль.ИмяРоли));
			Если ТиповаяРоль <> Справочники.абс_ТиповыеРоли.ПустаяСсылка() Тогда 
				НоваяСтрока = ДокументОбъект.ТиповыеРолиЕИСУП.Добавить();
				НоваяСтрока.Роль = ТиповаяРоль.Ссылка;
				СписокТиповыхРолей.Добавить(ТиповаяРоль.Ссылка);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;		
	
	РольСотрудникЕИСУП = Справочники.абс_ТиповыеРоли.НайтиПоРеквизиту("НаименованиеЗаданноеВКонфигураторе","абс_СотрудникКомпании");
	Если  ДокументОбъект.ТиповыеРолиЕИСУП.Найти(РольСотрудникЕИСУП) = Неопределено Тогда
		НоваяСтрока = ДокументОбъект.ТиповыеРолиЕИСУП.Добавить();
		НоваяСтрока.Роль 		  = РольСотрудникЕИСУП.Ссылка;
		НоваяСтрока.ТекущаяРоль   = Ложь;
		НоваяСтрока.Использование = Истина;
	КонецЕсли;

	ТЗ = ДокументОбъект.ТиповыеРолиЕИСУП.Выгрузить();
	ТЗ.Колонки.Добавить("Приоритет",Новый ОписаниеТипов("Число"));
	
	Если ТЗ.Колонки.Найти("ТекущаяРоль") = Неопределено Тогда
		ТЗ.Колонки.Добавить("ТекущаяРоль",Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	Если ТЗ.Колонки.Найти("НеАктивность") = Неопределено Тогда
		ТЗ.Колонки.Добавить("НеАктивность",Новый ОписаниеТипов("Булево"));
	КонецЕсли;
	
	Для каждого Стр Из ТЗ Цикл
		Стр.Приоритет   =  Стр.Роль.Приоритет;  	
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТЗ,"НаборТиповыхРолей");
	ЗаполнитьТиповыеРоли(СпособОтображенияТиповыхРолей);
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	ЗаполнитьРолиБП(СписокТиповыхРолей,Истина,Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ПрофильПолномочийПользователяПриИзменении(Элемент)
	ПрофильПолномочийПользователяПриИзмененииНаСервере();	
	УстановитьДоступность();
	//// нач ВСТАВКА Нарыжный 08.10.2013 33558
	//		Для Каждого СтрокаНаборТиповыхРолейИСУЗК из НаборТиповыхРолейИСУЗК Цикл 
	//			Элементы.НаборТиповыхРолейИСУЗК.ТекущаяСтрока = СтрокаНаборТиповыхРолейИСУЗК.ПолучитьИдентификатор();
	//			НаборТиповыхРолейИСУЗКПриИзменении(Элементы.НаборТиповыхРолейИСУЗК);
	//		КонецЦикла;
	//// кон ВСТАВКА Нарыжный 08.10.2013 33558
	
КонецПроцедуры

 &НаСервере
Процедура ЗаписатьТЧГруппыДоступаНаСервере(мГруппаДоступа,Использование,мПросмотр,мРедактирование,мНеДоступнаРольКТТК)
	 
	 ДокументОбъект    = РеквизитФормыВЗначение("Объект");
	 Стр = ДокументОбъект.ГруппыДоступаПользователя.Найти(мГруппаДоступа);
	 Если Стр <> Неопределено Тогда
		 Стр.Использование = Использование;
		 Стр.Просмотр      = мПросмотр;
		 Стр.Редактирование= мРедактирование;
		 Стр.НеДоступнаРольКТТК= мНеДоступнаРольКТТК;
	 Иначе
		НоваяСтрока = ДокументОбъект.ГруппыДоступаПользователя.Добавить();
		НоваяСтрока.ГруппаПользователя  = мГруппаДоступа;
		НоваяСтрока.Использование       = Использование;
		НоваяСтрока.Просмотр            = мПросмотр;
		НоваяСтрока.Редактирование      = мРедактирование;
		НоваяСтрока.НеДоступнаРольКТТК  = мНеДоступнаРольКТТК;
	 КонецЕсли;	

    ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
 
КонецПроцедуры

 &НаКлиенте
 Процедура НастройкаГруппПользователейПриИзменении(Элемент)
	 ЗаписатьТЧГруппыДоступаНаСервере(Элемент.ТекущиеДанные.ГруппаДоступа,Элемент.ТекущиеДанные.Использование,Элемент.ТекущиеДанные.Просмотр,Элемент.ТекущиеДанные.Редактирование,Элемент.ТекущиеДанные.НеДоступнаРольКТТК);
 КонецПроцедуры

&НаКлиенте
 Процедура НастройкаГруппПользователейПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	 Отказ = Истина;
 КонецПроцедуры

&НаКлиенте
Процедура НастройкаГруппПользователейПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере 
Процедура ИзменитьРеквизитДокументаНаСервере(ИмяРеквизита,ЗначениеРеквизита)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект[ИмяРеквизита] = ЗначениеРеквизита;	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры
 
 &НаКлиенте
Процедура ДоменноеИмяНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
КонецПроцедуры

&НаСервере
Процедура УстановитьГруппуДоступаПоОрганизации()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Для каждого Стр Из ДокументОбъект.ГруппыДоступаПользователя Цикл
		Стр.ТекущаяГруппа  = Ложь;
		Стр.Использование  = Ложь;
		Стр.Просмотр       = Ложь;
		Стр.Редактирование = Ложь;		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ГруппыПользователей.Ссылка КАК ГруппаДоступа
	|ИЗ
	|	Справочник.ГруппыПользователей КАК ГруппыПользователей
	|ГДЕ
	|	ГруппыПользователей.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", СокрЛП(ДокументОбъект.Организация.Наименование));
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	Отбор = Новый Структура("ГруппаПользователя");
	
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Отбор.ГруппаПользователя = ВыборкаДетальныеЗаписи.ГруппаДоступа;
		Строки = ДокументОбъект.ГруппыДоступаПользователя.НайтиСтроки(Отбор);
		Если Строки.Количество() = 0 Тогда
			НоваяСтрока =  ДокументОбъект.ГруппыДоступаПользователя.Добавить();
			НоваяСтрока.ГруппаПользователя  = ВыборкаДетальныеЗаписи.ГруппаДоступа;
			НоваяСтрока.ТекущаяГруппа       = Истина;
			НоваяСтрока.Использование       = Истина;
			НоваяСтрока.Просмотр            = Истина;
			НоваяСтрока.Редактирование      = Истина;
		Иначе	
			Строки[0].Использование       = Истина;
			Строки[0].Просмотр            = Истина;
			Строки[0].Редактирование      = Истина;			
		КонецЕсли;
	КонецЦикла;
	
	ЗаполнитьГруппыПользователей(ДокументОбъект,Ложь);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииОрганизации()
	
	УстановитьВидимость();
	//ЗаполнитьЦФУЦФО();
	
	ГруппаПользователя = ПолучитьГруппуПользователя(Объект.Организация);
	
	Если Объект.ВидОперации <> ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя") Тогда 
		ИзменитьРеквизитДокументаНасервере("ГруппаПользователя",ГруппаПользователя);	
	КонецЕсли;
	
	УстановитьГруппуДоступаПоОрганизации();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	ПриИзмененииОрганизации();	
КонецПроцедуры

&НаСервере
Функция НайтиПоРеквизитуНаСервере(ИмяРеквизита,ЗначениеРеквизита,ИмяСправочника)
 
 	Возврат Справочники[ИмяСправочника].НайтиПоРеквизиту(ИмяРеквизита,ЗначениеРеквизита);
 
КонецФункции 
 
&НаКлиенте
Процедура ЦФОПриИзменении(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда 	
		//АБС_Вставка 130214 Родин
		ИмяРеквизита = Элемент.ТекущийЭлемент.Имя;
		Если ИмяРеквизита = "ЦФООтветственный" и Не Элемент.ТекущиеДанные.Ответственный и  Не ПолучитьНеобходимостьСнятияРоли("Ответственный","ЦФО") Тогда
			Возврат;
		ИначеЕсли (ИмяРеквизита = "ЦФОИерархияЦФО" или ИмяРеквизита = "ЦФОЦФО")и Не Элемент.ТекущиеДанные.Ответственный и  Не ПолучитьНеобходимостьСнятияРоли("Ответственный","ЦФО") Тогда
			Возврат;
		ИначеЕсли ИмяРеквизита = "ЦФОПросмотр" и Не Элемент.ТекущиеДанные.Просмотр и Не ПолучитьНеобходимостьСнятияРоли("Просмотр","ЦФО") Тогда
			Возврат;
		ИначеЕсли ИмяРеквизита= "ЦФОРНПД"     и Не Элемент.ТекущиеДанные.ЦФОРНПД  и Не ПолучитьНеобходимостьСнятияРоли("ЦФОРНПД","ЦФО") Тогда
			Возврат;
		КонецЕсли;          
		//АБС_Вставка 130214 Родин
		ПроставитьРолиПоСоответствию(Ложь,Элемент.ТекущиеДанные.Ответственный,Элемент.ТекущиеДанные.Просмотр,Неопределено,Элемент.Имя,Элемент.ТекущиеДанные.ЦФОРНПД,ИмяРеквизита);		
	КонецЕсли;
	
КонецПроцедуры

//АБС_Вставка 130214 Родин
&НаСервере
Функция ПолучитьНеобходимостьСнятияРоли(ИмяРеквизита,ТЧ)

	Строки = Объект[ТЧ].НайтиСтроки(Новый Структура(ИмяРеквизита,Истина));	
	Возврат ?(Строки.Количество() > 0 ,Ложь,Истина);
		
КонецФункции 
//АБС_Вставка 130214 Родин
  
&НаКлиенте
Процедура ЦФУПриИзменении(Элемент)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
//АБС_Вставка 130214 Родин
		ИмяРеквизита = Элемент.ТекущийЭлемент.Имя;
		Если ИмяРеквизита = "ЦФУОтветственный" и Не Элемент.ТекущиеДанные.Ответственный и  Не ПолучитьНеобходимостьСнятияРоли("Ответственный","ЦФУ") Тогда
			Возврат;
		ИначеЕсли ИмяРеквизита = "ЦФУПросмотр" и Не Элемент.ТекущиеДанные.Просмотр и Не ПолучитьНеобходимостьСнятияРоли("Просмотр","ЦФУ") Тогда
			Возврат;
		КонецЕсли;          
//АБС_Вставка 130214 Родин
		ПроставитьРолиПоСоответствию(Ложь,Элемент.ТекущиеДанные.Ответственный,Элемент.ТекущиеДанные.Просмотр,Неопределено,Элемент.Имя,Ложь,ИмяРеквизита);
	
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьГруппуПользователя(Организация)
	
	ГруппаПользователя = Справочники.ГруппыПользователей.ПустаяСсылка();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Пользователи.Ссылка КАК ГруппаПользователя
	|ИЗ
	|	Справочник.Пользователи КАК Пользователи
	|ГДЕ
	|	Пользователи.ЭтоГруппа = ИСТИНА
	|	И Пользователи.Наименование = &Наименование";
	
	Запрос.УстановитьПараметр("Наименование", СокрЛП(Организация.Наименование));
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ГруппаПользователя  = ВыборкаДетальныеЗаписи.ГруппаПользователя;	
	КонецЦикла;
	
	Возврат ГруппаПользователя;

КонецФункции 

&НаКлиенте
Процедура ПодразделениеОрганизацииПриИзменении(Элемент)
	

КонецПроцедуры

&НаКлиенте
Процедура ДобавитьПодразделение(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЦФО(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьЦФУ(Команда)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеВТабличнуюЧастьНаСервере(Элемент)
	
	Отбор = Новый Структура("Подразделение",Элемент);
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Строки = ДокументОбъект.Подразделения.НайтиСтроки(Отбор);
	Если Строки.Количество() > 0 Тогда
		Строки[0].Просмотр = Истина;	
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		Если НоваяСтрока Тогда
			УстановитьЗначениеВТабличнуюЧастьНаСервере(Элемент.ТекущиеДанные.Подразделение);
			ПроставитьРольДокументыПоЦФО(Элемент);
		КонецЕсли;
	КонецЕсли;
	абс_ЗаполнитьОрганизациюПодразделенияПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияПоУмолчаниюПриИзменении(Элемент)	
	                      
	ТиповаяРоль = Неопределено;
	РольБП		= Неопределено;
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов	 	
		Если ТипЗнч(Элемент.ТекущиеДанные.Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
			Элемент.ТекущиеДанные.Организация = СокрЛП(Элемент.ТекущиеДанные.Подразделение.Владелец);
		КонецЕсли;	
		//\\АБС ВСТАВКА №31046 КОНЕЦ 		
		Если ТипЗнч(Элемент.ТекущиеДанные.Подразделение) = Тип("Строка") Тогда	
			
			абс_БизнесПроцессыПривелегированный.ПолучитьТиповуюРольИРольБПДляПодразделения(Элемент.ТекущиеДанные.Подразделение,ТиповаяРоль,РольБП);			
			
			Если ТиповаяРоль <> Неопределено Тогда
				Отбор = Новый Структура("Роль",ТиповаяРоль);
				Строки = НаборТиповыхРолей.НайтиСтроки(Отбор);
				Если Строки.Количество() <> 0 Тогда
					Строки[0].Использование = Элемент.ТекущиеДанные.Ответственный;	
				Иначе
					Если СпособОтображенияТиповыхРолей = 2 и Элемент.ТекущиеДанные.Ответственный Тогда
						НоваяСтрока = НаборТиповыхРолей.Добавить();
						НоваяСтрока.Роль = ТиповаяРоль;
						НоваяСтрока.Использование = Истина;
						НоваяСтрока.Приоритет = ТиповаяРоль.Приоритет;
					//ИначеЕсли СпособОтображенияТиповыхРолей = 3 и Элемент.ТекущиеДанные.Ответственный Тогда	
					//	Если ТиповаяРоль.РольИСУЗК Тогда
					//		НоваяСтрока = НаборТиповыхРолей.Добавить();
					//		НоваяСтрока.Роль = ТиповаяРоль;
					//		НоваяСтрока.Использование = Истина;
					//		НоваяСтрока.Приоритет = ТиповаяРоль.Приоритет;
					//	КонецЕсли;
					КонецЕсли;	
				КонецЕсли;	
				
				ЗаписатьВТЧнаСервере(ТиповаяРоль,Истина,Ложь);	
				ЗаполнитьРолиБП(ТиповаяРоль,Элемент.ТекущиеДанные.Ответственный,Неопределено);
				
			КонецЕсли;
			
			Если РольБП <> Неопределено  Тогда
				ЗаполнитьРолиБП(Неопределено,Элемент.ТекущиеДанные.Ответственный,РольБП);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоменноеИмяОчистка(Элемент, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ДоменноеИмяОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	 //#Если НЕ ВебКлиент Тогда
	 //	Результат = ОткрытьФормуМодально("Справочник.Пользователи.Форма.ФормаВыбораПользователяОС");
	 //	
	 //	Если ТипЗнч(Результат) = Тип("Строка") Тогда
	 //   	 ИзменитьРеквизитДокументаНасервере("ДоменноеИмя",Результат);
	 //	КонецЕсли;
	 //#КонецЕсли
КонецПроцедуры

&НаКлиенте
Процедура ДоменноеИмяПриИзменении(Элемент)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаСервере
Функция ДоменноеИмяСвободно(мДоменноеИмя)

	ИмяПользователяОС = СокрЛП(мДоменноеИмя);
	ДлинаИмени = СтрДлина(ИмяПользователяОС);
	Для н = 0 по ДлинаИмени - 1 Цикл
		Если Сред(ИмяПользователяОС, ДлинаИмени - н, 1) = "\" Тогда
			ИмяПользователяОС = Прав(ИмяПользователяОС, н);
			Прервать;
		КонецЕсли;
	КонецЦикла;

	мПользователь = Справочники.Пользователи.НайтиПоРеквизиту("абс_ИмяВДомене",СокрЛП(ИмяПользователяОС));
	Возврат мПользователь = Справочники.Пользователи.ПустаяСсылка();

КонецФункции 

&НаКлиенте
Процедура ИзменитьДоменнноеИмя(Команда)
	#Если НЕ ВебКлиент Тогда
		Результат = ОткрытьФормуМодально("Справочник.Пользователи.Форма.ФормаВыбораПользователяОС");
		Если ТипЗнч(Результат) = Тип("Строка") Тогда
			ДоменноеИмяСвободно = ДоменноеИмяСвободно(Результат);
			Если ДоменноеИмяСвободно Тогда	
				ИзменитьРеквизитДокументаНасервере("ДоменноеИмя",Результат);
			Иначе
				Сообщить("Имя в домене " + Результат + " уже используется!");
			КонецЕсли;	
		КонецЕсли;
	#КонецЕсли
КонецПроцедуры
      
&НаКлиенте
Процедура ПодразделениеОрганизацииНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Форма = ПолучитьФорму("Справочник.ПодразделенияОрганизаций.ФормаВыбора");
	Форма.ТолькоПросмотр = Истина;
	Форма.ЭлементыФормы.Организация.ТолькоПросмотр = Истина;
	Форма.Отбор.Владелец.Установить(Объект.Организация);
	Форма.Организация = Объект.Организация;
	Результат = Форма.ОткрытьМодально();
	ИзменитьРеквизитДокументаНаСервере("ПодразделениеОрганизации",Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлы(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Сначало надо записать документ.");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ВладелецФайла", Объект.Ссылка);
	ОткрытьФорму("Справочник.ХранилищеДополнительнойИнформации.Форма.ФормаСпискаУправляемая", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура РолиВЦепочкахСогласованияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЦФОПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЦФУПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПодразделенияПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаСервере
Процедура ПроверитьСрокДействияНаСервере()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	МинимальныйСрокДействия = КонецДня(ТекущаяДата()) + 1;
	
	Если ДокументОбъект.СрокДействияПрав < МинимальныйСрокДействия Тогда
		ДокументОбъект.СрокДействияПрав	= МинимальныйСрокДействия; 
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура СрокДействияПравПриИзменении(Элемент)
	ПроверитьСрокДействияНаСервере();
КонецПроцедуры

&НаСервере
Функция ПолучитьВключениеРолиДокументыПоЦФО()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ОтборПоИспользованию = Новый Структура("Просмотр",Истина);
	СтрокиИспользование  = ДокументОбъект.Подразделения.НайтиСтроки(ОтборПоИспользованию);
	
	Если СтрокиИспользование.Количество() = 0 Тогда
		Возврат Ложь;		
	Иначе	
		Возврат Истина;	
	КонецЕсли;
	
КонецФункции 

&НаКлиенте
Процедура ПроставитьРольДокументыПоЦФО(Элемент)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда 	
		ТиповаяРоль = НайтиПоРеквизитуНаСервере("НаименованиеЗаданноеВКонфигураторе","абс_СотрудникКомпании","абс_ТиповыеРоли");	
		ЗначениеПереключателя = ПолучитьВключениеРолиДокументыПоЦФО();

		Если ТиповаяРоль <> Неопределено Тогда
			Отбор = Новый Структура("Роль",ТиповаяРоль);
			Строки = НаборТиповыхРолей.НайтиСтроки(Отбор);
			Если Строки.Количество() <> 0 Тогда
				Строки[0].Использование = ЗначениеПереключателя;	
			КонецЕсли;	
			
			ЗаписатьВТЧнаСервере(ТиповаяРоль,ЗначениеПереключателя,Ложь);	
			
		КонецЕсли;
	КонецЕсли;  	
	
КонецПроцедуры
                  
&НаКлиенте
Процедура ПодразделенияПриИзменении(Элемент)
	ПроставитьРольДокументыПоЦФО(Элемент);
	абс_ЗаполнитьОрганизациюПодразделенияПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ПользовательОснованиеПриИзменении(Элемент)
	ОчиститьТЧНаСервере();
	ЗаполнитьПраваСуществующегоПользователя(Объект.ПользовательОснование);
	ЗаполнитьТиповыеРоли(СпособОтображенияТиповыхРолей);
	ИзменитьРеквизитДокументаНаСервере("ПодразделениеОрганизации",Объект.ПользовательОснование.абс_Сотрудник.ПодразделениеОрганизации);
	УстановитьДоступность();
	//// нач ВСТАВКА Нарыжный 08.10.2013 33558
	//		Для Каждого СтрокаНаборТиповыхРолейИСУЗК из НаборТиповыхРолейИСУЗК Цикл 
	//			Элементы.НаборТиповыхРолейИСУЗК.ТекущаяСтрока = СтрокаНаборТиповыхРолейИСУЗК.ПолучитьИдентификатор();
	//			НаборТиповыхРолейИСУЗКПриИзменении(Элементы.НаборТиповыхРолейИСУЗК);
	//		КонецЦикла;
	//// кон ВСТАВКА Нарыжный 08.10.2013 33558
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейИСУЗКПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейИСУЗКПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейИСУЗКПриАктивизацииСтроки(Элемент)
	Если Элементы.НаборТиповыхРолейИСУЗК.ТекущийЭлемент <> Неопределено и Элементы.НаборТиповыхРолейИСУЗК.ТекущиеДанные <> Неопределено Тогда	
		мОписаниеРоли = ПолучитьРеквизитНасервере(Элементы.НаборТиповыхРолейИСУЗК.ТекущиеДанные.Роль,"Описание");
		ОписаниеРолиИСУЗК = "Описание роли: " + мОписаниеРоли;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейИСУЗКПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НаборТиповыхРолейИСУЗК.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ЗаписатьВТЧнаСервере(ТекущиеДанные.Роль,ТекущиеДанные.Использование,ТекущиеДанные.ТекущаяРоль);	
		ЗаполнитьРолиБП(ТекущиеДанные.Роль,ТекущиеДанные.Использование,Неопределено);
		
		ПроставитьРолиПоСоответствию(Элементы.НаборТиповыхРолейИСУЗК.ТекущиеДанные.Использование,Ложь,Ложь,Элементы.НаборТиповыхРолейИСУЗК.ТекущиеДанные.Роль,Элемент.Имя,Ложь,Неопределено);

		РольПолзовательИСУЗК = Справочники.абс_ТиповыеРоли.НайтиПоРеквизиту("НаименованиеЗаданноеВКонфигураторе","абс_ПользовательИСУЗК");
		Отбор = Новый Структура("Использование",Истина);
		
		СтрокиИспользование = НаборТиповыхРолейИСУЗК.НайтиСтроки(Отбор);
		Если СтрокиИспользование.Количество() > 0 Тогда
			ЗаписатьВТЧнаСервере(РольПолзовательИСУЗК,Истина,ТекущиеДанные.ТекущаяРоль);
		Иначе
			ЗаписатьВТЧнаСервере(РольПолзовательИСУЗК,Ложь,ТекущиеДанные.ТекущаяРоль);			
		КонецЕсли;	
		
		
		ЗаполнитьСтатусы();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РолиВЦепочкахСогласованияИСУЗКПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.РолиВЦепочкахСогласованияИСУЗК.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		Элемент.ТекущиеДанные.ТекущаяРоль = Не Элемент.ТекущиеДанные.Использование;	
		ПроставитьРолиПоСоответствию(ТекущиеДанные.Использование,Ложь,Ложь,ТекущиеДанные.Роль,Элемент.Имя,Ложь,Неопределено);
	КонецЕсли;

	ЗаполнитьСтатусы();
КонецПроцедуры

&НаКлиенте
Процедура НаборТиповыхРолейПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент.Имя = "Использование" и  Элемент.ТекущиеДанные.Использование Тогда
		Если Элемент.ТекущиеДанные.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_РуководительЦФО" Тогда
			ПроверитьВозможностьУбратьРоль("Ответственный","ЦФО",Отказ,"Пользователь назначен ответственным в ЦФО","ЦФО");
			ПроверитьВозможностьУбратьРоль("Ответственный","ЦФУ",Отказ,"Пользователь назначен ответственным в ЦФУ","ЦФУ");
		ИначеЕсли Элемент.ТекущиеДанные.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_ИнициаторРНПД" Тогда
			ПроверитьВозможностьУбратьРоль("ЦФОРНПД","ЦФО",Отказ,"Пользователь назначен инициатором РНПД","ЦФО");
		//Заявка 19795
		ИначеЕсли Элемент.ТекущиеДанные.Роль.НаименованиеЗаданноеВКонфигураторе = "Пользователь" тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя снять роль: Пользователь (есть у всех)";
			Сообщение.Сообщить();
		ИначеЕсли Элемент.ТекущиеДанные.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_СотрудникКомпании" Тогда
			Отказ = Истина;
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Нельзя снять роль: Сотрудник компании (ЕИСУП)";
			Сообщение.Сообщить();
		КонецЕсли;
		//\\
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура РолиВЦепочкахСогласованияПередНачаломИзменения(Элемент, Отказ)
	Если Элемент.ТекущийЭлемент.Имя = "РолиВЦепочкахСогласованияИспользование" и  Элемент.ТекущиеДанные.Использование Тогда
		Если Элемент.ТекущиеДанные.Роль = Справочники.РолиИсполнителей.РуководительЦФО или Элемент.ТекущиеДанные.Роль = Справочники.РолиИсполнителей.ОтветственныйЦФОРНПД  Тогда
			ПроверитьВозможностьУбратьРоль("Ответственный","ЦФО",Отказ,"Пользователь назначен ответственным в ЦФО","ЦФО");
		ИначеЕсли Элемент.ТекущиеДанные.Роль = Справочники.РолиИсполнителей.ИнициаторРНПД Тогда
			ПроверитьВозможностьУбратьРоль("ЦФОРНПД","ЦФО",Отказ,"Пользователь назначен инициатором РНПД","ЦФО");	
		ИначеЕсли Элемент.ТекущиеДанные.Роль = Справочники.РолиИсполнителей.РуководительЦФУ Тогда
			ПроверитьВозможностьУбратьРоль("Ответственный","ЦФУ",Отказ,"Пользователь назначен ответственным","ЦФУ");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СтатусНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	//Если Не Элементы.Статус.РежимВыбораИзСписка Тогда
	//	Элементы.Статус.РежимВыбораИзСписка = Истина;   
	//КонецЕсли;
	//
	//Элементы.Статус.КнопкаВыбора = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура РолиВЦепочкахСогласованияПриИзменении(Элемент)
	ТекущиеДанные = Элементы.РолиВЦепочкахСогласования.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ПроставитьРолиПоСоответствию(ТекущиеДанные.Использование,Ложь,Ложь,ТекущиеДанные.Роль,Элемент.Имя,Ложь,Неопределено);
	КонецЕсли;
КонецПроцедуры


// Нач ВСТАВКА Нарыжный 08.10.2013 33558
&НаСервере
Функция ПолучитьЗначениеПеречисленияНаСервере(ИмяПеречисления, НаименованиеЗначения)
	Возврат Перечисления[ИмяПеречисления][НаименованиеЗначения];	
КонецФункции


&НаСервере
Процедура ПроставитьРолиПоСоответствиюНаСервере(ИспользованиеИсточник,ОтветственныйИсточник,ПросмотрИсточник,РольИсточник,ТабличнаяЧастьИсточник,ЦФОРНПДИсточник,ИмяКолонки, НаборТиповыхРолейИСУЗК,НаборТиповыхРолей)
	
	мТабличнаяЧастьИсточник = ПолучитьИмяТЧНаСервере(ТабличнаяЧастьИсточник);
	
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_НастройкаСоответствийПрав.ТабличнаяЧастьПриемник,
	|	абс_НастройкаСоответствийПрав.ИспользованиеПриемник,
	|	абс_НастройкаСоответствийПрав.РольПриемник,
	|	абс_НастройкаСоответствийПрав.ИспользованиеИсточник,
	|	абс_НастройкаСоответствийПрав.ОтветственныйИсточник,
	|	абс_НастройкаСоответствийПрав.ПросмотрИсточник,
	|	абс_НастройкаСоответствийПрав.ЦФОРНПДИсточник
	|ИЗ
	|	РегистрСведений.абс_НастройкаСоответствийПрав КАК абс_НастройкаСоответствийПрав
	|ГДЕ
	|	абс_НастройкаСоответствийПрав.ТабличнаяЧастьИсточник = &ТабличнаяЧастьИсточник
	|	И ВЫБОР
	|			КОГДА &РольИсточник <> НЕОПРЕДЕЛЕНО
	|				ТОГДА абс_НастройкаСоответствийПрав.РольИсточник = &РольИсточник
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И ВЫБОР
	|			КОГДА &ИмяКолонки = ""ЦФООтветственный""
	|					ИЛИ &ИмяКолонки = ""ЦФУОтветственный""
	|				ТОГДА абс_НастройкаСоответствийПрав.ОтветственныйИсточник
	|			КОГДА &ИмяКолонки = ""ЦФОПросмотр""
	|					ИЛИ &ИмяКолонки = ""ЦФУПросмотр""
	|				ТОГДА абс_НастройкаСоответствийПрав.ПросмотрИсточник
	|			КОГДА &ИмяКолонки = ""ЦФОРНПД""
	|				ТОГДА абс_НастройкаСоответствийПрав.ЦФОРНПДИсточник
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ";
	
	Запрос.УстановитьПараметр("РольИсточник", РольИсточник);
	Запрос.УстановитьПараметр("ТабличнаяЧастьИсточник", мТабличнаяЧастьИсточник);
	Запрос.УстановитьПараметр("ИмяКолонки", ИмяКолонки);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Использование = Ложь;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ТЧПриемник    = ВыборкаДетальныеЗаписи.ТабличнаяЧастьПриемник;
		
		Если  ВыборкаДетальныеЗаписи.ИспользованиеПриемник = ВыборкаДетальныеЗаписи.ИспользованиеИсточник Тогда
			Использование = ИспользованиеИсточник; 	
		Иначе
			
			Если  ВыборкаДетальныеЗаписи.ИспользованиеИсточник и  ИспользованиеИсточник Тогда
				Использование = Ложь; 
			КонецЕсли;
		КонецЕсли;	
			
		
		Роль          = ВыборкаДетальныеЗаписи.РольПриемник;
		
		Если ИмяКолонки = "ЦФООтветственный" ИЛИ ИмяКолонки = "ЦФУОтветственный" Тогда
			Использование = ?(ВыборкаДетальныеЗаписи.ОтветственныйИсточник = ВыборкаДетальныеЗаписи.ИспользованиеПриемник,ОтветственныйИсточник, Не ОтветственныйИсточник);
		ИначеЕсли 	ИмяКолонки = "ЦФОПросмотр" ИЛИ ИмяКолонки = "ЦУПросмотр" Тогда
			Использование = ?(ВыборкаДетальныеЗаписи.ПросмотрИсточник = ВыборкаДетальныеЗаписи.ИспользованиеПриемник,ПросмотрИсточник, Не ПросмотрИсточник);
		ИначеЕсли 	ИмяКолонки = "ЦФОРНПД" Тогда
			Использование = ?(ВыборкаДетальныеЗаписи.ЦФОРНПДИсточник = ВыборкаДетальныеЗаписи.ИспользованиеПриемник,ЦФОРНПДИсточник, Не ЦФОРНПДИсточник);
		КонецЕсли;
		
		
		Если ТипЗнч(Роль) = Тип("СправочникСсылка.абс_ТиповыеРоли") и ЗначениеЗаполнено(Роль) Тогда	
			
			ЗаписатьВТЧнаСервере(Роль,Использование,Ложь);	
			ЗаполнитьРолиБП(Роль,Использование,Неопределено);
			
			Если ТЧПриемник = "Типовые роли ИСУЗК" Тогда
				ТЧ = НаборТиповыхРолейИСУЗК;	
			Иначе
				ТЧ = НаборТиповыхРолей;	
			КонецЕсли;	
			
			Отбор = Новый Структура("Роль",Роль);
			Строки = ТЧ.НайтиСтроки(Отбор);
			Если Строки.Количество() <> 0 Тогда
				Строки[0].Использование = Использование;	
			Иначе
				Если СпособОтображенияТиповыхРолей = 2 Тогда
					НоваяСтрока = ТЧ.Добавить();
					НоваяСтрока.Роль = Роль;
					НоваяСтрока.Использование = Использование;
					НоваяСтрока.Приоритет = Роль.Приоритет;
				КонецЕсли;	
			КонецЕсли;	
			
			
		ИначеЕсли ТипЗнч(Роль) = Тип("СправочникСсылка.РолиИсполнителей") и ЗначениеЗаполнено(Роль) Тогда
			ЗаполнитьРолиБП(Неопределено,Использование,Роль);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьИмяТЧНаСервере(ТабличнаяЧастьИсточник)
	
	мТабличнаяЧастьИсточник = "";
	
	Если ТабличнаяЧастьИсточник = "НаборТиповыхРолей" Тогда
		мТабличнаяЧастьИсточник = "Типовые роли ЕИСУП";
	ИначеЕсли ТабличнаяЧастьИсточник = "НаборТиповыхРолейИСУЗК" Тогда	
		мТабличнаяЧастьИсточник = "Типовые роли ИСУЗК";	
	ИначеЕсли ТабличнаяЧастьИсточник = "РолиВЦепочкахСогласования" Тогда	
		мТабличнаяЧастьИсточник = "Роли в цепочках согласования";	
	ИначеЕсли ТабличнаяЧастьИсточник = "РолиВЦепочкахСогласованияИСУЗК" Тогда	
		мТабличнаяЧастьИсточник = "Роли в цепочках согласования ИСУЗК";	
	ИначеЕсли ТабличнаяЧастьИсточник = "ЦФО" Тогда	
		мТабличнаяЧастьИсточник = "ЦФО";	
	ИначеЕсли ТабличнаяЧастьИсточник = "ЦФУ" Тогда	
		мТабличнаяЧастьИсточник = "ЦФУ";	
	КонецЕсли;
	
	Возврат мТабличнаяЧастьИсточник;
КонецФункции 

&НаКлиенте
Процедура ПодразделенияПоУмолчаниюПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	//АБС ВСТАВКА №44783 НАЧАЛО «17 июня 2014 г.», Пополитов 	
	Массив = Новый Массив;
	Массив.Добавить(Тип("СправочникСсылка.ПодразделенияОрганизаций")); 
	Элемент.ТекущийЭлемент.ОграничениеТипа = Новый ОписаниеТипов(Массив);	
	тПодразделение = "";
	
	СтрЗначение = Элемент.ТекущиеДанные.Подразделение;
	Если ТипЗнч(СтрЗначение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
		тПодразделение = СтрЗначение;	
	КонецЕсли;	
	Если ТипЗнч(СтрЗначение) = Тип("Строка") и не СтрЗначение = "" и не ЗначениеЗаполнено(тПодразделение) Тогда
		тПодразделение = ПолучитьПодразделенияОрганизаций(СтрЗначение,Объект.Организация);	
	КонецЕсли;	     	 	
	Если ТипЗнч(СтрЗначение) = Тип("Строка") и не СтрЗначение = "" и не ЗначениеЗаполнено(тПодразделение) Тогда
		тПодразделение = ПолучитьПодразделенияОрганизацийИзКонстанты(СтрЗначение);	
	КонецЕсли;	
	Если ТипЗнч(тПодразделение) = Тип("Строка") и ЗначениеЗаполнено(тПодразделение) Тогда
		Массив.Добавить(Тип("Строка"));
		Элемент.ТекущийЭлемент.ОграничениеТипа = Новый ОписаниеТипов(Массив);
	КонецЕсли;
	
	Элемент.ТекущиеДанные.Подразделение = тПодразделение;
	//\\АБС ВСТАВКА №44783 КОНЕЦ   
	
	//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов	 	
	Если ЗначениеЗаполнено(тПодразделение) и ТипЗнч(тПодразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") Тогда
    	Элемент.ТекущиеДанные.Организация = СокрЛП(тПодразделение.Владелец);
	КонецЕсли;	
	//\\АБС ВСТАВКА №31046 КОНЕЦ
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПодразделенияОрганизацийИзКонстанты(СтрЗначение)
	
	Возврат РеквизитФормыВЗначение("Объект").ПолучитьПодразделениеИзКонстанты(СтрЗначение);
	
КонецФункции	

&НаСервереБезКонтекста
Функция ПолучитьПодразделенияОрганизаций(ИмяПодразделения, Владелец)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИмяПодразделения",ИмяПодразделения);
	Запрос.УстановитьПараметр("Владелец",Владелец);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	ПодразделенияОрганизаций.Ссылка
	               |ИЗ
	               |	Справочник.ПодразделенияОрганизаций КАК ПодразделенияОрганизаций
	               |ГДЕ
	               |	ПодразделенияОрганизаций.Наименование = &ИмяПодразделения
	               |	И ПодразделенияОрганизаций.Владелец = &Владелец";	
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	
	Возврат ?(Результат.Ссылка=NUll,Справочники.ПодразделенияОрганизаций.ПустаяСсылка(),Результат.Ссылка);
	
КонецФункции 

// Нач ВСТАВКА Нарыжный 08.10.2013 33558

// Start КТТК Ермолов Е.Л.  20.11.2014 000028464 
&НаКлиенте 
Процедура СотрудникНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка) 
           СтандартнаяОбработка = Ложь; 
           СотрудникиМассив = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ 
                                                |        СотрудникиОрганизаций.Ссылка 
                                                |ИЗ 
                                                |        Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций 
                                                |                ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ 
                                                |                        абс_ИсторияСтатусовСотрудниковСрезПоследних.Объект КАК Объект 
                                                |                ИЗ 
                                                |                        РегистрСведений.абс_ИсторияСтатусовСотрудников.СрезПоследних КАК абс_ИсторияСтатусовСотрудниковСрезПоследних 
                                                |                ГДЕ 
                                                |                        абс_ИсторияСтатусовСотрудниковСрезПоследних.Статус В(&Статус)) КАК Работающие 
                                                |                ПО СотрудникиОрганизаций.Ссылка = Работающие.Объект"); 
                Статусы = Новый СписокЗначений; 
                Статусы.Добавить(Перечисления.абс_СтатусыСотрудников.Работает); 
                Статусы.Добавить(Перечисления.абс_СтатусыСотрудников.Согласование); 
                Статусы.Добавить(Перечисления.абс_СтатусыСотрудников.ИзменениеИнформации); 
                СотрудникиМассив.УстановитьПараметр("Статус",Статусы); 
                СотрудникиМассив = СотрудникиМассив.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка"); 
                ПараметрыЗапроса = Новый Структура("Нужники",СотрудникиМассив); 
                ФормаВыбораСотрудников = ПолучитьФорму("Справочник.СотрудникиОрганизаций.Форма.ttk_ФормаБыстрогоВыбораУправляемая", ПараметрыЗапроса); 
                ФормаВыбораСотрудников.ТолькоПросмотр                 = Истина; 
                ФормаВыбораСотрудников.Параметры.РежимВыбора = Истина; 
            Объект.Сотрудник = ФормаВыбораСотрудников.ОткрытьМодально(); 
			//АБС ВСТАВКА 000031021  28.01.2015 13:55:19  Шамов
			СотрудникПриИзменении(Элемент);
			//АБС ВСТАВКА 000031021 КОНЕЦ 
КонецПроцедуры 
// Stop КТТК Ермолов Е.Л.  20.11.2014

//АБС ВСТАВКА №31046 НАЧАЛО «10 февраля 2015 г.», Пополитов    		
&НаКлиенте
Процедура НастройкаГруппПользователейИспользованиеПриИзменении(Элемент) 	
	абс_ОбработатьСтроку();		
КонецПроцедуры

&НаКлиенте
Процедура НастройкаГруппПользователейПросмотрПриИзменении(Элемент)
	абс_ОбработатьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура НастройкаГруппПользователейРедактированиеПриИзменении(Элемент)
	
	ТекСтрока = Элементы.НастройкаГруппПользователей.ТекущиеДанные;   
	ТекГруппаДоступа = Неопределено;
	ТекГруппаДоступаИсключение = Неопределено;
	Если не ТекСтрока = Неопределено и ТекСтрока.Редактирование Тогда 
		ТекСтрока.Просмотр = Истина;	
		ТекГруппаДоступа = ТекСтрока.ГруппаДоступа;
	ИначеЕсли не ТекСтрока = Неопределено и не ТекСтрока.Редактирование Тогда 	
		ТекГруппаДоступаИсключение = ТекСтрока.ГруппаДоступа;
	КонецЕсли; 
	
	ЗаполнитьРолиБП_Списком(ТекГруппаДоступа);	
	абс_ОбработатьСтроку();
	//АБС ИЗМЕНЕНИЕ 000032160  23.03.2015 17:29:20  Шамов1
	//ОбновитьГруппуФинансоваяСтруктура(ТекГруппаДоступа,ТекГруппаДоступаИсключение);
	//АБС ИЗМЕНЕНИЕ 000032160 КОНЕЦ
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьГруппуФинансоваяСтруктура(ТекГруппаДоступа,ТекГруппаДоступаИсключение)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ОтборПоОрганизациям = ДокументОбъект.абс_ПолучитьМассивОрганизаций(ТекГруппаДоступа,ТекГруппаДоступаИсключение);
	
	//ЦФО
	времТЗ = Объект.ЦФО.Выгрузить();
	Объект.ЦФО.Очистить();
	СвернутьТаблицу(времТЗ);
	Для Каждого ТекОрг Из ОтборПоОрганизациям Цикл
		Для Каждого ТекСтрока Из времТЗ Цикл
			СтрокаТЧ = Объект.ЦФО.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТекСтрока);
			СтрокаТЧ.Организация = ТекОрг;
		КонецЦикла;	
	КонецЦикла;	
		
	//ЦФУ
	времТЗ = Объект.ЦФУ.Выгрузить();
	Объект.ЦФУ.Очистить();
	СвернутьТаблицу(времТЗ);
	Для Каждого ТекОрг Из ОтборПоОрганизациям Цикл
		Для Каждого ТекСтрока Из времТЗ Цикл
			СтрокаТЧ = Объект.ЦФУ.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТЧ,ТекСтрока);
			СтрокаТЧ.Организация = ТекОрг;
		КонецЦикла;	
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Процедура СвернутьТаблицу(ТЗ)
	
	Если не ТЗ.Колонки.Найти("Организация") = Неопределено Тогда
		ТЗ.Колонки.Удалить("Организация");	
	КонецЕсли;
	Если не ТЗ.Колонки.Найти("НомерСтроки") = Неопределено Тогда
		ТЗ.Колонки.Удалить("НомерСтроки");	
	КонецЕсли;
	Если не ТЗ.Колонки.Найти("ИсходныйНомерСтроки") = Неопределено Тогда
		ТЗ.Колонки.Удалить("ИсходныйНомерСтроки");	
	КонецЕсли;
	
	ВсеКолонки = "";
	Для Каждого Колонка Из ТЗ.Колонки Цикл
		ВсеКолонки = ВсеКолонки + "," + Колонка.Имя; 	
	КонецЦикла;	
	ТЗ.Свернуть(Сред(ВсеКолонки,2));
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьРолиБП_Списком(ТекГруппыДоступа)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Отбор = Новый Структура("Роль");
	
	МассивТиповыхРолей = Новый Массив;
	
	Для Каждого Строка Из НаборТиповыхРолей Цикл
		Если Строка.Использование и не СокрЛП(ПолучитьРеквизитНасервере(Строка.Роль,"Наименование")) = "Пользователь" Тогда
			МассивТиповыхРолей.Добавить(Строка.Роль);
		КонецЕсли;
	КонецЦикла;		
	Для Каждого Строка Из НаборТиповыхРолейИСУЗК Цикл
		Если Строка.Использование и не СокрЛП(ПолучитьРеквизитНасервере(Строка.Роль,"Наименование")) = "Пользователь" Тогда
			МассивТиповыхРолей.Добавить(Строка.Роль);
		КонецЕсли;
	КонецЦикла;	
	
	Для Каждого Строка Из ДокументОбъект.РолиВЦепочкахСогласования Цикл
		Строка.Использование = Ложь;
	КонецЦикла;		
	Для Каждого Строка Из ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК Цикл
		Строка.Использование = Ложь;
	КонецЦикла;		
	
	МассивОрганизаций = ДокументОбъект.абс_ПолучитьМассивОрганизаций(ТекГруппыДоступа);
	МассивОрганизаций.Добавить(Справочники.Организации.ПустаяСсылка());
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	абс_СоответствиеТиповыхРолейИРолейБП.РольБП КАК Роль,
	|	абс_СоответствиеТиповыхРолейИРолейБП.РольБП.абс_РольИСУЗК КАК РольИСУЗК
	|ИЗ
	|	РегистрСведений.абс_СоответствиеТиповыхРолейИРолейБП КАК абс_СоответствиеТиповыхРолейИРолейБП
	|ГДЕ
	|	ВЫБОР
	|			КОГДА абс_СоответствиеТиповыхРолейИРолейБП.ДобавитьОрганизациюВИсключение
	|				ТОГДА НЕ абс_СоответствиеТиповыхРолейИРолейБП.Организация = &ОднаОрганизация
	|			ИНАЧЕ абс_СоответствиеТиповыхРолейИРолейБП.Организация В (&Организация)
	|		КОНЕЦ
	|	И абс_СоответствиеТиповыхРолейИРолейБП.ТиповаяРоль В(&ТиповаяРоль)";
	
	Запрос.УстановитьПараметр("ОднаОрганизация", Объект.Организация);		
	Запрос.УстановитьПараметр("Организация", МассивОрганизаций);
	Запрос.УстановитьПараметр("ТиповаяРоль", МассивТиповыхРолей);
	РолиБП = Запрос.Выполнить().Выбрать();
	
	Пока РолиБП.Следующий() Цикл
		Отбор.Роль = РолиБП.Роль;
		НеРольИСУЗК = не РолиБП.РольИСУЗК;
		
		Если НеРольИСУЗК Тогда
			Строки = ДокументОбъект.РолиВЦепочкахСогласования.НайтиСтроки(Отбор);
		Иначе
			Строки = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.НайтиСтроки(Отбор);
		КонецЕсли;
		
		Если Строки.Количество() = 0 Тогда 			
			Если НеРольИСУЗК Тогда
				НоваяСтрока = ДокументОбъект.РолиВЦепочкахСогласования.Добавить();
			Иначе
				НоваяСтрока = ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.Добавить();
			КонецЕсли;   			
			НоваяСтрока.Роль = РолиБП.Роль;
			НоваяСтрока.Использование = Истина;   			
		Иначе
			Для Каждого Строка Из Строки Цикл
				Строка.Использование = Истина;
			КонецЦикла;			
		КонецЕсли;			
	КонецЦикла;
		
    ДокументОбъект.РолиВЦепочкахСогласования.Сортировать("Роль ВОЗР");   
	ДокументОбъект.РолиВЦепочкахСогласованияИСУЗК.Сортировать("Роль ВОЗР");
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");

КонецПроцедуры

&НаКлиенте
Процедура абс_ОбработатьСтроку()
	
	ТекСтрока = Элементы.НастройкаГруппПользователей.ТекущиеДанные;
	
	Если ТекСтрока = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	мИспользование = ТекСтрока.Использование;
	
	Если мИспользование = Ложь Тогда  	
		ТекСтрока.Редактирование = мИспользование;
		ТекСтрока.Просмотр       = мИспользование;		
	КонецЕсли;	             	

	ДоступнаРольКТТК = ДоступнаРольИсполнителя(ПредопределенноеЗначение("Справочник.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК"));
	Если не ДоступнаРольКТТК Тогда
		ТекСтрока.НеДоступнаРольКТТК = абс_ИсторияПризнака(ТекСтрока.ГруппаДоступа,мИспользование,ТекСтрока.Редактирование)	
	КонецЕсли;	
		
КонецПроцедуры

&НаСервере
Функция абс_ИсторияПризнака(ГруппаПользователя,мИспользование,мРедактирование)

	ПризнакКолонки = Ложь;
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если не ЗначениеЗаполнено(ДокументОбъект.Ссылка) Тогда
		Возврат Истина;
	КонецЕсли;	
	
	Отбор = Новый Структура("ГруппаПользователя");
	Отбор.ГруппаПользователя = ГруппаПользователя;
	Строки = ДокументОбъект.Ссылка.ГруппыДоступаПользователя.НайтиСтроки(Отбор);
	Если не Строки.Количество() = 0 Тогда
		ПризнакКолонки = ПризнакКолонки или не Строки[0].Использование = мИспользование;
		ПризнакКолонки = ПризнакКолонки или не Строки[0].Редактирование = мРедактирование;
	Иначе	
		ПризнакКолонки = Истина;
	КонецЕсли;	
	
	Возврат ПризнакКолонки;
	
КонецФункции

&НаКлиенте
Процедура ГруппаПодразделенийВыбораПриСменеСтраницы(Элемент, ТекущаяСтраница)
	абс_ЗаполнитьОрганизациюПодразделенияПоУмолчанию();
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	абс_ЗаполнитьОрганизациюПодразделенияПоУмолчанию();
КонецПроцедуры

// {{ТТК Сладков А. Заявка №7767073  27.03.2017 начало
&НаКлиенте
Процедура ЦФОЦФООбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	
	Если ВыбранноеЗначение = Неопределено Тогда
		возврат;
	КонецЕсли;
	
	Если ВыбранноеЗначение.Родитель = Справочники.Подразделения.ПустаяСсылка() Тогда
		
		СтандартнаяОбработка=Ложь;
		
	КонецЕсли;

	
	Запрос = Новый Запрос;
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Подразделения.Ссылка
	|ИЗ
	|	Справочник.Подразделения КАК Подразделения
	|ГДЕ
	|	Подразделения.Родитель = &Родитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Подразделения.Родитель,
	|	Подразделения.Наименование";
	Запрос.УстановитьПараметр("Родитель",ВыбранноеЗначение);	 
	
	Выборка = ЗАпрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрокаЦФО = Объект.ЦФО.Добавить();
		
		НоваяСтрокаЦФО.ЦФО = Выборка.Ссылка;
		
		НоваяСтрокаЦФО.ИерархияЦФО = абс_БизнесПроцессыУведомления.ПолучитьИерархиюЦФО(НоваяСтрокаЦФО.ЦФО);
		
		НоваяСтрокаЦФО.Организация = Объект.Организация;	
	
		
	КонецЦикла;	
		
КонецПроцедуры

// }}ТТК Сладков А. Заявка №7767073  27.03.2017 окончание

//\\АБС ВСТАВКА №31046 КОНЕЦ

&НаКлиенте
Процедура СкопироватьПрава(Команда)
	
	Если Не ЗначениеЗаполнено(Объект.Пользователь) Тогда
		ПоказатьПредупреждение(, "Не выбран пользователь!");
		Возврат;
	КонецЕсли;
	
	СписокВыбора = Новый СписокЗначений;
	
	Пользователи = ПользователиИнформационнойБазы.ПолучитьПользователей();
	Для каждого ВремПользователь Из Пользователи Цикл
		СписокВыбора.Добавить(ВремПользователь.Имя);
	КонецЦикла; 
	СписокВыбора.СортироватьПоЗначению();

	ВыбранныйПользователь = СписокВыбора.ВыбратьЭлемент("Выберите пользователя...", СписокВыбора);
	Если ВыбранныйПользователь = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ВыбранныйПользовательИБ = УправлениеПользователями.НайтиПользователяИБ(ВыбранныйПользователь.Значение);
	
	Пользователь = Справочники.Пользователи.НайтиПоРеквизиту("ИдентификаторПользователяИБ", ВыбранныйПользовательИБ.УникальныйИдентификатор);
	
	ОчиститьТЧНаСервере();
	ЗаполнитьПраваСуществующегоПользователя(Пользователь);
	ЗаполнитьТиповыеРоли(СпособОтображенияТиповыхРолей);
	ИзменитьРеквизитДокументаНаСервере("ПодразделениеОрганизации", Пользователь.абс_Сотрудник.ПодразделениеОрганизации);
	УстановитьДоступность();
	
КонецПроцедуры