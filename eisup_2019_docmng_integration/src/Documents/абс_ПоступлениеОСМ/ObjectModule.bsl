 //////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
		СтандартнаяОбработка = Ложь;
		ЗаполнитьПоступлениеОСМПоПринятиюКУчетуОС(ДанныеЗаполнения);
	ИначеЕсли  ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.МодернизацияОС") Тогда 
		СтандартнаяОбработка = Ложь;
		ЗаполнитьПоступлениеОСМПоМодернизацииОС(ДанныеЗаполнения);
	ИначеЕсли ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.ВводНачальныхОстатковОС") Тогда
		СтандартнаяОбработка = Ложь;
		ЗаполнитьПоступлениеОСМПоВводуНачальныхОстатковОС(ДанныеЗаполнения);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	Если Не ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Номер) Тогда
		УстановитьНовыйНомер(Организация.Префикс);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Не ЗначениеЗаполнено(ДокументОснование) Тогда 
		Возврат;
	КонецЕсли;	
	
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		Для Каждого НаборЗаписей Из Движения Цикл
			НаборЗаписей.Очистить();
			НаборЗаписей.Записывать = Истина;
		КонецЦикла;
	КонецЕсли;
	
	Движения.абс_СтоимостьОСМеждународный.Записывать = Истина;
	Движения.ОсновныеСредстваМеждународныйУчет.Записывать = Истина;
	Движения.Международный.Записывать = Истина;
	
	НачалоПериода = НачалоМесяца(Дата);
	КонецПериода = КонецМесяца(Дата);
	
	ТипДокументаОснования = ТипЗнч(ДокументОснование);
	СтруктураЗапросов = Документы.абс_ПоступлениеОСМ.ПолучитьСтруктуруЗапросовПроведения(ТипДокументаОснования);
	
	СтруктураПараметровСтрока = ПолучитьМакет("СтруктураПараметров").ПолучитьТекст();
	СтруктураПараметров = ЗначениеИзСтрокиВнутр(СтруктураПараметровСтрока);
	
	ТаблицаСроков = Новый ТаблицаЗначений;
	ТаблицаСроков.Колонки.Добавить("ГруппаОС", Новый ОписаниеТипов("ПеречислениеСсылка.ГруппыОС"));
	ТаблицаСроков.Колонки.Добавить("ЦельИспользования", Новый ОписаниеТипов("СправочникСсылка.ЦелиИспользования"));
	ТаблицаСроков.Колонки.Добавить("СрокИспользования", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(4, 0)));
	
	Для Сч = 1 По 12 Цикл
		СтрокаТаблицы = ТаблицаСроков.Добавить();
		СтрокаТаблицы.ГруппаОС = СтруктураПараметров["ГруппаУчета"+Сч];
		СтрокаТаблицы.ЦельИспользования = СтруктураПараметров["Цель"+Сч];
		СтрокаТаблицы.СрокИспользования = СтруктураПараметров["СПИ"+Сч];
	КонецЦикла;
	
	ПустыеСубконто = ПолучитьПустыеСубконто();
	
	Запрос = Новый Запрос;
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	Запрос.УстановитьПараметр("ТаблицаСроков", ТаблицаСроков);
	Запрос.УстановитьПараметр("ПустыеСубконто", ПустыеСубконто);
	
	ТекстыЗапросов = Новый СписокЗначений;
	ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_МеждународныйУчет_ТекстЗапросаВидыСубконтоСчетов, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_МеждународныйУчет_ТекстЗапросаСоответствиеСчетовХозрасчетный, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_МеждународныйУчет_ТекстЗапросаСрокиПолезногоИспользования, "");
	
	Запрос.Текст = "";
	Для Каждого ЭлементСписка Из ТекстыЗапросов Цикл
		Запрос.Текст = Запрос.Текст+ЭлементСписка.Значение;
	КонецЦикла;
	
	Запрос.ВыполнитьПакет();
	
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("МоментДокументаДляРН", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("МоментДокумента", МоментВремени());
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ТекстыЗапросов = Новый СписокЗначений;
	
	/////////////////////////////////////////////////////////////////////////
	
		
		
		СчетаУчетаБУ = Новый Массив;
		СчетаУчетаБУ.Добавить(ПланыСчетов.Хозрасчетный.ОСвОрганизации);
		СчетаУчетаБУ.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОС_01);
		
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		Запрос.УстановитьПараметр("МоментОснования", ДокументОснование.МоментВремени());
		Запрос.УстановитьПараметр("СчетаУчетаБУ", СчетаУчетаБУ);
		
		Если ТипДокументаОснования=Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
			
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Принятие_ТекстЗапросаДанныеШапкиОснования , "");
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Принятие_ТекстЗапросаДанныеДляЗаполненияТабличнойЧасти , "");
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Принятие_ТекстЗапросаТабличнаяЧастьОсновныеСредства , "");
			
		ИначеЕсли ТипДокументаОснования=Тип("ДокументСсылка.МодернизацияОС") Тогда
			
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Модернизация_ТекстЗапросаОсновныеСредстваОснования , "");
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Модернизация_ТекстЗапросаПараметрыОсновныхСредствОснования , "");
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Модернизация_ТекстЗапросаДанныеДляЗаполненияТабличнойЧасти , "");
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Модернизация_ТекстЗапросаТабличнаяЧастьОсновныеСредства , "");
			
		ИначеЕсли ТипДокументаОснования=Тип("ДокументСсылка.ВводНачальныхОстатковОС") Тогда
			
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Остатки_ТекстЗапросаТабличнаяЧастьОсновныеСредства , "");
			
		КонецЕсли;
		
		ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_ТекстЗапросаСтоимостьОсновныхСредствДоДокумента , "");
		ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_ВнеоборотныеАктивы_ТекстЗапросаОсновныеСредстваМСФОПоТаблицеОС , "");
		ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_ТекстЗапросаНоваяСтоимостьОсновныхСредств , "");
		ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_ТекстЗапросаИзменениеПараметровОсновныхСредств , "");
		ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_ТекстЗапросаТаблица_абс_СтоимостьОСМеждународный , "Таблица_абс_СтоимостьОСМеждународный");
		ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_ТекстЗапросаТаблица_ОсновныеСредстваМеждународныйУчет , "Таблица_ОсновныеСредстваМеждународныйУчет");
		ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_ТекстЗапросаТаблица_Международный , "Таблица_Международный");
		Если ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.ПринятиеКУчетуОС") Тогда
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Принятие_УдалениеВременныхТаблиц, "");
		ИначеЕсли ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.МодернизацияОС") Тогда
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Модернизация_УдалениеВременныхТаблиц, "");
		ИначеЕсли ТипЗнч(ДокументОснование)=Тип("ДокументСсылка.ВводНачальныхОстатковОС") Тогда
			ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_Остатки_УдалениеВременныхТаблиц, "");
		КонецЕсли;
		ТекстыЗапросов.Добавить(СтруктураЗапросов.Поступление_УдалениеВременныхТаблиц, "");
		
		
	
	/////////////////////////////////////////////////////////////////////////
	
	
	Запрос.Текст = "";
	Для Каждого ТекстЗапроса Из ТекстыЗапросов Цикл
		Запрос.Текст = Запрос.Текст+ТекстЗапроса.Значение;
	КонецЦикла;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДанных = Новый Структура;
	
	Для Каждого ТекстЗапроса Из ТекстыЗапросов Цикл
		
		ИмяТаблицы = ТекстЗапроса.Представление;
		
		Если Не ПустаяСтрока(ИмяТаблицы) Тогда
			Индекс = ТекстыЗапросов.Индекс(ТекстЗапроса);
			ТаблицыДанных.Вставить(ИмяТаблицы, Результат[Индекс].Выгрузить());
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицыДанных.Свойство("Таблица_ОсновныеСредстваМеждународныйУчет") Тогда
		
		ТаблицаРегистра = ТаблицыДанных.Таблица_ОсновныеСредстваМеждународныйУчет;
		Если ТаблицаРегистра.Количество()>0 Тогда
			
			НаборЗаписей = Движения.ОсновныеСредстваМеждународныйУчет;
			НаборЗаписей.Загрузить(ТаблицаРегистра);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТаблицыДанных.Свойство("Таблица_абс_СтоимостьОСМеждународный") Тогда
		
		ТаблицаРегистра = ТаблицыДанных.Таблица_абс_СтоимостьОСМеждународный;
		Если ТаблицаРегистра.Количество()>0 Тогда
			
			НаборЗаписей = Движения.абс_СтоимостьОСМеждународный;
			НаборЗаписей.Загрузить(ТаблицаРегистра);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТаблицыДанных.Свойство("Таблица_Международный") Тогда
		
		ТаблицаРегистра = ТаблицыДанных.Таблица_Международный;
		Если ТаблицаРегистра.Количество()>0 Тогда
			
			НаборЗаписей = Движения.Международный;
			НаборЗаписей.Загрузить(ТаблицаРегистра);
			
		КонецЕсли;
		
	КонецЕсли;
	
		
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////
// Обработка заполнения

Процедура ЗаполнитьПоступлениеОСМПоПринятиюКУчетуОС(ДанныеЗаполнения)
	
	ДокОснование = ДанныеЗаполнения.ПолучитьОбъект();
	ЗаполнитьШапкуИОчиститьТЧ(ДокОснование);
	
	Для Каждого СтрокаОС Из ДокОснование.ОсновныеСредства Цикл
		
		СтрокаТЧ = ОсновныеСредства.Добавить();
		СтрокаТЧ.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		СтрокаТЧ.МОЛ = ДокОснование.МОЛБУ;
		СтрокаТЧ.Местонахождение = ДокОснование.ПодразделениеОрганизации;
		СтрокаТЧ.КоэффициентУскорения = ДокОснование.КоэффициентУскоренияБУ;
		Если СтрокаТЧ.КоэффициентУскорения=0 Тогда
			СтрокаТЧ.КоэффициентУскорения = 1;
		КонецЕсли;
		СтрокаТЧ.НачислятьАмортизацию = ДокОснование.НачислятьАмортизациюБУ;
		СтрокаТЧ.ДатаПринятияКУчету = ДокОснование.Дата;
		СтрокаТЧ.СчетСниженияСтоимости = ПланыСчетов.Международный.Служебный;
		Способ = ДокОснование.СпособыОтраженияРасходовПоАмортизации.Способы[0];
		СтрокаТЧ.СчетЗатрат = ПланыСчетов.Международный.НайтиПоКоду("М"+Способ.СчетЗатрат.Код);
		СтрокаТЧ.Субконто1 = Способ.Субконто1;
		СтрокаТЧ.Субконто2 = Способ.Субконто2;
		СтрокаТЧ.Субконто3 = Способ.Субконто3;
		ВидыСубконто = СтрокаТЧ.СчетЗатрат.ВидыСубконто;
		КоличествоСубконто = ВидыСубконто.Количество();
		Для Сч = 1 По КоличествоСубконто Цикл
			Если СтрокаТЧ["Субконто"+Сч]=Неопределено Или Не ЗначениеЗаполнено(СтрокаТЧ["Субконто"+Сч]) Тогда
				Если ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиЗатрат Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.СтатьяЗатрат;
				ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НоменклатурныеГруппы Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.НоменклатурнаяГруппа;
				ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Подразделения Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.ПодразделениеОрганизации;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;	 
	
	
КонецПроцедуры

Процедура ЗаполнитьПоступлениеОСМПоМодернизацииОС(ДанныеЗаполнения)
	
	ДокОснование = ДанныеЗаполнения.ПолучитьОбъект();
	ЗаполнитьШапкуИОчиститьТЧ(ДокОснование);
		
	Для Каждого СтрокаОС Из ДокОснование.ОС Цикл
		
		СтрокаТЧ = ОсновныеСредства.Добавить();
		СтрокаТЧ.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		
		ДанныеРегистра = РегистрыСведений.МестонахождениеОСБухгалтерскийУчет.ПолучитьПоследнее(ДокОснование.Дата, Новый Структура("ОсновноеСредство, Организация", СтрокаОС.ОсновноеСредство, ДокОснование.Организация));
		СтрокаТЧ.МОЛ = ДанныеРегистра.МОЛ;
		СтрокаТЧ.Местонахождение = ДанныеРегистра.Местонахождение;
		СтрокаТЧ.КоэффициентУскорения = СтрокаОС.КоэффициентУскоренияБУ;
		Если СтрокаТЧ.КоэффициентУскорения=0 Тогда
			СтрокаТЧ.КоэффициентУскорения = 1;
		КонецЕсли;
		
		ДанныеРегистра = РегистрыСведений.НачислениеАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ДокОснование.Дата, Новый Структура("ОсновноеСредство, Организация", СтрокаОС.ОсновноеСредство, ДокОснование.Организация));
		СтрокаТЧ.НачислятьАмортизацию = ДанныеРегистра.НачислятьАмортизацию;
		
		СтрокаТЧ.ДатаПринятияКУчету = ДокОснование.Дата;
		СтрокаТЧ.СчетСниженияСтоимости = ПланыСчетов.Международный.Служебный;
		
		ДанныеРегистра = РегистрыСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ДокОснование.Дата, Новый Структура("ОсновноеСредство, Организация", СтрокаОС.ОсновноеСредство, ДокОснование.Организация));
		Если ДанныеРегистра.СпособыОтраженияРасходовПоАмортизации.Пустая() Тогда 
			ДанныеРегистра = РегистрыСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ТекущаяДата(), Новый Структура("ОсновноеСредство, Организация", СтрокаОС.ОсновноеСредство, ДокОснование.Организация));
		КонецЕсли;
		Способ = ДанныеРегистра.СпособыОтраженияРасходовПоАмортизации.Способы[0];
		СтрокаТЧ.СчетЗатрат = ПланыСчетов.Международный.НайтиПоКоду("М"+Способ.СчетЗатрат.Код);
		СтрокаТЧ.Субконто1 = Способ.Субконто1;
		СтрокаТЧ.Субконто2 = Способ.Субконто2;
		СтрокаТЧ.Субконто3 = Способ.Субконто3;
		ВидыСубконто = СтрокаТЧ.СчетЗатрат.ВидыСубконто;
		КоличествоСубконто = ВидыСубконто.Количество();
		Для Сч = 1 По КоличествоСубконто Цикл
			Если СтрокаТЧ["Субконто"+Сч]=Неопределено Или Не ЗначениеЗаполнено(СтрокаТЧ["Субконто"+Сч]) Тогда
				Если ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиЗатрат Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.СтатьяЗатрат;
				ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НоменклатурныеГруппы Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.НоменклатурнаяГруппа;
				ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Подразделения Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.ПодразделениеОрганизации;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	
	
КонецПроцедуры

Процедура ЗаполнитьПоступлениеОСМПоВводуНачальныхОстатковОС(ДанныеЗаполнения)
	
	ДокОснование = ДанныеЗаполнения.ПолучитьОбъект();
	ЗаполнитьШапкуИОчиститьТЧ(ДокОснование);
	
	Для Каждого СтрокаОС Из ДокОснование.ОС Цикл
		
		СтрокаТЧ = ОсновныеСредства.Добавить();
		СтрокаТЧ.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		СтрокаТЧ.МОЛ = СтрокаОС.МОЛРегл;
		СтрокаТЧ.Местонахождение = ДокОснование.ПодразделениеОрганизации;
		СтрокаТЧ.КоэффициентУскорения = СтрокаОС.КоэффициентУскоренияБУ;
		Если СтрокаТЧ.КоэффициентУскорения=0 Тогда
			СтрокаТЧ.КоэффициентУскорения = 1;
		КонецЕсли;
		СтрокаТЧ.НачислятьАмортизацию = СтрокаОС.НачислятьАмортизациюБУ;
		СтрокаТЧ.ДатаПринятияКУчету = СтрокаОС.ДатаПринятияКУчету;
		СтрокаТЧ.СчетСниженияСтоимости = ПланыСчетов.Международный.Служебный;
		Способ = СтрокаОС.СпособОтраженияРасходовПоАмортизацииБУ.Способы[0];
		СтрокаТЧ.СчетЗатрат = ПланыСчетов.Международный.НайтиПоКоду("М"+Способ.СчетЗатрат.Код);
		СтрокаТЧ.Субконто1 = Способ.Субконто1;
		СтрокаТЧ.Субконто2 = Способ.Субконто2;
		СтрокаТЧ.Субконто3 = Способ.Субконто3;
		ВидыСубконто = СтрокаТЧ.СчетЗатрат.ВидыСубконто;
		КоличествоСубконто = ВидыСубконто.Количество();
		Для Сч = 1 По КоличествоСубконто Цикл
			Если СтрокаТЧ["Субконто"+Сч]=Неопределено Или Не ЗначениеЗаполнено(СтрокаТЧ["Субконто"+Сч]) Тогда
				Если ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиЗатрат Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.СтатьяЗатрат;
				ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.НоменклатурныеГруппы Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.НоменклатурнаяГруппа;
				ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Подразделения Тогда
					СтрокаТЧ["Субконто"+Сч] = Способ.ПодразделениеОрганизации;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	
КонецПроцедуры

Процедура ЗаполнитьШапкуИОчиститьТЧ(ДокОснование)
	
	Дата = ДокОснование.Дата;
	Организация = ДокОснование.Организация;
	ДокументОснование = ДокОснование.Ссылка;
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	Если Номер = "" Тогда
		УстановитьНовыйНомер(Организация.Префикс);
	КонецЕсли;
	
	ОсновныеСредства.Очистить();
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
// Прочие процедуры и функции

Функция ПолучитьПустыеСубконто()

	ПустыеСубконто = Новый СписокЗначений;
	ВыборкаСубконто = ПланыВидовХарактеристик.ВидыСубконтоМеждународные.Выбрать();
	Пока ВыборкаСубконто.Следующий() Цикл
		ПустыеСубконто.Добавить(ВыборкаСубконто.ТипЗначения.ПривестиЗначение());
	КонецЦикла;
	ПустыеСубконто.Добавить(Неопределено);

	Возврат ПустыеСубконто;

КонецФункции // ПолучитьПустыеСубконто()

