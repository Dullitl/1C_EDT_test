/////////////////////////////////
/////ЭКСПОРТНЫЕ ПЕРЕМЕННЫЕ
Перем НазваниеМакета Экспорт;

Функция РасчетСуммы(КолВоДок,СчКт,СубконтоКт1,СубконтоКт2,СубконтоКт3)
	
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ЗабалансовыйУчетОстатки.КоличествоОстатокДт КАК ОстКол,
		               |	ЗабалансовыйУчетОстатки.СуммаОстатокДт КАК ОстСумма
		               |ИЗ
		               |	РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(
		               |			,
		               |			Счет = &Счет,
		               |			,
		               |			Субконто1 = &Субконто1
		               |				"+?(ЗначениеЗаполнено(СубконтоКт2)," И Субконто2 = &Субконто2","")+"
		               |				"+?(ЗначениеЗаполнено(СубконтоКт3)," И Субконто3 = &Субконто3)",")")+" КАК ЗабалансовыйУчетОстатки";
		//Запрос.УстановитьПараметр("Дата",Дата);	
		Запрос.УстановитьПараметр("Счет",СчКт);
		Запрос.УстановитьПараметр("Субконто1",СубконтоКт1);
		Запрос.УстановитьПараметр("Субконто2",СубконтоКт2);
		Запрос.УстановитьПараметр("Субконто3",СубконтоКт3);
		Результат = Запрос.Выполнить().Выгрузить();
		
		Если Результат.Количество() = 0 Тогда
			возврат 0;
		КонецЕсли;	
   
		ОстСумма = Результат[0].ОстСумма;
		ОстКол = Результат[0].ОстКол;
	    СрЦена = 0;
	
		Если ОстКол = КолВоДок Тогда
			Возврат ОстСумма;
		Иначе
			Если ОстКол > 0 Тогда
				Если ОстКол < КолВоДок Тогда
					Сообщить("по счету " + СчКт + " в наличии " + ОстКол + " необходимо " + КолВоДок);

					Возврат 0;
				Иначе	
					СрЦена = ОстСумма / ОстКол;
					Возврат СрЦена*КолВоДок;
				КонецЕсли;
			Иначе
				Сообщить("по счету "+СчКт+" нет остатка");
				Возврат 0;
			КонецЕсли;
		КонецЕсли;
	//КонецЕсли;	
	
	
КонецФункции

Процедура ОбработкаПроведения(Отказ)
	ОшибкаПриПроверке = Ложь;
	Если Контрагент = "" Тогда
		Сообщить("не указан контрагент !!!");
		ОшибкаПриПроверке = Истина;
	КонецЕсли;
	Если ВидДвижения = "" Тогда    
		Сообщить("не указан вид движения !!!");
		ОшибкаПриПроверке = Истина;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Организация) Тогда    
		Сообщить("не указана Организация !!!");
		ОшибкаПриПроверке = Истина;
	КонецЕсли;	
	//проверка дублей строк
	//ТаблЧасть = Новый ТаблицаЗначений;
	//ТаблЧасть = ЭтотОбъект.Проводки.Выгрузить();
	//КоличествоСтрок = ТаблЧасть.Количество();
	//ТаблЧасть.Свернуть("СчДт1,СубконтоДт1_1,СубконтоДт2_1,СубконтоДт3_1,СчКт1,СубконтоКт1_1,СубконтоКт2_1,СубконтоКт3_1,"
	//+"СчДт2,СубконтоДт1_2,СубконтоДт2_2,СубконтоДт3_2,СчКт2,СубконтоКт1_2,СубконтоКт2_2,СубконтоКт3_2,"
	//+"СчДт3,СубконтоДт1_3,СубконтоДт2_3,СубконтоДт3_3,СчКт3,СубконтоКт1_3,СубконтоКт2_3,СубконтоКт3_3","КолВо");
	//Если КоличествоСтрок <> ТаблЧасть.Количество() Тогда
	//	Сообщить("Обнаружены строки с одинаковой аналитикой!!!");
	//	ОшибкаПриПроверке = Истина;
	//КонецЕсли;	
	//\\Конец проверки дублей строк
	Если ОшибкаПриПроверке Тогда
		отказ = истина;
		Возврат;
	КонецЕсли;	

	НомерСтроки = 0;	
	ТипРеквизита = Тип("Неопределено");	
	Для Сч = 0 По ЭтотОбъект.Проводки.Количество()-1 Цикл 
		НомерСтроки = НомерСтроки + 1;
		ТабЗнач = ЭтотОбъект.Проводки.Получить(НомерСтроки-1);
		Если Не ЗначениеЗаполнено(ТабЗнач.ВидОперации) Тогда
			Сообщить("в строке № "+НомерСтроки+" не указан Вид Операции!!!");
			ОшибкаПриПроверке = Истина;
		КонецЕсли;	
		Если Не ЗначениеЗаполнено(ТабЗнач.ВидИмущества) Тогда
			Сообщить("в строке № "+НомерСтроки+" не указан Вид Имущества!!!");
			ОшибкаПриПроверке = Истина;
		КонецЕсли;					
		Если Не ЗначениеЗаполнено(ТабЗнач.КолВо) Тогда
			Сообщить("в строке № "+НомерСтроки+" не указано кол-во!!!");
			ОшибкаПриПроверке=Истина;
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт1_1) <> ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт1_1) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт1!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт2_1)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт2_1) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт2!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт3_1)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт3_1) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт3!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт1_1)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт1_1) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт1!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт2_1)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт2_1) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт2!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт3_1)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт3_1) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт3!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт1_2)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт1_2) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт1 2 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт2_2)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт2_2) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт2 2 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт3_2)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт3_2) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт3 2 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт1_2)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт1_2) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт1 2 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт2_2)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт2_2) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт2 2 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт3_2)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт3_2) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт3 2 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт1_3)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт1_3) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт1 3 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт2_3)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт2_3) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт2 3 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоДт3_3)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоДт3_3) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоДт3 3 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		
		Если ТипЗнч(ТабЗнач.СубконтоКт1_3)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт1_3) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт1 3 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт2_3)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт2_3) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт2 3 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		Если ТипЗнч(ТабЗнач.СубконтоКт3_3)<>ТипРеквизита Тогда
			Если Не ЗначениеЗаполнено(ТабЗнач.СубконтоКт3_3) Тогда
				Сообщить("в строке № "+НомерСтроки+" не выбрано значение субконто СубконтоКт3 3 корреспондеции!!!");
				ОшибкаПриПроверке=Истина;
			КонецЕсли;	
		КонецЕсли;	
		
		Если ОшибкаПриПроверке Тогда
			отказ = истина;
			Возврат;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ТабЗнач.СчДт1) или ЗначениеЗаполнено(ТабЗнач.СчКт1) Тогда
			//		Движение = Движения.ЗабалансовыйУчет.Добавить();
			//		Движение.ВидДвижения = ВидДвиженияБухгалтерии.Дебет;
			//		Движение.Период = Дата;
			//		Движение.Счет = Реквизит1;		
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			//АБС ВСТАВКА 75699
			Движение.Период = Дата;
			//АБС ВСТАВКА 75699 КОНЕЦ
			Если Не ЗначениеЗаполнено(ТабЗнач.СчДт1)=0 Тогда		
				
				Движение.Период = Дата;		
				Движение.СчетДт = ТабЗнач.СчДт1;
				Движение.КоличествоДт = ТабЗнач.КолВо;
				Для й = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[й-1].ВидСубконто] = ТабЗнач["СубконтоДт"+й+"_1"];
				КонецЦикла;
			КонецЕсли;		
			Если Не ЗначениеЗаполнено(ТабЗнач.СчКт1)=0 Тогда
				Движение.СчетКт = ТабЗнач.СчКт1;
				Для й = 1 по Движение.СчетКт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[й-1].ВидСубконто] = ТабЗнач["СубконтоКт"+й+"_1"];
				КонецЦикла;	
				Движение.КоличествоКт = ТабЗнач.КолВо;
			КонецЕсли;
			
			//Движение.КоличествоДт = ТабЗнач.КолВо;
			Если СокрЛП(ВидДвижения)="Поступление имущества" Тогда
				Движение.Сумма = ТабЗнач.Сумма;
			Иначе	                                    
				Движение.Сумма = РасчетСуммы(ТабЗнач.КолВо,ТабЗнач.СчКт1,
												ТабЗнач.СубконтоКт1_1,
												ТабЗнач.СубконтоКт2_1,
												ТабЗнач.СубконтоКт3_1);
			КонецЕсли;	                                                                          
		    Сумма1 = Движение.Сумма;
			Движение.Организация = Организация;
			Движение.Содержание = СокрЛП(ТабЗнач.ВидОперации)+", "+СокрЛП(ТабЗнач.ВидИмущества);
//			Движение.НомерЖурнала = "ЗУ";
		КонецЕсли;
		
		Если (Не ЗначениеЗаполнено(ТабЗнач.СчДт2)=0) или (Не ЗначениеЗаполнено(ТабЗнач.СчКт2)=0) Тогда
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			Движение.Период = Дата;		
			Если Не ЗначениеЗаполнено(ТабЗнач.СчДт2)=0 Тогда
				Движение.СчетДт = ТабЗнач.СчДт2;
				Для й = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[й-1].ВидСубконто] = ТабЗнач["СубконтоДт"+й+"_2"];
				КонецЦикла;
				Движение.КоличествоДт = ТабЗнач.КолВо;
			КонецЕсли;	
			Если Не ЗначениеЗаполнено(ТабЗнач.СчКт2)=0 Тогда
				Движение.СчетКт = ТабЗнач.СчКт2;
				Для й = 1 по Движение.СчетКт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[й-1].ВидСубконто] = ТабЗнач["СубконтоКт"+й+"_2"];
				КонецЦикла;
				Движение.КоличествоКт = ТабЗнач.КолВо;
			КонецЕсли;	
			
			//Движение.Количество = ТабЗнач.КолВо;
			Если ТабЗнач.СчКт2.Код = "003.7.3" Тогда
				Движение.Сумма = Сумма1;
			Иначе	
				Движение.Сумма = РасчетСуммы(ТабЗнач.КолВо,ТабЗнач.СчКт2,
												ТабЗнач.СубконтоКт1_2,
												ТабЗнач.СубконтоКт2_2,
												ТабЗнач.СубконтоКт3_2);
			КонецЕсли; 
			Движение.Содержание = СокрЛП(ТабЗнач.ВидОперации)+", "+СокрЛП(ТабЗнач.ВидИмущества);
			Движение.Организация = Организация;
		//	Движение.НомерЖурнала = "ЗУ";
		КонецЕсли;
		
		Если (Не ЗначениеЗаполнено(ТабЗнач.СчДт3)=0) или (Не ЗначениеЗаполнено(ТабЗнач.СчКт3)=0) Тогда
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			Движение.Период = Дата;
			Если Не ЗначениеЗаполнено(ТабЗнач.СчДт3)=0 Тогда
				Движение.СчетДт = ТабЗнач.СчДт3;
				Для й = 1 по Движение.СчетДт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоДт[Движение.СчетДт.ВидыСубконто[й-1].ВидСубконто] = ТабЗнач["СубконтоДт"+й+"_3"];
				КонецЦикла;
				Движение.КоличествоДт = ТабЗнач.КолВо;
			КонецЕсли;	
			Если Не ЗначениеЗаполнено(ТабЗнач.СчКт3)=0 Тогда
				Движение.СчетКт = ТабЗнач.СчКт3;
				Для й = 1 по Движение.СчетКт.ВидыСубконто.Количество() Цикл
					Движение.СубконтоКт[Движение.СчетКт.ВидыСубконто[й-1].ВидСубконто] = ТабЗнач["СубконтоКт"+й+"_3"];
				КонецЦикла;
                Движение.КоличествоКт = ТабЗнач.КолВо;
			КонецЕсли;	
			//Движение.Количество = ТабЗнач.КолВо;
			Движение.Сумма = РасчетСуммы(ТабЗнач.КолВо,ТабЗнач.СчКт3,
												ТабЗнач.СубконтоКт1_3,
												ТабЗнач.СубконтоКт2_3,
												ТабЗнач.СубконтоКт3_3);
			Движение.Содержание = СокрЛП(ТабЗнач.ВидОперации)+", "+СокрЛП(ТабЗнач.ВидИмущества);
			Движение.Организация = Организация;
		//	Движение.НомерЖурнала = "ЗУ";
		КонецЕсли;	
	КонецЦикла;	
	//Если ОшибкаПриПроверке=1 Тогда
	//	Операция.Содержание=СокрЛП(Контрагент)+", "+СокрЛП(ВидДвижения);
	//	Операция.Записать();
	//КонецЕсли;
КонецПроцедуры 


Функция ПечатьМ4()
	ТабДок = Новый ТабличныйДокумент();
	Макет = ПолучитьМакет("М4");
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	
	СекцияШапка.Параметры.Номер                    = СокрЛП(Номер);
	СекцияШапка.Параметры.ДатаСоставления          = Формат(Дата, "ДФ=""дд.ММ.гггг""");
	СекцияШапка.Параметры.Организация              = "Организация:  " + Организация;
	СекцияШапка.Параметры.КодОКПО                  = Организация.КодПоОКПО;
	СекцияШапка.Параметры.Склад	         	       = Реквизит1;
	СекцияШапка.Параметры.СтруктурноеПодразделение = "Структурное подразделение:  " + Реквизит3;
	СекцияШапка.Параметры.Поставщик                = Реквизит2;
	СекцияШапка.Параметры.КодПоставщика            = Реквизит2.Код;
	ТабДок.Вывести(СекцияШапка);
	
	// формирование строк
	СекцияСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для НомерСтроки = 1 По ЭтотОбъект.Проводки.Количество() Цикл 
		
		ТабЗнач = ЭтотОбъект.Проводки.Получить(НомерСтроки-1);
		ТипРеквизита = Тип("СправочникСсылка.Номенклатура");
		Номенклатура="";
		
		Если ТипЗнч(ТабЗнач.СубконтоДт1_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоДт1_1;                             		
		ИначеЕсли ТипЗнч(ТабЗнач.СубконтоДт2_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоДт2_1;		 		
		ИначеЕсли  ТипЗнч(ТабЗнач.СубконтоДт3_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоДт3_1;
		КонецЕсли;	
		
		Если Номенклатура <> "" Тогда	
			
			СекцияСтрока.Параметры.Материал            	= Номенклатура;
			СекцияСтрока.Параметры.НоменклатурныйНомер 	= Номенклатура.Код;
			СекцияСтрока.Параметры.КодЕдиницыИзмерения	= Номенклатура.ЕдиницаИзмеренияМест.Код;
			СекцияСтрока.Параметры.ЕдиницаИзмерения    	= Номенклатура.ЕдиницаИзмеренияМест;
			СекцияСтрока.Параметры.Принято             	= СокрЛ(Формат(ТабЗнач.Колво, "ЧЦ=15; ЧДЦ=2"));
			СекцияСтрока.Параметры.Цена				   	= СокрЛ(Формат((?(ТабЗнач.Колво = 0, 0, ТабЗнач.Сумма/ТабЗнач.Колво)), "ЧЦ=15; ЧДЦ=2"));
			СекцияСтрока.Параметры.Сумма 				= СокрЛ(Формат(ТабЗнач.Сумма, "ЧЦ=15; ЧДЦ=2"));
			СекцияСтрока.Параметры.НДС   				= СокрЛ(Формат(0, "ЧЦ=15; ЧДЦ=2"));
			СекцияСтрока.Параметры.Всего 				= СокрЛ(Формат(ТабЗнач.Сумма, "ЧЦ=15; ЧДЦ=2"));
			ТабДок.Вывести(СекцияСтрока);
			Состояние("Выведено строк: " + НомерСтроки);
			
		Иначе
			Сообщить("в строке "+НомерСтроки+" не найдено оборудования и материала");
		КонецЕсли;
	КонецЦикла;
	
	// формирование итогов	
	СекцияИтоги = Макет.ПолучитьОбласть("Итого");
	ТабЗнач = ЭтотОбъект.Проводки;
	
	СекцияИтоги.Параметры.ИтогКоличество = СокрЛ(Формат(ТабЗнач.Итог("Колво"), "ЧЦ=15; ЧДЦ=3"));
	СекцияИтоги.Параметры.ИтогСумма 	 = СокрЛ(Формат(ТабЗнач.Итог("Сумма"), "ЧЦ=15; ЧДЦ=2"));
	СекцияИтоги.Параметры.ИтогНДС     	 = СокрЛ(Формат(0, "ЧЦ=15; ЧДЦ=2"));
	СекцияИтоги.Параметры.ИтогВсего    	 = СокрЛ(Формат(ТабЗнач.Итог("Сумма"), "ЧЦ=15; ЧДЦ=2"));
	ТабДок.Вывести(СекцияИтоги);
	
	// формирование доверенности
	
	СекцияДоверенности = Макет.ПолучитьОбласть("СтрокаДоверенности");

	СекцияДоверенности.Параметры.ПринятоОт 		= "Принято от: " + Реквизит2;
	Попытка
		СекцияДоверенности.Параметры.Через			= "Через: " + Реквизит4.ФизЛицо;
	Исключение
	КонецПопытки;
	Попытка
		СекцияДоверенности.Параметры.ПоДоверенности = "По доверенности: Доверенность " + Реквизит4.Номер + "  " + 
		СокрЛ(Формат(Реквизит4.Дата, "ДФ=""дд.ММ.гггг"""));
	Исключение
	КонецПопытки;
													
	ТабДок.Вывести(СекцияДоверенности);

	// формирование подвала	
	СекцияПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ФИОКладовщика 		="";
	ДолжностьКладовщика = "";	
	Принял="Принял ";
	Кладовщик = РегистрыСведений.ОтветственныеЛица.СрезПоследних(Дата,Новый Структура("СтруктурнаяЕдиница",Реквизит1));
	Если Кладовщик.Количество()>0 Тогда
		Кладовщик = ОбщегоНазначения.ДанныеФизЛица(Реквизит1, Кладовщик[0].ФизическоеЛицо, Дата);
		ДолжностьКладовщика = Кладовщик.Должность;
		ФИОКладовщика = Кладовщик.Представление;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФИОКладовщика) Тогда
		Если ЗначениеЗаполнено(ДолжностьКладовщика) Тогда
			СекцияПодвал.Параметры.Принял = Принял + СокрЛП(ДолжностьКладовщика);
		Иначе
			СекцияПодвал.Параметры.Принял = Принял;
		КонецЕсли;
		СекцияПодвал.Параметры.ИмяПринял="  "+СокрЛП(ФИОКладовщика);
	Иначе 
		СекцияПодвал.Параметры.Принял = Принял;
	КонецЕсли;
	
	ТабДок.Вывести(СекцияПодвал);
	
	// вывод результирующей таблицы на экран
 
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
 	Возврат ТабДок;	

КонецФункции	

Функция ПечатьМ11()
	
	ТабДок = Новый ТабличныйДокумент();
	Макет = ПолучитьМакет("М11");
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	
	СекцияШапка.Параметры.Номер                    	= СокрЛП(Номер);
	СекцияШапка.Параметры.Организация              	= "Организация:  " + Организация;
	СекцияШапка.Параметры.КодОКПО                  	= Организация.КодПоОКПО;
	СекцияШапка.Параметры.ДатаСоставления          	= Формат(Дата, "ДФ=""дд.ММ.гггг""");
	СекцияШапка.Параметры.ПодразделениеОтправитель	= Реквизит1;
	СекцияШапка.Параметры.ПодразделениеПолучатель 	= Реквизит2;
	СекцияШапка.Параметры.КорСчет 					= "";
	СекцияШапка.Параметры.ЧерезКого					= Реквизит3;
	СекцияШапка.Параметры.Затребовал 				= Реквизит4;
	СекцияШапка.Параметры.Разрешил 					= Реквизит5;
	//СекцияШапка.Параметры.Цель						= Комментарий;                          
	ТабДок.Вывести(СекцияШапка);
	
	
	СекцияСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для НомерСтроки = 1 По ЭтотОбъект.Проводки.Количество() Цикл 
		
		ТабЗнач = ЭтотОбъект.Проводки.Получить(НомерСтроки-1);
		ТипРеквизита = Тип("СправочникСсылка.Номенклатура");
		Номенклатура="";
		
		Если ТипЗнч(ТабЗнач.СубконтоКт1_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт1_1;                             		
		ИначеЕсли ТипЗнч(ТабЗнач.СубконтоКт2_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт2_1;		 		
		ИначеЕсли  ТипЗнч(ТабЗнач.СубконтоКт3_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт3_1;
		КонецЕсли;	
		
		Если Номенклатура <> "" Тогда	
			
			СекцияСтрока.Параметры.СубСчет       	 	= ТабЗнач.СчКт1;
			СекцияСтрока.Параметры.Номенклатура        	= Номенклатура;
			СекцияСтрока.Параметры.НоменклатурныйНомер 	= Номенклатура.Код;
			СекцияСтрока.Параметры.КодЕдиницыИзмерения	= Номенклатура.ЕдиницаИзмеренияМест.Код;
			СекцияСтрока.Параметры.ЕдиницаИзмерения    	= Номенклатура.ЕдиницаИзмеренияМест;
			СекцияСтрока.Параметры.КоличествоЗатребовано= СокрЛ(Формат(ТабЗнач.Колво, "ЧЦ=15; ЧДЦ=3"));
			СекцияСтрока.Параметры.КоличествоОтпущено   = СокрЛ(Формат(ТабЗнач.Колво, "ЧЦ=15; ЧДЦ=3"));
			СекцияСтрока.Параметры.МатериалЦенаБезНДС  	= СокрЛ(Формат((?(ТабЗнач.Колво = 0, 0, ТабЗнач.Сумма/ТабЗнач.Колво)), "ЧЦ=15; ЧДЦ=3"));
			СекцияСтрока.Параметры.МатериалСумма		= СокрЛ(Формат(ТабЗнач.Сумма, "ЧЦ=15; ЧДЦ=2"));
			ТабДок.Вывести(СекцияСтрока);
			Состояние("Выведено строк: " + НомерСтроки);
			
		Иначе
			Сообщить("в строке "+НомерСтроки+" не найдено оборудования и материала");
		КонецЕсли;
	КонецЦикла;
	
	СекцияПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ФИОКладовщика 		="";
	ДолжностьКладовщика = "";	
	Отпустил="Отпустил    "; 	
	Кладовщик = РегистрыСведений.ОтветственныеЛица.СрезПоследних(Дата,Новый Структура("СтруктурнаяЕдиница",Реквизит1));
	Если Кладовщик.Количество()>0 Тогда
		Кладовщик = ОбщегоНазначения.ДанныеФизЛица(Реквизит1, Кладовщик[0].ФизическоеЛицо, Дата);
		ДолжностьКладовщика = Кладовщик.Должность;
		ФИОКладовщика = Кладовщик.Представление;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФИОКладовщика) Тогда
		Если ЗначениеЗаполнено(ДолжностьКладовщика) Тогда
			СекцияПодвал.Параметры.Отпустил = Отпустил + СокрЛП(ДолжностьКладовщика);
		Иначе
			СекцияПодвал.Параметры.Отпустил = Отпустил;
		КонецЕсли;
		СекцияПодвал.Параметры.ИмяОтпустил  = "  " + СокрЛП(ФИОКладовщика);
	КонецЕсли;
	
	Получил="Получил     "; 
	ФИОКладовщика 		="";
	ДолжностьКладовщика = "";		
	Кладовщик = РегистрыСведений.ОтветственныеЛица.СрезПоследних(Дата,Новый Структура("СтруктурнаяЕдиница",Реквизит2));
	Если Кладовщик.Количество()>0 Тогда
		Кладовщик = ОбщегоНазначения.ДанныеФизЛица(Реквизит2, Кладовщик[0].ФизическоеЛицо, Дата);
		ДолжностьКладовщика = Кладовщик.Должность;
		ФИОКладовщика = Кладовщик.Представление;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФИОКладовщика) Тогда
		Если ЗначениеЗаполнено(ДолжностьКладовщика) Тогда
			СекцияПодвал.Параметры.Получил = Получил + СокрЛП(ДолжностьКладовщика);
		Иначе
			СекцияПодвал.Параметры.Получил = Получил;
		КонецЕсли;
		СекцияПодвал.Параметры.ИмяПолучил  = "  " + СокрЛП(ФИОКладовщика);
	Иначе 
		СекцияПодвал.Параметры.Получил = Получил;
	КонецЕсли;
		
	ТабДок.Вывести(СекцияПодвал);
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;	
	
КонецФункции

Функция  ПечатьМ15()
	
	ТабДок = Новый ТабличныйДокумент();
	Макет = ПолучитьМакет("М15");
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	
	СекцияШапка.Параметры.Номер                    	= СокрЛП(Номер);
	СекцияШапка.Параметры.Организация              	= Организация;
	СекцияШапка.Параметры.КодОКПО                  	= Организация.КодПоОКПО;
	СекцияШапка.Параметры.ДатаСоставления          	= Формат(Дата, "ДФ=""дд.ММ.гггг""");
	СекцияШапка.Параметры.ПодразделениеОтправитель	= Реквизит1;
	СекцияШапка.Параметры.ПодразделениеПолучатель 	= Реквизит2;
	СекцияШапка.Параметры.ЦФО 						= Реквизит5;
	СекцияШапка.Параметры.Кому 						= Реквизит4;
	СекцияШапка.Параметры.ЧерезКого					= Реквизит3;
	//СекцияШапка.Параметры.Цель						= Комментарий;                          
	ТабДок.Вывести(СекцияШапка);
	
 	НомерПовторяемойСтроки = 15;
	СекцияСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для НомерСтроки = 1 По ЭтотОбъект.Проводки.Количество() Цикл 
		
		ТабЗнач = ЭтотОбъект.Проводки.Получить(НомерСтроки-1);
		ТипРеквизита = Тип("СправочникСсылка.Номенклатура");
		Номенклатура="";
		
		Если ТипЗнч(ТабЗнач.СубконтоКт1_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт1_1;                             		
		ИначеЕсли ТипЗнч(ТабЗнач.СубконтоКт2_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт2_1;		 		
		ИначеЕсли  ТипЗнч(ТабЗнач.СубконтоКт3_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт3_1;
		КонецЕсли;	
		
		Если Номенклатура <> "" Тогда	
			             
			СекцияСтрока.Параметры.Субсчет       	 	= ТабЗнач.СчКт1;
			СекцияСтрока.Параметры.Номенклатура        	= Номенклатура;
			СекцияСтрока.Параметры.НоменклатурныйНомер 	= Номенклатура.Код;
			СекцияСтрока.Параметры.КодЕдиницыИзмерения	= Номенклатура.ЕдиницаИзмеренияМест.Код;
			СекцияСтрока.Параметры.ЕдиницаИзмерения    	= Номенклатура.ЕдиницаИзмеренияМест;
			СекцияСтрока.Параметры.КоличествоОтпустить	= СокрЛ(Формат(ТабЗнач.Колво, "ЧЦ=15; ЧДЦ=3"));
			СекцияСтрока.Параметры.КоличествоОтпущено   = СокрЛ(Формат(ТабЗнач.Колво, "ЧЦ=15; ЧДЦ=3"));
			СекцияСтрока.Параметры.МатериалЦенаБезНДС  	= СокрЛ(Формат((?(ТабЗнач.Колво = 0, 0, ТабЗнач.Сумма/ТабЗнач.Колво)), "ЧЦ=15; ЧДЦ=3"));
			СекцияСтрока.Параметры.МатериалСумма		= СокрЛ(Формат(ТабЗнач.Сумма, "ЧЦ=15; ЧДЦ=2"));
			СекцияСтрока.Параметры.СуммаНДС             = СокрЛ(Формат(0, "ЧЦ=15; ЧДЦ=3"));    
			СекцияСтрока.Параметры.ПечВсего             = СокрЛ(Формат(ТабЗнач.Сумма, "ЧЦ=15; ЧДЦ=2"));
			ТабДок.Вывести(СекцияСтрока);
			Состояние("Выведено строк: " + НомерСтроки);
			
		Иначе
			Сообщить("в строке "+НомерСтроки+" не найдено оборудования и материала");
		КонецЕсли;
	КонецЦикла;
	
	
	СекцияПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабЗнач = ЭтотОбъект.Проводки;
	                                                  
	СекцияПодвал.Параметры.ВсегоОтпущено = "Всего отпущено " + ТабЗнач.Количество() + " наименований";
	СекцияПодвал.Параметры.НаСумму		 = "на сумму " + СокрЛ(Формат(ТабЗнач.Итог("Сумма"), "ЧЦ=15; ЧДЦ=2")) +
	                       					" , в том числе сумма НДС " + СокрЛ(Формат(0, "ЧЦ=15; ЧДЦ=2"));
											
////////////////////Разрешил	
	Разрешил="Разрешил    ";
//	Если ЗначениеЗаполнено(Реквизит6) Тогда
//		
//		НовыйОтбор = РегистрыСведений.ОтветственныеЛица.Получить();
//		НовыйОтбор.Свернуть("СтруктурнаяЕдиница, ФизическоеЛицо");
//		
//		СтруктураПоиска = Новый Структура("ФизическоеЛицо", Реквизит6);
//		СписокСтрок = НовыйОтбор.НайтиСтроки(СтруктураПоиска);		
//		Склад = СписокСтрок[0].СтруктурнаяЕдиница;
//	
//		Кладовщик = ДанныеФизЛица(Склад, Реквизит6, Дата);
//		ДолжностьКладовщика = Кладовщик.Должность;
//		ФИОКладовщика = Кладовщик.Представление;
		//Если ЗначениеЗаполнено(ФИОКладовщика) Тогда
//			Если ЗначениеЗаполнено(ДолжностьКладовщика) Тогда
//				СекцияПодвал.Параметры.Разрешил = Разрешил + СокрЛП(ДолжностьКладовщика);
//			Иначе 
//				//			КонецЕсли;		
			СекцияПодвал.Параметры.ИмяРазрешил = ОбщегоНазначения.ФамилияИнициалыФизЛица(Реквизит6);
		//Иначе 
			СекцияПодвал.Параметры.Разрешил = Разрешил;
		//КонецЕсли;
	//КонецЕсли; 
	
///////////////ГлБух
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Организация, Дата,);
	СекцияПодвал.Параметры.ГлБух = "/ " + Руководители.ГлавныйБухгалтер + " /";
	
/////////////////////Отпустил
	Отпустил="Отпустил     "; 	
	ФИОКладовщика 		="";
	ДолжностьКладовщика = "";	
	Кладовщик = РегистрыСведений.ОтветственныеЛица.СрезПоследних(Дата,Новый Структура("СтруктурнаяЕдиница",Реквизит1));
	Если Кладовщик.Количество()>0 Тогда
		Кладовщик = ОбщегоНазначения.ДанныеФизЛица(Реквизит1, Кладовщик[0].ФизическоеЛицо, Дата);
		ДолжностьКладовщика = Кладовщик.Должность;
		ФИОКладовщика = Кладовщик.Представление;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФИОКладовщика) Тогда
		Если ЗначениеЗаполнено(ДолжностьКладовщика) Тогда
			СекцияПодвал.Параметры.Отпустил = Отпустил + СокрЛП(ДолжностьКладовщика);
		Иначе
			СекцияПодвал.Параметры.Отпустил = Отпустил;
		КонецЕсли;
		СекцияПодвал.Параметры.ИмяОтпустил  = "  " + СокрЛП(ФИОКладовщика);
	Иначе 
		СекцияПодвал.Параметры.Отпустил = Отпустил;	
	КонецЕсли;	
	
//////////////////////Получил
	Получил="Получил     "; 
	ФИОКладовщика 		="";
	ДолжностьКладовщика = "";
	Кладовщик = РегистрыСведений.ОтветственныеЛица.СрезПоследних(Дата,Новый Структура("СтруктурнаяЕдиница",Реквизит2));
	Если Кладовщик.Количество()>0 Тогда
		Кладовщик = ОбщегоНазначения.ДанныеФизЛица(Реквизит2, Кладовщик[0].ФизическоеЛицо, Дата);
		ДолжностьКладовщика = Кладовщик.Должность;
		ФИОКладовщика = Кладовщик.Представление;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ФИОКладовщика) Тогда
		Если ЗначениеЗаполнено(ДолжностьКладовщика) Тогда
			СекцияПодвал.Параметры.Получил = Получил + СокрЛП(ДолжностьКладовщика);
		Иначе
			СекцияПодвал.Параметры.Получил = Получил;
		КонецЕсли;
		СекцияПодвал.Параметры.ИмяПолучил  = "  " + СокрЛП(ФИОКладовщика);
	Иначе 
		СекцияПодвал.Параметры.Получил = Получил;
	КонецЕсли;
	
	
	ТабДок.Вывести(СекцияПодвал);

	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;		
										
КонецФункции

Функция ПечатьОС15()
	
	ТабДок = Новый ТабличныйДокумент();
	Макет = ПолучитьМакет("ОС15");
	
	СекцияШапка = Макет.ПолучитьОбласть("Шапка");
	
	СекцияШапка.Параметры.Номер                    	= СокрЛП(Номер);
	СекцияШапка.Параметры.Организация              	= Организация;
	СекцияШапка.Параметры.ДатаСоставления          	= Формат(Дата, "ДФ=""дд.ММ.гггг""");
	
	ТабДок.Вывести(СекцияШапка);
	
	Если Не ЭтотОбъект.Проведен Тогда
		Сообщить("Для непроведенного документа графа ""Стоимость"" не заполняются.");
	ИначеЕсли ЭтотОбъект.Модифицированность() Тогда
		Сообщить("Для печати документ необходимо перепровести.");
		Возврат "";
	КонецЕсли;   
	
 	НомерПовторяемойСтроки = 15;
	СекцияСтрока = Макет.ПолучитьОбласть("Строка");
	
	Для НомерСтроки = 1 По ЭтотОбъект.Проводки.Количество() Цикл 
		
		ТабЗнач = ЭтотОбъект.Проводки.Получить(НомерСтроки-1);
		ТипРеквизита = Тип("СправочникСсылка.Номенклатура");
		Номенклатура="";
		
		Если ТипЗнч(ТабЗнач.СубконтоКт1_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт1_1;                             		
		ИначеЕсли ТипЗнч(ТабЗнач.СубконтоКт2_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт2_1;		 		
		ИначеЕсли  ТипЗнч(ТабЗнач.СубконтоКт3_1) = ТипРеквизита Тогда
			Номенклатура = ТабЗнач.СубконтоКт3_1;
		КонецЕсли;	
		
		Если Номенклатура <> "" Тогда	
			             
			СекцияСтрока.Параметры.Номенклатура	= Номенклатура;
			Если ЭтотОбъект.Проведен Тогда
				СекцияСтрока.Параметры.Кол		= СокрЛ(Формат(ТабЗнач.Колво, "ЧЦ=10; ЧДЦ=2"));
			КонецЕсли;
			СекцияСтрока.Параметры.ЦенаЗаЕдиницу= СокрЛ(Формат((?(ТабЗнач.Колво = 0, 0, ТабЗнач.Сумма/ТабЗнач.Колво)), "ЧЦ=10; ЧДЦ=2"));
			СекцияСтрока.Параметры.Всего		= СокрЛ(Формат(ТабЗнач.Сумма, "ЧЦ=10; ЧДЦ=2"));
			ТабДок.Вывести(СекцияСтрока);
			Состояние("Выведено строк: " + НомерСтроки);
		Иначе
			Сообщить("в строке "+НомерСтроки+" не найдено оборудования и материала");
		КонецЕсли;
	КонецЦикла;
	
	ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
	СекцияОборот = Макет.ПолучитьОбласть("Оборот");
	ТабДок.Вывести(СекцияОборот);
	
	
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.ТолькоПросмотр = Истина;
	Возврат ТабДок;	

КонецФункции


// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура(НазваниеМакета,НазваниеМакета);

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
	// экран или принтер, а также распечатать необходмое количество копий.
	//
	//  Название макета печати передается в качестве параметра,
	// по переданному названию находим имя макета в соответствии.
	//
	// Параметры:
	//  НазваниеМакета - строка, название макета.
	//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю("Документ можно распечатать только после его записи");
		Возврат;
		КонецЕсли;
	
	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "М4" Тогда 
		ТабДокумент = ПечатьМ4();
	ИначеЕсли ИмяМакета = "М11" тогда
		ТабДокумент = ПечатьМ11();
	ИначеЕсли  ИмяМакета = "М15" тогда
		ТабДокумент = ПечатьМ15();
	ИначеЕсли ИмяМакета = "ОС15" тогда
		ТабДокумент = ПечатьОС15();
	КонецЕсли;
	
	
    УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);
КонецПроцедуры // Печать

Процедура ОбработкаЗаполнения(Основание)
	//АБС ОБНОВЛЕНИЕ НА 8.2
	Если (Основание <> Неопределено) И (Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Основание))) Тогда
	   ДокументОснование = Основание;
	   Организация = Основание.Организация;
   КонецЕсли;
   СуммаДокумента = Проводки.Итог("Сумма");  //АБС 201111
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	СуммаДокумента = Проводки.Итог("Сумма");  //АБС 201111
КонецПроцедуры
