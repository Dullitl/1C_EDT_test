Перем СписокКолонок Экспорт;
Перем мТЧ_Бюджет Экспорт;
Перем мТЧ_РедактированиеСтрокиБюджета Экспорт;
Перем мТЧ_ОтредактированныеСтрокиБюджета Экспорт;

// АБС ВСТАВКА Согласование
Процедура ЗаписатьНовыйСтатус(НовыйСтатус, Комментарий = Неопределено) Экспорт
	
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	
	НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовВводаБюджета.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ВводБюджета.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();

	Запись.ВводБюджета				= Ссылка;
	Запись.Пользователь 			= ТекПользователь;	
	Запись.СтатусВводаБюджета		= НовыйСтатус;
	
	Запись.Комментарий 				= Комментарий;
	
	ОтветственныйСотрудник = абс_БизнесПроцессы.ПолучитьСотрудникаПользователя(ТекПользователь);
	
	//Если НЕ ОтветственныйСотрудник = Неопределено Тогда
	//	Запись.ДолжностьОтветственного	= ОтветственныйСотрудник.Должность;
	//КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция НайтиБПСогласование() Экспорт
	
	Возврат абс_БизнесПроцессы.НайтиБизнесПроцессПоВводуБюджета(Ссылка, "абсСогласованиеБюджета");	
	
КонецФункции

Функция ПолучитьЗадачуПоВводБюджета() Экспорт
	
	БП = НайтиБПСогласование();
	
	Если БП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СпТочек = Новый Массив;
	
	ТекСтатус = Ссылка.Статус;
	
	Если ТекСтатус = Перечисления.абс_СтатусыБюджетов.Подготовка Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеОтказ);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.СогласованиеЦФО Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);
		//АБС 3062	
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеПроверкаДирБА);

        //\\АБС 3062
	
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.ПроверкаДирБА ТОгда
	  //АБС 3062	
		
		//СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		//\\АБС 3062
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.СогласованиеЦФУ Тогда
		//АБС 3062
		//СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеПроверкаДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		//\\АБС 3062

		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.СогласованиеДирБА Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.СогласованиеДК Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);

	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.СогласованиеДЭИ Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);

		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.Отказ Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеПроверкаДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДК);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.Уточнение Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеПроверкаДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДК);		
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.Утвержден Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДК);	
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУтверждениеПВП);   //АБС Коломиец 19255
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.Отмена Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеПроверкаДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДК);		
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыБюджетов.СогласованиеПВП Тогда   //АБС Коломиец 19255+
		
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДирБА);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеСогласованиеДК);	//АБС Коломиец 19255-
		
	КонецЕсли;	
			
	Возврат абс_БизнесПроцессы.НайтиЗадачуЗЗ(БП, СпТочек ,, Ложь);

КонецФункции

Функция ПолучитьЗадачуУточнения() Экспорт
	БП = НайтиБПСогласование();
	
	Если БП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СпТочек = Новый Массив;
	
	ТекСтатус = Ссылка.Статус;
			
	СпТочек.Добавить(БизнесПроцессы.абсСогласованиеБюджета.ТочкиМаршрута.ДействиеУточнение);
			
	Возврат абс_БизнесПроцессы.НайтиЗадачуЗЗ(БП, СпТочек ,, Ложь);	
	
КонецФункции
// АБС ВСТАВКА Согласование КОНЕЦ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.СписокРедактируемыхАналитик = Новый ХранилищеЗначения(СписокКолонок);
	//Если Модифицированность() Тогда
	//	Если Год <> Константы.абс_РазрешенныйДляРедактированияГодБюджета.Получить() Тогда
	//		сообщить("Бюджет "+Год+" года закрыт для редактирования");
	//		Отказ = Истина;
	//	КонецЕсли;
	//	
	//КонецЕсли;
	
	Если Статус = Перечисления.абс_СтатусыБюджетов.Отмена И НЕ Статус = Ссылка.Статус Тогда		
		СтатусОтмены = Ссылка.Статус;
		ОтветственныйОтмены = глЗначениеПеременной("глТекущийПользователь");		
	КонецЕсли;
	
	// АБС ВСТАВКА Фролов 20121026
	Если Не Статус = Перечисления.абс_СтатусыБюджетов.Подготовка И НЕ Статус = Перечисления.абс_СтатусыБюджетов.Отказ Тогда		
		ТекПериод = НачалоГода(Бюджет[0].Период);		
		СтатьиБС = Бюджет.Выгрузить(, "БюджетнаяСтатья");
		СтатьиБС.Свернуть("БюджетнаяСтатья", "");		
		абс_Бюджетирование.ПроверитьСтатьюОборотовПоГодуИспользования(СтатьиБС.ВыгрузитьКолонку("БюджетнаяСтатья"), ТекПериод, Ссылка, Отказ);				
		СпЦФО = Бюджет.Выгрузить(, "ЦФО");
		СпЦФО.Свернуть("ЦФО", "");		
		абс_Бюджетирование.ПроверитьЦФОПоГодуИспользования(СпЦФО.ВыгрузитьКолонку("ЦФО"), ТекПериод, Ссылка, Отказ);			
	КонецЕсли;
	// АБС ВСТАВКА Фролов 20121026 КОНЕЦ
	
КонецПроцедуры

Функция ПолучитьСтруктуруАналитик(СтрокаДокумента)
	
	СтруктураАналитик = Новый Структура;
	
	СтруктураАналитик.Вставить("ПериодМесяц"		, СтрокаДокумента.Период);
	СтруктураАналитик.Вставить("ЦФУ"				, СтрокаДокумента.ЦФУ);
	СтруктураАналитик.Вставить("ЦФО"				, СтрокаДокумента.ЦФО);
	СтруктураАналитик.Вставить("Организация"		, СтрокаДокумента.Организация);
	СтруктураАналитик.Вставить("СтатьяОборотов"		, СтрокаДокумента.БюджетнаяСтатья);
	СтруктураАналитик.Вставить("ТипКонтрагента"		, СтрокаДокумента.ТипКонтрагента);
	СтруктураАналитик.Вставить("ТЭО"				, СтрокаДокумента.ТЭО);
	СтруктураАналитик.Вставить("ТипСети"			, СтрокаДокумента.ТипСети);
	СтруктураАналитик.Вставить("КВ"					, СтрокаДокумента.КВ);
	СтруктураАналитик.Вставить("ТипРасхода"			, СтрокаДокумента.ТипРасхода);
	
	//АБС НАЧАЛО Задача №08759
	СтруктураАналитик.Вставить("Проект"					, СтрокаДокумента.Проект);
	//\\АБС КОНЕЦ Задача №08759
	СтруктураАналитик.Вставить("Проект"					, СтрокаДокумента.Проект);
	//Крамаренко Д.М.
	//НФС 2018
	СтруктураАналитик.Вставить("ОбъектБюджетирования"	, СтрокаДокумента.ОбъектБюджетирования);
	//Крамаренко Д.М.
	//НФС 2018
	
	СтруктураАналитик.Вставить("НачалоПериода",НачалоМесяца(СтруктураАналитик.ПериодМесяц));
	СтруктураАналитик.Вставить("КонецПериода", КонецМесяца (СтруктураАналитик.ПериодМесяц));	
	
	Возврат СтруктураАналитик;
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// регистр ОборотыБюджетов 
	Движения.ОборотыБюджетов.Записывать = Истина;
	Движения.ОборотыБюджетов.Очистить();
	
	//+++ НФС 2018 (Григорьев Д.В.)
	// регистр УстановкаОграниченийПоБюджетам
	//Движения.абс_УстановкаЛимитовПоСтатьям.Записывать = Истина;
	//Движения.абс_УстановкаЛимитовПоСтатьям.Очистить();
	//--- НФС 2018 (Григорьев Д.В.)
	
	// регистр КонтролируемыеЗначенияБюджетов 
	Движения.КонтролируемыеЗначенияБюджетов.Записывать = Истина;
	Движения.КонтролируемыеЗначенияБюджетов.Очистить();

	// АБС ВСТАВКА Фролов 20120130
	Если НЕ Статус = Перечисления.абс_СтатусыБюджетов.Утвержден Тогда
		Возврат;
	КонецЕсли;
	// АБС ВСТАВКА Фролов 20120130 КОНЕЦ
	
	//+++НФС 2018 (Григорьев Д.В.)
	Если ДополнительныеСвойства.Свойство("Начисления") Тогда
		Если ДополнительныеСвойства.Начисления Тогда
			Для Каждого Стр Из БюджетПлан Цикл
				Если НЕ Статус = Перечисления.абс_СтатусыБюджетов.Утвержден Тогда
					Если Стр.СуммаРуб <> 0 Или Стр.СуммаВал <> 0 Тогда
						Движение = Движения.ОборотыБюджетов.Добавить();
						Движение.Период = Стр.Период;
						Движение.Сценарий = СценарийНачисления;
						Движение.ЦФО = Стр.ЦФО;
						Движение.СтатьяОборотов = Стр.БюджетнаяСтатья;
						Движение.Валюта = ВалютаПланирования;
						Движение.абс_ТипКонтрагента = Стр.ТипКонтрагента;
						Движение.абс_ТипСети = Стр.ТипСети;
						Движение.абс_КВ = Стр.КВ;
						Движение.абс_ТЭО = Стр.ТЭО;
						Движение.абс_ЦФУ = Стр.ЦФУ;
						Движение.абс_ТипРасхода = Стр.ТипРасхода;
						Движение.Количество = Стр.Количество;
						Движение.СуммаУпр = Стр.СуммаРуб;
						Движение.ВалютнаяСумма = Стр.СуммаВал;
						Движение.СуммаСценария = Стр.СуммаРуб;
						Движение.Организация = Стр.Организация;
						//АБС НАЧАЛО Задача №08759
			   			Движение.Проект = Стр.Проект;
			   			//\\АБС КОНЕЦ Задача №08759
						//Крамаренко Д.М.
						//НФС 2018
						Движение.ttk_ОбъектБюджетирования = Стр.ОбъектБюджетирования;
						Движение.ttk_Город = Стр.Город;
						//Крамаренко Д.М.
						//НФС 2018
					КонецЕсли;
				КонецЕсли;
				
				Если Статус = Перечисления.абс_СтатусыБюджетов.Утвержден Тогда		
					Если ЗначениеЗаполнено(СценарийНачисления.абс_СценарийУтвержденногоПлана) Тогда
						Если Стр.СуммаРуб <> 0 Или Стр.СуммаВал <> 0 Тогда
							Движение = Движения.ОборотыБюджетов.Добавить();
							Движение.Период 					= Стр.Период;
							Движение.Сценарий 					= СценарийНачисления.абс_СценарийУтвержденногоПлана;
							Движение.ЦФО 						= Стр.ЦФО;
							Движение.СтатьяОборотов 			= Стр.БюджетнаяСтатья;
							Движение.Валюта 					= ВалютаПланирования;
							Движение.абс_ТипКонтрагента 		= Стр.ТипКонтрагента;
							Движение.абс_ТипСети 				= Стр.ТипСети;
							Движение.абс_КВ 					= Стр.КВ;
							Движение.абс_ТЭО 					= Стр.ТЭО;
							Движение.абс_ЦФУ 					= Стр.ЦФУ;
							Движение.абс_ТипРасхода 			= Стр.ТипРасходаНаПроизводствоИРеализацию;
							Движение.Количество 				= Стр.Количество;
							Движение.СуммаУпр 					= Стр.СуммаРуб;
							Движение.ВалютнаяСумма 				= Стр.СуммаВал;
							Движение.СуммаСценария 				= Стр.СуммаРуб;
							Движение.Организация				= Стр.Организация;
							//Крамаренко Д.М.
							//НФС 2018
							Движение.ttk_ОбъектБюджетирования = Стр.ОбъектБюджетирования;
							Движение.ttk_Город = Стр.Город;
							//Крамаренко Д.М.
							//НФС 2018
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	//---НФС 2018 (Григорьев Д.В.)
	
	СценарийЛимитов 	= Сценарий.абс_СценарийЛимитов;
	СценарийУтвПлана 	= Сценарий.абс_СценарийУтвержденногоПлана;	
	//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
	СтатьяОборотовДляИсключения = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");
	ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
	ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
	ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
	// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>
	
	Для Каждого ТекСтрокаБюджет Из Бюджет Цикл
		// АБС ВСТАВКА 20120202 Фролов необходимо чтобы обороты бюджетов в статусе Утрвержден формировались только по сценарию План
		// Инициатор Павлов
		Если НЕ Статус = Перечисления.абс_СтатусыБюджетов.Утвержден Тогда			
			Если ТекСтрокаБюджет.СуммаРуб <> 0 Или ТекСтрокаБюджет.СуммаВал <> 0 Тогда
				Движение = Движения.ОборотыБюджетов.Добавить();
				Движение.Период = ТекСтрокаБюджет.Период;
				Движение.Сценарий = Сценарий;
				Движение.ЦФО = ТекСтрокаБюджет.ЦФО;
				Движение.СтатьяОборотов = ТекСтрокаБюджет.БюджетнаяСтатья;
				Движение.Валюта = ВалютаПланирования;//ТекСтрокаБюджет.Валюта;
				Движение.абс_ТипКонтрагента = ТекСтрокаБюджет.ТипКонтрагента;
				Движение.абс_ТипСети = ТекСтрокаБюджет.ТипСети;
				Движение.абс_КВ = ТекСтрокаБюджет.КВ;
				Движение.абс_ТЭО = ТекСтрокаБюджет.ТЭО;
				Движение.абс_ЦФУ = ТекСтрокаБюджет.ЦФУ;
				Движение.абс_ТипРасхода = ТекСтрокаБюджет.ТипРасхода;
				Движение.Количество = ТекСтрокаБюджет.Количество;
				Движение.СуммаУпр = ТекСтрокаБюджет.СуммаРуб;
				Движение.ВалютнаяСумма = ТекСтрокаБюджет.СуммаВал;
				Движение.СуммаСценария = ТекСтрокаБюджет.СуммаРуб;
				Движение.Организация = ТекСтрокаБюджет.Организация;
				//АБС НАЧАЛО Задача №08759
	   			Движение.Проект = ТекСтрокаБюджет.Проект;
	   			//\\АБС КОНЕЦ Задача №08759
				//Крамаренко Д.М.
				//НФС 2018
				Движение.ttk_ОбъектБюджетирования = ТекСтрокаБюджет.ОбъектБюджетирования;
				Движение.ttk_Город = ТекСтрокаБюджет.Город;
				//Крамаренко Д.М.
				//НФС 2018
			КонецЕсли;
		КонецЕсли;
		
		Если Статус = Перечисления.абс_СтатусыБюджетов.Утвержден Тогда		
			Если ЗначениеЗаполнено(СценарийУтвПлана) Тогда
				Если ТекСтрокаБюджет.СуммаРуб <> 0 Или ТекСтрокаБюджет.СуммаВал <> 0 Тогда
					Движение = Движения.ОборотыБюджетов.Добавить();
					Движение.Период 					= ТекСтрокаБюджет.Период;
					Движение.Сценарий 					= СценарийУтвПлана;
					Движение.ЦФО 						= ТекСтрокаБюджет.ЦФО;
					Движение.СтатьяОборотов 			= ТекСтрокаБюджет.БюджетнаяСтатья;
					Движение.Валюта 					= ВалютаПланирования;//ТекСтрокаБюджет.Валюта;
					Движение.абс_ТипКонтрагента 		= ТекСтрокаБюджет.ТипКонтрагента;
					Движение.абс_ТипСети 				= ТекСтрокаБюджет.ТипСети;
					Движение.абс_КВ 					= ТекСтрокаБюджет.КВ;
					Движение.абс_ТЭО 					= ТекСтрокаБюджет.ТЭО;
					Движение.абс_ЦФУ 					= ТекСтрокаБюджет.ЦФУ;
					Движение.абс_ТипРасхода 			= ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
					Движение.Количество 				= ТекСтрокаБюджет.Количество;
					Движение.СуммаУпр 					= ТекСтрокаБюджет.СуммаРуб;
					Движение.ВалютнаяСумма 				= ТекСтрокаБюджет.СуммаВал;
					Движение.СуммаСценария 				= ТекСтрокаБюджет.СуммаРуб;
					Движение.Организация				= ТекСтрокаБюджет.Организация;
					//Крамаренко Д.М.
					//НФС 2018
					Движение.ttk_ОбъектБюджетирования = ТекСтрокаБюджет.ОбъектБюджетирования;
					Движение.ttk_Город = ТекСтрокаБюджет.Город;
					//Крамаренко Д.М.
					//НФС 2018
				КонецЕсли;
			КонецЕсли;			
			//Крамаренко Д.М.
			//НФС 2018
			//Если НЕ ЗначениеЗаполнено(СценарийЛимитов) Тогда
			//	Движения.абс_УстановкаЛимитовПоСтатьям.Прочитать();
			//	Движения.абс_УстановкаЛимитовПоСтатьям.Очистить();
			//	Движения.абс_УстановкаЛимитовПоСтатьям.Записать();
			//	Движения.КонтролируемыеЗначенияБюджетов.Прочитать();
			//	Движения.КонтролируемыеЗначенияБюджетов.Очистить();
			//	Движения.КонтролируемыеЗначенияБюджетов.Записать();	
			//	Продолжить;
			//КонецЕсли;
			//Крамаренко Д.М.
			//НФС 2018
		КонецЕсли;
				
		Если ТекСтрокаБюджет.СуммаРуб = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураАналитик = ПолучитьСтруктуруАналитик(ТекСтрокаБюджет);
		
		Остаток = абс_Бюджетирование.ПостроитьЗапросПоОстаткам(СтруктураАналитик,СценарийЛимитов.Валюта,Истина);			
		Если НЕ Остаток.ЕстьЛимит Тогда
			//+++ НФС 2018 (Григорьев Д.В.)
			//Движение = Движения.абс_УстановкаЛимитовПоСтатьям.Добавить();
			//Движение.Период 				= СтруктураАналитик.ПериодМесяц;
			//Движение.Сценарий 				= СценарийЛимитов;
			//Движение.СтатьяОборотов 		= СтруктураАналитик.СтатьяОборотов;
			//Движение.ЦФО 					= СтруктураАналитик.ЦФО;
			//Движение.абс_ТипКонтрагента 	= СтруктураАналитик.ТипКонтрагента;
			//Движение.абс_ТипСети 			= СтруктураАналитик.ТипСети;
			//Движение.абс_КВ 				= СтруктураАналитик.КВ;
			//Движение.абс_ТЭО 				= СтруктураАналитик.ТЭО;
			//Движение.абс_ЦФУ 				= СтруктураАналитик.ЦФУ;
			//Движение.абс_ТипРасхода 		= СтруктураАналитик.ТипРасхода;
			//Движение.Организация 			= СтруктураАналитик.Организация;
			//--- НФС 2018 (Григорьев Д.В.)
			//Крамаренко Д.М.
			//НФС 2018
			//Движение.ttk_ОбъектБюджетирования	= СтруктураАналитик.ОбъектБюджетирования;
			//Крамаренко Д.М.
			//НФС 2018
		КонецЕсли;
		
		Если ТекСтрокаБюджет.СуммаРуб = 0 И ТекСтрокаБюджет.СуммаВал = 0 Тогда
			Продолжить;
		КонецЕсли;

		Движение = Движения.КонтролируемыеЗначенияБюджетов.Добавить();
		Движение.Период 					= ТекСтрокаБюджет.Период;
		Движение.Сценарий 					= СценарийЛимитов;
		Движение.СтатьяОборотов 			= ТекСтрокаБюджет.БюджетнаяСтатья;
		Движение.ЦФО 						= ТекСтрокаБюджет.ЦФО;
		Движение.Организация 				= ТекСтрокаБюджет.Организация;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Если ТекСтрокаБюджет.ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ  ТекСтрокаБюджет.ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ ТекСтрокаБюджет.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ
			ТекСтрокаБюджет.ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ  ТекСтрокаБюджет.ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ ТекСтрокаБюджет.ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
			ТекСтрокаБюджет.ТипКонтрагента = ГоловнаяКомпания Тогда
			Движение.абс_ТипКонтрагента 		= ТекСтрокаБюджет.ТипКонтрагента;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		//Движение.абс_ТипСети 				= ТекСтрокаБюджет.ТипСети;
		Если ТекСтрокаБюджет.БюджетнаяСтатья = СтатьяОборотовДляИсключения Тогда
			Движение.абс_КВ 					= ТекСтрокаБюджет.КВ;
		КонецЕсли;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>
		Движение.абс_ТЭО 					= ТекСтрокаБюджет.ТЭО;
		Движение.абс_ЦФУ 					= ТекСтрокаБюджет.ЦФУ;
		Движение.абс_ТипРасхода 			= ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
		Движение.СуммаСценарияКонтроль 		= ТекСтрокаБюджет.СуммаРуб;
		Движение.СуммаСценарияКонтрольВал 	= ТекСтрокаБюджет.СуммаВал;
		Движение.Валюта 					= ВалютаПланирования;
		//Движение.СуммаСценарияИсполнение = ТекСтрокаБюджет.СуммаРуб;
	
		//АБС НАЧАЛО Задача №08759
        Движение.Проект = ТекСтрокаБюджет.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		//Крамаренко Д.М.
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования	= ТекСтрокаБюджет.ОбъектБюджетирования;
		//Крамаренко Д.М.
		//НФС 2018
		
		Движение = Движения.ОборотыБюджетов.Добавить();
		Движение.Период 					= ТекСтрокаБюджет.Период;
		Движение.Сценарий 					= СценарийЛимитов;
		Движение.ЦФО 						= ТекСтрокаБюджет.ЦФО;
		Движение.СтатьяОборотов 			= ТекСтрокаБюджет.БюджетнаяСтатья;
		Движение.Валюта 					= ВалютаПланирования;//ТекСтрокаБюджет.Валюта;
		Движение.абс_ТипКонтрагента 		= ТекСтрокаБюджет.ТипКонтрагента;
		Движение.абс_ТипСети 				= ТекСтрокаБюджет.ТипСети;
		Движение.абс_КВ 					= ТекСтрокаБюджет.КВ;
		Движение.абс_ТЭО 					= ТекСтрокаБюджет.ТЭО;
		Движение.абс_ЦФУ 					= ТекСтрокаБюджет.ЦФУ;
		Движение.абс_ТипРасхода 			= ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
		Движение.Количество 				= ТекСтрокаБюджет.Количество;
		Движение.СуммаУпр 					= ТекСтрокаБюджет.СуммаРуб;
		Движение.ВалютнаяСумма 				= ТекСтрокаБюджет.СуммаВал;
		Движение.СуммаСценария 				= ТекСтрокаБюджет.СуммаРуб;
		Движение.Организация				= ТекСтрокаБюджет.Организация;

		//АБС НАЧАЛО Задача №08759
        Движение.Проект = ТекСтрокаБюджет.Проект;
		//\\АБС КОНЕЦ Задача №08759
		
		//Крамаренко Д.М.
		//НФС 2018
		Движение.ttk_ОбъектБюджетирования = ТекСтрокаБюджет.ОбъектБюджетирования;
		Движение.ttk_Город = ТекСтрокаБюджет.Город;
		//Крамаренко Д.М.
		//НФС 2018
	КонецЦикла;

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусВводаБюджетаПоРегистру(Ссылка);
		
		Если НЕ Статус = СтатусПоРегистру Тогда
			ЗаписатьНовыйСтатус(Статус, ПричинаИзмененияСтатуса);		
		КонецЕсли;
		
		БПСогласование = Неопределено;
		
		
		// Запустим БП если он еще не запущен
		Если СтатусПоРегистру = Перечисления.абс_СтатусыБюджетов.Уточнение Тогда
			
			Если Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеЦФО ИЛИ
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеЦФУ ИЛИ
				Статус = Перечисления.абс_СтатусыБюджетов.ПроверкаДирБА ИЛИ
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеДирБА или
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеДК или 
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеДЭИ ИЛИ
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеПВП Тогда //АБС Коломиец 19255
				
				// Закроем задачу согласования, запустим новый БП уточнения
				ЗадачаСогласование = ПолучитьЗадачуУточнения();
				
				Если ЗадачаСогласование = Неопределено Тогда
					Возврат;
				КонецЕсли;
				
				Если НЕ ЗадачаСогласование.Выполнена Тогда
					
					ЗадачаОбъект = ЗадачаСогласование.ПолучитьОбъект();			
					ЗадачаОбъект.ВыполнитьЗадачу();
				КонецЕсли;
				
				абс_БизнесПроцессы.ЗапуститьБПВводаБюджетаУточнение(Ссылка, Статус);
				
			КонецЕсли;
		ИначеЕсли СтатусПоРегистру = Перечисления.абс_СтатусыБюджетов.Отмена Тогда
			Если Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеЦФО ИЛИ
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеЦФУ ИЛИ
				Статус = Перечисления.абс_СтатусыБюджетов.ПроверкаДирБА ИЛИ
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеДирБА или
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеДК или 
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеДЭИ ИЛИ 
				Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеПВП Тогда //АБС Коломиец 19255
				
				абс_БизнесПроцессы.ЗапуститьБПВводаБюджетаОтмена(Ссылка, Статус);
				
			КонецЕсли;
			
			
		Иначе
			//АБС 3062
			//Если Статус = Перечисления.абс_СтатусыБюджетов.СогласованиеЦФО Тогда
			Если Статус = Перечисления.абс_СтатусыБюджетов.ПроверкаДирБА Тогда
				//АБС 3062
				БПСогласование = НайтиБПСогласование();
				
				Если Не ЗначениеЗаполнено(БПСогласование) Тогда
					абс_БизнесПроцессы.ЗапуститьБПВводаБюджета(Ссылка);	
				КонецЕсли;
				
			КонецЕсли;			
			
		КонецЕсли;
		
		БПСогласование = НайтиБПСогласование();
		
		// Проставим статус уточнения, если бюджет отправляется на уточнение
		Если ЗначениеЗаполнено(БПСогласование) И Статус = Перечисления.абс_СтатусыБюджетов.Уточнение Тогда
			
			БПОбъект = БПСогласование.ПолучитьОбъект();
			
			БПОбъект.СтатусУточнения = СтатусПоРегистру;
			
			БПОбъект.Записать();
			
		КонецЕсли;
		
		// Попробуем закрыть задачу согласования
		ЗадачаСогласование = ПолучитьЗадачуПоВводБюджета();
		
		Если ЗадачаСогласование = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		Если НЕ ЗадачаСогласование.Выполнена Тогда
			
			ЗадачаОбъект = ЗадачаСогласование.ПолучитьОбъект();			
			ЗадачаОбъект.ВыполнитьЗадачу();
		КонецЕсли;
		
	Исключение
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при записи документа: " + ОписаниеОшибки() + ".", Отказ);
		
		Возврат;
	КонецПопытки
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если Статус = Перечисления.абс_СтатусыБюджетов.Утвержден Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Документ находится в статусе ""Утвержден"", отменить проведение невозможно!!!", Отказ);
		
	//АБС+ Тупиков 13.12.2012	
	Иначе
		
		ttk_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	//АБС- Тупиков	
		
	КонецЕсли;	
	
КонецПроцедуры
