Функция ПолучитьДоступныеСтатусы(ТекСтатус) Экспорт
	
	СписокСтатусов = Новый СписокЗначений;
	
	Если ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.ОбработкаДанных);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.ОбработкаДанных Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Согласован);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Согласован Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Отказ Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
	КонецЕсли;	
	
	Возврат СписокСтатусов;
	
КонецФункции

//Функция возвращает ТЗ с сотатками и оборотами по настройкам в согласованном документе ttk_НастройкаСоответствияСчетовБУКСтатьямВГО
//Параметры:
//	*Отбор:
//		-Организация
//		-ДатаНач
//		-ДатаКон
//	*ТЗ - возвращемое значение для загрузки в ТЧ
//	*СсылкаНастройки - Ссылка на документ настроек, 
//					если ссылка настройки не определена, то ведется поиск документа "ttk_НастройкаСоответствияСчетовБУКСтатьямВГО" в статусе "Согласован"
//ПериметрВыверки
Функция ПолучитьОстаткиИОборотыПоСчетам(Отбор, ТЗ = Неопределено, СсылкаНастройки = Неопределено, ВыводитьВМакет = Ложь) Экспорт 
	
	РЖД_ДК = Перечисления.ttk_ПериметрВыверки.РЖД_ДК;
	//Счет90 = ПланыСчетов.Хозрасчетный.Продажи;
	Счет90_01_1 = ПланыСчетов.Хозрасчетный.ВыручкаНеОблагаемаяЕНВД;
	Кредит = Перечисления.ВидыДвиженийБухгалтерии.Кредит;
	
	МассивТиповСЗ = Новый Массив;
	МассивТиповСЗ.Добавить(Тип("СправочникСсылка.СтатьиЗатрат"));
	МассивТиповСЗ.Добавить(Тип("СправочникСсылка.НоменклатурныеГруппы"));
	МассивТиповСЗ.Добавить(Тип("СправочникСсылка.ПрочиеДоходыИРасходы"));

	Если ТЗ = Неопределено Тогда
		ТЗ 	= Документы.ttk_СверкаВГО.СоздатьДокумент().Основная.Выгрузить();
	КонецЕсли;
	//Получаем настройки соответствия
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГОСальдо.Счет,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГОСальдо.СтатьяВГО,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГОСальдо.ВидДвижения
		|ИЗ
		|	Документ.ttk_НастройкаСоответствияСчетовБУКСтатьямВГО.Сальдо КАК ttk_НастройкаСоответствияСчетовБУКСтатьямВГОСальдо
		|ГДЕ " + ?(СсылкаНастройки = Неопределено, "
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГОСальдо.Ссылка.Статус = &Статус
		|	И НЕ ttk_НастройкаСоответствияСчетовБУКСтатьямВГОСальдо.Ссылка.ПометкаУдаления", "
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГОСальдо.Ссылка = &СсылкаНастройки") + "
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СчетДт,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СчетКт,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СубконтоДт1,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СубконтоДт2,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СубконтоДт3,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СубконтоКт1,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СубконтоКт2,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СубконтоКт3,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.ВидДвижения,
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.СтатьяВГО
		|ИЗ
		|	Документ.ttk_НастройкаСоответствияСчетовБУКСтатьямВГО.Обороты КАК ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты
		|ГДЕ " + ?(СсылкаНастройки = Неопределено, "
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.Ссылка.Статус = &Статус
		|	И НЕ ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.Ссылка.ПометкаУдаления", "
		|	ttk_НастройкаСоответствияСчетовБУКСтатьямВГООбороты.Ссылка = &СсылкаНастройки");
	Запрос.УстановитьПараметр("Статус", Перечисления.абс_СтатусыПервичныхДокументов.Согласован);
	Запрос.УстановитьПараметр("СсылкаНастройки", СсылкаНастройки);
	
	ПакетНастроек = Запрос.ВыполнитьПакет();
	
	НастройкиПолученияСальдо = ПакетНастроек[0].Выгрузить();
	НастройкиПолученияОборотов = ПакетНастроек[1].Выгрузить();
	
	Выборка = Запрос.Выполнить();	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ХозрасчетныйОстатки.Счет КАК СчетУчетаБУ,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты).ИНН КАК ИНН,
	               |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК ДоговорКонтрагента,
	               |	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	               |	ХозрасчетныйОстатки.Субконто2 КАК Субконто2,
	               |	ХозрасчетныйОстатки.Субконто3 КАК Субконто3,
	               |	ХозрасчетныйОстатки.Организация,
	               |	ХозрасчетныйОстатки.СуммаОстатокДт,
	               |	ХозрасчетныйОстатки.СуммаОстатокКт,
	               |	ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО КАК КонтрагентВГО,
	               |	ВЫБОР
	               |		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт <> 0
	               |			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийБухгалтерии.Дебет)
	               |		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыДвиженийБухгалтерии.Кредит)
	               |	КОНЕЦ КАК ВидДвижения
	               |ИЗ
	               |	РегистрСведений.ttk_СоответствиеКонтрагентовЕИСУПиВГО КАК ttk_СоответствиеКонтрагентовЕИСУПиВГО"
				   + ?(Отбор.ПериметрВыверки = РЖД_ДК, "
	               |		ПРАВОЕ", "
	               |		ЛЕВОЕ") + " СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(" + ?(ЗначениеЗаполнено(Отбор.ДатаКон), "&ДатаКон", "") + ", Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация"
				   + ?(Отбор.ПериметрВыверки = РЖД_ДК,"
				   |				И ВЫРАЗИТЬ(Субконто1 КАК Справочник.Контрагенты).ИНН = &ИНН","") +") КАК ХозрасчетныйОстатки
	               |		ПО ttk_СоответствиеКонтрагентовЕИСУПиВГО.Организация = ХозрасчетныйОстатки.Организация
	               |			И (ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентЕИСУП = (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты)))
	               |			И (ttk_СоответствиеКонтрагентовЕИСУПиВГО.ДоговорЕИСУП = (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов)))
	               |ГДЕ
	               |	ХозрасчетныйОстатки.Счет ЕСТЬ НЕ NULL"
				   + ?(Отбор.ПериметрВыверки = РЖД_ДК, "", "
				   |	И ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО.ИНН <> &ИНН
				   |	И ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО.Статус = ЗНАЧЕНИЕ(Перечисление.абсСтатусыКонтрагентов.Активный)");
				   
	Запрос.УстановитьПараметр("Счет", НастройкиПолученияСальдо.ВыгрузитьКолонку("Счет"));
	Запрос.УстановитьПараметр("Организация", Отбор.Организация);
	Запрос.УстановитьПараметр("ДатаНач", Отбор.ДатаНач);
	//Сторчевой А.Н. 01.02.2017 7772329 {
	 //Запрос.УстановитьПараметр("ДатаКон", Отбор.ДатаКон);
	 Запрос.УстановитьПараметр("ДатаКон", Новый Граница(Отбор.ДатаКон, ВидГраницы.Включая));
	 // } Сторчевой А.Н. 01.02.2017 7772329
	Запрос.УстановитьПараметр("ИНН", "7708503727");
	//Сторчевой А.Н.  { 
	//Получим несопоставленных контрагентов и выведем по ним остатки тоже
	//Если НЕ Отбор.ПериметрВыверки = РЖД_ДК Тогда
	//	ТЗНесопоставленнеКонтрагенты = ПолучитьНесопоставленныхКонтрагентов();
	//	Если ТЗНесопоставленнеКонтрагенты.Количество() Тогда
	//		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
	//		ТекстЗапроса = Запрос.Текст;
	//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ttk_СоответствиеКонтрагентовЕИСУПиВГО", "ВТ_НесопоставленнеКонтрагенты");
	//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
	//												|		ПО ttk_СоответствиеКонтрагентовЕИСУПиВГО.Организация = ХозрасчетныйОстатки.Организация
	//												|			И (ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентЕИСУП = (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты)))
	//												|			И (ttk_СоответствиеКонтрагентовЕИСУПиВГО.ДоговорЕИСУП = (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов)))"
	//												, "
	//												|		ПО ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО.ИНН = ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты).ИНН");
	//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ttk_СоответствиеКонтрагентовЕИСУПиВГО", "ttk_КонтрагентыВГО");
	//		
	//		ТекстЗапроса = "ВЫБРАТЬ * ПОМЕСТИТЬ ВТ_НесопоставленнеКонтрагенты ИЗ &ТЗНесопоставленнеКонтрагенты КАК ТЗНесопоставленнеКонтрагенты
	//						|;
	//						|ВЫБРАТЬ РАЗРЕШЕННЫЕ * ИЗ (" + Запрос.Текст + "
	//						|ОБЪЕДИНИТЬ ВСЕ " + "
	//						|" + ТекстЗапроса + ") КАК ТЗСальдо";
	//		Запрос.Текст = ТекстЗапроса;
	//		Запрос.УстановитьПараметр("ТЗНесопоставленнеКонтрагенты", ТЗНесопоставленнеКонтрагенты);
	//		ТекстСообщения = "";
	//		Для каждого нкСтр из ТЗНесопоставленнеКонтрагенты Цикл
	//			ТекстСообщения = ТекстСообщения + "
	//							|" + нкСтр.КонтрагентВГО.Код + Символы.Таб + нкСтр.КонтрагентВГО;
	//		КонецЦикла;
	//		ТекстСообщения = "Не сопоставлены контрагенты ВГО:" + ТекстСообщения;
	//		ОбщегоНазначения.Сообщение(НСтр("ru = '" + ТекстСообщения + "'"), СтатусСообщения.Внимание);
	//	КонецЕсли;
	//КонецЕсли;
	// } Сторчевой А.Н.			   
	Результат = Запрос.Выполнить();
	
	ТЗСальдо = Результат.Выгрузить();
	
	//Получим сальдо
	Для каждого Настройка из НастройкиПолученияСальдо Цикл 
		Строки = ТЗСальдо.НайтиСтроки(новый Структура("СчетУчетаБУ, ВидДвижения",Настройка.Счет, Настройка.ВидДвижения));
		Для каждого Стр из Строки Цикл 
			НоваяСтр = ТЗ.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтр, Стр);
			НоваяСтр.СтатьяЗатрат = ЗаполнитьПоТипам(НоваяСтр.СтатьяЗатрат, Стр, МассивТиповСЗ, Истина);
			НоваяСтр[?(Настройка.ВидДвижения = Кредит, "СчетКт", "СчетДт")] = Стр.СчетУчетаБУ;
			НоваяСтр.СтатьяЗатратВГО = Настройка.СтатьяВГО;
			НоваяСтр.Сумма = ?(Настройка.ВидДвижения = Кредит, -Стр.СуммаОстатокКт, Стр.СуммаОстатокДт);
			НоваяСтр.СуммаПоОСВ = НоваяСтр.Сумма;
		КонецЦикла;
	КонецЦикла;
	
	//Получим обороты
	Для каждого Настройка из НастройкиПолученияОборотов Цикл 
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОборотыДтКт.СчетДт,
		|	ХозрасчетныйОборотыДтКт.СчетКт,
		|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
		|	ХозрасчетныйОборотыДтКт.СубконтоДт2,
		|	ХозрасчетныйОборотыДтКт.СубконтоДт3,
		|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
		|	ХозрасчетныйОборотыДтКт.СубконтоКт2,
		|	ХозрасчетныйОборотыДтКт.СубконтоКт3,
		|	ХозрасчетныйОборотыДтКт.Организация,
		|	ХозрасчетныйОборотыДтКт.СуммаОборот,
	    |	ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО КАК КонтрагентВГО
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
		|			" + ?(ЗначениеЗаполнено(Отбор.ДатаНач), "&ДатаНач", "") + ",
		|			" + ?(ЗначениеЗаполнено(Отбор.ДатаКон), "&ДатаКон", "") + ",
		|			,";
		Если ЗначениеЗаполнено(Настройка.СчетДт) Тогда
			//Если Настройка.СчетДт = Счет90 Тогда 
			//	Запрос.Текст = Запрос.Текст + "
			//	|			СчетДт В ИЕРАРХИИ (&СчетДт)";
			//	Иначе
					Запрос.Текст = Запрос.Текст +"
				|			СчетДт В ИЕРАРХИИ (&СчетДт)";
			//КонецЕсли;
		КонецЕсли; 
		Запрос.Текст = Запрос.Текст + ",
		|			,";
		Если ЗначениеЗаполнено(Настройка.СчетКт) Тогда
			//Если Настройка.СчетКт = Счет90 Тогда 
			//	Запрос.Текст = Запрос.Текст + "
			//	|			СчетКт В ИЕРАРХИИ (&СчетКт)";
			//	Иначе
					Запрос.Текст = Запрос.Текст +"
				|			СчетКт В ИЕРАРХИИ (&СчетКт)";
			//КонецЕсли;
		КонецЕсли; 
		Запрос.Текст = Запрос.Текст + ",
		|			,
		|			Организация = &Организация"; 
		Если ЗначениеЗаполнено(Настройка.СубконтоДт1) Тогда
			Запрос.Текст = Запрос.Текст + "
			|				И СубконтоДт1 В ИЕРАРХИИ (&СубконтоДт1)";
			Запрос.УстановитьПараметр("СубконтоДт1", Настройка.СубконтоДт1);
		КонецЕсли;
		Если ЗначениеЗаполнено(Настройка.СубконтоДт2) Тогда
			Запрос.Текст = Запрос.Текст + "
			|				И СубконтоДт2 В ИЕРАРХИИ (&СубконтоДт2)";
			Запрос.УстановитьПараметр("СубконтоДт2", Настройка.СубконтоДт2);
		КонецЕсли;
		Если ЗначениеЗаполнено(Настройка.СубконтоДт3) Тогда
			Запрос.Текст = Запрос.Текст + "
			|				И СубконтоДт3 В ИЕРАРХИИ (&СубконтоДт3)";
			Запрос.УстановитьПараметр("СубконтоДт3", Настройка.СубконтоДт3);
		КонецЕсли;
		Если ЗначениеЗаполнено(Настройка.СубконтоКт1) Тогда
			Запрос.Текст = Запрос.Текст + "
			|				И СубконтоКт1 В ИЕРАРХИИ (&СубконтоКт1)";
			Запрос.УстановитьПараметр("СубконтоКт1", Настройка.СубконтоКт1);
		КонецЕсли;
		Если ЗначениеЗаполнено(Настройка.СубконтоКт2) Тогда
			Запрос.Текст = Запрос.Текст + "
			|				И СубконтоКт2 В ИЕРАРХИИ (&СубконтоКт2)";
			Запрос.УстановитьПараметр("СубконтоКт2", Настройка.СубконтоКт2);
		КонецЕсли;
		Если ЗначениеЗаполнено(Настройка.СубконтоКт3) Тогда
			Запрос.Текст = Запрос.Текст + "
			|				И СубконтоКт3 В ИЕРАРХИИ (&СубконтоКт3)";
			Запрос.УстановитьПараметр("СубконтоКт3", Настройка.СубконтоКт3);
		КонецЕсли;
		Запрос.Текст = Запрос.Текст 
			+ ?(Отбор.ПериметрВыверки = РЖД_ДК, "
			|				И (ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.Контрагенты).ИНН = &ИНН
			|								ИЛИ ВЫРАЗИТЬ(СубконтоКт1 КАК Справочник.Контрагенты).ИНН = &ИНН)", "") 
			+ ") КАК ХозрасчетныйОборотыДтКт"
			+ ?(Отбор.ПериметрВыверки = РЖД_ДК, "
			|		ЛЕВОЕ", "
			|		ПРАВОЕ") 
			+ " СОЕДИНЕНИЕ РегистрСведений.ttk_СоответствиеКонтрагентовЕИСУПиВГО КАК ttk_СоответствиеКонтрагентовЕИСУПиВГО
			|		ПО ХозрасчетныйОборотыДтКт.Организация = ttk_СоответствиеКонтрагентовЕИСУПиВГО.Организация
			|			И ((ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентЕИСУП
			|				ИЛИ (ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентЕИСУП)
			|			И ((ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.ДоговорЕИСУП
			|				ИЛИ (ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.ДоговорЕИСУП)"
			+ ?(Отбор.ПериметрВыверки = РЖД_ДК, "","
			|ГДЕ
			|	ХозрасчетныйОборотыДтКт.СчетДТ ЕСТЬ НЕ NULL
			|	И ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО.ИНН <> &ИНН
			|	И ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО.Статус = ЗНАЧЕНИЕ(Перечисление.абсСтатусыКонтрагентов.Активный)");
		Запрос.УстановитьПараметр("СчетДт", Настройка.СчетДт);
		Запрос.УстановитьПараметр("СчетКт", Настройка.СчетКт);
		
		//Сторчевой А.Н.  { 
		//Если есть несопоставленные контрагенты то их тоже нужно учесть в запросе(не оптимальное решение бухгалтера)
		//Если НЕ Отбор.ПериметрВыверки = РЖД_ДК Тогда
		//	Если ТЗНесопоставленнеКонтрагенты.Количество() Тогда
		//		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВЫБРАТЬ РАЗРЕШЕННЫЕ", "ВЫБРАТЬ");
		//		ТекстЗапроса = Запрос.Текст;
		//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "РегистрСведений.ttk_СоответствиеКонтрагентовЕИСУПиВГО", "ВТ_НесопоставленнеКонтрагенты");
		//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "
		//												|		ПО ХозрасчетныйОборотыДтКт.Организация = ttk_СоответствиеКонтрагентовЕИСУПиВГО.Организация
		//												|			И ((ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентЕИСУП
		//												|				ИЛИ (ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентЕИСУП)
		//												|			И ((ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт2 КАК Справочник.ДоговорыКонтрагентов)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.ДоговорЕИСУП
		//												|				ИЛИ (ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт2 КАК Справочник.ДоговорыКонтрагентов)) = ttk_СоответствиеКонтрагентовЕИСУПиВГО.ДоговорЕИСУП)"
		//												, "
		//												|		ПО ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоДт1 КАК Справочник.Контрагенты).ИНН = ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО.ИНН
		//												|			ИЛИ ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СубконтоКт1 КАК Справочник.Контрагенты).ИНН = ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО.ИНН");
		//		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ttk_СоответствиеКонтрагентовЕИСУПиВГО", "ttk_КонтрагентыВГО");
		//		
		//		ТекстЗапроса = "ВЫБРАТЬ * ПОМЕСТИТЬ ВТ_НесопоставленнеКонтрагенты ИЗ &ТЗНесопоставленнеКонтрагенты КАК ТЗНесопоставленнеКонтрагенты
		//		|;
		//		|ВЫБРАТЬ РАЗРЕШЕННЫЕ * ИЗ (" + Запрос.Текст + "
		//		|ОБЪЕДИНИТЬ ВСЕ " + "
		//		|" + ТекстЗапроса + ") КАК ТЗОбороты";
		//		Запрос.Текст = ТекстЗапроса;
		//		Запрос.УстановитьПараметр("ТЗНесопоставленнеКонтрагенты", ТЗНесопоставленнеКонтрагенты); 
		//	КонецЕсли;
		//КонецЕсли;
		// } Сторчевой А.Н.			   
		
		Результат = Запрос.Выполнить();
		
		ТЗОбороты = Результат.Выгрузить();
		Для каждого Стр из ТЗОбороты Цикл 
			НоваяСтр = ТЗ.Добавить();
			НоваяСтр.СчетДт = Стр.СчетДт;
			НоваяСтр.СчетКт = Стр.СчетКт;
			НоваяСтр.Организация = Стр.Организация;
			НоваяСтр.Контрагент = ЗаполнитьПоТипам(НоваяСтр.Контрагент, Стр);
			НоваяСтр.ДоговорКонтрагента = ЗаполнитьПоТипам(НоваяСтр.ДоговорКонтрагента, Стр);
			НоваяСтр.СтатьяЗатрат = ЗаполнитьПоТипам(НоваяСтр.СтатьяЗатрат, Стр, МассивТиповСЗ);
			//Полуцчим контрагента ВГО
			//КонтрагентВГО = ПолучитьКонтрагентаВГО(НоваяСтр.Организация, НоваяСтр.Контрагент, ?(ЗначениеЗаполнено(НоваяСтр.ДоговорКонтрагента)
			//																	, НоваяСтр.ДоговорКонтрагента, Неопределено));
			//НоваяСтр.КонтрагентВГО = ?(КонтрагентВГО = Неопределено, Неопределено, КонтрагентВГО.КонтрагентВГО);		
			
			НоваяСтр.КонтрагентВГО = Стр.КонтрагентВГО;
			НоваяСтр.СтатьяЗатратВГО = Настройка.СтатьяВГО;
			
			Сумма = Стр.СуммаОборот;
			Если Стр.СчетДт = Счет90_01_1 Тогда
				Сумма = ОтнятьСуммуНДС(Сумма, Стр.СубконтоКт2); 
			ИначеЕсли Стр.СчетКт = Счет90_01_1 Тогда
				Сумма = ОтнятьСуммуНДС(Сумма, Стр.СубконтоКт2); 
			КонецЕсли;
			НоваяСтр.Сумма = Сумма * ?(Настройка.ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Расход, -1, 1);//Сторчевой А.Н. 02.02.2017 7772812 //ОбработатьЧисло(Сумма, Настройка.ВидДвижения);
			НоваяСтр.СуммаПоОСВ = НоваяСтр.Сумма;
		КонецЦикла;
	КонецЦикла;
	
	//Свернем ТЗ
	КолонкиГруппируемые = "";
	КолонкиСуммируемые = "";
	Для каждого Колонка ИЗ ТЗ.Колонки Цикл
		Если  Колонка.Имя = "НомерСтроки" Тогда
			Продолжить;
		ИначеЕсли Колонка.Имя = "Сумма" Тогда
			КолонкиСуммируемые = КолонкиСуммируемые + Колонка.Имя + ", ";
			Продолжить;
		ИначеЕсли Колонка.Имя = "СуммаПоОСВ" Тогда
			КолонкиСуммируемые = КолонкиСуммируемые + Колонка.Имя + ", ";
			Продолжить;
		КонецЕсли;
		КолонкиГруппируемые = КолонкиГруппируемые + Колонка.Имя + ", ";
	КонецЦикла;
	КолонкиГруппируемые = Лев(КолонкиГруппируемые, СтрДлина(КолонкиГруппируемые)-2);
	КолонкиСуммируемые = Лев(КолонкиСуммируемые, СтрДлина(КолонкиСуммируемые)-2);
	ТЗ.Свернуть(КолонкиГруппируемые, КолонкиСуммируемые);
	
	Возврат ТЗ;
	
КонецФункции

Функция ОбработатьЧисло(Сумма, ВидДвижения)
	Если ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Приход Тогда 
		Сумма = ?(Сумма < 0, -Сумма, Сумма);
	ИначеЕсли ВидДвижения = Перечисления.ВидыДвиженийПриходРасход.Расход Тогда 
		Сумма = ?(Сумма > 0, -Сумма, Сумма);
	КонецЕсли;
	Возврат Сумма;	
КонецФункции

//Заполняет значение по соответсвиям типов
Функция ЗаполнитьПоТипам(Приемник, Источник, МассивТипов = Неопределено, Сальдо = Ложь)

	//По дебету
	Счетчик = 1;
	Пока Счетчик < 4 Цикл
		ЗначениеСубконто = Источник["Субконто"+?(Сальдо, "", "Дт")+Счетчик];
		Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
			Если НЕ МассивТипов = Неопределено Тогда 
				Если НЕ МассивТипов.Найти(ТипЗнч(ЗначениеСубконто)) = Неопределено Тогда
					Возврат ЗначениеСубконто;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЗначениеСубконто) = ТипЗнч(Приемник) Тогда
					Возврат ЗначениеСубконто;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		Счетчик = Счетчик +1;
	КонецЦикла;
	Если НЕ Сальдо Тогда
		//По кредиту
		Счетчик = 1;
		Пока Счетчик < 4 Цикл
			ЗначениеСубконто = Источник["СубконтоКт"+Счетчик];
			Если ЗначениеЗаполнено(ЗначениеСубконто) Тогда
				Если НЕ МассивТипов = Неопределено Тогда 
					Если НЕ МассивТипов.Найти(ТипЗнч(ЗначениеСубконто)) = Неопределено Тогда
						Возврат ЗначениеСубконто;
					КонецЕсли;
				Иначе
					Если ТипЗнч(ЗначениеСубконто) = ТипЗнч(Приемник) Тогда
						Возврат ЗначениеСубконто;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			Счетчик = Счетчик +1;
		КонецЦикла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	Возврат Неопределено;
	
КонецФункции

//Функция возвращает контрагента ВГО по Контрагенту ЕИСУП и Договору.
//Если договор неуказан, то только по контрагенту ЕИСУП
Функция ПолучитьКонтрагентаВГО(Организация, Контрагент, Договор = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО
	               |ИЗ
	               |	РегистрСведений.ttk_СоответствиеКонтрагентовЕИСУПиВГО КАК ttk_СоответствиеКонтрагентовЕИСУПиВГО
	               |ГДЕ
	               |	ttk_СоответствиеКонтрагентовЕИСУПиВГО.Организация = &Организация
	               |	И ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентЕИСУП = &КонтрагентЕИСУП";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("КонтрагентЕИСУП", Контрагент);
	Если НЕ Договор = Неопределено Тогда
		Запрос.Текст = Запрос.Текст + "
	               |	И ttk_СоответствиеКонтрагентовЕИСУПиВГО.ДоговорЕИСУП = &ДоговорЕИСУП";
		Запрос.УстановитьПараметр("ДоговорЕИСУП", Договор);
	КонецЕсли;
	
	ВыборкаКонтрагентовВГО = Запрос.Выполнить();
	
	Если ВыборкаКонтрагентовВГО.Пустой() Тогда
		Возврат Неопределено;
	Иначе
		Возврат ВыборкаКонтрагентовВГО.Выбрать();
	КонецЕсли;
	
КонецФункции
//
Функция ОтнятьСуммуНДС(Сумма, СтавкаНДС)
	СуммаНДС = УчетНДС.РассчитатьСуммуНДС(Сумма, Истина, Истина, УчетНДС.ПолучитьСтавкуНДС(СтавкаНДС));
	Возврат Сумма - СуммаНДС;
КонецФункции

//Сторчевой А.Н.  {                                   
Функция ПолучитьНесопоставленныхКонтрагентов()

	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		        |	ttk_КонтрагентыВГО.Ссылка КАК КонтрагентВГО
		        |ИЗ
		        |	Справочник.ttk_КонтрагентыВГО КАК ttk_КонтрагентыВГО
		        |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ttk_СоответствиеКонтрагентовЕИСУПиВГО КАК ttk_СоответствиеКонтрагентовЕИСУПиВГО
		        |		ПО (ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО = ttk_КонтрагентыВГО.Ссылка)
		        |ГДЕ
		        |	ttk_КонтрагентыВГО.ИНН <> &ИНН
		        |	И ttk_КонтрагентыВГО.Статус = ЗНАЧЕНИЕ(Перечисление.абсСтатусыКонтрагентов.Активный)
		        |	И ttk_СоответствиеКонтрагентовЕИСУПиВГО.КонтрагентВГО ЕСТЬ NULL ";
				
	Запрос.УстановитьПараметр("ИНН", "7708503727");
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьТекстЗапроса()
// } Сторчевой А.Н.