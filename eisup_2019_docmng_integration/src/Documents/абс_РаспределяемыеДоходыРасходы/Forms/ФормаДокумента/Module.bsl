&НаСервере
Перем мТекущийПользователь;

&НаСервере
Перем мРолиПользователя;
  

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

&НаСервере
Процедура СформироватьДвиженияПоОперации(НаправлениеПереноса)
		
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.СформироватьДвиженияПоОперации(НаправлениеПереноса);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		
КонецПроцедуры

&НаСервере
Процедура СформироватьДокументДвижений()
	СформироватьДвиженияПоОперации("-"); 
КонецПроцедуры

&НаСервере
Процедура СФормироватьДокументАвизо()
	СформироватьДвиженияПоОперации("+"); 
КонецПроцедуры

&НаКлиенте
Процедура УстановитьНадписьДокументКТТК()
	
	Если Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Исполнение ИЛИ  Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВФилиал ИЛИ Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВКЦ  Тогда
		Элементы.Декорация1.Видимость = Истина;	
		Если ЗначениеЗаполнено(Объект.ДокументДвижений) Тогда
			Элементы.Декорация1.Заголовок = Строка(Объект.ДокументДвижений);	
		Иначе
			
			ОрганизацияКТТК = Справочники.Организации.НайтиПоНаименованию("КТТК");
			
			Если ОрганизацияКТТК <> Объект.Организация Тогда
				Элементы.Декорация1.Заголовок = "Сформировать проводки по филиалу  ";	
			Иначе
				Элементы.Декорация1.Заголовок = "Сформировать проводки по КТТК  ";	
			КонецЕсли;
			
		КонецЕсли;
	Иначе
		Элементы.Декорация1.Видимость = Ложь;	
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьПоСтатусу()
	
	Если Объект.Статус <> Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка Тогда
		РежимТолькоПросмотр = Истина;
	Иначе	
		РежимТолькоПросмотр = Ложь;
	КонецЕсли;
	
	Элементы.ЦФО.ТолькоПросмотр           =  РежимТолькоПросмотр;
	Элементы.ЦФУ.ТолькоПросмотр           =  РежимТолькоПросмотр;
	//Элементы.Группа1.ТолькоПросмотр     =  РежимТолькоПросмотр;
	Элементы.Номер.ТолькоПросмотр         =  РежимТолькоПросмотр;
	Элементы.Дата.ТолькоПросмотр          =  РежимТолькоПросмотр;
	Элементы.Комментарий.ТолькоПросмотр   =  РежимТолькоПросмотр;
	Элементы.тчДоходы.ТолькоПросмотр      =  РежимТолькоПросмотр;
	Элементы.тчРасходы.ТолькоПросмотр     =  РежимТолькоПросмотр;
	Элементы.Дополнительно.ТолькоПросмотр =  РежимТолькоПросмотр;
    Элементы.ВариантЗаполнения.ТолькоПросмотр   =  РежимТолькоПросмотр;
	Элементы.СуммаКРаспределению.ТолькоПросмотр =  РежимТолькоПросмотр;
    Элементы.ДоходыЗаполнитьНДС.Доступность =    Не РежимТолькоПросмотр;
    Элементы.Организация.ТолькоПросмотр 	 =   РежимТолькоПросмотр;
	
	//	Элементы.СтатьяБюджета.ТолькоПросмотр =  РежимТолькоПросмотр;
	Элементы.ВидОперации.ТолькоПросмотр   =	 РежимТолькоПросмотр;
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.Статус.ТолькоПросмотр  = Ложь;	
	КонецЕсли;	
	
	Если Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВФилиал ИЛИ Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВКЦ Тогда
		Элементы.Группа8.Видимость = Истина;	
		
		Элементы.тчРасходы.ТолькоПросмотр     =  Ложь;
		
	Иначе	
		Элементы.Группа8.Видимость = Ложь;
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДоступныхСтатусов() Экспорт	
	
	СтруктураПараметров = Новый Структура("ЦФО, Организация, Ответственный, ТекущийСтатус, Статус");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, Объект);
	СтруктураПараметров.ТекущийСтатус = Объект.Ссылка.Статус;
	
	МассивДоступныхСтатусов = РегистрыСведений.абс_ИзменениеСтатусовРаспреденияДоходовРасходов.ПолучитьСписокДоступныхСтатусво(СтруктураПараметров, 
															глЗначениеПеременной("глТекущийПользователь"), 
															мРолиПользователя);  
															
	Если ПараметрыСеанса.абс_НастройкиСистемы.БлокироватьРучноеСогласованиеРаспределенияДоходы Тогда 	
		ОграниченныеСтатусы = Новый Массив;
		ОграниченныеСтатусы.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВФилиал);
		ОграниченныеСтатусы.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ПереводВКЦ);
        ОграниченныеСтатусы.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Исполнение);
        ОграниченныеСтатусы.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.ОбработкаБухгалтером);
		
		Для й = 1 - МассивДоступныхСтатусов.Количество() по 0 Цикл 
			Если (ОграниченныеСтатусы.Найти(МассивДоступныхСтатусов[-й]) <> Неопределено) И (МассивДоступныхСтатусов[-й] <> Объект.Статус) Тогда 
				МассивДоступныхСтатусов.Удалить(-й);
			КонецЕсли;
		КонецЦикла;	
	КонецЕсли;
																														
	Элементы.Статус.СписокВыбора.ЗагрузитьЗначения(МассивДоступныхСтатусов);
	
КонецПроцедуры

&НаСервере
Функция СпрашиватьПричинуИзмененияСтатуса()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СпрашиватьПричину = НЕ Объект.Статус = Объект.Ссылка.Статус;
	
	Возврат СпрашиватьПричину;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФайлы(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Сначало надо записать документ.");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ВладелецФайла", Объект.Ссылка);
	ОткрытьФорму("Справочник.ХранилищеДополнительнойИнформации.Форма.ФормаСпискаУправляемая", ПараметрыФормы);

	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьЭлементовФормы()
	
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаКлиенте
Процедура СтатусПриИзменении(Элемент)
	
	Если Элементы.Статус.СписокВыбора.НайтиПоЗначению(мСтатус) = Неопределено Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Выбран неверный статус документа");
		
		мСтатус = Объект.Статус;
		
		Возврат;
	КонецЕсли;
	
	Объект.Статус = мСтатус;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь"); 
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Элементы.Статус.ТолькоПросмотр = Истина;
		Объект.ПричинаИзмененияСтатуса = "";
		Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка;
		Объект.Организация			= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(мТекущийПользователь, "ОсновнаяОрганизация");
		Объект.Ответственный 		= мТекущийПользователь;
		ИсторияСтатусов.Параметры.УстановитьЗначениеПараметра("Документ",Документы.абс_РаспределяемыеДоходыРасходы.ПустаяСсылка());
		Объект.ДокументДвижений     = "";
		Объект.СформированныеДокументы.Очистить();
	Иначе	
		ИсторияСтатусов.Параметры.УстановитьЗначениеПараметра("Документ",Объект.Ссылка);
	КонецЕсли;	
	
	ЗаполнитьСписокДоступныхСтатусов();
	ЗаполнитьПодразделенияОрганизаций();
	//УстановитьОтборИзмененияСтатусов();
	мСтатус = Объект.Статус;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимостьЭлементовФормы();
	УстановитьДоступностьПоСтатусу();
	УстановитьНадписьДокументКТТК();
	ИзменитьВидимостьДоходыРасходы();
	
КонецПроцедуры


&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Объект.ПричинаИзмененияСтатуса = "";
	
	//Если Объект.Ссылка.Статус  = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка Тогда
	//	ПроверкаЗаполненияДокумента(Отказ);	
	//КонецЕсли;
	
	Если СпрашиватьПричинуИзмененияСтатуса() Тогда
		
		Если Не Отказ Тогда
			ВвестиСтроку(Объект.ПричинаИзмененияСтатуса, "Введите причину изменения статуса",,Истина);
			
			Если Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Исполнение Тогда
				СформироватьДокументДвижений();	
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьДоступностьПоСтатусу();
	ЗаполнитьСписокДоступныхСтатусов();
	УстановитьНадписьДокументКТТК();
	
	ИсторияСтатусов.Параметры.УстановитьЗначениеПараметра("Документ",Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределяемыеДоходыРасходыФилиалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элементы.Доходы.ТекущиеДанные <> Неопределено Тогда	
		СтандартнаяОбработка = Ложь;
		
		ОткрытьФорму("Документ.абс_РаспределяемыеДоходыРасходы.Форма.ФормаПодборФилиала",Новый Структура("Организация",Объект.Организация));
		
		//ФормаВыбораОрганизации.РежимВыбора = Истина;
		//
		//РезультатВыбора = ФормаВыбораОрганизации.ОткрытьМодально();
		//
		//Если РезультатВыбора = Неопределено Тогда
		//	Возврат;
		//КонецЕсли;
		//
		//Элементы.Доходы.ТекущиеДанные.Филиал = РезультатВыбора;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаспределяемыеДоходыРасходыФилиалАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если Элементы.Расходы.ТекущиеДанные <> Неопределено Тогда	
		СтандартнаяОбработка = Ложь;
		
		ОткрытьФорму("Документ.абс_РаспределяемыеДоходыРасходы.Форма.ФормаПодборФилиала",Новый Структура("Организация",Объект.Организация));
		
		//ФормаВыбораОрганизации = Справочники.Организации.ПолучитьФормуВыбора();
		//Отбор = ФормаВыбораОрганизации.Отбор.абс_СтатусОрганизации;
		//Отбор.ВидСравнения 	    = ВидСравнения.Равно;
		//Отбор.Значение 		    = Перечисления.абс_СтатусОрганизации.Филиал;
		//Отбор.Использование 	= Истина;
		//
		//ФормаВыбораОрганизации.РежимВыбора = Истина;
		//
		//РезультатВыбора = ФормаВыбораОрганизации.ОткрытьМодально();
		//
		//Если РезультатВыбора = Неопределено Тогда
		//	Возврат;
		//КонецЕсли;
		//
		//Элементы.РаспределяемыеДоходыРасходы.ТекущиеДанные.Филиал = РезультатВыбора;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаспределяемыеДоходыРасходыФилиалОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	//Если Элементы.РаспределяемыеДоходыРасходы.ТекущиеДанные <> Неопределено Тогда	
	СтандартнаяОбработка = Ложь;
	//	
	//	ФормаВыбораОрганизации = Справочники.Организации.ПолучитьФормуВыбора();
	//	Отбор = ФормаВыбораОрганизации.Отбор.абс_СтатусОрганизации;
	//	Отбор.ВидСравнения 	    = ВидСравнения.Равно;
	//	Отбор.Значение 		    = Перечисления.абс_СтатусОрганизации.Филиал;
	//	Отбор.Использование 	= Истина;
	//	
	//	ФормаВыбораОрганизации.РежимВыбора = Истина;
	//	
	//	РезультатВыбора = ФормаВыбораОрганизации.ОткрытьМодально();
	//	
	//	Если РезультатВыбора = Неопределено Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	Элементы.РаспределяемыеДоходыРасходы.ТекущиеДанные.Филиал = РезультатВыбора;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаспределяемыеРасходыФилиалНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	Если Элементы.Расходы.ТекущиеДанные <> Неопределено Тогда	
		СтандартнаяОбработка = Ложь;
		
		ОткрытьФорму("Документ.абс_РаспределяемыеДоходыРасходы.Форма.ФормаПодборФилиала",Новый Структура("Организация",Объект.Организация));

		//ФормаВыбораОрганизации = Справочники.Организации.ПолучитьФормуВыбора();
		//Отбор = ФормаВыбораОрганизации.Отбор.абс_СтатусОрганизации;
		//Отбор.ВидСравнения 	    = ВидСравнения.Равно;
		//Отбор.Значение 		    = Перечисления.абс_СтатусОрганизации.Филиал;
		//Отбор.Использование 	= Истина;
		//
		//ФормаВыбораОрганизации.РежимВыбора = Истина;
		//
		//РезультатВыбора = ФормаВыбораОрганизации.ОткрытьМодально();
		//
		//Если РезультатВыбора = Неопределено Тогда
		//	Возврат;
		//КонецЕсли;
		//
		//Элементы.Расходы.ТекущиеДанные.Филиал = РезультатВыбора;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаспределяемыеРасходыФилиалАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	Если Элементы.Расходы.ТекущиеДанные <> Неопределено Тогда	
		СтандартнаяОбработка = Ложь;
		
		ОткрытьФорму("Документ.абс_РаспределяемыеДоходыРасходы.Форма.ФормаПодборФилиала",Новый Структура("Организация",Объект.Организация));
		
		//ФормаВыбораОрганизации = Справочники.Организации.ПолучитьФормуВыбора();
		//Отбор = ФормаВыбораОрганизации.Отбор.абс_СтатусОрганизации;
		//Отбор.ВидСравнения 	    = ВидСравнения.Равно;
		//Отбор.Значение 		    = Перечисления.абс_СтатусОрганизации.Филиал;
		//Отбор.Использование 	= Истина;
		//
		//ФормаВыбораОрганизации.РежимВыбора = Истина;
		//
		//РезультатВыбора = ФормаВыбораОрганизации.ОткрытьМодально();
		//
		//Если РезультатВыбора = Неопределено Тогда
		//	Возврат;
		//КонецЕсли;
		//
		//Элементы.Расходы.ТекущиеДанные.Филиал = РезультатВыбора;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РаспределяемыеРасходыФилиалОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	//Если Элементы.РаспределяемыеДоходыРасходы.ТекущиеДанные <> Неопределено Тогда	
	СтандартнаяОбработка = Ложь;
	//	
	//	ФормаВыбораОрганизации = Справочники.Организации.ПолучитьФормуВыбора();
	//	Отбор = ФормаВыбораОрганизации.Отбор.абс_СтатусОрганизации;
	//	Отбор.ВидСравнения 	    = ВидСравнения.Равно;
	//	Отбор.Значение 		    = Перечисления.абс_СтатусОрганизации.Филиал;
	//	Отбор.Использование 	= Истина;
	//	
	//	ФормаВыбораОрганизации.РежимВыбора = Истина;
	//	
	//	РезультатВыбора = ФормаВыбораОрганизации.ОткрытьМодально();
	//	
	//	Если РезультатВыбора = Неопределено Тогда
	//		Возврат;
	//	КонецЕсли;
	//	
	//	Элементы.РаспределяемыеДоходыРасходы.ТекущиеДанные.Филиал = РезультатВыбора;
	//КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЦФОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокВыбораЦФО = Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(Объект.ЦФУ) Тогда
		
		Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
		                      |	абс_СоответствиеФЦ.Организация,
		                      |	абс_СоответствиеФЦ.ЦФО
		                      |ИЗ
		                      |	РегистрСведений.абс_СоответствиеФЦ КАК абс_СоответствиеФЦ
		                      |ГДЕ
		                      |	абс_СоответствиеФЦ.ЦФУ = &ЦФУ
		                      |	И абс_СоответствиеФЦ.Организация = &Организация");
		
		Запрос.УстановитьПараметр("ЦФУ"			, Объект.ЦФУ);
		Запрос.УстановитьПараметр("Организация"	, Объект.Организация);
		
		ВыборкаФЦ = Запрос.Выполнить().Выбрать();
		//ВыборкаФЦ = РегистрыСведений.абс_СоответствиеФЦ.Выбрать(Новый Структура("ЦФУ", ЦФУ));
		
		СписокВыбораЦФО.Очистить();
		
		Пока ВыборкаФЦ.Следующий() Цикл			
			СписокВыбораЦФО.Добавить(ВыборкаФЦ.ЦФО);
		КонецЦикла;
		
		СтандартнаяОбработка = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	
	ФормаВыбораЦФО = Справочники.Подразделения.ПолучитьФормуВыбора();
	
	Если СписокВыбораЦФО.Количество() > 0 Тогда
		
		ОтборСсылка = ФормаВыбораЦФО.Отбор.Ссылка;
		
		ОтборСсылка.ВидСравнения 	= ВидСравнения.ВСписке;
		ОтборСсылка.Значение 		= СписокВыбораЦФО;
		ОтборСсылка.Использование 	= Истина;
	КонецЕсли;
	
	ФормаВыбораЦФО.Отбор.абс_ЦФОИспользуется.Установить(Истина);
	
	//Если ЗначениеЗаполнено(Организация) Тогда
	//	ФормаВыбораЦФО.Отбор.Владелец.Установить(Организация);
	//КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ЦФО) Тогда
		// Установить выбранный ЦФО в списке
	КонецЕсли;
	
	//ФормаВыбораЦФО.Отбор.абс_ФинансовоеОбязательство.Установить(Истина);
	//ФормаВыбораЦФО.ЭлементыФормы.СправочникСписок.НастройкаОтбора.абс_ФинансовоеОбязательство.Доступность = Ложь;
	
	ФормаВыбораЦФО.РежимВыбора = Истина;
	
	РезультатВыбора = ФормаВыбораЦФО.ОткрытьМодально();
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ЦФО = РезультатВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФУНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СписокВыбораЦФУ = Новый СписокЗначений;
	
	Если ЗначениеЗаполнено(Объект.ЦФО) Тогда
		
		ВыборкаФЦ = РегистрыСведений.абс_СоответствиеФЦ.Выбрать(Новый Структура("ЦФО", Объект.ЦФО));
		
		СписокВыбораЦФУ.Очистить();
		
		Пока ВыборкаФЦ.Следующий() Цикл
			СписокВыбораЦФУ.Добавить(ВыборкаФЦ.ЦФУ);
		КонецЦикла;
		
		СтандартнаяОбработка = Ложь;
	Иначе
		Возврат;
	КонецЕсли;
	
	ФормаВыбораЦФУ = Справочники.абс_ЦФУ.ПолучитьФормуВыбора();
	
	Если СписокВыбораЦФУ.Количество() > 0 Тогда
		
		ОтборСсылка = ФормаВыбораЦФУ.Отбор.Ссылка;
		
		ОтборСсылка.ВидСравнения 	= ВидСравнения.ВСписке;
		ОтборСсылка.Значение 		= СписокВыбораЦФУ;
		ОтборСсылка.Использование 	= Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ЦФУ) Тогда
		// Установить выбранный ЦФУ в списке 
	КонецЕсли;
	
	//ФормаВыбораЦФУ.Отбор.ФинансовоеОбязательство.Установить(Истина);
	//ФормаВыбораЦФУ.ЭлементыФормы.СправочникСписок.НастройкаОтбора.ФинансовоеОбязательство.Доступность = Ложь;
	
	ФормаВыбораЦФУ.РежимВыбора = Истина;
	
	РезультатВыбора = ФормаВыбораЦФУ.ОткрытьМодально();
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ЦФУ = РезультатВыбора;
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФУПриИзменении(Элемент)
	
	Если Объект.ЦФУ <> Неопределено Тогда
		
		Если Не Объект.ЦФУ.абс_Используется Тогда
			ТекстСообщения = "Выбранный ЦФУ """ + СокрЛП(Объект.ЦФУ) + """ не используется.";
			
			Предупреждение(ТекстСообщения,10);
			
			Объект.ЦФУ = Неопределено;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Декорация1Нажатие(Элемент)
	Если ЗначениеЗаполнено(Объект.ДокументДвижений) Тогда
		ОткрытьЗначение(Объект.ДокументДвижений);
	Иначе
		Если Объект.Статус = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Исполнение Тогда
			СформироватьДокументДвижений();
			УстановитьНадписьДокументКТТК();
			
			ПараметрыЗаписи = Новый Структура("РежимЗаписи");
			ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись;
			ЭтаФорма.Записать(ПараметрыЗаписи);
			Модифицированность = Ложь;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДокументПоФилиалу(Команда)
	
	//ОткрытьФорму("Документ.абс_РаспределяемыеДоходыРасходы.Форма.ФормаПодборФилиала",,ЭтаФорма);
	СФормироватьДокументАвизо();
	//Модифицированность = Истина;
	
	ПараметрыЗаписи = Новый Структура("РежимЗаписи");
	ПараметрыЗаписи.РежимЗаписи = РежимЗаписиДокумента.Запись;
	ЭтаФорма.Записать(ПараметрыЗаписи);
	Модифицированность = Ложь;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДоходыНоменклатурнаяГруппаПриИзменении(Элемент)
	Если Элементы.Доходы.ТекущиеДанные <> Неопределено Тогда	
		Элементы.Доходы.ТекущиеДанные.КодБУ = Элементы.Доходы.ТекущиеДанные.НоменклатурнаяГруппа.Код;	
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСтатьяЗатратПриИзменении(Элемент)
	
КонецПроцедуры

&НаКлиенте
Процедура РасходыНоменклатурнаяГруппаПриИзменении(Элемент)
	// Start КТТК Ермолов Е.Л.  25.03.2015 000031830
	//Если Элементы.Расходы.ТекущиеДанные <> Неопределено Тогда	
	//	Элементы.Расходы.ТекущиеДанные.КодБУ = Элементы.Расходы.ТекущиеДанные.НоменклатурнаяГруппа.Код;	
	//КонецЕсли;
	// Stop КТТК Ермолов Е.Л.  25.03.2015
КонецПроцедуры

&НаКлиенте
Процедура РасходыСтатьяЗатратПриИзменении(Элемент)
	// Start КТТК Ермолов Е.Л.  25.03.2015 000031830
	Если Элементы.Расходы.ТекущиеДанные <> Неопределено Тогда	
		Элементы.Расходы.ТекущиеДанные.КодБУ = Элементы.Расходы.ТекущиеДанные.СтатьяЗатрат.Код;	
	КонецЕсли;
	// Stop КТТК Ермолов Е.Л.  25.03.2015
КонецПроцедуры

&НаКлиенте
Процедура СформированныеДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Элементы.СформированныеДокументы.ТекущиеДанные <> Неопределено Тогда	
		СтандартнаяОбработка = Ложь;
		ОткрытьЗначение(Элементы.СформированныеДокументы.ТекущиеДанные.Документ);
	КонецЕсли;	
КонецПроцедуры

//Печатные формы

&НаСервере
Функция ПолучитьТабличныйДокументРаспределяемыеДоходыРасходыСервер()
	Документ =  РеквизитФормыВЗначение("Объект");
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьРаспределяемыеДоходыРасходы(Документ);
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументАвизоОРаспределяемыхДоходахСервер(ОтборФилиал,ДокАвизо)
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьАвизоОРаспределяемыхДоходах(ДокАвизо,ОтборФилиал,Объект.НачальникОтделаСводнойОтчетности,ДокАвизо.Номер);
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументАвизоОРаспределяемыхРасходах(ОтборФилиал,ДокАвизо)
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьАвизоОРаспределяемыхРасходах(ДокАвизо,ОтборФилиал,Объект.НачальникОтделаСводнойОтчетности,ДокАвизо.Номер);
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументАвизоОПередаваемыхРасходахСервер(ОтборФилиал,ДокАвизо)
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьАвизоОПередаваемыхРасходах(ДокАвизо,ОтборФилиал,Объект.НачальникОтделаСводнойОтчетности);
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументВедомостьПоРаспределяемымДоходамСервер()
	Документ =  РеквизитФормыВЗначение("Объект");
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьВедомостьПоРаспределяемымДоходам(Документ);
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументВедомостьПоРаспределяемымРасходамПоБлокамСервер()
	Документ =  РеквизитФормыВЗначение("Объект");
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьВедомостьПоРаспределяемымРасходамПоБлокам(Документ);
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументСводнаяВедомостьПоРаспределяемымДоходамСервер()
	Документ =  РеквизитФормыВЗначение("Объект");
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьСводнаяВедомостьПоРаспределяемымДоходам(Документ);
КонецФункции

&НаСервере
Функция ПолучитьТабличныйДокументРаспределяемыеДоходыРасходы()
	Документ =  РеквизитФормыВЗначение("Объект");
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьРаспределяемыеДоходыРасходы(Документ);
КонецФункции

&НаКлиенте
Процедура ПечатьРаспределяемыеДоходыРасходы(Команда)
	ТабДок = ПолучитьТабличныйДокументРаспределяемыеДоходыРасходы();
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Распределяемые доходы/расходы");
КонецПроцедуры

&НаСервере
Функция ПолучитьВсеФилиалы()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	абс_РаспределяемыеДоходыРасходыСформированныеДокументы.Организация КАК Филиал
	|ИЗ
	|	Документ.абс_РаспределяемыеДоходыРасходы.СформированныеДокументы КАК абс_РаспределяемыеДоходыРасходыСформированныеДокументы
	|ГДЕ
	|	абс_РаспределяемыеДоходыРасходыСформированныеДокументы.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	абс_РаспределяемыеДоходыРасходыСформированныеДокументы.Организация";
	
	Запрос.УстановитьПараметр("Ссылка",Объект.Ссылка);	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

&НаКлиенте
Функция ЗапроситьФилиалНаПечать()
	
	ВсеФилиалы = ПолучитьВсеФилиалы();
	Филиал = ВсеФилиалы.ВыбратьСтроку("Выберите филиал для печати",);
	Если Филиал <> Неопределено Тогда	
		Возврат Филиал.Филиал; 
	Иначе
		Возврат Неопределено;
	КонецЕсли;	
КонецФункции 



&НаКлиенте
Процедура ПечатьАвизоОПередаваемыхРасходах(Команда)
	ОтборФилиал = ЗапроситьФилиалНаПечать();
	Если ОтборФилиал <> Неопределено Тогда	
		Для каждого Стр Из Объект.СформированныеДокументы Цикл
			Если Стр.Документ.ОрганизацияПриемник = ОтборФилиал Тогда	
				ТабДок = ПолучитьТабличныйДокументАвизоОПередаваемыхРасходахСервер(ОтборФилиал,Стр.Документ);
				УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Авизо о передаваемых расходах");
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьАвизоОРаспределяемыхДоходах(Команда)
	ОтборФилиал = ЗапроситьФилиалНаПечать();
	Если ОтборФилиал <> Неопределено Тогда	
		Для каждого Стр Из Объект.СформированныеДокументы Цикл
			Если Стр.Документ.ОрганизацияПриемник = ОтборФилиал Тогда	
				ТабДок = ПолучитьТабличныйДокументАвизоОРаспределяемыхДоходахСервер(ОтборФилиал,Стр.Документ);
				УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Авизо о распределяемых доходах");
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьАвизоОРаспределяемыхРасходах(Команда)
	ОтборФилиал = ЗапроситьФилиалНаПечать();
	Если ОтборФилиал <> Неопределено Тогда	
		Для каждого Стр Из Объект.СформированныеДокументы Цикл
			Если Стр.Документ.ОрганизацияПриемник = ОтборФилиал Тогда	
				ТабДок = ПолучитьТабличныйДокументАвизоОРаспределяемыхРасходах(ОтборФилиал,Стр.Документ);
				УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Авизо о распределяемых расходах");
			КонецЕсли;	
		КонецЦикла;	
	КонецЕсли;	
КонецПроцедуры



&НаКлиенте
Процедура ПечатьВедомостьПоРаспределяемымДоходам(Команда)
	ТабДок = ПолучитьТабличныйДокументВедомостьПоРаспределяемымДоходамСервер();
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Ведомость по распределяемым доходам");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьВедомостьПоРаспределяемымРасходамПоБлокам(Команда)
	ТабДок = ПолучитьТабличныйДокументВедомостьПоРаспределяемымРасходамПоБлокамСервер();
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Ведомость по распределяемымрасходам по блокам");
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСводнаяВедомостьПоРаспределяемымДоходам(Команда)
	ТабДок = ПолучитьТабличныйДокументСводнаяВедомостьПоРаспределяемымДоходамСервер();
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Сводная  ведомость по распределяемым доходам");
КонецПроцедуры

&НаКлиенте
Процедура ДоходыСтатьяБюджетаПриИзменении(Элемент)
	Если Элементы.Доходы.ТекущиеДанные <> Неопределено Тогда	
		Элементы.Доходы.ТекущиеДанные.КодУУ = Элементы.Доходы.ТекущиеДанные.СтатьяБюджета.Код;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыСтатьяБюджетаПриИзменении(Элемент)
	Если Элементы.Расходы.ТекущиеДанные <> Неопределено Тогда	
		Элементы.Расходы.ТекущиеДанные.КодУУ = Элементы.Расходы.ТекущиеДанные.СтатьяБюджета.Код;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РасходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Если Элементы.Расходы.ТекущиеДанные <> Неопределено Тогда	
			Элементы.Расходы.ТекущиеДанные.СчетКт  = ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям;
			Элементы.Расходы.ТекущиеДанные.СчетДт  = ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД;	
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ДоходыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	Если НоваяСтрока Тогда
		Если Элементы.Доходы.ТекущиеДанные <> Неопределено Тогда	
			Элементы.Доходы.ТекущиеДанные.СчетДт  =  ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям;
			Элементы.Доходы.ТекущиеДанные.СчетКт  =  ПланыСчетов.Хозрасчетный.ВыручкаНеОблагаемаяЕНВД;
		КонецЕсли;	
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Элементы.Группа1.ТекущаяСтраница = Элементы.Группа1.ПодчиненныеЭлементы.тчДоходы Тогда
		ТекущиеДанные = Элементы.Доходы.ТекущиеДанные;	
	ИначеЕсли Элементы.Группа1.ТекущаяСтраница = Элементы.Группа1.ПодчиненныеЭлементы.тчРасходы Тогда
		ТекущиеДанные =	Элементы.Расходы.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
		//Если ЗначениеЗаполнено(ТекущиеДанные.ПодразделениеПриемник) Тогда 
		//	Если ТекущиеДанные.ПодразделениеПриемник.Владелец <> Параметр Тогда 
				Если ЗначениеЗаполнено(ТекущиеДанные.Подразделение) И ЗначениеЗаполнено(ТекущиеДанные.Филиал) Тогда
					ТекущиеДанные.ПодразделениеПриемник = НайтиПодразделениеПриемник(ТекущиеДанные.Подразделение,Параметр);		
				Иначе	
					ТекущиеДанные.ПодразделениеПриемник = "";	
				КонецЕсли;
		//	КонецЕсли;
		//КонецЕсли;
		КонецЕсли;
	Иначе
		ТекущиеДанные = Неопределено; 	
	КонецЕсли;
	
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.Филиал = Параметр;
	КонецЕсли;
	
КонецПроцедуры

Процедура ИзменитьВидимостьДоходыРасходы()
	
	Если Объект.ВидОперацииРаспределния = 0 Тогда
		Элементы.тчДоходы.Видимость = Истина;
		Элементы.тчРасходы.Видимость = Ложь;
		Элементы.Группа1.ТекущаяСтраница = Элементы.Группа1.ПодчиненныеЭлементы.тчДоходы;
	Иначе	
		Элементы.тчДоходы.Видимость = Ложь;
		Элементы.тчРасходы.Видимость = Истина;
		Элементы.Группа1.ТекущаяСтраница = Элементы.Группа1.ПодчиненныеЭлементы.тчРасходы;
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	
	Если Объект.ВидОперацииРаспределния = 0 Тогда
		Объект.Расходы.Очистить();
	Иначе	
		Объект.Доходы.Очистить();     
	КонецЕсли;
	
	Объект.СуммаПоДокументу = 0;
	ИзменитьВидимостьДоходыРасходы();
	
КонецПроцедуры


&НаКлиенте
Процедура ДоходыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Объект.СуммаПоДокументу = Объект.Доходы.Итог("ОбщаяСуммаКРаспределению");	
КонецПроцедуры


&НаКлиенте
Процедура РасходыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	Объект.СуммаПоДокументу = Объект.Расходы.Итог("ОбщаяСуммаКРаспределению");
	ТекущиеДанные = Элементы.Расходы.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда	
		Если ТекущиеДанные.СчетДт  <> ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД Тогда
			ТекущиеДанные.ВидДеятельности = "";	
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура ДоходыПослеУдаления(Элемент)
	Объект.СуммаПоДокументу = Объект.Доходы.Итог("ОбщаяСуммаКРаспределению");
КонецПроцедуры


&НаКлиенте
Процедура РасходыПослеУдаления(Элемент)
	Объект.СуммаПоДокументу = Объект.Расходы.Итог("ОбщаяСуммаКРаспределению");
КонецПроцедуры


&НаКлиенте
Процедура ВариантЗаполненияПриИзменении(Элемент)
	
	Если Объект.ВариантЗаполнения = 0 Тогда
		Элементы.СуммаКРаспределению.Видимость = Истина;	
		//Элементы.Доходы.к
	Иначе	
		Элементы.СуммаКРаспределению.Видимость = Ложь;	
	КонецЕсли;	
	
КонецПроцедуры


&НаКлиенте
Процедура РасходыСуммарныйКоэффициентРаспределенияПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Расходы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ОбщаяСуммаКРаспределению = (Объект.СуммаКРаспределению * ТекущиеДанные.СуммарныйКоэффициентРаспределения) / 100;	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура РаспределяемыеДоходыРасходыСуммарныйКоэффициентРаспределенияПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Доходы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущиеДанные.ОбщаяСуммаКРаспределению = (Объект.СуммаКРаспределению * ТекущиеДанные.СуммарныйКоэффициентРаспределения) / 100;	
	КонецЕсли; 
КонецПроцедуры


&НаКлиенте
Процедура СуммаКРаспределениюПриИзменении(Элемент)
	
	Если  Объект.ВидОперацииРаспределния = 0 Тогда
		Если Объект.ВариантЗаполнения = 1 Тогда
			Для каждого Стр Из Объект.Доходы Цикл
				Стр.ОбщаяСуммаКРаспределению = (Объект.СуммаКРаспределению * Стр.СуммарныйКоэффициентРаспределения) / 100;	
			КонецЦикла;	
		КонецЕсли;
		Объект.СуммаПоДокументу = Объект.Доходы.Итог("ОбщаяСуммаКРаспределению");	
	Иначе	
		Если Объект.ВариантЗаполнения = 1 Тогда
			Для каждого Стр Из Объект.Расходы Цикл
				Стр.ОбщаяСуммаКРаспределению = (Объект.СуммаКРаспределению * Стр.СуммарныйКоэффициентРаспределения) / 100;	
			КонецЦикла;	
		КонецЕсли;
		Объект.СуммаПоДокументу = Объект.Расходы.Итог("ОбщаяСуммаКРаспределению");	
	КонецЕсли;	
	
	
КонецПроцедуры


&НаКлиенте
Процедура РасходыПодразделениеПриИзменении(Элемент)
	ТекущиеДанные = Элементы.Расходы.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда	
		Если ЗначениеЗаполнено(ТекущиеДанные.Подразделение) Тогда
			ТекущиеДанные.ПодразделениеСтр = ТекущиеДанные.Подразделение.Наименование;	
			
			Если ЗначениеЗаполнено(ТекущиеДанные.Подразделение) И ЗначениеЗаполнено(ТекущиеДанные.Филиал) Тогда
				ТекущиеДанные.ПодразделениеПриемник = НайтиПодразделениеПриемник(ТекущиеДанные.Подразделение,ТекущиеДанные.Филиал);	
			КонецЕсли;	
			
		КонецЕсли;	
	КонецЕсли;	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьНДСНаСервере()
	
	МассивКУдалению = Новый Массив;
	Для каждого Стр Из Объект.Доходы Цикл
		Если Стр.СчетДт = ПланыСчетов.Хозрасчетный.Продажи_НДС Тогда
			МассивКУдалению.Добавить(Стр);
		КонецЕсли;	
	КонецЦикла;
	
	Для каждого Стр Из МассивКУдалению Цикл
		Объект.Доходы.Удалить(Стр);
	КонецЦикла;	
	
	ТЗ =  Объект.Доходы.Выгрузить();
	Для каждого Стр Из ТЗ Цикл
		НС = Объект.Доходы.Добавить();
		ЗаполнитьЗначенияСвойств(НС,Стр);
		
		НС.СчетДт  = ПланыСчетов.Хозрасчетный.Продажи_НДС;
		НС.СчетКт  = ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям;
		
		НС.ОбщаяСуммаКРаспределению =  (НС.ОбщаяСуммаКРаспределению * 18) / 118;
		
	КонецЦикла;
	
	
КонецПроцедуры
 


&НаКлиенте
Процедура ЗаполнитьНДС(Команда)
	ЗаполнитьНДСНаСервере();	
КонецПроцедуры


&НаКлиенте
Процедура РасходыПередУдалением(Элемент, Отказ)
	Если Объект.Статус <> Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка Тогда
		Отказ = Истина;	
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура РасходыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Если Объект.Статус <> Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка Тогда
		Отказ = Истина;	
	КонецЕсли;
КонецПроцедуры


Процедура ЗаполнитьПодразделенияОрганизаций()

 	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение,
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Организация,
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций";
	
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.НайтиПоНаименованию("КТТК"));
	ТзПодразеления.Загрузить(Запрос.Выполнить().Выгрузить());

КонецПроцедуры

&НаКлиенте
Функция НайтиПодразделениеПриемник(Подразделение,Организация)
	
	Строки = ТзПодразеления.НайтиСтроки(Новый Структура("ПодразделениеОрганизации",Подразделение));
	
	Если Строки.Количество() > 0 Тогда
		
		Строки1 = ТзПодразеления.НайтиСтроки(Новый Структура("Подразделение,Организация",Строки[0].Подразделение,Организация));
		
		Если Строки1.Количество() > 0 Тогда
			Возврат Строки1[0].ПодразделениеОрганизации; 	
		КонецЕсли;
		
	КонецЕсли;
	
КонецФункции 



