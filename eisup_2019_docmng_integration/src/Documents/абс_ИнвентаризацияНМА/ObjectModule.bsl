//////////////////////////////////////////////////////////////////////////////// 
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА
//
Перем мВалютаРегламентированногоУчета Экспорт;

#Если Клиент Тогда

// Функция формирует табличный документ с печатной формой инвентаризационной 
// описи нематериальных активов.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Неопределено.
//
Функция ПечатьИНВ1а() Экспорт
	
	// Создаем колонки Таблицы итогов
	ТаблицаИтогов = Новый ТаблицаЗначений();
	ТаблицаИтогов.Колонки.Добавить("ПорядковыйНомерИтогов");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьФактическая");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьПоДаннымУчета");
	ТаблицаИтогов.Колонки.Добавить("СтоимостьФактическаяПрописью");
	
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаПодписей = Новый Структура();
	ЗаголовокРазделаПодписей.Вставить("МОЛ",                  "Лицо(а), ответственное(ые) за сохранность документов, удостоверяющих право организации на нематериальные активы:");
	ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
	ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
	ЗаголовокРазделаПодписей.Вставить("Проверяющий",          "Указанные в настоящей описи данные и расчеты проверил");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияНМА.Дата КАК Дата,
	|	ИнвентаризацияНМА.Номер КАК Номер,
	|	ИнвентаризацияНМА.Организация КАК Организация,
	|	ИнвентаризацияНМА.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
	|	ИнвентаризацияНМА.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияНМА.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияНМА.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ИнвентаризацияНМА.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияНМА.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	|ИЗ
	|	Документ.абс_ИнвентаризацияНМА КАК ИнвентаризацияНМА
	|ГДЕ
	|	ИнвентаризацияНМА.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	//АБС ИЗМЕНЕНИЕ 26447
	Если ЗначениеЗаполнено(абс_КомиссияТМЦ) Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	абс_ИнвентаризацияНМА.Ссылка,
		|	абс_ИнвентаризацияНМА.абс_КомиссияТМЦ
		|ПОМЕСТИТЬ ДанныеДокумента
		|ИЗ
		|	Документ.абс_ИнвентаризацияНМА КАК абс_ИнвентаризацияНМА
		|ГДЕ
		|	абс_ИнвентаризацияНМА.Ссылка = &Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КомиссияТМЦЧленыКомиссии.Председатель,
		|	КомиссияТМЦЧленыКомиссии.ЧленКомиссии КАК ФизЛицо
		|ИЗ
		|	ДанныеДокумента КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КомиссияТМЦ.ЧленыКомиссии КАК КомиссияТМЦЧленыКомиссии
		|		ПО ДанныеДокумента.абс_КомиссияТМЦ = КомиссияТМЦЧленыКомиссии.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	КомиссияТМЦЧленыКомиссии.НомерСтроки";
	Иначе
		//\\АБС ИЗМЕНЕНИЕ 26447 КОНЕЦ
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.ФизЛицо КАК ФизЛицо,
		|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.Председатель КАК Председатель
		|ИЗ
		|	Документ.абс_ИнвентаризацияНМА.ИнвентаризационнаяКомиссия КАК ИнвентаризацияНМАИнвентаризационнаяКомиссия
		|ГДЕ
		|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.НомерСтроки";
		
	КонецЕсли;
	
	ТаблицаИнвентаризационнаяКомиссия = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Дата",        Док.Дата);
	Запрос.Текст = 
	//АБС ИЗМЕНЕНИЕ 26447 Дата постановки на учет
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияНМАНМА.НомерСтроки КАК НомерСтроки,
	|	ИнвентаризацияНМАНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияНМАНМА.НематериальныйАктив.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ИнвентаризацияНМАНМА.НематериальныйАктив.Наименование
	|		ИНАЧЕ ИнвентаризацияНМАНМА.НематериальныйАктив.НаименованиеПолное
	|	КОНЕЦ КАК НематериальныйАктивНаименованиеПолное,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив.Код КАК КодНМА,
	|	ИнвентаризацияНМАНМА.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
	|	ИнвентаризацияНМАНМА.СтоимостьФактическая КАК СтоимостьФактическая,
	|	СостоянияНМАОрганизацийСрезПоследних.Период КАК ДатаПостановкиНаУчет
	|ИЗ
	|	Документ.абс_ИнвентаризацияНМА.НМА КАК ИнвентаризацияНМАНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				Организация = &Организация
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							ИнвентаризацияНМАНМА.НематериальныйАктив
	|						ИЗ
	|							Документ.абс_ИнвентаризацияНМА.НМА КАК ИнвентаризацияНМАНМА
	|						ГДЕ
	|							ИнвентаризацияНМАНМА.Ссылка = &Ссылка)) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	|		ПО ИнвентаризацияНМАНМА.НематериальныйАктив = ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияНМАОрганизаций.СрезПоследних(
	|				&Дата,
	|				Организация = &Организация
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							ИнвентаризацияНМАНМА.НематериальныйАктив
	|						ИЗ
	|							Документ.абс_ИнвентаризацияНМА.НМА КАК ИнвентаризацияНМАНМА
	|						ГДЕ
	|							ИнвентаризацияНМАНМА.Ссылка = &Ссылка)
	|					И Состояние = ЗНАЧЕНИЕ(Перечисление.ВидыСостоянийНМА.ПринятКУчету)) КАК СостоянияНМАОрганизацийСрезПоследних
	|		ПО ИнвентаризацияНМАНМА.НематериальныйАктив = СостоянияНМАОрганизацийСрезПоследних.НематериальныйАктив
	|ГДЕ
	|	ИнвентаризацияНМАНМА.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	ТаблицаНМА = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("ИНВ1а");
	
	// Получаем области макета для вывода в табличный документ
	Шапка            = Макет.ПолучитьОбласть("Шапка");
	Расписка         = Макет.ПолучитьОбласть("Расписка");
	Подпись          = Макет.ПолучитьОбласть("Подпись");
	ПолеДаты         = Макет.ПолучитьОбласть("ПолеДаты");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");	
	ИтогоПоОписи     = Макет.ПолучитьОбласть("ИтогоПоОписи");
	Итоги            = Макет.ПолучитьОбласть("Итоги");	
	Подсчеты         = Макет.ПолучитьОбласть("Подсчеты");	
	Претензии        = Макет.ПолучитьОбласть("Претензии");	
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНМА_ИНВ1а";

	//////////////////////////////////////////////////////////////////////
	// 1-я страница формы
	
	// Выведем шапку документа
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	Шапка.Параметры.Заполнить(Док);
	Шапка.Параметры.Организация          = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	Шапка.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.Подразделение        = Док.ПодразделениеПредставление;
	Шапка.Параметры.Местонахождение      = Док.ПодразделениеПредставление;
	
	Шапка.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(Док);
	Шапка.Параметры.ДатаДокумента  = Док.Дата;
	
	ТабДокумент.Вывести(Шапка);
	
	// Выведем расписку МОЛов 
	ТабДокумент.Вывести(Расписка);
	
	// Выведем подпись МОЛа
	ВыводитьЗаголовок  = Истина; // Флаг вывода заголовка набора подписей
	
	ДанныеМОЛа = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, МОЛ.ФизЛицо, Док.Дата);
	Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
	Подпись.Параметры.Должность                = МОЛ.Должность;
	Подпись.Параметры.РасшифровкаПодписи       = ДанныеМОЛа.Представление;
	
	ТабДокумент.Вывести(Подпись);
		
	ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
		
	Для Итератор = 2 По 3 Цикл
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		ЗаголовокРазделаПодписей.МОЛ,
		"");
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	
	// Выведем разрыв страницы
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//////////////////////////////////////////////////////////////////////
	// 2-я страница формы
	
	// Выведем заголовок таблицы	
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	ПорядковыйНомерИтогов = 1; // счетчик количества итоговых строк в таблице
	
	СтоимостьФактическаяПоСтранице        = 0;
	СтоимостьПоДаннымУчетаПоСтранице      = 0;
	КоличествоПорядковыхНомеровНаСтранице = 0;
	
	// Выведем строки таблицы
	Для Каждого СтрокаНМА Из ТаблицаНМА Цикл
		
		СтрокаТаблицы   = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		СтрокаТаблицы.Параметры.Заполнить(СтрокаНМА);
		
		// Присвоим имена с номерами строк областям таблицы.
		// Номера потребуются для включения/отключения видимости значений в ячейках.
		СтрокаТаблицы.Области.СтоимостьФактическая.Имя   = "СтоимостьФактическая" + СтрокаНМА.НомерСтроки;
		СтрокаТаблицы.Области.СтоимостьПоДаннымУчета.Имя = "СтоимостьПоДаннымУчета" + СтрокаНМА.НомерСтроки;
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ИтогоПоСтранице);
		СтрокаСПодвалом.Добавить(Итоги);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			// Присвоим имена с порядковыми номерами итогов областям таблицы.
			// Номера потребуются для включения/отключения видимости значений в ячейках.
			ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   = "ИтогСтоимостьФактическая" + ПорядковыйНомерИтогов;
			ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя = "ИтогСтоимостьПоДаннымУчета" + ПорядковыйНомерИтогов;
			
			// Выведем заголовок итогов по странице
			ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   = СтоимостьФактическаяПоСтранице;
			ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета = СтоимостьПоДаннымУчетаПоСтранице;
			
			ТабДокумент.Вывести(ИтогоПоСтранице);
			
			Итоги = Макет.ПолучитьОбласть("Итоги");	
			
			// Присвоим имена с порядковыми номерами итогов областям таблицы.
			// Номера потребуются для включения/отключения видимости значений в ячейках.
			Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописью" + ПорядковыйНомерИтогов;
			
			СтоимостьФактическаяПрописью  = ЧислоПрописью(СтоимостьФактическаяПоСтранице,, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
			
			// Выведем итоговые строки
			Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
			Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
			
			ТабДокумент.Вывести(Итоги);
			
			// Добавим значения итогов по странице в таблицу итогов.
			// Они потребуются при включении видимости значений ячеек.
			НоваяСтрока = ТаблицаИтогов.Добавить();
			НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
			НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
			НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
			НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
			
			ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Выведем заголовок таблицы	
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
			СтоимостьФактическаяПоСтранице        = 0;
			СтоимостьПоДаннымУчетаПоСтранице      = 0;
			КоличествоПорядковыхНомеровНаСтранице = 0;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
		СтоимостьФактическаяПоСтранице        = СтоимостьФактическаяПоСтранице + СтрокаНМА.СтоимостьФактическая;
		СтоимостьПоДаннымУчетаПоСтранице      = СтоимостьПоДаннымУчетаПоСтранице + СтрокаНМА.СтоимостьПоДаннымУчета;
		КоличествоПорядковыхНомеровНаСтранице = КоличествоПорядковыхНомеровНаСтранице + 1;
		
	КонецЦикла;		
	
	ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   = "ИтогСтоимостьФактическая" + ПорядковыйНомерИтогов;
	ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя = "ИтогСтоимостьПоДаннымУчета" + ПорядковыйНомерИтогов;
	
	// Выведем заголовок итогов по странице
	ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   = СтоимостьФактическаяПоСтранице;
	ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета = СтоимостьПоДаннымУчетаПоСтранице;
			
	ТабДокумент.Вывести(ИтогоПоСтранице);
	
	Итоги = Макет.ПолучитьОбласть("Итоги");	
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописью" + ПорядковыйНомерИтогов;
	
	СтоимостьФактическаяПрописью  = ЧислоПрописью(СтоимостьФактическаяПоСтранице,, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	// Выведем итоговые строки
	Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
	Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
	
	ТабДокумент.Вывести(Итоги);
	
	// Добавим значения итогов по странице в таблицу итогов.
	// Они потребуются при включении видимости значений ячеек.
	НоваяСтрока = ТаблицаИтогов.Добавить();
	НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
	НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
	НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
	НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
	
	ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
	
	// Выведем разрыв страницы
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//////////////////////////////////////////////////////////////////////
	// 3-я страница формы
	
	// Выведем заголовок итогов по описи
	ТабДокумент.Вывести(ИтогоПоОписи);
	
	Итоги = Макет.ПолучитьОбласть("Итоги");	
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописьюПоОписи";
	
	// Выведем итоговые строки
	Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(ТаблицаНМА.Количество(),, ",,,м,,,,,0");
	Итоги.Параметры.СтоимостьФактическаяПрописью        = ЧислоПрописью(ТаблицаНМА.Итог("СтоимостьФактическая"),, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	ТабДокумент.Вывести(Итоги);
	
	// Выведем фразу о подсчетах
	ТабДокумент.Вывести(Подсчеты);
	
	// Выведем подпись председателя инвентаризационной комиссии
	ТаблицаИнвентаризационнаяКомиссия.Индексы.Добавить("Председатель");
	ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
	
	Если НЕ (ПредседательКомиссии = Неопределено) Тогда
		
		ДанныеПредседателя = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, ПредседательКомиссии.ФизЛицо, Док.Дата);
			
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = ДанныеПредседателя.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
		
	Иначе
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
	КонецЕсли;
		
	ТабДокумент.Вывести(Подпись);
	
	// Выведем подписи членов комиссии
	ВыводитьЗаголовок = Истина;
	
	КоличествоЧленовКомиссии = 0;
	
	// Сначала выведем членов комиссии из выборки
	Для Каждого ЧленКомиссии Из ТаблицаИнвентаризационнаяКомиссия Цикл
		
		Если ЧленКомиссии.Председатель Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
		
		ДанныеЧленаКомиссии = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, ЧленКомиссии.ФизЛицо, Док.Дата);

		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
													   "");
		Подпись.Параметры.Должность                = ДанныеЧленаКомиссии.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ДанныеЧленаКомиссии.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если КоличествоЧленовКомиссии < 3 Тогда
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Для Итератор = (КоличествоЧленовКомиссии + 1) По 3 Цикл
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
														   "");
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	// Перед выводом следующего набора подписей, нужно проверить, поместится ли он
	// на страницу целиком. Если нет, нужно начать вывод со следующей страницы.
	
	// Создаем массив строк для проверки, помещаются ли они на страницу
	СтрокаСПодвалом = Новый Массив;
	СтрокаСПодвалом.Добавить(Претензии);
	//Для Итератор = 1 По ДанныеМОЛ.Количество() Цикл
	//	СтрокаСПодвалом.Добавить(Подпись);
	//КонецЦикла;
	СтрокаСПодвалом.Добавить(ПолеДаты);
	СтрокаСПодвалом.Добавить(Подпись);
	СтрокаСПодвалом.Добавить(ПолеДаты);
	
	// Если планируемый набор подписей не помещается, начинаем новую страницу
	Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	// Выведем раздел об отсутствии претензий МОЛов
	Если ТаблицаНМА.Количество() > 0 Тогда
		Претензии.Параметры.НомерСтрокиНачальный = ТаблицаНМА[0].НомерСтроки;
		Претензии.Параметры.НомерСтрокиКонечный  = ТаблицаНМА[ТаблицаНМА.Количество() - 1].НомерСтроки;
	Иначе	
		Претензии.Параметры.НомерСтрокиНачальный = "______";
		Претензии.Параметры.НомерСтрокиКонечный  = "______";
	КонецЕсли;
	
	ТабДокумент.Вывести(Претензии);
	
	// Выведем подпись МОЛа
	ВыводитьЗаголовок  = Истина; // Флаг вывода заголовка набора подписей
	
	ДанныеМОЛа = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, МОЛ.ФизЛицо, Док.Дата);
	Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
	Подпись.Параметры.Должность                = МОЛ.Должность;
	Подпись.Параметры.РасшифровкаПодписи       = ДанныеМОЛа.Представление;
	
	ТабДокумент.Вывести(Подпись);
	
	ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	
	Для Итератор = 2 По 3 Цикл
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		ЗаголовокРазделаПодписей.МОЛ,
		"");
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Выведем строку с полем для заполнения даты
	ПолеДаты.Параметры.Дата = Формат(Док.Дата, "ДЛФ=DD");
	ТабДокумент.Вывести(ПолеДаты);
	
	// Проверим, поместится ли проверяющий, если нет, то начнем новую страницу
	ПодписьСДатой = Новый Массив;
	ПодписьСДатой.Добавить(Подпись);
	ПодписьСДатой.Добавить(ПолеДаты);
	
	Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ПодписьСДатой) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
	КонецЕсли;
	
	// Выведем подпись проверяющего
	Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.Проверяющий;
		
	ТабДокумент.Вывести(Подпись);
	
	// Выведем строку с полем для заполнения даты
	ПолеДаты.Параметры.Дата = """______"" ___________________________ _______ г.";
	ТабДокумент.Вывести(ПолеДаты);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьИНВ1()

Функция ПечатьИНВ3_Старый()//до задачи 31529 /02.09.13

	
	// Создаем колонки Таблицы итогов
	ТаблицаИтогов = Новый ТаблицаЗначений();
	ТаблицаИтогов.Колонки.Добавить("ПорядковыйНомерИтогов");
	ТаблицаИтогов.Колонки.Добавить("ИтогНаличиеФактическое");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьФактическая");
	ТаблицаИтогов.Колонки.Добавить("ИтогНаличиеПоДаннымУчета");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьПоДаннымУчета");
	ТаблицаИтогов.Колонки.Добавить("КоличествоФактическоеПрописью");
	ТаблицаИтогов.Колонки.Добавить("СтоимостьФактическаяПрописью");
	
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаПодписей = Новый Структура();
	ЗаголовокРазделаПодписей.Вставить("МОЛ",                  "Лицо(а), ответственное(ые) за сохранность товарно-материальных ценностей:");
	ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
	ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
	ЗаголовокРазделаПодписей.Вставить("Проверяющий",          "Указанные в настоящей описи данные и расчеты проверил");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияНМА.Дата КАК Дата,
	|	ИнвентаризацияНМА.Номер КАК Номер,
	|	ИнвентаризацияНМА.Организация КАК Организация,
	|	ИнвентаризацияНМА.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
	|	ИнвентаризацияНМА.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияНМА.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияНМА.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ИнвентаризацияНМА.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияНМА.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	|ИЗ
	|	Документ.абс_ИнвентаризацияНМА КАК ИнвентаризацияНМА
	|ГДЕ
	|	ИнвентаризацияНМА.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.ФизЛицо КАК ФизЛицо,
	|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.Председатель КАК Председатель
	|ИЗ
	|	Документ.абс_ИнвентаризацияНМА.ИнвентаризационнаяКомиссия КАК ИнвентаризацияНМАИнвентаризационнаяКомиссия
	|ГДЕ
	|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияНМАИнвентаризационнаяКомиссия.НомерСтроки";
	
	ТаблицаИнвентаризационнаяКомиссия = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Дата",        Док.Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияНМАНМА.НомерСтроки КАК НомерСтроки,
	|	ИнвентаризацияНМАНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияНМАНМА.НематериальныйАктив.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ИнвентаризацияНМАНМА.НематериальныйАктив.Наименование
	|		ИНАЧЕ ИнвентаризацияНМАНМА.НематериальныйАктив.НаименованиеПолное
	|	КОНЕЦ КАК НематериальныйАктивНаименованиеПолное,
	|	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив.Код КАК КодНМА,
	|	ИнвентаризацияНМАНМА.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
	|	ИнвентаризацияНМАНМА.СтоимостьФактическая КАК СтоимостьФактическая,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияНМАНМА.НаличиеФактическое = ИСТИНА
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НаличиеФактическое,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияНМАНМА.НаличиеПоДаннымУчета = ИСТИНА
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НаличиеПоДаннымУчета
	|ИЗ
	|	Документ.абс_ИнвентаризацияНМА.НМА КАК ИнвентаризацияНМАНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	|				&Дата,
	|				Организация = &Организация
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							ИнвентаризацияНМАНМА.НематериальныйАктив
	|						ИЗ
	|							Документ.абс_ИнвентаризацияНМА.НМА КАК ИнвентаризацияНМАНМА
	|						ГДЕ
	|							ИнвентаризацияНМАНМА.Ссылка = &Ссылка)) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	|		ПО ИнвентаризацияНМАНМА.НематериальныйАктив = ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	|ГДЕ
	|	ИнвентаризацияНМАНМА.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	ТаблицаНМА = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("ИНВ3");
	
	// Получаем области макета для вывода в табличный документ
	Шапка            = Макет.ПолучитьОбласть("Шапка");
	Расписка         = Макет.ПолучитьОбласть("Расписка");
	Подпись          = Макет.ПолучитьОбласть("Подпись");
	ПолеДаты         = Макет.ПолучитьОбласть("ПолеДаты");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");	
	ИтогоПоОписи     = Макет.ПолучитьОбласть("ИтогоПоОписи");
	Итоги            = Макет.ПолучитьОбласть("Итоги");	
	Подсчеты         = Макет.ПолучитьОбласть("Подсчеты");	
	Претензии        = Макет.ПолучитьОбласть("Претензии");	
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНМА_ИНВ3";

	//////////////////////////////////////////////////////////////////////
	// 1-я страница формы
	
	// Выведем шапку документа
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	Шапка.Параметры.Заполнить(Док);
	Шапка.Параметры.Организация          = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	Шапка.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.РежимСобственности   = "в собственности";
	Шапка.Параметры.Подразделение        = Док.ПодразделениеПредставление;
	Шапка.Параметры.Местонахождение      = Док.ПодразделениеПредставление;
	
	Шапка.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(Док);
	Шапка.Параметры.ДатаДокумента  = Док.Дата;
	
	ТабДокумент.Вывести(Шапка);
	
	// Выведем расписку МОЛов 
	ТабДокумент.Вывести(Расписка);
	
	// Выведем подпись МОЛа
	ВыводитьЗаголовок  = Истина; // Флаг вывода заголовка набора подписей
	
	ДанныеМОЛа = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, МОЛ.ФизЛицо, Док.Дата);
	Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
	Подпись.Параметры.Должность                = МОЛ.Должность;
	Подпись.Параметры.РасшифровкаПодписи       = ДанныеМОЛа.Представление;
	
	ТабДокумент.Вывести(Подпись);
	
	ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	
	Для Итератор = 2 По 3 Цикл
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		ЗаголовокРазделаПодписей.МОЛ,
		"");
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Выведем разрыв страницы
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//////////////////////////////////////////////////////////////////////
	// 2-я страница формы
	
	// Выведем заголовок таблицы	
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	ПорядковыйНомерИтогов = 1; // счетчик количества итоговых строк в таблице
	
	НаличиеФактическоеПоСтранице          = 0;
	СтоимостьФактическаяПоСтранице        = 0;
	НаличиеПоДаннымУчетаПоСтранице        = 0;
	СтоимостьПоДаннымУчетаПоСтранице      = 0;
	КоличествоПорядковыхНомеровНаСтранице = 0;
	
	// Выведем строки таблицы
	Для Каждого СтрокаНМА Из ТаблицаНМА Цикл
		
		СтрокаТаблицы   = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		СтрокаТаблицы.Параметры.Заполнить(СтрокаНМА);
		
		// Присвоим имена с номерами строк областям таблицы.
		// Номера потребуются для включения/отключения видимости значений в ячейках.
		СтрокаТаблицы.Области.НаличиеФактическое.Имя     = "НаличиеФактическое" + СтрокаНМА.НомерСтроки;
		СтрокаТаблицы.Области.СтоимостьФактическая.Имя   = "СтоимостьФактическая" + СтрокаНМА.НомерСтроки;
		СтрокаТаблицы.Области.НаличиеПоДаннымУчета.Имя   = "НаличиеПоДаннымУчета" + СтрокаНМА.НомерСтроки;
		СтрокаТаблицы.Области.СтоимостьПоДаннымУчета.Имя = "СтоимостьПоДаннымУчета" + СтрокаНМА.НомерСтроки;
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ИтогоПоСтранице);
		СтрокаСПодвалом.Добавить(Итоги);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			// Присвоим имена с порядковыми номерами итогов областям таблицы.
			// Номера потребуются для включения/отключения видимости значений в ячейках.
			ИтогоПоСтранице.Области.ИтогНаличиеФактическое.Имя     = "ИтогНаличиеФактическое" + ПорядковыйНомерИтогов;
			ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   = "ИтогСтоимостьФактическая" + ПорядковыйНомерИтогов;
			ИтогоПоСтранице.Области.ИтогНаличиеПоДаннымУчета.Имя   = "ИтогНаличиеПоДаннымУчета" + ПорядковыйНомерИтогов;
			ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя = "ИтогСтоимостьПоДаннымУчета" + ПорядковыйНомерИтогов;
			
			// Выведем заголовок итогов по странице
			ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   = СтоимостьФактическаяПоСтранице;
			ИтогоПоСтранице.Параметры.ИтогНаличиеФактическое     = НаличиеФактическоеПоСтранице;
			ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета = СтоимостьПоДаннымУчетаПоСтранице;
			ИтогоПоСтранице.Параметры.ИтогНаличиеПоДаннымУчета   = НаличиеПоДаннымУчетаПоСтранице;
			
			ТабДокумент.Вывести(ИтогоПоСтранице);
			
			Итоги = Макет.ПолучитьОбласть("Итоги");	
			
			// Присвоим имена с порядковыми номерами итогов областям таблицы.
			// Номера потребуются для включения/отключения видимости значений в ячейках.
			Итоги.Области.КоличествоФактическоеПрописью.Имя   = "КоличествоФактическоеПрописью" + ПорядковыйНомерИтогов;
			Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописью" + ПорядковыйНомерИтогов;
			
			КоличествоФактическоеПрописью = ЧислоПрописью(НаличиеФактическоеПоСтранице,, ",,,ж,,,,,0");
			СтоимостьФактическаяПрописью  = ЧислоПрописью(СтоимостьФактическаяПоСтранице,, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
			
			// Выведем итоговые строки
			Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
			Итоги.Параметры.КоличествоФактическоеПрописью       = КоличествоФактическоеПрописью;
			Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
			
			ТабДокумент.Вывести(Итоги);
			
			// Добавим значения итогов по странице в таблицу итогов.
			// Они потребуются при включении видимости значений ячеек.
			НоваяСтрока = ТаблицаИтогов.Добавить();
			НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
			НоваяСтрока.ИтогНаличиеФактическое        = НаличиеФактическоеПоСтранице;
			НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
			НоваяСтрока.ИтогНаличиеПоДаннымУчета      = НаличиеПоДаннымУчетаПоСтранице;
			НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
			НоваяСтрока.КоличествоФактическоеПрописью = КоличествоФактическоеПрописью;
			НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
			
			ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Выведем заголовок таблицы	
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
			НаличиеФактическоеПоСтранице          = 0;
			СтоимостьФактическаяПоСтранице        = 0;
			НаличиеПоДаннымУчетаПоСтранице        = 0;
			СтоимостьПоДаннымУчетаПоСтранице      = 0;
			КоличествоПорядковыхНомеровНаСтранице = 0;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
		НаличиеФактическоеПоСтранице          = НаличиеФактическоеПоСтранице + СтрокаНМА.НаличиеФактическое;
		СтоимостьФактическаяПоСтранице        = СтоимостьФактическаяПоСтранице + СтрокаНМА.СтоимостьФактическая;
		НаличиеПоДаннымУчетаПоСтранице        = НаличиеПоДаннымУчетаПоСтранице + СтрокаНМА.НаличиеПоДаннымУчета;
		СтоимостьПоДаннымУчетаПоСтранице      = СтоимостьПоДаннымУчетаПоСтранице + СтрокаНМА.СтоимостьПоДаннымУчета;
		КоличествоПорядковыхНомеровНаСтранице = КоличествоПорядковыхНомеровНаСтранице + 1;
		
	КонецЦикла;		
	
	ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	ИтогоПоСтранице.Области.ИтогНаличиеФактическое.Имя     = "ИтогНаличиеФактическое" + ПорядковыйНомерИтогов;
	ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   = "ИтогСтоимостьФактическая" + ПорядковыйНомерИтогов;
	ИтогоПоСтранице.Области.ИтогНаличиеПоДаннымУчета.Имя   = "ИтогНаличиеПоДаннымУчета" + ПорядковыйНомерИтогов;
	ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя = "ИтогСтоимостьПоДаннымУчета" + ПорядковыйНомерИтогов;
	
	// Выведем заголовок итогов по странице
	ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   = СтоимостьФактическаяПоСтранице;
	ИтогоПоСтранице.Параметры.ИтогНаличиеФактическое     = НаличиеФактическоеПоСтранице;
	ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета = СтоимостьПоДаннымУчетаПоСтранице;
	ИтогоПоСтранице.Параметры.ИтогНаличиеПоДаннымУчета   = НаличиеПоДаннымУчетаПоСтранице;
			
	ТабДокумент.Вывести(ИтогоПоСтранице);
	
	Итоги = Макет.ПолучитьОбласть("Итоги");	
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	Итоги.Области.КоличествоФактическоеПрописью.Имя   = "КоличествоФактическоеПрописью" + ПорядковыйНомерИтогов;
	Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописью" + ПорядковыйНомерИтогов;
	
	КоличествоФактическоеПрописью = ЧислоПрописью(НаличиеФактическоеПоСтранице,, ",,,ж,,,,,0");
	СтоимостьФактическаяПрописью  = ЧислоПрописью(СтоимостьФактическаяПоСтранице,, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	// Выведем итоговые строки
	Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
	Итоги.Параметры.КоличествоФактическоеПрописью       = КоличествоФактическоеПрописью;
	Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
	
	ТабДокумент.Вывести(Итоги);
	
	// Добавим значения итогов по странице в таблицу итогов.
	// Они потребуются при включении видимости значений ячеек.
	НоваяСтрока = ТаблицаИтогов.Добавить();
	НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
	НоваяСтрока.ИтогНаличиеФактическое        = НаличиеФактическоеПоСтранице;
	НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
	НоваяСтрока.ИтогНаличиеПоДаннымУчета      = НаличиеПоДаннымУчетаПоСтранице;
	НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
	НоваяСтрока.КоличествоФактическоеПрописью = КоличествоФактическоеПрописью;
	НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
	
	ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
	
	// Выведем разрыв страницы
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//////////////////////////////////////////////////////////////////////
	// 3-я страница формы
	
	// Выведем заголовок итогов по описи
	ТабДокумент.Вывести(ИтогоПоОписи);
	
	Итоги = Макет.ПолучитьОбласть("Итоги");	
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	Итоги.Области.КоличествоФактическоеПрописью.Имя   = "КоличествоФактическоеПрописьюПоОписи";
	Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописьюПоОписи";
	
	// Выведем итоговые строки
	Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(ТаблицаНМА.Количество(),, ",,,м,,,,,0");
	Итоги.Параметры.КоличествоФактическоеПрописью       = ЧислоПрописью(ТаблицаНМА.Итог("НаличиеФактическое"),, ",,,ж,,,,,0");
	Итоги.Параметры.СтоимостьФактическаяПрописью        = ЧислоПрописью(ТаблицаНМА.Итог("СтоимостьФактическая"),, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	ТабДокумент.Вывести(Итоги);
	
	// Выведем фразу о подсчетах
	ТабДокумент.Вывести(Подсчеты);
	
	// Выведем подпись председателя инвентаризационной комиссии
	ТаблицаИнвентаризационнаяКомиссия.Индексы.Добавить("Председатель");
	ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
	
	Если НЕ (ПредседательКомиссии = Неопределено) Тогда
		
		ДанныеПредседателя = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, ПредседательКомиссии.ФизЛицо, Док.Дата);
			
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = ДанныеПредседателя.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
		
	Иначе
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
	КонецЕсли;
		
	ТабДокумент.Вывести(Подпись);
	
	// Выведем подписи членов комиссии
	ВыводитьЗаголовок = Истина;
	
	КоличествоЧленовКомиссии = 0;
	
	// Сначала выведем членов комиссии из выборки
	Для Каждого ЧленКомиссии Из ТаблицаИнвентаризационнаяКомиссия Цикл
		
		Если ЧленКомиссии.Председатель Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
		
		ДанныеЧленаКомиссии = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, ЧленКомиссии.ФизЛицо, Док.Дата);

		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
													   "");
		Подпись.Параметры.Должность                = ДанныеЧленаКомиссии.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ДанныеЧленаКомиссии.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если КоличествоЧленовКомиссии < 3 Тогда
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Для Итератор = (КоличествоЧленовКомиссии + 1) По 3 Цикл
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
														   "");
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	// Перед выводом следующего набора подписей, нужно проверить, поместится ли он
	// на страницу целиком. Если нет, нужно начать вывод со следующей страницы.
	
	// Создаем массив строк для проверки, помещаются ли они на страницу
	СтрокаСПодвалом = Новый Массив;
	СтрокаСПодвалом.Добавить(Претензии);
	//Для Итератор = 1 По ДанныеМОЛ.Количество() Цикл
	//	СтрокаСПодвалом.Добавить(Подпись);
	//КонецЦикла;
	СтрокаСПодвалом.Добавить(ПолеДаты);
	СтрокаСПодвалом.Добавить(Подпись);
	СтрокаСПодвалом.Добавить(ПолеДаты);
	
	// Если планируемый набор подписей не помещается, начинаем новую страницу
	Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	// Выведем раздел об отсутствии претензий МОЛов
	Если ТаблицаНМА.Количество() > 0 Тогда
		Претензии.Параметры.НомерСтрокиНачальный = ТаблицаНМА[0].НомерСтроки;
		Претензии.Параметры.НомерСтрокиКонечный  = ТаблицаНМА[ТаблицаНМА.Количество() - 1].НомерСтроки;
	Иначе	
		Претензии.Параметры.НомерСтрокиНачальный = "______";
		Претензии.Параметры.НомерСтрокиКонечный  = "______";
	КонецЕсли;
	
	ТабДокумент.Вывести(Претензии);
	
	// Выведем подпись МОЛа
	ВыводитьЗаголовок  = Истина; // Флаг вывода заголовка набора подписей
	
	ДанныеМОЛа = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, МОЛ.ФизЛицо, Док.Дата);
	Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, ЗаголовокРазделаПодписей.МОЛ, "");
	Подпись.Параметры.Должность                = МОЛ.Должность;
	Подпись.Параметры.РасшифровкаПодписи       = ДанныеМОЛа.Представление;
	
	ТабДокумент.Вывести(Подпись);
	
	ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	
	Для Итератор = 2 По 3 Цикл
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		ЗаголовокРазделаПодписей.МОЛ,
		"");
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Выведем строку с полем для заполнения даты
	ПолеДаты.Параметры.Дата = Формат(Док.Дата, "ДЛФ=DD");
	ТабДокумент.Вывести(ПолеДаты);
	
	// Проверим, поместится ли проверяющий, если нет, то начнем новую страницу
	ПодписьСДатой = Новый Массив;
	ПодписьСДатой.Добавить(Подпись);
	ПодписьСДатой.Добавить(ПолеДаты);
	
	Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ПодписьСДатой) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
	КонецЕсли;
	
	// Выведем подпись проверяющего
	Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.Проверяющий;
		
	ТабДокумент.Вывести(Подпись);
	
	// Выведем строку с полем для заполнения даты
	ПолеДаты.Параметры.Дата = """______"" ___________________________ _______ г.";
	ТабДокумент.Вывести(ПолеДаты);
	
	Возврат ТабДокумент;
		
КонецФункции // Напечатать 

//АБС ВСТАВКА 31529 - макет по форме Инвентаризации товаров на складе

Функция ПечатьИНВ3(БезФактическихДанных = Ложь)

	//ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	//Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
	//	ТоварКод = "Артикул";
	//Иначе
	//	ТоварКод = "Код";
	//КонецЕсли;

	ДолжностьМОЛ1 = "";
	ФИОМОЛ1 = "";
	Если ЗначениеЗаполнено(МОЛ) Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		               |	РаботникиОрганизацийСрезПоследних.Должность,
		               |	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо
		               |ИЗ
		               |	РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, ) КАК РаботникиОрганизацийСрезПоследних
		               |ГДЕ
		               |	РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо = &Физлицо";
		Запрос.УстановитьПараметр("Физлицо",МОЛ.Физлицо);
		Запрос.УстановитьПараметр("Дата",Дата);
		ВыборкаМол = Запрос.Выполнить().Выбрать();
		ВыборкаМол.Следующий();
		ДолжностьМОЛ1 = ВыборкаМол.Должность;
		ФИОМОЛ1 = МОЛ;
	КонецЕсли; 
	
	//Если Склад.ВидСклада = Перечисления.ВидыСкладов.НТТ Тогда
	ВалютаПересчета = мВалютаРегламентированногоУчета;
	//Иначе
	//	ВалютаПересчета = мВалютаУпрУчета;
	//КонецЕсли;

	ВалютаПечати = мВалютаРегламентированногоУчета;
	Параметры    = МодульВалютногоУчета.ПолучитьКурсВалюты(ВалютаПересчета, Дата);
	Запрос       = Новый Запрос;

	Запрос.УстановитьПараметр("ТекущийДокумент",      ЭтотОбъект.Ссылка);
	Запрос.УстановитьПараметр("Курс",                 Параметры.Курс);
	Запрос.УстановитьПараметр("Кратность",            Параметры.Кратность);
	Запрос.УстановитьПараметр("ВидСкладаНТТ",         Перечисления.ВидыСкладов.НТТ);
	Запрос.УстановитьПараметр("БезФактическихДанных", БезФактическихДанных);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияТоваровНаСкладе.Номер КАК НомерДокумента,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаДокумента,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ИнвентаризацияТоваровНаСкладе.Дата КАК ДатаСнятияОстатков,
	|	ИнвентаризацияТоваровНаСкладе.Организация,
	|	"""" КАК ПредставлениеСклада,
	|	ИнвентаризацияТоваровНаСкладе.НМА.(
	|		НомерСтроки КАК Номер,
	|		НематериальныйАктив КАК Номенклатура,
	|		НематериальныйАктив.НаименованиеПолное КАК ТоварНаименование,
	|		НематериальныйАктив.Код КАК ТоварКод,
	|		"""" КАК ЕдиницаИзмеренияНаименование,
	|		"""" КАК ЕдиницаИзмеренияКодПоОКЕИ,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияТоваровНаСкладе.НМА.НаличиеФактическое = ЛОЖЬ
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК ФактКоличество,
	|		ВЫБОР
	|			КОГДА ИнвентаризацияТоваровНаСкладе.НМА.НаличиеПоДаннымУчета = ЛОЖЬ
	|				ТОГДА 0
	|			ИНАЧЕ 1
	|		КОНЕЦ КАК БухКоличество,
	|		СтоимостьФактическая КАК Цена,
	|		СтоимостьФактическая КАК ФактСумма,
	|		СтоимостьПоДаннымУчета КАК БухСумма,
	|		СчетУчета КАК СубСчет
	|	),
	|	ИнвентаризацияТоваровНаСкладе.ДатаНачалаИнвентаризации КАК ДатаНачала,
	|	ИнвентаризацияТоваровНаСкладе.ДатаОкончанияИнвентаризации КАК ДатаОкончания,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеДата КАК ОснованиеДата,
	|	ИнвентаризацияТоваровНаСкладе.ДокументОснованиеНомер КАК ОснованиеНомер
	|ИЗ
	|	Документ.абс_ИнвентаризацияНМА КАК ИнвентаризацияТоваровНаСкладе
	|ГДЕ
	|	ИнвентаризацияТоваровНаСкладе.Ссылка = &ТекущийДокумент
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияТоваровНаСкладе.НМА.НомерСтроки";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.НМА.Выбрать();

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияНМА_ИНВ3";
	Макет       = ПолучитьМакет("ИНВ3");

	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.ДатаДокумента            = Шапка.ДатаДокумента;
	ОбластьМакета.Параметры.ДатаСнятияОстатков       = Шапка.ДатаСнятияОстатков;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект);
	ОбластьМакета.Параметры.ДолжностьМОЛ1 = ДолжностьМОЛ1;
	ОбластьМакета.Параметры.ФИОМОЛ1 = ФИОМОЛ1;
	ОбластьМакета.Параметры.ВидДеятельностиПоОКДП = "64.20";
	ОбластьМакета.Параметры.ВидОперации = "Инвентаризация";	

	ТабДокумент.Вывести(ОбластьМакета);
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	СтрокНаСтранице = 19;
	СтрокШапки      = 5;
	СтрокПодвала    = 5;
	НомерСтраницы   = 2;
	Ном             = 0;

	ИтогФактКоличество = 0;
	ИтогФактСумма      = 0;
	ИтогБухКоличество  = 0;
	ИтогБухСумма       = 0;

	КолвоСтрокПоСтранице = 0;
	КолвоПостранице      = 0;
	СуммаЛиста           = 0;
	ИтогоКолво           = 0;
	ИтогоСумма           = 0;

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы; 
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;

	// Выводим многострочную часть докмента
	ВыборкаСтрокТовары = Шапка.НМА.Выбрать();
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			Сообщить("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		//Начинаем новую страницу, если предыдущая строка была последней на странице
		//или пора переносить последнюю строку на последнюю страницу с подвалом.
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;

		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
		 или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда

			ОбластьИтоговПоСтранице                               = Макет.ПолучитьОбласть("ПодвалСтраницы");
			ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество = ИтогФактКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма      = ИтогФактСумма;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество  = ИтогБухКоличество;
			ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма       = ИтогБухСумма;

			ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
			Если НЕ БезФактическихДанных Тогда
				ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(КолвоПостранице);
				ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
			КонецЕсли;
			ТабДокумент.Вывести(ОбластьИтоговПоСтранице);
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);

			ИтогФактКоличество = 0;
			ИтогФактСумма      = 0;
			ИтогБухКоличество  = 0;
			ИтогБухСумма       = 0;

			КолвоСтрокПоСтранице = 0;
			КолвоПостранице      = 0;
			СуммаЛиста           = 0;

		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
		ОбластьМакета.Параметры.ТоварНаименование = ВыборкаСтрокТовары.ТоварНаименование;
		ОбластьМакета.Параметры.Номер             = Ном;

		ТабДокумент.Вывести(ОбластьМакета);

		ИтогФактКоличество = ИтогФактКоличество + ВыборкаСтрокТовары.ФактКоличество;
		ИтогФактСумма      = ИтогФактСумма      + ВыборкаСтрокТовары.ФактСумма;
		ИтогБухКоличество  = ИтогБухКоличество  + ВыборкаСтрокТовары.БухКоличество;
		ИтогБухСумма       = ИтогБухСумма       + ВыборкаСтрокТовары.БухСумма;
		ИтогоКолво         = ИтогоКолво         + ВыборкаСтрокТовары.ФактКоличество;
		ИтогоСумма         = ИтогоСумма         + ВыборкаСтрокТовары.ФактСумма;

		КолвоСтрокПоСтранице = КолвоСтрокПоСтранице + 1;
		КолвоПостранице      = КолвоПостранице      + ВыборкаСтрокТовары.ФактКоличество;
		СуммаЛиста           = СуммаЛиста           + ВыборкаСтрокТовары.ФактСумма;

	КонецЦикла;

	// Выводим итоги по последней странице
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтраницы");
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактКоличество  = ИтогФактКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоФактСумма       = ИтогФактСумма;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухКоличество   = ИтогБухКоличество;
	ОбластьИтоговПоСтранице.Параметры.ИтогоБухСумма        = ИтогБухСумма;
	ОбластьИтоговПоСтранице.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(КолвоСтрокПоСтранице, ,",,,,,,,,0");
	Если НЕ БезФактическихДанных Тогда
		ОбластьИтоговПоСтранице.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(КолвоПостранице);
		ОбластьИтоговПоСтранице.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
	КонецЕсли;
	ТабДокумент.Вывести(ОбластьИтоговПоСтранице);

	// Выводим подвал документа
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	ОбластьМакета = Макет.ПолучитьОбласть("ПодвалОписи");
	ОбластьМакета.Параметры.ДолжностьМОЛ1 = ДолжностьМОЛ1;
	ОбластьМакета.Параметры.ФИОМОЛ1 = ФИОМОЛ1;
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.НачальныйНомерПоПорядку = 1;
	ОбластьМакета.Параметры.НомерКонца              = ВыборкаСтрокТовары.Количество();
	ОбластьМакета.Параметры.КоличествоПорядковыхНомеровНаСтраницеПрописью = ЧислоПрописью(ВыборкаСтрокТовары.Количество(), ,",,,,,,,,0");
	Если НЕ БезФактическихДанных Тогда
		ОбластьМакета.Параметры.ОбщееКоличествоЕдиницФактическиНаСтраницеПрописью = ФормированиеПечатныхФорм.КоличествоПрописью(ИтогоКолво);
		ОбластьМакета.Параметры.СуммаФактическиНаСтраницеПрописью                 = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоСумма, ВалютаПечати);
	КонецЕсли;
	
	//Комиссия
	Если ЗначениеЗаполнено(абс_КомиссияТМЦ) Тогда
		ПредседательКомиссииСтр = абс_КомиссияТМЦ.ЧленыКомиссии.Найти(Истина,"Председатель");
		Если ПредседательКомиссииСтр <> Неопределено Тогда
			ПредседательКомиссии = ОбщегоНазначения.ДанныеФизЛица(Организация, ПредседательКомиссииСтр.ЧленКомиссии, Дата);
			ОбластьМакета.Параметры.ДолжностьПредседателя = ПредседательКомиссии.Должность;
			ОбластьМакета.Параметры.ФИОпредседателя = ПредседательКомиссии.Фамилия+" "+ПредседательКомиссии.Имя+" "+ПредседательКомиссии.Отчество;
			//ПредседательКомиссии.Фамилия+" "+Лев(ПредседательКомиссии.Имя,1)+"."+Лев(ПредседательКомиссии.Отчество,1)+".";
		КонецЕсли;
		Сч = 2;
		Для каждого ЧленКомиссииСтр  из абс_КомиссияТМЦ.ЧленыКомиссии Цикл
			Если Сч>6 Тогда
				прервать;
			КонецЕсли;
			Если ЧленКомиссииСтр.Председатель Тогда
				продолжить;
			КонецЕсли;
			ЧленКомиссии = ОбщегоНазначения.ДанныеФизЛица(Организация, ЧленКомиссииСтр.ЧленКомиссии, Дата);
			ОбластьМакета.Параметры["ДолжностьЧленаКомиссии"+Сч] = ЧленКомиссии.Должность;
			ОбластьМакета.Параметры["ФИОЧленаКомиссии"+Сч] = ЧленКомиссии.Фамилия+" "+ЧленКомиссии.Имя+" "+ЧленКомиссии.Отчество; 
			//ЧленКомиссии.Фамилия+" "+Лев(ЧленКомиссии.Имя,1)+"."+Лев(ЧленКомиссии.Отчество,1)+".";
			Сч = Сч+1;
		КонецЦикла;
		
	Иначе
		ПредседательКомиссииСтр = ИнвентаризационнаяКомиссия.Найти(Истина,"Председатель");
		Если ПредседательКомиссииСтр <> Неопределено Тогда
			ПредседательКомиссии = ОбщегоНазначения.ДанныеФизЛица(Организация, ПредседательКомиссииСтр.ФизЛицо, Дата);
			ОбластьМакета.Параметры.ДолжностьПредседателя = ПредседательКомиссии.Должность;
			ОбластьМакета.Параметры.ФИОпредседателя =ПредседательКомиссии.Фамилия+" "+ПредседательКомиссии.Имя+" "+ПредседательКомиссии.Отчество; 
			//ПредседательКомиссии.Фамилия+" "+Лев(ПредседательКомиссии.Имя,1)+"."+Лев(ПредседательКомиссии.Отчество,1)+".";
		КонецЕсли;
		Сч = 2;
		Для каждого ЧленКомиссииСтр  из ИнвентаризационнаяКомиссия Цикл
			Если Сч>6 Тогда
				прервать;
			КонецЕсли;
			Если ЧленКомиссииСтр.Председатель Тогда
				продолжить;
			КонецЕсли;
			ЧленКомиссии = ОбщегоНазначения.ДанныеФизЛица(Организация, ЧленКомиссииСтр.ФизЛицо, Дата);
			ОбластьМакета.Параметры["ДолжностьЧленаКомиссии"+Сч] = ЧленКомиссии.Должность;
			ОбластьМакета.Параметры["ФИОЧленаКомиссии"+Сч] = ЧленКомиссии.Фамилия+" "+ЧленКомиссии.Имя+" "+ЧленКомиссии.Отчество;
			//ЧленКомиссии.Фамилия+" "+Лев(ЧленКомиссии.Имя,1)+"."+Лев(ЧленКомиссии.Отчество,1)+".";
			Сч = Сч+1;
		КонецЦикла;
	КонецЕсли;
	//\\

	ТабДокумент.Вывести(ОбластьМакета);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции // ПечатьИНВ3()

//\\АБС ВСТАВКА 31529 КОНЕЦ

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ИНВ1а" тогда
		ТабДокумент = ПечатьИНВ1а();
	ИначеЕсли ИмяМакета = "ИНВ3" тогда
		ТабДокумент = ПечатьИНВ3();
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ИНВ1а,ИНВ3","ИНВ-1а (инвентаризационная опись)","ИНВ-3 (инвентаризационная опись)");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

мВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");
