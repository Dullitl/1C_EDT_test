// Описывает соответствие между именами реквизитов платежа в бюджет, используемыми в модуле ПлатежиВБюджетКлиентСервер,
// и именами реквизитов документа.
//
Функция РеквизитыДокументаДляПлатежаВБюджет()
	
	Реквизиты = Новый Соответствие;
	
	Реквизиты.Вставить("ВидПеречисления",      "ВидПеречисленияВБюджет");
	Реквизиты.Вставить("ИдентификаторПлатежа", "ИдентификаторПлатежа");
	Реквизиты.Вставить("СтатусПлательщика",    "СтатусСоставителя");
	Реквизиты.Вставить("КБК",                  "КодБК");
	Реквизиты.Вставить("КодТерритории",        "КодОКАТО");
	Реквизиты.Вставить("ОснованиеПлатежа",     "ПоказательОснования");
	Реквизиты.Вставить("НалоговыйПериод",      "ПоказательПериода");
	Реквизиты.Вставить("НомерДокумента",       "ПоказательНомера");
	Реквизиты.Вставить("ДатаДокумента",        "ПоказательДаты");
	Реквизиты.Вставить("ТипПлатежа",           "ПоказательТипа");
	
	Возврат Реквизиты;
	
КонецФункции

// Контекст платежа используется для вызова методов модуля ПлатежиВБюджетКлиентСервер
//
Функция КонтекстПлатежногоДокумента(Объект) Экспорт
	
	ИсточникДанных = ПлатежиВБюджетПереопределяемый.НовыйИсточникДанныхКонтекстаПлатежногоДокумента();
	ИсточникДанных.Период         = Объект.Дата;
	ИсточникДанных.Организация    = Объект.Организация;
	ИсточникДанных.СчетПолучателя = Объект.СчетКонтрагента;
	
	Возврат ПлатежиВБюджетПереопределяемый.КонтекстПлатежногоДокумента(ИсточникДанных);
	
КонецФункции

// Заполняет реквизиты платежа в бюджет по структуре с ключами, имена которых 
// используются в модуле ПлатежиВБюджетКлиентСервер
// 
Процедура УстановитьЗначенияРеквизитовПлатежаВБюджет(Объект, ЗначенияЗаполнения, ДобавитьСвойстваВСтруктуру = Ложь) Экспорт
	
	РеквизитыДокумента = РеквизитыДокументаДляПлатежаВБюджет();
	ЗначенияРеквизитовДокумента = Новый Структура;
	Для Каждого ЗначениеЗаполнения Из ЗначенияЗаполнения Цикл
		ИмяРеквизитаДокумента = РеквизитыДокумента[ЗначениеЗаполнения.Ключ];
		ЗначенияРеквизитовДокумента.Вставить(ИмяРеквизитаДокумента, ЗначениеЗаполнения.Значение);
	КонецЦикла;
	
	Если Не ДобавитьСвойстваВСтруктуру Или ТипЗнч(Объект) <> Тип("Структура") Тогда
		
		ЗаполнитьЗначенияСвойств(Объект, ЗначенияРеквизитовДокумента);
		
	Иначе
		
		Для Каждого КлючИЗначение Из ЗначенияРеквизитовДокумента Цикл
			Объект.Вставить(КлючИЗначение.Ключ, КлючИЗначение.Значение);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Возвращает реквизиты платежа в бюджет с именами, используемыми в модуле ПлатежиВБюджетКлиентСервер
// 
Функция РеквизитыПлатежаВБюджет(Объект) Экспорт
	
	РеквизитыПлатежаВБюджет = ПлатежиВБюджетКлиентСервер.НовыйРеквизитыПлатежаВБюджет();
	
	РеквизитыДокумента = РеквизитыДокументаДляПлатежаВБюджет();
	ЗначенияРеквизитовДокумента = Новый Структура;
	Для Каждого Реквизит Из РеквизитыДокумента Цикл
		ЗначенияРеквизитовДокумента.Вставить(Реквизит.Значение);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовДокумента, Объект);
	
	Для Каждого Реквизит Из РеквизитыДокумента Цикл
		Значение = ЗначенияРеквизитовДокумента[Реквизит.Значение];
		
		// Раньше у некоторых реквизитов была фиксированная допустимая длина.
		// Поэтому в ИБ могли остаться значения с лишними пробелами справа.
		Если ТипЗнч(Значение) = Тип("Строка") Тогда
			Значение = СокрП(Значение);
		КонецЕсли;
		
		РеквизитыПлатежаВБюджет[Реквизит.Ключ] = Значение;
		
	КонецЦикла;
	
	// В документе ПоказательДаты хранится в виде даты, а не строки
	Если ТипЗнч(РеквизитыПлатежаВБюджет.ДатаДокумента) = Тип("Дата") Тогда
		Если ЗначениеЗаполнено(РеквизитыПлатежаВБюджет.ДатаДокумента) Тогда
			РеквизитыПлатежаВБюджет.ДатаДокумента = ПлатежиВБюджетКлиентСервер.ПреобразоватьДатуКСтроке(РеквизитыПлатежаВБюджет.ДатаДокумента);
		Иначе
			РеквизитыПлатежаВБюджет.ДатаДокумента = ПлатежиВБюджетКлиентСервер.НезаполненноеЗначение();
		КонецЕсли;
	КонецЕсли;
	
	Возврат РеквизитыПлатежаВБюджет;
	
КонецФункции

//АБС ВСТАВКА 48833  24.10.2014 19:16:10  Шамов
Функция ПолучитьСтатусыСтаршеУтвержденияРуководителемЦФК() Экспорт
	мСтатусы = Новый Массив;
	//Бобылев А.А. 07.11.2018
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.ОформлениеАВЗ);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.СчетСогласованАВЗ);
	//Бобылев А.А.-----------
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.УтверждениеВицеПрезидентом);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.УтверждениеПрезидентом);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.СогласованиеЗЗ);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.Согласован);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.ВОплату);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.Исполнение);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.Утвержден);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.ГотовКОплате);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.ОтправленВБанк);
	мСтатусы.Добавить(Перечисления.абсСтатусыСчетов.Оплачен);
	
	Возврат мСтатусы;
КонецФункции
//АБС ВСТАВКА 48833 КОНЕЦ
