
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("Инв1","ИНВ-1 (малооценка)");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли; 
	
	Если ИмяМакета = "Инв1" Тогда
		// Получить экземпляр документа на печать
		ТабДокумент = ПечатьИНВ1();
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()), Ссылка);

КонецПроцедуры // Печать

// Функция формирует табличный документ с печатной формой инвентаризационной 
// описи основных средств.
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Неопределено.
//
Функция ПечатьИНВ1() Экспорт
	
	// Создаем колонки Таблицы итогов
	ТаблицаИтогов = Новый ТаблицаЗначений();
	ТаблицаИтогов.Колонки.Добавить("ПорядковыйНомерИтогов");
	ТаблицаИтогов.Колонки.Добавить("ИтогНаличиеФактическое");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьФактическая");
	ТаблицаИтогов.Колонки.Добавить("ИтогНаличиеПоДаннымУчета");
	ТаблицаИтогов.Колонки.Добавить("ИтогСтоимостьПоДаннымУчета");
	ТаблицаИтогов.Колонки.Добавить("КоличествоФактическоеПрописью");
	ТаблицаИтогов.Колонки.Добавить("СтоимостьФактическаяПрописью");
	
	// Варианты заголовков разделов с подписями печатной формы	
	ЗаголовокРазделаПодписей = Новый Структура();
	ЗаголовокРазделаПодписей.Вставить("МОЛ",                  "Лицо(а), ответственное(ые) за сохранность основных средств:");
	ЗаголовокРазделаПодписей.Вставить("ПредседательКомиссии", "Председатель комиссии");
	ЗаголовокРазделаПодписей.Вставить("ЧленыКомиссии",        "Члены комиссии");
	ЗаголовокРазделаПодписей.Вставить("Проверяющий",          "Указанные в настоящей описи данные и расчеты проверил");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияОС.Дата КАК Дата,
	|	ИнвентаризацияОС.Номер КАК Номер,
	|	ИнвентаризацияОС.Организация КАК Организация,
	|	ИнвентаризацияОС.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
	|	ИнвентаризацияОС.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияОС.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияОС.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ИнвентаризацияОС.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияОС.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	|ИЗ
	|	Документ.абс_ИнвентаризацияМалоценныхОС КАК ИнвентаризацияОС
	|ГДЕ
	|	ИнвентаризацияОС.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ИнвентаризацияОСИнвентаризационнаяКомиссия.ФизЛицо КАК ФизЛицо,
	|	ИнвентаризацияОСИнвентаризационнаяКомиссия.Председатель КАК Председатель
	|ИЗ
	|	Документ.ИнвентаризацияОС.ИнвентаризационнаяКомиссия КАК ИнвентаризацияОСИнвентаризационнаяКомиссия
	|ГДЕ
	|	ИнвентаризацияОСИнвентаризационнаяКомиссия.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИнвентаризацияОСИнвентаризационнаяКомиссия.НомерСтроки";
	
	ТаблицаИнвентаризационнаяКомиссия = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Дата",        Док.Дата);
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ИнвентаризацияОСОС.НомерСтроки КАК НомерСтроки,
	|	ИнвентаризацияОСОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
	|			ТОГДА ИнвентаризацияОСОС.ОсновноеСредство.Наименование
	|		ИНАЧЕ ИнвентаризацияОСОС.ОсновноеСредство.НаименованиеПолное
	|	КОНЕЦ КАК ОсновноеСредствоНаименованиеПолное,
	|	"""" КАК ДатаВыпуска,
	|	"""" КАК ЗаводскойНомер,
	|	ИнвентаризацияОСОС.ОсновноеСредство.Код КАК ИнвентарныйНомер,
	|	"""" КАК НомерПаспорта,
	|	ИнвентаризацияОСОС.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
	|	ИнвентаризацияОСОС.СтоимостьФактическая КАК СтоимостьФактическая,
	|	ИнвентаризацияОСОС.НаличиеПоДаннымУчета КАК НаличиеПоДаннымУчета,
	|	ИнвентаризацияОСОС.НаличиеФактическое КАК НаличиеФактическое,
	|	ИнвентаризацияОСОС.ХарактеристикаНоменклатуры,
	|	ИнвентаризацияОСОС.СерияНоменклатуры
	|ИЗ
	|	Документ.абс_ИнвентаризацияМалоценныхОС.ОС КАК ИнвентаризацияОСОС
	|ГДЕ
	|	ИнвентаризацияОСОС.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	ТаблицаОС = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("Инв1");
	
	// Получаем области макета для вывода в табличный документ
	Шапка            = Макет.ПолучитьОбласть("Шапка");
	Расписка         = Макет.ПолучитьОбласть("Расписка");
	Примечание       = Макет.ПолучитьОбласть("Примечание");
	Подпись          = Макет.ПолучитьОбласть("Подпись");
	ПолеДаты         = Макет.ПолучитьОбласть("ПолеДаты");
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ИтогоПоСтранице  = Макет.ПолучитьОбласть("ИтогоПоСтранице");	
	ИтогоПоОписи     = Макет.ПолучитьОбласть("ИтогоПоОписи");
	Итоги            = Макет.ПолучитьОбласть("Итоги");	
	Подсчеты         = Макет.ПолучитьОбласть("Подсчеты");	
	Претензии        = Макет.ПолучитьОбласть("Претензии");	
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 10;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 10;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Ландшафт;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияМалоценныхОС_ИНВ1";

	//////////////////////////////////////////////////////////////////////
	// 1-я страница формы
	
	// Выведем шапку документа
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	Шапка.Параметры.Заполнить(Док);
	Шапка.Параметры.Организация          = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	Шапка.Параметры.ОрганизацияКодПоОКПО = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.РежимСобственности   = "в собственности";
	Шапка.Параметры.Подразделение        = Док.ПодразделениеПредставление;
	Шапка.Параметры.Местонахождение      = Док.ПодразделениеПредставление;
	
	Шапка.Параметры.НомерДокумента = ОбщегоНазначения.ПолучитьНомерНаПечать(Док);
	Шапка.Параметры.ДатаДокумента  = Док.Дата;
	
	ТабДокумент.Вывести(Шапка);
	
	// Выведем расписку МОЛов 
	ТабДокумент.Вывести(Расписка);
	
	//// Получим список МОЛ на основании списка ОС
	//СписокОС = ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство");
	//
	//Запрос = Новый Запрос();
	//Запрос.УстановитьПараметр("ОсновноеСредство", СписокОС);
	//Запрос.УстановитьПараметр("Организация",      Док.Организация);
	//Запрос.УстановитьПараметр("Дата",             Док.Дата);
	//
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ
	//|ИЗ
	//|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Дата, Организация = &Организация И ОсновноеСредство В (&ОсновноеСредство)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних";
	//
	//Результат = Запрос.Выполнить().Выгрузить();
	СписокМОЛ = ФизическоеЛицо; //ОС.ВыгрузитьКолонку("ФизическоеЛицо");
	
	// Выведем подписи МОЛов
	ВыводитьЗаголовок  = Истина; // Флаг вывода заголовка набора подписей
	ВыводитьПримечание = Истина; // Флаг вывода примечания-звездочки         
	
	ДанныеМОЛ = ОбщегоНазначения.ДанныеФизЛиц(Док.Организация, СписокМОЛ, Док.Дата);
	
	// Сначала выведем МОЛов из выборки
	Для Каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
		
		ПодписьСПримечанием = Новый Массив;
		ПодписьСПримечанием.Добавить(Подпись);
		ПодписьСПримечанием.Добавить(Примечание);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ПодписьСПримечанием) Тогда
			
			// Выведем примечание
			ТабДокумент.Вывести(Примечание);
			ВыводитьПримечание = Ложь;
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей.МОЛ,
													   "");
		Подпись.Параметры.Должность                = СтрокаМОЛ.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = СтрокаМОЛ.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если ДанныеМОЛ.Количество() < 3 Тогда
		
		ПодписьСПримечанием = Новый Массив;
		ПодписьСПримечанием.Добавить(Подпись);
		ПодписьСПримечанием.Добавить(Примечание);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ПодписьСПримечанием) Тогда
			
			// Выведем примечание
			ТабДокумент.Вывести(Примечание);
			ВыводитьПримечание = Ложь;
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Для Итератор = (ДанныеМОЛ.Количество() + 1) По 3 Цикл
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.МОЛ,
														   "");
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	// Выведем примечание
	Если ВыводитьПримечание Тогда
		ТабДокумент.Вывести(Примечание);
	КонецЕсли;
	
	// Выведем разрыв страницы
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//////////////////////////////////////////////////////////////////////
	// 2-я страница формы
	
	// Выведем заголовок таблицы	
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	ПорядковыйНомерИтогов = 1; // счетчик количества итоговых строк в таблице
	
	НаличиеФактическоеПоСтранице          = 0;
	СтоимостьФактическаяПоСтранице        = 0;
	НаличиеПоДаннымУчетаПоСтранице        = 0;
	СтоимостьПоДаннымУчетаПоСтранице      = 0;
	КоличествоПорядковыхНомеровНаСтранице = 0;
	
	// Выведем строки таблицы
	Для Каждого СтрокаОС Из ТаблицаОС Цикл
		
		СтрокаТаблицы   = Макет.ПолучитьОбласть("СтрокаТаблицы");
		
		СтрокаТаблицы.Параметры.Заполнить(СтрокаОС);
		СтрокаТаблицы.Параметры.ОсновноеСредствоНаименованиеПолное = СтрокаОС.ОсновноеСредствоНаименованиеПолное
																		+", "+ СтрокаОС.ХарактеристикаНоменклатуры 
																		+", "+ СтрокаОС.СерияНоменклатуры;
		// Присвоим имена с номерами строк областям таблицы.
		// Номера потребуются для включения/отключения видимости значений в ячейках.
		СтрокаТаблицы.Области.НаличиеФактическое.Имя     = "НаличиеФактическое" + СтрокаОС.НомерСтроки;
		СтрокаТаблицы.Области.СтоимостьФактическая.Имя   = "СтоимостьФактическая" + СтрокаОС.НомерСтроки;
		СтрокаТаблицы.Области.НаличиеПоДаннымУчета.Имя   = "НаличиеПоДаннымУчета" + СтрокаОС.НомерСтроки;
		СтрокаТаблицы.Области.СтоимостьПоДаннымУчета.Имя = "СтоимостьПоДаннымУчета" + СтрокаОС.НомерСтроки;
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ИтогоПоСтранице);
		СтрокаСПодвалом.Добавить(Итоги);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
			
			// Присвоим имена с порядковыми номерами итогов областям таблицы.
			// Номера потребуются для включения/отключения видимости значений в ячейках.
			ИтогоПоСтранице.Области.ИтогНаличиеФактическое.Имя     = "ИтогНаличиеФактическое" + ПорядковыйНомерИтогов;
			ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   = "ИтогСтоимостьФактическая" + ПорядковыйНомерИтогов;
			ИтогоПоСтранице.Области.ИтогНаличиеПоДаннымУчета.Имя   = "ИтогНаличиеПоДаннымУчета" + ПорядковыйНомерИтогов;
			ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя = "ИтогСтоимостьПоДаннымУчета" + ПорядковыйНомерИтогов;
			
			// Выведем заголовок итогов по странице
			ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   = СтоимостьФактическаяПоСтранице;
			ИтогоПоСтранице.Параметры.ИтогНаличиеФактическое     = НаличиеФактическоеПоСтранице;
			ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета = СтоимостьПоДаннымУчетаПоСтранице;
			ИтогоПоСтранице.Параметры.ИтогНаличиеПоДаннымУчета   = НаличиеПоДаннымУчетаПоСтранице;
			
			ТабДокумент.Вывести(ИтогоПоСтранице);
			
			Итоги = Макет.ПолучитьОбласть("Итоги");	
			
			// Присвоим имена с порядковыми номерами итогов областям таблицы.
			// Номера потребуются для включения/отключения видимости значений в ячейках.
			Итоги.Области.КоличествоФактическоеПрописью.Имя   = "КоличествоФактическоеПрописью" + ПорядковыйНомерИтогов;
			Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописью" + ПорядковыйНомерИтогов;
			
			КоличествоФактическоеПрописью = ЧислоПрописью(НаличиеФактическоеПоСтранице,, ",,,ж,,,,,0");
			СтоимостьФактическаяПрописью  = ЧислоПрописью(СтоимостьФактическаяПоСтранице,, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
			
			// Выведем итоговые строки
			Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
			Итоги.Параметры.КоличествоФактическоеПрописью       = КоличествоФактическоеПрописью;
			Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
			
			ТабДокумент.Вывести(Итоги);
			
			// Добавим значения итогов по странице в таблицу итогов.
			// Они потребуются при включении видимости значений ячеек.
			НоваяСтрока = ТаблицаИтогов.Добавить();
			НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
			НоваяСтрока.ИтогНаличиеФактическое        = НаличиеФактическоеПоСтранице;
			НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
			НоваяСтрока.ИтогНаличиеПоДаннымУчета      = НаличиеПоДаннымУчетаПоСтранице;
			НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
			НоваяСтрока.КоличествоФактическоеПрописью = КоличествоФактическоеПрописью;
			НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
			
			ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Выведем заголовок таблицы	
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
			НаличиеФактическоеПоСтранице          = 0;
			СтоимостьФактическаяПоСтранице        = 0;
			НаличиеПоДаннымУчетаПоСтранице        = 0;
			СтоимостьПоДаннымУчетаПоСтранице      = 0;
			КоличествоПорядковыхНомеровНаСтранице = 0;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
		НаличиеФактическоеПоСтранице          = НаличиеФактическоеПоСтранице + СтрокаОС.НаличиеФактическое;
		СтоимостьФактическаяПоСтранице        = СтоимостьФактическаяПоСтранице + СтрокаОС.СтоимостьФактическая;
		НаличиеПоДаннымУчетаПоСтранице        = НаличиеПоДаннымУчетаПоСтранице + СтрокаОС.НаличиеПоДаннымУчета;
		СтоимостьПоДаннымУчетаПоСтранице      = СтоимостьПоДаннымУчетаПоСтранице + СтрокаОС.СтоимостьПоДаннымУчета;
		КоличествоПорядковыхНомеровНаСтранице = КоличествоПорядковыхНомеровНаСтранице + 1;
		
	КонецЦикла;		
	
	ИтогоПоСтранице = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	ИтогоПоСтранице.Области.ИтогНаличиеФактическое.Имя     = "ИтогНаличиеФактическое" + ПорядковыйНомерИтогов;
	ИтогоПоСтранице.Области.ИтогСтоимостьФактическая.Имя   = "ИтогСтоимостьФактическая" + ПорядковыйНомерИтогов;
	ИтогоПоСтранице.Области.ИтогНаличиеПоДаннымУчета.Имя   = "ИтогНаличиеПоДаннымУчета" + ПорядковыйНомерИтогов;
	ИтогоПоСтранице.Области.ИтогСтоимостьПоДаннымУчета.Имя = "ИтогСтоимостьПоДаннымУчета" + ПорядковыйНомерИтогов;
	
	// Выведем заголовок итогов по странице
	ИтогоПоСтранице.Параметры.ИтогСтоимостьФактическая   = СтоимостьФактическаяПоСтранице;
	ИтогоПоСтранице.Параметры.ИтогНаличиеФактическое     = НаличиеФактическоеПоСтранице;
	ИтогоПоСтранице.Параметры.ИтогСтоимостьПоДаннымУчета = СтоимостьПоДаннымУчетаПоСтранице;
	ИтогоПоСтранице.Параметры.ИтогНаличиеПоДаннымУчета   = НаличиеПоДаннымУчетаПоСтранице;
			
	ТабДокумент.Вывести(ИтогоПоСтранице);
	
	Итоги = Макет.ПолучитьОбласть("Итоги");	
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	Итоги.Области.КоличествоФактическоеПрописью.Имя   = "КоличествоФактическоеПрописью" + ПорядковыйНомерИтогов;
	Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописью" + ПорядковыйНомерИтогов;
	
	КоличествоФактическоеПрописью = ЧислоПрописью(НаличиеФактическоеПоСтранице,, ",,,ж,,,,,0");
	СтоимостьФактическаяПрописью  = ЧислоПрописью(СтоимостьФактическаяПоСтранице,, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	// Выведем итоговые строки
	Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(КоличествоПорядковыхНомеровНаСтранице,, ",,,м,,,,,0");
	Итоги.Параметры.КоличествоФактическоеПрописью       = КоличествоФактическоеПрописью;
	Итоги.Параметры.СтоимостьФактическаяПрописью        = СтоимостьФактическаяПрописью;
	
	ТабДокумент.Вывести(Итоги);
	
	// Добавим значения итогов по странице в таблицу итогов.
	// Они потребуются при включении видимости значений ячеек.
	НоваяСтрока = ТаблицаИтогов.Добавить();
	НоваяСтрока.ПорядковыйНомерИтогов         = ПорядковыйНомерИтогов;
	НоваяСтрока.ИтогНаличиеФактическое        = НаличиеФактическоеПоСтранице;
	НоваяСтрока.ИтогСтоимостьФактическая      = СтоимостьФактическаяПоСтранице;
	НоваяСтрока.ИтогНаличиеПоДаннымУчета      = НаличиеПоДаннымУчетаПоСтранице;
	НоваяСтрока.ИтогСтоимостьПоДаннымУчета    = СтоимостьПоДаннымУчетаПоСтранице;
	НоваяСтрока.КоличествоФактическоеПрописью = КоличествоФактическоеПрописью;
	НоваяСтрока.СтоимостьФактическаяПрописью  = СтоимостьФактическаяПрописью;
	
	ПорядковыйНомерИтогов = ПорядковыйНомерИтогов + 1;
	
	// Выведем разрыв страницы
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	//////////////////////////////////////////////////////////////////////
	// 3-я страница формы
	
	// Выведем заголовок итогов по описи
	ТабДокумент.Вывести(ИтогоПоОписи);
	
	Итоги = Макет.ПолучитьОбласть("Итоги");	
	
	// Присвоим имена с порядковыми номерами итогов областям таблицы.
	// Номера потребуются для включения/отключения видимости значений в ячейках.
	Итоги.Области.КоличествоФактическоеПрописью.Имя   = "КоличествоФактическоеПрописьюПоОписи";
	Итоги.Области.СтоимостьФактическаяПрописью.Имя    = "СтоимостьФактическаяПрописьюПоОписи";
	
	// Выведем итоговые строки
	Итоги.Параметры.КоличествоПорядковыхНомеровПрописью = ЧислоПрописью(ТаблицаОС.Количество(),, ",,,м,,,,,0");
	Итоги.Параметры.КоличествоФактическоеПрописью       = ЧислоПрописью(ТаблицаОС.Итог("НаличиеФактическое"),, ",,,ж,,,,,0");
	Итоги.Параметры.СтоимостьФактическаяПрописью        = ЧислоПрописью(ТаблицаОС.Итог("СтоимостьФактическая"),, "рубль, рубля, рублей, м, копейка, копейки, копеек, ж, 2");
	
	ТабДокумент.Вывести(Итоги);
	
	// Выведем фразу о подсчетах
	ТабДокумент.Вывести(Подсчеты);
	
	// Выведем подпись председателя инвентаризационной комиссии
	//ТаблицаИнвентаризационнаяКомиссия.Индексы.Добавить("Председатель");
	ТаблицаИнвентаризационнаяКомиссия = ИнвентаризационнаяКомиссия.Выгрузить();
	
	ПредседательКомиссии = ТаблицаИнвентаризационнаяКомиссия.Найти(Истина, "Председатель");
	
	Если НЕ (ПредседательКомиссии = Неопределено) Тогда
		
		ДанныеПредседателя = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, ПредседательКомиссии.ФизЛицо, Док.Дата);
			
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = ДанныеПредседателя.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ДанныеПредседателя.Представление;
		
	Иначе
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.ПредседательКомиссии;
		Подпись.Параметры.Должность                = "";
		Подпись.Параметры.РасшифровкаПодписи       = "";
		
	КонецЕсли;
		
	ТабДокумент.Вывести(Подпись);
	
	// Выведем подписи членов комиссии
	ВыводитьЗаголовок = Истина;
	
	КоличествоЧленовКомиссии = 0;
	
	// Сначала выведем членов комиссии из выборки
	Для Каждого ЧленКомиссии Из ТаблицаИнвентаризационнаяКомиссия Цикл
		
		Если ЧленКомиссии.Председатель Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		КоличествоЧленовКомиссии = КоличествоЧленовКомиссии + 1;
		
		ДанныеЧленаКомиссии = ОбщегоНазначения.ДанныеФизЛица(Док.Организация, ЧленКомиссии.ФизЛицо, Док.Дата);

		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
													   "");
		Подпись.Параметры.Должность                = ДанныеЧленаКомиссии.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = ДанныеЧленаКомиссии.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если КоличествоЧленовКомиссии < 3 Тогда
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Для Итератор = (КоличествоЧленовКомиссии + 1) По 3 Цикл
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.ЧленыКомиссии,
														   "");
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	// Перед выводом следующего набора подписей, нужно проверить, поместится ли он
	// на страницу целиком. Если нет, нужно начать вывод со следующей страницы.
	
	// Создаем массив строк для проверки, помещаются ли они на страницу
	СтрокаСПодвалом = Новый Массив;
	СтрокаСПодвалом.Добавить(Претензии);
	Для Итератор = 1 По ДанныеМОЛ.Количество() Цикл
		СтрокаСПодвалом.Добавить(Подпись);
	КонецЦикла;
	СтрокаСПодвалом.Добавить(ПолеДаты);
	СтрокаСПодвалом.Добавить(Подпись);
	СтрокаСПодвалом.Добавить(ПолеДаты);
	
	// Если планируемый набор подписей не помещается, начинаем новую страницу
	Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		
	КонецЕсли;
	
	// Выведем раздел об отсутствии претензий МОЛов
	Если ТаблицаОС.Количество() > 0 Тогда
		Претензии.Параметры.НомерСтрокиНачальный = ТаблицаОС[0].НомерСтроки;
		Претензии.Параметры.НомерСтрокиКонечный  = ТаблицаОС[ТаблицаОС.Количество() - 1].НомерСтроки;
	Иначе	
		Претензии.Параметры.НомерСтрокиНачальный = "______";
		Претензии.Параметры.НомерСтрокиКонечный  = "______";
	КонецЕсли;
	
	ТабДокумент.Вывести(Претензии);
	
	// Выведем подписи МОЛов
	ВыводитьЗаголовок = Истина;

	// Сначала выведем МОЛов из выборки
	Для Каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
		
		ПодписьСДатой = Новый Массив;
		ПодписьСДатой.Добавить(Подпись);
		ПодписьСДатой.Добавить(ПолеДаты);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ПодписьСДатой) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей.МОЛ,
													   "");
		Подпись.Параметры.Должность                = СтрокаМОЛ.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = СтрокаМОЛ.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
	
	// Затем выведем пустые места для подписей (чтобы в итоге получилось не менее 3-х
	// подписей, как в форме, утвержденной Госкомстатом)
	Если ДанныеМОЛ.Количество() < 3 Тогда
		
		ПодписьСДатой = Новый Массив;
		ПодписьСДатой.Добавить(Подпись);
		ПодписьСДатой.Добавить(ПолеДаты);
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ПодписьСДатой) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
			
		Для Итератор = (ДанныеМОЛ.Количество() + 1) По 3 Цикл
			
			Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
			                                               ЗаголовокРазделаПодписей.МОЛ,
														   "");
			Подпись.Параметры.Должность                = "";
			Подпись.Параметры.РасшифровкаПодписи       = "";
			
			ТабДокумент.Вывести(Подпись);
			
			ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
			
		КонецЦикла;
	
	КонецЕсли;
	
	// Выведем строку с полем для заполнения даты
	ПолеДаты.Параметры.Дата = Формат(Док.Дата, "ДЛФ=DD");
	ТабДокумент.Вывести(ПолеДаты);
	
	// Проверим, поместится ли проверяющий, если нет, то начнем новую страницу
	ПодписьСДатой = Новый Массив;
	ПодписьСДатой.Добавить(Подпись);
	ПодписьСДатой.Добавить(ПолеДаты);
	
	Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ПодписьСДатой) Тогда
		
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
	КонецЕсли;
	
	// Выведем подпись проверяющего
	Подпись.Параметры.ЗаголовокРазделаПодписей = ЗаголовокРазделаПодписей.Проверяющий;
		
	ТабДокумент.Вывести(Подпись);
	
	// Выведем строку с полем для заполнения даты
	ПолеДаты.Параметры.Дата = """______"" ___________________________ _______ г.";
	ТабДокумент.Вывести(ПолеДаты);
	
	Возврат ТабДокумент;

КонецФункции // ПечатьИНВ1()
