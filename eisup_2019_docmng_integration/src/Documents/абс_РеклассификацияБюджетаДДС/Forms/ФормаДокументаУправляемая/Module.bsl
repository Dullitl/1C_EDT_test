
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗначениеЗаполнено(Объект.Статус) Тогда
		
		//ЗаполнениеДокументов.ЗаполнитьШапкуДокумента(ЭтотОбъект, Неопределено , ПараметрОбъектКопирования); 		
		Объект.Сценарий = Константы.абс_СценарийДляЗЗ.Получить();   		
		Объект.Ответственный = глЗначениеПеременной("глТекущийПользователь"); 
        Объект.ИсточникПериодМесяц = НачалоМесяца(Объект.Дата);      		
		Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка;
		
	КонецЕсли;
	
	мСтатусДокумента = Объект.Статус;   
	ЗаполнитьСписокДоступныхСтатусов(); 	
	УстановитьРежимПросмотраДокумента();

КонецПроцедуры

&НаСервере
Функция СогласуетсяСотрудникомДК() Экспорт 
	
	врБюджет = Объект.Сценарий.абс_Бюджет;
	
	Возврат не Объект.Сценарий.Пустая()
				и (врБюджет = Перечисления.абс_Бюджет.абс_ДДС_ОРЕХ
					или врБюджет = Перечисления.абс_Бюджет.абс_ДДС_САРЕХ);

КонецФункции
				
&НаСервере
Процедура ЗаполнитьСписокДоступныхСтатусов(СписокСтатусов = Неопределено)
	
	Если СписокСтатусов = Неопределено Тогда
		СписокСтатусов = Элементы.Статус.СписокВыбора;
	КонецЕсли;
	
	СписокСтатусов.Очистить();
	
	мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь);

	Если ЗначениеЗаполнено(Объект.Статус) Тогда
		СписокСтатусов.Добавить(Объект.Статус);
	Иначе                                                                       
		Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка;
		мСтатусДокумента = Объект.Статус;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	ТекСтатус = абс_БизнесПроцессы.ПолучитьСтатусРекласификацииПоРегистру(Объект.Ссылка);
	
	Если НЕ ЗначениеЗаполнено(ТекСтатус) Тогда
		
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка Тогда
		
		Если (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено) Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФО);
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФО Тогда
		
		//АБС Коломиец 19255+
		ОрганизацияСогласование78 = Константы.абс_Согласование78БюджетаВключитьДля.Получить();
		//Сторчевой А.Н. 05.12.2016 7759851 {
		ttk_ЕдиноеЦФУ = ПараметрыСеанса.ttk_ЕдиноеЦФУ;
		ПерехНаЕдиноеЦФУ = (Объект.Дата >= '20170101' и ЗначениеЗаполнено(ttk_ЕдиноеЦФУ));
		// } Сторчевой А.Н. 05.12.2016 7759851
		Если (ОрганизацияСогласование78 = Справочники.Организации.ПустаяСсылка()
			И НЕ ПерехНаЕдиноеЦФУ //Сторчевой А.Н. 05.12.2016 7759851
			ИЛИ Объект.ИсточникОрганизация = ОрганизацияСогласование78 
			ИЛИ Объект.ПриемникОрганизация = ОрганизацияСогласование78)
			И ((ЗначениеЗаполнено(Объект.ИсточникСтатьяОборотов) И Объект.ИсточникСтатьяОборотов.абс_Согласование78)          
			ИЛИ (ЗначениеЗаполнено(Объект.ПриемникСтатьяОборотов) И Объект.ПриемникСтатьяОборотов.абс_Согласование78)) 
			И НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительЦФО) = Неопределено Тогда
			Если Объект.ИсточникЦФО = Объект.ПриемникЦФО Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФУ);
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемник);
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);	
		//АБС Коломиец 19255-
		ИначеЕсли НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникДК) = Неопределено и СогласуетсяСотрудникомДК() Тогда
			Если Объект.ИсточникЦФО = Объект.ПриемникЦФО Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДК);
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемник);
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
		ИначеЕсли НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительЦФО) = Неопределено и НЕ СогласуетсяСотрудникомДК() Тогда	
			Если Объект.ИсточникЦФО = Объект.ПриемникЦФО Тогда
				Если НЕ Объект.ПриемникСтатьяОборотов = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост") Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДФМ);
				Иначе
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДЭИ);
				КонецЕсли;
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемник);
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
		КонецЕсли;
		//АБС Коломиец 19255, 19806+	
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемник Тогда
		
		ОрганизацияСогласование78 = Константы.абс_Согласование78БюджетаВключитьДля.Получить();
		Если (ОрганизацияСогласование78 = Справочники.Организации.ПустаяСсылка() 
			ИЛИ Объект.ИсточникОрганизация = ОрганизацияСогласование78 
			ИЛИ Объект.ПриемникОрганизация = ОрганизацияСогласование78)
			И ((ЗначениеЗаполнено(Объект.ИсточникСтатьяОборотов) И Объект.ИсточникСтатьяОборотов.абс_Согласование78)          
			ИЛИ (ЗначениеЗаполнено(Объект.ПриемникСтатьяОборотов) И Объект.ПриемникСтатьяОборотов.абс_Согласование78)) 
			И НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительЦФО) = Неопределено Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФУ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);	
		ИначеЕсли НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникДК) = Неопределено и СогласуетсяСотрудникомДК() Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДК);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
		ИначеЕсли НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительЦФО) = Неопределено и НЕ СогласуетсяСотрудникомДК() Тогда				
			Если НЕ Объект.ПриемникСтатьяОборотов = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост") Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДФМ);
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДЭИ);
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
		КонецЕсли;
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФУ Тогда
		
		Если Объект.ИсточникЦФУ = Объект.ПриемникЦФУ Тогда
			Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникДК) = Неопределено и СогласуетсяСотрудникомДК() Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДК);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
			ИначеЕсли НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительЦФУ) = Неопределено и НЕ СогласуетсяСотрудникомДК() Тогда				
				Если НЕ Объект.ПриемникСтатьяОборотов = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост") Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДФМ);
				Иначе
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДЭИ);
				КонецЕсли;
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
			КонецЕсли;	
		Иначе
			Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительЦФУ) = Неопределено Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФУПриемник);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);			
			КонецЕсли;
		КонецЕсли;
			
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФУПриемник Тогда
		
		Если НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникДК) = Неопределено и СогласуетсяСотрудникомДК() Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДК);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
		ИначеЕсли НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.РуководительЦФУ) = Неопределено и НЕ СогласуетсяСотрудникомДК() Тогда				
			Если НЕ Объект.ПриемникСтатьяОборотов = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост") Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДФМ);
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДЭИ);
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
		КонецЕсли;			
		//АБС Коломиец 19255, 19806-
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДК Тогда
		
		РолиКТТК = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, Справочники.Организации.НайтиПоНаименованию("КТТК"));
					
		Если (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникДК) = Неопределено)
		 ИЛИ (Объект.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами  //АБС Коломиец 19806
		 И НЕ РолиКТТК.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено) Тогда   			
			
			//АБС Коломиец 19255+
			Если РеквизитФормыВЗначение("Объект").НеобходимоУтверждениеПВП() Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеПВП);			
			Иначе //АБС Коломиец 19255-	
				Если РеквизитФормыВЗначение("Объект").БюджетныйКонтрольВкл() Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.БюджетныйКонтроль);	
				Иначе	
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Проведен);
				КонецЕсли;
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
						
		КонецЕсли;
	
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДФМ Тогда
		
		РолиКТТК = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, Справочники.Организации.НайтиПоНаименованию("КТТК"));
				
		Если (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеРекласификацииБюджетаДФМ) = Неопределено)
		 ИЛИ (Объект.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами  //АБС Коломиец 19806
		 И НЕ РолиКТТК.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено) Тогда   
			
			//АБС Коломиец 19255+
			Если РеквизитФормыВЗначение("Объект").НеобходимоУтверждениеПВП() Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеПВП);			
			Иначе //АБС Коломиец 19255-				
				Если РеквизитФормыВЗначение("Объект").БюджетныйКонтрольВкл() Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.БюджетныйКонтроль);	
				Иначе	
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Проведен);
				КонецЕсли;
			КонецЕсли; 			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
						
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДЭИ Тогда
		
		РолиКТТК = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, Справочники.Организации.НайтиПоНаименованию("КТТК"));
					
		Если (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеРекласификацииБюджетаДЭИ) = Неопределено)
		 ИЛИ (Объект.ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами  //АБС Коломиец 19806
		 И НЕ РолиКТТК.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено) Тогда   			
			
			//АБС Коломиец 19255+
			Если РеквизитФормыВЗначение("Объект").НеобходимоУтверждениеПВП() Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеПВП);			
			Иначе //АБС Коломиец 19255-				
				Если РеквизитФормыВЗначение("Объект").БюджетныйКонтрольВкл() Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.БюджетныйКонтроль);	
				Иначе	
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Проведен);
				КонецЕсли;
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
						
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Отказ Тогда
		
		Если (не мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено)
				или (Объект.Ответственный = мТекущийПользователь 
						и (не мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено)) Тогда 
						
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка);			
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение Тогда
		
		Если (не мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено)
				или (Объект.Ответственный = мТекущийПользователь 
						и (не мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено)) Тогда
			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка);
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Проведен Тогда
		
		Если (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеРекласификацииБюджетаДФМ) = Неопределено) ИЛИ 
			 (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеРекласификацииБюджетаДЭИ) = Неопределено) ИЛИ 
			 (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено) Тогда
			 
			 СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);
			 
		 КонецЕсли;
		 
	//АБС Коломиец 19255+	
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеПВП Тогда
		
		РолиКТТК = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, Справочники.Организации.НайтиПоНаименованию("КТТК"));
		
		Если (НЕ РолиКТТК.Найти(Справочники.РолиИсполнителей.ПервыйВицеПрезидент) = Неопределено) Тогда			
			
			Если РеквизитФормыВЗначение("Объект").БюджетныйКонтрольВкл() Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.БюджетныйКонтроль);	
			Иначе	
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Проведен);
			КонецЕсли;
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение);

		КонецЕсли;
	//АБС Коломиец 19255-
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.БюджетныйКонтроль Тогда
		
		Если (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.ЗакрытиеОпераций_в_УУ) = Неопределено)
			или (НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено) Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Проведен);
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыРекласификацииБюджета.Отказ);
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура мСтатусДокументаПриИзменении(Элемент)
	
	Объект.Статус = мСтатусДокумента;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьРежимПросмотраДокумента()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат;
	КонецЕсли;
	
	мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь);	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_ТаблицаСтатусовБПТТК.РедактированиеДокумента,
	                      |	абс_ТаблицаСтатусовБПТТК.ОтветственныйЗаИзменениеСтатуса
	                      |ИЗ
	                      |	РегистрСведений.абс_ТаблицаСтатусовБПТТК КАК абс_ТаблицаСтатусовБПТТК
	                      |ГДЕ
	                      |	абс_ТаблицаСтатусовБПТТК.ВидБизнесПроцесса = ЗНАЧЕНИЕ(Перечисление.абсВидыБизнесПроцессовТТК.РекласификацияБюджета)
	                      |	И абс_ТаблицаСтатусовБПТТК.Статус = &ТекСтатус");
						  
	Запрос.УстановитьПараметр("ТекСтатус", Объект.Статус);
	
	РазрешеноРедактирование 		= Ложь;
	РазрешеноМенятьСтатус 			= Ложь;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Если НЕ мРолиПользователя.Найти(Выборка.ОтветственныйЗаИзменениеСтатуса) = Неопределено Тогда
			РазрешеноМенятьСтатус = Истина
		КонецЕсли;
		
		РазрешеноРедактирование = РазрешеноРедактирование ИЛИ Выборка.РедактированиеДокумента;
	КонецЦикла;
	
	
	// Добавили определение ответственных лиц по ответственным в подразделениях
	// поэтому не проверяем их по ролям пользователей.
	
	Если (Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка ИЛИ НЕ ЗначениеЗаполнено(Объект.Статус)) И
			(НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено)  Тогда
		
		РазрешеноМенятьСтатус = Истина;
	Иначе
		РазрешеноМенятьСтатус = Ложь;
	КонецЕсли;
	
	// Если есть задачи текущему пользователю, то ему разрешено изменить статус
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ 
	                      |	абсЗадачаДоговораЗадачиПоИсполнителю.Ссылка
	                      |ИЗ
	                      |	Задача.абсЗадачаДоговора.ЗадачиПоИсполнителю(
	                      |			&ТекПользователь,
	                      |			ОбъектЗадачи = &РекласификацияБюджетаСсылка
	                      |				И Выполнена = ЛОЖЬ) КАК абсЗадачаДоговораЗадачиПоИсполнителю");
						  
	Запрос.УстановитьПараметр("ТекПользователь"			, мТекущийПользователь);
	Запрос.УстановитьПараметр("РекласификацияБюджетаСсылка"	, Объект.Ссылка);
	
	ВыборкаЗадач = Запрос.Выполнить().Выбрать();
	
	Если ВыборкаЗадач.Следующий() Тогда
		
		РазрешеноМенятьСтатус = Истина;
		
	КонецЕсли;																				
	
	Элементы.Статус.Доступность = РазрешеноМенятьСтатус;	
	
	// Установим необходимый вид просмотра документа
	Если НЕ РазрешеноРедактирование Тогда
		
		ТолькоПросмотр = Истина;
		
//		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Записать.Доступность = РазрешеноМенятьСтатус;
		Элементы.КнопкаПровестиИЗакрыть.Доступность = РазрешеноМенятьСтатус;
		Элементы.КнопкаПровести.Доступность = РазрешеноМенятьСтатус;
		
	Иначе
		
		ЭтаФорма.ТолькоПросмотр = Ложь;
		
//		ЭлементыФормы.ОсновныеДействияФормы.Кнопки.Записать.Доступность = Истина;
		Элементы.КнопкаПровестиИЗакрыть.Доступность = Истина;
		Элементы.КнопкаПровести.Доступность = РазрешеноМенятьСтатус;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПровестиИЗакрыть(Команда)
	
	Если Записать(Новый Структура("РежимЗаписи", ПолучитьРежимЗаписиДокумента())) Тогда
		Закрыть();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура КомандаПровести(Команда)
	
	Записать(Новый Структура("РежимЗаписи", ПолучитьРежимЗаписиДокумента()));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьРежимЗаписиДокумента()
	
	РежимЗаписи = Неопределено;
	
	// Проводим во всех статусах для контроля лимитов 
	Если Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Проведен 
		или Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.БюджетныйКонтроль
		или Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДК
		или Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФО 
		или Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДФМ  
		или Объект.Статус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДЭИ Тогда
	
		РежимЗаписи = РежимЗаписиДокумента.Проведение;
		
	Иначе 		
		Если Объект.Ссылка.Проведен Тогда  			
			РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения;
		Иначе 			
			РежимЗаписи = РежимЗаписиДокумента.Запись;
		КонецЕсли; 		
	КонецЕсли;
		
	Возврат РежимЗаписи;
	
КонецФункции

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьСписокДоступныхСтатусов();
	
	УстановитьРежимПросмотраДокумента();

КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ПричинаИзмененияСтатуса = "";
	Если СпрашиватьПричинуИзмененияСтатуса() Тогда
		ВвестиСтроку(Объект.ПричинаИзмененияСтатуса, "Введите причину изменения статуса",,Истина);
		
		// АБС ВСТАВКА Вводим номера телефонов 
		абс_БизнесПроцессыКлиент.ВвестиВнутреннийНомерТелефона(ПолучитьДанныеПользователя());
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеПользователя() 
	
	СтруктураПользователя = Новый Структура("Пользователь, ВнутреннийНомер");
	
	СтруктураПользователя.Пользователь 		= глЗначениеПеременной("глТекущийПользователь");
	СтруктураПользователя.ВнутреннийНомер 	= СтруктураПользователя.Пользователь.абс_ВнутреннийНомер;
	
	Возврат СтруктураПользователя;
	
КонецФункции

&НаСервере
Функция СпрашиватьПричинуИзмененияСтатуса()
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат ЛОЖЬ;
	КонецЕсли;
	
	Возврат НЕ Объект.Статус = Объект.Ссылка.Статус;
	
КонецФункции

&НаСервере
Процедура РассчитатьСуммы(Сумма)
	
	СтруктураКурса = МодульВалютногоУчета.ПолучитьКурсВалюты(Объект.ВалютаДокумента, Объект.Дата);
	Если СтруктураКурса.Кратность = 0 Тогда
		Объект.СуммаВал = Объект.Сумма;
	Иначе
		Объект.СуммаВал = Объект.Сумма*СтруктураКурса.Курс/СтруктураКурса.Кратность;
	КонецЕсли;
	
	Объект.СуммаЛимита = Объект.Сумма;
	Объект.СуммаЛимитаВал = Объект.СуммаВал;
	
КонецПроцедуры


&НаКлиенте
Процедура СуммаПриИзменении(Элемент)
	// Вставить содержимое обработчика.
	РассчитатьСуммы(Объект.Сумма);

КонецПроцедуры



