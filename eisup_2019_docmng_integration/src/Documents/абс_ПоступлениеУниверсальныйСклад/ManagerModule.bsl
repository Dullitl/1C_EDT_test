// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М4", "М-4 (Приходный ордер)", ПечатьМ4(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ унифицированной формы М-4
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-4 (приходный ордер).
//
Функция ПечатьМ4_М(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	Склад КАК МестоПриемки,
	|	Склад.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Контрагент.Код КАК ПоставщикКод,
	|	Контрагент     КАК Поставщик,
	|	Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПоступлениеУниверсальныйСклад КАК АБС_ПоступлениеУниверсальныйСклад
	|ГДЕ
	|	АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + " КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПоступлениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПоступлениеУниверсальныйСклад.Материалы КАК АБС_ПоступлениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС,
	                        |		АБС_ПоступлениеУниверсальныйСклад.Цена) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
	
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПоступлениеУниверсальныйСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
			ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = СчетаУчета.СчетРасчетов;		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		НомерСтраницы   = 1;

		КоличествоСтрок = ВыборкаСтрокТовары.Количество();

		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;

		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	

		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;


			Ном = Ном + 1;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

			Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
			ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
				+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
			Цена              = ?(КоличествоПринято = 0, 0, (ВсегоСНДС - СуммаНДС) / КоличествоПринято);

			ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
			ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
			ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
			ОбластьМакета.Параметры.Цена              = Цена;
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
			                                          + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
			                                          + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
													  
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда

				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
													  
			ТабДокумент.Вывести(ОбластьМакета);

			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
			ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
			ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиМОЛ(Ссылка.Склад,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);

		Если ЗначениеЗаполнено(Ссылка.Доверенность) Тогда
			ОбластьМакета.Параметры.ФИОМОЛ = НайтиФИО_Сдал(Ссылка.Доверенность.ФизЛицо,ОбластьМакета.Параметры.ДолжностьМОЛ, Ссылка.Дата);
			//ОбластьМакета.Параметры.ТекстПоДоверенности = "по довер.: № "+ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка.Доверенность)+" от "+Формат(Ссылка.Доверенность.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ4()

Функция ПечатьМ4_О(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	Склад КАК МестоПриемки,
	|	Склад.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Контрагент.Код КАК ПоставщикКод,
	|	Контрагент     КАК Поставщик,
	|	Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПоступлениеУниверсальныйСклад КАК АБС_ПоступлениеУниверсальныйСклад
	|ГДЕ
	|	АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + " КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПоступлениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПоступлениеУниверсальныйСклад.Оборудование КАК АБС_ПоступлениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС,
	                        |		АБС_ПоступлениеУниверсальныйСклад.Цена) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
	
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПоступлениеУниверсальныйСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
			ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = СчетаУчета.СчетРасчетов;		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		НомерСтраницы   = 1;

		КоличествоСтрок = ВыборкаСтрокТовары.Количество();

		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;

		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	

		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;


			Ном = Ном + 1;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

			Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
			ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
				+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
			Цена              = ?(КоличествоПринято = 0, 0, (ВсегоСНДС - СуммаНДС) / КоличествоПринято);

			ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
			ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
			ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
			ОбластьМакета.Параметры.Цена              = Цена;
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
			                                          + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
			                                          + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
													  
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда

				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
													  
			ТабДокумент.Вывести(ОбластьМакета);

			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
			ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
			ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиМОЛ(Ссылка.Склад,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);

		Если ЗначениеЗаполнено(Ссылка.Доверенность) Тогда
			ОбластьМакета.Параметры.ФИОМОЛ = НайтиФИО_Сдал(Ссылка.Доверенность.ФизЛицо,ОбластьМакета.Параметры.ДолжностьМОЛ, Ссылка.Дата);
			//ОбластьМакета.Параметры.ТекстПоДоверенности = "по довер.: № "+ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка.Доверенность)+" от "+Формат(Ссылка.Доверенность.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ4()

Функция ПечатьМ4_Т(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;

	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	Склад КАК МестоПриемки,
	|	Склад.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Контрагент.Код КАК ПоставщикКод,
	|	Контрагент     КАК Поставщик,
	|	Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПоступлениеУниверсальныйСклад КАК АБС_ПоступлениеУниверсальныйСклад
	|ГДЕ
	|	АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + " КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПоступлениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПоступлениеУниверсальныйСклад.Товары КАК АБС_ПоступлениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
	
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПоступлениеУниверсальныйСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
			ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = СчетаУчета.СчетРасчетов;		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		НомерСтраницы   = 1;

		КоличествоСтрок = ВыборкаСтрокТовары.Количество();

		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;

		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	

		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;


			Ном = Ном + 1;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

			Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
			ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
				+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
			Цена              = ?(КоличествоПринято = 0, 0, (ВсегоСНДС - СуммаНДС) / КоличествоПринято);

			ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
			ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
			ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
			ОбластьМакета.Параметры.Цена              = Цена;
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
			                                          + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
			                                          + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
													  
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда

				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
													  
			ТабДокумент.Вывести(ОбластьМакета);

			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
			ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
			ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиМОЛ(Ссылка.Склад,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);

		Если ЗначениеЗаполнено(Ссылка.Доверенность) Тогда
			ОбластьМакета.Параметры.ФИОМОЛ = НайтиФИО_Сдал(Ссылка.Доверенность.ФизЛицо,ОбластьМакета.Параметры.ДолжностьМОЛ, Ссылка.Дата);
			//ОбластьМакета.Параметры.ТекстПоДоверенности = "по довер.: № "+ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка.Доверенность)+" от "+Формат(Ссылка.Доверенность.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ4()

Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	Склад КАК МестоПриемки,
	|	Склад.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Контрагент.Код КАК ПоставщикКод,
	|	Контрагент     КАК Поставщик,
	|	Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	УчитыватьНДС,
	|	СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПоступлениеУниверсальныйСклад КАК АБС_ПоступлениеУниверсальныйСклад
	|ГДЕ
	|	АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоМатериалам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + " КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПоступлениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПоступлениеУниверсальныйСклад.Материалы КАК АБС_ПоступлениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС,
	                        |		АБС_ПоступлениеУниверсальныйСклад.Цена) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
							
	ТекстЗапросаПоОборудованиям = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + " КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПоступлениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПоступлениеУниверсальныйСклад.Оборудование КАК АБС_ПоступлениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС,
	                        |		АБС_ПоступлениеУниверсальныйСклад.Цена) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";

	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + " КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
	                        |		СУММА(АБС_ПоступлениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПоступлениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПоступлениеУниверсальныйСклад.Товары КАК АБС_ПоступлениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПоступлениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПоступлениеУниверсальныйСклад.ЕдиницаИзмерения,
	                        |		АБС_ПоступлениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПоступлениеУниверсальныйСклад.СтавкаНДС) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
							
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПоступлениеУниверсальныйСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТЧ = Новый Запрос();
		ЗапросПоТЧ.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТЧ.УстановитьПараметр("Курс",      1);
			ЗапросПоТЧ.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		Если Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
			ЗапросПоТЧ.Текст = ТекстЗапросаПоМатериалам;
		ИначеЕсли Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда
			ЗапросПоТЧ.Текст = ТекстЗапросаПоОборудованиям;
		Иначе
			ЗапросПоТЧ.Текст = ТекстЗапросаПоТоварам;
		КонецЕсли;
		ВыборкаСтрокТовары = ЗапросПоТЧ.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = СчетаУчета.СчетРасчетов;		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);

		НомерСтраницы   = 1;

		КоличествоСтрок = ВыборкаСтрокТовары.Количество();

		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;

		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	

		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		Пока ВыборкаСтрокТовары.Следующий() Цикл

			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;


			Ном = Ном + 1;

			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

			Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
			ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
				+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
			Цена              = ?(КоличествоПринято = 0, 0, (ВсегоСНДС - СуммаНДС) / КоличествоПринято);

			ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
			ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
			ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
			ОбластьМакета.Параметры.Цена              = Цена;
			ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
			                                          + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
			                                          + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
													  
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;

			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда

				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;
													  
			ТабДокумент.Вывести(ОбластьМакета);

			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
			ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
			ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиМОЛ(Ссылка.Склад,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);

		Если ЗначениеЗаполнено(Ссылка.Доверенность) Тогда
			ОбластьМакета.Параметры.ФИОМОЛ = НайтиФИО_Сдал(Ссылка.Доверенность.ФизЛицо,ОбластьМакета.Параметры.ДолжностьМОЛ, Ссылка.Дата);
			//ОбластьМакета.Параметры.ТекстПоДоверенности = "по довер.: № "+ОбщегоНазначения.ПолучитьНомерНаПечать(Ссылка.Доверенность)+" от "+Формат(Ссылка.Доверенность.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ4()


Функция НайтиФИО_Сдал(ФизЛицо,Должность, Дата)  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL 
	|			ТОГДА &ФизЛицо
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ФИО,
	|	РаботникиОрганизацийСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, Сотрудник.Физлицо = &ФизЛицо) КАК РаботникиОрганизацийСрезПоследних
	|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо";
	Запрос.УстановитьПараметр("ФизЛицо",ФизЛицо);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Должность = Выборка.Должность;
	Возврат Выборка.ФИО;	
КонецФункции

Функция НайтиМОЛ(Склад,Должность,Дата)  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL 
	|			ТОГДА ОтветственныеЛицаСрезПоследних.ФизическоеЛицо
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ФИО,
	|	РаботникиОрганизацийСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, СтруктурнаяЕдиница = &Склад) КАК ОтветственныеЛицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК РаботникиОрганизацийСрезПоследних
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо";
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Дата",Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Должность = Выборка.Должность;
	Возврат Выборка.ФИО;
КонецФункции

