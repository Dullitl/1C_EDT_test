//////////////////////////////
/////ПЕРЕМЕННЫЕ МОДУЛЯ
Перем СчетНазначения;


////материалы
Процедура ОбработкаПроведенияМ(Отказ, Режим)
	Если НЕ ЗначениеЗаполнено(Склад)Тогда
		Сообщить("Не выбран склад");
		Отказ = Истина;
		
	КонецЕсли; 
	Если ЗабалансовыйУчет Тогда
		СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);	
		
		Если НЕ ЗначениеЗаполнено(СчетНазначения) Тогда
			Сообщить("Не найден счет назначения ""Забалансовый учет""");
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;	

	Для каждого ТекСтрока Из Материалы Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указан материал.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество материала """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
			
			Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
			Отказ = Истина;
			
		КонецЕсли;		
		
	КонецЦикла; 
		
	Если Не Отказ Тогда
		
		Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
			// регистр ЗабалансовыйУчет 
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.МатериалыНаСкладе;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Сумма = ?(УчитыватьНДС,?(СуммаВключаетНДС,ТекСтрокаМатериалы.Сумма,ТекСтрокаМатериалы.Сумма+ТекСтрокаМатериалы.СуммаНДС) ,ТекСтрокаМатериалы.Сумма);
			Движение.КоличествоДт = ТекСтрокаМатериалы.Количество;
			Движение.Содержание = "Поступили материалы";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ТекСтрокаМатериалы.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияМатериалы] = ?(ЗабалансовыйУчет,СчетНазначения,ТекСтрокаМатериалы.СчетНазначения);
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;
			Движение.Регистратор = Ссылка;
		КонецЦикла;

	КонецЕсли;
КонецПроцедуры

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьМ(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение(НСтр("ru = 'Документ можно распечатать только после его записи'"));
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение(НСтр("ru = Недостаточно полномочий для печати непроведенного документа!'"));
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);

		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Ссылка);
		
		Если НаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.АБС_ПоступлениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.АБС_ПоступлениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено, Неопределено);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект ), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормМ() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",              "М-4 (Приходный ордер)");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////оборудование

Процедура ОбработкаПроведенияО(Отказ, Режим)
	Если НЕ ЗначениеЗаполнено(Склад)Тогда
		Сообщить("Не выбран склад");
		Отказ = Истина;
	КонецЕсли; 
	Если ЗабалансовыйУчет Тогда
		СчетНазначения=Справочники.АБС_СчетНазначенияОборудование.НайтиПоНаименованию("Забалансовый учет",Истина);	
		
		Если НЕ ЗначениеЗаполнено(СчетНазначения) Тогда
			Сообщить("Не найден счет назначения ""Забалансовый учет""");
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;	

	Для каждого ТекСтрока Из Оборудование Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
			
			Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
			Отказ = Истина;
			
		КонецЕсли;		
		
	КонецЦикла; 
		
	Если Не Отказ Тогда
		
		Для Каждого ТекСтрокаОборудование Из Оборудование Цикл
			// регистр ЗабалансовыйУчет 
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Сумма = ?(УчитыватьНДС,?(СуммаВключаетНДС,ТекСтрокаОборудование.Сумма,ТекСтрокаОборудование.Сумма+ТекСтрокаОборудование.СуммаНДС) ,ТекСтрокаОборудование.Сумма);
			Движение.КоличествоДт = ТекСтрокаОборудование.Количество;
			Движение.Содержание = "Поступило оборудование";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ТекСтрокаОборудование.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияОборудование] = ?(ЗабалансовыйУчет,СчетНазначения,ТекСтрокаОборудование.СчетНазначения);
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьО(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение(НСтр("ru = 'Документ можно распечатать только после его записи'"));
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение(НСтр("ru = Недостаточно полномочий для печати непроведенного документа!'"));
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	//Если ИмяМакета = "АБС_М4" Тогда
	//	Обработка = Обработки.ПечатьМ4.Создать();
	//	Обработка.СсылкаНаОбъект=ЭтотОбъект.Ссылка;
	//	ТабДокумент = Обработка.Печать();	
	//	//АБС-		
	//
	//Иначе
		Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);

		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Ссылка);
		
		Если НаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.АБС_ПоступлениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.АБС_ПоступлениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено, Неопределено);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект ), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормО() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",              "М-4 (Приходный ордер)");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

////товары
Процедура ОбработкаПроведенияТ(Отказ, Режим)
	
	Если НЕ ЗначениеЗаполнено(Склад)Тогда
		Сообщить("Не выбран склад");
		Отказ = Истина;
	КонецЕсли;
	
	Для каждого ТекСтрока Из Товары Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
			КонецЦикла;
	
	Для Каждого ТекСтрокаТовары Из Товары Цикл
		// регистр ЗабалансовыйУчет 
		Движение = Движения.ЗабалансовыйУчет.Добавить();
		Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.Сумма = ?(УчитыватьНДС,?(СуммаВключаетНДС,ТекСтрокаТовары.Сумма,ТекСтрокаТовары.Сумма+ТекСтрокаТовары.СуммаНДС) ,ТекСтрокаТовары.Сумма);
		Движение.КоличествоДт = ТекСтрокаТовары.Количество;
		Движение.Содержание = "Поступили товары";
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ТекСтрокаТовары.Номенклатура;
		Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;
	КонецЦикла;
	            
КонецПроцедуры

//АБС+

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьТ(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение(НСтр("ru = 'Документ можно распечатать только после его записи'"));
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение(НСтр("ru = Недостаточно полномочий для печати непроведенного документа!'"));
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	//Если ИмяМакета = "АБС_М4" Тогда
	//	Обработка = Обработки.ПечатьМ4.Создать();
	//	Обработка.СсылкаНаОбъект=ЭтотОбъект.Ссылка;
	//	ТабДокумент = Обработка.Печать();	
	//	//АБС-		
	//
	//Иначе
		Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);

		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Ссылка);
		
		Если НаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.АБС_ПоступлениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.АБС_ПоступлениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено, Неопределено);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект ), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормТ() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",              "М-4 (Приходный ордер)");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()
//АБС-


//временные обёртки процедур и функций
Процедура ОбработкаПроведения_НеРаботает(Отказ, Режим)
	Отказ = Ложь;
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		ОбработкаПроведенияМ(Отказ, Режим)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
		ОбработкаПроведенияО(Отказ, Режим)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда 
		ОбработкаПроведенияТ(Отказ, Режим)
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	Если НЕ ЗначениеЗаполнено(Склад)Тогда
		Сообщить("Не выбран склад");
		Отказ = Истина;
		
	КонецЕсли; 
	Если ЗабалансовыйУчет И НЕ (ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары) Тогда
		СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);	
		
		Если НЕ ЗначениеЗаполнено(СчетНазначения) Тогда
			Сообщить("Не найден счет назначения ""Забалансовый учет""");
			Отказ = Истина;
		КонецЕсли;	
	КонецЕсли;	
	
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		Для каждого ТекСтрока Из Материалы Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
				Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указан материал.");
				Отказ = Истина;			
			КонецЕсли;
			Если ТекСтрока.Количество = 0 Тогда
				Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество материала """ + ТекСтрока.Номенклатура + ".");
				Отказ = Истина;
			КонецЕсли;
			Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
				
				Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
				Отказ = Истина;
				
			КонецЕсли;		
			
		КонецЦикла; 
		
		Если Не Отказ Тогда
			НаборЗаписей = РегистрыБухгалтерии.ЗабалансовыйУчет.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
			//Заполнение движений
			Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
				// регистр ЗабалансовыйУчет
				
				Движение = НаборЗаписей.Добавить();
				Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.МатериалыНаСкладе;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = ?(УчитыватьНДС,?(СуммаВключаетНДС,ТекСтрокаМатериалы.Сумма,ТекСтрокаМатериалы.Сумма+ТекСтрокаМатериалы.СуммаНДС) ,ТекСтрокаМатериалы.Сумма);
				Движение.КоличествоДт = ТекСтрокаМатериалы.Количество;
				Движение.Содержание = "Поступили материалы";
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ТекСтрокаМатериалы.Номенклатура;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияМатериалы] = ?(ЗабалансовыйУчет,СчетНазначения,ТекСтрокаМатериалы.СчетНазначения);
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;
			КонецЦикла;
			НаборЗаписей.Записать(); 
			
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда
		Для каждого ТекСтрока Из Оборудование Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
				Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
				Отказ = Истина;			
			КонецЕсли;
			Если ТекСтрока.Количество = 0 Тогда
				Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
				Отказ = Истина;
			КонецЕсли;
			Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
				
				Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
				Отказ = Истина;
				
			КонецЕсли;		
			
		КонецЦикла; 
		
		Если Не Отказ Тогда
			НаборЗаписей = РегистрыБухгалтерии.ЗабалансовыйУчет.СоздатьНаборЗаписей();
			НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
			СчетНазначенияОборудования = Справочники.АБС_СчетНазначенияОборудование.НайтиПоНаименованию("Забалансовый учет",Истина);            
			Для Каждого ТекСтрокаОборудование Из Оборудование Цикл
				// регистр ЗабалансовыйУчет 
				Движение = НаборЗаписей.Добавить();
				Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.Сумма = ?(УчитыватьНДС,?(СуммаВключаетНДС,ТекСтрокаОборудование.Сумма,ТекСтрокаОборудование.Сумма+ТекСтрокаОборудование.СуммаНДС) ,ТекСтрокаОборудование.Сумма);
				Движение.КоличествоДт = ТекСтрокаОборудование.Количество;
				Движение.Содержание = "Поступило оборудование";
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ТекСтрокаОборудование.Номенклатура;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияОборудование] = ?(ЗабалансовыйУчет,СчетНазначенияОборудования,ТекСтрокаОборудование.СчетНазначения);
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;
			КонецЦикла;
			НаборЗаписей.Записать();
		КонецЕсли;
		
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда
		Для каждого ТекСтрока Из Товары Цикл
			Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
				Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
				Отказ = Истина;			
			КонецЕсли;
			Если ТекСтрока.Количество = 0 Тогда
				Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
		НаборЗаписей = РегистрыБухгалтерии.ЗабалансовыйУчет.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Регистратор.Установить(Ссылка);
		Для Каждого ТекСтрокаТовары Из Товары Цикл
			// регистр ЗабалансовыйУчет 
			Движение = НаборЗаписей.Добавить();
			Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.Сумма = ?(УчитыватьНДС,?(СуммаВключаетНДС,ТекСтрокаТовары.Сумма,ТекСтрокаТовары.Сумма+ТекСтрокаТовары.СуммаНДС) ,ТекСтрокаТовары.Сумма);
			Движение.КоличествоДт = ТекСтрокаТовары.Количество;
			Движение.Содержание = "Поступили товары";
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = ТекСтрокаТовары.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;
		КонецЦикла;
		НаборЗаписей.Записать();
	Иначе
		Сообщить("Неправильный ВидОперации.");
		Отказ = Истина;
	КонецЕсли;
	
	
КонецПроцедуры

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		ПечатьМ(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
		ПечатьО(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда 
		ПечатьТ(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",              "М-4 (Приходный ордер)");
	
	Возврат СтруктураМакетов;

	//Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
	//	Возврат ПолучитьСтруктуруПечатныхФормМ();
	//ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
	//	Возврат ПолучитьСтруктуруПечатныхФормО();
	//ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда 
	//	Возврат ПолучитьСтруктуруПечатныхФормТ();
	//Иначе
	//	Возврат Неопределено;
	//КонецЕсли;
КонецФункции

Процедура ОчиститьНенужныеТабличныеЧасти() Экспорт
	Если ВидОперации <> Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		Материалы.Очистить();
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда
		Оборудование.Очистить();
	КонецЕсли;
	
	Если ВидОперации <> Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда
		Товары.Очистить();
	КонецЕсли;
	
КонецПроцедуры
////