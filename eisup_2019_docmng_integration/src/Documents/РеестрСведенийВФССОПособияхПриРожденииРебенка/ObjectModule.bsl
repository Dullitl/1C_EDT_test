////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ

Перем СоответствиеСтепенейРодства;

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Печатает реестр сведений для назначения и выплаты единовременного пособия при рождении ребенка
//
// Параметры
//  ВыборкаПоШапкеДокумента  			- Строка выборки по шапке документа
//  ВыборкаПоТЧРаботникиОрганизации  	- Выборка результата запроса по табличной части
//
// Возвращаемое значение:
//   ТабличныйДокумент
//
Функция ПечатьРеестрСведенийВФСС(ВыборкаПоШапкеДокумента, ВыборкаПоТЧРаботникиОрганизации)

	ТабДокумент = Новый ТабличныйДокумент;
		
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСведенийВФСС";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = ПолучитьМакет("РеестрСведенийВФСС");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	
	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьСтрока);
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
	ОбластьПодписи.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
	ТабДокумент.Вывести(ОбластьШапка);
	
	ВсегоСтрокДокумента = ВыборкаПоТЧРаботникиОрганизации.Количество();
	ВыведеноСтрок = 0;
	Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
	
		ОбластьСтрока.Параметры.Заполнить(ВыборкаПоТЧРаботникиОрганизации);
		
		ОбластьСтрока.Параметры.ФИОСтатусПолучателя = ВыборкаПоТЧРаботникиОрганизации.ФИОСотрудника + " (" + ВыборкаПоТЧРаботникиОрганизации.Статус + ")";
		ОбластьСтрока.Параметры.Ребенок = ВыборкаПоТЧРаботникиОрганизации.Ребенок + " (" + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаРожденияРебенка, "ДФ=dd.MM.yyyy") + ")";
		
		ОбластьСтрока.Параметры.АдресРегистрации = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ВыборкаПоТЧРаботникиОрганизации.АдресРегистрации);
		ОбластьСтрока.Параметры.АдресПроживания = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ВыборкаПоТЧРаботникиОрганизации.АдресПроживания);
		
		// разбиение на страницы
		ВыведеноСтрок = ВыведеноСтрок + 1;
		
		// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьПодвал);
			Если ВыводитьПодписиВРеестрПособий Тогда
				ВыводимыеОбласти.Добавить(ОбластьПодписи);
			КонецЕсли;
			ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрока);
	
	КонецЦикла; 
	
	ТабДокумент.Вывести(ОбластьПодвал);
	Если ВыводитьПодписиВРеестрПособий Тогда
		ТабДокумент.Вывести(ОбластьПодписи);
	КонецЕсли;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьРеестрСведенийВФСС()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
		
	// Для печати бланка нет необходимости проверять коррктность заполнения документа
	Если ИмяМакета = "ЗаявлениеВФССОВыплатеПособияБланк" Тогда
		
		ВыборкаПоШапкеДокумента = Неопределено
		
	Иначе
		
		ВыборкаПоШапкеДокумента = ОбменСведениямиОПособияхСФСС.СформироватьЗапросПоШапкеДокумента(ЭтотОбъект).Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
		
		ВыборкаПоТЧРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	
		Отказ = Ложь;
	
		Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
		
		ОбменСведениямиОПособияхСФСС.ПроверитьДанныеСтрахователя(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
		
		Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
		
			ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(ВыборкаПоТЧРаботникиОрганизации, Отказ, Заголовок, ИмяМакета);
		
		КонецЦикла; 
		
		ВыборкаПоТЧРаботникиОрганизации.Сбросить();
		
	КонецЕсли;
	
	Если ИмяМакета = "ЗаявлениеВФССОВыплатеПособия" И НЕ Отказ Тогда
		
		// Выводим все бланки заявлений в один табличный документ
		// Для этого в первый раз передаем значение ТабДокумент = Неопределено
		
		СтруктураДанных = ОбменСведениямиОПособияхСФСС.СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия();
		
		ЗаполнитьЗначенияСвойств(СтруктураДанных, ВыборкаПоШапкеДокумента);
		
		СтруктураДанных.ВидПособия = Перечисления.ВидыПособийСоциальногоСтрахования.ПриРожденииРебенка;
		
		ТабДокумент = Новый ТабличныйДокумент;;
		
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеВФССОВыплатеПособия";
		ТабДокумент.ПолеСлева = 0;
		ТабДокумент.ПолеСправа = 0;
		
		Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(СтруктураДанных, ВыборкаПоТЧРаботникиОрганизации);
		
			ТабДокументЗаявления = ОбменСведениямиОПособияхСФСС.ПечатьЗаявлениеВФССОВыплатеПособия(СтруктураДанных);
			
			Если ТабДокумент.ВысотаТаблицы > 0 Тогда
			
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			КонецЕсли; 
			
			ТабДокумент.Вывести(ТабДокументЗаявления);
		
		КонецЦикла; 
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Заявление о выплате пособия (оплате отпуска)", , ТабДокумент);
		
	ИначеЕсли ИмяМакета = "ЗаявлениеВФССОВыплатеПособияБланк" Тогда // Бланк печатаем в любом случае, даже если отказ
		
		ТабДокумент = ОбменСведениямиОПособияхСФСС.ПечатьЗаявлениеВФССОВыплатеПособия(ОбменСведениямиОПособияхСФСС.СтруктураДанныхДляПечатиЗаявленийВФССОВыплатеПособия());
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Бланк - Заявление о выплате пособия (оплате отпуска)", , ТабДокумент);
		
	ИначеЕсли ИмяМакета = "ОписьЗаявленийИДокументовВФСС"  И НЕ Отказ Тогда
		
		ТабДокумент = ОбменСведениямиОПособияхСФСС.ПечатьОписьЗаявленийИДокументовВФСС(ВыборкаПоШапкеДокумента, ВыборкаПоТЧРаботникиОрганизации);
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Опись заявлений и документов в ФСС");
		
	ИначеЕсли ИмяМакета = "РеестрСведенийВФСС"  И НЕ Отказ Тогда
		
		ТабДокумент = ПечатьРеестрСведенийВФСС(ВыборкаПоШапкеДокумента, ВыборкаПоТЧРаботникиОрганизации);
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Реестр сведений в ФСС",,ТабДокумент);
		
	КонецЕсли;
	
	Если Отказ Тогда
	
		ОбработкаКомментариев.ПоказатьСообщения();
	
	КонецЕсли; 
	
	Возврат Неопределено;
		
КонецФункции // Печать() 

#КонецЕсли

// Очищает и заполняет табличную часть "РаботникиОрганизации", подбирает детей из состава семьи
// физического лица с датой рождения за последний год от даты документа, из подбора исключаются
// дети на которых заявление оформлялось ранее.
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура Автозаполнение() Экспорт

	РаботникиОрганизации.Очистить();
	
	ТаблицаРезультатаЗапроса = ПолучитьСписокДетей();
	
	Если ТаблицаРезультатаЗапроса.Количество() = 0 Тогда
	
		Возврат;
	
	КонецЕсли; 
	
	ЛичныеДанныеСотрудников = ОбменСведениямиОПособияхСФСС.ДанныеСотрудникаДляЗаявленияНаВыплатуПособия(Организация, ТаблицаРезультатаЗапроса.ВыгрузитьКолонку("Сотрудник"), Дата, "ДляАвтозаполнения");
	
	Для Каждого СтрокаТаблицаРезультатаЗапроса Из ТаблицаРезультатаЗапроса Цикл
		
		НоваяСтрока = РаботникиОрганизации.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицаРезультатаЗапроса);
		ОбменСведениямиОПособияхСФСС.ЗаписатьФИОРебенкаВПоляДокумента(СтрокаТаблицаРезультатаЗапроса.Ребенок, НоваяСтрока);
		ЗаполнитьЛичныеДанныеСотрудника(НоваяСтрока, ЛичныеДанныеСотрудников);
		
		УстановитьСтепеньРодства(НоваяСтрока, СтрокаТаблицаРезультатаЗапроса.СтепеньРодства);
		
	КонецЦикла; 

КонецПроцедуры // Автозаполнение()

// Заполняет строку данными Сортудника (ФизЛица)
//
// Параметры
//  ТекущаяСтрока  - строка табличной части "РаботникиОрганизации"
//
Процедура ЗаполнитьЛичныеДанныеСотрудника(ТекущаяСтрока, ЛичныеДанныеСотрудников = Неопределено) Экспорт

	Если ЛичныеДанныеСотрудников = Неопределено Тогда
		ЛичныеДанныеСотрудника = ОбменСведениямиОПособияхСФСС.ДанныеСотрудникаДляЗаявленияНаВыплатуПособия(Организация, ТекущаяСтрока.Сотрудник, Дата);
	Иначе
		ЛичныеДанныеСотрудника = ЛичныеДанныеСотрудников.Найти(ТекущаяСтрока.Сотрудник, "СотрудникЗаполнения");
	КонецЕсли;
	
	Если ЛичныеДанныеСотрудника = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ТекущаяСтрока, ЛичныеДанныеСотрудника);
	
	ТекущаяСтрока.Совместительство = (ЛичныеДанныеСотрудника.ВидЗанятости <> Перечисления.ВидыЗанятостиВОрганизации.ОсновноеМестоРаботы);
	ТекущаяСтрока.ВидДокументаУдостоверяющегоЛичность 			= ЛичныеДанныеСотрудника.ВидДокумента;
	ТекущаяСтрока.НомерДокументаУдостоверяющегоЛичность 		= ЛичныеДанныеСотрудника.НомерДокумента;
	ТекущаяСтрока.СерияДокументаУдостоверяющегоЛичность 		= ЛичныеДанныеСотрудника.СерияДокумента;
	ТекущаяСтрока.ДатаВыдачиДокументаУдостоверяющегоЛичность 	= ЛичныеДанныеСотрудника.ДатаВыдачиДокумента;
	
КонецПроцедуры

Процедура ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоРаботникиОрганизации = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	Обработка = глЗначениеПеременной("глОбработкаСообщений");
	СообщенияРазделПроверки = Обработка.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Информация);

	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = ОбменСведениямиОПособияхСФСС.СформироватьЗапросПоШапкеДокумента(ЭтотОбъект).Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	Если ВыборкаПоРаботникиОрганизации = Неопределено Тогда
		ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	КонецЕсли;
	
	Отказ = Ложь;
	
	ОбменСведениямиОПособияхСФСС.ПроверитьДанныеСтрахователя(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
	Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл
		
		ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
		
	КонецЦикла; 
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		Обработка.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , СообщенияРазделПроверки);		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьПравильностьЗаполненияДокумента()

// Заполняет Статус (степень родства ФизЛица по отношению к ребенку) в строке ТЧ "РаботникиОрганизации"
//
// Параметры
//  ТекущаяСтрока  - строка табличной части "РаботникиОрганизации"
//
//
Процедура УстановитьСтепеньРодства(ТекущаяСтрока, СтепеньРодстваРебенка = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(ТекущаяСтрока.ФамилияРебенка + ТекущаяСтрока.ИмяРебенка) Тогда
		
		Возврат;
		
	КонецЕсли; 
	
	Если СтепеньРодстваРебенка = Неопределено Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ФизическиеЛицаСоставСемьи.СтепеньРодства.Код КАК СтепеньРодства
		|ИЗ
		|	Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
		|ГДЕ
		|	ФизическиеЛицаСоставСемьи.Ссылка = &ФизЛицо
		|	И ФизическиеЛицаСоставСемьи.Имя = &Имя
		|	И ФизическиеЛицаСоставСемьи.ДатаРождения = &ДатаРождения
		|
		|УПОРЯДОЧИТЬ ПО
		|	СтепеньРодства";
		
		Запрос.УстановитьПараметр("ФизЛицо", ТекущаяСтрока.ФизЛицо);
		Запрос.УстановитьПараметр("Имя", ТекущаяСтрока.ФамилияРебенка + " " + ТекущаяСтрока.ИмяРебенка + " " + ТекущаяСтрока.ОтчествоРебенка);
		Запрос.УстановитьПараметр("ДатаРождения", ТекущаяСтрока.ДатаРожденияРебенка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		Если Не РезультатЗапроса.Пустой() Тогда
			
			Выборка = РезультатЗапроса.Выбрать();
			Выборка.Следующий();
			
			СтепеньРодстваРебенка = Выборка.СтепеньРодства;
		КонецЕсли; 
	КонецЕсли;
	
	Если СтепеньРодстваРебенка = Неопределено Тогда
		Возврат
	КонецЕсли;
	
	Если СоответствиеСтепенейРодства = Неопределено Тогда
		СоответствиеСтепенейРодства = Новый Соответствие;
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	СтепениРодстваФизЛиц.Ссылка,
		|	СтепениРодстваФизЛиц.Код
		|ИЗ
		|	Справочник.СтепениРодстваФизЛиц КАК СтепениРодстваФизЛиц";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеСтепенейРодства[СокрЛП(Выборка.Код)] = Выборка.Ссылка
		КонецЦикла;
		
	КонецЕсли;
	
	Если ТекущаяСтрока.Пол = Перечисления.ПолФизическихЛиц.Мужской Тогда
		
		Если СтепеньРодстваРебенка = "05 " ИЛИ СтепеньРодстваРебенка = "06 " Тогда // Сын // Дочь
			
			ТекущаяСтрока.Статус = СоответствиеСтепенейРодства["03"]; // Отец
			
		ИначеЕсли СтепеньРодстваРебенка = "42 " ИЛИ СтепеньРодстваРебенка = "43 " Тогда // Пасынок // Падчерица
			
			ТекущаяСтрока.Статус = СоответствиеСтепенейРодства["40"]; // Отчим
			
		КонецЕсли; 
		
	Иначе
		
		Если СтепеньРодстваРебенка = "05 " ИЛИ СтепеньРодстваРебенка = "06 " Тогда // Сын // Дочь
			
			ТекущаяСтрока.Статус = СоответствиеСтепенейРодства["04"]; // Мать
			
		ИначеЕсли СтепеньРодстваРебенка = "42 " ИЛИ СтепеньРодстваРебенка = "43 " Тогда // Пасынок // Падчерица
			
			ТекущаяСтрока.Статус = СоответствиеСтепенейРодства["41"]; // Мачеха
			
		КонецЕсли; 
		
	КонецЕсли; 
	
	
КонецПроцедуры // УстановитьСтепеньРодства()

// Возвращает таблицу сотрудников, физлиц, детей родившихся за предыдущие 6 месяцев
// от даты документа и на которых не были оформлены заявления.
//
// Параметры
//  ФизЛицо  - Спраочник.ФизическиеЛица - если указать, то запрос вернет список детей
//				только по этомуфизлицу
//
// Возвращаемое значение:
//   ТаблицаЗначений   - выгрузка из результата запроса
//
Функция ПолучитьСписокДетей(Сотрудник = Неопределено) Экспорт

	СтепениРодства = Новый Массив;
	СтепениРодства.Добавить("05"); // Сын
	СтепениРодства.Добавить("06"); // Дочь
	СтепениРодства.Добавить("42"); // Пасынок
	СтепениРодства.Добавить("43"); // Падчерица

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СотрудникиОрганизаций.Ссылка КАК Сотрудник,
	|	СотрудникиОрганизаций.Физлицо
	|ПОМЕСТИТЬ ВТСотрудникиФизлица
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Актуальность
	|	И СотрудникиОрганизаций.ТекущееОбособленноеПодразделение = &Организация
	|	И СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация
	|	И СотрудникиОрганизаций.ВидДоговора В(&ВидыТрудовыхДоговоров)
	|	И (&НеОтбиратьПоСотруднику
	|			ИЛИ СотрудникиОрганизаций.Ссылка = &Сотрудник)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиФизлица.Сотрудник,
	|	СотрудникиФизлица.Физлицо,
	|	ФизическиеЛицаСоставСемьи.Имя КАК Ребенок,
	|	ФизическиеЛицаСоставСемьи.ДатаРождения,
	|	ФизическиеЛицаСоставСемьи.СтепеньРодства
	|ПОМЕСТИТЬ ВТСотрудникиФизЛицаДети
	|ИЗ
	|	ВТСотрудникиФизлица КАК СотрудникиФизлица
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица.СоставСемьи КАК ФизическиеЛицаСоставСемьи
	|		ПО СотрудникиФизлица.Физлицо = ФизическиеЛицаСоставСемьи.Ссылка
	|ГДЕ
	|	ФизическиеЛицаСоставСемьи.СтепеньРодства.Код В(&СтепениРодства)
	|	И ФизическиеЛицаСоставСемьи.ДатаРождения >= &ДатаРождения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Пособия.ФизЛицо КАК ФизЛицо,
	|	Пособия.ФамилияРебенка + "" "" + Пособия.ИмяРебенка + "" "" + Пособия.ОтчествоРебенка КАК Ребенок,
	|	Пособия.ДатаРожденияРебенка КАК ДатаРожденияРебенка
	|ПОМЕСТИТЬ ВТУжеЗарегистрированныеДети
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка.РаботникиОрганизации КАК Пособия
	|ГДЕ
	|	Пособия.Ссылка.Проведен
	|	И Пособия.Ссылка.Ссылка <> &Ссылка
	|	И Пособия.Ссылка.Организация = &Организация
	|	И Пособия.Ссылка.Дата < &ДатаДокумента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.ФизЛицо,
	|	СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.Статус
	|ПОМЕСТИТЬ ВТСтатусыНалогоплательщика
	|ИЗ
	|	РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
	|			&ДатаДокумента,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					СотрудникиОрганизаций.Физлицо
	|				ИЗ
	|					ВТСотрудникиФизЛицаДети КАК СотрудникиОрганизаций)) КАК СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиФизЛицаДети.Сотрудник,
	|	СотрудникиФизЛицаДети.Физлицо,
	|	СотрудникиФизЛицаДети.Ребенок КАК Ребенок,
	|	СотрудникиФизЛицаДети.ДатаРождения КАК ДатаРожденияРебенка,
	|	СотрудникиФизЛицаДети.СтепеньРодства.Код КАК СтепеньРодства,
	|	СотрудникиФизЛицаДети.Сотрудник.Наименование КАК СотрудникНаименование,
	|	ЕСТЬNULL(СтатусыНалогоплательщика.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК СтатусНалогоплательщика
	|ИЗ
	|	ВТСотрудникиФизЛицаДети КАК СотрудникиФизЛицаДети
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУжеЗарегистрированныеДети КАК ВложенныйЗапрос
	|		ПО СотрудникиФизЛицаДети.Ребенок = ВложенныйЗапрос.Ребенок
	|			И СотрудникиФизЛицаДети.Физлицо = ВложенныйЗапрос.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыНалогоплательщика КАК СтатусыНалогоплательщика
	|		ПО СотрудникиФизЛицаДети.Физлицо = СтатусыНалогоплательщика.ФизЛицо
	|ГДЕ
	|	ВложенныйЗапрос.ФизЛицо ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	СотрудникНаименование";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("СтепениРодства", СтепениРодства);
	Запрос.УстановитьПараметр("ДатаРождения", НачалоДня(ДобавитьМесяц(Дата, -6)));
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Сотрудник", Сотрудник);
	Запрос.УстановитьПараметр("НеОтбиратьПоСотруднику", Сотрудник = Неопределено);
	Запрос.УстановитьПараметр("ВидыТрудовыхДоговоров",	ПриемНаРаботуВОрганизациюПереопределяемый.ВидыТрудовыхДоговоров());
	
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции // ПолучитьСписокДетей()

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ЗаявлениеВФССОВыплатеПособия, ЗаявлениеВФССОВыплатеПособияБланк, ОписьЗаявленийИДокументовВФСС, РеестрСведенийВФСС", "Заявления о выплате пособия", "Бланк заявления", "Опись заявлений и документов", "Реестр сведений");
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ, ПроверятьДанные = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоРаботникиОрганизации = Неопределено) Экспорт

	Возврат	ОбменСведениямиОПособияхСФСС.СформироватьФайлРеестра(ЭтотОбъект, Отказ, ПроверятьДанные, ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации)
	
КонецФункции // СформироватьВыходнойФайл()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Запрос по табличной части РаботникиОрганизации для вывода на печать и проверки корректности заполнения
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СформироватьЗапросПоТЧРаботникиОрганизации() Экспорт

	Запрос = Новый Запрос();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Пособия.НомерСтроки,
	|	Пособия.Статус,
	|	Пособия.ФамилияРебенка + "" "" + Пособия.ИмяРебенка + "" "" + Пособия.ОтчествоРебенка КАК Ребенок,
	|	Пособия.ДатаРождения,
	|	Пособия.ДокументыОснования,
	|	Пособия.ИнаяПолезнаяИнформация,
	|	Пособия.КоличествоСтраниц,
	|	Пособия.ПеречислятьПособиеПочтовымПереводом,
	|	Пособия.НаименованиеБанка,
	|	Пособия.БИКБанка,
	|	Пособия.НомерЛицевогоСчета,
	|	Пособия.АдресРегистрации,
	|	ВЫБОР
	|		КОГДА Пособия.АдресПочтовый = """"
	|			ТОГДА Пособия.АдресРегистрации
	|		ИНАЧЕ Пособия.АдресПочтовый
	|	КОНЕЦ КАК АдресПроживания,
	|	Пособия.ДатаСправки КАК ДатаСправкиОРождении,
	|	Пособия.НомерСправки КАК НомерСправкиОРождении,
	|	Пособия.ДатаСправкиОтДругогоРодителя,
	|	Пособия.НомерСправкиОтДругогоРодителя,
	|	Пособия.ДатаРешенияОбОпеке,
	|	Пособия.НомерРешенияОбОпеке,
	|	Пособия.ДатаРешенияОбУсыновлении,
	|	Пособия.НомерРешенияОбУсыновлении,
	|	Пособия.ДатаДоговораОПередачеНаВоспитание,
	|	Пособия.НомерДоговораОПередачеНаВоспитание,
	|	ВЫБОР
	|		КОГДА Пособия.Совместительство
	|			ТОГДА ""внешнее совместительство""
	|		ИНАЧЕ ""основное место работы""
	|	КОНЕЦ КАК ВидЗанятостиСотрудника,
	|	Пособия.ДатаСвидетельстваОРождении,
	|	Пособия.НомерСвидетельстваОРождении,
	|	Пособия.ДатаИногоПодтвержденияРождения,
	|	Пособия.НомерИногоПодтвержденияРождения,
	|	Пособия.Фамилия + "" "" + Пособия.Имя + "" "" + Пособия.Отчество КАК ФИОСотрудника,
	|	Пособия.ИНН КАК ИННСотрудника,
	|	Пособия.СтраховойНомерПФР КАК СНИЛССотрудника,
	|	Пособия.ВидДокументаУдостоверяющегоЛичность КАК УдостоверениеЛичностиВид,
	|	Пособия.ВидДокументаУдостоверяющегоЛичность.КодИМНС КАК ВидУдостоверенияЛичности,
	|	Пособия.НомерДокументаУдостоверяющегоЛичность КАК УдостоверениеЛичностиНомер,
	|	Пособия.СерияДокументаУдостоверяющегоЛичность КАК УдостоверениеЛичностиСерия,
	|	Пособия.ДатаВыдачиДокументаУдостоверяющегоЛичность КАК УдостоверениеЛичностиДата,
	|	Пособия.СрокДействияДокументаУдостоверяющегоЛичность КАК УдостоверениеЛичностиСрокДействия,
	|	Пособия.СерияДокументаУдостоверяющегоЛичность КАК СерияДокумента,
	|	Пособия.НомерДокументаУдостоверяющегоЛичность КАК НомерДокумента,
	|	Пособия.ДатаВыдачиДокументаУдостоверяющегоЛичность КАК ДатаВыдачиДокумента,
	|	Пособия.КемВыданДокумент,
	|	Пособия.Пол КАК ПолСотрудника,
	|	Пособия.ДатаРожденияРебенка,
	|	""4"" КАК ВидВыплаты,
	|	Пособия.СтраховойНомерПФР,
	|	Пособия.ИНН,
	|	Пособия.Пол,
	|	Пособия.ДатаПредставленияПакетаДокументов,
	|	Пособия.ДатаПредставленияПакетаДокументов КАК ДатаПодачиЗаявления,
	|	Пособия.СтатусНалогоплательщика КАК СтатусНалогоплательщикаДляПроверки,
	|	ВЫБОР
	|		КОГДА Пособия.СтатусНалогоплательщика = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусНалогоплательщика,
	|	Пособия.СерияСвидетельстваОРождении,
	|	Пособия.СерияИногоПодтвержденияРождения,
	|	Пособия.ФамилияРебенка,
	|	Пособия.ИмяРебенка,
	|	Пособия.ОтчествоРебенка,
	|	Пособия.Фамилия,
	|	Пособия.Имя,
	|	Пособия.Отчество,
	|	ВЫБОР
	|		КОГДА Пособия.ДатаСправки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА """"
	|		КОГДА Пособия.ДатаСвидетельстваОРождении <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ""03""
	|		ИНАЧЕ ""23""
	|	КОНЕЦ КАК ДокументОРожденииВид,
	|	ВЫБОР
	|		КОГДА Пособия.ДатаСправки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		КОГДА Пособия.ДатаСвидетельстваОРождении <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Пособия.ДатаСвидетельстваОРождении
	|		ИНАЧЕ Пособия.ДатаИногоПодтвержденияРождения
	|	КОНЕЦ КАК ДокументОРожденииДатаВыдачи,
	|	ВЫБОР
	|		КОГДА Пособия.ДатаСправки <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА """"
	|		КОГДА Пособия.ДатаСвидетельстваОРождении <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Пособия.СерияСвидетельстваОРождении + "" "" + Пособия.НомерСвидетельстваОРождении
	|		ИНАЧЕ Пособия.СерияИногоПодтвержденияРождения + "" "" + Пособия.НомерИногоПодтвержденияРождения
	|	КОНЕЦ КАК ДокументОРожденииСерияНомер,
	|	ВЫБОР
	|		КОГДА Пособия.ДатаРешенияОбОпеке <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ""1""
	|		КОГДА Пособия.ДатаРешенияОбУсыновлении <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ""2""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК УсыновлениеОпека,
	|	ВЫБОР
	|		КОГДА Пособия.ДатаРешенияОбОпеке <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Пособия.ДатаРешенияОбОпеке
	|		КОГДА Пособия.ДатаРешенияОбУсыновлении <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Пособия.ДатаРешенияОбУсыновлении
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК УсыновлениеОпекаДатаВыдачи,
	|	ВЫБОР
	|		КОГДА Пособия.ДатаРешенияОбОпеке <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Пособия.НомерРешенияОбОпеке
	|		КОГДА Пособия.ДатаРешенияОбУсыновлении <> ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА Пособия.НомерРешенияОбУсыновлении
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК УсыновлениеОпекаСерияНомер
	|ИЗ
	|	Документ.РеестрСведенийВФССОПособияхПриРожденииРебенка.РаботникиОрганизации КАК Пособия
	|ГДЕ
	|	Пособия.Ссылка = &ДокументСсылка";
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоТЧРаботникиОрганизации()
 
// Проверяет заполненность полей табличной части "РаботникиОрганизации"
// Проверка ведется по строке выборки по табличной части
//
// Параметры
// Параметры: 
//	СтрокаВыборкиПоТЧРаботникиОрганизации	- выборка из результата запрос
//	Отказ 									- флаг отказа
//	Заголовок								- Заголовок для сообщений об ошибках
//
Процедура ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(СтрокаВыборкиПоТЧРаботникиОрганизации, Отказ, Заголовок, ВариантПроверки = "РеестрСведенийВФСС")

	ТекстОшибкиСНомеромСтроки = НСтр("ru='В строке номер %НомерСтроки% табличной части ""Пособия"": '");
	ТекстОшибкиСНомеромСтроки = СтрЗаменить(ТекстОшибкиСНомеромСтроки, "%НомерСтроки%", СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСтроки);
	
	Если ВариантПроверки = "РеестрСведенийВФСС" Тогда
		
		ОбменСведениямиОПособияхСФСС.ПроверитьДанныеЗастрахованного(СтрокаВыборкиПоТЧРаботникиОрганизации, Отказ, Заголовок, ТекстОшибкиСНомеромСтроки);
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.Статус) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана степень родства сотрудника!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ФамилияРебенка + СтрокаВыборкиПоТЧРаботникиОрганизации.ИмяРебенка) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указано ФИО ребенка!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаРожденияРебенка) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата рождения ребенка!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСправкиОтДругогоРодителя) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан номер справки от другого родителя!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСправкиОтДругогоРодителя) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата справки от другого родителя!", Отказ, Заголовок);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСправкиОРождении) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСправкиОРождении) Тогда
			Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаИногоПодтвержденияРождения) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "При рождении ребенка на территории РФ следует указывать только реквизиты Справки о рождении (форма № 24)!", Отказ, Заголовок);
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСправкиОРождении) И Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСправкиОРождении) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан номер Справки о рождении!", Отказ, Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСправкиОРождении) И ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСправкиОРождении) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата Справки о рождении!", Отказ, Заголовок);
			КонецЕсли;
		ИначеЕсли (ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСвидетельстваОРождении)) И (ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаИногоПодтвержденияРождения) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерИногоПодтвержденияРождения)) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Необходимо указать реквизиты одного из документов: Свидетельства о рождении, выданного консульским учреждением РФ, или документа иностранного государства, подтверждающего рождение ребенка!", Отказ, Заголовок);
		Иначе
			Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСвидетельстваОРождении) И Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСвидетельстваОРождении) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан номер Свидетельства о рождении!", Отказ, Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСвидетельстваОРождении) И ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСвидетельстваОРождении) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата Свидетельства о рождении!", Отказ, Заголовок);
			КонецЕсли;
			Если (ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаСвидетельстваОРождении) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСвидетельстваОРождении)) И Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.СерияСвидетельстваОРождении) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана серия Свидетельства о рождении!", Отказ, Заголовок);
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаИногоПодтвержденияРождения) И Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерИногоПодтвержденияРождения) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан номер документа иностранного государства, подтверждающего рождение ребенка!", Отказ, Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаИногоПодтвержденияРождения) И ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерИногоПодтвержденияРождения) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата документа иностранного государства, подтверждающего рождение ребенка!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;
		
		Если (ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаРешенияОбОпеке) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерРешенияОбОпеке)) И (ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаРешенияОбУсыновлении) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерРешенияОбУсыновлении)) И (ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаДоговораОПередачеНаВоспитание) Или ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерДоговораОПередачеНаВоспитание)) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Необходимо указать реквизиты только одного из документов: об опеке, усыновлении или о передаче ребенка на воспитание!", Отказ, Заголовок);
		Иначе
			Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаРешенияОбОпеке) И Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерРешенияОбОпеке) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан номер решения об установлении опеки!", Отказ, Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаРешенияОбОпеке) И ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерРешенияОбОпеке) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата решения об установлении опеки!", Отказ, Заголовок);
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаРешенияОбУсыновлении) И Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерРешенияОбУсыновлении) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан номер решения об усыновлении!", Отказ, Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаРешенияОбУсыновлении) И ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерРешенияОбУсыновлении) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата решения об усыновлении!", Отказ, Заголовок);
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаДоговораОПередачеНаВоспитание) И Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерДоговораОПередачеНаВоспитание) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан номер договора о передаче ребенка на воспитание!", Отказ, Заголовок);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДатаДоговораОПередачеНаВоспитание) И ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.НомерДоговораОПередачеНаВоспитание) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указана дата договора о передаче ребенка на воспитание!", Отказ, Заголовок);
			КонецЕсли;
		КонецЕсли;

	КонецЕсли;
	
	Если ВариантПроверки = "ОписьЗаявленийИДокументовВФСС" Тогда
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ФИОСотрудника) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указан сотрудник!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ДокументыОснования) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Нет описания прилагаемых документов!", Отказ, Заголовок);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.КоличествоСтраниц) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(ТекстОшибкиСНомеромСтроки + "Не указано количество страниц!", Отказ, Заголовок);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	ВыборкаПоШапкеДокумента = ОбменСведениямиОПособияхСФСС.СформироватьЗапросПоШапкеДокумента(ЭтотОбъект).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);
	
	Если Отказ тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	//При проведении файл формируем заново 
	ВыборкаПоРаботникиОрганизации.Сбросить();
	ТекстФайла = СформироватьВыходнойФайл(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);

	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Реестр пособий при рождении ребенка";
	Запись.Данные = ТекстФайла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Сотрудник");

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
		Набор.Записать();
	КонецЦикла
КонецПроцедуры

