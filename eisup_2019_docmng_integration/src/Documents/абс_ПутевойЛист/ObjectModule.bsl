Перем ВестиУчетСебестоимостиМПЗПоСкладам;

Процедура ВыполнитьКорректировкуЭлементовНалоговогоУчета() Экспорт
	
	СчетНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", СчетБУ), , Дата);
	Для Счетчик = 1 по СчетНУ.ВидыСубконто.Количество() Цикл
		попытка
			ЭтотОбъект["СубконтоНУ" + Счетчик] = ЭтотОбъект["Субконто" + Счетчик];
		исключение
		КонецПопытки;
	КонецЦикла;	
	
КонецПроцедуры	

Функция ПроверкаПериода()
	Если не ЗначениеЗаполнено(Автомобиль) Тогда
		сообщить("Не выбран Автомобиль");
		возврат Истина;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Сотрудник) Тогда
		сообщить("Не выбран Сотрудник");
		возврат Истина;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Материалы) Тогда
		сообщить("Не выбран бензин");
		возврат Истина;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Дата1) Тогда
		сообщить("Не выбрана дата начала периода");
		возврат Истина;
	КонецЕсли;
	
	Если не ЗначениеЗаполнено(Дата2) Тогда
		сообщить("Не выбрана дата окончания периода");
		возврат Истина;
	КонецЕсли;
	Если (ЗначениеЗаполнено(Автомобиль))
		И (ЗначениеЗаполнено(Сотрудник))
		И (ЗначениеЗаполнено(Материалы))
		И (ЗначениеЗаполнено(Дата1))
		И (ЗначениеЗаполнено(Дата2))Тогда 
		возврат Ложь;	
		
	КонецЕсли;
	
	
	//Запрос = Новый Запрос;
	//Запрос.Текст =
	//"ВЫБРАТЬ
	//|	ПутевойЛист1.Ссылка
	//|ИЗ
	//|	Документ.ПутевойЛист КАК ПутевойЛист
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПутевойЛист КАК ПутевойЛист1
	//|		ПО ПутевойЛист.Материалы = ПутевойЛист1.Материалы
	//|			И ПутевойЛист.Автомобиль = ПутевойЛист1.Автомобиль
	//|			И ПутевойЛист.Сотрудник = ПутевойЛист1.Сотрудник
	//|ГДЕ
	//|	ПутевойЛист.Ссылка = &Ссылка
	//|	И ПутевойЛист.Дата МЕЖДУ &Дата1 И &Дата2
	//|	И ПутевойЛист1.Дата МЕЖДУ &Дата1 И &Дата2
	//|	И ПутевойЛист1.Ссылка <> &Ссылка
	//|	И ПутевойЛист1.Проведен = ИСТИНА";
	//
	//Запрос.УстановитьПараметр("Ссылка",Ссылка);
	//Запрос.УстановитьПараметр("Дата1",Дата1);
	//Запрос.УстановитьПараметр("Дата2",Дата2);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Отказ = (Выборка.Количество()>0);
	//Пока Выборка.Следующий() Цикл
	//	сообщить("Нашли документ "+Выборка.Ссылка);		
	//КонецЦикла;	
	//возврат Отказ;
КонецФункции

Процедура ДвиженияПоРегистрамНакопления(Сумма, Количество, ВидДвижения)
	
	Движение = Движения.ПартииТоваровНаСкладах.Добавить();
	Движение.Активность=Истина;
	Движение.ВидДвижения = ВидДвижения;//ВидДвиженияНакопления.Приход;
	
	Если Движение.ВидДвижения=ВидДвиженияНакопления.Приход Тогда
		Движение.КодОперации=Перечисления.КодыОперацийПартииТоваров.Поступление;
	Иначе
		Движение.КодОперации=Перечисления.КодыОперацийПартииТоваров.СписаниеНаЗатраты;
	КонецЕсли;	
	
	Движение.ДокументОприходования=ЭтотОбъект.Ссылка;
	Движение.Качество=Справочники.Качество.Новый;
	Движение.Количество=Количество;
	Движение.Номенклатура = Материалы;
	Движение.Период = Дата;
	Если ВестиУчетСебестоимостиМПЗПоСкладам Тогда   //абс см
		
		Движение.Склад = Автомобиль;
	КонецЕсли;
	Движение.СписаниеПартий=Ложь;
	Движение.СтатусПартии = Перечисления.СтатусыПартийТоваров.Купленный;
	Движение.Стоимость = Сумма;
	
	Движение = Движения.ПартииТоваровНаСкладахБухгалтерскийУчет.Добавить();
	Движение.Активность=Истина;
	Движение.ВидДвижения= ВидДвижения;//ВидДвиженияНакопления.Приход;
	Движение.ДокументОприходования=ЭтотОбъект.Ссылка;
	Движение.Качество=Справочники.Качество.Новый;
	Если Движение.ВидДвижения=ВидДвиженияНакопления.Приход Тогда
		Движение.КодОперации=Перечисления.КодыОперацийПартииТоваров.Поступление;
	Иначе
		Движение.КодОперации=Перечисления.КодыОперацийПартииТоваров.СписаниеНаЗатраты;
	КонецЕсли;	
	
	Движение.Количество=Количество;
	Движение.Номенклатура = Материалы;
	Движение.Период = Дата;
	Если ВестиУчетСебестоимостиМПЗПоСкладам Тогда   //абс см
		
		Движение.Склад = Автомобиль;
	КонецЕсли;
	Движение.СписаниеПартий=Ложь;
	Движение.Стоимость = Сумма;
	Движение.Организация=Организация;
	Движение.СчетУчета = ПланыСчетов.Хозрасчетный.Топливо;
	
	
	Движение = Движения.ПартииТоваровНаСкладахНалоговыйУчет.Добавить();
	Движение.Активность=Истина;
	Движение.ВидДвижения=ВидДвижения;
	Если Движение.ВидДвижения=ВидДвиженияНакопления.Приход Тогда
		Движение.КодОперации=Перечисления.КодыОперацийПартииТоваров.Поступление;
	Иначе
		Движение.КодОперации=Перечисления.КодыОперацийПартииТоваров.СписаниеНаЗатраты;
	КонецЕсли;	
	Движение.ДокументОприходования=ЭтотОбъект.Ссылка;
	Движение.Качество=Справочники.Качество.Новый;
	Движение.Количество=Количество;
	Движение.Номенклатура = Материалы;
	Движение.Период = Дата;
	Если ВестиУчетСебестоимостиМПЗПоСкладам Тогда   //абс см
		
		Движение.Склад = Автомобиль;
	КонецЕсли;
	Движение.СписаниеПартий=Ложь;
	Движение.Стоимость = Сумма;
	Движение.Организация=Организация;
	Движение.СчетУчета = ПланыСчетов.Налоговый.Топливо;
	
	Движение = Движения.ТоварыНаСкладах.Добавить();
	Движение.ВидДвижения=ВидДвижения;
	Движение.Качество=Справочники.Качество.Новый;
	Движение.Количество = Количество;
	Движение.Номенклатура = Материалы;
	Движение.Склад = Автомобиль;
	Движение.Период=Дата;
	Движение.Активность=Истина;
	
	Движение = Движения.ТоварыОрганизаций.Добавить();
	Движение.ВидДвижения=ВидДвижения;
	Движение.Организация = Организация;
	Движение.Качество=Справочники.Качество.Новый;
	Движение.Количество = Количество;
	Движение.Номенклатура = Материалы;
	Движение.Период=Дата;
	Движение.Активность=Истина;
	
КонецПроцедуры	

Процедура ОбработкаПроведения(Отказ, Режим)
	Отказ = ПроверкаПериода();
	Если Отказ Тогда
		возврат;
	КонецЕсли;	
	
	ПрибКолВо=0;
	ПрибСумма=0;
	ПорядокОкр=Константы.абс_ПорядокОкругленияДляГСМ.Получить();
	Если ПорядокОкр>3 Тогда
		Сообщить("Константа ""Порядок окугления для ГСМ"" не может превышать 3",СтатусСообщения.ОченьВажное);
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если ПолученоПоНоминалу>0 Тогда 
		Если ЦенаПоТалонам=0 Тогда
			сообщить("Ошибка!!! не заполнено поле ""Цена бензина по талонам в соотв.с протоколом""");
			Отказ = Истина;
			Возврат;
		КонецЕсли;
		
		Операция = Движения.Хозрасчетный.Добавить();
		Операция.Организация = Организация;
		Операция.СчетДт = ПланыСчетов.Хозрасчетный.Топливо;
		Операция.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = Материалы;
		Операция.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Автомобиль;
		Операция.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоТалонамНаБензин;
		Операция.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РаботникиОрганизации] = Сотрудник;
		Операция.КоличествоДт = ОКР(((ПолученоПоНоминалу - ОстатокПоНоминалу)*1.18)/ЦенаПоТалонам,ПорядокОкр);
		Операция.Сумма = ПолученоПоНоминалу-ОстатокПоНоминалу;
		Операция.Содержание="Оприходование бензина по талонам";
		Операция.Период = Дата;
		Операция.Активность = Истина;
		
		ПрибКолВо=Операция.КоличествоДт ;
		ПрибСумма=Операция.Сумма;
		
		Операция = Движения.Налоговый.Добавить();
		Операция.Организация = Организация;
		Операция.СчетДт = ПланыСчетов.Налоговый.Топливо;
		Операция.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = Материалы;
		Операция.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Автомобиль;
		
		Операция.СчетКт = ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав;
		Операция.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УсловияПоступленияИВыбытия] = Перечисления.УсловияПоступленияИВыбытияИмущества.ЗаПлату;
		
		Операция.КоличествоДт = ПрибКолВо;
		Операция.Сумма = ПрибСумма;
		Операция.Содержание="Оприходование бензина по талонам";
		Операция.Период = Дата;
		Операция.Активность = Истина;
		
		Движения.Хозрасчетный.Записать();
		Движения.Налоговый.Записать();
		
		ДвиженияПоРегистрамНакопления(ПрибСумма,ПрибКолВо, ВидДвиженияНакопления.Приход);
	КонецЕсли;
	
	Запрос10_3 = Новый Запрос;
	Запрос10_3.Текст = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(ХозрасчетныйОстатки.КоличествоОстатокДт, 0) КАК КоличествоОстатокДт,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстатокДт, 0) КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Дата,
	|			Счет = &счет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Материал
	//АБС-Е ВСТАВКА 6796
	|				И Субконто2 = &Автомобиль) КАК ХозрасчетныйОстатки
	|ИТОГИ
	|	СУММА(КоличествоОстатокДт),
	|	СУММА(СуммаОстатокДт)
	|ПО
	|	Субконто1";
	
	Запрос10_3.УстановитьПараметр("Дата",Дата);
	Запрос10_3.УстановитьПараметр("Счет",ПланыСчетов.Хозрасчетный.Топливо); 
	Запрос10_3.УстановитьПараметр("Организация",Организация);
	Запрос10_3.УстановитьПараметр("Материал",Материалы);
	//АБС-Е ВСТАВКА 6796
	Запрос10_3.УстановитьПараметр("Автомобиль",Автомобиль);
	//АБС-Е КОНЕЦ 6796
	
	ВыборкаПоМатериалу = Запрос10_3.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Сумма = 0;
	КолВо = 0;
	Если ВыборкаПоМатериалу.Следующий() Тогда
		Сумма = ВыборкаПоМатериалу.СуммаОстатокДт;
		КолВо = ВыборкаПоМатериалу.КоличествоОстатокДт;
	КонецЕсли;
	Сумма = Сумма+ПрибСумма;
	КолВо = КолВо + ПрибКолВо;
	СредняяЦена = Сумма/КолВо;
	
	КолвоАвто = ПрибКолВо;
	ВыборкаПоСкладу = ВыборкаПоМатериалу.Выбрать();
	Пока ВыборкаПоСкладу.Следующий() Цикл
		Если ВыборкаПоСкладу.Субконто2 = Автомобиль Тогда
			КолвоАвто = КолВоАвто+ВыборкаПоСкладу.КоличествоОстатокДт;
			прервать;
		КонецЕсли;	
	КонецЦикла;
	
	Операция = Движения.Хозрасчетный.Добавить();
	Операция.Период=Дата;
	Операция.Активность=Истина;
	Операция.Организация = Организация;
	Операция.СчетДт = СчетБУ;
	Для й = 1 по СчетБУ.ВидыСубконто.Количество() Цикл
		Операция.СубконтоДт[СчетБУ.ВидыСубконто.Получить(й-1).ВидСубконто]= ЭтотОбъект["Субконто"+й];
	КонецЦикла;
	
	Операция.СчетКт = ПланыСчетов.Хозрасчетный.Топливо;
	Операция.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = Материалы;
	Операция.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Автомобиль;
	
	Операция.КоличествоКт = Окр(((СпидометрКонец-СпидометрНачало)/100)*НормаРасхода,ПорядокОкр,1);
	Операция.Содержание="Списание бензина на затраты";
	
	Если КолВоАвто=0 Тогда
		Сообщить("Количество "+Материалы+" на "+Автомобиль+" = 0",СтатусСообщения.ОченьВажное);	
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	Если КолВоАвто<Операция.КоличествоКт Тогда
		Сообщить("Количество "+Материалы+" на "+Автомобиль+" = "+КолВоАвто+" в документе "+Операция.КоличествоКт,СтатусСообщения.ОченьВажное);	
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
	
	Если КолВоАвто=Операция.КоличествоКт Тогда
		Операция.Сумма=Сумма;
	Иначе
		Операция.Сумма=Операция.КоличествоКт*СредняяЦена;
	КонецЕсли;	
	
	СуммаСписания = Операция.Сумма;
	КолвоСписание = Операция.КоличествоКт;
	
	//Налоговый
	Если  ЗначениеЗаполнено(СчетНУ) Тогда
		Операция = Движения.Налоговый.Добавить();
		Операция.Период=Дата;
		Операция.Активность=Истина;
		Операция.Организация = Организация;
		Операция.СчетДт = СчетНУ;
		
		Для Счетчик = 1 по СчетНУ.ВидыСубконто.Количество() Цикл
			попытка
				Операция.СубконтоДт[СчетНУ.ВидыСубконто.Получить(Счетчик - 1).ВидСубконто] = ЭтотОбъект["СубконтоНУ" + Счетчик];
			исключение
			КонецПопытки;
		КонецЦикла;
		
		Операция.СчетКт = ПланыСчетов.Налоговый.Топливо;
		Операция.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = Материалы;
		Операция.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Автомобиль;
		
		Операция.КоличествоКт = КолВоСписание;
		Операция.Сумма=СуммаСписания;
		Операция.Содержание="Списание бензина на затраты";
	КонецЕсли;
	//\\Налоговый
	
	Движения.Хозрасчетный.Записать();
	Движения.Налоговый.Записать();
	
	ДвиженияПоРегистрамНакопления(СуммаСписания,КолВоСписание, ВидДвиженияНакопления.Расход);
	
	Движения.ПартииТоваровНаСкладах.Записать();
	Движения.ПартииТоваровНаСкладахБухгалтерскийУчет.Записать();
	Движения.ПартииТоваровНаСкладахНалоговыйУчет.Записать();
	Движения.ТоварыНаСкладах.Записать();
	Движения.ТоварыОрганизаций.Записать();
	
	Если НЕ абс_РучноеФормированиеОборотовБюджетов Тогда
		абс_Бюджетирование.ПроведениеПоРегиструБюджетирования(ЭтотОбъект, Отказ, РежимПроведенияДокумента.Неоперативный);
	КонецЕсли;
	
КонецПроцедуры	

ВестиУчетСебестоимостиМПЗПоСкладам = Константы.ВестиПартионныйУчетПоСкладамРегл.Получить();

