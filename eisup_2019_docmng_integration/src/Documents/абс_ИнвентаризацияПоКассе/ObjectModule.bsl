#Если Клиент Тогда


// Функция формирует табличный документ с печатной формой сличительной ведомости
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма сличительной ведомости.
//
Функция ПечатьИНВ15() Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_ИнвентаризацияПоКассе.Дата КАК Дата,
	|	абс_ИнвентаризацияПоКассе.Номер КАК Номер,
	|	абс_ИнвентаризацияПоКассе.Организация КАК Организация,
	|	абс_ИнвентаризацияПоКассе.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
	|	абс_ИнвентаризацияПоКассе.ПодразделениеОрганизации.Код КАК ПодразделениеКод,
	|	абс_ИнвентаризацияПоКассе.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	абс_ИнвентаризацияПоКассе.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	абс_ИнвентаризацияПоКассе.ДокументОснованиеНомер КАК ДокументОснованиеНомер,
	|	абс_ИнвентаризацияПоКассе.ПКОНомер,
	|	абс_ИнвентаризацияПоКассе.РКОНомер
	|ИЗ
	|	Документ.абс_ИнвентаризацияПоКассе КАК абс_ИнвентаризацияПоКассе
	|ГДЕ
	|	абс_ИнвентаризацияПоКассе.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Дата",        Док.Дата);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_ИнвентаризацияПоКассеДС.НомерСтроки,
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств,
	|	абс_ИнвентаризацияПоКассеДС.СуммаФактическая,
	|	1 КАК НомСтр
	|ИЗ
	|	Документ.абс_ИнвентаризацияПоКассе.ДС КАК абс_ИнвентаризацияПоКассеДС
	|ГДЕ
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ВидыДенежныхСредств.Наличные)
	|	И абс_ИнвентаризацияПоКассеДС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	абс_ИнвентаризацияПоКассеДС.НомерСтроки,
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств,
	|	абс_ИнвентаризацияПоКассеДС.СуммаФактическая,
	|	2
	|ИЗ
	|	Документ.абс_ИнвентаризацияПоКассе.ДС КАК абс_ИнвентаризацияПоКассеДС
	|ГДЕ
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств ПОДОБНО ""Марки""
	|	И абс_ИнвентаризацияПоКассеДС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	абс_ИнвентаризацияПоКассеДС.НомерСтроки,
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств,
	|	абс_ИнвентаризацияПоКассеДС.СуммаФактическая,
	|	3
	|ИЗ
	|	Документ.абс_ИнвентаризацияПоКассе.ДС КАК абс_ИнвентаризацияПоКассеДС
	|ГДЕ
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств ПОДОБНО ""Ценные бумаги""
	|	И абс_ИнвентаризацияПоКассеДС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	абс_ИнвентаризацияПоКассеДС.НомерСтроки,
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств,
	|	абс_ИнвентаризацияПоКассеДС.СуммаФактическая,
	|	4
	|ИЗ
	|	Документ.абс_ИнвентаризацияПоКассе.ДС КАК абс_ИнвентаризацияПоКассеДС
	|ГДЕ
	|	абс_ИнвентаризацияПоКассеДС.НомерСтроки = 4
	|	И абс_ИнвентаризацияПоКассеДС.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	абс_ИнвентаризацияПоКассеДС.НомерСтроки,
	|	абс_ИнвентаризацияПоКассеДС.ВидДенежныхСредств,
	|	абс_ИнвентаризацияПоКассеДС.СуммаФактическая,
	|	5
	|ИЗ
	|	Документ.абс_ИнвентаризацияПоКассе.ДС КАК абс_ИнвентаризацияПоКассеДС
	|ГДЕ
	|	абс_ИнвентаризацияПоКассеДС.НомерСтроки = 5
	|	И абс_ИнвентаризацияПоКассеДС.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомСтр";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ТаблицаДС = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("ИНВ15");
	
	// Получаем области макета для вывода в табличный документ
	Шапка     = Макет.ПолучитьОбласть("Страница1");
	Страница2 = Макет.ПолучитьОбласть("Страница2");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 1;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
		
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияДС_ИНВ15";

	// Выведем шапку документа
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	Шапка.Параметры.Заполнить(Док);
	Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	Шапка.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.ВидДеятельностиПоОКДП    = "64.20";
	Шапка.Параметры.Подразделение            = Док.ПодразделениеПредставление;	
	Шапка.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Док);
	Шапка.Параметры.ДатаДокумента            = Док.Дата;
	
	ПолнаяДатаДокумента = Формат(Док.Дата, "ДФ='дд ММММ гггг'");
	ДлинаСтроки       = СтрДлина(ПолнаяДатаДокумента);
	ПервыйРазделитель = Найти(ПолнаяДатаДокумента," ");
	ВторойРазделитель = Найти(Прав(ПолнаяДатаДокумента,ДлинаСтроки-ПервыйРазделитель)," ")+ПервыйРазделитель;
	ДатаДокументаДень     = """"+Лев(ПолнаяДатаДокумента,ПервыйРазделитель-1)+"""";
	ДатаДокументаМесяц    = Сред(ПолнаяДатаДокумента,ПервыйРазделитель+1,ВторойРазделитель-ПервыйРазделитель-1);
	ДатаДокументаГод      = Прав(ПолнаяДатаДокумента,ДлинаСтроки-ВторойРазделитель);	
	
	Шапка.Параметры.ДатаДокументаДень         = ДатаДокументаДень;
	Шапка.Параметры.ДатаДокументаМесяц        = ДатаДокументаМесяц;
	Шапка.Параметры.ДатаДокументаГод          = ДатаДокументаГод;				
		
	// МОЛ
	ДанныеМОЛ = ОбщегоНазначения.ДанныеФизЛица(Организация, ФизическоеЛицо, Дата);
	
	Шапка.Параметры.ДолжностьМОЛ = ДанныеМОЛ.Должность;
	Шапка.Параметры.ФИОМОЛ       = ДанныеМОЛ.Представление;
	
	// Комиссия
	ПредседательКомиссииСтр = ИнвентаризационнаяКомиссия.Найти(Истина,"Председатель");
	Если ПредседательКомиссииСтр <> Неопределено Тогда
		ПредседательКомиссии = ОбщегоНазначения.ДанныеФизЛица(Организация, ПредседательКомиссииСтр.ФизЛицо, Дата);
		Шапка.Параметры.ДолжностьПредседателя = ПредседательКомиссии.Должность;
		Шапка.Параметры.ФИОпредседателя = ПредседательКомиссии.Фамилия+" "+Лев(ПредседательКомиссии.Имя,1)+"."+Лев(ПредседательКомиссии.Отчество,1)+".";
	КонецЕсли;
	Сч = 2;
	Для каждого ЧленКомиссииСтр Из ИнвентаризационнаяКомиссия Цикл
		Если Сч>4 Тогда
			прервать;
		КонецЕсли;
		Если ЧленКомиссииСтр.Председатель Тогда
			продолжить;
		КонецЕсли;
		ЧленКомиссии = ОбщегоНазначения.ДанныеФизЛица(Организация, ЧленКомиссииСтр.ФизЛицо, Дата);
		Шапка.Параметры["ДолжностьЧленаКомиссии"+Сч] = ЧленКомиссии.Должность;
		Шапка.Параметры["ФИОЧленаКомиссии"+Сч] = ЧленКомиссии.Фамилия+" "+Лев(ЧленКомиссии.Имя,1)+"."+Лев(ЧленКомиссии.Отчество,1)+".";
		Сч = Сч+1;
	КонецЦикла;	
	
	//Сч = 1;
	//Для Каждого ДССтр Из ТаблицаДС Цикл
	//	
	//	Если Сч > 5 Тогда
	//		Прервать;
	//	КонецЕсли;
	//	
	//	Шапка.Параметры["Сумма"+Строка(Сч)]     = Цел(ДССтр.СуммаФактическая);
	//	Шапка.Параметры["СуммаКоп"+Сч] = Прав(Формат(ДССтр.СуммаФактическая - Цел(ДССтр.СуммаФактическая), "ЧДЦ=2; ЧН="), 2);
	//	Если Сч > 3 Тогда
	//		Шапка.Параметры[ВидДС+Сч] = ДССтр.ВидДенежныхСредств;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
	Если ТаблицаДС.Количество() > 0 Тогда
		Шапка.Параметры.Сумма1     = Цел(ТаблицаДС[0].СуммаФактическая);
		Шапка.Параметры.СуммаКоп1  = Прав(Формат(ТаблицаДС[0].СуммаФактическая - Цел(ТаблицаДС[0].СуммаФактическая), "ЧДЦ=2; ЧН="), 2);
	КонецЕсли;
	
	Если ТаблицаДС.Количество() > 1 Тогда
		Шапка.Параметры.Сумма2     = Цел(ТаблицаДС[1].СуммаФактическая);
		Шапка.Параметры.СуммаКоп2  = Прав(Формат(ТаблицаДС[1].СуммаФактическая - Цел(ТаблицаДС[1].СуммаФактическая), "ЧДЦ=2; ЧН="), 2);
	КонецЕсли;
	
	Если ТаблицаДС.Количество() > 2 Тогда	
		Шапка.Параметры.Сумма3     = Цел(ТаблицаДС[2].СуммаФактическая);
		Шапка.Параметры.СуммаКоп3  = Прав(Формат(ТаблицаДС[2].СуммаФактическая - Цел(ТаблицаДС[2].СуммаФактическая), "ЧДЦ=2; ЧН="), 2);
	КонецЕсли;
	
	Если ТаблицаДС.Количество() > 3 Тогда	
		Шапка.Параметры.Сумма4     = Цел(ТаблицаДС[3].СуммаФактическая);
		Шапка.Параметры.СуммаКоп4  = Прав(Формат(ТаблицаДС[3].СуммаФактическая - Цел(ТаблицаДС[3].СуммаФактическая), "ЧДЦ=2; ЧН="), 2);
		Шапка.Параметры.ВидДС4     = ТаблицаДС[3].ВидДенежныхСредств;
	КонецЕсли;
	
	Если ТаблицаДС.Количество() > 4 Тогда	
		Шапка.Параметры.Сумма5     = Цел(ТаблицаДС[4].СуммаФактическая);
		Шапка.Параметры.СуммаКоп5  = Прав(Формат(ТаблицаДС[4].СуммаФактическая - Цел(ТаблицаДС[4].СуммаФактическая), "ЧДЦ=2; ЧН="), 2);
		Шапка.Параметры.ВидДС5     = ТаблицаДС[4].ВидДенежныхСредств;
	КонецЕсли;	
	
	ИтогоСумма = ТаблицаДС.Итог("СуммаФактическая");
	
	Шапка.Параметры.СуммаРуб = Цел(ИтогоСумма);
	Шапка.Параметры.СуммаКоп = Прав(Формат(ИтогоСумма - Цел(ИтогоСумма), "ЧДЦ=2; ЧН="), 2);
	
	Шапка.Параметры.СуммаРубУчет = Цел(СуммаПоДаннымУчета);
	Шапка.Параметры.СуммаКопУчет = Прав(Формат(СуммаПоДаннымУчета - Цел(СуммаПоДаннымУчета), "ЧДЦ=2; ЧН="), 2);
	
	ПараметрыПрописиВалюты = глЗначениеПеременной("ВалютаРегламентированногоУчета").ПараметрыПрописиНаРусском;
	
	СуммаФактическиНаСтраницеПрописью  = ЧислоПрописью(ИтогоСумма, "L=ru_RU;SN=Ложь;FN=Ложь", ПараметрыПрописиВалюты);
	Шапка.Параметры.СуммаРубПрописью   = СокрЛП(Лев(СуммаФактическиНаСтраницеПрописью, СтрДлина(СуммаФактическиНаСтраницеПрописью) - ?(СтрДлина(СуммаФактическиНаСтраницеПрописью)>=2, 2, 0)));//ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);
	
	СуммаУчетНаСтраницеПрописью   = ЧислоПрописью(ИтогоСумма, "L=ru_RU;SN=Ложь;FN=Ложь", ПараметрыПрописиВалюты);
	Шапка.Параметры.СуммаРубУчетПрописью   = СокрЛП(Лев(СуммаФактическиНаСтраницеПрописью, СтрДлина(СуммаФактическиНаСтраницеПрописью) - ?(СтрДлина(СуммаФактическиНаСтраницеПрописью)>=2, 2, 0)));//ОбщегоНазначения.СформироватьСуммуПрописью(СуммаЛиста, ВалютаПечати);

	Отклонение = ИтогоСумма - СуммаПоДаннымУчета;
	
	Если Отклонение > 0 Тогда
		
		Шапка.Параметры.СуммаРубИзлишек = Цел(Отклонение);
		Шапка.Параметры.СуммаКопИзлишек = Прав(Формат(Отклонение - Цел(Отклонение), "ЧДЦ=2; ЧН="), 2);
		
	ИначеЕсли Отклонение < 0 Тогда
		
		Шапка.Параметры.СуммаРубНедостача = Цел(Отклонение);
		Шапка.Параметры.СуммаКопНедостача = Прав(Формат(Отклонение - Цел(Отклонение), "ЧДЦ=2; ЧН="), 2);
		
	КонецЕсли;
	
	ТабДокумент.Вывести(Шапка);
	
	// Выведем разрыв страницы
	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
		
	//Страница 2
	
	Страница2.Параметры.ПричинаИнвентаризации = ?(СокрЛП(ПричинаПроведенияИнвентаризации) <> "", ПричинаПроведенияИнвентаризации,
	"                                                                                                                                                                                                       ");
	                                                                                                          
	Страница2.Параметры.ДолжностьМОЛ = ДанныеМОЛ.Должность;
	Страница2.Параметры.ФИОМОЛ       = ДанныеМОЛ.Представление;

	Страница2.Параметры.ДатаДокументаДень     = ДатаДокументаДень;
	Страница2.Параметры.ДатаДокументаМесяц    = ДатаДокументаМесяц;
	Страница2.Параметры.ДатаДокументаГод      = ДатаДокументаГод;
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Док.Организация, Док.Дата);
	Страница2.Параметры.ДолжностьРуководитель = Руководители.РуководительДолжность;
	Страница2.Параметры.ФИОРуководитель       = Руководители.Руководитель;
		
	ТабДокумент.Вывести(Страница2);
	
	Возврат ТабДокумент;
	
КонецФункции


// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	
	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;	
	
	// Получить экземпляр документа на печать
	Если ИмяМакета = "ИНВ15" тогда
		ТабДокумент = ПечатьИНВ15();
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ИНВ15","ИНВ-15 (Акт инвентаризации наличных денежных средств)");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

