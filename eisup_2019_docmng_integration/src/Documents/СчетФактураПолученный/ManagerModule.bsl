// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетФактура", "Счет фактура", ПечатьСчетаФактуры(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура283") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетФактура283", "Счет фактура", ПечатьСчетаФактуры(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура84")  Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетФактура84", "Счет фактура", ПечатьСчетаФактуры(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СчетФактура575") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СчетФактура575", "Счет фактура", ПечатьСчетаФактуры(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

Процедура ПечатьСчетаФактуры1137(Ссылка, ТабДокумент, Макет)
	
	ДанныеДляПечати = Неопределено;
	
	СобратьДанныеДляПечати(Ссылка, ДанныеДляПечати);
	
	Если ТипЗнч(ДанныеДляПечати) = Тип("Соответствие") Тогда
		Возврат;
	ИначеЕсли ДанныеДляПечати = Неопределено Тогда
		Возврат;
	КонецЕсли;
	Если ДанныеДляПечати.Покупатель = Null Тогда
		ТекстСообщения = НСтр("ru = 'В документе основании не указано юр./физ. лицо у организации'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка);
		Возврат;
	КонецЕсли;
	Если ДанныеДляПечати.Поставщик = Неопределено Тогда
		ТекстСообщения = НСтр("ru = 'В документе основании не указано юр./физ. лицо контрагента'");
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Ссылка);
		Возврат;
	КонецЕсли;
	
	РеквизитыСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка, 
		"Дата,ВидСчетаФактуры,Исправление,НомерИсправления,ДоговорКонтрагента,СчетФактураБезНДС");
	Дата               = РеквизитыСФ.Дата;
	ВидСчетаФактуры    = РеквизитыСФ.ВидСчетаФактуры;
	Исправление        = РеквизитыСФ.Исправление;
	НомерИсправления   = РеквизитыСФ.НомерИсправления;
	ДоговорКонтрагента = РеквизитыСФ.ДоговорКонтрагента;
	СчетФактураБезНДС  = РеквизитыСФ.СчетФактураБезНДС;

	СведенияОбПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Покупатель, Ссылка.Дата);
	СведенияОПоставщике  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Поставщик, Ссылка.Дата);
	СведенияОГрузоотправителе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(?(ДанныеДляПечати.Грузоотправитель = "он же", Неопределено, ДанныеДляПечати.Грузоотправитель), Ссылка.Дата);
	СведенияОГрузополучателе  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ДанныеДляПечати.Грузополучатель, Ссылка.Дата);
	
	// Выводим шапку накладной
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ОбластьМакета.Параметры.Номер = ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ДанныеДляПечати, "Счет-фактура") + " г.";
	
	Если Исправление Тогда
		ОбластьМакета.Параметры.Номер = ОбластьМакета.Параметры.Номер + Символы.ПС + "Исправление №" + Строка(НомерИсправления) 
			+ " от " + Формат(Дата, "ДФ='дд ММММ гггг'") + " г.";
 	Иначе 	
		ОбластьМакета.Параметры.Номер = ОбластьМакета.Параметры.Номер + Символы.ПС + "Исправление № -- от --";
	КонецЕсли;
	
	Если Ссылка.Дата < '20040216' Тогда
		ОбластьМакета.Параметры.ПредставлениеПоставщика       = "Продавец: "                                 + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ПолноеНаименование,");
		ОбластьМакета.Параметры.АдресПоставщика               = "Адрес: "                                    + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ЮридическийАдрес,");
		ОбластьМакета.Параметры.ИННпоставщика                 = "Идентификационный номер продавца (ИНН): "   + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ИНН,", Ложь); 
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: "             + ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель), "", ?(ДанныеДляПечати.Грузоотправитель = "он же", ДанныеДляПечати.Грузоотправитель, ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправителе,  "ПолноеНаименование,ФактическийАдрес,")));
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = "Грузополучатель и его адрес: "              + ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), "", ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ФактическийАдрес,"));
		ОбластьМакета.Параметры.ПоДокументу                   = "К платежно-расчетному документу №  от: ";
		ОбластьМакета.Параметры.ПредставлениеПокупателя       = "Покупатель: "                               + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ПолноеНаименование,");
		ОбластьМакета.Параметры.АдресПокупателя               = "Адрес: "                                    + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ЮридическийАдрес,");
		ОбластьМакета.Параметры.ИННПокупателя                 = "Идентификационный номер покупателя (ИНН): " + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ИНН,", Ложь);
	Иначе
		ОбластьМакета.Параметры.ПредставлениеПоставщика       = "Продавец: "                               + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ПолноеНаименование,");
		ОбластьМакета.Параметры.АдресПоставщика               = "Адрес: "                                  + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ЮридическийАдрес,");
		КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
		Если ЗначениеЗаполнено(КПП) Тогда
			КПП = "/" + КПП;
		КонецЕсли;
		ОбластьМакета.Параметры.ИННпоставщика                 = "ИНН/КПП продавца: "                       + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике,  "ИНН,", Ложь) + КПП;
		ОбластьМакета.Параметры.ПредставлениеГрузоотправителя = "Грузоотправитель и его адрес: "           + ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузоотправитель), "", ?(ДанныеДляПечати.Грузоотправитель = "он же", ДанныеДляПечати.Грузоотправитель, ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузоотправителе,  "ПолноеНаименование,ФактическийАдрес,")));
		ОбластьМакета.Параметры.ПредставлениеГрузополучателя  = "Грузополучатель и его адрес: "            + ?(НЕ ЗначениеЗаполнено(ДанныеДляПечати.Грузополучатель), "", ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОГрузополучателе, "ПолноеНаименование,ФактическийАдрес,"));
		ОбластьМакета.Параметры.ПоДокументу                   = "К платежно-расчетному документу №  от: ";
		ОбластьМакета.Параметры.ПредставлениеПокупателя       = "Покупатель: "                             + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ПолноеНаименование,");
		ОбластьМакета.Параметры.АдресПокупателя               = "Адрес: "                                  + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ЮридическийАдрес,");
		КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбПокупателе, "КПП,", Ложь);
		Если ЗначениеЗаполнено(КПП) Тогда
			КПП = "/" + КПП;
		КонецЕсли;
		ОбластьМакета.Параметры.ИННПокупателя                 = "ИНН/КПП покупателя: "                     + ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбПокупателе, "ИНН,", Ложь) + КПП;
	КонецЕсли;
	ПроставитьПрочеркиВПустыеПоля(ОбластьМакета);
	
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	ИтогоСуммаНДС = 0;
	ИтогоВсего    = 0;
	
	ВыборкаСтрокТовары = ДанныеДляПечати.ТабличнаяЧасть;
	ВыборкаСтрокТовары.Колонки.Добавить("СуммаБезНДС");
	ВыборкаСтрокТовары.Колонки.Добавить("СуммаСНДС");
	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		Строчка.СуммаСНДС = Строчка.Сумма + ?(Строчка.СуммаВключаетНДС, 0, Строчка.СуммаНДС);
		Если (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС20_120)
			Или (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС18_118)
			Или (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС10_110) 
			Или (Строчка.СтавкаНДС = Перечисления.СтавкиНДС.НДС4) Тогда //АБС ВСТАВКА 44538  06.06.2014 8:17:01  Коломиец
			Строчка.СуммаБезНДС = Строчка.СуммаСНДС;
		Иначе
			Строчка.СуммаБезНДС = Строчка.СуммаСНДС - Строчка.СуммаНДС;
		КонецЕсли;
	КонецЦикла;
	
	ВыборкаСтрокТовары.Свернуть("Товар, ТоварНаименование, СтранаПроисхождения, ПредставлениеСтраны, НомерГТД, ПредставлениеГТД, ЕдиницаИзмерения, Цена, СтавкаНДС, СтавкаНП", "Количество, Сумма, СуммаНДС, СуммаСНДС, СуммаБезНДС");
	
	Для Каждого Строчка Из ВыборкаСтрокТовары Цикл
		ОбластьМакета.Параметры.Заполнить(Строчка);
		
		Если Строка(Строчка.ПредставлениеСтраны) = "Россия" Тогда
			ОбластьМакета.Параметры.ПредставлениеСтраны  = " ---- ";
		КонецЕсли; 
		
		
		Количество  = Строчка.Количество;
		СуммаНДС    = Строчка.СуммаНДС;
		СуммаСНДС 	= Строчка.СуммаСНДС;
		СуммаБезНДС = Строчка.СуммаБезНДС;
		
		ОбластьМакета.Параметры.Количество = Количество;
		ОбластьМакета.Параметры.Цена       = ?(Количество = 0, 0, СуммаБезНДС / Количество);
		ОбластьМакета.Параметры.Стоимость  = СуммаБезНДС;
		ОбластьМакета.Параметры.СуммаНДС   = СуммаНДС;
		ОбластьМакета.Параметры.Всего      = СуммаСНДС;
		ОбластьМакета.Параметры.СтавкаНДС  = Строчка.СтавкаНДС;
		
		ИтогоСуммаНДС = ИтогоСуммаНДС + СуммаНДС;
		ИтогоВсего    = ИтогоВсего    + СуммаСНДС;
		
		ПроставитьПрочеркиВПустыеПоля(ОбластьМакета);
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;
	
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.ИтогоСуммаНДС = ИтогоСуммаНДС;
	ОбластьМакета.Параметры.ИтогоВсего    = ИтогоВСего;
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакета);
	
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСлева  = 0;
	ТабДокумент.ПолеСнизу  = 0;
	ТабДокумент.ПолеСправа = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
КонецПроцедуры

Функция ПечатьСчетаФактуры(МассивОбъектов, ОбъектыПечати)
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();

	ТабДокумент = Новый ТабличныйДокумент;

	ПервыйДокумент = Истина;
	ВыводитьКолонтитул = МассивОбъектов.Количество() = 1;
	
	Для каждого Ссылка Из МассивОбъектов Цикл
		
		Если Ссылка.Дата < '20040216' Тогда
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураПолученный_СчетФактура575";
			Макет = ПолучитьОбщийМакет("СчетФактура575");
		ИначеЕсли Ссылка.Дата < '20060530' Тогда
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураПолученный_СчетФактура84";
			Макет = ПолучитьОбщийМакет("СчетФактура84");
		Иначе
			ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураПолученный_СчетФактура283";
			Макет = ПолучитьОбщийМакет("СчетФактура283");
		КонецЕсли;

		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Корректировочный    = Ссылка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
		Если Корректировочный Тогда
			ПечатьКорректировочногоСчетаФактуры1137(Ссылка, ТабДокумент);
		Иначе
			ПечатьСчетаФактуры1137(Ссылка, ТабДокумент, Макет);
		КонецЕсли;
		
		ТабДокумент.ВерхнийКолонтитул.Выводить = ВыводитьКолонтитул;
		Если ВыводитьКолонтитул Тогда
			ТабДокумент.ВерхнийКолонтитул.НачальнаяСтраница     = 2;
			ТабДокумент.ВерхнийКолонтитул.ВертикальноеПоложение = ВертикальноеПоложение.Низ;
			ЗаголовокДляПечати = ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(Ссылка, "Счет-фактура") + " г.";
			ТабДокумент.ВерхнийКолонтитул.ТекстСлева  = ЗаголовокДляПечати;
			ТабДокумент.ВерхнийКолонтитул.ТекстСправа = "Лист [&НомерСтраницы]";
		КонецЕсли;
	
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла;
	
	Возврат ТабДокумент;
КонецФункции

Процедура СобратьДанныеДляПечати(Ссылка, ДанныеДляПечати)
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
 	Корректировочный = Ссылка.ВидСчетаФактуры = Перечисления.ВидСчетаФактурыПолученного.Корректировочный;
	
	Если Корректировочный Тогда
		КорректируемыеСчетаФактуры = Новый ТаблицаЗначений;
		КорректируемыеСчетаФактуры.Колонки.Добавить("НомерСчетаФактуры");
		КорректируемыеСчетаФактуры.Колонки.Добавить("ДатаСчетаФактуры");
		КорректируемыеСчетаФактуры.Колонки.Добавить("НомерИсправления");
		КорректируемыеСчетаФактуры.Колонки.Добавить("ДатаИсправления");
	КонецЕсли;

	Для Каждого СтрДокОснования Из Ссылка.ДокументыОснования Цикл
		// Получить экземпляр документа на печать
		
		Если Не ЗначениеЗаполнено(СтрДокОснования.ДокументОснование) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипОснования = ТипЗнч(СтрДокОснования.ДокументОснование);

		Если ТипОснования      = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПоПоступлениюТоваров(СтрДокОснования.ДокументОснование, Ссылка);
		ИначеЕсли ТипОснования      = Тип("ДокументСсылка.ВозвратТоваровОтПокупателя") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПоВозвратуТоваровОтПокупателя(СтрДокОснования.ДокументОснование, Ссылка);
		ИначеЕсли ТипОснования      = Тип("ДокументСсылка.ВозвратТоваровПоставщику") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПоВозвратуТоваров(СтрДокОснования.ДокументОснование, Ссылка);
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеТоваровУслугВНТТ") Тогда
			ДанныеДляПечати    = СобратьДанныеПоПоступлениюТоваровУслугВНТТ(СтрДокОснования.ДокументОснование, Ссылка);
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтчетКомиссионераОПродажах") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПоОтчетОПродажахКомиссионера(СтрДокОснования.ДокументОснование, Ссылка);
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеДопРасходов") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеДопРасходам(СтрДокОснования.ДокументОснование, Ссылка);
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПоступлениеНМА") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПоПоступлениюНМА(СтрДокОснования.ДокументОснование, Ссылка);
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ПолучениеУслугПоПереработке") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПолучениеУслугПоПереработке(СтрДокОснования.ДокументОснование, Ссылка)
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.ОтражениеПоступленияТоваровИУслугНДС") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПоОтражениеПоступленияТоваровУслугНДС(СтрДокОснования.ДокументОснование, Ссылка)
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
			ЭкземплярДанныхДляПечати = СобратьДанныеПоАвансовыйОтчет(СтрДокОснования.ДокументОснование, Ссылка)
		ИначеЕсли ТипОснования = Тип("ДокументСсылка.КорректировкаПоступления") Тогда
			Если Корректировочный Тогда
				ЭкземплярДанныхДляПечати = СобратьДанныеДляПечатиКорректировочногоСчетаФактуры(СтрДокОснования.ДокументОснование, Ссылка);
			Иначе
				ЭкземплярДанныхДляПечати = СобратьДанныеДляПечатиИсправленияСчетаФактуры(СтрДокОснования.ДокументОснование, Ссылка);
			КонецЕсли;
		КонецЕсли;

		Если ЭкземплярДанныхДляПечати <> Неопределено Тогда
			Если ДанныеДляПечати = Неопределено Тогда
				ДанныеДляПечати = ЭкземплярДанныхДляПечати;
			Иначе
				Для Каждого СтрДанных Из ЭкземплярДанныхДляПечати Цикл
					
					Если СтрДанных.Ключ = "ТабличнаяЧасть" Тогда
						СтараяТабЧасть = ДанныеДляПечати.ТабличнаяЧасть;
						НоваяТабЧасть = СтрДанных.Значение;
						
						Для Каждого НоваяСтрокаТабЧасти Из НоваяТабЧасть Цикл
							СтрокаТабЧасти = СтараяТабЧасть.Добавить();
							
							Для Каждого ТекКол Из НоваяТабЧасть.Колонки Цикл
								Если СтараяТабЧасть.Колонки.Найти(ТекКол.Имя) <> Неопределено Тогда
									СтрокаТабЧасти[ТекКол.Имя] = НоваяСтрокаТабЧасти[ТекКол.Имя];
								КонецЕсли;
							КонецЦикла;
							
						КонецЦикла;
						
					Иначе
						Если Не ДанныеДляПечати.Свойство(СтрДанных.Ключ) Тогда
							// Если данный параметр для печати шапки документа еще не  определен - то определяем его
							ДанныеДляПечати.Вставить(СтрДанных.Ключ, СтрДанных.Значение);
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЕсли;
		
		//АБС ВСТАВКА 36164  11.12.2013 11:16:30  Стрельцов
		Если Корректировочный Тогда
			МассивСтрокОснований = Ссылка.ДокументыОснования.НайтиСтроки(Новый Структура("ДокументОснование", СтрДокОснования.ДокументОснование));
			Для Каждого СтрокаМассива ИЗ МассивСтрокОснований Цикл
				НовоеОснование = КорректируемыеСчетаФактуры.Добавить();	
				// Номер и дата исходного счета-фактуры
				НовоеОснование.НомерСчетаФактуры 	= СокрЛП(СтрокаМассива.НомерИсходногоДокумента);
				НовоеОснование.ДатаСчетаФактуры 	= Формат(СтрокаМассива.ДатаИсходногоДокумента, "ДЛФ='ДД'");
				// Номер и дата исправления исходного счета-фактуры
				Если ЗначениеЗаполнено(СтрокаМассива.НомерИсправленияИсходногоДокумента) Тогда
					НовоеОснование.НомерИсправления = СокрЛП(СтрокаМассива.НомерИсправленияИсходногоДокумента);
					НовоеОснование.ДатаИсправления	= Формат(СтрокаМассива.ДатаИсправленияИсходногоДокумента, "ДЛФ='ДД'");
				Иначе
					НовоеОснование.НомерИсправления	= "--";
					НовоеОснование.ДатаИсправления	= "--";
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		//\\АБС ВСТАВКА 36164 КОНЕЦ
		
	КонецЦикла;
	
	Если Корректировочный И ДанныеДляПечати <> Неопределено Тогда
		
		КорректируемыеСчетаФактуры.Свернуть("НомерСчетаФактуры,ДатаСчетаФактуры,НомерИсправления,ДатаИсправления");
		ДанныеДляПечати.Вставить("КорректируемыеСчетаФактуры", КорректируемыеСчетаФактуры);
		
		КолонкиГруппировок = ""
		+"Номенклатура,"
		+"НаименованиеТовара,"
		+"НаименованиеЕдиницыИзмерения,"
		+"ЕдиницаИзмеренияКод,"
		+"ЦенаДоИзменения,"	
		+"ЦенаПослеИзменения,"
		+"СтавкаНДС";
		
		КолонкиСуммирования = ""
		+"СуммаНДСДоИзменения,"
		+"СуммаНДСПослеИзменения,"
		+"СтоимостьСНДСДоИзменения,"
		+"СтоимостьСНДСПослеИзменения,"
		+"РазницаБезНДСУвеличение,"
		+"РазницаБезНДСУменьшение,"
		+"РазницаНДСУвеличение,"
		+"РазницаНДСУменьшение,"
		+"РазницаСНДСУвеличение,"
		+"РазницаСНДСУменьшение,"
		+"СтоимостьБезНДСДоИзменения,"
		+"СтоимостьБезНДСПослеИзменения,"
		+"КоличествоДоИзменения,"
		+"КоличествоПослеИзменения";
		
		ДанныеДляПечати.ТабличнаяЧасть.Свернуть(КолонкиГруппировок, КолонкиСуммирования);
		
	КонецЕсли;

КонецПроцедуры

// Функция собирает данные по документу основанию ОтчетКомиссионераОПродажах и 
// возвращает типизированную структуру с данными
// 
Функция СобратьДанныеПоОтчетОПродажахКомиссионера(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Документ",  ДокОснование);
	Запрос.УстановитьПараметр("Курс",      ДокОснование.КурсВзаиморасчетов);
	Запрос.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация   КАК Покупатель,
	|	Подразделение КАК Подразделение,
	|	Контрагент    КАК Поставщик,
	|	СуммаДокумента          КАК Сумма,
	|	СтавкаНДСВознаграждения КАК СтавкаНДС,
	|	ВалютаДокумента         КАК Валюта,
	|	СуммаВключаетНДС,
	|	УчитыватьНДС,
	|	Товары.(
	|		СУММА(СуммаВознаграждения) КАК Сумма
	|	)
	|ИЗ
	|	Документ.ОтчетКомиссионераОПродажах КАК ОтчетКомиссионераОПродажах
	|
	|ГДЕ
	|	ОтчетКомиссионераОПродажах.Ссылка = &Документ";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	ВыборкаСтрокТовары = Шапка.Товары.Выбрать();
	
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", );
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  );
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Истина);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() Цикл
		Строчка = Товары.Добавить();
		Строчка.Товар               = "Комиссионное вознаграждение";
		Строчка.ТоварНаименование   = "Комиссионное вознаграждение";
		Строчка.СтранаПроисхождения = "";
		Строчка.ПредставлениеСтраны = "";
		Строчка.НомерГТД            = "";
		Строчка.ПредставлениеГТД    = "";
		Строчка.Количество          = 1;
		Строчка.ЕдиницаИзмерения    = "";
		Строчка.СтавкаНДС           = Шапка.СтавкаНДС;
		Строчка.СуммаВключаетНДС	= Истина;
		СуммаНДС                    = УчетНДС.РассчитатьСуммуНДС(ВыборкаСтрокТовары.Сумма, Шапка.УчитыватьНДС, Шапка.СуммаВключаетНДС, УчетНДС.ПолучитьСтавкуНДС(Шапка.СтавкаНДС));
		Строчка.СуммаНДС            = СуммаНДС;
		Строчка.Сумма               = ВыборкаСтрокТовары.Сумма + ?(Шапка.СуммаВключаетНДС, 0, СуммаНДС);
		Строчка.Цена                = ВыборкаСтрокТовары.Сумма - СуммаНДС;
	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПоОтчетОПродажахКомиссионера()

// Функция собирает данные по документу основанию Поступление и 
// структуру с данными
// 
Функция СобратьДанныеПоПоступлениюТоваров(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Грузополучатель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА Организация 
	|		ИНАЧЕ Грузополучатель 
	|	КОНЕЦ КАК Грузополучатель,
	|	Подразделение,
	|	Контрагент            КАК Поставщик,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Грузоотправитель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ""он же"" 
	|		ИНАЧЕ Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	УчитыватьНДС          КАК УчитыватьНДС,
	|	СуммаВключаетНДС      КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ДокументОснование";

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("Курс", ДокОснование.КурсВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ДокОснование.Ссылка);
	ЗапросПоТоварам.Текст = "ВЫБРАТЬ
							|	ВложенныйЗапрос.НомерСтроки,
							|	ВложенныйЗапрос.Товар,
							|	ВложенныйЗапрос.Товар.НаименованиеПолное КАК ТоварНаименование,
							|	NULL КАК ОбъектСтроительства,
							|	NULL КАК ОбъектСтроительстваНаименование, 
							|	ВложенныйЗапрос.СтранаПроисхождения,
							|	ВложенныйЗапрос.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
							|	ВложенныйЗапрос.НомерГТД,
							|	ВложенныйЗапрос.НомерГТД.Представление КАК ПредставлениеГТД,
							|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
							|	ВложенныйЗапрос.Количество,
							|	ВложенныйЗапрос.Цена,
							|	ВложенныйЗапрос.Сумма,
							|	ВложенныйЗапрос.СуммаНДС,
							|	ВложенныйЗапрос.СтавкаНДС,
							|	ВложенныйЗапрос.Характеристика,
							|	ВложенныйЗапрос.Серия,
							|   1 КАК ID
							|ИЗ
							|	(ВЫБРАТЬ
							|		ТаблицаПоТоварам.НомерСтроки КАК НомерСтроки,
							|		ТаблицаПоТоварам.Номенклатура КАК Товар,
							|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
							|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД КАК НомерГТД,
							|		ТаблицаПоТоварам.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
							|		СУММА(ТаблицаПоТоварам.Количество) КАК Количество,
							|		ТаблицаПоТоварам.Цена КАК Цена,
							|		ТаблицаПоТоварам.Сумма КАК Сумма,
							|		ТаблицаПоТоварам.СуммаНДС КАК СуммаНДС,
							|		ТаблицаПоТоварам.СтавкаНДС КАК СтавкаНДС,
							|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры КАК Характеристика,
							|		ТаблицаПоТоварам.СерияНоменклатуры КАК Серия
							|	ИЗ
							|		Документ.ПоступлениеТоваровУслуг.Товары КАК ТаблицаПоТоварам
							|	
							|	ГДЕ
							|		ТаблицаПоТоварам.Ссылка = &ТекущийДокумент
							|	
							|	СГРУППИРОВАТЬ ПО
							|		ТаблицаПоТоварам.НомерСтроки,
							|		ТаблицаПоТоварам.Номенклатура,
							|		ТаблицаПоТоварам.ЕдиницаИзмерения,
							|		ТаблицаПоТоварам.СтавкаНДС,
							|		ТаблицаПоТоварам.Цена,
							|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения,
							|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД,
							|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры,
							|		ТаблицаПоТоварам.СерияНоменклатуры,
							|		ТаблицаПоТоварам.Сумма,
							|		ТаблицаПоТоварам.СуммаНДС) КАК ВложенныйЗапрос

							|ОБЪЕДИНИТЬ ВСЕ

							|ВЫБРАТЬ
							|	ТаблицаПоУслугам.НомерСтроки,
							|	ТаблицаПоУслугам.Номенклатура,
							|	ТаблицаПоУслугам.Содержание,
							|	NULL,
							|	NULL,
							|	""Россия"",
							|	""Россия"",
							|	""--"",
							|	""--"",
							|	ТаблицаПоУслугам.Номенклатура.ЕдиницаХраненияОстатков.Представление,
							|	ТаблицаПоУслугам.Количество,
							|	ТаблицаПоУслугам.Цена,
							|	ТаблицаПоУслугам.Сумма,
							|	ТаблицаПоУслугам.СуммаНДС,
							|	ТаблицаПоУслугам.СтавкаНДС,
							|	NULL,
							|	NULL,
							|	2
							|ИЗ
							|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ТаблицаПоУслугам

							|ГДЕ
							|	ТаблицаПоУслугам.Ссылка = &ТекущийДокумент

							|ОБЪЕДИНИТЬ ВСЕ

							|ВЫБРАТЬ
							|	ТаблицаПоОборудованию.НомерСтроки,
							|	ТаблицаПоОборудованию.Номенклатура,
							|	ТаблицаПоОборудованию.Номенклатура.НаименованиеПолное,
							|	NULL,
							|	NULL,
							|	ТаблицаПоОборудованию.СерияНоменклатуры.СтранаПроисхождения,
							|	ТаблицаПоОборудованию.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное,
							|	ТаблицаПоОборудованию.СерияНоменклатуры.НомерГТД,
							|	ТаблицаПоОборудованию.СерияНоменклатуры.НомерГТД.Представление,
							|	ТаблицаПоОборудованию.ЕдиницаИзмерения.Представление,
							|	ТаблицаПоОборудованию.Количество,
							|	ТаблицаПоОборудованию.Цена,
							|	ТаблицаПоОборудованию.Сумма,
							|	ТаблицаПоОборудованию.СуммаНДС,
							|	ТаблицаПоОборудованию.СтавкаНДС,
							|	ТаблицаПоОборудованию.ХарактеристикаНоменклатуры,
							|	ТаблицаПоОборудованию.СерияНоменклатуры,
							|	3
							|ИЗ
							|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ТаблицаПоОборудованию

							|ГДЕ
							|	ТаблицаПоОборудованию.Ссылка = &ТекущийДокумент

							|ОБЪЕДИНИТЬ ВСЕ

							|ВЫБРАТЬ
							|	ТаблицаПоОбъектамСтроительства.НомерСтроки,
							|	NULL,
							|	NULL,
							|	ТаблицаПоОбъектамСтроительства.ОбъектСтроительства,
							|	ТаблицаПоОбъектамСтроительства.ОбъектСтроительства КАК ОбъектСтроительстваНаименование,
							|	""Россия"",
							|	""Россия"",
							|	""--"",
							|	""--"",
							|	""--"",
							|	0,
							|	ТаблицаПоОбъектамСтроительства.Сумма,
							|	ТаблицаПоОбъектамСтроительства.Сумма,
							|	ТаблицаПоОбъектамСтроительства.СуммаНДС,
							|	ТаблицаПоОбъектамСтроительства.СтавкаНДС,
							|	NULL,
							|	NULL,
							|	4
							|ИЗ
							|	Документ.ПоступлениеТоваровУслуг.ОбъектыСтроительства КАК ТаблицаПоОбъектамСтроительства

							|ГДЕ
							|	ТаблицаПоОбъектамСтроительства.Ссылка = &ТекущийДокумент
							|";

	Шапка              = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	ЕстьТовары = Ложь;
	
	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл

		Если ВыборкаСтрокТовары.ID = 1 
			ИЛИ ВыборкаСтрокТовары.ID = 3 
			ИЛИ ВыборкаСтрокТовары.ID = 4 Тогда
			ЕстьТовары = Истина;                            
		КонецЕсли;
		
		Строчка = Товары.Добавить();
		Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Товар) Тогда
			Строчка.Товар               = ВыборкаСтрокТовары.Товар;
			Строчка.ТоварНаименование   = ВыборкаСтрокТовары.ТоварНаименование  + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		ИначеЕсли ЗначениеЗаполнено(ВыборкаСтрокТовары.ОбъектСтроительства) Тогда
			Строчка.Товар               = ВыборкаСтрокТовары.ОбъектСтроительства;
			Строчка.ТоварНаименование   = ВыборкаСтрокТовары.ОбъектСтроительстваНаименование;
		КонецЕсли;
		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.Цена      = ВыборкаСтрокТовары.Цена;
		Строчка.СтавкаНДС = ВыборкаСтрокТовары.СтавкаНДС;
		Строчка.СуммаНДС  = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.Сумма     = ВыборкаСтрокТовары.Сумма;

	КонецЦикла;
	
	Если Не ЕстьТовары Тогда
		ДанныеДляПечати.Грузоотправитель = "";
		ДанныеДляПечати.Грузополучатель = "";		
	КонецЕсли;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПоПоступлениюТоваров()

// Функция собирает данные по документу основанию ВозвратТоваровОтПокупателя и 
// структуру с данными
// 
Функция СобратьДанныеПоВозвратуТоваровОтПокупателя(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	Организация КАК Грузополучатель,
	|	Подразделение,
	|	Контрагент            КАК Поставщик,
	|	""он же"" КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	УчитыватьНДС          КАК УчитыватьНДС,
	|	СуммаВключаетНДС      КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ВозвратТоваровОтПокупателя КАК ВозвратТоваровОтПокупателя
	|
	|ГДЕ
	|	ВозвратТоваровОтПокупателя.Ссылка = &ДокументОснование";

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("Курс", ДокОснование.КурсВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ДокОснование.Ссылка);
	ЗапросПоТоварам.Текст = "ВЫБРАТЬ
	                        |	ВозвратТоваровОтПокупателяТовары.НомерСтроки КАК НомерСтроки,
	                        |	ВозвратТоваровОтПокупателяТовары.Номенклатура КАК Товар,
	                        |	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	                        |	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК СТРОКА(1000)) КАК ПредставлениеСтраны,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД.Представление КАК ПредставлениеГТД,
	                        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |	СУММА(ВозвратТоваровОтПокупателяТовары.Количество) КАК Количество,
	                        |	ВозвратТоваровОтПокупателяТовары.Цена КАК Цена,
	                        |	ВозвратТоваровОтПокупателяТовары.Сумма КАК Сумма,
	                        |	ВозвратТоваровОтПокупателяТовары.СуммаНДС КАК СуммаНДС,
	                        |	ВозвратТоваровОтПокупателяТовары.СтавкаНДС КАК СтавкаНДС,
	                        |	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры КАК Серия
	                        |ИЗ
	                        |	Документ.ВозвратТоваровОтПокупателя.Товары КАК ВозвратТоваровОтПокупателяТовары
	                        |ГДЕ
	                        |	ВозвратТоваровОтПокупателяТовары.Ссылка = &ТекущийДокумент
	                        |
	                        |СГРУППИРОВАТЬ ПО
	                        |	ВозвратТоваровОтПокупателяТовары.НомерСтроки,
	                        |	ВозвратТоваровОтПокупателяТовары.Номенклатура,
	                        |	ВозвратТоваровОтПокупателяТовары.ЕдиницаИзмерения,
	                        |	ВозвратТоваровОтПокупателяТовары.СтавкаНДС,
	                        |	ВозвратТоваровОтПокупателяТовары.Цена,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД,
	                        |	ВозвратТоваровОтПокупателяТовары.ХарактеристикаНоменклатуры,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры,
	                        |	ВозвратТоваровОтПокупателяТовары.Сумма,
	                        |	ВозвратТоваровОтПокупателяТовары.СуммаНДС,
	                        |	ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.НомерГТД.Представление,
	                        |	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)),
	                        |	ВЫРАЗИТЬ(ВозвратТоваровОтПокупателяТовары.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК СТРОКА(1000))";

	Шапка              = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		
		Строчка = Товары.Добавить();
		Строчка.Товар               = ВыборкаСтрокТовары.Товар;
		Строчка.ТоварНаименование   = СокрЛП(ВыборкаСтрокТовары.Товар.НаименованиеПолное) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(СокрЛП(ВыборкаСтрокТовары.ПредставлениеСтраны)), ВыборкаСтрокТовары.СтранаПроисхождения, СокрЛП(ВыборкаСтрокТовары.ПредставлениеСтраны));
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = СокрЛП(ВыборкаСтрокТовары.ПредставлениеГТД);
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.Цена      = ВыборкаСтрокТовары.Цена;
		Строчка.СтавкаНДС = ВыборкаСтрокТовары.СтавкаНДС;
		Строчка.СуммаНДС  = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.Сумма     = ВыборкаСтрокТовары.Сумма;

	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПоПоступлениюТоваров()

// Функция собирает данные по документу основанию ВозвратТоваровПоставщику и 
// структуру с данными
// 
Функция СобратьДанныеПоВозвратуТоваров(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Грузополучатель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА Организация 
	|		ИНАЧЕ Грузополучатель 
	|	КОНЕЦ КАК Грузополучатель,
	|	Подразделение,
	|	Контрагент            КАК Поставщик,
	|	ВЫБОР 
	|		КОГДА ЕСТЬNULL(Грузоотправитель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ""он же"" 
	|		ИНАЧЕ Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	УчитыватьНДС          КАК УчитыватьНДС,
	|	СуммаВключаетНДС      КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка = &ДокументОснование";

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("Курс", ДокОснование.КурсВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ДокОснование.Ссылка);
	ЗапросПоТоварам.Текст = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.НомерСтроки,
	                        |	ВложенныйЗапрос.Товар,
	                        |	ВложенныйЗапрос.Товар.НаименованиеПолное КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.СтранаПроисхождения,
	                        |	ВложенныйЗапрос.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	                        |	ВложенныйЗапрос.НомерГТД,
	                        |	ВложенныйЗапрос.НомерГТД.Представление КАК ПредставлениеГТД,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	                        |	ВложенныйЗапрос.Количество,
	                        |	ВложенныйЗапрос.Цена,
	                        |	ВложенныйЗапрос.Сумма,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.ДокументПоступления
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		ТаблицаПоТоварам.НомерСтроки КАК НомерСтроки,
	                        |		ТаблицаПоТоварам.Номенклатура КАК Товар,
	                        |		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	                        |		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	                        |		ТаблицаПоТоварам.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |		СУММА(ТаблицаПоТоварам.Количество) КАК Количество,
	                        |		-ТаблицаПоТоварам.Цена КАК Цена,
	                        |		-ТаблицаПоТоварам.Сумма КАК Сумма,
	                        |		-ТаблицаПоТоварам.СуммаНДС КАК СуммаНДС,
	                        |		ТаблицаПоТоварам.СтавкаНДС КАК СтавкаНДС,
	                        |		ТаблицаПоТоварам.ХарактеристикаНоменклатуры КАК Характеристика,
	                        |		ТаблицаПоТоварам.СерияНоменклатуры КАК Серия,
	                        |		ТаблицаПоТоварам.ДокументПоступления КАК ДокументПоступления
	                        |	ИЗ
	                        |		Документ.ВозвратТоваровПоставщику.Товары КАК ТаблицаПоТоварам
	                        |	ГДЕ
	                        |		ТаблицаПоТоварам.Ссылка = &ТекущийДокумент
	                        |		И ТаблицаПоТоварам.ДокументПоступления <> НЕОПРЕДЕЛЕНО
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		ТаблицаПоТоварам.НомерСтроки,
	                        |		ТаблицаПоТоварам.Номенклатура,
	                        |		ТаблицаПоТоварам.ЕдиницаИзмерения,
	                        |		ТаблицаПоТоварам.СтавкаНДС,
	                        |		ТаблицаПоТоварам.Цена,
	                        |		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения,
	                        |		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД,
	                        |		ТаблицаПоТоварам.ХарактеристикаНоменклатуры,
	                        |		ТаблицаПоТоварам.СерияНоменклатуры,
	                        |		ТаблицаПоТоварам.Сумма,
	                        |		ТаблицаПоТоварам.СуммаНДС,
	                        |		ТаблицаПоТоварам.ДокументПоступления) КАК ВложенныйЗапрос
	                        |
	                        |ОБЪЕДИНИТЬ ВСЕ
	                        |
	                        |ВЫБРАТЬ
	                        |	ТаблицаПоОборудованию.НомерСтроки,
	                        |	ТаблицаПоОборудованию.Номенклатура,
	                        |	ТаблицаПоОборудованию.Номенклатура.НаименованиеПолное,
	                        |	ТаблицаПоОборудованию.СерияНоменклатуры.СтранаПроисхождения,
	                        |	ТаблицаПоОборудованию.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное,
	                        |	ТаблицаПоОборудованию.СерияНоменклатуры.НомерГТД,
	                        |	ТаблицаПоОборудованию.СерияНоменклатуры.НомерГТД.Представление,
	                        |	ТаблицаПоОборудованию.ЕдиницаИзмерения.Представление,
	                        |	ТаблицаПоОборудованию.Количество,
	                        |	-ТаблицаПоОборудованию.Цена,
	                        |	-ТаблицаПоОборудованию.Сумма,
	                        |	-ТаблицаПоОборудованию.СуммаНДС,
	                        |	ТаблицаПоОборудованию.СтавкаНДС,
	                        |	ТаблицаПоОборудованию.ХарактеристикаНоменклатуры,
	                        |	ТаблицаПоОборудованию.СерияНоменклатуры,
	                        |	ТаблицаПоОборудованию.ДокументПоступления
	                        |ИЗ
	                        |	Документ.ВозвратТоваровПоставщику.Оборудование КАК ТаблицаПоОборудованию
	                        |ГДЕ
	                        |	ТаблицаПоОборудованию.Ссылка = &ТекущийДокумент
	                        |	И ТаблицаПоОборудованию.ДокументПоступления <> НЕОПРЕДЕЛЕНО";

	Шапка              = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл
		
		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ДокументПоступления) Тогда

			Строчка = Товары.Добавить();
			Строчка.Товар               = ВыборкаСтрокТовары.Товар;
			Строчка.ТоварНаименование   = ВыборкаСтрокТовары.ТоварНаименование  + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
			Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
			Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
			Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
			Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
			Строчка.Количество          = ВыборкаСтрокТовары.Количество;
			Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
			Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
			Строчка.Цена      = ВыборкаСтрокТовары.Цена;
			Строчка.СтавкаНДС = ВыборкаСтрокТовары.СтавкаНДС;
			Строчка.СуммаНДС  = ВыборкаСтрокТовары.СуммаНДС;
			Строчка.Сумма     = ВыборкаСтрокТовары.Сумма;
			
		КонецЕсли;

	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПоПоступлениюТоваров()

// Функция собирает данные по документу основанию Поступление товаров и услуг в НТТ 
// и возвращает структуру с данными
// 
Функция СобратьДанныеПоПоступлениюТоваровУслугВНТТ(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	Организация           КАК Грузополучатель,
	|	Контрагент            КАК Поставщик,
	|	Контрагент            КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	УчитыватьНДС          КАК УчитыватьНДС,
	|	СуммаВключаетНДС      КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслугВНТТ КАК ПоступлениеТоваровУслугВНТТ
	|
	|ГДЕ
	|	ПоступлениеТоваровУслугВНТТ.Ссылка = &ДокументОснование";

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("Курс",            ДокОснование.КурсВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("Кратность",       ДокОснование.КратностьВзаиморасчетов);
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", ДокОснование.Ссылка);
	ЗапросПоТоварам.Текст = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.НомерСтроки,
	|	ВложенныйЗапрос.Товар,
	|	ВложенныйЗапрос.Товар.НаименованиеПолное       КАК ТоварНаименование,
	|	ВложенныйЗапрос.Характеристика,
	|	ВложенныйЗапрос.Серия,
	|	ВложенныйЗапрос.СтранаПроисхождения,
	|	ВложенныйЗапрос.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ВложенныйЗапрос.НомерГТД,
	|	ВложенныйЗапрос.НомерГТД.Представление         КАК ПредставлениеГТД,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ВложенныйЗапрос.Количество,
	|	ВложенныйЗапрос.Цена,
	|	ВложенныйЗапрос.Сумма,
	|	ВложенныйЗапрос.СуммаНДС,
	|	ВложенныйЗапрос.СтавкаНДС
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаПоТоварам.НомерСтроки							КАК НомерСтроки,
	|		ТаблицаПоТоварам.Номенклатура							КАК Товар,
	|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры             КАК Характеристика,
	|		ТаблицаПоТоварам.СерияНоменклатуры                      КАК Серия,
	|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения  КАК СтранаПроисхождения,
	|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД             КАК НомерГТД,
	|		ТаблицаПоТоварам.ЕдиницаИзмерения						КАК ЕдиницаИзмерения,
	|		СУММА(ТаблицаПоТоварам.Количество)   					КАК Количество,
	|		ТаблицаПоТоварам.Цена                КАК Цена,
	|		ТаблицаПоТоварам.Сумма               КАК Сумма,
	|		ТаблицаПоТоварам.СуммаНДС            КАК СуммаНДС,
	|		ТаблицаПоТоварам.СтавкаНДС           КАК СтавкаНДС
	|	ИЗ
	|		Документ.ПоступлениеТоваровУслугВНТТ.Товары КАК ТаблицаПоТоварам
	|	
	|	ГДЕ
	|		ТаблицаПоТоварам.Ссылка = &ТекущийДокумент
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ТаблицаПоТоварам.НомерСтроки,
	|		ТаблицаПоТоварам.Номенклатура,
	|		ТаблицаПоТоварам.ХарактеристикаНоменклатуры,
	|		ТаблицаПоТоварам.СерияНоменклатуры,
	|		ТаблицаПоТоварам.ЕдиницаИзмерения,
	|		ТаблицаПоТоварам.СтавкаНДС,
	|		ТаблицаПоТоварам.Цена,
	|		ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения,
	|		ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД,
	|		ТаблицаПоТоварам.Сумма,
	|		ТаблицаПоТоварам.СуммаНДС) КАК ВложенныйЗапрос

	|ОБЪЕДИНИТЬ ВСЕ

	|ВЫБРАТЬ
	|	ТаблицаПоУслугам.НомерСтроки,
	|	ТаблицаПоУслугам.Номенклатура,
	|	ТаблицаПоУслугам.Содержание,
	|	"""",
	|	"""",
	|	""Россия"",
	|	""Россия"",
	|	""--"",
	|	""--"",
	|	ТаблицаПоУслугам.Номенклатура.ЕдиницаХраненияОстатков.Представление,
	|	ТаблицаПоУслугам.Количество,
	|	ТаблицаПоУслугам.Цена,
	|	ТаблицаПоУслугам.Сумма,
	|	ТаблицаПоУслугам.СуммаНДС,
	|	ТаблицаПоУслугам.СтавкаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслугВНТТ.Услуги КАК ТаблицаПоУслугам

	|ГДЕ
	|	ТаблицаПоУслугам.Ссылка = &ТекущийДокумент";

	Шапка              = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл

		Строчка = Товары.Добавить();

		Если ЗначениеЗаполнено(ВыборкаСтрокТовары.Товар) Тогда
			Строчка.Товар               = ВыборкаСтрокТовары.Товар;
			Строчка.ТоварНаименование   = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		КонецЕсли;

		Строчка.СтранаПроисхождения = ВыборкаСтрокТовары.СтранаПроисхождения;
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);
		Строчка.НомерГТД            = ВыборкаСтрокТовары.НомерГТД;
		Строчка.ПредставлениеГТД    = ВыборкаСтрокТовары.ПредставлениеГТД;
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаСтрокТовары.ЕдиницаИзмерения;
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.Цена                = ВыборкаСтрокТовары.Цена;
		Строчка.СтавкаНДС           = ВыборкаСтрокТовары.СтавкаНДС;
		Строчка.СуммаНДС            = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.Сумма               = ВыборкаСтрокТовары.Сумма;

	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПоПоступлениюТоваровУслугВНТТ()

// Функция собирает данные по документу основанию Поступление Доп. расходов и
// структуру с данными
// 
Функция СобратьДанныеДопРасходам(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);

	Запрос.Текст ="
	|	ВЫБРАТЬ
	|	Организация,
	|	Организация КАК Покупатель,
	|	Подразделение,
	|	Контрагент  КАК Поставщик,
	|	Содержание            КАК СтатьяЗатрат,
	|	ВалютаДокумента       КАК Валюта,
	|	СуммаДокумента        КАК СуммаДокумента,
	|	(ВложенныйЗапрос.СуммаНДС + ПоступлениеДопРасходов.СуммаНДС) КАК СуммаНДС,
	|	СтавкаНДС,
	|	УчитыватьНДС          КАК УчитыватьНДС,
	|	СуммаВключаетНДС      КАК СуммаВключаетНДС,
	|	ВложенныйЗапрос.СуммаДенег
	|ИЗ
	|	(ВЫБРАТЬ
	|		ЕСТЬNULL(СУММА(ПоступлениеДопРасходовТовары.Сумма), 0)    КАК СуммаДенег,
	|		ЕСТЬNULL(СУММА(ПоступлениеДопРасходовТовары.СуммаНДС), 0) КАК СуммаНДС
	|
	|	ИЗ
	|		Документ.ПоступлениеДопРасходов.Товары КАК ПоступлениеДопРасходовТовары
	|
	|	ГДЕ
	|		Ссылка = &ДокументОснование) КАК ВложенныйЗапрос,
	|	Документ.ПоступлениеДопРасходов КАК ПоступлениеДопРасходов
	|
	|ГДЕ
	|	ПоступлениеДопРасходов.Ссылка = &ДокументОснование
	|";

	Шапка = Запрос.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", );
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  );
	ДанныеДляПечати.Вставить("Сумма",            0);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	Строчка = Товары.Добавить();
	Строчка.Товар               = Шапка.СтатьяЗатрат;
	Строчка.ТоварНаименование   = Шапка.СтатьяЗатрат;
	Строчка.СтранаПроисхождения = "";
	Строчка.ПредставлениеСтраны = "";
	Строчка.НомерГТД            = "";
	Строчка.ПредставлениеГТД    = "";
	Строчка.Количество          = 1;
	Строчка.ЕдиницаИзмерения    = "";
	Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
	Строчка.СтавкаНДС 			= Шапка.СтавкаНДС;
	Строчка.СуммаНДС  			= Шапка.СуммаНДС;
	Строчка.Сумма    			= Шапка.СуммаДокумента - ?(Шапка.СуммаВключаетНДС, 0, Шапка.СуммаНДС);
	Строчка.Цена     			= Строчка.Сумма;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеДопРасходам()

// Функция собирает данные по документу основанию Поступление и 
// структуру с данными
// 
Функция СобратьДанныеПоПоступлениюНМА(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);

	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	Организация           КАК Грузополучатель,
	|	"""" 				  КАК Подразделение,
	|	Контрагент            КАК Поставщик,
	|	Контрагент            КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	УчитыватьНДС          КАК УчитыватьНДС,
	|	СуммаВключаетНДС      КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ПоступлениеНМА КАК ПоступлениеНМА
	|
	|ГДЕ
	|	ПоступлениеНМА.Ссылка = &ДокументОснование";

	ЗапросПоОбъектамНМА = Новый Запрос();
	ЗапросПоОбъектамНМА.УстановитьПараметр("Курс", ДокОснование.КурсВзаиморасчетов);
	ЗапросПоОбъектамНМА.УстановитьПараметр("Кратность", ДокОснование.КратностьВзаиморасчетов);
	ЗапросПоОбъектамНМА.УстановитьПараметр("ТекущийДокумент", ДокОснование);
	ЗапросПоОбъектамНМА.Текст = "ВЫБРАТЬ
							|		ТаблицаПоНМА.НомерСтроки  КАК НомерСтроки,
							|		ТаблицаПоНМА.НематериальныйАктив КАК НМА,
							|		0 						  					КАК Количество,
							|		ТаблицаПоНМА.Сумма 	КАК Цена,
							|		ТаблицаПоНМА.Сумма 	КАК Сумма,
							|		ТаблицаПоНМА.СуммаНДС КАК СуммаНДС,
							|		ТаблицаПоНМА.СтавкаНДС 						КАК СтавкаНДС
							|	ИЗ
							|		Документ.ПоступлениеНМА.НематериальныеАктивы КАК ТаблицаПоНМА
							|	
							|	ГДЕ
							|		ТаблицаПоНМА.Ссылка = &ТекущийДокумент";

	Шапка              = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоОбъектамНМА.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл

		Строчка = Товары.Добавить();
		Строчка.Товар               = ВыборкаСтрокТовары.НМА;
		Строчка.ТоварНаименование   = ВыборкаСтрокТовары.НМА;
		Строчка.СтранаПроисхождения = "Россия";
		Строчка.ПредставлениеСтраны = "Россия";
		Строчка.НомерГТД            = "--";
		Строчка.ПредставлениеГТД    = "--";
		Строчка.Количество          = ВыборкаСтрокТовары.Количество;
		Строчка.ЕдиницаИзмерения    = "--";
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.Цена      = ВыборкаСтрокТовары.Цена;
		Строчка.Сумма     = ВыборкаСтрокТовары.Сумма;
		Строчка.СуммаНДС  = ВыборкаСтрокТовары.СуммаНДС;
		Строчка.СтавкаНДС = ВыборкаСтрокТовары.СтавкаНДС;

	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПоПоступлениюНМА()

// Функция собирает данные по документу основанию ПолучениеУслугПоПереработке
// структуру с данными
// 
Функция СобратьДанныеПолучениеУслугПоПереработке(ДокОснование, Ссылка)

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);

	Запрос.Текст = 	"ВЫБРАТЬ
	               	|	ПолучениеУслугПоПереработке.Организация,
	               	|	ПолучениеУслугПоПереработке.Организация КАК Покупатель,
	               	|	ПолучениеУслугПоПереработке.Подразделение,
	               	|	ПолучениеУслугПоПереработке.Контрагент КАК Поставщик,
	               	|	ПолучениеУслугПоПереработке.СуммаДокумента КАК Сумма,
	               	|	ПолучениеУслугПоПереработке.ВалютаДокумента КАК Валюта,
	               	|	ПолучениеУслугПоПереработке.УчитыватьНДС КАК УчитыватьНДС,
	               	|	ПолучениеУслугПоПереработке.СуммаВключаетНДС КАК СуммаВключаетНДС
	               	|ИЗ
	               	|	Документ.ПолучениеУслугПоПереработке КАК ПолучениеУслугПоПереработке
	               	|ГДЕ
	               	|	ПолучениеУслугПоПереработке.Ссылка = &ДокументОснование";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ЗапросПоТоварам = Новый Запрос;
	ЗапросПоТоварам.УстановитьПараметр("ДокументОснование", ДокОснование);
	ЗапросПоТоварам.Текст = "ВЫБРАТЬ
	                        |	ПолучениеУслугПоПереработке.Номенклатура КАК Номенклатура,
	                        |	ПолучениеУслугПоПереработке.НоменклатураПредставление КАК НоменклатураПредставление,
	                        |	ПолучениеУслугПоПереработке.ЕдиницаИзмерения,
	                        |	ПолучениеУслугПоПереработке.СтавкаНДС КАК СтавкаНДС,
	                        |	СУММА(ПолучениеУслугПоПереработке.СуммаНДС) КАК СуммаНДС,
	                        |	СУММА(ПолучениеУслугПоПереработке.Сумма) КАК Сумма,
	                        |	СУММА(ПолучениеУслугПоПереработке.Количество) КАК Количество,
	                        |	СУММА(ПолучениеУслугПоПереработке.Цена) КАК Цена
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		ПолучениеУслугПоПереработке.СтавкаНДС КАК СтавкаНДС,
	                        |		ПолучениеУслугПоПереработке.СуммаНДС КАК СуммаНДС,
	                        |		ПолучениеУслугПоПереработке.Сумма КАК Сумма,
	                        |		ПолучениеУслугПоПереработке.Цена КАК Цена,
	                        |		ПолучениеУслугПоПереработке.Номенклатура КАК Номенклатура,
	                        |		ПолучениеУслугПоПереработке.Номенклатура.Представление КАК НоменклатураПредставление,
	                        |		ПолучениеУслугПоПереработке.Количество КАК Количество,
	                        |		ПолучениеУслугПоПереработке.Номенклатура.ЕдиницаХраненияОстатков.Представление КАК ЕдиницаИзмерения
	                        |	ИЗ
	                        |		Документ.ПолучениеУслугПоПереработке.Услуги КАК ПолучениеУслугПоПереработке
	                        |	ГДЕ
	                        |		ПолучениеУслугПоПереработке.Ссылка = &ДокументОснование
	                        |	
	                        |	ОБЪЕДИНИТЬ ВСЕ
	                        |	
	                        |	ВЫБРАТЬ
	                        |		ПолучениеУслугПоПереработке.СтавкаНДС,
	                        |		ПолучениеУслугПоПереработке.СуммаНДС,
	                        |		ПолучениеУслугПоПереработке.Сумма,
	                        |		ПолучениеУслугПоПереработке.Цена,
	                        |		ПолучениеУслугПоПереработке.Номенклатура,
	                        |		ПолучениеУслугПоПереработке.Номенклатура.Представление,
	                        |		ПолучениеУслугПоПереработке.Количество,
	                        |		ПолучениеУслугПоПереработке.ЕдиницаИзмерения
	                        |	ИЗ
	                        |		Документ.ПолучениеУслугПоПереработке.Товары КАК ПолучениеУслугПоПереработке
	                        |	ГДЕ
	                        |		ПолучениеУслугПоПереработке.Ссылка = &ДокументОснование) КАК ПолучениеУслугПоПереработке
	                        |
	                        |СГРУППИРОВАТЬ ПО
	                        |	ПолучениеУслугПоПереработке.СтавкаНДС,
	                        |	ПолучениеУслугПоПереработке.Номенклатура,
	                        |	ПолучениеУслугПоПереработке.НоменклатураПредставление,
	                        |	ПолучениеУслугПоПереработке.ЕдиницаИзмерения";
	
	ВыборкаТовары = ЗапросПоТоварам .Выполнить().Выбрать();

	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", );
	ДанныеДляПечати.Вставить("Подразделение",    Шапка.Подразделение);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  );
	ДанныеДляПечати.Вставить("Сумма",            0);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	
	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаТовары.Следующий() Цикл
		
		Строчка = Товары.Добавить();
		Строчка.Товар               = ВыборкаТовары.Номенклатура;
		Строчка.ТоварНаименование   = ВыборкаТовары.НоменклатураПредставление;
		Строчка.СтранаПроисхождения = "";
		Строчка.ПредставлениеСтраны = "";
		Строчка.НомерГТД            = "";
		Строчка.ПредставлениеГТД    = "";
		Строчка.Количество          = ВыборкаТовары.Количество;
		Строчка.ЕдиницаИзмерения    = ВыборкаТовары.ЕдиницаИзмерения;
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.Цена      			= ВыборкаТовары.Цена;
		Строчка.СтавкаНДС 			= ВыборкаТовары.СтавкаНДС;
		Строчка.СуммаНДС  			= ВыборкаТовары.СуммаНДС;
		Строчка.Сумма     			= ВыборкаТовары.Сумма;
		
	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;

КонецФункции // СобратьДанныеПолучениеУслугПоПереработке()

// Функция собирает данные по документу основанию ОтражениеПоступленияТоваровИУслугНДС и 
// структуру с данными
// 
Функция СобратьДанныеПоОтражениеПоступленияТоваровУслугНДС(ДокОснование, Ссылка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организация,
	|	Организация           КАК Покупатель,
	|	Организация           КАК Грузополучатель,
	|	Контрагент            КАК Поставщик,
	|	Контрагент            КАК Грузоотправитель,
	|	СуммаДокумента        КАК Сумма,
	|	ВалютаДокумента       КАК Валюта,
	|	ИСТИНА		          КАК УчитыватьНДС,
	|	ЛОЖЬ			      КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.ОтражениеПоступленияТоваровИУслугНДС КАК ОтражениеПоступленияТоваровИУслугНДС
	|
	|ГДЕ
	|	ОтражениеПоступленияТоваровИУслугНДС.Ссылка = &ДокументОснование";
	
	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка.ДокументОснование);
	ЗапросПоТоварам.Текст = "
	|ВЫБРАТЬ
	|	НомерСтроки						КАК НомерСтроки,
	|	Номенклатура					КАК Товар,
	|	Номенклатура.НаименованиеПолное	КАК ТоварНаименование,
	|	Номенклатура.БазоваяЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	0           					КАК Количество,
	|	Сумма       					КАК Цена,
	|	Сумма       					КАК Сумма,
	|	СуммаНДС    					КАК СуммаНДС,
	|	СтавкаНДС   					КАК СтавкаНДС,
	|	СтранаПроисхождения,
	|	НомерГТД
	|ИЗ
	|	Документ.ОтражениеПоступленияТоваровИУслугНДС.ТоварыИУслуги КАК ТаблицаПоТоварамИУслугам
	|
	|ГДЕ
	|	ТаблицаПоТоварамИУслугам.Ссылка = &ТекущийДокумент";
	
	Шапка              = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл

		Строчка = Товары.Добавить();

		ЗаполнитьЗначенияСвойств(Строчка, ВыборкаСтрокТовары);
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		
	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
	
КонецФункции

// Функция собирает данные по документу основанию АвансовыйОтчет и 
// структуру с данными
// 
Функция СобратьДанныеПоАвансовыйОтчет(ДокОснование, Ссылка)
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	АвансовыйОтчет.Организация,
	|	АвансовыйОтчет.Организация КАК Покупатель,
	|	АвансовыйОтчет.Организация КАК Грузополучатель,
	|	ВложенныйЗапрос.Контрагент КАК Поставщик,
	|	ВложенныйЗапрос.Контрагент КАК Грузоотправитель,
	|	АвансовыйОтчет.ВалютаДокумента КАК Валюта,
	|	АвансовыйОтчет.УчитыватьНДС КАК УчитыватьНДС,
	|	АвансовыйОтчет.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АвансовыйОтчет КАК АвансовыйОтчет,
	|	(ВЫБРАТЬ
	|		Товары.Поставщик КАК Контрагент
	|	ИЗ
	|		Документ.АвансовыйОтчет.Товары КАК Товары
	|	ГДЕ
	|		Товары.СчетФактура = &Ссылка
	|		И Товары.Ссылка = &ДокументОснование
	|		И Товары.ПредъявленСФ
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Товары.Поставщик
	|	ИЗ
	|		Документ.АвансовыйОтчет.Прочее КАК Товары
	|	ГДЕ
	|		Товары.СчетФактура = &Ссылка
	|		И Товары.Ссылка = &ДокументОснование) КАК ВложенныйЗапрос
	|ГДЕ
	|	АвансовыйОтчет.Ссылка = &ДокументОснование";
	
	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ДокументОснование", ДокОснование);
	ЗапросПоТоварам.УстановитьПараметр("Ссылка", Ссылка);
	ЗапросПоТоварам.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПоТоварам.НомерСтроки,
	|	ТаблицаПоТоварам.Номенклатура КАК Товар,
	|	ТаблицаПоТоварам.Номенклатура.НаименованиеПолное КАК ТоварНаименование,
	|	ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения.НаименованиеПолное КАК ПредставлениеСтраны,
	|	ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|	ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаПоТоварам.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ТаблицаПоТоварам.Количество,
	|	ТаблицаПоТоварам.Цена,
	|	ТаблицаПоТоварам.Сумма,
	|	ТаблицаПоТоварам.СуммаНДС,
	|	ТаблицаПоТоварам.СтавкаНДС,
	|	1 КАК ID
	|ИЗ
	|	Документ.АвансовыйОтчет.Товары КАК ТаблицаПоТоварам
	|ГДЕ
	|	ТаблицаПоТоварам.Ссылка = &ДокументОснование
	|	И ТаблицаПоТоварам.СчетФактура = &Ссылка
	|	И ТаблицаПоТоварам.ПредъявленСФ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПоПрочее.НомерСтроки,
	|	ТаблицаПоПрочее.Номенклатура,
	|	ТаблицаПоПрочее.Содержание,
	|	""Россия"",
	|	""Россия"",
	|	""--"",
	|	""--"",
	|	""--"",
	|	0,
	|	0,
	|	ТаблицаПоПрочее.Сумма,
	|	ТаблицаПоПрочее.СуммаНДС,
	|	ТаблицаПоПрочее.СтавкаНДС,
	|	2
	|ИЗ
	|	Документ.АвансовыйОтчет.Прочее КАК ТаблицаПоПрочее
	|ГДЕ
	|	ТаблицаПоПрочее.Ссылка = &ДокументОснование
	|	И ТаблицаПоПрочее.СчетФактура = &Ссылка
	|	И ТаблицаПоПрочее.ПредъявленСФ";
	
	Шапка              = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Шапка.Следующий();
	ДанныеДляПечати = Новый Структура();
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            Ссылка.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             Ссылка.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Шапка.Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
	
	Товары = ИнициализацияТаблицыСтрок();
	
	Пока ВыборкаСтрокТовары.Следующий() = 1 Цикл

		Строчка = Товары.Добавить();

		ЗаполнитьЗначенияСвойств(Строчка, ВыборкаСтрокТовары);
		Строчка.СуммаВключаетНДС	= Шапка.СуммаВключаетНДС;
		Строчка.ПредставлениеСтраны = ?(НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.ПредставлениеСтраны), ВыборкаСтрокТовары.СтранаПроисхождения, ВыборкаСтрокТовары.ПредставлениеСтраны);

	КонецЦикла;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
	
КонецФункции


// Функция собирает данные по документу-основанию КорректировкаПоступления и
// возвращает типизированную структуру с данными для печати исправленного счета-фактуры
// 
Функция СобратьДанныеДляПечатиИсправленияСчетаФактуры(ДокОснование, Ссылка)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаПоступления.Организация,
	|	КорректировкаПоступления.Организация КАК Покупатель,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КорректировкаПоступления.Грузополучатель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА КорректировкаПоступления.Организация
	|		ИНАЧЕ КорректировкаПоступления.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	КорректировкаПоступления.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КорректировкаПоступления.Грузоотправитель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ""он же""
	|		ИНАЧЕ КорректировкаПоступления.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	КорректировкаПоступления.СуммаДокумента КАК Сумма,
	|	КорректировкаПоступления.ВалютаДокумента КАК Валюта,
	|	КорректировкаПоступления.УчитыватьНДС КАК УчитыватьНДС,
	|	КорректировкаПоступления.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|ГДЕ
	|	КорректировкаПоступления.Ссылка = &ДокументОснование";

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ДокументОснование", ДокОснование);
	ЗапросПоТоварам.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаПоТоварам.НомерСтроки КАК НомерСтроки,
	|	ТаблицаПоТоварам.Номенклатура КАК Товар,
	|	ТаблицаПоТоварам.СерияНоменклатуры КАК СерияНоменклатуры,
	|	ТаблицаПоТоварам.ХарактеристикаНоменклатуры КАК ХарактеристикаНоменклатуры,
	|	ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения КАК СтранаПроисхождения,
	|	ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД КАК НомерГТД,
	|	ТаблицаПоТоварам.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(ТаблицаПоТоварам.Количество) КАК Количество,
	|	ТаблицаПоТоварам.Цена КАК Цена,
	|	ТаблицаПоТоварам.Сумма КАК Сумма,
	|	ТаблицаПоТоварам.СуммаНДС КАК СуммаНДС,
	|	ТаблицаПоТоварам.СтавкаНДС КАК СтавкаНДС
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК ТаблицаПоТоварам
	|ГДЕ
	|	ТаблицаПоТоварам.Ссылка = &ДокументОснование
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПоТоварам.НомерСтроки,
	|	ТаблицаПоТоварам.Номенклатура,
	|	ТаблицаПоТоварам.СтавкаНДС,
	|	ТаблицаПоТоварам.Цена,
	|	ТаблицаПоТоварам.СерияНоменклатуры,
	|	ТаблицаПоТоварам.ХарактеристикаНоменклатуры,
	|	ТаблицаПоТоварам.СерияНоменклатуры.СтранаПроисхождения,
	|	ТаблицаПоТоварам.СерияНоменклатуры.НомерГТД,
	|	ТаблицаПоТоварам.Сумма,
	|	ТаблицаПоТоварам.СуммаНДС,
	|	ТаблицаПоТоварам.ЕдиницаИзмерения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТовары.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТовары.Товар,
	|	ВЫРАЗИТЬ(ТаблицаТовары.Товар.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	|	ТаблицаТовары.СерияНоменклатуры КАК Серия,
	|	ТаблицаТовары.ХарактеристикаНоменклатуры КАК Характеристика,
	|	ТаблицаТовары.СтранаПроисхождения,
	|	ТаблицаТовары.СтранаПроисхождения.Наименование КАК ПредставлениеСтраны,
	|	ТаблицаТовары.СтранаПроисхождения.Код КАК СтранаПроисхожденияКод,
	|	ТаблицаТовары.НомерГТД,
	|	ТаблицаТовары.НомерГТД.Представление КАК ПредставлениеГТД,
	|	ТаблицаТовары.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмерения,
	|	ТаблицаТовары.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ТаблицаТовары.Количество,
	|	ТаблицаТовары.Цена,
	|	ТаблицаТовары.Сумма,
	|	ТаблицаТовары.СуммаНДС,
	|	ТаблицаТовары.СтавкаНДС,
	|	""Товары"" КАК ВидПоступления
	|ИЗ
	|	ТаблицаТовары КАК ТаблицаТовары
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаПоУслугам.НомерСтроки,
	|	ТаблицаПоУслугам.Номенклатура,
	|	ВЫРАЗИТЬ(ТаблицаПоУслугам.Содержание КАК СТРОКА(1000)),
	|	NULL,
	|	NULL,
	|	""Россия"",
	|	""Россия"",
	|	"""",
	|	"""",
	|	"""",
	|	ТаблицаПоУслугам.Номенклатура.ЕдиницаХраненияОстатков,
	|	ТаблицаПоУслугам.Номенклатура.ЕдиницаХраненияОстатков.ЕдиницаПоКлассификатору.Код,
	|	ТаблицаПоУслугам.Количество,
	|	ТаблицаПоУслугам.Цена,
	|	ТаблицаПоУслугам.Сумма,
	|	ТаблицаПоУслугам.СуммаНДС,
	|	ТаблицаПоУслугам.СтавкаНДС,
	|	""Услуги""
	|ИЗ
	|	Документ.КорректировкаПоступления.Услуги КАК ТаблицаПоУслугам
	|ГДЕ
	|	ТаблицаПоУслугам.Ссылка = &ДокументОснование
	|
	|УПОРЯДОЧИТЬ ПО
	|	ВидПоступления,
	|	НомерСтроки";

	Шапка = Запрос.Выполнить().Выбрать();
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();
    	
	Шапка.Следующий();
	
	ДанныеДляПечати = Новый Структура();
	
	Покупатель = Шапка.Покупатель;
	
	Если ЗначениеЗаполнено(Покупатель.ГоловнаяОрганизация) Тогда 
		Покупатель = Покупатель.ГоловнаяОрганизация;
	КонецЕсли;
	
	РеквизитыСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(
		Ссылка, "Дата,НомерВходящегоДокумента,ДатаВходящегоДокумента");
    	
	ДанныеДляПечати.Вставить("Организация",      Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",            РеквизитыСФ.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",             РеквизитыСФ.ДатаВходящегоДокумента);
	ДанныеДляПечати.Вставить("Поставщик",        Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Грузоотправитель", Шапка.Грузоотправитель);
	ДанныеДляПечати.Вставить("Покупатель",       Покупатель);
	ДанныеДляПечати.Вставить("Грузополучатель",  Шапка.Грузополучатель);
	ДанныеДляПечати.Вставить("Сумма",            Шапка.Сумма);
	ДанныеДляПечати.Вставить("Валюта",           Шапка.Валюта);
	ДанныеДляПечати.Вставить("УчитыватьНДС",     Шапка.УчитыватьНДС);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС", Шапка.СуммаВключаетНДС);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );

	Товары = ИнициализацияТаблицыСтрок();

	ЕстьТовары = Ложь;
	
	Пока ВыборкаСтрокТовары.Следующий() Цикл
		
		ЕстьТовары = ЕстьТовары ИЛИ ВыборкаСтрокТовары.ВидПоступления <> "Услуги";
		Строчка    = Товары.Добавить();
		ЗаполнитьЗначенияСвойств(Строчка, ВыборкаСтрокТовары);
		
		Строчка.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары);
		Строчка.СуммаВключаетНДС = Шапка.СуммаВключаетНДС;

	КонецЦикла;

	Если НЕ ЕстьТовары Тогда
		ДанныеДляПечати.Грузоотправитель = "";
		ДанныеДляПечати.Грузополучатель = "";		
	КонецЕсли;
	
	ДанныеДляПечати.Вставить("ТабличнаяЧасть", Товары);

	Возврат ДанныеДляПечати;
		
КонецФункции	

// Функция собирает данные по документу-основанию КорректировкаПоступления и
// возвращает типизированную структуру с данными для печати корректировочного 
// счета-фактуры
// 
Функция СобратьДанныеДляПечатиКорректировочногоСчетаФактуры(ДокОснование, Ссылка)
	
	Перем ПодразделениеОтветственныхЛиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДокументОснование", ДокОснование);
	Запрос.УстановитьПараметр("ПустойКонтрагент", Справочники.Контрагенты.ПустаяСсылка());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаПоступления.Организация,
	|	КорректировкаПоступления.Организация КАК Покупатель,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КорректировкаПоступления.Грузополучатель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА КорректировкаПоступления.Организация
	|		ИНАЧЕ КорректировкаПоступления.Грузополучатель
	|	КОНЕЦ КАК Грузополучатель,
	|	КорректировкаПоступления.Контрагент КАК Поставщик,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(КорректировкаПоступления.Грузоотправитель, &ПустойКонтрагент) = &ПустойКонтрагент
	|			ТОГДА ""он же""
	|		ИНАЧЕ КорректировкаПоступления.Грузоотправитель
	|	КОНЕЦ КАК Грузоотправитель,
	|	КорректировкаПоступления.СуммаДокумента КАК Сумма,
	|	КорректировкаПоступления.ВалютаДокумента КАК Валюта,
	|	КорректировкаПоступления.УчитыватьНДС КАК УчитыватьНДС,
	|	КорректировкаПоступления.СуммаВключаетНДС КАК СуммаВключаетНДС
	|ПОМЕСТИТЬ ВТИсходныйДокумент
	|ИЗ
	|	Документ.КорректировкаПоступления КАК КорректировкаПоступления
	|ГДЕ
	|	КорректировкаПоступления.Ссылка = &ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТИсходныйДокумент.Организация,
	|	ВТИсходныйДокумент.Покупатель,
	|	ВТИсходныйДокумент.Грузополучатель,
	|	ВТИсходныйДокумент.Поставщик,
	|	ВТИсходныйДокумент.Грузоотправитель,
	|	ВТИсходныйДокумент.Сумма,
	|	ВТИсходныйДокумент.Валюта,
	|	ВТИсходныйДокумент.УчитыватьНДС,
	|	ВТИсходныйДокумент.СуммаВключаетНДС
	|ИЗ
	|	ВТИсходныйДокумент КАК ВТИсходныйДокумент";
	
	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();
	
	ДанныеДляПечати = Новый Структура();
	
	Покупатель = Шапка.Покупатель;
	
	Если ЗначениеЗаполнено(Покупатель.ГоловнаяОрганизация) Тогда 
		Покупатель = Покупатель.ГоловнаяОрганизация;
	КонецЕсли;
	
	РеквизитыСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка, 
		"НомерВходящегоДокумента,ДатаВходящегоДокумента,
		|Исправление,НомерИсправления,ДатаИсправления,
		|НомерИсходногоДокумента,ДатаИсходногоДокумента,
		|УчитыватьИсправлениеИсходногоДокумента,НомерИсправленияИсходногоДокумента,ДатаИсправленияИсходногоДокумента");
    	
	ДанныеДляПечати.Вставить("Организация",       Шапка.Организация);
	ДанныеДляПечати.Вставить("Номер",             РеквизитыСФ.НомерВходящегоДокумента);
	ДанныеДляПечати.Вставить("Дата",              Формат(РеквизитыСФ.ДатаВходящегоДокумента, "ДФ='дд ММММ гггг'") + " г.");
	ДанныеДляПечати.Вставить("Поставщик",         Шапка.Поставщик);
	ДанныеДляПечати.Вставить("Валюта",			  Шапка.Валюта);
	ДанныеДляПечати.Вставить("Покупатель",        Покупатель);
	ДанныеДляПечати.Вставить("СуммаВключаетНДС",  Шапка.СуммаВключаетНДС);
	
	ДанныеДляПечати.Вставить("НомерСчетаФактуры", РеквизитыСФ.НомерИсходногоДокумента);
	ДанныеДляПечати.Вставить("ДатаСчетаФактуры",  Формат(РеквизитыСФ.ДатаИсходногоДокумента, "ДФ='дд ММММ гггг'") + " г.");
	ДанныеДляПечати.Вставить("НомерИсправления",  РеквизитыСФ.НомерИсправленияИсходногоДокумента);
	ДанныеДляПечати.Вставить("ДатаИсправления",   РеквизитыСФ.ДатаИсправленияИсходногоДокумента);
	ДанныеДляПечати.Вставить("НомерИсправленияКорректировочного", РеквизитыСФ.НомерИсправления);
	ДанныеДляПечати.Вставить("ДатаИсправленияКорректировочного",  РеквизитыСФ.ДатаИсправления);
	ДанныеДляПечати.Вставить("ФИОРуководителя",       );
	ДанныеДляПечати.Вставить("ФИОГлавногоБухгалтера", );
		
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КорректировкаПоступленияТовары.Ссылка,
	|	КорректировкаПоступленияТовары.НомерСтроки,
	|	КорректировкаПоступленияТовары.Номенклатура,
	|	ВЫРАЗИТЬ(КорректировкаПоступленияТовары.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК НаименованиеТовара,
	|	КорректировкаПоступленияТовары.Номенклатура.БазоваяЕдиницаИзмерения КАК НаименованиеЕдиницыИзмерения,
	|	КорректировкаПоступленияТовары.Номенклатура.БазоваяЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	КорректировкаПоступленияТовары.СтавкаНДС,
	|	КорректировкаПоступленияТовары.СуммаНДС КАК СуммаНДСПослеИзменения,
	|	КорректировкаПоступленияТовары.СуммаНДСДоИзменения,
	|	КорректировкаПоступленияТовары.Количество КАК КоличествоПослеИзменения,
	|	КорректировкаПоступленияТовары.КоличествоДоИзменения,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|					ТОГДА (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС) / КорректировкаПоступленияТовары.Количество
	|				ИНАЧЕ КорректировкаПоступленияТовары.Сумма / КорректировкаПоступленияТовары.Количество
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦенаПослеИзменения,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.КоличествоДоИзменения = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|					ТОГДА (КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.СуммаНДСДоИзменения) / КорректировкаПоступленияТовары.КоличествоДоИзменения
	|				ИНАЧЕ КорректировкаПоступленияТовары.СуммаДоИзменения / КорректировкаПоступленияТовары.КоличествоДоИзменения
	|			КОНЕЦ
	|	КОНЕЦ КАК ЦенаДоИзменения,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС
	|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма
	|	КОНЕЦ КАК СтоимостьБезНДСПослеИзменения,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.СуммаНДСДоИзменения
	|		ИНАЧЕ КорректировкаПоступленияТовары.СуммаДоИзменения
	|	КОНЕЦ КАК СтоимостьБезНДСДоИзменения,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияТовары.Сумма
	|		ИНАЧЕ КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС
	|	КОНЕЦ КАК СтоимостьСНДСПослеИзменения,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения
	|		ИНАЧЕ КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения
	|	КОНЕЦ КАК СтоимостьСНДСДоИзменения,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС > 0
	|			ТОГДА КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РазницаНДСУменьшение,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС < 0
	|			ТОГДА (КорректировкаПоступленияТовары.СуммаНДСДоИзменения - КорректировкаПоступленияТовары.СуммаНДС) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РазницаНДСУвеличение,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС) > 0
	|						ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС)
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма > 0
	|					ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК РазницаБезНДСУменьшение,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС) < 0
	|						ТОГДА (КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС)) * -1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма < 0
	|					ТОГДА (КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма) * -1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК РазницаБезНДСУвеличение,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма > 0
	|						ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС) > 0
	|					ТОГДА КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма + КорректировкаПоступленияТовары.СуммаНДС)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК РазницаСНДСУменьшение,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма < 0
	|						ТОГДА (КорректировкаПоступленияТовары.СуммаДоИзменения - КорректировкаПоступленияТовары.Сумма) * -1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС) < 0
	|					ТОГДА (КорректировкаПоступленияТовары.СуммаДоИзменения + КорректировкаПоступленияТовары.СуммаНДСДоИзменения - (КорректировкаПоступленияТовары.Сумма - КорректировкаПоступленияТовары.СуммаНДС)) * -1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ КАК РазницаСНДСУвеличение
	|ИЗ
	|	Документ.КорректировкаПоступления.Товары КАК КорректировкаПоступленияТовары,
	|	ВТИсходныйДокумент КАК ИсходныйДокумент
	|ГДЕ
	|	КорректировкаПоступленияТовары.Ссылка = &ДокументОснование
	|	И (КорректировкаПоступленияТовары.Количество <> КорректировкаПоступленияТовары.КоличествоДоИзменения
	|			ИЛИ КорректировкаПоступленияТовары.Сумма <> КорректировкаПоступленияТовары.СуммаДоИзменения
	|			ИЛИ КорректировкаПоступленияТовары.СуммаНДС <> КорректировкаПоступленияТовары.СуммаНДСДоИзменения
	|			ИЛИ КорректировкаПоступленияТовары.Цена <> КорректировкаПоступленияТовары.ЦенаДоИзменения)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КорректировкаПоступленияУслуги.Ссылка,
	|	КорректировкаПоступленияУслуги.НомерСтроки,
	|	КорректировкаПоступленияУслуги.Номенклатура,
	|	ВЫРАЗИТЬ(КорректировкаПоступленияУслуги.Содержание КАК СТРОКА(1000)),
	|	КорректировкаПоступленияУслуги.Номенклатура.БазоваяЕдиницаИзмерения,
	|	КорректировкаПоступленияУслуги.Номенклатура.БазоваяЕдиницаИзмерения.Код,
	|	КорректировкаПоступленияУслуги.СтавкаНДС,
	|	КорректировкаПоступленияУслуги.СуммаНДС,
	|	КорректировкаПоступленияУслуги.СуммаНДСДоИзменения,
	|	КорректировкаПоступленияУслуги.Количество,
	|	КорректировкаПоступленияУслуги.КоличествоДоИзменения,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.Количество = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|					ТОГДА (КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаНДС) / КорректировкаПоступленияУслуги.Количество
	|				ИНАЧЕ КорректировкаПоступленияУслуги.Сумма / КорректировкаПоступленияУслуги.Количество
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.КоличествоДоИзменения = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫБОР
	|				КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|					ТОГДА (КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения) / КорректировкаПоступленияУслуги.КоличествоДоИзменения
	|				ИНАЧЕ КорректировкаПоступленияУслуги.СуммаДоИзменения / КорректировкаПоступленияУслуги.КоличествоДоИзменения
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаНДС
	|		ИНАЧЕ КорректировкаПоступленияУслуги.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения
	|		ИНАЧЕ КорректировкаПоступленияУслуги.СуммаДоИзменения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияУслуги.Сумма
	|		ИНАЧЕ КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения
	|		ИНАЧЕ КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.СуммаНДС > 0
	|			ТОГДА КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.СуммаНДС
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.СуммаНДС < 0
	|			ТОГДА (КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.СуммаНДС) * -1
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаНДС > 0
	|						ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаНДС
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма > 0
	|					ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаНДС < 0
	|						ТОГДА (КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - КорректировкаПоступленияУслуги.Сумма - КорректировкаПоступленияУслуги.СуммаНДС) * -1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма < 0
	|					ТОГДА (КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма) * -1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма > 0
	|						ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС) > 0
	|					ТОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС)
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ИсходныйДокумент.СуммаВключаетНДС
	|			ТОГДА ВЫБОР
	|					КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма < 0
	|						ТОГДА (КорректировкаПоступленияУслуги.СуммаДоИзменения - КорректировкаПоступленияУслуги.Сумма) * -1
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС) < 0
	|					ТОГДА (КорректировкаПоступленияУслуги.СуммаДоИзменения + КорректировкаПоступленияУслуги.СуммаНДСДоИзменения - (КорректировкаПоступленияУслуги.Сумма + КорректировкаПоступленияУслуги.СуммаНДС)) * -1
	|				ИНАЧЕ 0
	|			КОНЕЦ
	|	КОНЕЦ
	|ИЗ
	|	Документ.КорректировкаПоступления.Услуги КАК КорректировкаПоступленияУслуги,
	|	ВТИсходныйДокумент КАК ИсходныйДокумент
	|ГДЕ
	|	КорректировкаПоступленияУслуги.Ссылка = &ДокументОснование
	|	И (КорректировкаПоступленияУслуги.Количество <> КорректировкаПоступленияУслуги.КоличествоДоИзменения
	|			ИЛИ КорректировкаПоступленияУслуги.Сумма <> КорректировкаПоступленияУслуги.СуммаДоИзменения
	|			ИЛИ КорректировкаПоступленияУслуги.СуммаНДС <> КорректировкаПоступленияУслуги.СуммаНДСДоИзменения
	|			ИЛИ КорректировкаПоступленияУслуги.Цена <> КорректировкаПоступленияУслуги.ЦенаДоИзменения)";
		
	Если РеквизитыСФ.Исправление Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ДоИзменения", "ДоКорректировки");
	КонецЕсли;
	
	ТаблицаРезультата = Запрос.Выполнить().Выгрузить();
	Для Каждого Колонка Из ТаблицаРезультата.Колонки Цикл
		Колонка.Имя = СтрЗаменить(Колонка.Имя, "ДоКорректировки", "ДоИзменения");
	КонецЦикла;

	ДанныеДляПечати.Вставить("ТабличнаяЧасть", ТаблицаРезультата); 
	
	Возврат ДанныеДляПечати;

КонецФункции	

// Проверяет правильность заполнения шапки документа.
// проставляет прочерки в незаполненных полях печатной формы счета-фактуры
//
Процедура ПроставитьПрочеркиВПустыеПоля(ОбластьМакета)

	Для т = 0 По ОбластьМакета.Параметры.Количество() - 1 Цикл
		
		ТекПараметр = ОбластьМакета.Параметры.Получить(т);
		
		Если (Найти(ТекПараметр, "Продавец:") <> 0)
		   и (СокрЛП(ТекПараметр) = "Продавец:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Продавец: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Адрес:") <> 0)
			    и (СокрЛП(ТекПараметр) = "Адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер продавца (ИНН):") <> 0)
			    и (СокрЛП(ТекПараметр) = "Идентификационный номер продавца (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер продавца (ИНН): ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузоотправитель и его адрес:") <> 0)
			    и (СокрЛП(ТекПараметр) = "Грузоотправитель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузоотправитель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Грузополучатель и его адрес:") <> 0)
		   		и (СокрЛП(ТекПараметр) = "Грузополучатель и его адрес:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Грузополучатель и его адрес: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "К платежно-расчетному документу №") <> 0)
		   		и (СокрЛП(ТекПараметр) = "К платежно-расчетному документу №  от") Тогда
			ОбластьМакета.Параметры.Установить(т, "К платежно-расчетному документу № -- от --");
			
		ИначеЕсли (Найти(ТекПараметр, "Покупатель:") <> 0)
		   		и (СокрЛП(ТекПараметр) = "Покупатель:") Тогда
			ОбластьМакета.Параметры.Установить(т, "Покупатель: ----");
			
		ИначеЕсли (Найти(ТекПараметр, "Идентификационный номер покупателя (ИНН):") <> 0)
			    и (СокрЛП(ТекПараметр) = "Идентификационный номер покупателя (ИНН):") Тогда
			ОбластьМакета.Параметры.Установить(т, "Идентификационный номер покупателя (ИНН): ----");
			
		ИначеЕсли НЕ ЗначениеЗаполнено(ТекПараметр) Тогда
			ОбластьМакета.Параметры.Установить(т, "--");
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры // ПроставитьПрочеркиВПустыеПоля()

// Финкция возвращает пустую таблицу значений под
// табличную часть документа основания.
// 
Функция ИнициализацияТаблицыСтрок()

	Товары = Новый ТаблицаЗначений();

	Товары.Колонки.Добавить("Товар");
	Товары.Колонки.Добавить("ТоварНаименование");
	Товары.Колонки.Добавить("СтранаПроисхождения");
	Товары.Колонки.Добавить("ПредставлениеСтраны");
	Товары.Колонки.Добавить("НомерГТД");
	Товары.Колонки.Добавить("ПредставлениеГТД");
	Товары.Колонки.Добавить("Количество");
	Товары.Колонки.Добавить("ЕдиницаИзмерения");
	Товары.Колонки.Добавить("СуммаВключаетНДС");
	Товары.Колонки.Добавить("Цена");
	Товары.Колонки.Добавить("СтавкаНДС");
	Товары.Колонки.Добавить("СуммаНДС");
	Товары.Колонки.Добавить("СтавкаНП");
	Товары.Колонки.Добавить("Сумма");

	Возврат Товары;

КонецФункции

Процедура ПечатьКорректировочногоСчетаФактуры1137(Ссылка, ТабДокумент)

	//АБС ИЗМЕНЕНИЕ 36164  11.12.2013 11:07:18  Стрельцов
	//Макет = ПолучитьОбщийМакет("КорректировочныйСчетФактура1137"); 																 
	//ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураПолученный_КорректировочныйСчетФактура1137";
	//\\АБС ИЗМЕНЕНИЕ 36164 КОНЕЦ 
	
	ДанныеДляПечати = Неопределено;
	
	СобратьДанныеДляПечати(Ссылка, ДанныеДляПечати);
	
	Если ТипЗнч(ДанныеДляПечати) = Тип("Соответствие") Тогда
		Возврат;
	ИначеЕсли ДанныеДляПечати = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РеквизитыСФ = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Ссылка, 
		"Дата,НомерВходящегоДокумента,ДатаВходящегоДокумента,
		|Исправление,НомерИсправления,ДатаИсправления,
		|НомерИсходногоДокумента,ДатаИсходногоДокумента,
		|УчитыватьИсправлениеИсходногоДокумента,НомерИсправленияИсходногоДокумента,ДатаИсправленияИсходногоДокумента,
		|СчетФактураБезНДС");
	
	СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
		ДанныеДляПечати.Покупатель, РеквизитыСФ.Дата);
	СведенияОПоставщике  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
		ДанныеДляПечати.Поставщик, РеквизитыСФ.Дата);
		
	//АБС ВСТАВКА 36164  11.12.2013 11:20:18  Стрельцов
	Если РеквизитыСФ.Дата >= '20131106' Тогда
		Макет = ПолучитьОбщийМакет("КорректировочныйСчетФактура952");
	Иначе
		Макет = ПолучитьОбщийМакет("КорректировочныйСчетФактура1137");
	КонецЕсли;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СчетФактураВыданный_КорректировочныйСчетФактура1137";
	//\\АБС ВСТАВКА 36164 КОНЕЦ 
	
	// Выводим шапку
	
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьМакета.Параметры.Заполнить(ДанныеДляПечати);
	
	ОбластьМакета.Параметры.Номер = РеквизитыСФ.НомерВходящегоДокумента;
	ОбластьМакета.Параметры.Дата  = Формат(РеквизитыСФ.ДатаВходящегоДокумента, "ДФ='дд ММММ гггг'") + " г.";
	
	Если РеквизитыСФ.Исправление Тогда
		ОбластьМакета.Параметры.НомерИсправленияКорректировочного = РеквизитыСФ.НомерИсправления;
		ОбластьМакета.Параметры.ДатаИсправленияКорректировочного  = Формат(РеквизитыСФ.Дата, "ДФ='дд ММММ гггг'") + " г.";
	Иначе
		ОбластьМакета.Параметры.НомерИсправленияКорректировочного = "--";
		ОбластьМакета.Параметры.ДатаИсправленияКорректировочного  = "--";
	КонецЕсли;
	
	//АБС ВСТАВКА 36164  11.12.2013 11:22:41  Стрельцов
	РеквизитыОснований = "";
	КорректируемыеСчетаФактуры = ДанныеДляПечати.КорректируемыеСчетаФактуры;
	Если РеквизитыСФ.Дата >= '20131106' Тогда
		
		Для каждого Основание Из КорректируемыеСчетаФактуры Цикл 
			Если КорректируемыеСчетаФактуры.Индекс(Основание) = 0 Тогда
				РеквизитыОснований = ?(РеквизитыОснований = "", РеквизитыОснований, РеквизитыОснований + ", ") 
				+ "№ "+ ?(ПустаяСтрока(Строка(Основание.НомерСчетаФактуры)), РеквизитыСФ.НомерИсходногоДокумента, Основание.НомерСчетаФактуры) 
				+ " от " + ?(ЗначениеЗаполнено(Основание.ДатаСчетаФактуры), Основание.ДатаСчетаФактуры, Формат(РеквизитыСФ.ДатаИсходногоДокумента, "ДЛФ=ДД; ДП=--")) 
				+ ", с учетом исправления № " + ?(ПустаяСтрока(Строка(Основание.НомерИсправления)), ?(РеквизитыСФ.УчитыватьИсправлениеИсходногоДокумента, РеквизитыСФ.НомерИсправленияИсходногоДокумента, "--"), Основание.НомерИсправления) 
				+ " от " + ?(ЗначениеЗаполнено(Основание.ДатаИсправления), Основание.ДатаИсправления, ?(РеквизитыСФ.УчитыватьИсправлениеИсходногоДокумента, Формат(РеквизитыСФ.ДатаИсправленияИсходногоДокумента, "ДЛФ=ДД; ДП=--"), "--"));
			Иначе
				РеквизитыОснований = ?(РеквизитыОснований = "", РеквизитыОснований, РеквизитыОснований + ", ") 
				+ "№ "+ Основание.НомерСчетаФактуры + " от " + Основание.ДатаСчетаФактуры 
				+ ", с учетом исправления № " + Основание.НомерИсправления + " от " + Основание.ДатаИсправления;
			КонецЕсли;
		КонецЦикла;
		
	Иначе
		
		Если КорректируемыеСчетаФактуры.Количество() = 0 Тогда
			РеквизитыОснований =  "№ "+ РеквизитыСФ.НомерИсходногоДокумента + " от " + Формат(РеквизитыСФ.ДатаИсходногоДокумента, "ДЛФ=ДД; ДП=--") 
				+ ", с учетом исправления № " + ?(РеквизитыСФ.УчитыватьИсправлениеИсходногоДокумента, РеквизитыСФ.НомерИсправленияИсходногоДокумента, "--") 
				+ " от " + ?(РеквизитыСФ.УчитыватьИсправлениеИсходногоДокумента, Формат(РеквизитыСФ.ДатаИсправленияИсходногоДокумента, "ДЛФ=ДД; ДП=--"), "--");
		Иначе
			
			сОснование = КорректируемыеСчетаФактуры[0];
			РеквизитыОснований = "№ "+ ?(ПустаяСтрока(Строка(сОснование.НомерСчетаФактуры)), РеквизитыСФ.НомерИсходногоДокумента, сОснование.НомерСчетаФактуры) 
				+ " от " + ?(ЗначениеЗаполнено(сОснование.ДатаСчетаФактуры), сОснование.ДатаСчетаФактуры, Формат(РеквизитыСФ.ДатаИсходногоДокумента, "ДЛФ=ДД; ДП=--")) 
				+ ", с учетом исправления № " + ?(ПустаяСтрока(Строка(сОснование.НомерИсправления)), ?(РеквизитыСФ.УчитыватьИсправлениеИсходногоДокумента, РеквизитыСФ.НомерИсправленияИсходногоДокумента, "--"), сОснование.НомерИсправления) 
				+ " от " + ?(ЗначениеЗаполнено(сОснование.ДатаИсправления), сОснование.ДатаИсправления, ?(РеквизитыСФ.УчитыватьИсправлениеИсходногоДокумента, Формат(РеквизитыСФ.ДатаИсправленияИсходногоДокумента, "ДЛФ=ДД; ДП=--"), "--"));			
		КонецЕсли;
		
	КонецЕсли;
	ОбластьМакета.Параметры.РеквизитыОснований = РеквизитыОснований;
	//\\АБС ВСТАВКА 36164 КОНЕЦ 
	
	//АБС ИЗМЕНЕНИЕ 36164  11.12.2013 12:22:00  Стрельцов 
	//ОбластьМакета.Параметры.НомерСчетаФактуры = РеквизитыСФ.НомерИсходногоДокумента;
	//ОбластьМакета.Параметры.ДатаСчетаФактуры  = Формат(РеквизитыСФ.ДатаИсходногоДокумента, "ДФ='дд ММММ гггг'") + " г.";
	//
	//Если РеквизитыСФ.УчитыватьИсправлениеИсходногоДокумента Тогда
	//	ОбластьМакета.Параметры.НомерИсправления = РеквизитыСФ.НомерИсправленияИсходногоДокумента;
	//	ОбластьМакета.Параметры.ДатаИсправления  = Формат(РеквизитыСФ.ДатаИсправленияИсходногоДокумента, "ДФ='дд ММММ гггг'") + " г.";
	//Иначе
	//	ОбластьМакета.Параметры.НомерИсправления = "--";
	//	ОбластьМакета.Параметры.ДатаИсправления  = "--";
	//КонецЕсли;
	//\\АБС ИЗМЕНЕНИЕ 36164 КОНЕЦ

	ОбластьМакета.Параметры.НаименованиеПродавца = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
		СведенияОПоставщике,  "ПолноеНаименование,");
	ОбластьМакета.Параметры.АдресПродавца = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
		СведенияОПоставщике,  "ЮридическийАдрес,");

	ОбластьМакета.Параметры.НаименованиеПокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
		СведенияОПокупателе, "ПолноеНаименование,");
	ОбластьМакета.Параметры.АдресПокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
		СведенияОПокупателе, "ЮридическийАдрес,");
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "КПП,", Ложь);
	Если ЗначениеЗаполнено(КПП) Тогда
		КПП = "/" + КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ИННКПППродавца = ""
		+ ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПоставщике, "ИНН,", Ложь) + КПП;
	
	КПП = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе, "КПП,", Ложь);
	Если ЗначениеЗаполнено(КПП) Тогда
		КПП = "/" + КПП;
	КонецЕсли;
	ОбластьМакета.Параметры.ИННКПППокупателя = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(
		СведенияОПокупателе, "ИНН,", Ложь) + КПП;
	
	ОбластьМакета.Параметры.Валюта = ?(ЗначениеЗаполнено(ДанныеДляПечати.Валюта), 
		"Валюта: наименование, код " + ДанныеДляПечати.Валюта.НаименованиеПолное + ", " + ДанныеДляПечати.Валюта.Код, 
		"Валюта: наименование, код");		
		
	ТабДокумент.Вывести(ОбластьМакета);
	
	ОбластьМакетаЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);

	ОбластьМакета = Макет.ПолучитьОбласть("Строка");
	
	ОбластьМакетаИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьМакетаПодвал = Макет.ПолучитьОбласть("Подвал");
	
	КоличествоСтрок = ДанныеДляПечати.ТабличнаяЧасть.Количество();
	НомерСтроки = 0;
	
	Для Каждого СтрокаТабличнойЧасти Из ДанныеДляПечати.ТабличнаяЧасть Цикл 
		
		НомерСтроки = НомерСтроки + 1;
		
		ОбластьМакета.Параметры.Заполнить(СтрокаТабличнойЧасти);
		Если ЗначениеЗаполнено(СтрокаТабличнойЧасти.НаименованиеТовара) Тогда
			ОбластьМакета.Параметры.НаименованиеНоменклатуры = СтрокаТабличнойЧасти.НаименованиеТовара;               
		Иначе
			ОбластьМакета.Параметры.НаименованиеНоменклатуры = СтрокаТабличнойЧасти.Номенклатура;               
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЕдиницаИзмеренияКод) Тогда
			ОбластьМакета.Параметры.ЕдиницаИзмеренияКод = "--";
			ОбластьМакета.Параметры.НаименованиеЕдиницыИзмерения = "--";
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КоличествоДоИзменения) Тогда
			ОбластьМакета.Параметры.КоличествоДоИзменения = "--";
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.КоличествоПослеИзменения) Тогда
			ОбластьМакета.Параметры.КоличествоПослеИзменения = "--";
		КонецЕсли;	
		       		
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЦенаДоИзменения) Тогда
			ОбластьМакета.Параметры.ЦенаДоИзменения = "--";
		КонецЕсли;	
		
		Если НЕ ЗначениеЗаполнено(ОбластьМакета.Параметры.ЦенаПослеИзменения) Тогда
			ОбластьМакета.Параметры.ЦенаПослеИзменения = "--";
		КонецЕсли;	
		          		
		Если СтрокаТабличнойЧасти.СтавкаНДС = Перечисления.СтавкиНДС.БезНДС Тогда
			ОбластьМакета.Параметры.СтавкаНДС = "без НДС";
			ОбластьМакета.Параметры.СуммаНДСДоИзменения = "без НДС";
			ОбластьМакета.Параметры.СуммаНДСПослеИзменения = "без НДС";
			ОбластьМакета.Параметры.РазницаНДСУвеличение = "--";
			ОбластьМакета.Параметры.РазницаНДСУменьшение = "--";
		КонецЕсли;
		
		// Проверим возможность вывода табличного документа
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(ОбластьМакета);
		
		Если НомерСтроки = КоличествоСтрок Тогда
			// Если последняя строка, то должен поместится итог и подвал
			СтрокаСПодвалом.Добавить(ОбластьМакетаИтого);
			СтрокаСПодвалом.Добавить(ОбластьМакетаПодвал);
		КонецЕсли;
						
		Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, СтрокаСПодвалом) Тогда
			
			Если КоличествоСтрок > 0 Тогда
				// Вывод разделителя и заголовка таблицы на новой странице
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ТабДокумент.Вывести(ОбластьМакетаЗаголовокТаблицы);
			КонецЕсли;
			
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьМакета);
		
	КонецЦикла;	
		
	ОбластьМакетаИтого.Параметры.РазницаБезНДСУменьшение = ДанныеДляПечати.ТабличнаяЧасть.Итог("РазницаБезНДСУменьшение");
	ОбластьМакетаИтого.Параметры.РазницаБезНДСУвеличение = ДанныеДляПечати.ТабличнаяЧасть.Итог("РазницаБезНДСУвеличение");
	ОбластьМакетаИтого.Параметры.РазницаСНДСУменьшение   = ДанныеДляПечати.ТабличнаяЧасть.Итог("РазницаСНДСУменьшение");
	ОбластьМакетаИтого.Параметры.РазницаСНДСУвеличение   = ДанныеДляПечати.ТабличнаяЧасть.Итог("РазницаСНДСУвеличение");
	
	Если РеквизитыСФ.СчетФактураБезНДС Тогда
		ОбластьМакетаИтого.Параметры.РазницаНДСУменьшение = "без НДС";
		ОбластьМакетаИтого.Параметры.РазницаНДСУвеличение = "без НДС";
	Иначе
		ОбластьМакетаИтого.Параметры.РазницаНДСУменьшение = ДанныеДляПечати.ТабличнаяЧасть.Итог("РазницаНДСУменьшение");
		ОбластьМакетаИтого.Параметры.РазницаНДСУвеличение = ДанныеДляПечати.ТабличнаяЧасть.Итог("РазницаНДСУвеличение");
	КонецЕсли;
    	
	ТабДокумент.Вывести(ОбластьМакетаИтого);
	
	ОбластьМакетаПодвал.Параметры.Заполнить(ДанныеДляПечати);
	ТабДокумент.Вывести(ОбластьМакетаПодвал);

КонецПроцедуры

// Обработчик обновления
//
// Устанавливает новый код вида операции для сводных счетов-фактур по комиссии
Процедура УстановитьКодВидаОперацииСводныйКомиссионный() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК Ссылка,
	|	""27"" КАК КодВидаОперации,
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.КодВидаОперации = ""27""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КодУстановлен
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	(СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаПоступление)
	|			ИЛИ СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный))
	|	И СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.СводныйКомиссионный = ИСТИНА
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка,
	|	""28"",
	|	ВЫБОР
	|		КОГДА СчетФактураПолученный.КодВидаОперации = ""28""
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.НаАванс)
	|	И СчетФактураПолученный.ПометкаУдаления = ЛОЖЬ
	|	И СчетФактураПолученный.СводныйКомиссионный = ИСТИНА
	|ИТОГИ
	|	СУММА(КодУстановлен)
	|ПО
	|	ОБЩИЕ";
	
	ВыборкаИтоги = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаИтоги.Следующий()
		И ВыборкаИтоги.КодУстановлен = 0 Тогда
		ВыборкаДокументы = ВыборкаИтоги.Выбрать();
		Пока ВыборкаДокументы.Следующий() Цикл
			СчетФактураДокумент = ВыборкаДокументы.Ссылка.ПолучитьОбъект();
			СчетФактураДокумент.КодВидаОПерации = ВыборкаДокументы.КодВидаОперации;
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СчетФактураДокумент);
		КонецЦикла;
	Иначе
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

// {{ТТК Сладков А. Заявка №7735159  13.09.2016 начало
// Обработчик обновления. Заполняет новый реквизит "КодВидаОперацииНаУменьшение" 
// для корректировочных счетов-фактур дата которых больше или равна 1 января 2015 года
Процедура УстановитьКодВидаОперацииНаУменьшение() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|ГДЕ
	|	НЕ СчетФактураПолученный.ПометкаУдаления
	|	И СчетФактураПолученный.ВидСчетаФактуры = ЗНАЧЕНИЕ(Перечисление.ВидСчетаФактурыПолученного.Корректировочный)
	|	И СчетФактураПолученный.Дата >= ДАТАВРЕМЯ(2015, 1, 1)
	|	И СчетФактураПолученный.КодВидаОперацииНаУменьшение = """"";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			ОбрабатываемыйСчетФактура = Выборка.Ссылка;
			СчетФактураДокумент = ОбрабатываемыйСчетФактура.ПолучитьОбъект();
			
			СчетФактураДокумент.КодВидаОперацииНаУменьшение = "18";
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СчетФактураДокумент);
			
		КонецЦикла;
		
	КонецЕсли;
		
КонецПроцедуры
// {{ТТК Сладков А. Заявка №7735159  13.09.2016 окончание
