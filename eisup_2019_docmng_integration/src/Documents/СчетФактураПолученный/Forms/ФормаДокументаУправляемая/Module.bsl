////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	//Проверим вид договора
	Для Каждого СтрДокОснования Из Объект.ДокументыОснования Цикл
		Если ЗначениеЗаполнено(СтрДокОснования.ДокументОснование) И
			СтрДокОснования.ДокументОснование.Метаданные().Имя = "ПоступлениеТоваровУслуг" И
			СтрДокОснования.ДокументОснование.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.ВПереработку Тогда
				ТекстСообщения = НСтр("ru = 'Нельзя вводить счет-фактуру полученную на основании поступления материалов в переработку'");
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Объект,,, Отказ);
				Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		// Это существующий документ. 
		// Проверим, что его можно менять.
		НастройкаПравДоступа.ОпределитьДоступностьВозможностьИзмененияДокументаПоДатеЗапрета(РеквизитФормыВЗначение("Объект"), ЭтаФорма);

	КонецЕсли;
	ВалютаРегламентированногоУчета = глЗначениеПеременной("ВалютаРегламентированногоУчета");

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Если Объект.ДокументыОснования.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	СтрокаСообщения = ТекущийОбъект.ПроверитьВозможностьЗаписиСФ(Отказ);
	Если СтрокаСообщения <> "" Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрокаСообщения, ТекущийОбъект,,, Отказ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УстановитьДоступность();
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПОВТОРЯЮЩИЕСЯ ДЕЙСТВИЯ ПРИ ИЗМЕНЕНИИ РАЗНЫХ РЕКВИЗИТОВ

// Процедура устанавливает доступность элементов формы
//
&НаКлиенте
Процедура УстановитьДоступность()
	УказанДокументОснование = Объект.ДокументыОснования.Количество() > 0 И ЗначениеЗаполнено(Объект.ДокументыОснования[0].ДокументОснование);
	Элементы.Организация.ТолькоПросмотр		= УказанДокументОснование;
	Элементы.Контрагент.ТолькоПросмотр			= УказанДокументОснование;
	Элементы.ДоговорКонтрагента.ТолькоПросмотр	= УказанДокументОснование;
	Элементы.СуммаДокумента.Заголовок = "Всего" + ?(ЗначениеЗаполнено(Объект.ВалютаДокумента), ", " + Объект.ВалютаДокумента, "");
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ОБРАБОТКИ ДАННЫХ В ШАПКЕ

&НаСервереБезКонтекста
Функция ИзменениеКонтрагентаСервер(ДанныеДляЗаполнения)
	СтруктураПараметровДляПолученияДоговора = ЗаполнениеДокументов.ПолучитьСтруктуруПараметровДляПолученияДоговораПродажи();
	
	ЗначенияДляЗаполнения = РаботаСДиалогамиСервер.ПриИзмененииЗначенияКонтрагента(ДанныеДляЗаполнения, СтруктураПараметровДляПолученияДоговора);
	Возврат ЗначенияДляЗаполнения;
КонецФункции

&НаСервереБезКонтекста
Функция ИзменениеДоговораСервер(ДанныеДляЗаполнения)
	ЗначенияДляЗаполнения = РаботаСДиалогамиСервер.ПриИзмененииЗначенияДоговора(ДанныеДляЗаполнения);
	Возврат ЗначенияДляЗаполнения;
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ РЕКВИЗИТОВ ШАПКИ

&НаКлиенте
Процедура КонтрагентПриИзменении(Элемент)
	ДанныеОбменаССервером = Новый Структура("Организация, Контрагент, ДоговорКонтрагента, Дата");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, Объект);
	// Получим данные с сервера
	ЗначенияДляЗаполнения = ИзменениеКонтрагентаСервер(ДанныеОбменаССервером);
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияДляЗаполнения);
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	ДанныеОбменаССервером = Новый Структура("ДоговорКонтрагента, Дата");
	ЗаполнитьЗначенияСвойств(ДанныеОбменаССервером, Объект);
	// Получим данные с сервера
	ЗначенияДляЗаполнения = ИзменениеДоговораСервер(ДанныеОбменаССервером);
	ЗаполнитьЗначенияСвойств(Объект, ЗначенияДляЗаполнения);
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если НЕ ПустаяСтрока(Объект.Номер) Тогда
		ПрефиксацияОбъектовСобытия.ОчиститьНомерОбъекта(Объект.Номер, Объект.Организация);
	КонецЕсли; 
	
КонецПроцедуры
