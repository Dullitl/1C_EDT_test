Перем СчетНазначения;
Перем глТаблицаЗабаланс Экспорт;

////ПЕЧАТЬ

//АБС Коломиец+
#Если Клиент Тогда
Функция ПечатьМ15()
	
	мВалютаРегламентированногоУчета = Константы.ВалютаРегламентированногоУчета.Получить();
	СсылкаНаОбъект = Ссылка; 
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	//КоличествоИтог=0;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	АБС_ВыбытиеМатериаловСклад.Номер КАК Номер,
	|	АБС_ВыбытиеМатериаловСклад.Дата КАК ДатаСоставления,
	|	АБС_ВыбытиеМатериаловСклад.Дата КАК ДатаДокумента,
	|	АБС_ВыбытиеМатериаловСклад.Организация,
	|	АБС_ВыбытиеМатериаловСклад.Организация КАК ЮрФизЛицо,
	|	АБС_ВыбытиеМатериаловСклад.Организация КАК Руководители,
	|	АБС_ВыбытиеМатериаловСклад.Склад КАК Склад,
	|	АБС_ВыбытиеМатериаловСклад.Склад.Наименование КАК СкладНаименование,
	|	АБС_ВыбытиеМатериаловСклад.Контрагент.Код КАК КонтрагентКод,
	|	АБС_ВыбытиеМатериаловСклад.Контрагент КАК Контрагент,
	|	1 КАК Курс,
	|	1 КАК Кратность,
	|	"""" КАК Основание
	|ИЗ
	|	Документ.АБС_ВыбытиеУниверсальныйСклад КАК АБС_ВыбытиеМатериаловСклад
	|ГДЕ
	|	АБС_ВыбытиеМатериаловСклад.Ссылка = &ТекущийДокумент
	|";

	Шапка = Запрос.Выполнить().Выбрать();
	Шапка.Следующий();

	ЗапросПоТоварам = Новый Запрос();
	ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", СсылкаНаОбъект);
	ЗапросПоТоварам.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                        |	АБС_ВыбытиеМатериаловСклад.Номенклатура КАК Номенклатура,
	                        |	АБС_ВыбытиеМатериаловСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                        |	СУММА(АБС_ВыбытиеМатериаловСклад.Количество) КАК КоличествоПринято,
	                        |	ВЫБОР
	                        |		КОГДА АБС_ВыбытиеМатериаловСклад.Ссылка.ЗабалансовыйУчет
	                        |			ТОГДА ЗНАЧЕНИЕ(Справочник.АБС_СчетНазначенияМатериалы.ЗабалансовыйУчет)
	                        |		ИНАЧЕ АБС_ВыбытиеМатериаловСклад.СчетНазначения
	                        |	КОНЕЦ КАК СчетНазначения
	                        |ПОМЕСТИТЬ ТЧ
	                        |ИЗ
	                        |	Документ.АБС_ВыбытиеУниверсальныйСклад.Материалы КАК АБС_ВыбытиеМатериаловСклад
	                        |ГДЕ
	                        |	АБС_ВыбытиеМатериаловСклад.Ссылка = &ТекущийДокумент
	                        |
	                        |СГРУППИРОВАТЬ ПО
	                        |	АБС_ВыбытиеМатериаловСклад.Номенклатура,
	                        |	АБС_ВыбытиеМатериаловСклад.ЕдиницаИзмерения,
	                        |	ВЫБОР
	                        |		КОГДА АБС_ВыбытиеМатериаловСклад.Ссылка.ЗабалансовыйУчет
	                        |			ТОГДА ЗНАЧЕНИЕ(Справочник.АБС_СчетНазначенияМатериалы.ЗабалансовыйУчет)
	                        |		ИНАЧЕ АБС_ВыбытиеМатериаловСклад.СчетНазначения
	                        |	КОНЕЦ
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                        |	ЗабалансовыйУчетОбороты.Субконто1 КАК Номенклатура,
	                        |	ЗабалансовыйУчетОбороты.Субконто2 КАК СчетНазначения,
	                        |	СУММА(ЗабалансовыйУчетОбороты.СуммаОборотКт) КАК Сумма,
	                        |	СУММА(ЗабалансовыйУчетОбороты.КоличествоОборотКт) КАК Количество
	                        |ПОМЕСТИТЬ Проводки
	                        |ИЗ
	                        |	РегистрБухгалтерии.ЗабалансовыйУчет.Обороты(, , Регистратор, , , , , ) КАК ЗабалансовыйУчетОбороты
	                        |ГДЕ
	                        |	ЗабалансовыйУчетОбороты.Регистратор = &ТекущийДокумент
	                        |
	                        |СГРУППИРОВАТЬ ПО
	                        |	ЗабалансовыйУчетОбороты.Субконто2,
	                        |	ЗабалансовыйУчетОбороты.Субконто1
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ТЧ.Номенклатура,
	                        |	ВЫРАЗИТЬ(ТЧ.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ТЧ.Номенклатура.Код КАК ТоварКод,
	                        |	ТЧ.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ТЧ.КоличествоПринято,
	                        |	ЕСТЬNULL(Проводки.Количество, 0) КАК Количество,
	                        |	ЕСТЬNULL(Проводки.Сумма, 0) КАК Сумма
	                        |ИЗ
	                        |	ТЧ КАК ТЧ
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ Проводки КАК Проводки
	                        |		ПО ТЧ.Номенклатура = Проводки.Номенклатура
	                        |			И ТЧ.СчетНазначения = Проводки.СчетНазначения";
							
	ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

	Макет = ПолучитьМакет("М15");

	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ВыбытиеУниверсальныйСклад_М15";

	// Выводим общие реквизиты шапки
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации);
	ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОбОрганизации.КодПоОКПО;
	ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект);
	
	ПредставлениеКонтрагента = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Контрагент, Шапка.ДатаСоставления), "ПолноеНаименование,");
	ОбластьМакета.Параметры.КонтрагентНаименование = ПредставлениеКонтрагента;
	
	Если ЗначениеЗаполнено(Затребовал) Тогда
		ДанныеФЛЗатребовал = ОбщегоНазначения.ДанныеФизЛица(Шапка.Организация, Затребовал.Физлицо, Шапка.ДатаДокумента);
		ОбластьМакета.Параметры.ФИОЗатребовал = ДанныеФЛЗатребовал.Представление;
	КонецЕсли;

	Если ЗначениеЗаполнено(ЧерезКого) Тогда
		ДанныеФЛ = ОбщегоНазначения.ДанныеФизЛица(Шапка.Организация, ЧерезКого.Физлицо, Шапка.ДатаДокумента);
		ОбластьМакета.Параметры.ЧерезКого = ДанныеФЛ.Представление;
	КонецЕсли;
	
	ТабДокумент.Вывести(ОбластьМакета);

	// Выводим заголовок таблицы
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ТабДокумент.Вывести(ЗаголовокТаблицы);

	НомерСтраницы   = 1;
	КоличествоСтрок = ВыборкаСтрокТовары.Количество();

	// Инициализация итогов в документе
	ИтогоКоличествоПринято = 0;
	ИтогоСуммаБезНДС = 0;
	ИтогоСуммаНДС    = 0;
	ИтогоВсегоСНДС   = 0;
	Ном              = 0;

	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	
	// Выводим многострочную часть докмента
	ОбластьМакета  = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
	
	Пока ВыборкаСтрокТовары.Следующий() Цикл

		Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
			ОбщегоНазначения.Сообщение("В одной из строк не заполнено значение номенклатуры - строка при печати пропущена.", СтатусСообщения.Важное);
			Продолжить;
		КонецЕсли;

		Ном = Ном + 1;
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;		
		
		Если НЕ ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда
			НомерСтраницы	= НомерСтраницы + 1;
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДокумент.Вывести(ЗаголовокТаблицы);
		КонецЕсли;

		ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
				
		ВсегоСНДС  = ?(ВыборкаСтрокТовары.Количество * ВыборкаСтрокТовары.КоличествоПринято <> 0, Окр(ВыборкаСтрокТовары.Сумма / ВыборкаСтрокТовары.Количество * ВыборкаСтрокТовары.КоличествоПринято, 2), 0);
		Количество = ВыборкаСтрокТовары.КоличествоПринято;		
		Цена       = ?(Количество <> 0, Окр(ВсегоСНДС / Количество, 3), 0);
		
		ОбластьМакета.Параметры.Количество 		  = Количество;
		ОбластьМакета.Параметры.СуммаСНДС         = ВсегоСНДС;
		ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС;
		ОбластьМакета.Параметры.СуммаНДС          = 0;
		ОбластьМакета.Параметры.Цена              = Цена;
		ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование);

		ТабДокумент.Вывести(ОбластьМакета);

		ИтогоКоличествоПринято = ИтогоКоличествоПринято + Количество;
		ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС;
		ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

	КонецЦикла;
				
	// Выводим итоги по документу
	ОбластьПодвала.Параметры.Заполнить(Шапка);
	ОбластьПодвала.Параметры.Заполнить(Шапка);
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Шапка.Руководители, Шапка.ДатаДокумента,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	Если Не ЗначениеЗаполнено(Разрешил) Тогда
		ОбластьПодвала.Параметры.ФИОРуководителя       = Руководитель;
		ОбластьПодвала.Параметры.ДолжностьРуководителя = Руководители.РуководительДолжность;
	Иначе
		ДанныеФЛ = ОбщегоНазначения.ДанныеФизЛица(Шапка.Руководители, Разрешил.Физлицо, Шапка.ДатаДокумента);
		ОбластьПодвала.Параметры.ДолжностьРуководителя = ДанныеФЛ.Должность;
		ОбластьПодвала.Параметры.ФИОРуководителя = ДанныеФЛ.Представление;
	КонецЕсли;
	
	//ОбластьПодвала.Параметры.ФИОКладовщика =АБС_СлужебныеФункции.НайтиМОЛ(Шапка.Склад,ОбластьПодвала.Параметры.ДолжностьКладовщика,Шапка.ДатаДокумента);
	
	ОбластьПодвала.Параметры.ФИОГлавБухгалтера = Бухгалтер;
	
	Если ЗначениеЗаполнено(Затребовал) Тогда
		ОбластьПодвала.Параметры.ФИОПолучил = ДанныеФЛЗатребовал.Представление;
		ОбластьПодвала.Параметры.ДолжностьПолучил = ДанныеФЛЗатребовал.Должность;
	КонецЕсли;

	ОбластьПодвала.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(КоличествоСтрок, ,",,,,,,,,0");
	ОбластьПодвала.Параметры.СуммаПрописью = ОбщегоНазначения.СформироватьСуммуПрописью(ИтогоВсегоСНДС, мВалютаРегламентированногоУчета);

	ТабДокумент.Вывести(ОбластьПодвала);

	// Зададим параметры макета
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;

	Возврат ТабДокумент;

КонецФункции // ПечатьМ15()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьМ(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли; 

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	// Получить экземпляр документа на печать
	Если ИмяМакета = "М15" Тогда
		
		// Унифицированная форма М-15 (накладная).
		ТабДокумент = ПечатьМ15();
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормМ() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М15",  "М-15 (Накладная)");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()
#КонецЕсли
//АБС Коломиец-

//////////////////////////////
////ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПодготовитьТаблицуМ(ТабличнаяЧасть)
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	АБС_ВыбытиеМатериаловСкладМатериалы.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА АБС_ВыбытиеМатериаловСкладМатериалы.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА &СчетНазначения
	              |		ИНАЧЕ АБС_ВыбытиеМатериаловСкладМатериалы.СчетНазначения
	              |	КОНЕЦ КАК СчетНазначения,
	              |	СУММА(АБС_ВыбытиеМатериаловСкладМатериалы.Количество) КАК Количество
	              |ПОМЕСТИТЬ ВТНоменклатура
	              |ИЗ
	              |	Документ.АБС_ВыбытиеУниверсальныйСклад.Материалы КАК АБС_ВыбытиеМатериаловСкладМатериалы
	              |ГДЕ
	              |	АБС_ВыбытиеМатериаловСкладМатериалы.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	АБС_ВыбытиеМатериаловСкладМатериалы.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА АБС_ВыбытиеМатериаловСкладМатериалы.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА &СчетНазначения
	              |		ИНАЧЕ АБС_ВыбытиеМатериаловСкладМатериалы.СчетНазначения
	              |	КОНЕЦ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество,
	              |	СУММА(ВложенныйЗапрос.СуммаОстВсего) КАК СуммаОстВсего,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстВсего) КАК КоличествоОстВсего,
	              |	СУММА(ВложенныйЗапрос.СуммаОстСклад) КАК СуммаОстСклад,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстСклад) КАК КоличествоОстСклад
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура КАК Номенклатура,
	              |		ВТНоменклатура.СчетНазначения КАК СчетНазначения,
	              |		ВТНоменклатура.Количество КАК Количество,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0)) КАК СуммаОстВсего,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)) КАК КоличествоОстВсего,
	              |		СУММА(0) КАК СуммаОстСклад,
	              |		СУММА(0) КАК КоличествоОстСклад
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.МатериалыНаСкладе), , Организация = &Организация) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество,
	              |		0,
	              |		0,
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0),
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(
	              |					&Дата,
	              |					Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.МатериалыНаСкладе),
	              |					,
	              |					Организация = &Организация
	              |						И Субконто3 = &Склад) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество";
		Запрос.УстановитьПараметр("Дата",МоментВремени());	
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СчетНазначения",СчетНазначения);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	 Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

Процедура ОбработкаПроведенияМ(Отказ, Режим)
	Если НЕ ЗначениеЗаполнено(Склад)Тогда
		Сообщить("Не выбран склад");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗабалансовыйУчет Тогда
		СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);	
		
		Если НЕ ЗначениеЗаполнено(СчетНазначения) Тогда
			Сообщить("Не найден счет назначения ""Забалансовый учет""");
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			Сообщить("Не выбран Контрагент");
			Отказ = Истина;

		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВидДвижения) Тогда
			
			Сообщить("Не выбран Вид движения");
			Отказ = Истина;
			
		КонецЕсли;
		КонецЕсли;

	Для каждого ТекСтрока Из Материалы Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указан материал.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество материала """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
			
			Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
			Отказ = Истина;
			
		КонецЕсли;		
		
	КонецЦикла; 

	ТаблицаМатериалы = ПодготовитьТаблицуМ(Материалы);
	Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
		КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
		КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
		СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
		Если КоличествоОстВсего >0 И ЗначениеЗаполнено(СуммаОстВсего) Тогда
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
		Иначе
			Сообщить("На складе "+Склад+" по счету "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+ "нет остатка номенклатуры "+СтрокаТаблицы.Номенклатура);
			Отказ = Истина;	
		КонецЕсли;
		
		Если КоличествоОстСклад<СтрокаТаблицы.Количество Тогда
			ТекстСообщения = "На складе "+Склад+" "+КоличествоОстСклад+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+
			" из необходимых "+СтрокаТаблицы.Количество+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+" "+
			СтрокаТаблицы.Номенклатура + " ("+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+") по складу "+Склад+" счету назначения "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
			Сообщить(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;


	Если Не Отказ Тогда
		Движения.ЗабалансовыйУчет.Очистить();
		Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
			КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
			КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
			СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
			
			
		// регистр ЗабалансовыйУчет 
		Движение = Движения.ЗабалансовыйУчет.Добавить();
		Движение.СчетКт = ПланыСчетов.ЗабалансовыйУчет.МатериалыНаСкладе;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.КоличествоКт = СтрокаТаблицы.Количество;
		Движение.Содержание =  "Выбытие материалов";
			
		
		Движение.Сумма = СтрокаТаблицы.Количество*СредняяЦена;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияМатериалы] =  ?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;

		КонецЦикла;
		Движения.ЗабалансовыйУчет.Записать();
	КонецЕсли;

КонецПроцедуры

///////////////////////////////

#Если Клиент Тогда
	
// Функция формирует табличный документ с печатной формой ОС-15,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьОС15()

	ТабДокумент = Новый ТабличныйДокумент();
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ВыбытиеУниверсальныйСклад_ОС15";
	Макет       = ПолучитьМакет("ОС15");

	Шапка         = Макет.ПолучитьОбласть("Шапка");
	ШапкаТаблицы  = Макет.ПолучитьОбласть("ШапкаТаблицы");
	СтрокаТаблицы = Макет.ПолучитьОбласть("СтрокаТаблицы");
	Оборот        = Макет.ПолучитьОбласть("ОборотнаяСторона");

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	Запрос.Текст = "ВЫБРАТЬ
	               |	АБС_ВыбытиеОборудованияСклад.Дата КАК ДатаДокумента,
	               |	АБС_ВыбытиеОборудованияСклад.Номер КАК НомерДокумента,
	               |	АБС_ВыбытиеОборудованияСклад.Склад,
	               |	АБС_ВыбытиеОборудованияСклад.Склад.Представление КАК СкладПредставление,
	               |	АБС_ВыбытиеОборудованияСклад.Дата КАК ДатаСдачиВМонтаж,
	               |	АБС_ВыбытиеОборудованияСклад.Организация
	               |ИЗ
	               |	Документ.АБС_ВыбытиеУниверсальныйСклад КАК АБС_ВыбытиеОборудованияСклад
	               |ГДЕ
	               |	АБС_ВыбытиеОборудованияСклад.Ссылка = &Ссылка";
	ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
	ВыборкаПоШапке.Следующий();

	Шапка.Параметры.Заполнить(ВыборкаПоШапке);
	
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(ВыборкаПоШапке.Организация, ВыборкаПоШапке.ДатаДокумента);
	
	Шапка.Параметры.ОрганизацияЗаказчикНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОбОрганизации, "ПолноеНаименование");
	Шапка.Параметры.ОрганизацияЗаказчикКодПоОКПО    = СведенияОбОрганизации.КодПоОКПО;
	Шапка.Параметры.НомерДокумента                  = ОбщегоНазначения.ПолучитьНомерНаПечать(ЭтотОбъект);
	
	ШапкаТаблицы.Параметры.Валюта = глЗначениеПеременной("ВалютаРегламентированногоУчета").Наименование;
	
	ТабДокумент.Вывести(Шапка);
	ТабДокумент.Вывести(ШапкаТаблицы);

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТекущийДокумент", ЭтотОбъект.Ссылка);
	
	ТекстЗапроса	= 	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	АБС_ВыбытиеОборудованияСклад.Номенклатура КАК Номенклатура,
	|	АБС_ВыбытиеОборудованияСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	СУММА(АБС_ВыбытиеОборудованияСклад.Количество) КАК КоличествоДок,
	|	ВЫБОР
	|		КОГДА АБС_ВыбытиеОборудованияСклад.Ссылка.ЗабалансовыйУчет
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.АБС_СчетНазначенияОборудование.ЗабалансовыйУчет)
	|		ИНАЧЕ АБС_ВыбытиеОборудованияСклад.СчетНазначения
	|	КОНЕЦ КАК СчетНазначения
	|ПОМЕСТИТЬ ТЧ
	|ИЗ
	|	Документ.АБС_ВыбытиеУниверсальныйСклад.Оборудование КАК АБС_ВыбытиеОборудованияСклад
	|ГДЕ
	|	АБС_ВыбытиеОборудованияСклад.Ссылка = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	АБС_ВыбытиеОборудованияСклад.Номенклатура,
	|	АБС_ВыбытиеОборудованияСклад.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА АБС_ВыбытиеОборудованияСклад.Ссылка.ЗабалансовыйУчет
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.АБС_СчетНазначенияОборудование.ЗабалансовыйУчет)
	|		ИНАЧЕ АБС_ВыбытиеОборудованияСклад.СчетНазначения
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЗабалансовыйУчетОбороты.Субконто1 КАК Номенклатура,
	|	ЗабалансовыйУчетОбороты.Субконто2 КАК СчетНазначения,
	|	СУММА(ЗабалансовыйУчетОбороты.СуммаОборотКт) КАК Сумма,
	|	СУММА(ЗабалансовыйУчетОбороты.КоличествоОборотКт) КАК Количество
	|ПОМЕСТИТЬ Проводки
	|ИЗ
	|	РегистрБухгалтерии.ЗабалансовыйУчет.Обороты(, , Регистратор, , , , , ) КАК ЗабалансовыйУчетОбороты
	|ГДЕ
	|	ЗабалансовыйУчетОбороты.Регистратор = &ТекущийДокумент
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗабалансовыйУчетОбороты.Субконто2,
	|	ЗабалансовыйУчетОбороты.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТЧ.Номенклатура КАК Оборудование,
	|	ВЫРАЗИТЬ(ТЧ.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ОборудованиеНаименование,
	|	ТЧ.Номенклатура.Код КАК ОборудованиеКод,
	|	ТЧ.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	|	ТЧ.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	|	ТЧ.КоличествоДок,
	|	ЕСТЬNULL(Проводки.Количество, 0) КАК Количество,
	|	ЕСТЬNULL(Проводки.Сумма, 0) КАК Сумма
	|ИЗ
	|	ТЧ КАК ТЧ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Проводки КАК Проводки
	|		ПО ТЧ.Номенклатура = Проводки.Номенклатура
	|			И ТЧ.СчетНазначения = Проводки.СчетНазначения";
		
	Запрос.Текст = ТекстЗапроса;
	ВыборкаПоОборудованию = Запрос.Выполнить().Выбрать();

	Пока ВыборкаПоОборудованию.Следующий() Цикл

		Если ВыборкаПоОборудованию.Количество = 0 
		 ИЛИ ВыборкаПоОборудованию.Количество = Null Тогда
			Количество = 1;
		Иначе
			Количество = ВыборкаПоОборудованию.Количество;
		КонецЕсли;

		СтрокаТаблицы.Параметры.Заполнить(ВыборкаПоОборудованию);
		
		СтрокаТаблицы.Параметры.Количество = ВыборкаПоОборудованию.КоличествоДок;

		СтоимостьВсего  = Окр(ВыборкаПоОборудованию.Сумма / Количество * ВыборкаПоОборудованию.КоличествоДок, 2);	
		СтрокаТаблицы.Параметры.СтоимостьВсего = СтоимостьВсего;
		СтрокаТаблицы.Параметры.СтоимостьЕдиницы = Окр(СтоимостьВсего / ?(ВыборкаПоОборудованию.КоличествоДок <> 0, ВыборкаПоОборудованию.КоличествоДок, 1), 2);

		ТабДокумент.Вывести(СтрокаТаблицы);

	Конеццикла;

	ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	Оборот.Параметры.Заполнить(ВыборкаПоШапке);
	
	Если ЗначениеЗаполнено(Разрешил) Тогда
		ДанныеФЛ = ОбщегоНазначения.ДанныеФизЛица(ВыборкаПоШапке.Организация, Разрешил.Физлицо, ВыборкаПоШапке.ДатаДокумента);
		Оборот.Параметры.МОЛНаименование = ДанныеФЛ.Представление;
		Оборот.Параметры.МОЛДолжность    = ДанныеФЛ.Должность;
	КонецЕсли;
	
	ТабДокумент.Вывести(Оборот);
	
	ТабДокумент.АвтоМасштаб = Истина;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабДокумент.ПолеСверху = 0;
	ТабДокумент.ПолеСнизу = 0;

	Возврат ТабДокумент;

КонецФункции // ПечатьОС15()

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьО(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	
	Если ИмяМакета = "ОС15" тогда
		ТабДокумент = ПечатьОС15();
		
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, "Передача оборудования в монтаж"), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормО() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("ОС15", "Форма ОС-15");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли
//АБС Коломиец-

Функция ПодготовитьТаблицуО()
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	АБС_ВыбытиеОборудованияСкладОборудование.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА АБС_ВыбытиеОборудованияСкладОборудование.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА ЗНАЧЕНИЕ(Справочник.АБС_СчетНазначенияОборудование.ЗабалансовыйУчет)
	              |		ИНАЧЕ АБС_ВыбытиеОборудованияСкладОборудование.СчетНазначения
	              |	КОНЕЦ КАК СчетНазначения,
	              |	СУММА(АБС_ВыбытиеОборудованияСкладОборудование.Количество) КАК Количество
	              |ПОМЕСТИТЬ ВТНоменклатура
	              |ИЗ
	              |	Документ.АБС_ВыбытиеУниверсальныйСклад.Оборудование КАК АБС_ВыбытиеОборудованияСкладОборудование
	              |ГДЕ
	              |	АБС_ВыбытиеОборудованияСкладОборудование.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	АБС_ВыбытиеОборудованияСкладОборудование.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА АБС_ВыбытиеОборудованияСкладОборудование.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА ЗНАЧЕНИЕ(Справочник.АБС_СчетНазначенияОборудование.ЗабалансовыйУчет)
	              |		ИНАЧЕ АБС_ВыбытиеОборудованияСкладОборудование.СчетНазначения
	              |	КОНЕЦ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество,
	              |	СУММА(ВложенныйЗапрос.СуммаОстВсего) КАК СуммаОстВсего,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстВсего) КАК КоличествоОстВсего,
	              |	СУММА(ВложенныйЗапрос.СуммаОстСклад) КАК СуммаОстСклад,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстСклад) КАК КоличествоОстСклад
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура КАК Номенклатура,
	              |		ВТНоменклатура.СчетНазначения КАК СчетНазначения,
	              |		ВТНоменклатура.Количество КАК Количество,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0)) КАК СуммаОстВсего,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)) КАК КоличествоОстВсего,
	              |		СУММА(0) КАК СуммаОстСклад,
	              |		СУММА(0) КАК КоличествоОстСклад
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе), , Организация = &Организация) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество,
	              |		0,
	              |		0,
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0),
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(
	              |					&Дата,
	              |					Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе),
	              |					,
	              |					Организация = &Организация
	              |						И Субконто3 = &Склад) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество";
		Запрос.УстановитьПараметр("Дата", МоментВремени());	
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
		
		Возврат Запрос.Выполнить().Выгрузить();
КонецФункции

/////////////////////////////
////ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведенияО(Отказ, Режим)
	
	Если НЕ ЗначениеЗаполнено(Склад)Тогда
		Сообщить("Не выбран склад");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗабалансовыйУчет Тогда
		СчетНазначения=Справочники.АБС_СчетНазначенияОборудование.НайтиПоНаименованию("Забалансовый учет",Истина);	
		
		Если НЕ ЗначениеЗаполнено(СчетНазначения) Тогда
			Сообщить("Не найден счет назначения ""Забалансовый учет""");
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			Сообщить("Не выбран Контрагент");
			Отказ = Истина;

		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВидДвижения) Тогда
			
			Сообщить("Не выбран Вид движения");
			Отказ = Истина;
			
		КонецЕсли;
		КонецЕсли;

	Для каждого ТекСтрока Из Оборудование Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
			
			Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
			Отказ = Истина;
			
		КонецЕсли;		
		
	КонецЦикла; 
	
	ТаблицаМатериалы = ПодготовитьТаблицуО();
	Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
		КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
		КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
		СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
		Если КоличествоОстВсего >0 И ЗначениеЗаполнено(СуммаОстВсего) Тогда
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
		Иначе
			Сообщить("На складе "+Склад+" по счету "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+ " нет остатка номенклатуры "+СтрокаТаблицы.Номенклатура);
			Отказ = Истина;	
		КонецЕсли;
		
		Если КоличествоОстСклад<СтрокаТаблицы.Количество Тогда
			ТекстСообщения = "На складе "+Склад+" "+КоличествоОстСклад+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+
			" из необходимых "+СтрокаТаблицы.Количество+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+" "+
			СтрокаТаблицы.Номенклатура + " ("+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+") по складу "+Склад+" счету назначения "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
			Сообщить(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;


	Если Не Отказ Тогда
		Движения.ЗабалансовыйУчет.Очистить();
		Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
			КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
			КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
			СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
			// регистр ЗабалансовыйУчет 
		Движение = Движения.ЗабалансовыйУчет.Добавить();
		Движение.СчетКт = ПланыСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе;
		Движение.Период = Дата;
		Движение.Организация = Организация;
		Движение.КоличествоКт = СтрокаТаблицы.Количество;
		Движение.Содержание = "Выбытие оборудования";

		Движение.Сумма = СтрокаТаблицы.Количество*СредняяЦена;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияОборудование] =  ?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
		Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;

		КонецЦикла;
		Движения.ЗабалансовыйУчет.Записать();
	КонецЕсли;
 
КонецПроцедуры

//////////////////////////////////
Функция ПодготовитьТаблицуТ()
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	АБС_ВыбытиеТоваровСкладТовары.Номенклатура,
	              |	СУММА(АБС_ВыбытиеТоваровСкладТовары.Количество) КАК Количество
	              |ПОМЕСТИТЬ ВТНоменклатура
	              |ИЗ
	              |	Документ.АБС_ВыбытиеУниверсальныйСклад.Товары КАК АБС_ВыбытиеТоваровСкладТовары
	              |ГДЕ
	              |	АБС_ВыбытиеТоваровСкладТовары.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	АБС_ВыбытиеТоваровСкладТовары.Номенклатура
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.Количество,
	              |	СУММА(ВложенныйЗапрос.СуммаОстВсего) КАК СуммаОстВсего,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстВсего) КАК КоличествоОстВсего,
	              |	СУММА(ВложенныйЗапрос.СуммаОстСклад) КАК СуммаОстСклад,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстСклад) КАК КоличествоОстСклад
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура КАК Номенклатура,
	              |		ВТНоменклатура.Количество КАК Количество,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0)) КАК СуммаОстВсего,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)) КАК КоличествоОстВсего,
	              |		СУММА(0) КАК СуммаОстСклад,
	              |		СУММА(0) КАК КоличествоОстСклад
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе), , Организация = &Организация) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.Количество
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.Количество,
	              |		0,
	              |		0,
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0),
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(
	              |					&Дата,
	              |					Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе),
	              |					,
	              |					Организация = &Организация
	              |						И Субконто2 = &Склад) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.Количество";
		Запрос.УстановитьПараметр("Дата",МоментВремени());	
		Запрос.УстановитьПараметр("Склад",Склад);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	 Возврат Запрос.Выполнить().Выгрузить();
КонецФункции


/////////////////////////////
////ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведенияТ(Отказ, Режим)
		Если НЕ ЗначениеЗаполнено(Склад)Тогда
		Сообщить("Не выбран склад");
		Отказ = Истина;
	КонецЕсли;
	
	
	Для каждого ТекСтрока Из Товары Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
				
		
	КонецЦикла; 
	
	ТаблицаМатериалы = ПодготовитьТаблицуТ();
	Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
		КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
		КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
		СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
		Если КоличествоОстВсего >0 И ЗначениеЗаполнено(СуммаОстВсего) Тогда
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
		Иначе
			Сообщить("На складе "+Склад+" по счету нет остатка номенклатуры "+СтрокаТаблицы.Номенклатура);
			Отказ = Истина;	
		КонецЕсли;
		
		Если КоличествоОстСклад<СтрокаТаблицы.Количество Тогда
			ТекстСообщения = "На складе "+Склад+" "+КоличествоОстСклад+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+
			" из необходимых "+СтрокаТаблицы.Количество+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+" "+
			СтрокаТаблицы.Номенклатура + "  по складу "+Склад;
			Сообщить(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;


	Если Не Отказ Тогда
		Движения.ЗабалансовыйУчет.Очистить();
		Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
			КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
			КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
			СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
			//регистр ЗабалансовыйУчет 
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			Движение.СчетКт = ПланыСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.КоличествоКт = СтрокаТаблицы.Количество;
			Движение.Содержание =   "Выбытие товара";
			Движение.Сумма = СтрокаТаблицы.Количество*СредняяЦена;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = Склад;
			
			
			


		КонецЦикла;
		Движения.ЗабалансовыйУчет.Записать();
	КонецЕсли;

  	
КонецПроцедуры

//обёртки
Процедура ОбработкаПроведения(Отказ, Режим)
	Отказ = Ложь;
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		ОбработкаПроведенияМ(Отказ, Режим)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
		ОбработкаПроведенияО(Отказ, Режим)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда 
		ОбработкаПроведенияТ(Отказ, Режим)
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		ПечатьМ(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
		ПечатьО(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		Возврат ПолучитьСтруктуруПечатныхФормМ();
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
		Возврат ПолучитьСтруктуруПечатныхФормО();
	Иначе
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Процедура ОбработкаЗаполнения(Основание)
	//АБС ОБНОВЛЕНИЕ НА 8.2
	Если (Основание <> Неопределено) И (Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Основание))) Тогда
		Если ТипЗнч(Основание.Ссылка) = Тип("ДокументСсылка.АБС_ПоступлениеУниверсальныйСклад") Тогда
			Для Каждого СтрокаТабЧасти Из Основание.Материалы Цикл
				НоваяСтрока =Материалы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
			КонецЦикла;
			Для Каждого СтрокаТабЧасти Из Основание.Оборудование Цикл
				НоваяСтрока =Оборудование.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
			КонецЦикла;
			Для Каждого СтрокаТабЧасти Из Основание.Товары Цикл
				НоваяСтрока =Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
			КонецЦикла;
			ВидОперации = Основание.ВидОперации;
			Организация = Основание.Организация;
			СкладОтправитель = Основание.Склад;
			ЗабалансовыйУчет = Основание.ЗабалансовыйУчет;
			ОбработанБухгалтерией = Основание.ОбработанБухгалтерией;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

глТаблицаЗабаланс = абс_СлужебныеФункции.ЗаполнитьТаблицуЗабалансаИзРегистра();
СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);
