// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "БланкСогласования") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "БланкСогласования", "Бланк согласования", ПечатьБланка(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПараметрыДоговора(Параметры,Договор)
	Попытка
		Параметры.Подразделение = Договор.Ответственный.абс_Сотрудник.ПодразделениеОрганизации;
		Если НЕ ЗначениеЗаполнено(Параметры.Подразделение) Тогда Возврат; КонецЕсли;
		Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	абс_ОтветственныеЛицаПодразделенийСрезПоследних.Сотрудник
		|ИЗ
		|	РегистрСведений.абс_ОтветственныеЛицаПодразделений.СрезПоследних(
		|			&Дата,
		|			Ответственный
		|				И Активен
		|				И СтруктурнаяЕдиница = &Подразделение) КАК абс_ОтветственныеЛицаПодразделенийСрезПоследних
		|ГДЕ
		|	абс_ОтветственныеЛицаПодразделенийСрезПоследних.Активен");
		Запрос.УстановитьПараметр("Подразделение",Параметры.Подразделение); 
		Запрос.УстановитьПараметр("Дата",Договор.Дата);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			Параметры.Руководитель = Выборка.Сотрудник;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура ЗаполнитьСекциюСогласования(Параметры,Договор,Статус)
	
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	РеальнаяТаблица.Период КАК Период,
	|	РеальнаяТаблица.Договор,
	|	РеальнаяТаблица.СтатусДоговора,
	|	РеальнаяТаблица.Исполнитель,
	|	РеальнаяТаблица.Комментарий
	|ИЗ
	|	РегистрСведений.абс_ИзменениеСтатусовДоговоровПодряда.СрезПоследних(&ТекДата, Договор = &Договор) КАК Срез
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.абс_ИзменениеСтатусовДоговоровПодряда КАК РеальнаяТаблица
	|		ПО Срез.Период = РеальнаяТаблица.Период
	|			И Срез.Договор = РеальнаяТаблица.Договор
	|			И Срез.СтатусДоговора = РеальнаяТаблица.СтатусДоговора
	|			И Срез.Исполнитель = РеальнаяТаблица.Исполнитель
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	Запрос.УстановитьПараметр("ТекДата",ТекущаяДата());
	Запрос.УстановитьПараметр("Договор",Договор);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	й = 0;
	НомерСтрокиСтатус = -1;
	Пока й < ТЗ.Количество() Цикл
		Строка = ТЗ[й];
		Если Строка.СтатусДоговора = Статус Тогда
			Параметры.ДатаПоступления = Формат(Строка.Период,"ДФ=dd.MM.yyyy; ДЛФ=D");
			НомерСтрокиСтатус = й;
			прервать;
		КонецЕсли;
		й = й+1;
	КонецЦИкла;
	Если НомерСтрокиСтатус=-1 Тогда
		возврат;
	КонецЕсли;
	
	Строка = ТЗ[НомерСтрокиСтатус+1];
	Параметры.Замечания = Строка.Комментарий;
	Попытка
		Ответственный = ФормированиеПечатныхФормСервер.ФамилияИмяОтчество(СТРОКА.Исполнитель.абс_Сотрудник, ТекущаяДата());
		Параметры.Ответственный = Ответственный.Фамилия +" "+Лев(Ответственный.Имя,1)+". "+Лев(Ответственный.Отчество,1)+".";
	Исключение
		Параметры.Ответственный = СТРОКА.Исполнитель;
	КонецПопытки;
	Параметры.ДатаСогласования = Формат(Строка.Период,"ДФ=dd.MM.yyyy; ДЛФ=D");
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьБланка(МассивОбъектов, ОбъектыПечати)

	Макет = ПолучитьМакет("БланкСогласования");
	ТабДокумент = Новый ТабличныйДокумент;
	НомерСтрокиНачало = 1;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ДоговорыПодряда_БланкСогласования";
	ЭтоПервыйОбъект = Истина;
		
	Запрос = новый Запрос(
	"ВЫБРАТЬ
	|	ДоговорыПодряда.Ссылка КАК Ссылка,
	|	ДоговорыПодряда.абс_СтатусДоговора КАК СтатусДоговора,
	|	абс_ИзменениеСтатусовДоговоровПодряда.Период КАК Период,
	|	абс_ИзменениеСтатусовДоговоровПодряда.СтатусДоговора КАК Статус,
	|	абс_ИзменениеСтатусовДоговоровПодряда.Исполнитель КАК Исполнитель,
	|	абс_ИзменениеСтатусовДоговоровПодряда.Комментарий КАК Комментарий
	|ИЗ
	|	Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорыПодряда
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_ИзменениеСтатусовДоговоровПодряда КАК абс_ИзменениеСтатусовДоговоровПодряда
	|		ПО (абс_ИзменениеСтатусовДоговоровПодряда.Договор = ДоговорыПодряда.Ссылка)
	|ГДЕ
	|	ДоговорыПодряда.Ссылка В(&МассивОбъектов)
	|	И абс_ИзменениеСтатусовДоговоровПодряда.Договор В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	Период
	|ИТОГИ ПО
	|	Ссылка");
						  
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);

	ВыборкаДоговор = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДоговор.Следующий() Цикл
		
		Если НЕ ВыборкаДоговор.СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Регистрация
			И НЕ ВыборкаДоговор.СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Согласован Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Бланк согласования по договору подряда № " + ВыборкаДоговор.Ссылка.Номер + 
				" можно получить только в статусе регистрации договора или для полностью согласованных договоров.");
			Продолжить;
		КонецЕсли;
			
		Если НЕ ЭтоПервыйОбъект Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЭтоПервыйОбъект = Ложь;
		
		ДатаПоступленияНаРегистрацию = ПолучитьДатуСтатусаПодписанияИрегистрации(ВыборкаДоговор.Ссылка);
		
		Обл = Макет.ПолучитьОбласть("ДоговорШапка");
		Обл.Параметры.Заполнить(ВыборкаДоговор.Ссылка);
		
		Если ЗначениеЗаполнено(ДатаПоступленияНаРегистрацию) Тогда
			Обл.Параметры.ТекДата = ДатаПоступленияНаРегистрацию;
		Иначе
			Обл.Параметры.ТекДата = ТекущаяДата();
		КонецЕсли;
		
		Обл.Параметры.ТекДата = Формат(Обл.Параметры.ТекДата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		Обл.Параметры.Дата = Формат(Обл.Параметры.Дата,"ДФ=dd.MM.yyyy; ДЛФ=D");
		ТабДокумент.Вывести(Обл);
		
		Обл = Макет.ПолучитьОбласть("Договор");
		Обл.Параметры.Заполнить(ВыборкаДоговор.Ссылка);
		ЗаполнитьПараметрыДоговора(Обл.Параметры, ВыборкаДоговор.Ссылка);
		ТабДокумент.Вывести(Обл);		
		
		Обл = Макет.ПолучитьОбласть("ОбластьШапкаСогласования");
		ТабДокумент.Вывести(Обл);
		
		ОблСтрока = Макет.ПолучитьОбласть("ОбластСтрокаСогласования");
		
		ВыборкаСтатусы = ВыборкаДоговор.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаСтатусы.Следующий() Цикл
			
			ОблСтрока.Параметры.Заполнить(ВыборкаСтатусы);
			
			ТабДокумент.Вывести(ОблСтрока);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТабДокумент.Вывести(Макет.ПолучитьОбласть("ОбластьПодвал"));
	
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДоговор.Ссылка);

	ТабДокумент.ПолеСверху = 20;
	ТабДокумент.ПолеСлева = 20;
	ТабДокумент.ПолеСлева = 5;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу = 0;
	
	Возврат ТабДокумент;
	
КонецФункции

Функция ПолучитьДатуСтатусаПодписанияИрегистрации(Ссылка)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_ИзменениеСтатусовДоговоровПодрядаСрезПоследних.Договор,
	|	абс_ИзменениеСтатусовДоговоровПодрядаСрезПоследних.Период
	|ИЗ
	|	РегистрСведений.абс_ИзменениеСтатусовДоговоровПодряда.СрезПоследних(
	|			,
	|			Договор = &Договор
	|				И СтатусДоговора = ЗНАЧЕНИЕ(Перечисление.абсСтатусыДоговоровПодряда.Регистрация)) КАК абс_ИзменениеСтатусовДоговоровПодрядаСрезПоследних");
	
	Запрос.УстановитьПараметр("Договор", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Период;
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

