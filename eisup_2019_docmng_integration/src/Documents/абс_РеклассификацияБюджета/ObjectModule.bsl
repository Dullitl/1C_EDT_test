Перем мВалютаРеглУчета Экспорт; 
Перем мСтруктураИсточник Экспорт;
Перем мСтруктураПриемник Экспорт;
Перем врСозданВводомНаОсновании Экспорт;
Перем врФакт Экспорт;
Перем мТекущийПользователь Экспорт;
Перем мРолиПользователя Экспорт;
Перем мПериоды Экспорт;

// АБС ВСТАВКА СогласованиеЗЗ
Процедура ЗаписатьНовыйСтатус(НовыйСтатус, Комментарий = Неопределено) Экспорт
	
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	
	НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовРекласификацииБюджета.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.РекласификацияБюджета.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();
	Запись.РекласификацияБюджета		= Ссылка;
	Запись.Пользователь 				= ТекПользователь;	
	Запись.СтатусРекласификацииБюджета	= НовыйСтатус;  
	
	Запись.Комментарий 					= Комментарий;
	
	ОтветственныйСотрудник = абс_БизнесПроцессы.ПолучитьСотрудникаПользователя(ТекПользователь);
	
	Если НЕ ОтветственныйСотрудник = Неопределено Тогда
		Запись.ДолжностьОтветственного	= ОтветственныйСотрудник.Должность;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры
// АБС ВСТАВКА СогласованиеЗЗ КОНЕЦ

Процедура СоздатьСтруктуруИсточника(СтрокаПериоды = Неопределено, Год) Экспорт
	
	мСтруктураИсточник = Новый Структура;
	мСтруктураПриемник = Новый Структура;
	Для каждого Реквизит из ЭтотОбъект.Метаданные().Реквизиты Цикл
		Если Найти(Реквизит.Имя,"Источник")>0 Тогда
			мСтруктураИсточник.Вставить(СтрЗаменить(Реквизит.Имя,"Источник",""), ЭтотОбъект[Реквизит.Имя]);
		КонецЕсли;
		
		Если Найти(Реквизит.Имя,"Приемник")>0 Тогда
			мСтруктураПриемник.Вставить(СтрЗаменить(Реквизит.Имя,"Приемник",""), ЭтотОбъект[Реквизит.Имя]);
		КонецЕсли;
	КонецЦикла;  	
	
	//АБС ВСТАВКА №28348 НАЧАЛО «14 октября 2014 г.», Пополитов
	//Если (мПериоды <> '00010101' И Дата >= мПериоды) И ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами И Не Год Тогда
   	Если ПоказыватьПериодЗакладкой() И Не Год Тогда
	//\\АБС ВСТАВКА №28348 КОНЕЦ		
		мСтруктураИсточник.ПериодМесяц = СтрокаПериоды.ИсточникПериодМесяц;
		мСтруктураПриемник.ПериодМесяц = СтрокаПериоды.ПриемникПериодМесяц;
	КонецЕсли;
	
	//мСтруктураИсточник.Вставить("НачалоПериода", НачалоМесяца(мСтруктураИсточник.ПериодМесяц));      //АБС Коломиец 19806
	//мСтруктураИсточник.Вставить("КонецПериода", КонецМесяца (мСтруктураИсточник.ПериодМесяц));
	//
	мСтруктураИсточник.Вставить("НачалоПериода", ?(Год, НачалоГода(мСтруктураИсточник.ПериодМесяц), НачалоМесяца(мСтруктураИсточник.ПериодМесяц)));
	мСтруктураИсточник.Вставить("КонецПериода",  ?(Год, КонецГода(мСтруктураИсточник.ПериодМесяц), КонецМесяца (мСтруктураИсточник.ПериодМесяц)));
	//НФС 2018
	мСтруктураИсточник.Вставить("ОбъектБюджетирования", ИсточникОбъектБюджетирования);
	//НФС 2018
	
	мСтруктураПриемник.Вставить("НачалоПериода", ?(Год, НачалоГода(мСтруктураПриемник.ПериодМесяц), НачалоМесяца(мСтруктураПриемник.ПериодМесяц)));
	мСтруктураПриемник.Вставить("КонецПериода",  ?(Год, КонецГода(мСтруктураПриемник.ПериодМесяц), КонецМесяца (мСтруктураПриемник.ПериодМесяц)));
	//НФС 2018
	мСтруктураПриемник.Вставить("ОбъектБюджетирования", ПриемникОбъектБюджетирования);
	//НФС 2018

КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//АБС ВСТАВКА №36480 НАЧАЛО
	абс_БюджетированиеПривилегированный.абс_РеклассификацияБюджетаОчиститьДвижения(Ссылка);
	//АБС ВСТАВКА №36480 КОНЕЦ
	
	//АБС Коломиец 19806+
	//АБС ВСТАВКА №28348 НАЧАЛО «14 октября 2014 г.», Пополитов
	//ПереносМеждуПериодами = (мПериоды <> '00010101' И Дата >= мПериоды) И (ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами); //АБС Коломиец 19806+
   	ПереносМеждуПериодами = ПоказыватьПериодЗакладкой();
	//\\АБС ВСТАВКА №28348 КОНЕЦ		
	
	Если ПереносМеждуПериодами Тогда  
		Если Периоды.Итог("Сумма") <> Периоды.Итог("СуммаНовая") Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Сумма по периодам источника не равна сумме по периодам приемника!", Отказ);
		КонецЕсли;
		Если Периоды.Итог("СуммаВал") <> Периоды.Итог("СуммаВалНовая") Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Сумма вал. по периодам источника не равна сумме вал. по периодам приемника!", Отказ);
		КонецЕсли;	
		Если Отказ Тогда 
			Возврат;
		КонецЕсли;		 
	КонецЕсли;	
	
	Сч = ?(ПереносМеждуПериодами, Периоды.Количество(), 1); 
	Инд = 0;	
	
	Пока Инд < Сч Цикл
		//АБС Коломиец 19806-	
		
		Если Не ЗначениеЗаполнено(мВалютаРеглУчета) Тогда
			мВалютаРеглУчета = Константы.ВалютаРегламентированногоУчета.Получить();
		КонецЕсли;	
		
		//АБС Коломиец 19806+
		Если ПереносМеждуПериодами Тогда  		 
			СуммаТек = Периоды[Инд].Сумма;
			СуммаЛимитаТек = Периоды[Инд].Сумма;
			СуммаВалТек = Периоды[Инд].СуммаВал;
			СуммаЛимитаВалТек = Периоды[Инд].СуммаВал;	
			СуммаТекПриемника = Периоды[Инд].СуммаНовая;
			СуммаВалТекПриемника = Периоды[Инд].СуммаВалНовая;		
			Если СуммаТек = 0 И СуммаЛимитаТек = 0 И СуммаТекПриемника = 0 И СуммаВалТек = 0 И СуммаЛимитаВалТек = 0 И СуммаВалТекПриемника = 0 Тогда
				Инд = Инд + 1;
				Продолжить;
			КонецЕсли;
			СоздатьСтруктуруИсточника(Периоды[Инд], Ложь);
		Иначе 
			СоздатьСтруктуруИсточника(Неопределено, Ложь);
			СуммаТек = Сумма;
			СуммаЛимитаТек = СуммаЛимита;
			СуммаВалТек = СуммаВал;
			СуммаЛимитаВалТек = СуммаЛимитаВал;	
			СуммаТекПриемника = 0;
			СуммаВалТекПриемника = 0;		
		КонецЕсли;   
		Инд = Инд + 1;
		//АБС Коломиец 19806-
		
		Если ЗначениеЗаполнено(Сценарий) и НЕ ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета
			И Не (ПереносМеждуПериодами И СуммаТек = 0 И СуммаЛимитаТек = 0 И СуммаВалТек = 0 И СуммаЛимитаВалТек = 0) Тогда
			
			прСценарий = Сценарий;                   
			//АБС Коломиец 13573
			//АБС ВСТАВКА №36480 НАЧАЛО
			Остаток = абс_БюджетированиеПривилегированный.ПостроитьЗапросПоОстаткам(мСтруктураИсточник,ВалютаДокумента, Ложь, прСценарий, Истина);
			//АБС ВСТАВКА №36480 КОНЕЦ
			
			Если ВалютаДокумента = мВалютаРеглУчета Тогда
				ДобавленнаяСумма = СуммаТек;
				ДобавленныйЛимит = СуммаЛимитаТек;
			Иначе
				ДобавленнаяСумма = СуммаВалТек;
				ДобавленныйЛимит = СуммаЛимитаВалТек;
			КонецЕсли;
			
			Если Остаток.СуммаОстатокЛимита-ДобавленныйЛимит<0 Тогда
				Отказ = Истина;
				ttk_ОбщегоНазначения.СообщитьОбОшибке("В периоде " +абс_СлужебныеФункции.ВернутьНазваниеМесяца(мСтруктураИсточник.ПериодМесяц) + " " + Формат(мСтруктураИсточник.ПериодМесяц,"ДФ=yyyy") + " г."+ 
				"Превышен лимит по набору аналитик источника!",Отказ);
			КонецЕсли;
			
			Если Остаток.СуммаПлан - ДобавленнаяСумма < 0 Тогда
				Отказ = Истина;
				ttk_ОбщегоНазначения.СообщитьОбОшибке("В периоде " +абс_СлужебныеФункции.ВернутьНазваниеМесяца(мСтруктураИсточник.ПериодМесяц) + " " + Формат(мСтруктураИсточник.ПериодМесяц,"ДФ=yyyy") + " г."+
				"После реклассификации в бюджет будет занесена отрицательная сумма!",Отказ);
			КонецЕсли;
			
			Если Отказ Тогда
				возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		//Сторчевой А.Н. 77139911 05.07.2017 {
		НачислятьЛимит = Истина;	
		// } Сторчевой А.Н. 77139911 05.07.2017		
		Если НЕ Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Проведен Тогда 
			//Возврат;
			//ttk_ОбщегоНазначения.СообщитьОбОшибке("Документ рекласификации проводится только в статусе ""Проведен"".", Отказ);
			//Сторчевой А.Н. 77139911 05.07.2017 {
			//Закомментировано Продолжить;
			НачислятьЛимит = Ложь;
			// } Сторчевой А.Н. 77139911 05.07.2017
		КонецЕсли;
		
		Если Отказ Тогда
			Возврат;
		КонецЕсли;
		
		//АБС ВСТАВКА №36480 НАЧАЛО
		абс_БюджетированиеПривилегированный.абс_РеклассификацияБюджетаДобавитьДвижения(Ссылка, Отказ, мСтруктураПриемник, мСтруктураИсточник,ПереносМеждуПериодами,
						СуммаТек,СуммаЛимитаТек,СуммаВалТек,СуммаЛимитаВалТек,СуммаТекПриемника,СуммаВалТекПриемника, НачислятьЛимит);
		//\\АБС ВСТАВКА №36480 КОНЕЦ
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоРегистру(ИмяРегистра,ДанныеЗаполнения,СоответствиеРесурсов)
	
Попытка 
		
		ВсеИзмерения = "Период,Регистратор,Активность";
		ВсеРесурсы   = "";
        //Заполнить данные по движениям документа - документ основание
		Движение = ДанныеЗаполнения.Метаданные().Движения;
		Для каждого Строка Из Движение Цикл  			
			Если Строка.Имя = ИмяРегистра Тогда	
				
				Для Каждого Измерение Из Строка.Измерения Цикл
					ВсеИзмерения = ВсеИзмерения + "," + Измерение.Имя; 
				КонецЦикла;
				Для Каждого Ресурсы Из Строка.Ресурсы Цикл
					ВсеРесурсы = ВсеРесурсы + "," + Ресурсы.Имя; 
				КонецЦикла;
				ВсеРесурсы = Сред(ВсеРесурсы,2);
				
				врДокумент = ДанныеЗаполнения.ПолучитьОбъект();
				врДокумент.Движения[ИмяРегистра].Прочитать();				
				Если врДокумент.Движения[ИмяРегистра].Количество() > 0 Тогда					
	                //Таблица для обработки
					ТаблицаДляОбработки = врДокумент.Движения[ИмяРегистра].Выгрузить();
					ТаблицаДляОбработки.Свернуть(ВсеИзмерения,ВсеРесурсы);
					ТаблицаДляОбработки.Сортировать("Сценарий Убыв");//что бы взять строку только "3. Факт"
													
					Если ТаблицаДляОбработки.Количество() > 0 Тогда
														
						// Заполнение шапки
						ЗаполнитьПоТаблице("ИсточникСтатьяОборотов","СтатьяОборотов"     ,ТаблицаДляОбработки[0]);
						ЗаполнитьПоТаблице("ИсточникКВ"            ,"абс_КВ"             ,ТаблицаДляОбработки[0]);
					    ЗаполнитьПоТаблице("ИсточникОрганизация"   ,"Организация"        ,ТаблицаДляОбработки[0]);
					    ЗаполнитьПоТаблице("ИсточникТипКонтрагента","абс_ТипКонтрагента" ,ТаблицаДляОбработки[0]);
					    ЗаполнитьПоТаблице("ИсточникТипРасхода"    ,"абс_ТипРасхода"     ,ТаблицаДляОбработки[0]);
						ЗаполнитьПоТаблице("ИсточникТипСети"       ,"абс_ТипСети"        ,ТаблицаДляОбработки[0]);
						ЗаполнитьПоТаблице("ИсточникТЭО"           ,"абс_ТЭО"            ,ТаблицаДляОбработки[0]);
						ЗаполнитьПоТаблице("ИсточникЦФО"           ,"ЦФО"            	 ,ТаблицаДляОбработки[0]);
						ЗаполнитьПоТаблице("ИсточникЦФУ"           ,"абс_ЦФУ"            ,ТаблицаДляОбработки[0]);
						ЗаполнитьПоТаблице("Сценарий"              ,"Сценарий"           ,ТаблицаДляОбработки[0]);
						//Число
						Для каждого врСтрока Из СоответствиеРесурсов Цикл
							ЗаполнитьПоТаблице(врСтрока.Ключ,врСтрока.Значение,ТаблицаДляОбработки[0]);							
						КонецЦикла;
					
					КонецЕсли;		
					
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЦикла;	
	
	Исключение
		//Не удалось заполнить по движениям
	КонецПопытки;
	
	
КонецПроцедуры	

Функция ПолучитьТаблицуИзДокумента(ДанныеЗаполнения, ИмяРегистра = "ОборотыБюджетов",Список = Неопределено) Экспорт
	
	Если Список = Неопределено Тогда
		Список = Новый СписокЗначений;
	КонецЕсли;	
	
	врТаблица = Новый ТаблицаЗначений;
	врТаблица.Колонки.Добавить("Флажок");
	врТаблица.Колонки.Добавить("ИсточникПериодМесяц");
	врТаблица.Колонки.Добавить("ИсточникЦФУ");
	врТаблица.Колонки.Добавить("ИсточникЦФО");
	врТаблица.Колонки.Добавить("ИсточникОрганизация");
	врТаблица.Колонки.Добавить("ИсточникСтатьяОборотов");
	врТаблица.Колонки.Добавить("ИсточникТипКонтрагента");
	врТаблица.Колонки.Добавить("ИсточникТипРасхода");
	врТаблица.Колонки.Добавить("ИсточникТЭО");
	врТаблица.Колонки.Добавить("ИсточникТипСети");
	врТаблица.Колонки.Добавить("ИсточникКВ");
	врТаблица.Колонки.Добавить("Сумма");
	врТаблица.Колонки.Добавить("СуммаВал");
	врТаблица.Колонки.Добавить("Количество");
                                       		
	Попытка 
		
		ВсеИзмерения = "Период,Регистратор,Активность";
		ВсеРесурсы   = "";
		//Заполнить данные по движениям документа - документ основание
		Движение = ДанныеЗаполнения.Метаданные().Движения;           
		Для каждого Строка Из Движение Цикл  			
			Если Строка.Имя = ИмяРегистра Тогда	
				
				Для Каждого Измерение Из Строка.Измерения Цикл
					ВсеИзмерения = ВсеИзмерения + "," + Измерение.Имя; 
				КонецЦикла;
				Для Каждого Ресурсы Из Строка.Ресурсы Цикл
					ВсеРесурсы = ВсеРесурсы + "," + Ресурсы.Имя; 
				КонецЦикла;
				ВсеРесурсы = Сред(ВсеРесурсы,2);
				
				врДокумент = ДанныеЗаполнения.ПолучитьОбъект();
				врДокумент.Движения[ИмяРегистра].Прочитать();				
				Если врДокумент.Движения[ИмяРегистра].Количество() > 0 Тогда					
					//Таблица для обработки
					ТаблицаДляОбработки = врДокумент.Движения[ИмяРегистра].Выгрузить();
					ТаблицаДляОбработки.Свернуть(ВсеИзмерения,ВсеРесурсы);
					ТаблицаДляОбработки.Сортировать("Сценарий Убыв");//что бы взять строку только "3. Факт"
										
					Для каждого Строка Из ТаблицаДляОбработки Цикл
						
						//Если НЕ Строка.Сценарий = врФакт или Список.НайтиПоЗначению(Строка.Сценарий) = Неопределено Тогда
						//	Продолжить;
						//КонецЕсли;	
						
						врСтр = врТаблица.Добавить();
						врСтр.Флажок 					= Ложь;
						врСтр.ИсточникПериодМесяц 		= Строка.Период;
						врСтр.ИсточникЦФУ 				= Строка.абс_ЦФУ;
						врСтр.ИсточникЦФО 				= Строка.ЦФО;
						врСтр.ИсточникОрганизация 		= Строка.Организация;
						врСтр.ИсточникСтатьяОборотов 	= Строка.СтатьяОборотов;
						врСтр.ИсточникТипКонтрагента 	= Строка.абс_ТипКонтрагента;
						врСтр.ИсточникТипРасхода 		= Строка.абс_ТипРасхода;
						врСтр.ИсточникТЭО 				= Строка.абс_ТЭО;
						врСтр.ИсточникТипСети 			= Строка.абс_ТипСети;
						врСтр.ИсточникКВ 				= Строка.абс_КВ;
						Если НЕ ИмяРегистра = "ОборотыБюджетов" Тогда
							врСтр.Сумма 				    = Строка.СуммаСценарияИсполнение;
							врСтр.СуммаВал 				    = Строка.СуммаСценарияИсполнениеВал;					
						Иначе	
							врСтр.Сумма 				    = Строка.СуммаСценария;
							врСтр.СуммаВал 				    = Строка.ВалютнаяСумма;
							врСтр.Количество 				= Строка.Количество;
						КонецЕсли;                  						
					КонецЦикла;	
					
				КонецЕсли;
				
			КонецЕсли;	
			
		КонецЦикла;	
		
	Исключение
		//Не удалось заполнить по движениям
	КонецПопытки;
	             	
	Возврат врТаблица;
	
КонецФункции	

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ДанныеЗаполнения = Неопределено Тогда
		Возврат;
	КонецЕсли;	
	
	врСозданВводомНаОсновании = Истина;	
	
	Попытка		
		ДокументОснование = ДанныеЗаполнения.Ссылка;
	Исключение
		//пропускаем
	КонецПопытки;
	
КонецПроцедуры

Процедура ЗаполнитьПоРеквизизиту(ИмяПриемник,ИмяИсточник,ДанныеЗаполнения)
	
	Попытка
	
	Если ДанныеЗаполнения.Метаданные().Реквизиты.Найти(ИмяИсточник) <> Неопределено
		и ЭтотОбъект.Метаданные().Реквизиты.Найти(ИмяПриемник) <> Неопределено Тогда
		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяПриемник]) Тогда
			ЭтотОбъект[ИмяПриемник] = ДанныеЗаполнения[ИмяИсточник];
		КонецЕсли;	
		
	КонецЕсли;	
	
	Исключение
	КонецПопытки;
	
КонецПроцедуры	

Процедура ЗаполнитьПоТаблице(ИмяПриемник,ИмяИсточник,СтрокаТаблицы)
	
	Попытка
	
	Если ЭтотОбъект.Метаданные().Реквизиты.Найти(ИмяПриемник) <> Неопределено Тогда
		
		Если НЕ ЗначениеЗаполнено(ЭтотОбъект[ИмяПриемник]) Тогда
			ЭтотОбъект[ИмяПриемник] = СтрокаТаблицы[ИмяИсточник];
		КонецЕсли;	
		
	КонецЕсли;	
	
	Исключение
	КонецПопытки;
	
КонецПроцедуры
    
Процедура ПриЗаписи(Отказ)
		
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
		
	Попытка
	
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусРекласификацииПоРегистру(Ссылка);
		
		Если НЕ Статус = СтатусПоРегистру Тогда
			ЗаписатьНовыйСтатус(Статус, ПричинаИзмененияСтатуса);
			//Сторчевой А.Н. 7796764 {
			//ttk_ОбщегоНазначения.ОтправитьУведомленияПользователямНаЭлАдрес(Ссылка, Неопределено, Неопределено); 
			// } Сторчевой А.Н. 7796764
		КонецЕсли;
				
		// АБС Изменение Родин Отключение бизнес-процессов 110314
		СогласованиеБезБП = глЗначениеПеременной("абс_СогласованиеБезБП");
		Если Не СогласованиеБезБП Тогда
			// Запустим БП если он еще не запущен
			Если Статус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФО
				//Сторчевой А.Н. 7796764 { 
				или Статус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемник
				или Статус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемникМКР
				// } Сторчевой А.Н. 7796764
				или Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение Тогда
				
				БПСогласование = НайтиБПСогласование();
				
				Если Не ЗначениеЗаполнено(БПСогласование) Тогда
					абс_БизнесПроцессы.ЗапуститьБПРекласификацииБюджета(Ссылка);	
				КонецЕсли;
				
			КонецЕсли;
			
			// Попробуем закрыть задачу согласования
			ЗадачаСогласование = ПолучитьЗадачуПоРекласификацииСогласование();
			
			Если ЗадачаСогласование = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			Если НЕ ЗадачаСогласование.Выполнена Тогда
				
				ЗадачаОбъект = ЗадачаСогласование.ПолучитьОбъект();			
				ЗадачаОбъект.ВыполнитьЗадачу();
			КонецЕсли;
		КонецЕсли;
		// АБС Изменение Родин Отключение бизнес-процессов 110314
	
	Исключение

		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при записи документа: " + ОписаниеОшибки() + ".", Отказ);
		
		Возврат;
	КонецПопытки;
	

КонецПроцедуры

Функция НайтиБПСогласование() Экспорт
	
	Возврат абс_БизнесПроцессы.НайтиБизнесПроцессПоРекласификации(Ссылка, "абсРекласификацияБюджета");	
	
КонецФункции

Функция ПолучитьЗадачуПоРекласификацииСогласование() Экспорт
	
	БП = НайтиБПСогласование();
	
	Если БП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СпТочек = Новый Массив;
	
	ТекСтатус = Ссылка.Статус;
	
	Если ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеУточнение);
		//СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеОтказ);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФО Тогда
	//Сторчевой А.Н. 7796764 {
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРИсточника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеОтказ);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЭкономистомПриемникМКР Тогда
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемникаМКР);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемник Тогда
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеОтказ);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемникМКР Тогда
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеОтказ);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОМКР Тогда 
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЭкономистомИсточникМКР Тогда 
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОИсточникаМКР);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЭкономистом Тогда 
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОИсточника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРИсточника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРПриемника);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеБК Тогда
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистом);
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеПВП Тогда
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеРуководителемЭкономиста);
	// } Сторчевой А.Н. 7796764
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДК
		  или ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДФМ
		  или ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеДЭИ Тогда
		  
// КТТК Ермолов Е.Л.  26.01.2016 		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеБК);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФО);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУ);  //АБС Коломиец 19255
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);//АБС Коломиец 19806
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУПриемника);//АБС Коломиец 19806
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Проведен Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеБюджетныйКонтроль);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеСотрудникомДК);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеУтверждениеПВП);   //АБС Коломиец 19255
		//СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУ);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.БюджетныйКонтроль Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеСотрудникомДК);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеУтверждениеПВП);   	
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Уточнение Тогда
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
		//СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеПроведен);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
		
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФО);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеСотрудникомДК);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеУтверждениеПВП);   //АБС Коломиец 19255
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);   //АБС Коломиец 19806
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУПриемника);   //АБС Коломиец 19806
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.Отказ Тогда
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
		//СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеПроведен);
		//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
// КТТК Ермолов Е.Л.  26.01.2016 		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеБК);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеБюджетныйКонтроль);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФО);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеСотрудникомДК);
	//АБС Коломиец 19255, 190806+
	    СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);   
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеУтверждениеПВП);
		//Сторчевой А.Н. 7796764 {
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемникаМКР);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОИсточникаМКР);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОИсточника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистом);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРПриемника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРИсточника);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеРуководителемЭкономиста);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеРуководителем);
		// } Сторчевой А.Н. 7796764
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФОПриемник Тогда 
		
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФО);
		//Сторчевой А.Н. 7796764 {
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.СогласованиеЭкономистомМКРПриемника);
		// } Сторчевой А.Н. 7796764
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФУ Тогда 
	
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФО);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФОПриемника);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеЦФУПриемник Тогда 
	
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУ);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеПВП Тогда  
		
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеДЭИ);
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеСотрудникомДК);	
		
	//АБС Коломиец 19255, 190806-	
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРекласификацииБюджета.СогласованиеБК Тогда  
		
		СпТочек.Добавить(БизнесПроцессы.абсРекласификацияБюджета.ТочкиМаршрута.ДействиеСогласованиеРуководителемЦФУ);
		
	КонецЕсли;
			
	Возврат абс_БизнесПроцессы.НайтиЗадачуЗЗ(БП, СпТочек ,, Ложь);

КонецФункции

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;	
	
	//АБС ВСТАВКА №30939 НАЧАЛО «26 января 2015 г.», Пополитов
	Если Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Проведен и Ссылка.ПометкаУдаления <> ПометкаУдаления Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("В статусе «проведён», запрещено менять признак пометки удаления!", Отказ);
		Возврат;
	КонецЕсли;	
 	//\\АБС ВСТАВКА №30939 КОНЕЦ
 		
	Если ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") 
		или ТипЗнч(ДокументОснование) = Тип("ДокументСсылка.АвансовыйОтчет") Тогда
		
		Если НЕ ЗначениеЗаполнено(ДокументОснованиеЗЗ) и НЕ СписыватьЛимит Тогда
			Сообщить("Документ лимитов не заполнен, лимиты не изменены!");
		КонецЕсли;			
		
	КонецЕсли;
	
	Если абс_БюджетированиеПривилегированный.СписыватьЛимитПоЗЗ(ДокументОснованиеЗЗ) Тогда
		СписыватьЛимит = истина;	
	КонецЕсли;
		
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус = Перечисления.абс_СтатусыРекласификацииБюджета.Подготовка;
	
	//Сторчевой А.Н. 77177034 19.08.2017 {
	Если ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами Тогда
		//Приравняем аналитики приемника и источника
		ПриемникЦФУ = ИсточникЦФУ;
		ПриемникЦФО = ИсточникЦФО;
		ПриемникОрганизация = ИсточникОрганизация;
		ПриемникСтатьяОборотов = ИсточникСтатьяОборотов;
		ПриемникТипКонтрагента = ИсточникТипКонтрагента;
		ПриемникТипРасхода = ИсточникТипРасхода;
		ПриемникТЭО = ИсточникТЭО;
		ПриемникТипСети = ИсточникТипСети;
		ПриемникКВ = ИсточникКВ;
	КонецЕсли;
	// } Сторчевой А.Н. 77177034 19.08.2017
	
КонецПроцедуры

//АБС Коломиец 19255
Функция НеобходимоУтверждениеПВП() Экспорт  
	
	//ОрганизацияСогласование78 = Константы.абс_Согласование78БюджетаВключитьДля.Получить();
	//Если ОрганизацияСогласование78 <> Справочники.Организации.ПустаяСсылка() 
	//	И ИсточникОрганизация <> ОрганизацияСогласование78
	//	И ПриемникОрганизация <> ОрганизацияСогласование78 Тогда
	//	Возврат Ложь;
	//КонецЕсли;
	//
	//ПределСуммыУтверждения = абс_БизнесПроцессы.ПолучитьПределСуммыУтвержденияПоРоли(
	//Перечисления.абсВидыБизнесПроцессовТТК.СогласованиеПланаБюджета, 
	//Справочники.РолиИсполнителей.ПервыйВицеПрезидент);
	//
	//Если ((ЗначениеЗаполнено(ИсточникСтатьяОборотов) И ИсточникСтатьяОборотов.абс_Согласование78)
	//	ИЛИ (ЗначениеЗаполнено(ПриемникСтатьяОборотов) И ПриемникСтатьяОборотов.абс_Согласование78))				
	//	И Сумма >= ПределСуммыУтверждения  Тогда
	//	Возврат Истина;
	//Иначе
	//	Возврат Ложь;
	//КонецЕсли;
	
	Если ПриемникСтатьяОборотов.абс_СверхБюджет ИЛИ ИсточникСтатьяОборотов.абс_СверхБюджет Тогда 
	     Возврат Истина;
	 Иначе		 
		 Возврат Ложь;		
	КонецЕсли;
	
КонецФункции

//АБС ВСТАВКА №000021274 НАЧАЛО
Функция БюджетныйКонтрольВкл() Экспорт
	
	Если не Константы.абс_ПомесячноеЗакрытиеУправленческихОпераций.Получить() Тогда
		Возврат Ложь;
	КонецЕсли;	
	
	МассивПериодов = Новый Массив;
	МассивПериодов.Добавить(НачалоМесяца(ИсточникПериодМесяц));
	МассивПериодов.Добавить(НачалоМесяца(ПриемникПериодМесяц));
	Для каждого Строка Из Периоды Цикл
		Если не ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносЛимитовМеждуПериодами Тогда
			Продолжить;
		КонецЕсли;		
		Если ЗначениеЗаполнено(Строка.Сумма) Тогда
			МассивПериодов.Добавить(НачалоМесяца(Строка.ИсточникПериодМесяц));
		КонецЕсли;
		Если ЗначениеЗаполнено(Строка.СуммаНовая) Тогда
			МассивПериодов.Добавить(НачалоМесяца(Строка.ПриемникПериодМесяц));
		КонецЕсли;
	КонецЦикла;	
	
	МассивСтатусОрганизации = Новый Массив;
	МассивСтатусОрганизации.Добавить(ИсточникОрганизация.абс_СтатусОрганизации);
	МассивСтатусОрганизации.Добавить(ПриемникОрганизация.абс_СтатусОрганизации);	
	
	МассивБюджетнаяСтатья = Новый Массив;
	МассивБюджетнаяСтатья.Добавить(ИсточникСтатьяОборотов);
	МассивБюджетнаяСтатья.Добавить(ПриемникСтатьяОборотов);	
	
	Запрос = Новый Запрос;          
	Запрос.УстановитьПараметр("МассивПериодов",МассивПериодов);
	Запрос.УстановитьПараметр("СтатусОрганизации",МассивСтатусОрганизации);
	Запрос.УстановитьПараметр("БюджетнаяСтатья",МассивБюджетнаяСтатья);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ЗакрытиеУУ.Ссылка
	               |ПОМЕСТИТЬ вр
	               |ИЗ
	               |	Справочник.абс_ЗакрытиеУправленческихОпераций.ПериодЗакрытия КАК ЗакрытиеУУ
	               |ГДЕ
	               |	(НЕ ЗакрытиеУУ.Ссылка.ПометкаУдаления)
	               |	И НАЧАЛОПЕРИОДА(ЗакрытиеУУ.Период, МЕСЯЦ) В (&МассивПериодов)
	               |	И ЗакрытиеУУ.Закрыт
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей.Ссылка КАК Ссылка
	               |ИЗ
	               |	Справочник.абс_ЗакрытиеУправленческихОпераций.СписокБюджетныхСтатей КАК абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей
	               |ГДЕ
	               |	абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей.Ссылка В
	               |			(ВЫБРАТЬ
	               |				вр.Ссылка
	               |			ИЗ
	               |				вр КАК вр)
	               |	И ВЫБОР
	               |			КОГДА ЗНАЧЕНИЕ(Перечисление.абс_СтатусОрганизации.ГоловнаяОрганизация) В (&СтатусОрганизации)
	               |				ТОГДА абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей.КТТК
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА ЗНАЧЕНИЕ(Перечисление.абс_СтатусОрганизации.ДЗО) В (&СтатусОрганизации)
	               |				ТОГДА абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей.ДЗО
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	И ВЫБОР
	               |			КОГДА ЗНАЧЕНИЕ(Перечисление.абс_СтатусОрганизации.Филиал) В (&СтатусОрганизации)
	               |				ТОГДА абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей.Филиал
	               |			ИНАЧЕ ИСТИНА
	               |		КОНЕЦ
	               |	И абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей.БюджетнаяСтатья В(&БюджетнаяСтатья)
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	абс_ЗакрытиеУправленческихОперацийСписокБюджетныхСтатей.Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ вр";
	                         	
	Возврат не Запрос.Выполнить().Пустой();
	                         	
КонецФункции	
//АБС ВСТАВКА №000021274 КОНЕЦ

//АБС ВСТАВКА №28348 НАЧАЛО «14 октября 2014 г.», Пополитов
Функция ПоказыватьПериодЗакладкой() Экспорт
	Возврат (мПериоды <> '00010101' И Дата >= мПериоды) И не ВидОперации = Перечисления.абс_ВидыОперацийРекласификацияБюджета.ПереносФактаИсполненияБюджета;
КонецФункции		
//\\АБС ВСТАВКА №28348 КОНЕЦ

врФакт = глЗначениеПеременной("абс_СценарийДляФакта");
мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь);
мПериоды =  Константы.абс_ДатаНачалаИспользованияПериодовВРеклассе.Получить();