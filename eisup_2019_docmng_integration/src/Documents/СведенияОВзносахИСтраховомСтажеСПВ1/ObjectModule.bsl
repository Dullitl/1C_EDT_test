
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// Проверяет правильность заполнения документа
//
Процедура ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, РезультатЗапросаПоЗаписямСтажа = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок =  "Проверка документа " + СокрЛП(Ссылка);
	
	Обработка = глЗначениеПеременной("глОбработкаСообщений");
	СообщенияРазделПроверки = Обработка.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Информация);

	//Проверка корректности заполнения документа
	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	
	
	Отказ = Ложь;
	КоличествоДокументов = ВыборкаПоШапкеДокумента.Количество;
	Если КоличествоДокументов = 0 Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Список застрахованных лиц пуст!", Отказ, Заголовок,,, СообщенияРазделПроверки);
	КонецЕсли;
	Если КоличествоДокументов > 200 Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("В документе должно быть не более 200 форм!", Отказ, Заголовок,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок,,, СообщенияРазделПроверки);
	ИначеЕсли СтрДлина(СокрЛП(ВыборкаПоШапкеДокумента.ОрганизацияРегистрационныйНомерПФР)) <> 14 Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Предупреждение: Регистрационный номер организации в ПФР скорее всего неправильный",,Заголовок,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.ОтчетныйПериод) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан отчетный период!", Отказ, Заголовок,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КатегорияЗастрахованныхЛиц) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указана категория застрахованных лиц!", Отказ, Заголовок,,, СообщенияРазделПроверки);
	КонецЕсли;
	
	РезультатЗапросаПоТЧ = СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента);
	ВыборкаПоСтрокамДокумента = РезультатЗапросаПоТЧ.Выбрать();
	Пока ВыборкаПоСтрокамДокумента.Следующий() цикл
		
	   	СтрокаНачалаСообщенияОбОшибке = "В строке номер """+ СокрЛП(ВыборкаПоСтрокамДокумента.НомерСтроки);
		
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ФизЛицо) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ": Не выбран сотрудник!", Отказ, Заголовок,,, СообщенияРазделПроверки);
		Иначе
			СтрокаНачалаСообщенияОбОшибке = СтрокаНачалаСообщенияОбОшибке + " по сотруднику " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + ": ";
			
			Если Не ВыборкаПоСтрокамДокумента.ФизЛицоРаботаетВОрганизации тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- не зарегистрирован(а) как сотрудник организации " + ВыборкаПоШапкеДокумента.ОрганизацияНаименование, Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			
			СтраховойНомерПФР = ВыборкаПоСтрокамДокумента.СтраховойНомерПФР;
			Если Не ЗначениеЗаполнено(СтраховойНомерПФР) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задан страховой номер!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			ИначеЕсли Не РегламентированнаяОтчетность.СтраховойНомерПФРСоответствуетТребованиям(СтраховойНомерПФР) тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Задан неверный страховой номер!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Фамилия) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задана фамилия!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.Имя) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- Не задано имя!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.УплаченоНакопительная) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НачисленоНакопительная) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.УплаченоСтраховая) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НачисленоСтраховая) И Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.КоличествоЗаписейОСтаже) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + "- У сотрудника отсутствуют данные о стаже и суммы взносов!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
			
			//Контроль дубля строк
			Если ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки) Тогда
				ОбщегоНазначения.ВывестиИнформациюОбОшибке("Строка №" + ВыборкаПоСтрокамДокумента.НомерПовторяющейсяСтроки + ": Сотрудник " + ВыборкаПоСтрокамДокумента.ФизЛицоНаименование + " указан в документе дважды!", Отказ, Заголовок,,, СообщенияРазделПроверки);
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ВыборкаПоСтрокамДокумента.ДатаСоставления) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(СтрокаНачалаСообщенияОбОшибке + ": Не указана дата составления!", Отказ, Заголовок,,, СообщенияРазделПроверки);
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаФизлиц = РезультатЗапросаПоТЧ.Выгрузить();
	Отказ = Отказ Или Не ПроцедурыПерсонифицированногоУчета.СЗВ6_ПроверитьНаборЗаписейОСтаже(Ссылка, ТаблицаФизлиц, РезультатЗапросаПоЗаписямСтажа, Истина, СообщенияРазделПроверки);
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		Обработка.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , СообщенияРазделПроверки);		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьПравильностьЗаполненияДокумента()
	
// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	СтруктураМакетов = Новый Структура;
	СтруктураМакетов.Вставить("ФормаСПВ1", "Форма СПВ-1");
	
	Возврат СтруктураМакетов;
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#Если Клиент Тогда

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ИмяМакета = "ФормаСПВ1" Тогда
		
		Возврат ПроцедурыПерсонифицированногоУчета.ПечатнаяФормаСЗВ_6(ЭтотОбъект, "СПВ-1", ИмяМакета, КоличествоЭкземпляров, НаПринтер)
		
	КонецЕсли;
	
КонецФункции // Печать()

#КонецЕсли

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ, ПроверятьДанные = Истина, РезультатЗапросаПоЗаписямСтажа = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках 
	Заголовок = "Формирование файла по документу " + СокрЛП(ЭтотОбъект);
	
	//Проверка корректности заполнения документа
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	Если ПроверятьДанные Тогда
		ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа);
	КонецЕсли;
	
	Если Отказ тогда
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат "";
	КонецЕсли;	 
	
	Возврат ПроцедурыПерсонифицированногоУчета.ФайлСведенийОВзносахИСтаже(ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа, ВыборкаПоШапкеДокумента.Количество, Заголовок, Отказ)
	
КонецФункции 

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке() Экспорт 

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",	Ссылка);
	Запрос.УстановитьПараметр("Руководитель",	Руководитель);
	Запрос.УстановитьПараметр("ДатаФИО",		Дата);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СУММА(Застрахованные.НачисленоСтраховая) КАК НачисленоСтраховая,
	|	СУММА(Застрахованные.УплаченоСтраховая) КАК УплаченоСтраховая,
	|	СУММА(Застрахованные.НачисленоНакопительная) КАК НачисленоНакопительная,
	|	СУММА(Застрахованные.УплаченоНакопительная) КАК УплаченоНакопительная,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Застрахованные.НомерСтроки) КАК Количество
	|ПОМЕСТИТЬ ВТИтоги
	|ИЗ
	|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1.РаботникиОрганизации КАК Застрахованные
	|ГДЕ
	|	Застрахованные.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.ФизЛицо ЕСТЬ NULL 
	|			ТОГДА ФизическиеЛица.Наименование
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество
	|	КОНЕЦ КАК ФИОРуководителя
	|ПОМЕСТИТЬ ВТФИОРуководителя
	|ИЗ
	|	Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&ДатаФИО, ФизЛицо = &Руководитель) КАК ФИОФизЛицСрезПоследних
	|		ПО ФизическиеЛица.Ссылка = ФИОФизЛицСрезПоследних.ФизЛицо
	|ГДЕ
	|	ФизическиеЛица.Ссылка = &Руководитель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка КАК Ссылка,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Дата КАК Дата,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Дата КАК Период,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Номер КАК Номер,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация КАК Организация,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.НомерПачки,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод КАК КорректируемыйПериод,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.КатегорияЗастрахованныхЛиц,
	|	""СПВ-1"" КАК ТипФормДокументов,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ДолжностьРуководителя.Наименование КАК РуководительДолжность,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.Наименование,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ЮрФизЛицо КАК ОрганизацияЮрФизЛицо,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ОГРН КАК ОрганизацияОГРН,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.НаименованиеОКОПФ КАК ОрганизацияНаименованиеОКОПФ,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.НаименованиеПолное,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.НаименованиеСокращенное,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.РегистрационныйНомерПФР,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ИНН,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.КПП,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Организация.КодПоОКПО КАК ОКПО,
	|	ВЫБОР
	|		КОГДА СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА СведенияОВзносахИСтраховомСтажеСПВ1.Организация
	|		ИНАЧЕ СведенияОВзносахИСтраховомСтажеСПВ1.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация,
	|	Итоги.НачисленоСтраховая,
	|	Итоги.УплаченоСтраховая,
	|	Итоги.НачисленоНакопительная,
	|	Итоги.УплаченоНакопительная,
	|	Итоги.Количество,
	|	ЕСТЬNULL(ФИОФизЛиц.ФИОРуководителя, """") КАК Руководитель,
	|	ГОД(СведенияОВзносахИСтраховомСтажеСПВ1.ОтчетныйПериод) КАК Год,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ФорматФайла,
	|	СведенияОВзносахИСтраховомСтажеСПВ1.ТипСведенийСЗВ
	|ИЗ
	|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1 КАК СведенияОВзносахИСтраховомСтажеСПВ1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИОРуководителя КАК ФИОФизЛиц
	|		ПО (ИСТИНА)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИтоги КАК Итоги
	|		ПО (ИСТИНА)
	|ГДЕ
	|	СведенияОВзносахИСтраховомСтажеСПВ1.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

Функция СформироватьЗапросПоРаботникиОрганизации(ВыборкаПоШапкеДокумента)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка",			ВыборкаПоШапкеДокумента.Ссылка);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",	ВыборкаПоШапкеДокумента.ГоловнаяОрганизация);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗастрахованныеЛица.Ссылка КАК Ссылка,
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	ЗастрахованныеЛица.НомерСтроки КАК НомерСтроки,
	|	ЗастрахованныеЛица.СтраховойНомерПФР,
	|	ЗастрахованныеЛица.Фамилия,
	|	ЗастрахованныеЛица.Имя,
	|	ЗастрахованныеЛица.Отчество,
	|	ЗастрахованныеЛица.НачисленоСтраховая,
	|	ЗастрахованныеЛица.УплаченоСтраховая,
	|	ЗастрахованныеЛица.НачисленоНакопительная,
	|	ЗастрахованныеЛица.УплаченоНакопительная,
	|	ЗастрахованныеЛица.ДатаСоставления,
	|	ЗастрахованныеЛица.Ссылка.Организация,
	|	ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц,
	|	ЗастрахованныеЛица.Ссылка.ОтчетныйПериод
	|ПОМЕСТИТЬ ВТЗастрахованныеЛица
	|ИЗ
	|	Документ.СведенияОВзносахИСтраховомСтажеСПВ1.РаботникиОрганизации КАК ЗастрахованныеЛица
	|ГДЕ
	|	ЗастрахованныеЛица.Ссылка = &ДокументСсылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки,
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТЧРаботникиОрг.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТЗарегистрированныеСотрудниками
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ТЧРаботникиОрг
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|		ПО ТЧРаботникиОрг.ФизЛицо = СотрудникиОрганизаций.Физлицо
	|			И (СотрудникиОрганизаций.Организация = &ГоловнаяОрганизация)
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка ЕСТЬ НЕ NULL 
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗастрахованныеЛица.ФизЛицо КАК ФизЛицо,
	|	КОЛИЧЕСТВО(ЗаписиОСтажеДляСЗВ4.НомерОсновнойЗаписи) КАК КоличествоЗаписей
	|ПОМЕСТИТЬ ВТДанныеОСтаже
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ЗастрахованныеЛица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаписиОСтажеДляСЗВ4 КАК ЗаписиОСтажеДляСЗВ4
	|		ПО ЗастрахованныеЛица.ФизЛицо = ЗаписиОСтажеДляСЗВ4.ФизЛицо
	|			И ЗастрахованныеЛица.Ссылка.ОтчетныйПериод = ЗаписиОСтажеДляСЗВ4.ОтчетныйПериод
	|			И ЗастрахованныеЛица.Ссылка.Организация = ЗаписиОСтажеДляСЗВ4.ОбособленноеПодразделение
	|			И ЗастрахованныеЛица.Ссылка.КатегорияЗастрахованныхЛиц = ЗаписиОСтажеДляСЗВ4.КатегорияЗастрахованныхЛиц
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗастрахованныеЛица.ФизЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ВтораяТаблица.НомерСтроки) КАК НомерПовторяющейсяСтроки,
	|	ПерваяТаблица.Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки КАК НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.УплаченоСтраховая,
	|	ПерваяТаблица.НачисленоНакопительная,
	|	ПерваяТаблица.УплаченоНакопительная,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ФизЛицоРаботаетВОрганизации,
	|	ПерваяТаблица.ДатаСоставления,
	|	"""" КАК АдресДляИнформирования,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоЗаписей, 0) КАК КоличествоЗаписейОСтаже
	|ИЗ
	|	ВТЗастрахованныеЛица КАК ПерваяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗарегистрированныеСотрудниками КАК ЗарегистрированныеСотрудниками
	|		ПО ПерваяТаблица.НомерСтроки = ЗарегистрированныеСотрудниками.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗастрахованныеЛица КАК ВтораяТаблица
	|		ПО ПерваяТаблица.ФизЛицо = ВтораяТаблица.ФизЛицо
	|			И ПерваяТаблица.НомерСтроки < ВтораяТаблица.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОСтаже КАК ДанныеОСтаже
	|		ПО ПерваяТаблица.ФизЛицо = ДанныеОСтаже.ФизЛицо
	|
	|СГРУППИРОВАТЬ ПО
	|	ПерваяТаблица.Ссылка,
	|	ПерваяТаблица.ФизЛицо,
	|	ПерваяТаблица.НомерСтроки,
	|	ПерваяТаблица.СтраховойНомерПФР,
	|	ПерваяТаблица.Фамилия,
	|	ПерваяТаблица.Имя,
	|	ПерваяТаблица.Отчество,
	|	ПерваяТаблица.НачисленоСтраховая,
	|	ПерваяТаблица.УплаченоСтраховая,
	|	ПерваяТаблица.НачисленоНакопительная,
	|	ПерваяТаблица.УплаченоНакопительная,
	|	ПерваяТаблица.ФизЛицо.Наименование,
	|	ВЫБОР
	|		КОГДА ЗарегистрированныеСотрудниками.НомерСтроки ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ,
	|	ПерваяТаблица.ДатаСоставления,
	|	ПерваяТаблица.Организация,
	|	ПерваяТаблица.КатегорияЗастрахованныхЛиц,
	|	ПерваяТаблица.ОтчетныйПериод,
	|	ЕСТЬNULL(ДанныеОСтаже.КоличествоЗаписей, 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоРаботникиОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)

	Если Проведен И ПринятоВПФР Тогда
		Возврат
	КонецЕсли;
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапке().Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	РезультатЗапросаПоЗаписямСтажа = Неопределено;
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, РезультатЗапросаПоЗаписямСтажа);
	
	Если Отказ тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	//При проведении файл формируем заново 
	ТекстФайла = СформироватьВыходнойФайл(Отказ, Ложь, РезультатЗапросаПоЗаписямСтажа);
	
	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Файл формы СПВ-1";
	Запись.Данные = ТекстФайла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат
	КонецЕсли;
	
	Год = Год(ОтчетныйПериод);
	
	ПроцедурыПерсонифицированногоУчета.ПроставитьНомерПачки(ЭтотОбъект);
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");
	
	Если ТипСведенийСЗВ = Перечисления.ТипыСведенийСЗВ.ОТМЕНЯЮЩАЯ Тогда
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			СтрокаТЧ.НачисленоНакопительная = 0;
			СтрокаТЧ.НачисленоСтраховая = 0;
			СтрокаТЧ.УплаченоНакопительная = 0;
			СтрокаТЧ.УплаченоСтраховая = 0;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Отказ = ПринятоВПФР;
	Если Не Отказ Тогда
		Для Каждого Набор Из Движения Цикл
			Набор.Очистить();
			Набор.Записать();
		КонецЦикла
	КонецЕсли;
	
КонецПроцедуры // ОбработкаУдаленияПроведения()


