
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	//АБС ВСТАВКА 38320  31.01.2014 19:16:46  Пугачев
	#Если Клиент Тогда
		абс_БСПОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени(Справочники.абс_БСПКлючевыеОперации.РаспределениеТЗР_Проведение);
	#Иначе
		ВремяНачала = абс_БСПОценкаПроизводительностиКлиентСервер.НачатьЗамерВремени();
	#КонецЕсли
	//АБС ВСТАВКА 38320 КОНЕЦ 
	
	НЗП_БУ = Движения.НезавершенноеПроизводствоБухгалтерскийУчет;
	НЗП_НУ = Движения.НезавершенноеПроизводствоНалоговыйУчет;
	
	//БУ
	Если ОтражатьВБухгалтерскомУчете Тогда
		
		Счет1501БУ = ПланыСчетов.Хозрасчетный.ЗаготовлениеИПриобретениеМатериалов;
		Счет1601БУ = ПланыСчетов.Хозрасчетный.ОтклонениеВСтоимостиМатериалов;
		Счет10БУ =  ПланыСчетов.Хозрасчетный.Материалы;
		СуммаОтклоненияБУ = 0;
		мПроводкиБУ   = Движения.Хозрасчетный;
		
		//расчет остатка Дт сч.15
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстатки.СуммаОстатокДт,
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&Дата, Счет = &Счет, , Организация = &Организация) КАК ХозрасчетныйОстатки";
		
		Запрос.УстановитьПараметр("Дата", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет1501БУ);
		
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		КСуммеДт16 = Результат.Выгрузить().Итог("СуммаОстатокДт"); 
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ПроводкаБУ = мПроводкиБУ.Добавить();
			ПроводкаБУ.Период       = КонецМесяца(ПериодРегистрации);
			ПроводкаБУ.Организация  = Организация;
			
			ПроводкаБУ.СчетДт       = Счет1601БУ;
			
			ПроводкаБУ.СчетКт       = Счет1501БУ;
			БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
			
			ПроводкаБУ.Сумма        = ВыборкаДетальныеЗаписи.СуммаОстатокДт;
			ПроводкаБУ.Содержание   = "";
			ПроводкаБУ.НомерЖурнала = "";
		КонецЦикла;
		
		
		//ОПРЕДЕЛЕНИЕ СУММЫ ОТКЛОНЕНИЯ
		
		//СНДТ16
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет = &Счет, , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет1601БУ);
		
		СНДТ16 = Запрос.Выполнить().Выгрузить().Итог("СуммаНачальныйОстатокДт");
		
		//СНДТ10
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет10БУ);
		
		СНДТ10 = Запрос.Выполнить().Выгрузить().Итог("СуммаНачальныйОстатокДт");
		
		//ОБОРОТ ДТ16
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет1601БУ);
		
		ДТ16 = Запрос.Выполнить().Выгрузить().Итог("СуммаОборотДт");
		
		//ОБОРОТ ДТ10
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет10БУ);
		
		ДТ10 = Запрос.Выполнить().Выгрузить().Итог("СуммаОборотДт");
		
		//ОБОРОТ КТ10
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет10БУ);
		
		КТ10 = Запрос.Выполнить().Выгрузить().Итог("СуммаОборотКт");
		
		Если НЕ (СНДТ10 = 0 И ДТ10 = 0) Тогда
			СуммаОтклоненияБУ = ((СНДТ16 + ДТ16 + КСуммеДт16)*КТ10)/(СНДТ10 + ДТ10);
			Сообщить("СуммаОтклоненияБУ = ((СНДТ16 + ДТ16)*КТ10)/(СНДТ10 + ДТ10)");
			Сообщить(""+Формат(СуммаОтклоненияБУ,"ЧДЦ=2")+" = (("+СНДТ16+" + "+(ДТ16+КСуммеДт16)+")*"+КТ10+")/("+СНДТ10+" + "+ДТ10+")");
		КонецЕсли;
		
		//РАСПРЕДЕЛЕНИЕ
		Если СуммаОтклоненияБУ > 0 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			// АБС ИЗМЕНЕНИЕ 27735
			//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			//|	ОбъектыСтроительства.Ссылка
			//|ПОМЕСТИТЬ втЗакрытыеОбъектыСтроительства
			//|ИЗ
			//|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
			//|ГДЕ
			//|	ОбъектыСтроительства.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			//|	И ОбъектыСтроительства.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			//|;
			//|
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			//|	ХозрасчетныйОборотыДтКт.СчетДт,
			//|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
			//|	ХозрасчетныйОборотыДтКт.СубконтоДт2,
			//|	ХозрасчетныйОборотыДтКт.СубконтоДт3,
			//|	ХозрасчетныйОборотыДтКт.СчетКт,
			//|	ХозрасчетныйОборотыДтКт.СуммаОборот
			//|ИЗ
			//|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			//|			&ДатаНач,
			//|			&ДатаКон,
			//|			,
			//|			СчетДт В (&СчетДт),
			//|			,
			//|			СчетКт В ИЕРАРХИИ (&Счет),
			//|			,
			//|			Организация = &Организация
			//|				И (НЕ СубконтоДт1 В
			//|						(ВЫБРАТЬ
			//|							втЗакрытыеОбъектыСтроительства.Ссылка
			//|						ИЗ
			//|							втЗакрытыеОбъектыСтроительства))) КАК ХозрасчетныйОборотыДтКт";
			
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОбъектыСтроительства.Ссылка
			|ПОМЕСТИТЬ втЗакрытыеОбъектыСтроительства
			|ИЗ
			|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
			|ГДЕ
			|	ОбъектыСтроительства.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И ОбъектыСтроительства.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ХозрасчетныйОборотыДтКт.СчетДт,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт2,
			|	ХозрасчетныйОборотыДтКт.СубконтоДт3,
			|	ХозрасчетныйОборотыДтКт.СчетКт,
			|	ХозрасчетныйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			&ДатаНач,
			|			&ДатаКон,
			|			,
			|			СчетДт В (&СчетДт),
			|			,
			|			СчетКт В ИЕРАРХИИ (&Счет),
			|			,
			|			Организация = &Организация
			|				И НЕ СубконтоДт1 В
			|						(ВЫБРАТЬ
			|							втЗакрытыеОбъектыСтроительства.Ссылка
			|						ИЗ
			|							втЗакрытыеОбъектыСтроительства)
			|				И ВЫБОР
			|					КОГДА СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы
			|						ТОГДА НЕ(СубконтоДт1.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|										И СубконтоДт1.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|									ИЛИ СубконтоДт1.Проект <> ЗНАЧЕНИЕ(справочник.Проекты.ПустаяСсылка)
			|										И (СубконтоДт1.Проект.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|											И СубконтоДт1.Проект.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)))
			|					ИНАЧЕ ВЫБОР
			|							КОГДА СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы
			|								ТОГДА НЕ(СубконтоДт2.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|												И СубконтоДт2.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|											ИЛИ СубконтоДт2.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
			|												И (СубконтоДт2.Проект.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|													И СубконтоДт2.Проект.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)))
			|							ИНАЧЕ ВЫБОР
			|									КОГДА СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы
			|										ТОГДА НЕ(СубконтоДт3.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|														И СубконтоДт3.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|													ИЛИ СубконтоДт3.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
			|														И (СубконтоДт3.Проект.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|															И СубконтоДт3.Проект.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)))
			|									ИНАЧЕ ИСТИНА
			|								КОНЕЦ
			|						КОНЕЦ
			|				КОНЕЦ) КАК ХозрасчетныйОборотыДтКт";
            // АБС ИЗМЕНЕНИЕ 27735 КОНЕЦ
			
			Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("Счет", Счет10БУ);
			
			СчетДт10БУ = Новый СписокЗначений;
			СчетДт10БУ.Добавить(ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств);  //08.03
			СчетДт10БУ.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоНеОблагаемоеЕНВД);  //20.01.1
			СчетДт10БУ.Добавить(ПланыСчетов.Хозрасчетный.ОбщепроизводственныеРасходыНеОблагаемыеЕНВД); //25.01.
			Запрос.УстановитьПараметр("СчетДт", СчетДт10БУ);			
			
			ТаблицаПодРаспределение = Запрос.Выполнить().Выгрузить();
			
			//абсо{
			//заявка 9930
			//убрать из распределения объекты с датой закрытия
			// !!! исправлен запрос !!!
			//СписокУдаляемыхСтрок = Новый СписокЗначений;
			//Для каждого СтрокаТР из ТаблицаПодРаспределение Цикл
			//	Если СтрокаТР.СчетДт = ПланыСчетов.Хозрасчетный.СтроительствоОбъектовОсновныхСредств
			//		И ЗначениеЗаполнено(СтрокаТР.абс_ДатаЗакрытия) Тогда
			//		СписокУдаляемыхСтрок.Добавить(СтрокаТР);
			//	КонецЕсли;
			//КонецЦикла;
			//Для Каждого УдаляемаяСтрока Из СписокУдаляемыхСтрок Цикл
			//	ТаблицаПодРаспределение.Удалить(УдаляемаяСтрока.Значение);
			//КонецЕсли;
			//}абсо
			
			ИтогоСписано = ТаблицаПодРаспределение.Итог("СуммаОборот");
			
			ТаблицаПодРаспределение.Колонки.Добавить("СуммаНаЗатраты");
			
			Для каждого Строка Из ТаблицаПодРаспределение Цикл
				Кф = Строка.СуммаОборот / ИтогоСписано;
				Строка.СуммаНаЗатраты = СуммаОтклоненияБУ * Кф; 
			КонецЦикла;
			
			// АБС ВСТАВКА 
			абс_ПостроительОтчета = Новый ПостроительОтчета(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НоменклатурныеГруппы.Ссылка
			|ИЗ
			|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
			|{ГДЕ
			|	НоменклатурныеГруппы.Ссылка.* КАК НоменклатурнаяГруппа}");
									
			абс_ПостроительОтчета.ЗаполнитьНастройки();	
			НастройкиПостроителя = абс_Построитель.Получить();
			
			Если ТипЗнч(НастройкиПостроителя) = Тип("НастройкиПостроителяОтчета") Тогда
				абс_ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя, Истина, Ложь, Ложь, Ложь, Ложь);
			КонецЕсли;
			
			ЕстьОтбор = Ложь;
			
			Для Каждого ОтборПостроителя Из абс_ПостроительОтчета.Отбор Цикл
				
				ЕстьОтбор = ЕстьОтбор ИЛИ ОтборПостроителя.Использование;
				
			КонецЦикла;
			
			СписокНГ = Неопределено;
			
			Если НЕ ЕстьОтбор Тогда
				Сообщить("Бухгалтерский учет. Не заполнен отбор по НГ. Закрытие 20-го счета может произойти некорреткно");
				СписокНГ = Новый  Массив;
			КонецЕсли;
			
			абс_ПостроительОтчета.Выполнить();
			СписокНГ = абс_ПостроительОтчета.Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			// АБС ВСТАВКА КОНЕЦ
			
			
			Для каждого Строка Из ТаблицаПодРаспределение Цикл
				ПроводкаБУ = мПроводкиБУ.Добавить();
				ПроводкаБУ.Период       = КонецМесяца(ПериодРегистрации);
				ПроводкаБУ.Организация  = Организация;
				
				ПроводкаБУ.СчетДт       = Строка.СчетДт;
				БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, 1, Строка.СубконтоДт1);
				БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, 2, Строка.СубконтоДт2);
				БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, 3, Строка.СубконтоДт3);
				
				ПроводкаБУ.СчетКт       = Счет1601БУ;
				
				ПроводкаБУ.Сумма        = Строка.СуммаНаЗатраты;
				ПроводкаБУ.Содержание   = "Списано отклонение в стоимости материалов";
				ПроводкаБУ.НомерЖурнала = "";
				
				//По регистру НЗП (БУ)
				//По-хорошему надо бы отобрать через построитель
				
				Если Строка.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоНеОблагаемоеЕНВД И 
					НЕ СписокНГ.Найти(Строка.СубконтоДт2) = Неопределено И ЕстьОтбор Тогда
					
					//Если (Строка.СчетДт = ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоНеОблагаемоеЕНВД)
					//	 и ((Строка.СубконтоДт2.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000030") ))   //торговля
					//	 или (Строка.СубконтоДт2.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000032")))  //Ситсемная интерграция
					//	 или (Строка.СубконтоДт2.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000021"))))Тогда   //строительство
					//
					НоваяЗапись = НЗП_БУ.Добавить();
					
					НоваяЗапись.Период = КонецМесяца(ПериодРегистрации);
					НоваяЗапись.Организация = Организация;
					НоваяЗапись.Активность = Истина;
					НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;				
					НоваяЗапись.Подразделение = Строка.СубконтоДт1;
					НоваяЗапись.СчетУчета = Строка.СчетДт;
					НоваяЗапись.СтатьяЗатрат = Строка.СубконтоДт3;
					НоваяЗапись.НоменклатурнаяГруппа = Строка.СубконтоДт2;
					НоваяЗапись.Затрата = Затрата;
					НоваяЗапись.Количество = 1;
					НоваяЗапись.Стоимость = Строка.СуммаНаЗатраты;
					НоваяЗапись.КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеПартийВПроизводствоОперативно;
					НоваяЗапись.СписаниеПартий = Истина;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
		мПроводкиБУ.Записать();
		НЗП_БУ.Записать();
	КонецЕсли;
	
	
	
	//НУ
	Если ОтражатьВНалоговомУчете Тогда
		
		мПроводкиНУ   = Движения.Налоговый;
		Счет1501НУ = ПланыСчетов.Налоговый.ЗаготовлениеИПриобретениеМатериалов;
		Счет1601НУ = ПланыСчетов.Налоговый.ОтклонениеВСтоимостиМатериалов;
		Счет10НУ =  ПланыСчетов.Налоговый.Материалы;
		СуммаОтклоненияНУ = 0;
		
		//расчет остатка Дт сч.15
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстатки.СуммаОстатокДт,
		|	ХозрасчетныйОстатки.Субконто1 КАК Номенклатура
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.Остатки(&Дата, Счет = &Счет, , Организация = &Организация) КАК ХозрасчетныйОстатки";
		
		Запрос.УстановитьПараметр("Дата",			КонецМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("Организация",	Организация);
		Запрос.УстановитьПараметр("Счет",			Счет1501НУ);
		
		Результат = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		
		КСуммеДт16 = Результат.Выгрузить().Итог("СуммаОстатокДт"); 
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			ПроводкаНУ = мПроводкиНУ.Добавить();
			ПроводкаНУ.Период       = КонецМесяца(ПериодРегистрации);
			ПроводкаНУ.Организация  = Организация;
			
			ПроводкаНУ.СчетДт       = Счет1601НУ;
			
			ПроводкаНУ.СчетКт       = Счет1501НУ;
			БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Номенклатура", ВыборкаДетальныеЗаписи.Номенклатура);
			
			ПроводкаНУ.Сумма        = ВыборкаДетальныеЗаписи.СуммаОстатокДт;
			ПроводкаНУ.Содержание   = "";
			ПроводкаНУ.НомерЖурнала = "";
		КонецЦикла;
		
		
		//ОПРЕДЕЛЕНИЕ СУММЫ ОТКЛОНЕНИЯ
		
		//СНДТ16
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет = &Счет, , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет1601НУ);
		
		СНДТ16 = Запрос.Выполнить().Выгрузить().Итог("СуммаНачальныйОстатокДт");
		
		//СНДТ10
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаНачальныйОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет10НУ);
		
		СНДТ10 = Запрос.Выполнить().Выгрузить().Итог("СуммаНачальныйОстатокДт");
		
		//ОБОРОТ ДТ16
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет1601НУ);
		
		ДТ16 = Запрос.Выполнить().Выгрузить().Итог("СуммаОборотДт");
		
		//ОБОРОТ ДТ10
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотДт
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет10НУ);
		
		ДТ10 = Запрос.Выполнить().Выгрузить().Итог("СуммаОборотДт");
		
		//ОБОРОТ КТ10
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ХозрасчетныйОстаткиИОбороты.СуммаОборотКт
		|ИЗ
		|	РегистрБухгалтерии.Налоговый.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстаткиИОбороты";
		
		Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
		Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Счет", Счет10НУ);
		
		КТ10 = Запрос.Выполнить().Выгрузить().Итог("СуммаОборотКт");
		
		Если НЕ (СНДТ10 = 0 И ДТ10 = 0) Тогда
			СуммаОтклоненияНУ = ((СНДТ16 + ДТ16 + КСуммеДт16)*КТ10)/(СНДТ10 + ДТ10);
			Сообщить("СуммаОтклоненияНУ = ((СНДТ16 + ДТ16)*КТ10)/(СНДТ10 + ДТ10)");
			Сообщить(""+Формат(СуммаОтклоненияНУ,"ЧДЦ=2")+" = (("+СНДТ16+" + "+(ДТ16+КСуммеДт16)+")*"+КТ10+")/("+СНДТ10+" + "+ДТ10+")");
		КонецЕсли;
		
		//РАСПРЕДЕЛЕНИЕ
		Если СуммаОтклоненияНУ > 0 Тогда
			Запрос = Новый Запрос;
			Запрос.Текст = 
			// АБС ИЗМЕНЕНИЕ 27735
			//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			//|	ОбъектыСтроительства.Ссылка
			//|ПОМЕСТИТЬ втЗакрытыеОбъектыСтроительства
			//|ИЗ
			//|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
			//|ГДЕ
			//|	ОбъектыСтроительства.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			//|	И ОбъектыСтроительства.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			//|;
			//|
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			//|	НалоговыйОборотыДтКт.СчетДт,
			//|	НалоговыйОборотыДтКт.СубконтоДт1,
			//|	НалоговыйОборотыДтКт.СубконтоДт2,
			//|	НалоговыйОборотыДтКт.СубконтоДт3,
			//|	НалоговыйОборотыДтКт.СчетКт,
			//|	НалоговыйОборотыДтКт.СуммаОборот
			//|ИЗ
			//|	РегистрБухгалтерии.Налоговый.ОборотыДтКт(
			//|			&ДатаНач,
			//|			&ДатаКон,
			//|			,
			//|			СчетДт В (&СчетДт),
			//|			,
			//|			СчетКт В ИЕРАРХИИ (&СчетКт),
			//|			,
			//|			Организация = &Организация
			//|				И (НЕ СубконтоДт1 В
			//|						(ВЫБРАТЬ
			//|							втЗакрытыеОбъектыСтроительства.Ссылка
			//|						ИЗ
			//|							втЗакрытыеОбъектыСтроительства))) КАК НалоговыйОборотыДтКт";
			
			
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	ОбъектыСтроительства.Ссылка
			|ПОМЕСТИТЬ втЗакрытыеОбъектыСтроительства
			|ИЗ
			|	Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
			|ГДЕ
			|	ОбъектыСтроительства.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|	И ОбъектыСтроительства.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НалоговыйОборотыДтКт.СчетДт,
			|	НалоговыйОборотыДтКт.СубконтоДт1,
			|	НалоговыйОборотыДтКт.СубконтоДт2,
			|	НалоговыйОборотыДтКт.СубконтоДт3,
			|	НалоговыйОборотыДтКт.СчетКт,
			|	НалоговыйОборотыДтКт.СуммаОборот
			|ИЗ
			|	РегистрБухгалтерии.Налоговый.ОборотыДтКт(
			|			&ДатаНач,
			|			&ДатаКон,
			|			,
			|			СчетДт В (&СчетДт),
			|			,
			|			СчетКт В ИЕРАРХИИ (&СчетКт),
			|			,
			|			Организация = &Организация
			|				И НЕ СубконтоДт1 В
			|						(ВЫБРАТЬ
			|							втЗакрытыеОбъектыСтроительства.Ссылка
			|						ИЗ
			|							втЗакрытыеОбъектыСтроительства)
			|				И ВЫБОР
			|					КОГДА СубконтоДт1 ССЫЛКА Справочник.НоменклатурныеГруппы
			|						ТОГДА НЕ(СубконтоДт1.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|										И СубконтоДт1.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|									ИЛИ СубконтоДт1.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
			|										И (СубконтоДт1.Проект.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|											И СубконтоДт1.Проект.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)))
			|					ИНАЧЕ ВЫБОР
			|							КОГДА СубконтоДт2 ССЫЛКА Справочник.НоменклатурныеГруппы
			|								ТОГДА НЕ(СубконтоДт2.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|												И СубконтоДт2.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|											ИЛИ СубконтоДт2.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
			|												И (СубконтоДт2.Проект.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|													И СубконтоДт2.Проект.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)))
			|							ИНАЧЕ ВЫБОР
			|									КОГДА СубконтоДт3 ССЫЛКА Справочник.НоменклатурныеГруппы
			|										ТОГДА НЕ(СубконтоДт3.абс_ДатаЗакрытия > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|														И СубконтоДт3.абс_ДатаЗакрытия <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)
			|													ИЛИ СубконтоДт3.Проект <> ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
			|														И (СубконтоДт3.Проект.ДатаОкончания > ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
			|															И СубконтоДт3.Проект.ДатаОкончания <= КОНЕЦПЕРИОДА(&ДатаНач, МЕСЯЦ)))
			|									ИНАЧЕ ИСТИНА
			|								КОНЕЦ
			|						КОНЕЦ
			|				КОНЕЦ) КАК НалоговыйОборотыДтКт"; 			
			// АБС ИЗМЕНЕНИЕ 27735
			
			Запрос.УстановитьПараметр("ДатаНач", НачалоМесяца(ПериодРегистрации));
			Запрос.УстановитьПараметр("ДатаКон", Новый Граница(КонецМесяца(ПериодРегистрации), ВидГраницы.Включая));
			Запрос.УстановитьПараметр("Организация", Организация);
			Запрос.УстановитьПараметр("СчетКт", Счет10НУ);
			
			СчетДтНУ = Новый СписокЗначений;
			СчетДтНУ.Добавить(ПланыСчетов.Налоговый.СтроительствоОбъектовОсновныхСредств);  //08.03
			СчетДтНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства);  //20.01.1
			СчетДтНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеРасходыОсновногоПроизводства);  //20.01.2
			СчетДтНУ.Добавить(ПланыСчетов.Налоговый.ПрямыеОбщепроизводственныеРасходы); //25.01.
			СчетДтНУ.Добавить(ПланыСчетов.Налоговый.КосвенныеОбщепроизводственныеРасходы); //25.02.
			Запрос.УстановитьПараметр("СчетДт", СчетДтНУ);			
			
			ТаблицаПодРаспределение = Запрос.Выполнить().Выгрузить();
			ИтогоСписано = ТаблицаПодРаспределение.Итог("СуммаОборот");
			
			ТаблицаПодРаспределение.Колонки.Добавить("СуммаНаЗатраты");
			
			Для каждого Строка Из ТаблицаПодРаспределение Цикл
				Кф = Строка.СуммаОборот / ИтогоСписано;
				Строка.СуммаНаЗатраты = СуммаОтклоненияНУ * Кф; 
			КонецЦикла;
			
			// АБС ВСТАВКА 
			абс_ПостроительОтчета = Новый ПостроительОтчета(
			"ВЫБРАТЬ РАЗРЕШЕННЫЕ
			|	НоменклатурныеГруппы.Ссылка
			|ИЗ
			|	Справочник.НоменклатурныеГруппы КАК НоменклатурныеГруппы
			|{ГДЕ
			|	НоменклатурныеГруппы.Ссылка.* КАК НоменклатурнаяГруппа}");
												
			абс_ПостроительОтчета.Параметры.Вставить("ДатаНач", НачалоМесяца(ПериодРегистрации));
						
			абс_ПостроительОтчета.ЗаполнитьНастройки();	
			НастройкиПостроителя = абс_Построитель.Получить();
			
			Если ТипЗнч(НастройкиПостроителя) = Тип("НастройкиПостроителяОтчета") Тогда
				абс_ПостроительОтчета.УстановитьНастройки(НастройкиПостроителя, Истина, Ложь, Ложь, Ложь, Ложь);
			КонецЕсли;
			
			ЕстьОтбор = Ложь;
			
			Для Каждого ОтборПостроителя Из абс_ПостроительОтчета.Отбор Цикл
				
				ЕстьОтбор = ЕстьОтбор ИЛИ ОтборПостроителя.Использование;
				
			КонецЦикла;
			
			СписокНГ = Неопределено;
			
			Если НЕ ЕстьОтбор Тогда
				Сообщить("Налоговый учет. Не заполнен отбор по НГ. Закрытие 20-го счета может произойти некорреткно");
			КонецЕсли;
			
			абс_ПостроительОтчета.Выполнить();
			СписокНГ = абс_ПостроительОтчета.Результат.Выгрузить().ВыгрузитьКолонку("Ссылка");
			
			// АБС ВСТАВКА КОНЕЦ
			
			
			Для каждого Строка Из ТаблицаПодРаспределение Цикл
				ПроводкаНУ = мПроводкиНУ.Добавить();
				ПроводкаНУ.Период       = КонецМесяца(ПериодРегистрации);
				ПроводкаНУ.Организация  = Организация;
				
				ПроводкаНУ.СчетДт       = Строка.СчетДт;
				БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 1, Строка.СубконтоДт1);
				БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 2, Строка.СубконтоДт2);
				БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 3, Строка.СубконтоДт3);
				
				ПроводкаНУ.СчетКт       = Счет1601НУ;
				
				ПроводкаНУ.Сумма        = Строка.СуммаНаЗатраты;
				ПроводкаНУ.Содержание   = "Списано отклонение в стоимости материалов";
				ПроводкаНУ.НомерЖурнала = "";
				
				Если Строка.СчетДт = ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства И 
					НЕ СписокНГ.Найти(Строка.СубконтоДт2) = Неопределено И ЕстьОтбор Тогда
					
					//Если (Строка.СчетДт = ПланыСчетов.Налоговый.ПрямыеРасходыОсновногоПроизводства)
					//	 и ((Строка.СубконтоДт2.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000030") ))   //торговля
					//	 или (Строка.СубконтоДт2.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000032")))  //Ситсемная интерграция
					//	 или (Строка.СубконтоДт2.ПринадлежитЭлементу(Справочники.НоменклатурныеГруппы.НайтиПоКоду("000000021")) ))Тогда   //строительство
					//
					НоваяЗапись = НЗП_НУ.Добавить();
					
					НоваяЗапись.Период = КонецМесяца(ПериодРегистрации);
					НоваяЗапись.Организация = Организация;
					НоваяЗапись.Активность = Истина;
					НоваяЗапись.ВидДвижения = ВидДвиженияНакопления.Приход;				
					НоваяЗапись.Подразделение = Строка.СубконтоДт1;
					НоваяЗапись.СчетУчета = Строка.СчетДт;
					НоваяЗапись.СтатьяЗатрат = Строка.СубконтоДт3;
					НоваяЗапись.НоменклатурнаяГруппа = Строка.СубконтоДт2;
					НоваяЗапись.Затрата = Затрата;
					НоваяЗапись.Количество = 1;
					НоваяЗапись.Стоимость = Строка.СуммаНаЗатраты;
					НоваяЗапись.КодОперации = Перечисления.КодыОперацийНезавершенноеПроизводство.СписаниеПартийВПроизводствоОперативно;
					НоваяЗапись.СписаниеПартий = Истина;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;		
		// Start КТТК Ермолов Е.Л.  19.03.2015 000031716
		Бух = Движения.Хозрасчетный.Итог("Сумма");
		Нал = мПроводкиНУ.Итог("Сумма");
		Если Бух <> Нал Тогда 
			ПроводкаНУ.Сумма = ПроводкаНУ.Сумма + Бух - Нал;
		КонецЕсли;
		// Stop КТТК Ермолов Е.Л.  19.03.2015
		
		мПроводкиНУ.Записать();
		НЗП_НУ.Записать();
		
		//Запрос = Новый Запрос;
		//Запрос.УстановитьПараметр("Регистратор", Ссылка);
		//
		//Запрос.Текст = "ВЫБРАТЬ
		//               |	ЕСТЬNULL(ХозрасчетныйДвиженияССубконто.СчетДт, """") КАК СчетДт,
		//               |	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
		//               |	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
		//               |	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
		//               |	ХозрасчетныйДвиженияССубконто.Сумма,
		//               |	ЕСТЬNULL(НалоговыйДвиженияССубконто.СчетДт, """") КАК СчетДтНУ,
		//               |	НалоговыйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1НУ,
		//               |	НалоговыйДвиженияССубконто.СубконтоДт2 КАК СубконтоДт2НУ,
		//               |	НалоговыйДвиженияССубконто.СубконтоДт3 КАК СубконтоДт3НУ,
		//               |	НалоговыйДвиженияССубконто.Сумма КАК СуммаНУ
		//               |ИЗ
		//               |	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК ХозрасчетныйДвиженияССубконто
		//               |		ПОЛНОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.ДвиженияССубконто(, , Регистратор = &Регистратор, , ) КАК НалоговыйДвиженияССубконто
		//               |		ПО ХозрасчетныйДвиженияССубконто.СубконтоДт1 = НалоговыйДвиженияССубконто.СубконтоДт1
		//               |			И ХозрасчетныйДвиженияССубконто.СубконтоДт2 = НалоговыйДвиженияССубконто.СубконтоДт2
		//               |			И ХозрасчетныйДвиженияССубконто.СубконтоДт3 = НалоговыйДвиженияССубконто.СубконтоДт3
		//               |			И ХозрасчетныйДвиженияССубконто.СчетДт.Код = НалоговыйДвиженияССубконто.СчетДт.Код";
		//			   
		//ВыборкаПров = Запрос.Выполнить().Выбрать();
		//
		//Пока ВыборкаПров.Следующий() Цикл      			    		
		//	Если ВыборкаПров.СчетДтНУ = "" Тогда 
		//		
		//		СчетДт		= ПланыСчетов.Налоговый.НайтиПоКоду(ВыборкаПров.СчетДт.Код);
		//		СубконтоДт1 = ВыборкаПров.СубконтоДт1;
		//		СубконтоДт2 = ВыборкаПров.СубконтоДт2;
		//		СубконтоДт3 = ВыборкаПров.СубконтоДт3;
		//											
		//		Сумма       = ВыборкаПров.Сумма;
		//		
		//	ИначеЕсли ВыборкаПров.СчетДт = "" Тогда    
		//		
		//		СчетДт		= ВыборкаПров.СчетДтНУ;
		//		СубконтоДт1 = ВыборкаПров.СубконтоДт1НУ;
		//		СубконтоДт2 = ВыборкаПров.СубконтоДт2НУ;
		//		СубконтоДт3 = ВыборкаПров.СубконтоДт3НУ;
		//		
		//		Сумма        = - ВыборкаПров.СуммаНУ;  				
		//	Иначе   				
		//		
		//		СчетДт      = ВыборкаПров.СчетДтНУ;
		//		СубконтоДт1 = ВыборкаПров.СубконтоДт1НУ;
		//		СубконтоДт2 = ВыборкаПров.СубконтоДт2НУ;
		//		СубконтоДт3 = ВыборкаПров.СубконтоДт3НУ;
		//			
		//		Сумма        = ВыборкаПров.Сумма - ВыборкаПров.СуммаНУ;
		//	КонецЕсли;   
		//	
		//	Если Сумма = 0 Тогда 
		//		Продолжить;
		//	КонецЕсли;			
		//	
		//	ПроводкаНУ = мПроводкиНУ.Добавить();
		//	ПроводкаНУ.Период       = КонецМесяца(ПериодРегистрации);
		//	ПроводкаНУ.Организация  = Организация;
		//	ПроводкаНУ.СчетКт       = Счет1601НУ;
		//	ПроводкаНУ.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР;
		//	ПроводкаНУ.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ВР;
		//	ПроводкаНУ.Содержание   = "Списано отклонение в стоимости материалов";
		//	ПроводкаНУ.НомерЖурнала = "";
		//	
		//	ПроводкаНУ.СчетДт       = СчетДт;
		//	БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 1, СубконтоДт1);
		//	БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 2, СубконтоДт2);
		//	БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, 3, СубконтоДт3);
		//							
		//	ПроводкаНУ.Сумма        = Сумма;  
		//КонецЦикла;
		//
		//мПроводкиНУ.Записать();
		
	КонецЕсли;
	
	//АБС ВСТАВКА 38320  31.01.2014 19:16:46  Пугачев
	#Если Клиент Тогда
		
	#Иначе
		абс_БСПОценкаПроизводительностиКлиентСервер.ЗакончитьЗамерВремени(Справочники.абс_БСПКлючевыеОперации.РаспределениеТЗР_Проведение, ВремяНачала);
	#КонецЕсли
	//АБС ВСТАВКА 38320 КОНЕЦ 
КонецПроцедуры
