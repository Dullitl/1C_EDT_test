
//////////////////////////////////////////////////////////////////////////////////
// Обработчики событий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения)=Тип("ДокументСсылка.абс_КомплектацияОС") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ЗаполнитьПоДокументу_абс_КомплектацияОС(ДанныеЗаполнения);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Не ЗначениеЗаполнено(ДокументОснование) Тогда 
		Возврат;
	КонецЕсли;	
	
	Если Не ДополнительныеСвойства.ЭтоНовый Тогда
		абс_ПроведениеДокументов.УдалитьДвиженияРегистратора(Ссылка);
	КонецЕсли;
	
	Движения.абс_МеждународныйОСРЖД.Записывать = Истина;
	Движения.абс_ОсновныеСредстваРЖД.Записывать = Истина;
	Движения.абс_СтоимостьОСРЖД.Записывать = Истина;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	НачалоПериода = НачалоМесяца(Дата);
	КонецПериода = КонецМесяца(Дата);
	
	СтруктураЗапросов = Документы.абс_КомплектацияОСРЖД.ПолучитьСтруктуруЗапросовПроведения();
	
	ПустыеСубконто = ПолучитьПустыеСубконто();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", НачалоПериода);
	Запрос.УстановитьПараметр("ПустыеСубконто", ПустыеСубконто);
	
	ТекстыЗапросов = Новый СписокЗначений;
	ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_МеждународныйУчетОСРЖД_ТекстЗапросаВидыСубконтоСчетов, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_МеждународныйУчетОСРЖД_ТекстЗапросаСоответствиеСчетовХозрасчетныйРЖД, "");
	
	Запрос.Текст = "";
	Для Каждого ЭлементСписка Из ТекстыЗапросов Цикл
		Запрос.Текст = Запрос.Текст+ЭлементСписка.Значение;
	КонецЦикла;
	
	Запрос.ВыполнитьПакет();
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("МоментДокумента", МоментВремени());
	Запрос.УстановитьПараметр("МоментДокументаДляРН", Новый Граница(КонецДня(Дата), ВидГраницы.Включая));
	
	Запрос.УстановитьПараметр("Организация", Организация);
	
	ТекстыЗапросов = Новый СписокЗначений;
	
	Запрос.УстановитьПараметр("ГлавноеОсновноеСредство", ГлавноеОсновноеСредство);
	
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_ТекстЗапросаТабличнаяЧастьОсновныеСредства, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_ВнеоборотныеАктивы_ТекстЗапроса_ОсновныеСредстваРЖДПоТаблицеОС, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_ТекстЗапросаШапкаДокумента, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.абс_ВнеоборотныеАктивы_ТекстЗапроса_СтоимостьОСПоТаблицеОС, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_ТекстЗапросаСтоимостьНовогоОсновногоСредства, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_ТекстЗапросаПервоначальнаяСтоимостьНовогоОсновногоСредства, "");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_ТекстЗапросаТаблица_абс_СтоимостьОСРЖД, "Таблица_абс_СтоимостьОСРЖД");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_ТекстЗапросаТаблица_абс_ОсновныеСредстваРЖД, "Таблица_абс_ОсновныеСредстваРЖД");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_ТекстЗапросаТаблица_абс_МеждународныйОСРЖД, "Таблица_абс_МеждународныйОСРЖД");
	ТекстыЗапросов.Добавить(СтруктураЗапросов.Комплектация_УдалениеВременныхТаблиц, "");
	
	Запрос.Текст = "";
	Для Каждого ТекстЗапроса Из ТекстыЗапросов Цикл
		Запрос.Текст = Запрос.Текст+ТекстЗапроса.Значение;
	КонецЦикла;
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицыДанных = Новый Структура;
	
	Для Каждого ТекстЗапроса Из ТекстыЗапросов Цикл
		
		ИмяТаблицы = ТекстЗапроса.Представление;
		
		Если Не ПустаяСтрока(ИмяТаблицы) Тогда
			Индекс = ТекстыЗапросов.Индекс(ТекстЗапроса);
			ТаблицыДанных.Вставить(ИмяТаблицы, Результат[Индекс].Выгрузить());
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТаблицыДанных.Свойство("Таблица_абс_ОсновныеСредстваРЖД") Тогда
		
		ТаблицаРегистра = ТаблицыДанных.Таблица_абс_ОсновныеСредстваРЖД;
		Если ТаблицаРегистра.Количество()>0 Тогда
			
			НаборЗаписей = Движения.абс_ОсновныеСредстваРЖД;
			НаборЗаписей.Загрузить(ТаблицаРегистра);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТаблицыДанных.Свойство("Таблица_абс_СтоимостьОСРЖД") Тогда
		
		ТаблицаРегистра = ТаблицыДанных.Таблица_абс_СтоимостьОСРЖД;
		Если ТаблицаРегистра.Количество()>0 Тогда
			
			НаборЗаписей = Движения.абс_СтоимостьОСРЖД;
			НаборЗаписей.Загрузить(ТаблицаРегистра);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ТаблицыДанных.Свойство("Таблица_абс_МеждународныйОСРЖД") Тогда
		
		ТаблицаРегистра = ТаблицыДанных.Таблица_абс_МеждународныйОСРЖД;
		Если ТаблицаРегистра.Количество()>0 Тогда
			
			НаборЗаписей = Движения.абс_МеждународныйОСРЖД;
			НаборЗаписей.Загрузить(ТаблицаРегистра);
			
		КонецЕсли;
		
	КонецЕсли;
	 	
	//абс_ПроведениеДокументов.ИнициализироватьДополнительныеСвойстваДляПроведения(Ссылка, ДополнительныеСвойства, РежимПроведения);
	//Документы.абс_КомплектацияОСРЖД.ИнициализироватьДанныеДокумента(Ссылка, ДополнительныеСвойства, Отказ);
	//
	//абс_ПроведениеДокументов.ПодготовитьНаборыЗаписейКРегистрацииДвижений(ЭтотОбъект, ДополнительныеСвойства.ЭтоНовый);
	//
	//абс_ВнеоборотныеАктивы.Отразить_абс_ОсновныеСредстваРЖД(ДополнительныеСвойства, Движения, Отказ);
	//абс_ВнеоборотныеАктивы.Отразить_абс_СтоимостьОСРЖД(ДополнительныеСвойства, Движения, Отказ);
	//абс_МеждународныйУчетОСРЖД.Отразить_абс_МеждународныйОСРЖД(ДополнительныеСвойства, Движения, Отказ);
	//
	//абс_ПроведениеДокументов.ЗаписатьНаборыЗаписей(ЭтотОбъект);	
	//	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Если ПустаяСтрока(Номер) Тогда
		УстановитьНовыйНомер(Организация.Префикс);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Ответственный) Тогда
		Ответственный = ПараметрыСеанса.ТекущийПользователь;
	КонецЕсли;
	
КонецПроцедуры





Процедура ЗаполнитьПоДокументу_абс_КомплектацияОС(ДанныеЗаполнения) Экспорт
	
	ДокОснование = ДанныеЗаполнения.ПолучитьОбъект();
	ЗаполнитьШапкуИОчиститьТЧ(ДокОснование);
	
	ОсновноеСредство = ДокОснование.ОсновноеСредство;
	//ГлавноеОсновноеСредство = ДокОснование.ГлавноеОсновноеСредство;
	
	ДанныеРегистра = РегистрыСведений.МестонахождениеОСБухгалтерскийУчет.ПолучитьПоследнее(ДокОснование.Дата, Новый Структура("ОсновноеСредство, Организация", ОсновноеСредство, ДокОснование.Организация));
	МОЛ = ДанныеРегистра.МОЛ;
	Местонахождение = ДанныеРегистра.Местонахождение;
	ДанныеРегистра = РегистрыСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ДокОснование.Дата, Новый Структура("ОсновноеСредство, Организация", ОсновноеСредство, ДокОснование.Организация));
	КоэффициентУскорения = ДанныеРегистра.КоэффициентУскорения;
	Если КоэффициентУскорения=0 Тогда
		КоэффициентУскорения = 1;
	КонецЕсли;
	
	ДанныеРегистра = РегистрыСведений.НачислениеАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ДокОснование.Дата, Новый Структура("ОсновноеСредство, Организация", ОсновноеСредство, ДокОснование.Организация));
	НачислятьАмортизацию = ДанныеРегистра.НачислятьАмортизацию;
	
	СчетСниженияСтоимости = ПланыСчетов.абс_МеждународныйОСРЖД.Служебный;
	
	ДанныеРегистра = РегистрыСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.ПолучитьПоследнее(ДокОснование.Дата, Новый Структура("ОсновноеСредство, Организация", ОсновноеСредство, ДокОснование.Организация));
	Способ = ДанныеРегистра.СпособыОтраженияРасходовПоАмортизации.Способы[0];
	СчетЗатрат = ПланыСчетов.абс_МеждународныйОСРЖД.НайтиПоКоду("Р"+Способ.СчетЗатрат.Код);
	Субконто1 = Способ.Субконто1;
	Субконто2 = Способ.Субконто2;
	Субконто3 = Способ.Субконто3;
	ВидыСубконто = СчетЗатрат.ВидыСубконто;
	КоличествоСубконто = ВидыСубконто.Количество();
	Для Сч = 1 По КоличествоСубконто Цикл
		Если ЭтотОбъект["Субконто"+Сч]=Неопределено Или Не ЗначениеЗаполнено(ЭтотОбъект["Субконто"+Сч]) Тогда
			Если ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
				ЭтотОбъект["Субконто"+Сч] = Способ.СтатьяЗатрат;
			ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
				ЭтотОбъект["Субконто"+Сч] = Способ.НоменклатурнаяГруппа;
			ИначеЕсли ВидыСубконто[Сч-1].ВидСубконто=ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда
				ЭтотОбъект["Субконто"+Сч] = Способ.ПодразделениеОрганизации;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрокаОС Из ДокОснование.Комплектация Цикл
		
		СтрокаТЧ = ОсновныеСредства.Добавить();
		СтрокаТЧ.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		
	КонецЦикла;
	
	//Запрос = Новый Запрос;
	//Запрос.УстановитьПараметр("Период", ДанныеЗаполнения.Дата);
	//Запрос.УстановитьПараметр("ДокументОснование", ДанныеЗаполнения);
	//Запрос.УстановитьПараметр("ГлавноеОсновноеСредство", ДанныеЗаполнения.ГлавноеОсновноеСредство);
	//
	//ТекстыЗапросов = Новый СписокЗначений;
	//ТекстыЗапросов.Добавить(ТекстЗапросаТаблицаШапка(), "ТаблицаШапка");
	//ТекстыЗапросов.Добавить(ТекстЗапросаТаблицаОсновныеСредства(), "ТаблицаОсновныеСредства");
	//
	//ТаблицыДанных = Новый Структура;
	//абс_ПроведениеДокументов.ИницализироватьТаблицыДляДвижений(Запрос, ТекстыЗапросов, ТаблицыДанных);
	//
	//Если ТаблицыДанных.Свойство("ТаблицаШапка") И ТаблицыДанных.ТаблицаШапка.Количество()>0 Тогда
	//	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ТаблицыДанных.ТаблицаШапка[0]);
	//КонецЕсли;
	//
	//Если ТаблицыДанных.Свойство("ТаблицаОсновныеСредства") Тогда
	//	ОсновныеСредства.Загрузить(ТаблицыДанных.ТаблицаОсновныеСредства);
	//КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьШапкуИОчиститьТЧ(ДокОснование)
	
	Дата = ДокОснование.Дата;
	Организация = ДокОснование.Организация;
	ДокументОснование = ДокОснование.Ссылка;
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	Если Номер = "" Тогда
		УстановитьНовыйНомер(Организация.Префикс);
	КонецЕсли;
	
	ОсновныеСредства.Очистить();
	
КонецПроцедуры

//////////////////////////////////////////////////////////////////////////
// Прочие процедуры и функции

Функция ПолучитьПустыеСубконто()

	ПустыеСубконто = Новый СписокЗначений;
	ВыборкаСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Выбрать();
	Пока ВыборкаСубконто.Следующий() Цикл
		ПустыеСубконто.Добавить(ВыборкаСубконто.ТипЗначения.ПривестиЗначение());
	КонецЦикла;
	ПустыеСубконто.Добавить(Неопределено);
	
	Возврат ПустыеСубконто;

КонецФункции // ПолучитьПустыеСубконто()














Функция ТекстЗапросаТаблицаШапка()
	
	Возврат "ВЫБРАТЬ
	        |	абс_КомплектацияОС.Ссылка КАК ДокументОснование,
	        |	абс_КомплектацияОС.Дата,
	        |	абс_КомплектацияОС.Организация,
	        |	абс_КомплектацияОС.ОсновноеСредство,
	        |	абс_КомплектацияОС.ГлавноеОсновноеСредство
	        |ИЗ
	        |	Документ.абс_КомплектацияОС КАК абс_КомплектацияОС
	        |ГДЕ
	        |	абс_КомплектацияОС.Ссылка = &ДокументОснование
			|;
			|";
	
КонецФункции

Функция ТекстЗапросаТаблицаОсновныеСредства()
	
	Возврат "ВЫБРАТЬ
	        |	абс_КомплектацияОСКомплектация.ОсновноеСредство
	        |ИЗ
	        |	Документ.абс_КомплектацияОС.Комплектация КАК абс_КомплектацияОСКомплектация
	        |ГДЕ
	        |	абс_КомплектацияОСКомплектация.Ссылка = &ДокументОснование
			|;
			|";
	
КонецФункции
