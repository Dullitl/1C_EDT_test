////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ
//

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.КодСтороныСделки.Доступность = Форма.Объект.КодНаименованияСделки <> "";
	
	Форма.Элементы.СуммаДоходов.ТолькоПросмотр  = НЕ Форма.Объект.РедактироватьСуммыСделок;
	Форма.Элементы.СуммаРасходов.ТолькоПросмотр = НЕ Форма.Объект.РедактироватьСуммыСделок;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПараметрыПредметаСделки(ПредметСделки);
	Если НЕ ЗначениеЗаполнено(ПредметСделки) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПараметрыПредмета = Новый Структура("НаименованиеПредметаСделки, СтранаПроисхожденияПредметаСделки, ТипПредметаСделки,
											|КодТНВЭД, КодОКП, КодОКВЭД");
	Если ТипЗнч(ПредметСделки)=Тип("СправочникСсылка.Номенклатура") Тогда
		Предмет = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(ПредметСделки, "НаименованиеПолное, СтранаПроисхождения, Услуга");
		ПараметрыПредмета.НаименованиеПредметаСделки = Предмет.НаименованиеПолное;
		ПараметрыПредмета.СтранаПроисхожденияПредметаСделки = Предмет.СтранаПроисхождения;
		ПараметрыПредмета.ТипПредметаСделки = ?(Предмет.Услуга, 
			Перечисления.ТипыПредметовКонтролируемыхСделок.РаботаУслуга,Перечисления.ТипыПредметовКонтролируемыхСделок.Товар);
	Иначе
		ПараметрыПредмета.НаименованиеПредметаСделки = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПредметСделки, "Наименование");
		ПараметрыПредмета.ТипПредметаСделки = Перечисления.ТипыПредметовКонтролируемыхСделок.ИнойОбъектГражданскихПрав;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("ПредметСделки", ПредметСделки);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПредметыКонтролируемыхСделок.КодПоТНВЭД КАК КодТНВЭД,
	|	ПредметыКонтролируемыхСделок.КодПоОКП КАК КодОКП,
	|	ПредметыКонтролируемыхСделок.КодПоОквэд КАК КодОКВЭД
	|ИЗ
	|	РегистрСведений.ПредметыКонтролируемыхСделок КАК ПредметыКонтролируемыхСделок
	|ГДЕ
	|	ПредметыКонтролируемыхСделок.ПредметСделки = &ПредметСделки";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ПараметрыПредмета, Выборка);
	КонецЕсли;
	
	Возврат(ПараметрыПредмета);
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьПараметрыОткрытияФормыПредмета(ПредметСделки)
	
	Возврат(РегистрыСведений.ПредметыКонтролируемыхСделок.ПолучитьПараметрыОткрытияФормыЗаписиПредметаСделки(ПредметСделки));
	
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруТабличнойЧастиСделки()

	СтрокаТаблицы	= Элементы.Сделки.ТекущиеДанные;
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат Новый Структура;
	КонецЕсли;

	СтруктураТабличнойЧастиСделки = Новый Структура(
		"СтранаОтправкиТовара,
		|КодРегионаОтправкиТовара,
		|ГородОтправкиТовара,
		|НаселенныйПунктОтправкиТовара,
		|СтранаСовершенияСделки,
		|КодРегионаСовершенияСделки,
		|ГородСовершенияСделки,
		|НаселенныйПунктСовершенияСделки,
		|КодУсловийПоставки,
		|ЕдиницаИзмерения,
		|Количество,
		|Цена,
		|Стоимость,
		|Контрагент,
		|Стоимость,
		|ДоговорКонтрагента");

	ЗаполнитьЗначенияСвойств(СтруктураТабличнойЧастиСделки, СтрокаТаблицы);
		
	Возврат СтруктураТабличнойЧастиСделки;

КонецФункции

&НаКлиенте
Процедура ПересчитатьСуммыДокумента()
	
	Если Объект.РедактироватьСуммыСделок Тогда
		Возврат;
	КонецЕсли;
	
	СуммаДоход = 0;
	СуммаРасход = 0;
	Если Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ОсуществленРасход") Тогда 
		СуммаРасход = Объект.Сделки.Итог("Стоимость");
	ИначеЕсли Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход") Тогда 
		СуммаДоход = Объект.Сделки.Итог("Стоимость");
	КонецЕсли;
	
	Если Объект.СуммаДоходов <> СуммаДоход Тогда 
		Объект.СуммаДоходов = СуммаДоход;
	КонецЕсли;
	
	Если Объект.СуммаРасходов <> СуммаРасход Тогда 
		Объект.СуммаРасходов = СуммаРасход;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСписокВыбораДляКодаСтороныСделки()
	
	СоответствиеКодов = КонтролируемыеСделкиПовтИсп.ПолучитьСоответствиеКодовСтороныСделки();
	Элементы.КодСтороныСделки.СписокВыбора.Очистить();
	
	СписокКодов = СоответствиеКодов.Получить(Объект.КодНаименованияСделки);
	Если СписокКодов<>Неопределено Тогда
		Для Каждого Код Из СписокКодов Цикл
			НовыйКод = Элементы.КодСтороныСделки.СписокВыбора.Добавить();
			ЗаполнитьЗначенияСвойств(НовыйКод, Код);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьКодСтороныСделки(Форма)
	
	СписокКодовСтороныСделки = Форма.Элементы.КодСтороныСделки.СписокВыбора;
	Если СписокКодовСтороныСделки.Количество()>1 Тогда
		Форма.Объект.КодСтороныСделки = ?(Форма.Объект.ТипСделки = ПредопределенноеЗначение("Перечисление.ТипыКонтролируемыхСделок.ПолученДоход"),
			СписокКодовСтороныСделки[0].Значение, СписокКодовСтороныСделки[1].Значение);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ИзменениеКодаНаименованияСделкиНаСервере()
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	Если Объект.КодНаименованияСделки = "" Тогда
		Объект.КодСтороныСделки = "";
	ИначеЕсли Объект.КодСтороныСделки <> "" Тогда
		Если Элементы.КодСтороныСделки.СписокВыбора.НайтиПоЗначению(Объект.КодСтороныСделки) = Неопределено Тогда
			Объект.КодСтороныСделки = "";
		КонецЕсли;
	КонецЕсли;
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫ
//

&НаКлиенте
Процедура УведомлениеОКонтролируемойСделкеПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.УведомлениеОКонтролируемойСделке) Тогда 
		ПараметрыУведомления = ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Объект.УведомлениеОКонтролируемойСделке,"Организация, Дата");
		Объект.Организация = ПараметрыУведомления.Организация;
		Объект.Дата        = ПараметрыУведомления.Дата;
	Иначе
		Объект.Организация = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КодНаименованияСделкиПриИзменении(Элемент)
	
	ИзменениеКодаНаименованияСделкиНаСервере();
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредметСделкиПриИзменении(Элемент)
	
	ПараметрыПредметаСделки = ПолучитьПараметрыПредметаСделки(Объект.ПредметСделки);
	Если ПараметрыПредметаСделки <> Неопределено Тогда
		Если ЗначениеЗаполнено(ПараметрыПредметаСделки.ТипПредметаСделки) Тогда
			Объект.ТипПредметаСделки = ПараметрыПредметаСделки.ТипПредметаСделки;
		КонецЕсли;
		Объект.НаименованиеПредметаСделки = ПараметрыПредметаСделки.НаименованиеПредметаСделки;
		Если ЗначениеЗаполнено(ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки) Тогда
			Объект.СтранаПроисхожденияПредметаСделки = ПараметрыПредметаСделки.СтранаПроисхожденияПредметаСделки;
		КонецЕсли;
		Объект.КодТНВЭД = ПараметрыПредметаСделки.КодТНВЭД;
		Объект.КодОКП   = ПараметрыПредметаСделки.КодОКП;
		Объект.КодОКВЭД = ПараметрыПредметаСделки.КодОКВЭД;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПараметрыПредметаСделкиНажатие(Элемент)
	
	ПараметрыОткрытияФормы = ПолучитьПараметрыОткрытияФормыПредмета(Объект.ПредметСделки);
	Если ПараметрыОткрытияФормы<>Неопределено Тогда
		ОткрытьФорму("РегистрСведений.ПредметыКонтролируемыхСделок.ФормаЗаписи", ПараметрыОткрытияФормы);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТипСделкиПриИзменении(Элемент)
	
	УстановитьКодСтороныСделки(ЭтаФорма);
	ПересчитатьСуммыДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПечать(Команда)
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.КонтролируемаяСделка", "КонтролируемаяСделка", 
		Объект.Ссылка, ЭтаФорма, Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьСуммыСделокПриИзменении(Элемент)
	
	ПересчитатьСуммыДокумента();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ТАБЛИЦЫ <СДЕЛКИ>
//

&НаКлиенте
Процедура СделкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;

	Если Поле.Имя = "СделкиДоговорКонтрагента" Тогда
		Договор = Элемент.ТекущиеДанные.ДоговорКонтрагента.ПолучитьФорму();
		Договор.Открыть();
	Иначе
		ИзменениеСтрокиСделки();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	Отказ = Истина;
	ИзменениеСтрокиСделки(Истина, Копирование);
КонецПроцедуры

&НаКлиенте
Процедура СделкиПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
	ИзменениеСтрокиСделки();
КонецПроцедуры

&НаКлиенте
Процедура ИзменениеСтрокиСделки(ЭтоНовый = Ложь, Копирование = Ложь)
	
	ДанныеЗаполнения	= ?(Не ЭтоНовый ИЛИ Копирование, ПолучитьСтруктуруТабличнойЧастиСделки(), Новый Структура);
	СтруктураПараметров	= Новый Структура;
	СтруктураПараметров.Вставить("ЭтоНовый",			ЭтоНовый);
	СтруктураПараметров.Вставить("Копирование",			Копирование);
	СтруктураПараметров.Вставить("ДанныеЗаполнения",	ДанныеЗаполнения);
	
	Если Не ЭтоНовый Тогда 
		СтрокаТаблицы = Объект.Сделки.НайтиПоИдентификатору(Элементы.Сделки.ТекущаяСтрока);
	КонецЕсли;

	ФормаРедактированияСтроки = ОткрытьФормуМодально("Документ.КонтролируемаяСделка.Форма.Лист1Б",
		СтруктураПараметров, ЭтаФорма);

	Если ФормаРедактированияСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЭтоНовый Тогда
		СтрокаТаблицы = Объект.Сделки.Добавить();
	Иначе
		СтрокаТаблицы = Объект.Сделки.НайтиПоИдентификатору(Элементы.Сделки.ТекущаяСтрока);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ФормаРедактированияСтроки);
	ПересчитатьСуммыДокумента();
	
	Модифицированность	= Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ - ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ
//

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	СписокКодов = КонтролируемыеСделкиПовтИсп.ПолучитьСписокКодовНаименованийСделки();
	Элементы.КодНаименованияСделки.СписокВыбора.Очистить();
	Для Каждого Код Из СписокКодов Цикл
		НовыйКод = Элементы.КодНаименованияСделки.СписокВыбора.Добавить();
		ЗаполнитьЗначенияСвойств(НовыйКод, Код);
	КонецЦикла;
	
	УстановитьСписокВыбораДляКодаСтороныСделки();
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("КонтролируемаяСделкаИзменена", Объект.УведомлениеОКонтролируемойСделке);
	Если ПараметрыЗаписи.Свойство("НомерКонтролируемойСделкиИзменился") Тогда
		Оповестить("НомерКонтролируемойСделкиИзменился", Объект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если НЕ ЗначениеЗаполнено(ТекущийОбъект.Номер) И НЕ ТекущийОбъект.ПометкаУдаления Тогда
		ТекущийОбъект.Номер = КонтролируемыеСделки.ПолучитьСледующийНомерКонтролируемойСделкиУведомления(ТекущийОбъект.УведомлениеОКонтролируемойСделке);
	КонецЕсли;
	
	Если ТекущийОбъект.Номер <> ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТекущийОбъект.Ссылка, "Номер") Тогда
		ПараметрыЗаписи.Вставить("НомерКонтролируемойСделкиИзменился", Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаОснованииДоговора()
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.абс_КодПредметаСделкиТНВЭД.Код КАК КодТНВЭД,
	|	ДоговорыКонтрагентов.абс_КодПредметаСделкиОКП.Код КАК КодОКП,
	|	ДоговорыКонтрагентов.абс_КодПредметаСделкиОКВЭД.Код КАК КодОКВЭД,
	|	ДоговорыКонтрагентов.абс_НаименованиеПредметаСделки КАК НаименованиеПредметаСделки,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_КодОснованияОтнесенияСделкиККонтролируемой.Код = ""121""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка121СтороныВзаимозависимыПоКодексу,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_КодОснованияОтнесенияСделкиККонтролируемой.Код = ""122""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка122СделкаВОбластиВнешнейТорговли,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_КодОснованияОтнесенияСделкиККонтролируемой.Код = ""123""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка123СделкаСКонтрагентомСЛьготнымНалогообложением,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_КодОснованияОтнесенияСделкиККонтролируемой.Код = ""124""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка124СделкаСНезависимымПосредником,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_ОсобенностиОтнесенияСделкиККонтролируемой.Код = ""131""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка131СуммаДоходовПоСделкамПревышаетПредел,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_ОсобенностиОтнесенияСделкиККонтролируемой.Код = ""132""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка132СделкаСПлательщикомНДПИ,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_ОсобенностиОтнесенияСделкиККонтролируемой.Код = ""133""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка133СделкаСКонтрагентомНаСпецрежимах,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_ОсобенностиОтнесенияСделкиККонтролируемой.Код = ""134""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка134СделкаСПлательщикомНалогаНаПрибыль,
	|	ВЫБОР
	|		КОГДА ДоговорыКонтрагентов.абс_ОсобенностиОтнесенияСделкиККонтролируемой.Код = ""135""
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Строка135СделкаСРезидентомОЭЗ,
	|	ДоговорыКонтрагентов.абс_КодНаименованияСделки.Код КАК КодНаименованияСделки,
	|	ДоговорыКонтрагентов.абс_СпособОпределенияЦенКонтролируемыхСделок КАК СпособОпределенияЦеныСделки,
	|	ДоговорыКонтрагентов.абс_ТипПредметаСделки КАК ТипПредметаСделки,
	|	ДоговорыКонтрагентов.абс_КодСтраныПроисхожденияПредметаСделкиОКСМ КАК СтранаПроисхожденияПредметаСделки
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка = &Ссылка";
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОбъект.ДоговорКонтрагента);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(ДокументОбъект,ВыборкаДетальныеЗаписи);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаКлиенте
Процедура ДоговорКонтрагентаПриИзменении(Элемент)
	ЗаполнитьНаОснованииДоговора();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЛисты()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	КонтролируемыеСделкиОрганизаций.Валюта,
		|	КонтролируемыеСделкиОрганизаций.ЕдиницаИзмерения,
		|	СУММА(КонтролируемыеСделкиОрганизаций.СуммаБезНДСВРублях) КАК Стоимость,
		|	КонтролируемыеСделкиОрганизаций.Период КАК ДатаСовершенияСделки,
		|	СУММА(КонтролируемыеСделкиОрганизаций.СуммаБезНДСВРублях) КАК Цена
		|ИЗ
		|	РегистрНакопления.КонтролируемыеСделкиОрганизаций КАК КонтролируемыеСделкиОрганизаций
		|ГДЕ
		|	КонтролируемыеСделкиОрганизаций.Уведомление = &Уведомление
		|	И КонтролируемыеСделкиОрганизаций.Контрагент = &Контрагент
		|	И КонтролируемыеСделкиОрганизаций.ДоговорКонтрагента = &ДоговорКонтрагента
		|
		|СГРУППИРОВАТЬ ПО
		|	КонтролируемыеСделкиОрганизаций.Валюта,
		|	КонтролируемыеСделкиОрганизаций.ЕдиницаИзмерения,
		|	КонтролируемыеСделкиОрганизаций.Период";
		
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДокументОбъект.ДоговорКонтрагента);
	Запрос.УстановитьПараметр("Контрагент", ДокументОбъект.Контрагент);
	Запрос.УстановитьПараметр("Уведомление", ДокументОбъект.УведомлениеОКонтролируемойСделке);
	ДокументОбъект.Сделки.Загрузить(Запрос.Выполнить().Выгрузить());
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Заполнять = Истина;
	
	Если Не ЗначениеЗаполнено(Объект.УведомлениеОКонтролируемойСделке) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо выбрать уведомление!";
		Сообщение.Сообщить();
		Заполнять = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Контрагент) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо выбрать контрагента!";
		Сообщение.Сообщить();
		Заполнять = Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = "Необходимо выбрать договор!";
		Сообщение.Сообщить();
		Заполнять = Ложь;
	КонецЕсли;
	
	
	Если Заполнять Тогда
		ЗаполнитьЛисты();
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура СделкиПослеУдаления(Элемент)
	ПересчитатьСуммыДокумента();
	
	Модифицированность	= Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыОтбора()
 
 	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("ВидСравнения");
	ТЗ.Колонки.Добавить("ЛевоеЗначение");
	ТЗ.Колонки.Добавить("ПравоеЗначение");
	ТЗ.Колонки.Добавить("Использование");


	Для каждого Стр  Из УсловноеОформление.Элементы Цикл
		Если Не Строка(Стр.Отбор.Элементы[0].ЛевоеЗначение) = "Объект.Сделки.НомерСтроки" Тогда	
			НоваяСтрока = ТЗ.Добавить();
			НоваяСтрока.ВидСравнения   = Стр.Отбор.Элементы[0].ВидСравнения;
			НоваяСтрока.ЛевоеЗначение  = Стр.Отбор.Элементы[0].ЛевоеЗначение;
			НоваяСтрока.ПравоеЗначение = Стр.Отбор.Элементы[0].ПравоеЗначение;
			НоваяСтрока.Использование  = Стр.Использование;
		КонецЕсли;	
	КонецЦикла;
	
    Возврат ТЗ;
КонецФункции 
 
&НаКлиенте
Процедура НастройкаОтбора(Команда)

	ПараметрыОтбора = ПолучитьПараметрыОтбора();
	
	ПараметрыФормы = Новый Структура("ДокументСделка,ПараметрыОтбора",Объект.Ссылка,ПараметрыОтбора);
	
	ОткрытьФормуМодально("Документ.КонтролируемаяСделка.Форма.Форма",ПараметрыФормы,ЭтаФорма);	
КонецПроцедуры

Процедура УстановитьУсловноеОформление(Параметр,Очистка)

	УсловноеОформление.Элементы.Очистить();
	
	Если Не Очистка Тогда
		Если Параметр <> Неопределено Тогда
			
			Для каждого Стр  Из Параметр  Цикл
				Элемент = УсловноеОформление.Элементы.Добавить();
				
				Элемент.Использование =  Стр.Использование;
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиДоговорКонтрагента"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиКодОКВЭД"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиНомерСтроки"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиКонтрагент"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиДатаСовершенияСделки"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиКоличество"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиЕдиницаИзмерения");
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиСтоимость"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиЦена"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиКодУсловияПоставки"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиСтранаОтправкиТовара"); 
				
				ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
				ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СделкиСтранаСовершенияСделки");
				
				ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
				ОтборЭлемента.ЛевоеЗначение  =  Новый ПолеКомпоновкиДанных("Объект.Сделки."+Строка(Стр.ЛевоеЗначение));
				
				ОтборЭлемента.ПравоеЗначение =  Стр.ПравоеЗначение;
				
				ОтборЭлемента.ВидСравнения   =  Стр.ВидСравнения;
				
				Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
				//Элемент.Оформление.УстановитьЗначениеПараметра("Отображать", Истина);
			КонецЦикла;	
		КонецЕсли;  		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "УстановкаОтбора" Тогда
		//	Для каждого Стр Из Параметр Цикл
		УстановитьУсловноеОформление(Параметр.ТЗ,Ложь);
		Элементы.Сделки.Обновить();
		//	КонецЦикла;
		
		//
		//Элементы.Сделки.ОтборСтрок = Новый  ФиксированнаяСтруктура("ДоговорКонтрагента",1);
		
		СтрокиДляАктивации = Параметр.ТекущиеСтрокиПослеОтбора;
		Если СтрокиДляАктивации.Количество() > 0 Тогда
			Если  СтрокиДляАктивации.Найти(Элементы.Сделки.ТекущаяСтрока + 1,"НомерСтроки") = Неопределено Тогда
				Элементы.Сделки.ТекущаяСтрока = СтрокиДляАктивации[0].НомерСтроки - 1;
			КонецЕсли;	
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СделкиПриАктивизацииЯчейки(Элемент)
	//Элемент.ТекущаяСтрока = 
КонецПроцедуры

&НаКлиенте
Процедура СнятьОтбор(Команда)
	УстановитьУсловноеОформление(Неопределено,Ложь);
КонецПроцедуры


