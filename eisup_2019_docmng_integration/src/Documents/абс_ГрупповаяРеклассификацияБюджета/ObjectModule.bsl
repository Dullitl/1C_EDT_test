Перем СписокКолонок Экспорт;


Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	// Вставить содержимое обработчика.
	СписокРедактируемыхАналитик = Новый ХранилищеЗначения(СписокКолонок);
	
КонецПроцедуры


Процедура СформироватьДвижениеПоУстановкеЛимитов(ТекСтрокаБюджет,ВалютаДокумента)
	
	//АБС НАЧАЛО Задача №08759
	//мСтруктураПриемник = Новый Структура("ПериодМесяц,НачалоПериода,КонецПериода,СтатьяОборотов,ЦФО,ТипКонтрагента,ТипСети,КВ,ТЭО,ЦФУ,ТипРасхода,Организация");
	мСтруктураПриемник = Новый Структура("ПериодМесяц,НачалоПериода,КонецПериода,СтатьяОборотов,ЦФО,ТипКонтрагента,ТипСети,КВ,ТЭО,ЦФУ,ТипРасхода,Организация,Проект");
	//\\АБС КОНЕЦ Задача №08759
	
	ЗаполнитьЗначенияСвойств(мСтруктураПриемник,ТекСтрокаБюджет);
	мСтруктураПриемник.ПериодМесяц = ТекСтрокаБюджет.Период;
	мСтруктураПриемник.СтатьяОборотов = ТекСтрокаБюджет.БюджетнаяСтатья;
	мСтруктураПриемник.НачалоПериода =НачалоМесяца(ТекСтрокаБюджет.Период);
	мСтруктураПриемник.КонецПериода = КонецМесяца(ТекСтрокаБюджет.Период);
	мСтруктураПриемник.ТипРасхода = ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
	Если ЗначениеЗаполнено(Сценарий) Тогда
		Остаток = абс_Бюджетирование.ПостроитьЗапросПоОстаткам(мСтруктураПриемник,ВалютаДокумента,Истина);	
		Если НЕ Остаток.ЕстьЛимит Тогда
			Движение = Движения.абс_УстановкаЛимитовПоСтатьям.Добавить();
			Движение.Период = мСтруктураПриемник.ПериодМесяц;
			Движение.Сценарий = Сценарий;
			Движение.СтатьяОборотов = мСтруктураПриемник.СтатьяОборотов;
			Движение.ЦФО = мСтруктураПриемник.ЦФО;
			Движение.абс_ТипКонтрагента = мСтруктураПриемник.ТипКонтрагента;
			Движение.абс_ТипСети = мСтруктураПриемник.ТипСети;
			Движение.абс_КВ = мСтруктураПриемник.КВ;
			Движение.абс_ТЭО = мСтруктураПриемник.ТЭО;
			Движение.абс_ЦФУ = мСтруктураПриемник.ЦФУ;
			Движение.абс_ТипРасхода = мСтруктураПриемник.ТипРасхода;
			Движение.Организация = мСтруктураПриемник.Организация;
			
			//АБС НАЧАЛО Задача №08759
			Движение.Проект = мСтруктураПриемник.Проект;
			//\\АБС КОНЕЦ Задача №08759
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


Процедура КонтрольЛимитов(СтрокаБюджета, Отказ) Экспорт
	
	Если УправлениеДопПравамиПользователей.РазрешеноПревышениеКонтролируемыхЗначенийПоБюджетам() Тогда
		возврат;
	КонецЕсли;
	
	// {{ТТК Лапин А. Заявка Обнуление лимитов 27.10.2015 начало
	//	Если абс_Бюджетирование.ПоСтатьеРазрешеноПревышениеБюджета(СтрокаБюджета.БюджетнаяСтатья) Тогда
	Если абс_Бюджетирование.ПоСтатьеРазрешеноПревышениеБюджета(СтрокаБюджета.БюджетнаяСтатья, СтрокаБюджета.Организация) Тогда
	// }}ТТК Лапин А. Заявка № Обнуление лимитов 27.10.2015 окончание	
 		возврат;
	КонецЕсли;
	
	СтруктураАналитик = НОВЫЙ Структура;
	СтруктураАналитик.Вставить("Организация",СтрокаБюджета.Организация);
	СтруктураАналитик.Вставить("абс_ЦФУ", СтрокаБюджета.ЦФУ);
	СтруктураАналитик.Вставить("ЦФО", СтрокаБюджета.ЦФО);
	СтруктураАналитик.Вставить("абс_ТипРасхода", СтрокаБюджета.ТипРасходаНаПроизводствоИРеализацию);
	СтруктураАналитик.Вставить("абс_ТипКонтрагента", СтрокаБюджета.ТипКонтрагента);
	СтруктураАналитик.Вставить("абс_ТипСети", СтрокаБюджета.ТипСети);
	СтруктураАналитик.Вставить("абс_КВ",СтрокаБюджета.КВ);
	СтруктураАналитик.Вставить("абс_ТЭО", СтрокаБюджета.ТЭО);
	СтруктураАналитик.Вставить("СтатьяОборотов", СтрокаБюджета.БюджетнаяСтатья);
	
	//АБС НАЧАЛО Задача №08759
	//СтруктураАналитик.Вставить("Проект", СтрокаБюджета.Проект);    //абс_Стрельцов+ изменено: 09.10.2012
	//\\АБС КОНЕЦ Задача №08759

	СтрокаСообщения = "";
	
	Остаток = абс_Бюджетирование.ОстатокЛимитаПоБюджету(НачалоМесяца(СтрокаБюджета.Период),КонецМесяца(СтрокаБюджета.Период), СтруктураАналитик);
	// АБС ВСТАВКА Фролов 20110923 Контролируем сумму уменьшения лимитов.
	Если Остаток < СтрокаБюджета.СуммаУменьшенияЛимитаРуб Тогда
		Если Остаток = -2 тогда                
			//СтрокаСообщения = СтрокаСообщения+"Строка " + (Цел(СтрокаБюджета.НомерСтроки/12) + 1) + ": В ПЕРИОДЕ "+ абс_СлужебныеФункции.ВернутьНазваниеМесяца(СтрокаБюджета.Период)+" НЕ ЗАДАН ЛИМИТ!";
			СообщитьОбОтсутствииБюджета(СтрокаБюджета, СтрокаСообщения);
		Иначе
			//СтрокаСообщения = СтрокаСообщения+"Строка " + (Цел(СтрокаБюджета.НомерСтроки/12) + 1) + ": В ПЕРИОДЕ "+ абс_СлужебныеФункции.ВернутьНазваниеМесяца(СтрокаБюджета.Период)+" СУММА ПРЕВЫШАЕТ ЛИМИТ! СУММА = "+СтрокаБюджета.СуммаЛимитаРуб+"; ЛИМИТ = "+Остаток+Символы.ПС;
			СообщитьОПревышенииБюджета(СтрокаБюджета, СтрокаСообщения, Остаток)
		КонецЕсли;
	КонецЕсли;
		
	Если Не ПустаяСтрока(СтрокаСообщения) Тогда
		Отказ = Истина;
		ttk_ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения);
	КонецЕсли;

КонецПроцедуры

Процедура СообщитьОПревышенииБюджета(СтрокаБюджета, СтрокаСообщения, Остаток)
	
	СтрокаСообщения = СтрокаСообщения+"ПО АНАЛИТИКАМ: " + ВернутьТекстАналитик(СтрокаБюджета) + " В ПЕРИОДЕ "+ абс_СлужебныеФункции.ВернутьНазваниеМесяца(СтрокаБюджета.Период)+" СУММА ПРЕВЫШАЕТ ЛИМИТ! СУММА = "+СтрокаБюджета.СуммаЛимитаРуб+"; ЛИМИТ = "+Остаток+Символы.ПС;	
		
КонецПроцедуры

Процедура СообщитьОбОтсутствииБюджета(СтрокаБюджета, СтрокаСообщения)
	
	СтрокаСообщения = СтрокаСообщения+"ПО АНАЛИТИКАМ: " + ВернутьТекстАналитик(СтрокаБюджета) + " В ПЕРИОДЕ "+ абс_СлужебныеФункции.ВернутьНазваниеМесяца(СтрокаБюджета.Период)+" НЕ ЗАДАН ЛИМИТ!";
	
КонецПроцедуры

Функция ВернутьТекстАналитик(СтрокаБюджета)
	
	ТекстАналитик = "ЦФУ: " + СтрокаБюджета.ЦФУ + 
					", Организация: " + СтрокаБюджета.Организация + 
					", ЦФО: " + СтрокаБюджета.ЦФО + 
					", Бюджетная статья: " + СтрокаБюджета.БюджетнаяСтатья + 
					", Тип расхода: " + СтрокаБюджета.ТипРасходаНаПроизводствоИРеализацию + 
					", Тип контрагента: " + СтрокаБюджета.ТипКонтрагента + 
					", Тип сети: " + СтрокаБюджета.ТипСети + 
					", КВ: " + СтрокаБюджета.КВ + 
					", ТЭО: " + СтрокаБюджета.ТЭО +
					//АБС НАЧАЛО Задача №08759
	 				", Проект: " + СтрокаБюджета.Проект;
	 				//\\АБС КОНЕЦ Задача №08759
					
	Возврат ТекстАналитик;
	
КонецФункции

Процедура ПроверитьЛимитДокумента(Отказ) Экспорт
	
	Запрос = Новый Запрос();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	БюджетСтроки.Ссылка,
	|	БюджетСтроки.Организация,
	|	БюджетСтроки.ЦФУ,
	|	БюджетСтроки.ЦФО,
	|	БюджетСтроки.ТипРасходаНаПроизводствоИРеализацию,
	|	БюджетСтроки.ТипКонтрагента,
	|	БюджетСтроки.ТипСети,
	|	БюджетСтроки.КВ,
	|	БюджетСтроки.ТЭО,
	|	БюджетСтроки.БюджетнаяСтатья,
	//АБС НАЧАЛО Задача №08759
	|	БюджетСтроки.Проект,
	//\\АБС КОНЕЦ Задача №08759
	|	БюджетСтроки.Период,
	|	ЕСТЬNULL(БюджетСтроки.СуммаЛимитаРуб, 0) КАК СуммаЛимитаРуб,
	|	ЕСТЬNULL(БюджетНовыеСтроки.СуммаЛимитаРуб, 0) КАК НоваяСуммаЛимитаРуб,
	|	ЕСТЬNULL(БюджетСтроки.СуммаЛимитаРуб, 0) - ЕСТЬNULL(БюджетНовыеСтроки.СуммаЛимитаРуб, 0) КАК СуммаУменьшенияЛимитаРуб,
	|	БюджетСтроки.Сторно
	|ИЗ
	|	(ВЫБРАТЬ
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Ссылка КАК Ссылка,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Организация КАК Организация,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ЦФУ КАК ЦФУ,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ЦФО КАК ЦФО,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТипРасходаНаПроизводствоИРеализацию КАК ТипРасходаНаПроизводствоИРеализацию,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТипКонтрагента КАК ТипКонтрагента,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТипСети КАК ТипСети,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.КВ КАК КВ,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТЭО КАК ТЭО,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.БюджетнаяСтатья КАК БюджетнаяСтатья,
	//АБС НАЧАЛО Задача №08759
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Проект КАК Проект,
	//\\АБС КОНЕЦ Задача №08759
	|		СУММА(абс_ГрупповаяРеклассификацияБюджетаБюджет.СуммаЛимитаРуб) КАК СуммаЛимитаРуб,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Период КАК Период,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Сторно КАК Сторно
	|	ИЗ
	|		Документ.абс_ГрупповаяРеклассификацияБюджета.Бюджет КАК абс_ГрупповаяРеклассификацияБюджетаБюджет
	|	ГДЕ
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Ссылка = &Ссылка
	|	
	|	СГРУППИРОВАТЬ ПО
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТипСети,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТЭО,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТипРасходаНаПроизводствоИРеализацию,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ТипКонтрагента,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.КВ,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Организация,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ЦФО,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.ЦФУ,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.БюджетнаяСтатья,
	//АБС НАЧАЛО Задача №08759
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Проект,	
	//\\АБС КОНЕЦ Задача №08759
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Период,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Ссылка,
	|		абс_ГрупповаяРеклассификацияБюджетаБюджет.Сторно) КАК БюджетСтроки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Ссылка КАК Ссылка,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Организация КАК Организация,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ЦФУ КАК ЦФУ,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ЦФО КАК ЦФО,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТипРасходаНаПроизводствоИРеализацию КАК ТипРасходаНаПроизводствоИРеализацию,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТипКонтрагента КАК ТипКонтрагента,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТипСети КАК ТипСети,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.КВ КАК КВ,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТЭО КАК ТЭО,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.БюджетнаяСтатья КАК БюджетнаяСтатья,
	//АБС НАЧАЛО Задача №08759
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Проект КАК Проект,
	//\\АБС КОНЕЦ Задача №08759
	|			СУММА(абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.СуммаЛимитаРуб) КАК СуммаЛимитаРуб,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Период КАК Период
	|		ИЗ
	|			Документ.абс_ГрупповаяРеклассификацияБюджета.БюджетНовыеСтроки КАК абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки
	|		ГДЕ
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Ссылка = &Ссылка
	|		
	|		СГРУППИРОВАТЬ ПО
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.БюджетнаяСтатья,
	//АБС НАЧАЛО Задача №08759
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Проект,
	//\\АБС КОНЕЦ Задача №08759
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТипКонтрагента,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТЭО,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ЦФО,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Организация,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Ссылка,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ЦФУ,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТипРасходаНаПроизводствоИРеализацию,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.КВ,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.ТипСети,
	|			абс_ГрупповаяРеклассификацияБюджетаБюджетНовыеСтроки.Период) КАК БюджетНовыеСтроки
	|		ПО БюджетСтроки.Ссылка = БюджетНовыеСтроки.Ссылка
	|			И БюджетСтроки.Организация = БюджетНовыеСтроки.Организация
	|			И БюджетСтроки.ЦФУ = БюджетНовыеСтроки.ЦФУ
	|			И БюджетСтроки.ЦФО = БюджетНовыеСтроки.ЦФО
	|			И БюджетСтроки.ТипРасходаНаПроизводствоИРеализацию = БюджетНовыеСтроки.ТипРасходаНаПроизводствоИРеализацию
	|			И БюджетСтроки.ТипКонтрагента = БюджетНовыеСтроки.ТипКонтрагента
	|			И БюджетСтроки.ТипСети = БюджетНовыеСтроки.ТипСети
	|			И БюджетСтроки.КВ = БюджетНовыеСтроки.КВ
	|			И БюджетСтроки.ТЭО = БюджетНовыеСтроки.ТЭО
	|			И БюджетСтроки.БюджетнаяСтатья = БюджетНовыеСтроки.БюджетнаяСтатья
	//АБС НАЧАЛО Задача №08759
	|			И БюджетСтроки.Проект = БюджетНовыеСтроки.Проект
	//\\АБС КОНЕЦ Задача №08759
	|			И БюджетСтроки.Период = БюджетНовыеСтроки.Период";
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ЕСли НЕ Выборка.Сторно Тогда
			продолжить;
		КонецЕсли;
		
		Если Выборка.СуммаУменьшенияЛимитаРуб > 0 Тогда
				
			КонтрольЛимитов(Выборка, Отказ);
			
		КонецЕсли;
				
	КонецЦикла;	
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	// регистр ОборотыБюджетов 
	Движения.ОборотыБюджетов.Записывать = Истина;
	Движения.ОборотыБюджетов.Очистить();
	
  	// регистр УстановкаОграниченийПоБюджетам
	Движения.абс_УстановкаЛимитовПоСтатьям.Записывать = Истина;
	Движения.абс_УстановкаЛимитовПоСтатьям.Очистить();
	
	// регистр КонтролируемыеЗначенияБюджетов 
	Движения.КонтролируемыеЗначенияБюджетов.Записывать = Истина;
	Движения.КонтролируемыеЗначенияБюджетов.Очистить();
	
	СтруктураАналитик = Новый Структура;
	
	// АБС ВСТАВКА 20110922
	ПроверитьЛимитДокумента(Отказ);
	// АБС ВСТАВКА 20110922 КОНЕЦ
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрокаБюджет Из Бюджет Цикл
		ЕСли НЕ ТекСтрокаБюджет.Сторно Тогда
			продолжить;
		КонецЕсли;
		
		Если ТекСтрокаБюджет.СуммаРуб<>0 Тогда
			Если ЗначениеЗаполнено(Сценарий) Тогда

				Движение = Движения.ОборотыБюджетов.Добавить();
				Движение.Период = ТекСтрокаБюджет.Период;
				Движение.Сценарий = Сценарий;
				Движение.ЦФО = ТекСтрокаБюджет.ЦФО;
				Движение.СтатьяОборотов = ТекСтрокаБюджет.БюджетнаяСтатья;
				Движение.Валюта = ТекСтрокаБюджет.Валюта;
				Движение.абс_ТипКонтрагента = ТекСтрокаБюджет.ТипКонтрагента;
				Движение.абс_ТипСети = ТекСтрокаБюджет.ТипСети;
				Движение.абс_КВ = ТекСтрокаБюджет.КВ;
				Движение.абс_ТЭО = ТекСтрокаБюджет.ТЭО;
				Движение.абс_ЦФУ = ТекСтрокаБюджет.ЦФУ;
				Движение.абс_ТипРасхода = ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
				Движение.Количество = -ТекСтрокаБюджет.Количество;
				Движение.СуммаУпр = -ТекСтрокаБюджет.СуммаРуб;
				Движение.ВалютнаяСумма = -ТекСтрокаБюджет.СуммаВал;
				Движение.СуммаСценария = -ТекСтрокаБюджет.СуммаРуб;
				Движение.Организация = ТекСтрокаБюджет.Организация;
				
				//АБС НАЧАЛО Задача №08759
		        Движение.Проект = ТекСтрокаБюджет.Проект;
		  		//\\АБС КОНЕЦ Задача №08759
				
			КонецЕсли;
		КонецЕсли;
		
		//Движение = Движения.абс_УстановкаЛимитовПоСтатьям.Добавить();
		//Движение.Период = ТекСтрокаБюджет.Период;
		//Движение.Сценарий = Сценарий;
		//Движение.СтатьяОборотов = ТекСтрокаБюджет.БюджетнаяСтатья;
		//Движение.ЦФО = ТекСтрокаБюджет.ЦФО;
		//Движение.абс_ТипКонтрагента = ТекСтрокаБюджет.ТипКонтрагента;
		//Движение.абс_ТипСети = ТекСтрокаБюджет.ТипСети;
		//Движение.абс_КВ = ТекСтрокаБюджет.КВ;
		//Движение.абс_ТЭО = ТекСтрокаБюджет.ТЭО;
		//Движение.абс_ЦФУ = ТекСтрокаБюджет.ЦФУ;
		//Движение.абс_ТипРасхода = ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
		//Движение.Организация = ТекСтрокаБюджет.Организация;
		Если ТекСтрокаБюджет.СуммаЛимитаРуб<>0 Тогда
									
			Движение = Движения.КонтролируемыеЗначенияБюджетов.Добавить();
			Движение.Период = ТекСтрокаБюджет.Период;
			Движение.Сценарий = Сценарий;
			Движение.СтатьяОборотов = ТекСтрокаБюджет.БюджетнаяСтатья;
			Движение.ЦФО = ТекСтрокаБюджет.ЦФО;
			Движение.Организация = ТекСтрокаБюджет.Организация;
			Движение.абс_ТипКонтрагента = ТекСтрокаБюджет.ТипКонтрагента;
			Движение.абс_ТипСети = ТекСтрокаБюджет.ТипСети;
			Движение.абс_КВ = ТекСтрокаБюджет.КВ;
			Движение.абс_ТЭО = ТекСтрокаБюджет.ТЭО;
			Движение.абс_ЦФУ = ТекСтрокаБюджет.ЦФУ;
			Движение.абс_ТипРасхода = ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
			Если ЗначениеЗаполнено(Сценарий) Тогда
				Движение.СуммаСценарияКонтроль = -ТекСтрокаБюджет.СуммаЛимитаРуб;
				Движение.СуммаСценарияКонтрольВал = -ТекСтрокаБюджет.СуммаЛимитаВал;
			Иначе
				Движение.СуммаСценарияИсполнение = -ТекСтрокаБюджет.СуммаЛимитаРуб;
				Движение.СуммаСценарияИсполнениеВал = -ТекСтрокаБюджет.СуммаЛимитаВал;
			КонецЕсли;
			Движение.Валюта = ТекСтрокаБюджет.Валюта;
			//АБС НАЧАЛО Задача №08759
			Движение.Проект = ТекСтрокаБюджет.Проект;
			//\\АБС КОНЕЦ Задача №08759
			//	Движение.СуммаСценарияИсполнение = ТекСтрокаБюджет.СуммаРуб;
		КонецЕсли;
	КонецЦикла;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ТекСтрокаБюджет Из БюджетНовыеСтроки Цикл
		Если ТекСтрокаБюджет.СуммаРуб<>0 Тогда
			Если ЗначениеЗаполнено(Сценарий) Тогда

			Движение = Движения.ОборотыБюджетов.Добавить();
			Движение.Период = ТекСтрокаБюджет.Период;
			Движение.Сценарий = Сценарий;
			Движение.ЦФО = ТекСтрокаБюджет.ЦФО;
			Движение.СтатьяОборотов = ТекСтрокаБюджет.БюджетнаяСтатья;
			Движение.Валюта = ТекСтрокаБюджет.Валюта;
			Движение.абс_ТипКонтрагента = ТекСтрокаБюджет.ТипКонтрагента;
			Движение.абс_ТипСети = ТекСтрокаБюджет.ТипСети;
			Движение.абс_КВ = ТекСтрокаБюджет.КВ;
			Движение.абс_ТЭО = ТекСтрокаБюджет.ТЭО;
			Движение.абс_ЦФУ = ТекСтрокаБюджет.ЦФУ;
			Движение.абс_ТипРасхода = ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
			Движение.Количество = ТекСтрокаБюджет.Количество;
			Движение.СуммаУпр = ТекСтрокаБюджет.СуммаРуб;
			Движение.ВалютнаяСумма = ТекСтрокаБюджет.СуммаВал;
			Движение.СуммаСценария = ТекСтрокаБюджет.СуммаРуб;
			Движение.Организация = ТекСтрокаБюджет.Организация;
			
			//АБС НАЧАЛО Задача №08759
			Движение.Проект = ТекСтрокаБюджет.Проект;
			//\\АБС КОНЕЦ Задача №08759
			
			КонецЕсли;
		КонецЕсли;
		
        СформироватьДвижениеПоУстановкеЛимитов(ТекСтрокаБюджет,ТекСтрокаБюджет.Валюта);
		
		Если ТекСтрокаБюджет.СуммаЛимитаРуб<>0 Тогда
			
			Движение = Движения.КонтролируемыеЗначенияБюджетов.Добавить();
			Движение.Период = ТекСтрокаБюджет.Период;
			Движение.Сценарий = Сценарий;
			Движение.СтатьяОборотов = ТекСтрокаБюджет.БюджетнаяСтатья;
			Движение.ЦФО = ТекСтрокаБюджет.ЦФО;
			Движение.Организация = ТекСтрокаБюджет.Организация;
			Движение.абс_ТипКонтрагента = ТекСтрокаБюджет.ТипКонтрагента;
			Движение.абс_ТипСети = ТекСтрокаБюджет.ТипСети;
			Движение.абс_КВ = ТекСтрокаБюджет.КВ;
			Движение.абс_ТЭО = ТекСтрокаБюджет.ТЭО;
			Движение.абс_ЦФУ = ТекСтрокаБюджет.ЦФУ;
			Движение.абс_ТипРасхода = ТекСтрокаБюджет.ТипРасходаНаПроизводствоИРеализацию;
			Если ЗначениеЗаполнено(Сценарий) Тогда
				Движение.СуммаСценарияКонтроль = ТекСтрокаБюджет.СуммаЛимитаРуб;
				Движение.СуммаСценарияКонтрольВал = ТекСтрокаБюджет.СуммаЛимитаВал;
			Иначе
				Движение.СуммаСценарияИсполнение = ТекСтрокаБюджет.СуммаЛимитаРуб;
				Движение.СуммаСценарияИсполнениеВал = ТекСтрокаБюджет.СуммаЛимитаВал;
			КонецЕсли;
			Движение.Валюта = ТекСтрокаБюджет.Валюта;
			//	Движение.СуммаСценарияИсполнение = ТекСтрокаБюджет.СуммаРуб;
			
			//АБС НАЧАЛО Задача №08759
			Движение.Проект = ТекСтрокаБюджет.Проект;
			//\\АБС КОНЕЦ Задача №08759
			
		КонецЕсли;
	КонецЦикла;
	
	
	
	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	// Вставить содержимое обработчика.
	// регистр ОборотыБюджетов
	НЗ = РегистрыНакопления.ОборотыБюджетов.СоздатьНаборЗаписей();
	НЗ.Отбор.Регистратор.Значение = ссылка;
	НЗ.Отбор.регистратор.Использование = Истина;
	НЗ.Очистить();
	НЗ.Записать(истина);
	
	// регистр КонтролируемыеЗначенияБюджетов 
	НЗ = РегистрыНакопления.КонтролируемыеЗначенияБюджетов.СоздатьНаборЗаписей();
	НЗ.Отбор.Регистратор.Значение = ссылка;
	НЗ.Отбор.регистратор.Использование = Истина;
	НЗ.Очистить();
	НЗ.Записать(истина);
	

    	
  	// регистр УстановкаОграниченийПоБюджетам
	НЗ = РегистрыСведений.абс_УстановкаЛимитовПоСтатьям.СоздатьНаборЗаписей();
	НЗ.Отбор.Регистратор.Значение = ссылка;
	НЗ.Отбор.регистратор.Использование = Истина;
	НЗ.Очистить();
	НЗ.Записать(истина);
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Ответственный = глЗначениеПеременной("глТекущийПользователь");
	
	//АБС ВСТАВКА №855 НАЧАЛО
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.абс_ЗакупочныйЗаказ") Тогда
		
		ЭтотОбъект.Сценарий = Константы.абс_СценарийДДС.Получить();
		
		//Получим табличную часть
		ТаблицаПоМесяцам  = ДанныеЗаполнения.ГрафикПоставок;
				
		//Заполнение таблицы "Бюджет"
		Для каждого Строка Из ТаблицаПоМесяцам Цикл
			
			Если Строка.Период = '00010101' Тогда 
				Продолжить;
			КонецЕсли;				
						
			ТекСтрока = Бюджет.Добавить(); 
			ТекСтрока.Сторно = Истина;
			ТекСтрока.ТипРасходаНаПроизводствоИРеализацию = ДанныеЗаполнения.ТипРасхода;
			ТекСтрока.Валюта = ДанныеЗаполнения.ВалютаДокумента;
			ЗаполнитьЗначенияСвойств(ТекСтрока,ДанныеЗаполнения);
			ЗаполнитьЗначенияСвойств(ТекСтрока,Строка);
			//Суммы		
			ТекСтрока.СуммаВал = Строка.ВалютнаяСуммаБезНДС;
			ТекСтрока.СуммаРуб = Строка.СуммаБезНДС;
			ТекСтрока.СуммаЛимитаВал = Строка.ВалютнаяСуммаБезНДС;
			ТекСтрока.СуммаЛимитаРуб = Строка.СуммаБезНДС; 	
			
			//Рекласс
			НоваяСтрока = БюджетНовыеСтроки.Добавить();	
			ЗаполнитьЗначенияСвойств(НоваяСтрока,ТекСтрока);
			НоваяСтрока.НомерСтрокиБюджета = 1;			
			
		КонецЦикла;	
		
	КонецЕсли;
	//\\АБС ВСТАВКА №855 КОНЕЦ
	
КонецПроцедуры

