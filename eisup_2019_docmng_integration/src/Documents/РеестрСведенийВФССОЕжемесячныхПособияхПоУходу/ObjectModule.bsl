

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

Процедура ЗаполнитьДанныеСотрудника(ТекущаяСтрока = Неопределено, СтрокаИсключений = "")
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СотрудникиОрганизаций.Физлицо,
	|	СотрудникиОрганизаций.Физлицо.СтраховойНомерПФР КАК СтраховойНомерПФР,
	|	СотрудникиОрганизаций.Ссылка,
	|	СотрудникиОрганизаций.Физлицо.ИНН КАК ИНН,
	|	СотрудникиОрганизаций.Физлицо.ДатаРождения КАК ДатаРождения,
	|	СотрудникиОрганизаций.Физлицо.Пол КАК Пол
	|ПОМЕСТИТЬ ВТСотрудник
	|ИЗ
	|	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
	|ГДЕ
	|	СотрудникиОрганизаций.Ссылка В(&Ссылки)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.ФизЛицо,
	|	СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних.Статус
	|ПОМЕСТИТЬ ВТСтатусыНалогоплательщика
	|ИЗ
	|	РегистрСведений.СтатусФизЛицКакНалогоплательщиковНДФЛ.СрезПоследних(
	|			&ДатаАктуальности,
	|			ФизЛицо В
	|				(ВЫБРАТЬ
	|					СотрудникиОрганизаций.Физлицо
	|				ИЗ
	|					ВТСотрудник КАК СотрудникиОрганизаций)) КАК СтатусФизЛицКакНалогоплательщиковНДФЛСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Сотрудник.Ссылка,
	|	Сотрудник.Физлицо,
	|	Сотрудник.СтраховойНомерПФР,
	|	"","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 + "","" + ВЫБОР
	|		КОГДА АдресаРегистрации.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|			ТОГДА ""дом""
	|		ИНАЧЕ ""владение""
	|	КОНЕЦ + "","" + ВЫБОР
	|		КОГДА АдресаРегистрации.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|			ТОГДА ""корпус""
	|		ИНАЧЕ ""строение""
	|	КОНЕЦ + "","" + ВЫБОР
	|		КОГДА АдресаРегистрации.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|			ТОГДА ""кв.""
	|		ИНАЧЕ ""оф.""
	|	КОНЕЦ КАК АдресРегистрации,
	|	ФИОФизЛицСрезПоследних.Фамилия,
	|	ФИОФизЛицСрезПоследних.Имя,
	|	ФИОФизЛицСрезПоследних.Отчество,
	|	ЕСТЬNULL(СтатусыНалогоплательщика.Статус, ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) КАК СтатусНалогоплательщика,
	|	Сотрудник.ИНН,
	|	Сотрудник.ДатаРождения,
	|	Сотрудник.Пол
	|ИЗ
	|	ВТСотрудник КАК Сотрудник
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыНалогоплательщика КАК СтатусыНалогоплательщика
	|		ПО Сотрудник.Физлицо = СтатусыНалогоплательщика.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	|				&ДатаАктуальности,
	|				ФизЛицо В
	|					(ВЫБРАТЬ
	|						Сотрудник.Физлицо
	|					ИЗ
	|						ВТСотрудник КАК Сотрудник)) КАК ФИОФизЛицСрезПоследних
	|		ПО Сотрудник.Физлицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
	|		ПО Сотрудник.Физлицо = АдресаРегистрации.Объект
	|			И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|			И (АдресаРегистрации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))";
	Запрос.УстановитьПараметр("ДатаАктуальности", Дата);
	Если ТекущаяСтрока = Неопределено Тогда
		Запрос.УстановитьПараметр("Ссылки", РаботникиОрганизации.ВыгрузитьКолонку("Сотрудник"));
		Выборка = Запрос.Выполнить().Выбрать();
		СтруктураПоиска = Новый Структура("Сотрудник");
		Пока Выборка.Следующий() Цикл
			СтруктураПоиска.Сотрудник = Выборка.Ссылка;
			СтрокиТЧ = РаботникиОрганизации.НайтиСтроки(СтруктураПоиска);
			Для каждого СтрокаТЧ Из СтрокиТЧ Цикл
				ЗаполнитьЗначенияСвойств(СтрокаТЧ, Выборка, , СтрокаИсключений);
			КонецЦикла;
		КонецЦикла;
	Иначе
		Запрос.УстановитьПараметр("Ссылки", ТекущаяСтрока.Сотрудник);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка, , СтрокаИсключений);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьДанныеПриказа(ТекущаяСтрока = Неопределено)

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ДокументОтпуска.Ссылка,
	|	ДокументОтпуска.Сотрудник,
	|	ДокументОтпуска.ДатаНачала КАК ДатаНачалаСобытия
	|ПОМЕСТИТЬ ВТДокументыЗаполнения
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ДокументОтпуска
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.РаботникиОрганизации КАК РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации
	|		ПО ДокументОтпуска.Ссылка = РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.ПриказНаОтпускПоУходуЗаРебенком
	|			И (РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка <> &ТекущийРеестр)
	|			И (РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Ссылка.Проведен)
	|ГДЕ
	|	ДокументОтпуска.Проведен
	|	И ДокументОтпуска.ДатаОкончанияПособияДоПолутораЛет >= &ДатаПередачиФССВыплатыПособий
	|	И &ЗаполнятьВсемиДокументами
	|	И ДокументОтпуска.Организация = &Организация
	|	И РеестрСведенийВФССОПособияхПоНетрудоспособностиРаботникиОрганизации.Сотрудник ЕСТЬ NULL 
	|	И ДокументОтпуска.ВыплачиватьПособиеДоПолутораЛет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументОтпуска.Ссылка,
	|	ДокументОтпуска.Сотрудник,
	|	ДокументОтпуска.ДатаНачала
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ДокументОтпуска
	|ГДЕ
	|	ДокументОтпуска.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= ДатыРегистра.ДатаНачалаСобытия
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.СокращенноеРабочееВремя
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|							И РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|						ТОГДА РаботникиОрганизаций.ГрафикРаботыЗавершения.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботыЗавершения.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		КОГДА РаботникиОрганизаций.ГрафикРаботы.СокращенноеРабочееВремя
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени <> ЗНАЧЕНИЕ(Справочник.ГрафикиРаботы.ПустаяСсылка)
	|				И РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели <> 0
	|			ТОГДА РаботникиОрганизаций.ГрафикРаботы.ДлительностьРабочейНедели / РаботникиОрганизаций.ГрафикРаботы.ГрафикПолногоРабочегоВремени.ДлительностьРабочейНедели
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоляВремени,
	|	ВЫБОР
	|		КОГДА РаботникиОрганизаций.ПериодЗавершения <= ДатыРегистра.ДатаНачалаСобытия
	|				И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения.КодПоОКАТО <> """"
	|						ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения.РайонныйКоэффициентРФ
	|					ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения.РайонныйКоэффициентРФ
	|				КОНЕЦ
	|		КОГДА РаботникиОрганизаций.ПодразделениеОрганизации.КодПоОКАТО <> """"
	|			ТОГДА РаботникиОрганизаций.ПодразделениеОрганизации.РайонныйКоэффициентРФ
	|		ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение.РайонныйКоэффициентРФ
	|	КОНЕЦ КАК РайонныйКоэффициент,
	|	ДатыРегистра.Ссылка
	|ПОМЕСТИТЬ ВТДанныеСотрудника
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ДанныеРегистра.Ссылка КАК Ссылка,
	|		ДанныеРегистра.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|		ДанныеРегистра.Сотрудник КАК Сотрудник,
	|		МАКСИМУМ(РаботникиОрганизаций.Период) КАК ПериодРегистра
	|	ИЗ
	|		ВТДокументыЗаполнения КАК ДанныеРегистра
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|			ПО ДанныеРегистра.ДатаНачалаСобытия >= РаботникиОрганизаций.Период
	|				И ДанныеРегистра.Сотрудник = РаботникиОрганизаций.Сотрудник
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеРегистра.ДатаНачалаСобытия,
	|		ДанныеРегистра.Сотрудник,
	|		ДанныеРегистра.Ссылка) КАК ДатыРегистра
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|		ПО ДатыРегистра.ПериодРегистра = РаботникиОрганизаций.Период
	|			И ДатыРегистра.Сотрудник = РаботникиОрганизаций.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыАктуальностиММОТ.ДатаНачалаСобытия,
	|	МинимальнаяОплатаТрудаРФ.Размер КАК Размер
	|ПОМЕСТИТЬ ВТРазмерММОТНаДатуДатаНачалаСобытия
	|ИЗ
	|	(ВЫБРАТЬ
	|		Основной.ДатаНачалаСобытия КАК ДатаНачалаСобытия,
	|		МАКСИМУМ(МинимальнаяОплатаТрудаРФ.Период) КАК ДатаАктуальности
	|	ИЗ
	|		ВТДокументыЗаполнения КАК Основной
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|			ПО Основной.ДатаНачалаСобытия >= МинимальнаяОплатаТрудаРФ.Период
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Основной.ДатаНачалаСобытия) КАК ДатыАктуальностиММОТ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МинимальнаяОплатаТрудаРФ КАК МинимальнаяОплатаТрудаРФ
	|		ПО (МинимальнаяОплатаТрудаРФ.Период = ДатыАктуальностиММОТ.ДатаАктуальности)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументОтпускаРасчетСреднего2011.РасчетныйГод,
	|	СУММА(ДокументОтпускаРасчетСреднего2011.Заработок) КАК Заработок,
	|	ДокументОтпускаРасчетСреднего2011.Ссылка
	|ПОМЕСТИТЬ ВТРасчет2011
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.РасчетСреднего2011 КАК ДокументОтпускаРасчетСреднего2011
	|ГДЕ
	|	ДокументОтпускаРасчетСреднего2011.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыЗаполнения.Ссылка
	|			ИЗ
	|				ВТДокументыЗаполнения КАК ДокументыЗаполнения)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументОтпускаРасчетСреднего2011.РасчетныйГод,
	|	ДокументОтпускаРасчетСреднего2011.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументОтпускаГодыРасчетаСреднего2011.НомерСтроки,
	|	ДокументОтпускаГодыРасчетаСреднего2011.Год,
	|	ДокументОтпускаГодыРасчетаСреднего2011.Ссылка
	|ПОМЕСТИТЬ ВТГоды2011
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ГодыРасчетаСреднего2011 КАК ДокументОтпускаГодыРасчетаСреднего2011
	|ГДЕ
	|	ДокументОтпускаГодыРасчетаСреднего2011.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыЗаполнения.Ссылка
	|			ИЗ
	|				ВТДокументыЗаполнения КАК ДокументыЗаполнения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ДокументОтпускаРасчетСреднего.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(ДокументОтпускаРасчетСреднего.Результат) КАК Результат,
	|	ДокументОтпускаРасчетСреднего.Ссылка
	|ПОМЕСТИТЬ ВТРасчет2010
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.РасчетСреднего КАК ДокументОтпускаРасчетСреднего
	|ГДЕ
	|	ДокументОтпускаРасчетСреднего.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыЗаполнения.Ссылка
	|			ИЗ
	|				ВТДокументыЗаполнения КАК ДокументыЗаполнения)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументОтпускаРасчетСреднего.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка КАК Ссылка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерСтроки,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Очередность,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаРебенкаВыплачиваетсяПособие,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ВидПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаименованиеПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаличиеРешенияСудаОЛишенииПрав,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка.Сотрудник,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка.ДатаНачала,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Фамилия,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Отчество,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаРожденияРебенка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.СерияДокумента
	|ПОМЕСТИТЬ ВТДанныеОДетях
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком.ДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|ГДЕ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыЗаполнения.Ссылка
	|			ИЗ
	|				ВТДокументыЗаполнения КАК ДокументыЗаполнения)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДатыРождения.Ссылка,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ДанныеОДетях.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК ЯвляетсяОпекуном
	|ПОМЕСТИТЬ ВТМладшиеДети
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеОДетях.Ссылка КАК Ссылка,
	|		МАКСИМУМ(ДанныеОДетях.ДатаРожденияРебенка) КАК ДатаРожденияРебенка
	|	ИЗ
	|		ВТДанныеОДетях КАК ДанныеОДетях
	|	ГДЕ
	|		ДанныеОДетях.НаРебенкаВыплачиваетсяПособие
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ДанныеОДетях.Ссылка) КАК ДатыРождения
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОДетях КАК ДанныеОДетях
	|		ПО ДатыРождения.Ссылка = ДанныеОДетях.Ссылка
	|			И ДатыРождения.ДатаРожденияРебенка = ДанныеОДетях.ДатаРожденияРебенка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДатыРождения.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументОтпуска.Сотрудник КАК Сотрудник,
	|	ДокументОтпуска.Физлицо,
	|	ДокументОтпуска.Ссылка КАК ПриказНаОтпускПоУходуЗаРебенком,
	|	3 КАК КоличествоСтраниц,
	|	ДокументОтпуска.ПеречислятьПособиеПочтовымПереводом,
	|	ДокументОтпуска.Банк,
	|	ДокументОтпуска.НаименованиеБанка,
	|	ДокументОтпуска.БИКБанка,
	|	ДокументОтпуска.НомерЛицевогоСчета,
	|	ДокументОтпуска.АдресПочтовый,
	|	ДокументОтпуска.Фамилия КАК Фамилия,
	|	ДокументОтпуска.Имя КАК Имя,
	|	ДокументОтпуска.Отчество,
	|	ДокументОтпуска.РасчетПоПравилам2010Года КАК ПорядокРасчетаСреднегоЗаработка,
	|	ДокументОтпуска.Дата КАК ДатаПриказаНаОтпускПоУходуЗаРебенком,
	|	ДокументОтпуска.Номер КАК НомерПриказаНаОтпускПоУходуЗаРебенком,
	|	ДокументОтпуска.ДатаНачала КАК ДатаНачала,
	|	ДокументОтпуска.ДатаОкончанияПособияДоПолутораЛет КАК ДатаОкончания,
	|	ПервыйГодРасчета2011.Год КАК ПервыйГодРасчета,
	|	ВторойГодРасчета2011.Год КАК ВторойГодРасчета,
	|	ДанныеСотрудника.РайонныйКоэффициент,
	|	Расчет2010.Результат КАК ЗаработокЗаПериодРасчета,
	|	ДокументОтпуска.ПериодРасчетаСреднегоЗаработкаНачало,
	|	ДокументОтпуска.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	Расчет2010.ОтработаноДней КАК КалендарныхДнейРасчетногоПериода,
	|	ВЫБОР
	|		КОГДА ПервыйГодРасчета2011.Год = ГОД(ДокументОтпуска.ДатаНачала) - 2
	|				И ВторойГодРасчета2011.Год = ГОД(ДокументОтпуска.ДатаНачала) - 1
	|			ТОГДА 0
	|		КОГДА ПервыйГодРасчета2011.Год <> ГОД(ДокументОтпуска.ДатаНачала) - 2
	|				И ВторойГодРасчета2011.Год <> ГОД(ДокументОтпуска.ДатаНачала) - 2
	|			ТОГДА ГОД(ДокументОтпуска.ДатаНачала) - 2
	|		ИНАЧЕ ГОД(ДокументОтпуска.ДатаНачала) - 1
	|	КОНЕЦ КАК ЗамененныйПервыйГодРасчета,
	|	ВЫБОР
	|		КОГДА ПервыйГодРасчета2011.Год = ГОД(ДокументОтпуска.ДатаНачала) - 2
	|				И ВторойГодРасчета2011.Год = ГОД(ДокументОтпуска.ДатаНачала) - 1
	|			ТОГДА 0
	|		КОГДА ПервыйГодРасчета2011.Год <> ГОД(ДокументОтпуска.ДатаНачала) - 1
	|				И ВторойГодРасчета2011.Год <> ГОД(ДокументОтпуска.ДатаНачала) - 1
	|				И ПервыйГодРасчета2011.Год <> ГОД(ДокументОтпуска.ДатаНачала) - 2
	|				И ВторойГодРасчета2011.Год <> ГОД(ДокументОтпуска.ДатаНачала) - 2
	|			ТОГДА ГОД(ДокументОтпуска.ДатаНачала) - 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ЗамененныйВторойГодРасчета,
	|	ЗаработокПервыйГод.Заработок КАК ЗаработокПервыйГодРасчета,
	|	ЗаработокВторойГод.Заработок КАК ЗаработокВторойГодРасчета,
	|	ДокументОтпуска.Дата КАК ДатаПредставленияПакетаДокументов,
	|	ДокументОтпуска.СреднедневнойЗаработок КАК СреднийДневнойЗаработок,
	|	РазмерММОТНаДатуДатаНачалаСобытия.Размер КАК МРОТ,
	|	ДанныеСотрудника.ДоляВремени,
	|	ВЫБОР
	|		КОГДА ДокументОтпуска.Сотрудник.ВидЗанятости = ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.Совместительство)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Совместительство,
	|	ВЫБОР
	|		КОГДА ПервыйГодРасчета2011.Год = ГОД(ДокументОтпуска.ДатаНачала) - 2
	|				И ВторойГодРасчета2011.Год = ГОД(ДокументОтпуска.ДатаНачала) - 1
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ ДокументОтпуска.Дата
	|	КОНЕЦ КАК ДатаЗаявленияОЗаменеРасчетногоГода,
	|	ДокументОтпуска.ДатаСправкиОНеполученииПособияОтОтца,
	|	ДокументОтпуска.НомерСправкиОНеполученииПособияОтОтца,
	|	ДокументОтпуска.ДатаСправкиОНеполученииПособияОтМатери,
	|	ДокументОтпуска.НомерСправкиОНеполученииПособияОтМатери,
	|	ДокументОтпуска.ПрименятьЛьготыПриНачисленииПособия,
	|	ДокументОтпуска.ПроживаниеРаботаВЛьготнойЗоне,
	|	ДокументОтпуска.СтатусЛьготнойЗоны,
	|	ДокументОтпуска.ДатаСправкиПоДругимМестамРаботы,
	|	ДокументОтпуска.НомерСправкиПоДругимМестамРаботы,
	|	ДокументОтпуска.ВидДокумента,
	|	ДокументОтпуска.СерияДокумента,
	|	ДокументОтпуска.НомерДокумента,
	|	ДокументОтпуска.ДатаВыдачиДокумента,
	|	ДокументОтпуска.КемВыданДокумент,
	|	ВЫБОР
	|		КОГДА МладшиеДети.ЯвляетсяОпекуном
	|			ТОГДА ""Опекун""
	|		КОГДА ДокументОтпуска.Сотрудник.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Женский)
	|			ТОГДА ""Мать""
	|		КОГДА ДокументОтпуска.Сотрудник.Физлицо.Пол = ЗНАЧЕНИЕ(Перечисление.ПолФизическихЛиц.Мужской)
	|			ТОГДА ""Отец""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Статус
	|ИЗ
	|	Документ.ОтпускПоУходуЗаРебенком КАК ДокументОтпуска
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоды2011 КАК ВторойГодРасчета2011
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчет2011 КАК ЗаработокВторойГод
	|			ПО ВторойГодРасчета2011.Год = ЗаработокВторойГод.РасчетныйГод
	|				И ВторойГодРасчета2011.Ссылка = ЗаработокВторойГод.Ссылка
	|		ПО (ВторойГодРасчета2011.НомерСтроки = 2)
	|			И ДокументОтпуска.Ссылка = ВторойГодРасчета2011.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГоды2011 КАК ПервыйГодРасчета2011
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчет2011 КАК ЗаработокПервыйГод
	|			ПО ПервыйГодРасчета2011.Год = ЗаработокПервыйГод.РасчетныйГод
	|				И ПервыйГодРасчета2011.Ссылка = ЗаработокПервыйГод.Ссылка
	|		ПО (ПервыйГодРасчета2011.НомерСтроки = 1)
	|			И ДокументОтпуска.Ссылка = ПервыйГодРасчета2011.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчет2010 КАК Расчет2010
	|		ПО ДокументОтпуска.Ссылка = Расчет2010.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеСотрудника КАК ДанныеСотрудника
	|		ПО ДокументОтпуска.Ссылка = ДанныеСотрудника.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРазмерММОТНаДатуДатаНачалаСобытия КАК РазмерММОТНаДатуДатаНачалаСобытия
	|		ПО ДокументОтпуска.ДатаНачала = РазмерММОТНаДатуДатаНачалаСобытия.ДатаНачалаСобытия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМладшиеДети КАК МладшиеДети
	|		ПО ДокументОтпуска.Ссылка = МладшиеДети.Ссылка
	|ГДЕ
	|	ДокументОтпуска.Ссылка В
	|			(ВЫБРАТЬ
	|				ДокументыЗаполнения.Ссылка
	|			ИЗ
	|				ВТДокументыЗаполнения КАК ДокументыЗаполнения)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Фамилия,
	|	Имя,
	|	Сотрудник,
	|	ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Ссылка КАК Ссылка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Очередность,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаРебенкаВыплачиваетсяПособие,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ВидПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаименованиеПодтверждающегоДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерДокумента,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НаличиеРешенияСудаОЛишенииПрав,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Сотрудник,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаНачала,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Фамилия,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Имя,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.Отчество,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.ДатаРожденияРебенка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.СерияДокумента
	|ИЗ
	|	ВТДанныеОДетях КАК ОтпускПоУходуЗаРебенкомДанныеОДетях
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	ОтпускПоУходуЗаРебенкомДанныеОДетях.НомерСтроки";
	
	Запрос.УстановитьПараметр("ДатаПередачиФССВыплатыПособий", ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ДатаПередачиФССВыплатыПособий"));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ТекущийРеестр", Ссылка);
	Запрос.УстановитьПараметр("ЗаполнятьВсемиДокументами", ТекущаяСтрока = Неопределено);
	Если ТекущаяСтрока <> Неопределено Тогда
		Запрос.УстановитьПараметр("Ссылка", ТекущаяСтрока.ПриказНаОтпускПоУходуЗаРебенком);
	Иначе
		Запрос.УстановитьПараметр("Ссылка", Документы.ОтпускПоУходуЗаРебенком.ПустаяСсылка());
	КонецЕсли;
	Результаты = Запрос.ВыполнитьПакет();
	ВсегоЗапросов = Результаты.Количество();
	Сотрудники = Результаты[ВсегоЗапросов - 2];
	Дети = Результаты[ВсегоЗапросов - 1];
	Если ТекущаяСтрока <> Неопределено Тогда
		СтрокиКУДалению = ДанныеОДетях.НайтиСтроки(Новый Структура("Сотрудник,ДатаНачала", ТекущаяСтрока.Сотрудник, ТекущаяСтрока.ДатаНачала));
		Для каждого СтрокаКУДалению Из СтрокиКУДалению Цикл
			ДанныеОДетях.Удалить(СтрокаКУДалению)
		КонецЦикла;
		Выборка = Сотрудники.Выбрать();
		Выборка.Следующий();
		ЗаполнитьЗначенияСвойств(ТекущаяСтрока, Выборка);
		Выборка = Дети.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ДанныеОДетях.Добавить(), Выборка);
		КонецЦикла;
		СформироватьТекстовыеПоля(ТекущаяСтрока);
	Иначе
		РаботникиОрганизации.Загрузить(Сотрудники.Выгрузить());
		ДанныеОДетях.Загрузить(Дети.Выгрузить());
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			СформироватьТекстовыеПоля(СтрокаТЧ);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Функция ЗапросДляФайла()
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГОД(ПредельнаяВеличинаБазыСтраховыхВзносов.Период) КАК Год,
	|	ПредельнаяВеличинаБазыСтраховыхВзносов.Размер
	|ПОМЕСТИТЬ ВТПредельныеВеличиныПоГодам
	|ИЗ
	|	РегистрСведений.ПредельнаяВеличинаБазыСтраховыхВзносов КАК ПредельнаяВеличинаБазыСтраховыхВзносов
	|;
	|ВЫБРАТЬ
	|	Дети.Ссылка,
	|	Дети.Сотрудник,
	|	Дети.ДатаНачала,
	|	Дети.Фамилия,
	|	Дети.Имя,
	|	Дети.Отчество,
	|	Дети.Ребенок,
	|	Дети.ДатаРожденияРебенка,
	|	Дети.Очередность,
	|	Дети.НаРебенкаВыплачиваетсяПособие,
	|	Дети.ВидПодтверждающегоДокумента,
	|	Дети.НаименованиеПодтверждающегоДокумента,
	|	Дети.ДатаДокумента,
	|	Дети.СерияДокумента,
	|	Дети.НомерДокумента,
	|	Дети.НаличиеРешенияСудаОЛишенииПрав,
	|	Дети.НомерСтроки
	|ПОМЕСТИТЬ ВТДанныеОДетях
	|ИЗ
	|	Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.ДанныеОДетях КАК Дети
	|ГДЕ
	|	Дети.Ссылка = &ДокументСсылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОДетях.НомерСтроки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПредыдущиеДети.ВидПодтверждающегоДокумента <> ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОСмерти)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НаличиеДокументаОРождении,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПредыдущиеДети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОСмерти)
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ЛОЖЬ
	|		КОНЕЦ) КАК НаличиеДокументаОСмерти
	|ПОМЕСТИТЬ ВТДанныеПредыдущихДетей
	|ИЗ
	|	ВТДанныеОДетях КАК ДанныеОДетях
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеОДетях КАК ПредыдущиеДети
	|		ПО ДанныеОДетях.Сотрудник = ПредыдущиеДети.Сотрудник
	|			И ДанныеОДетях.ДатаНачала = ПредыдущиеДети.ДатаНачала
	|			И ДанныеОДетях.Очередность > ПредыдущиеДети.Очередность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОДетях.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Пособия.Фамилия + "" "" + Пособия.Имя + "" "" + Пособия.Отчество КАК ФИОСотрудника,
	|	Пособия.Ссылка,
	|	Пособия.НомерСтроки КАК НомерСтроки,
	|	Пособия.Сотрудник,
	|	Пособия.ФизЛицо,
	|	Пособия.ПеречислятьПособиеПочтовымПереводом,
	|	Пособия.НаименованиеБанка,
	|	Пособия.БИКБанка,
	|	Пособия.НомерЛицевогоСчета,
	|	Пособия.АдресРегистрации,
	|	Пособия.АдресПочтовый,
	|	Пособия.Отчество,
	|	Пособия.Имя,
	|	Пособия.Фамилия,
	|	Пособия.ПорядокРасчетаСреднегоЗаработка,
	|	Пособия.СтраховойНомерПФР,
	|	Пособия.НомерПриказаНаОтпускПоУходуЗаРебенком,
	|	Пособия.ДатаПриказаНаОтпускПоУходуЗаРебенком,
	|	Пособия.ДатаНачала,
	|	Пособия.ДатаОкончания,
	|	Пособия.ПервыйГодРасчета,
	|	Пособия.ВторойГодРасчета,
	|	Пособия.РайонныйКоэффициент,
	|	Пособия.ДоляВремени,
	|	Пособия.ПериодРасчетаСреднегоЗаработкаНачало,
	|	Пособия.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	Пособия.КалендарныхДнейРасчетногоПериода,
	|	Пособия.ЗамененныйПервыйГодРасчета,
	|	Пособия.ЗамененныйВторойГодРасчета,
	|	ВЫБОР
	|		КОГДА Пособия.ЗаработокПервыйГодРасчета > ПредельнаяВеличинаЗаПервыйГодРасчета.Размер
	|			ТОГДА ПредельнаяВеличинаЗаПервыйГодРасчета.Размер
	|		ИНАЧЕ Пособия.ЗаработокПервыйГодРасчета
	|	КОНЕЦ КАК ЗаработокПервыйГодРасчета,
	|	ВЫБОР
	|		КОГДА Пособия.ЗаработокВторойГодРасчета > ПредельнаяВеличинаЗаВторойГодРасчета.Размер
	|			ТОГДА ПредельнаяВеличинаЗаВторойГодРасчета.Размер
	|		ИНАЧЕ Пособия.ЗаработокВторойГодРасчета
	|	КОНЕЦ КАК ЗаработокВторойГодРасчета,
	|	Пособия.ЗаработокЗаПериодРасчета,
	|	Пособия.ТарифнаяСтавкаОклад,
	|	Пособия.ДатаПредставленияПакетаДокументов,
	|	""5"" КАК ВидВыплаты,
	|	Пособия.СреднийДневнойЗаработок,
	|	Пособия.МРОТ,
	|	Пособия.ПриказНаОтпускПоУходуЗаРебенком,
	|	Пособия.ДатаСправкиОНеполученииПособияОтОтца,
	|	Пособия.НомерСправкиОНеполученииПособияОтОтца,
	|	Пособия.ДатаСправкиОНеполученииПособияОтМатери,
	|	Пособия.НомерСправкиОНеполученииПособияОтМатери,
	|	Пособия.СтатусЛьготнойЗоны,
	|	Пособия.ДатаСправкиПоДругимМестамРаботы,
	|	Пособия.НомерСправкиПоДругимМестамРаботы,
	|	Пособия.ПрименятьЛьготыПриНачисленииПособия,
	|	Пособия.ВидДокументаНаЛьготы,
	|	Пособия.ДатаДокументаНаЛьготы,
	|	Пособия.НомерДокументаНаЛьготы,
	|	Пособия.ИНН,
	|	Пособия.ДатаРождения,
	|	Пособия.Пол,
	|	Пособия.ВидДокумента.КодИМНС КАК ВидУдостоверенияЛичности,
	|	Пособия.СерияДокумента,
	|	Пособия.НомерДокумента,
	|	Пособия.ДатаВыдачиДокумента,
	|	Пособия.КемВыданДокумент,
	|	Пособия.СтатусНалогоплательщика КАК СтатусНалогоплательщикаДляПроверки,
	|	ВЫБОР
	|		КОГДА Пособия.СтатусНалогоплательщика = ЗНАЧЕНИЕ(Перечисление.СтатусыНалогоплательщиковПоНДФЛ.НеРезидент)
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК СтатусНалогоплательщика,
	|	Дети.Фамилия КАК ФамилияРебенка,
	|	Дети.Имя КАК ИмяРебенка,
	|	Дети.Отчество КАК ОтчествоРебенка,
	|	Дети.ДатаРожденияРебенка,
	|	Дети.Очередность,
	|	ВЫБОР
	|		КОГДА Дети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|			ТОГДА 1
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК УсыновлениеОпека,
	|	ВЫБОР
	|		КОГДА Дети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.ИнойДокументПодтверждающийРождениеРебенка)
	|			ТОГДА ""23""
	|		КОГДА Дети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОРождении)
	|			ТОГДА ""03""
	|		КОГДА Дети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.СвидетельствоОСмерти)
	|			ТОГДА ""81""
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДокументОРожденииВид,
	|	ВЫБОР
	|		КОГДА Дети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|			ТОГДА Дети.ДатаДокумента
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК УсыновлениеОпекаДатаВыдачи,
	|	ВЫБОР
	|		КОГДА Дети.ВидПодтверждающегоДокумента = ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|			ТОГДА Дети.СерияДокумента + "" "" + Дети.НомерДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК УсыновлениеОпекаСерияНомер,
	|	ВЫБОР
	|		КОГДА Дети.ВидПодтверждающегоДокумента <> ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|			ТОГДА Дети.ДатаДокумента
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК ДокументОРожденииДатаВыдачи,
	|	ВЫБОР
	|		КОГДА Дети.ВидПодтверждающегоДокумента <> ЗНАЧЕНИЕ(Перечисление.ВидыПодтверждающихДокументовОтпускаПоУходу.РешениеОбУстановленииОпеки)
	|			ТОГДА Дети.СерияДокумента + "" "" + Дети.НомерДокумента
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ДокументОРожденииСерияНомер,
	|	ДанныеПредыдущихДетей.НаличиеДокументаОРождении,
	|	ДанныеПредыдущихДетей.НаличиеДокументаОСмерти,
	|	Пособия.НомерПриказаОЗаменеПослеродовогоОтпуска,
	|	Пособия.ДатаПриказаОЗаменеПослеродовогоОтпуска
	|ИЗ
	|	ВТДанныеОДетях КАК Дети
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.РаботникиОрганизации КАК Пособия
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельныеВеличиныПоГодам КАК ПредельнаяВеличинаЗаПервыйГодРасчета
	|		ПО (ВЫБОР
	|				КОГДА Пособия.ПервыйГодРасчета < 2010
	|					ТОГДА 2010
	|				ИНАЧЕ Пособия.ПервыйГодРасчета
	|			КОНЕЦ = ПредельнаяВеличинаЗаПервыйГодРасчета.Год)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПредельныеВеличиныПоГодам КАК ПредельнаяВеличинаЗаВторойГодРасчета
	|		ПО (ВЫБОР
	|				КОГДА Пособия.ВторойГодРасчета < 2010
	|					ТОГДА 2010
	|				ИНАЧЕ Пособия.ВторойГодРасчета
	|			КОНЕЦ = ПредельнаяВеличинаЗаВторойГодРасчета.Год)
	|		ПО Дети.Ссылка = Пособия.Ссылка
	|			И Дети.Сотрудник = Пособия.Сотрудник
	|			И Дети.ДатаНачала = Пособия.ДатаНачала
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДанныеПредыдущихДетей КАК ДанныеПредыдущихДетей
	|		ПО Дети.НомерСтроки = ДанныеПредыдущихДетей.НомерСтроки
	|ГДЕ
	|	Дети.НаРебенкаВыплачиваетсяПособие
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Возврат Запрос.Выполнить();

КонецФункции // ЗапросДляФайла()

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Печатает реестр сведений для назначения и выплаты пособий
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   ТабличныйДокумент
//
Функция ПечатьОписьЗаявленийИДокументовВФСС()
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
		
	ВыборкаПоШапкеДокумента = ОбменСведениямиОПособияхСФСС.СформироватьЗапросПоШапкеДокумента(ЭтотОбъект).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоТЧРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	
	Отказ = Ложь;
	
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоТЧРаботникиОрганизации);
	
	Если Отказ Тогда
	
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат Неопределено;
	
	КонецЕсли; 
	
	ВыборкаПоТЧРаботникиОрганизации.Сбросить();
	
	Возврат ОбменСведениямиОПособияхСФСС.ПечатьОписьЗаявленийИДокументовВФСС(ВыборкаПоШапкеДокумента, ВыборкаПоТЧРаботникиОрганизации);
		

КонецФункции // ПечатьРеестрСведенийВФСС()

// Печатает реестр сведений для назначения и выплаты пособий
//
// Параметры
//  нет
//
// Возвращаемое значение:
//   ТабличныйДокумент
//
Функция ПечатьРеестрСведенийВФСС()
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
		
	ВыборкаПоШапкеДокумента = ОбменСведениямиОПособияхСФСС.СформироватьЗапросПоШапкеДокумента(ЭтотОбъект).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоТЧРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	
	Отказ = Ложь;

	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоТЧРаботникиОрганизации);
	
	Если Отказ Тогда
	
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат Неопределено;
	
	КонецЕсли; 
	
	ВыборкаПоТЧРаботникиОрганизации.Сбросить();
	
	ТабДокумент = Новый ТабличныйДокумент;
		
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РеестрСведенийВФССОЕжемесячныхПособияхПоУходу";
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Макет = ПолучитьМакет("РеестрСведенийВФСС");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодписи = Макет.ПолучитьОбласть("Подписи");
	ПовторятьПриПечатиСтроки = Макет.ПолучитьОбласть("ПовторятьПриПечати"); // повторяющаяся шапка страницы
	
	// массив с двумя строками - для разбиения на страницы
	ВыводимыеОбласти = Новый Массив();
	ВыводимыеОбласти.Добавить(ОбластьСтрока);
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
	ОбластьПодписи.Параметры.Заполнить(ВыборкаПоШапкеДокумента);
	ТабДокумент.Вывести(ОбластьШапка);
	ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
	
	ПорядковыеЧислительные = Новый Соответствие;
	ПорядковыеЧислительные.Вставить(1,"первый");
	ПорядковыеЧислительные.Вставить(2,"второй");
	ПорядковыеЧислительные.Вставить(3,"третий");
	ПорядковыеЧислительные.Вставить(4,"четвертый");
	ПорядковыеЧислительные.Вставить(5,"пятый");
	ПорядковыеЧислительные.Вставить(6,"шестой");
	ПорядковыеЧислительные.Вставить(7,"седьмой");
	ПорядковыеЧислительные.Вставить(8,"восьмой");
	ПорядковыеЧислительные.Вставить(9,"девятый");
	ПорядковыеЧислительные.Вставить(10,"десятый");
	ПорядковыеЧислительные.Вставить(11,"одиннадцатый");
	ПорядковыеЧислительные.Вставить(12,"двенадцатый");
	ПорядковыеЧислительные.Вставить(13,"тринадцатый");
	ПорядковыеЧислительные.Вставить(14,"четырнадцатый");
	ПорядковыеЧислительные.Вставить(15,"пятнадцатый");
	ПорядковыеЧислительные.Вставить(16,"шестнадцатый");
	ПорядковыеЧислительные.Вставить(17,"семнадцатый");
	ПорядковыеЧислительные.Вставить(18,"восемнадцатый");
	ПорядковыеЧислительные.Вставить(19,"девятнадцатый");
	ПорядковыеЧислительные.Вставить(20,"двадцатый");
	
	СтруктураПоискаДетей = Новый Структура("Сотрудник, ДатаНачала");
	
	ВсегоСтрокДокумента = ВыборкаПоТЧРаботникиОрганизации.Количество();
	ВыведеноСтрок = 0;
	Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаПоТЧРаботникиОрганизации);
		ЗаполнитьЗначенияСвойств(СтруктураПоискаДетей, ВыборкаПоТЧРаботникиОрганизации);
		
		Если ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.Статус) Тогда
			ОбластьСтрока.Параметры.ФИОСотрудника = ОбластьСтрока.Параметры.ФИОСотрудника + " (" + ВыборкаПоТЧРаботникиОрганизации.Статус + ")"
		КонецЕсли;
		ОбластьСтрока.Параметры.АдресРегистрации = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ВыборкаПоТЧРаботникиОрганизации.АдресРегистрации);
		Если ВыборкаПоТЧРаботникиОрганизации.ПеречислятьПособиеПочтовымПереводом Тогда
			ОбластьСтрока.Параметры.АдресПочтовый = УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ВыборкаПоТЧРаботникиОрганизации.АдресПочтовый);
			ОбластьСтрока.Параметры.НаименованиеБанка = "-";
			ОбластьСтрока.Параметры.БИКБанка = "-";
			ОбластьСтрока.Параметры.НомерЛицевогоСчета = "-";
		Иначе
			ОбластьСтрока.Параметры.АдресПочтовый = "-";
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ОбластьСтрока.Параметры.ИнаяПолезнаяИнформация) Тогда
			ОбластьСтрока.Параметры.ИнаяПолезнаяИнформация = "-"
		КонецЕсли;
		
		Если ВыборкаПоТЧРаботникиОрганизации.ПрименятьЛьготыПриНачисленииПособия Тогда
			ОписаниеЛьгот = "";
			Если ВыборкаПоТЧРаботникиОрганизации.СтатусЛьготнойЗоны = Перечисления.ВидыЗонРадиационногоПоражения.ЗонаСПравомНаОтселение Тогда
				ОписаниеЛьгот = "1";
			ИначеЕсли ВыборкаПоТЧРаботникиОрганизации.СтатусЛьготнойЗоны = Перечисления.ВидыЗонРадиационногоПоражения.ЗонаСЛьготнымСоциальноЭкономическимСтатусом Тогда
				ОписаниеЛьгот = "2";
			ИначеЕсли ВыборкаПоТЧРаботникиОрганизации.СтатусЛьготнойЗоны = Перечисления.ВидыЗонРадиационногоПоражения.ЗонаОтселения Тогда
				ОписаниеЛьгот = "3";
			КонецЕсли;
			ОписаниеЛьгот = ОписаниеЛьгот + " (" + ВыборкаПоТЧРаботникиОрганизации.ВидДокументаНаЛьготы + " от " + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаДокументаНаЛьготы,"ДФ=dd.MM.yyyy") + " № " + ВыборкаПоТЧРаботникиОрганизации.НомерДокументаНаЛьготы + ")";
			ОбластьСтрока.Параметры.ОписаниеЛьгот = ОписаниеЛьгот;	
		Иначе
			ОбластьСтрока.Параметры.ОписаниеЛьгот = "-";	
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.НомерПриказаНаОтпускПоУходуЗаРебенком) И ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.ДатаПриказаНаОтпускПоУходуЗаРебенком) Тогда
			ОбластьСтрока.Параметры.ОписаниеПриказаНаОтпуск = "Приказ № " + ВыборкаПоТЧРаботникиОрганизации.НомерПриказаНаОтпускПоУходуЗаРебенком + " от " + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаПриказаНаОтпускПоУходуЗаРебенком,"ДФ=dd.MM.yyyy") + Символы.ПС + "(отпуск: " + ОбменСведениямиОПособияхСФСС.ОписаниеПериодаВПечатнойФорме(ВыборкаПоТЧРаботникиОрганизации.ДатаНачала, ВыборкаПоТЧРаботникиОрганизации.ДатаОкончания) + ")";
		Иначе
			ОбластьСтрока.Параметры.ОписаниеПриказаНаОтпуск = "Отпуск: " + ОбменСведениямиОПособияхСФСС.ОписаниеПериодаВПечатнойФорме(ВыборкаПоТЧРаботникиОрганизации.ДатаНачала, ВыборкаПоТЧРаботникиОрганизации.ДатаОкончания);
		КонецЕсли;
		
		ДанныеДетейСотрудника = ДанныеОДетях.Выгрузить(СтруктураПоискаДетей);
		ДанныеДетейСотрудника.Сортировать("НаРебенкаВыплачиваетсяПособие убыв, Очередность");
		ДетейУхода = 0;
		
		ДокументыНаДетей = "Заявление о назначении пособия от " + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаПредставленияПакетаДокументов,"ДФ=dd.MM.yyyy");
		ДетиИПредыдущиеДети = "";
		ЛишениеРодительскихПрав = "";
		ДатаРожденияРебенка = '00010101';
		Для каждого ОписаниеРебенка Из ДанныеДетейСотрудника Цикл
			ОписаниеРебенка.Ребенок = СокрЛП(ОписаниеРебенка.Фамилия + " " + ОписаниеРебенка.Имя + " " + ОписаниеРебенка.Отчество);
			Если ОписаниеРебенка.НаРебенкаВыплачиваетсяПособие Тогда
				ДатаРожденияРебенка = Макс(ДатаРожденияРебенка,ОписаниеРебенка.ДатаРожденияРебенка);
				ДетейУхода = ДетейУхода + 1;
				ПорядковыйНомерРебенка = ПорядковыеЧислительные[ОписаниеРебенка.Очередность];
				Если Не ЗначениеЗаполнено(ПорядковыйНомерРебенка) Тогда
					ПорядковыйНомерРебенка = "двадцать первый и последущие"
				КонецЕсли;
				ДетиИПредыдущиеДети = ДетиИПредыдущиеДети + ?(ЗначениеЗаполнено(ДетиИПредыдущиеДети),Символы.ПС,"") + ОписаниеРебенка.Ребенок + " (" + ПорядковыйНомерРебенка + ", " + Формат(ОписаниеРебенка.ДатаРожденияРебенка,"ДФ=dd.MM.yyyy") + ")";
				ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + ОписаниеРебенка.НаименованиеПодтверждающегоДокумента + " от " + Формат(ОписаниеРебенка.ДатаДокумента,"ДФ=dd.MM.yyyy") + " № "  + ОписаниеРебенка.НомерДокумента;
			Иначе
				ДетиИПредыдущиеДети = ДетиИПредыдущиеДети + Символы.ПС + ОписаниеРебенка.Ребенок + " (" + ОписаниеРебенка.НаименованиеПодтверждающегоДокумента + " от " + Формат(ОписаниеРебенка.ДатаДокумента,"ДФ=dd.MM.yyyy") + " № "  + ОписаниеРебенка.НомерДокумента + ")";
				Если ОписаниеРебенка.НаличиеРешенияСудаОЛишенииПрав Тогда
					ЛишениеРодительскихПрав = ЛишениеРодительскихПрав + ?(ЗначениеЗаполнено(ЛишениеРодительскихПрав),Символы.ПС,"") + ОписаниеРебенка.Ребенок
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.ДатаПриказаОЗаменеПослеродовогоОтпуска) И ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.НомерПриказаОЗаменеПослеродовогоОтпуска) Тогда
			ОбластьСтрока.Параметры.ОписаниеПриказаНаЗаменуОтпуска = "№ " + ВыборкаПоТЧРаботникиОрганизации.НомерПриказаОЗаменеПослеродовогоОтпуска + " от " + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаПриказаОЗаменеПослеродовогоОтпуска,"ДФ=dd.MM.yyyy") + " (" + Формат(ДатаРожденияРебенка,"ДФ=dd.MM.yyyy") + ")";
		Иначе
			ОбластьСтрока.Параметры.ОписаниеПриказаНаЗаменуОтпуска = "-";
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.ДатаСправкиОНеполученииПособияОтОтца) И ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.НомерСправкиОНеполученииПособияОтОтца) Тогда
			ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + "Справка о неполучении пособия отца от " + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаСправкиОНеполученииПособияОтОтца,"ДФ=dd.MM.yyyy") + " № " + ВыборкаПоТЧРаботникиОрганизации.НомерСправкиОНеполученииПособияОтОтца;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.ДатаСправкиОНеполученииПособияОтМатери) И ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.НомерСправкиОНеполученииПособияОтМатери) Тогда
			ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + "Справка о неполучении пособия матери от " + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаСправкиОНеполученииПособияОтМатери,"ДФ=dd.MM.yyyy") + " № " + ВыборкаПоТЧРаботникиОрганизации.НомерСправкиОНеполученииПособияОтМатери;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.ДатаСправкиПоДругимМестамРаботы) И ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.НомерСправкиПоДругимМестамРаботы) Тогда
			ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + "Справка о неполучении пособия по другим местам работы от " + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаСправкиПоДругимМестамРаботы,"ДФ=dd.MM.yyyy") + " № " + ВыборкаПоТЧРаботникиОрганизации.НомерСправкиПоДругимМестамРаботы;
		КонецЕсли;
		
		ОбластьСтрока.Параметры.ДетиИПредыдущиеДети = ДетиИПредыдущиеДети;
		Если ЗначениеЗаполнено(ЛишениеРодительскихПрав) Тогда
			ОбластьСтрока.Параметры.ЛишениеРодительскихПрав = ЛишениеРодительскихПрав;
		Иначе
			ОбластьСтрока.Параметры.ЛишениеРодительскихПрав = "-";
		КонецЕсли;
		
		ОбластьСтрока.Параметры.ДокументыНаДетей = ДокументыНаДетей;
		
		Если ДетейУхода > 1 Тогда
			ОбластьСтрока.Параметры.СреднийМесячныйЗаработок = Формат(ВыборкаПоТЧРаботникиОрганизации.СреднийДневнойЗаработок * 30.4,"ЧЦ=15; ЧДЦ=2; ЧГ=0");
		Иначе
			ОбластьСтрока.Параметры.СреднийМесячныйЗаработок = "";
		КонецЕсли;
		
		Если ВыборкаПоТЧРаботникиОрганизации.ПорядокРасчетаСреднегоЗаработка = 0 Тогда
			ОбластьСтрока.Параметры.ПериодРасчетаС = Формат(ВыборкаПоТЧРаботникиОрганизации.ПервыйГодРасчета,"ЧЦ=4; ЧГ=0") + ?(ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.ЗамененныйПервыйГодРасчета) И ВыборкаПоТЧРаботникиОрганизации.ПервыйГодРасчета <> ВыборкаПоТЧРаботникиОрганизации.ЗамененныйПервыйГодРасчета, " (" + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаЗаявленияОЗаменеРасчетногоГода,"ДФ=dd.MM.yyyy") + ", № " + ВыборкаПоТЧРаботникиОрганизации.НомерЗаявленияОЗаменеРасчетногоГода + ")","");
			ОбластьСтрока.Параметры.ПериодРасчетаПо = Формат(ВыборкаПоТЧРаботникиОрганизации.ВторойГодРасчета,"ЧЦ=4; ЧГ=0") + ?(ЗначениеЗаполнено(ВыборкаПоТЧРаботникиОрганизации.ЗамененныйВторойГодРасчета) И ВыборкаПоТЧРаботникиОрганизации.ВторойГодРасчета <> ВыборкаПоТЧРаботникиОрганизации.ЗамененныйВторойГодРасчета, " (" + Формат(ВыборкаПоТЧРаботникиОрганизации.ДатаЗаявленияОЗаменеРасчетногоГода,"ДФ=dd.MM.yyyy") + ", № " + ВыборкаПоТЧРаботникиОрганизации.НомерЗаявленияОЗаменеРасчетногоГода + ")","");
			
			ЗаработокПервыйГодРасчета = ВыборкаПоТЧРаботникиОрганизации.ЗаработокПервыйГодРасчета;
			ЗаработокВторойГодРасчета = ВыборкаПоТЧРаботникиОрганизации.ЗаработокВторойГодРасчета;
			Разница = ВыборкаПоТЧРаботникиОрганизации.СреднийДневнойЗаработок - (ЗаработокПервыйГодРасчета + ЗаработокВторойГодРасчета) / 730;
			Если (Разница > -0.02 И Разница < 0.02) Или ВыборкаПоТЧРаботникиОрганизации.СреднийДневнойЗаработок = 0 Тогда
				СреднийЗаработок = ЗаработокПервыйГодРасчета + ЗаработокВторойГодРасчета
			Иначе
				СреднийЗаработок = ВыборкаПоТЧРаботникиОрганизации.МРОТ
			КонецЕсли;
			ОбластьСтрока.Параметры.СреднийЗаработок = Формат(СреднийЗаработок,"ЧЦ=15; ЧДЦ=2; ЧГ=0");
		ИначеЕсли ВыборкаПоТЧРаботникиОрганизации.ПорядокРасчетаСреднегоЗаработка = 1 Тогда
			ОбластьСтрока.Параметры.ПериодРасчетаС = Формат(ВыборкаПоТЧРаботникиОрганизации.ПериодРасчетаСреднегоЗаработкаНачало,"ДФ=dd.MM.yyyy");
			ОбластьСтрока.Параметры.ПериодРасчетаПо = Формат(ВыборкаПоТЧРаботникиОрганизации.ПериодРасчетаСреднегоЗаработкаОкончание,"ДФ=dd.MM.yyyy");
			ОбластьСтрока.Параметры.СреднийЗаработок = Формат(ВыборкаПоТЧРаботникиОрганизации.ЗаработокЗаПериодРасчета,"ЧЦ=15; ЧДЦ=2; ЧГ=0") + " (" + Формат(ВыборкаПоТЧРаботникиОрганизации.КалендарныхДнейРасчетногоПериода,"ЧЦ=3; ЧГ=0") + ")";
		Иначе
			ОбластьСтрока.Параметры.ПериодРасчетаС = "-";
			ОбластьСтрока.Параметры.ПериодРасчетаПо = "-";
			Если ВыборкаПоТЧРаботникиОрганизации.ПорядокРасчетаСреднегоЗаработка = 2 Тогда
				ОбластьСтрока.Параметры.СреднийЗаработок = Формат(ВыборкаПоТЧРаботникиОрганизации.ТарифнаяСтавкаОклад,"ЧЦ=15; ЧДЦ=2; ЧГ=0");
			ИначеЕсли ВыборкаПоТЧРаботникиОрганизации.ПорядокРасчетаСреднегоЗаработка = 3 Тогда
				ОбластьСтрока.Параметры.СреднийЗаработок = Формат(ВыборкаПоТЧРаботникиОрганизации.МРОТ,"ЧЦ=15; ЧДЦ=2; ЧГ=0");
			Иначе
				ОбластьСтрока.Параметры.СреднийЗаработок = "";
			КонецЕсли;
		КонецЕсли;
		
		// разбиение на страницы
		ВыведеноСтрок = ВыведеноСтрок + 1;
		
		// Проверим, уместится ли строка на странице или надо открывать новую страницу
		ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		Если Не ВывестиПодвалЛиста И ВыведеноСтрок = ВсегоСтрокДокумента Тогда
			ВыводимыеОбласти.Добавить(ОбластьПодвал);
			Если ВыводитьПодписиВРеестрПособий Тогда
				ВыводимыеОбласти.Добавить(ОбластьПодписи);
			КонецЕсли;
			ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(ТабДокумент, ВыводимыеОбласти);
		КонецЕсли;
		Если ВывестиПодвалЛиста Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ТабДокумент.Вывести(ПовторятьПриПечатиСтроки);
		КонецЕсли;
		
		ТабДокумент.Вывести(ОбластьСтрока);
	
	КонецЦикла; 
	
	ТабДокумент.Вывести(ОбластьПодвал);
	Если ВыводитьПодписиВРеестрПособий Тогда
		ТабДокумент.Вывести(ОбластьПодписи);
	КонецЕсли;
	
	Возврат ТабДокумент;

КонецФункции // ПечатьРеестрСведенийВФСС()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ИмяМакета = "ОписьЗаявленийИДокументовВФСС" Тогда
		
		ТабДокумент = Новый ТабличныйДокумент;
		
		ТабДокумент = ПечатьОписьЗаявленийИДокументовВФСС();
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Опись заявлений и документов в ФСС");
		
	ИначеЕсли ИмяМакета = "РеестрСведенийВФСС" Тогда
		
		ТабДокумент = ПечатьРеестрСведенийВФСС();
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Реестр сведений в ФСС",,ТабДокумент);
		
	КонецЕсли;
	
КонецФункции // Печать() 
 
#КонецЕсли

Процедура Автозаполнение(Режим = Неопределено, ТекущаяСтрока = Неопределено) Экспорт
	
	Если Режим = "ДанныеСотрудника" Тогда
		ЗаполнитьДанныеСотрудника(ТекущаяСтрока)
	ИначеЕсли Режим = "ДанныеПриказа" Тогда	
		ТекущийСотрудник = ТекущаяСтрока.Сотрудник;
		ЗаполнитьДанныеПриказа(ТекущаяСтрока);
		Если ТекущийСотрудник <> ТекущаяСтрока.Сотрудник Тогда
			ЗаполнитьДанныеСотрудника(ТекущаяСтрока)
		КонецЕсли;
	Иначе	
		ЗаполнитьДанныеПриказа();
		ЗаполнитьДанныеСотрудника(,"Фамилия,Имя,Отчество");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьПравильностьЗаполненияДокумента(ЕстьОшибки, СообщатьОбУспехе = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоРаботникиОрганизации = Неопределено, ВыборкаПоДетям = Неопределено) Экспорт
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);

	Обработка = глЗначениеПеременной("глОбработкаСообщений");
	СообщенияРазделПроверки = Обработка.ДобавитьСообщение(Заголовок, Перечисления.ВидыСообщений.Информация);

	Если ВыборкаПоШапкеДокумента = Неопределено Тогда
		ВыборкаПоШапкеДокумента = ОбменСведениямиОПособияхСФСС.СформироватьЗапросПоШапкеДокумента(ЭтотОбъект).Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
	КонецЕсли;
	Если ВыборкаПоРаботникиОрганизации = Неопределено Или ВыборкаПоРаботникиОрганизации.Количество() <> РаботникиОрганизации.Количество() Тогда
		ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	КонецЕсли;
	
	Если ВыборкаПоДетям = Неопределено Тогда
		ВыборкаПоДетям = СформироватьЗапросПоДетям().Выбрать();
	КонецЕсли;
	
	Отказ = Ложь;
	
	ОбменСведениямиОПособияхСФСС.ПроверитьДанныеСтрахователя(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
	
	Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл
		
		ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
		
	КонецЦикла; 
	
	Пока ВыборкаПоДетям.Следующий() Цикл
		
		ПроверитьЗаполнениеСтрокиПоДетям(ВыборкаПоДетям, Отказ, Заголовок);
		
	КонецЦикла; 
	
	Если Отказ тогда
		ЕстьОшибки = Истина;
	КонецЕсли;	 
	
	Если СообщатьОбУспехе И Не ЕстьОшибки Тогда
		Обработка.ДобавитьСообщение("Ошибок не обнаружено.", Перечисления.ВидыСообщений.Информация, , СообщенияРазделПроверки);		
	КонецЕсли;
	
КонецПроцедуры // ПроверитьПравильностьЗаполненияДокумента()

Процедура СформироватьТекстовыеПоля(ТекущаяСтрока) Экспорт
	
	ИнаяПолезнаяИнформация = "";
	
	Если ТекущаяСтрока.ПорядокРасчетаСреднегоЗаработка = 0 И ЗначениеЗаполнено(ТекущаяСтрока.ДатаЗаявленияОЗаменеРасчетногоГода) Тогда
		ИнаяПолезнаяИнформация = ИнаяПолезнаяИнформация + ?(ПустаяСтрока(ИнаяПолезнаяИнформация), "", ". ") + "Заявление о замене календарных годов от " + Формат(ТекущаяСтрока.ДатаЗаявленияОЗаменеРасчетногоГода, "ДФ=dd.MM.yyyy") + " № " + ТекущаяСтрока.НомерЗаявленияОЗаменеРасчетногоГода;
	ИначеЕсли ТекущаяСтрока.ПорядокРасчетаСреднегоЗаработка = 1 Тогда
		ИнаяПолезнаяИнформация = ИнаяПолезнаяИнформация + ?(ПустаяСтрока(ИнаяПолезнаяИнформация), "", ". ") + "Заявление о расчете пособия по беременности и родам по нормам 2010 года от ___.___.______";
	КонецЕсли; 
	
	Если ТекущаяСтрока.РайонныйКоэффициент > 1 И Не ЗначениеЗаполнено(ТекущаяСтрока.Район) Тогда
		ИнаяПолезнаяИнформация = ИнаяПолезнаяИнформация + ?(ПустаяСтрока(ИнаяПолезнаяИнформация), "", ". ") + "Раионый коэффициент " + Формат(ТекущаяСтрока.РайонныйКоэффициент, "ЧДЦ=2");
	ИначеЕсли ТекущаяСтрока.РайонныйКоэффициент > 1 И ЗначениеЗаполнено(ТекущаяСтрока.Район) Тогда
		ИнаяПолезнаяИнформация = ИнаяПолезнаяИнформация + ?(ПустаяСтрока(ИнаяПолезнаяИнформация), "", ". ") + "Раионый коэффициент " + Формат(ТекущаяСтрока.РайонныйКоэффициент, "ЧДЦ=2") + ", район " + ТекущаяСтрока.Район;
	КонецЕсли;
	
	Если ТекущаяСтрока.ДоляВремени > 0 И ТекущаяСтрока.ДоляВремени < 1 Тогда
		ИнаяПолезнаяИнформация = ИнаяПолезнаяИнформация + ?(ПустаяСтрока(ИнаяПолезнаяИнформация), "", ". ") + "Застрахованное лицо на момент наступления страхового случая занято на условиях неполного рабочего времени с коэффициентом " + ТекущаяСтрока.ДоляВремени;
	КонецЕсли;
	
	ТекущаяСтрока.ИнаяПолезнаяИнформация = ИнаяПолезнаяИнформация + ?(ПустаяСтрока(ИнаяПолезнаяИнформация), "", ". ");
	
	СтруктураПоискаДетей = Новый Структура("Сотрудник, ДатаНачала", ТекущаяСтрока.Сотрудник, ТекущаяСтрока.ДатаНачала);
	ДанныеДетейСотрудника = ДанныеОДетях.Выгрузить(СтруктураПоискаДетей);
	ДокументыНаДетей = "Заявление о назначении пособия от " + Формат(ТекущаяСтрока.ДатаПредставленияПакетаДокументов,"ДФ=dd.MM.yyyy");
	ДатаРожденияРебенка = '00010101';
	Для каждого ОписаниеРебенка Из ДанныеДетейСотрудника Цикл
		ОписаниеРебенка.Ребенок = СокрЛП(ОписаниеРебенка.Фамилия + " " + ОписаниеРебенка.Имя + " " + ОписаниеРебенка.Отчество);
		Если ОписаниеРебенка.НаРебенкаВыплачиваетсяПособие Тогда
			ДатаРожденияРебенка = Макс(ДатаРожденияРебенка,ОписаниеРебенка.ДатаРожденияРебенка);
			ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + ОписаниеРебенка.НаименованиеПодтверждающегоДокумента + " от " + Формат(ОписаниеРебенка.ДатаДокумента,"ДФ=dd.MM.yyyy") + " № "  + ОписаниеРебенка.НомерДокумента;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ДатаСправкиОНеполученииПособияОтОтца) И ЗначениеЗаполнено(ТекущаяСтрока.НомерСправкиОНеполученииПособияОтОтца) Тогда
		ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + "Справка о неполучении пособия отца от " + Формат(ТекущаяСтрока.ДатаСправкиОНеполученииПособияОтОтца,"ДФ=dd.MM.yyyy") + " № " + ТекущаяСтрока.НомерСправкиОНеполученииПособияОтОтца;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ДатаСправкиОНеполученииПособияОтМатери) И ЗначениеЗаполнено(ТекущаяСтрока.НомерСправкиОНеполученииПособияОтМатери) Тогда
		ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + "Справка о неполучении пособия матери от " + Формат(ТекущаяСтрока.ДатаСправкиОНеполученииПособияОтМатери,"ДФ=dd.MM.yyyy") + " № " + ТекущаяСтрока.НомерСправкиОНеполученииПособияОтМатери;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ДатаСправкиПоДругимМестамРаботы) И ЗначениеЗаполнено(ТекущаяСтрока.НомерСправкиПоДругимМестамРаботы) Тогда
		ДокументыНаДетей = ДокументыНаДетей + Символы.ПС + "Справка о неполучении пособия по другим местам работы от " + Формат(ТекущаяСтрока.ДатаСправкиПоДругимМестамРаботы,"ДФ=dd.MM.yyyy") + " № " + ТекущаяСтрока.НомерСправкиПоДругимМестамРаботы;
	КонецЕсли;
	
	ТекущаяСтрока.ДокументыОснования = ДокументыНаДетей;
	
КонецПроцедуры // СформироватьСписокДокументовОснования()

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	//Возврат Новый Структура("РеестрСведенийВФСС", "Реестр сведений");
	Возврат Новый Структура("ОписьЗаявленийИДокументовВФСС, РеестрСведенийВФСС", "Опись заявлений и документов", "Реестр сведений");
	
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

// Формирует файл, который можно будет записать на дискетку
//
// Параметры: 
//  Нет
//
// Возвращаемое значение:
//  Строка - содержимое файла
//
Функция СформироватьВыходнойФайл(Отказ, ПроверятьДанные = Истина, ВыборкаПоШапкеДокумента = Неопределено, ВыборкаПоРаботникиОрганизации = Неопределено) Экспорт

	Возврат	ОбменСведениямиОПособияхСФСС.СформироватьФайлРеестра(ЭтотОбъект, Отказ, ПроверятьДанные, ВыборкаПоШапкеДокумента, ЗапросДляФайла().Выбрать())
	
КонецФункции // СформироватьВыходнойФайл()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА


// Запрос по табличной части РаботникиОрганизации для вывода на печать и проверки корректности заполнения
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СформироватьЗапросПоТЧРаботникиОрганизации()
	
	Запрос = Новый Запрос();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Пособия.Фамилия + "" "" + Пособия.Имя + "" "" + Пособия.Отчество КАК ФИОСотрудника,
	|	Пособия.Ссылка,
	|	Пособия.НомерСтроки КАК НомерСтроки,
	|	Пособия.Сотрудник,
	|	Пособия.ФизЛицо,
	|	Пособия.ИнаяПолезнаяИнформация,
	|	Пособия.КоличествоСтраниц,
	|	Пособия.ПеречислятьПособиеПочтовымПереводом,
	|	Пособия.НаименованиеБанка,
	|	Пособия.БИКБанка,
	|	Пособия.НомерЛицевогоСчета,
	|	Пособия.АдресРегистрации,
	|	Пособия.АдресПочтовый,
	|	Пособия.Отчество,
	|	Пособия.Имя,
	|	Пособия.Фамилия,
	|	Пособия.ПорядокРасчетаСреднегоЗаработка,
	|	Пособия.СтраховойНомерПФР,
	|	Пособия.НомерПриказаНаОтпускПоУходуЗаРебенком,
	|	Пособия.ДатаПриказаНаОтпускПоУходуЗаРебенком,
	|	Пособия.ДатаНачала,
	|	Пособия.ДатаОкончания,
	|	Пособия.ПервыйГодРасчета,
	|	Пособия.ВторойГодРасчета,
	|	Пособия.Банк,
	|	Пособия.РайонныйКоэффициент,
	|	Пособия.Район,
	|	Пособия.ДоляВремени,
	|	Пособия.ПериодРасчетаСреднегоЗаработкаНачало,
	|	Пособия.ПериодРасчетаСреднегоЗаработкаОкончание,
	|	Пособия.КалендарныхДнейРасчетногоПериода,
	|	Пособия.ЗамененныйПервыйГодРасчета,
	|	Пособия.ЗамененныйВторойГодРасчета,
	|	Пособия.ЗаработокПервыйГодРасчета,
	|	Пособия.ЗаработокВторойГодРасчета,
	|	Пособия.ЗаработокЗаПериодРасчета,
	|	Пособия.ТарифнаяСтавкаОклад,
	|	Пособия.ДатаЗаявленияОЗаменеРасчетногоГода,
	|	Пособия.ДатаПредставленияПакетаДокументов,
	|	""5"" КАК ВидВыплаты,
	|	Пособия.СреднийДневнойЗаработок,
	|	Пособия.МРОТ,
	|	Пособия.ДокументыОснования,
	|	Пособия.ПриказНаОтпускПоУходуЗаРебенком,
	|	Пособия.ДатаСправкиОНеполученииПособияОтОтца,
	|	Пособия.НомерСправкиОНеполученииПособияОтОтца,
	|	Пособия.ДатаСправкиОНеполученииПособияОтМатери,
	|	Пособия.НомерСправкиОНеполученииПособияОтМатери,
	|	Пособия.СтатусЛьготнойЗоны,
	|	Пособия.ДатаСправкиПоДругимМестамРаботы,
	|	Пособия.НомерСправкиПоДругимМестамРаботы,
	|	Пособия.ПрименятьЛьготыПриНачисленииПособия,
	|	Пособия.ВидДокументаНаЛьготы,
	|	Пособия.ДатаДокументаНаЛьготы,
	|	Пособия.НомерДокументаНаЛьготы,
	|	Пособия.ИНН,
	|	Пособия.ДатаРождения,
	|	Пособия.Пол,
	|	Пособия.ВидДокумента,
	|	Пособия.ВидДокумента.КодИМНС КАК ВидУдостоверенияЛичности,
	|	Пособия.СерияДокумента,
	|	Пособия.НомерДокумента,
	|	Пособия.ДатаВыдачиДокумента,
	|	Пособия.КемВыданДокумент,
	|	Пособия.СтатусНалогоплательщика КАК СтатусНалогоплательщикаДляПроверки,
	|	Пособия.НомерПриказаОЗаменеПослеродовогоОтпуска,
	|	Пособия.ДатаПриказаОЗаменеПослеродовогоОтпуска,
	|	Пособия.НомерЗаявленияОЗаменеРасчетногоГода,
	|	Пособия.Статус
	|ИЗ
	|	Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.РаботникиОрганизации КАК Пособия
	|ГДЕ
	|	Пособия.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоТЧРаботникиОрганизации()

// Запрос по табличной части РаботникиОрганизации для вывода на печать и проверки корректности заполнения
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СформироватьЗапросПоДетям()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Дети.Ссылка,
	|	Дети.НомерСтроки КАК НомерСтроки,
	|	Дети.Сотрудник КАК Сотрудник,
	|	Дети.ДатаНачала КАК ДатаНачала,
	|	Дети.Фамилия + "" "" + Дети.Имя + "" "" + Дети.Отчество КАК Ребенок,
	|	Дети.Очередность,
	|	Дети.НаРебенкаВыплачиваетсяПособие,
	|	Дети.ВидПодтверждающегоДокумента,
	|	Дети.НаименованиеПодтверждающегоДокумента,
	|	Дети.ДатаДокумента,
	|	Дети.СерияДокумента,
	|	Дети.НомерДокумента,
	|	Дети.НаличиеРешенияСудаОЛишенииПрав,
	|	Дети.Сотрудник.Наименование КАК ИмяСотрудника,
	|	Дети.ДатаРожденияРебенка
	|ИЗ
	|	Документ.РеестрСведенийВФССОЕжемесячныхПособияхПоУходу.ДанныеОДетях КАК Дети
	|ГДЕ
	|	Дети.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Сотрудник,
	|	ДатаНачала,
	|	НомерСтроки";
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоДетям()

// Проверяет заполненность полей табличной части "РаботникиОрганизации"
// Проверка ведется по строке выборки по табличной части
//
// Параметры
// Параметры: 
//	ВыборкаПоСтрокамДокумента	- выборка из результата запрос
//	Отказ 						- флаг отказа
//	Заголовок					- Заголовок для сообщений об ошибках
//
Процедура ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(ВыборкаПоСтрокамДокумента, Отказ, Заголовок)

	ТекстОшибкиСНомеромСтроки = НСтр("ru='В строке номер %НомерСтроки% табличной части ""Пособия"": '");
	ТекстОшибкиСНомеромСтроки = СтрЗаменить(ТекстОшибкиСНомеромСтроки, "%НомерСтроки%", ВыборкаПоСтрокамДокумента.НомерСтроки);
	
	ОбменСведениямиОПособияхСФСС.ПроверитьДанныеЗастрахованного(ВыборкаПоСтрокамДокумента, Отказ, Заголовок, ТекстОшибкиСНомеромСтроки);
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации()

Процедура ПроверитьЗаполнениеСтрокиПоДетям(СтрокаВыборкиПоПоДетям, Отказ, Заголовок)

	НачалоТекстаОшибки = НСтр("ru='В данных о детях сотрудника " + СтрокаВыборкиПоПоДетям.ИмяСотрудника + ": '");
	
	Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.Ребенок) И Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.Очередность) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + "присутствует пустая строка - без ФИО и очередности ребенка!", Отказ, Заголовок);
	Иначе 	
		ДопОписаниеСтроки = ?(ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.Ребенок),"для ребенка " + СтрокаВыборкиПоПоДетям.Ребенок,"для ребенка с очередностью " + СтрокаВыборкиПоПоДетям.Очередность);
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.Очередность) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + ДопОписаниеСтроки + " не указана очередность!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.Ребенок) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + ДопОписаниеСтроки + " не указано ФИО ребенка!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.ДатаРожденияРебенка) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + ДопОписаниеСтроки + " не указана дата рождения!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.ВидПодтверждающегоДокумента) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + ДопОписаниеСтроки + " не указан вид документа!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.НаименованиеПодтверждающегоДокумента) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + ДопОписаниеСтроки + " не указано наименование документа!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.ДатаДокумента) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + ДопОписаниеСтроки + " не указана дата документа!", Отказ, Заголовок);
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаВыборкиПоПоДетям.НомерДокумента) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоТекстаОшибки + ДопОписаниеСтроки + " не указан номер документа!", Отказ, Заголовок);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации()

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
	КонецЦикла;
	
	ВыборкаПоШапкеДокумента = ОбменСведениямиОПособияхСФСС.СформироватьЗапросПоШапкеДокумента(ЭтотОбъект).Выбрать();
	ВыборкаПоШапкеДокумента.Следующий();
	
	ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	ПроверитьПравильностьЗаполненияДокумента(Отказ, Ложь, ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);
	
	Если Отказ тогда
		ОбработкаКомментариев.ПоказатьСообщения();
		Возврат;
	КонецЕсли;
	
	//При проведении файл формируем заново 
	ТекстФайла = СформироватьВыходнойФайл(Отказ, Ложь, ВыборкаПоШапкеДокумента);

	//Сохраним сформированный файл сведений в регистре сведений
	Запись = Движения.АрхивДанныхРегламентированнойОтчетности.Добавить();
	Запись.Объект = Ссылка;
	Запись.ОписаниеДанных = "Реестр пособий по нетрудоспособности";
	Запись.Данные = ТекстФайла;

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Сотрудник");

КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	Для Каждого Набор Из Движения Цикл
		Набор.Очистить();
		Набор.Записать();
	КонецЦикла
КонецПроцедуры

