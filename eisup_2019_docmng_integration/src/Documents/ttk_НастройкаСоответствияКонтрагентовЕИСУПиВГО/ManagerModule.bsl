
Функция ЗаполнитьСоответствиеКонтрагентовЕИСУПиВГО(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	ДоговорыКонтрагентов.Владелец КАК КонтрагентЕИСУП,
		|	ДоговорыКонтрагентов.Владелец.ИНН КАК ИНН,
		|	ДоговорыКонтрагентов.Владелец.КПП КАК КПП,
		|	ДоговорыКонтрагентов.Ссылка КАК ДоговорЕИСУП,
		|	ВЫБОР
		|		КОГДА СУММА(1) > 1
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ttk_КонтрагентыВГО.ПустаяСсылка)
		|		ИНАЧЕ МАКСИМУМ(ttk_КонтрагентыВГО.Ссылка)
		|	КОНЕЦ КАК КонтрагентВГО
		|ИЗ
		|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ttk_КонтрагентыВГО КАК ttk_КонтрагентыВГО
		|		ПО ДоговорыКонтрагентов.Владелец.ИНН = ttk_КонтрагентыВГО.ИНН
		|			И ДоговорыКонтрагентов.Владелец.КПП = ttk_КонтрагентыВГО.КПП
		|ГДЕ
		|	ДоговорыКонтрагентов.ПометкаУдаления = ЛОЖЬ
		|	И ДоговорыКонтрагентов.Организация = &Организация
		|	И ДоговорыКонтрагентов.абс_СтатусДоговора = ЗНАЧЕНИЕ(Перечисление.абсСтатусыДоговоров.Исполнение)
		|	И ДоговорыКонтрагентов.Владелец.абс_СтатусКонтрагента = ЗНАЧЕНИЕ(Перечисление.абсСтатусыКонтрагентов.Активный)
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоговорыКонтрагентов.Владелец,
		|	ДоговорыКонтрагентов.Ссылка";
	Запрос.УстановитьПараметр("Организация", Организация);
		
	Выборка = Запрос.Выполнить();
	
	Результат = Выборка.Выгрузить();
	
	Возврат Результат;
	
КонецФункции
	
Процедура ЗаполнитьСписокДоступныхСтатусов(Список, Ссылка) Экспорт	
	
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));
	
	Список.Очистить();
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Список.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Ссылка.Статус) Тогда
		Список.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
		Возврат;
    Иначе
		Список.Добавить(Ссылка.Статус);
	КонецЕсли;
	
	Если Ссылка.Статус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка Тогда
		Список.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Согласован);		
	ИначеЕсли Ссылка.Статус = Перечисления.абс_СтатусыПервичныхДокументов.Согласован Тогда
		Если Не мРолиПользователя.Найти(Справочники.РолиИсполнителей.абс_СогласованиеБухгалтерией) = Неопределено Или
			 Не мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено Тогда			
			Список.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отмена);
		КонецЕсли;
	ИначеЕсли Ссылка.Статус = Перечисления.абс_СтатусыПервичныхДокументов.Отмена Тогда
		Список.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
	КонецЕсли;	
	
	Возврат;
	
КонецПроцедуры
	
	
	