
&НаСервере
Процедура УправлениеВидимостьюДоступностью()
	
	Если Объект.Направление = Перечисления.НаправленияЭД.Исходящий Тогда
		Элементы.Вложения.ТолькоПросмотр = Ложь;
		Элементы.Сообщение.ТолькоПросмотр = Ложь;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Добавить.Видимость = Истина;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Удалить.Видимость= Истина;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ПодписатьИОтправитьЭД.Заголовок = НСтр("ru = 'Отправить документ'");
	Иначе
		Элементы.Вложения.ТолькоПросмотр = Истина;
		Элементы.Сообщение.ТолькоПросмотр = Истина;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Добавить.Видимость = Ложь;
		Элементы.Вложения.КоманднаяПанель.ПодчиненныеЭлементы.Удалить.Видимость= Ложь;
		ЭтаФорма.КоманднаяПанель.ПодчиненныеЭлементы.ПодписатьИОтправитьЭД.Заголовок = НСтр("ru = 'Отправить подтверждение'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьЗаголовокФормы()
	
	Если Объект.Направление = Перечисления.НаправленияЭД.Исходящий Тогда
		ТекстЗаголовка = НСтр("ru = 'Исходящий документ %1 от %2'");
		ЭтаФорма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Объект.Номер, Объект.Дата);
	Иначе
		ТекстЗаголовка = НСтр("ru = 'Входящий документ %1 от %2'");
		ЭтаФорма.Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстЗаголовка, Объект.Номер, Объект.Дата);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВложенияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	РежимДиалога = РежимДиалогаВыбораФайла.Открытие;
	Диалог = Новый ДиалогВыбораФайла(РежимДиалога);
	Диалог.МножественныйВыбор = Истина;
	Диалог.ПроверятьСуществованиеФайла = Истина;
	Если Диалог.Выбрать() И ПроверитьЗаписьДокумента() Тогда
		МассивВыбранныхФайлов = Диалог.ВыбранныеФайлы;
		МассивСтруктур = ПолучитьМассивСтруктурФайлов(МассивВыбранныхФайлов);
		ДобавитьПрисоединенныеФайлыКСообщению(МассивСтруктур);
	КонецЕсли;
	ОбновитьТаблицуВложений();
	Отказ = Истина;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивСтруктурФайлов(МассивИменФайлов)
	
	МассивСтруктур = Новый Массив;
	Для Каждого ПолноеИмяФайла Из МассивИменФайлов Цикл
		ФайлДанных = Новый Файл(ПолноеИмяФайла);
		Если НЕ ФайлДанных.Существует() Тогда
			Продолжить;
		КонецЕсли;
		
		#Если Не ВебКлиент Тогда
			ДвоичныеДанныеФайла = Новый ДвоичныеДанные(ПолноеИмяФайла);
			Если ДвоичныеДанныеФайла = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ДвоичныеДанныеФайла);
		#Иначе
			ПомещаемыеФайлы = Новый Массив;
			Описание = Новый ОписаниеПередаваемогоФайла(ПолноеИмяФайла, "");
			ПомещаемыеФайлы.Добавить(Описание);
			ПомещенныеФайлы = Новый Массив;
			Если НЕ ПоместитьФайлы(ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь) Тогда
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Ошибка при помещении файла в хранилище: %1'"), ПолноеИмяФайла) );
				Продолжить;
			КонецЕсли;
			АдресВоВременномХранилище = ПомещенныеФайлы[0].Хранение;
		#КонецЕсли
		
		СтруктураФайла = Новый Структура;
		СтруктураФайла.Вставить("ФайлБезРасширения", 		ФайлДанных.ИмяБезРасширения);
		СтруктураФайла.Вставить("ФайлРасширение", 			ФайлДанных.Расширение);
		СтруктураФайла.Вставить("АдресВоВременномХранилище",АдресВоВременномХранилище);
		МассивСтруктур.Добавить(СтруктураФайла);
	КонецЦикла;
	Возврат МассивСтруктур;
	
КонецФункции

&НаКлиенте
Функция ПроверитьЗаписьДокумента()
	
	Если Объект.Ссылка.Пустая() Тогда
		ТекстВопроса = НСтр("ru = 'Документ еще не записан! 
		|Вложения можно добавлять только в записанный документ.
		|Документ будет записан.'");
		Ответ = Вопрос(ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат Ложь;
		КонецЕсли;
		ЗаписатьНовыйДокумент();
		Оповестить("ОбновитьСостояниеЭД");
	КонецЕсли;
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ЗаписатьНовыйДокумент()
	ОбъектДокумент = РеквизитФормыВЗначение("Объект");
	Если ЕстьСоглашение(ОбъектДокумент) Тогда
		ОбъектДокумент.Дата = ТекущаяДата();
		ОбъектДокумент.Записать();
		ЗначениеВРеквизитФормы(ОбъектДокумент, "Объект");
	КонецЕсли;	
КонецПроцедуры

&НаСервере
Функция ДобавитьПрисоединенныеФайлыКСообщению(МассивСтруктур)
	
	МассивВозврата = Новый Массив;
	Если ЗначениеЗаполнено(СоглашениеЭД) Тогда
		ИдентификаторОрганизации = СоглашениеЭД.ИдентификаторОрганизации;
		ИдентификаторКонтрагента = СоглашениеЭД.ИдентификаторКонтрагента;
	ИначеЕсли Не СоглашениеОпределялось Тогда	
		ПараметрыСоглашения = ЭлектронныеДокументы.ОпределитьНастройкиОбменаЭДПоИсточнику(Объект.Ссылка);
		Если ЗначениеЗаполнено(ПараметрыСоглашения) Тогда
			ИдентификаторОрганизации 	= ПараметрыСоглашения.ИдентификаторОрганизации;
			ИдентификаторКонтрагента 	= ПараметрыСоглашения.ИдентификаторКонтрагента;
			СоглашениеЭД 				= ПараметрыСоглашения.СоглашениеЭД;
		КонецЕсли;	
	КонецЕсли;	
	Если ПараметрыСоглашения = Неопределено И Не ЗначениеЗаполнено(СоглашениеЭД) Тогда
		Возврат МассивВозврата;
	КонецЕсли;
	
	Для Каждого СтруктураФайла Из МассивСтруктур Цикл
		ФайлБезРасширения = Неопределено;
		ФайлРасширение = Неопределено;
		АдресВоВременномХранилище = Неопределено;
		Если НЕ СтруктураФайла.Свойство("ФайлБезРасширения", ФайлБезРасширения) 
			ИЛИ НЕ СтруктураФайла.Свойство("ФайлРасширение", ФайлРасширение)
			ИЛИ НЕ СтруктураФайла.Свойство("АдресВоВременномХранилище", АдресВоВременномХранилище) Тогда
			Продолжить;
		КонецЕсли;
		ДобавленныйФайл = ПрисоединенныеФайлы.ДобавитьФайл(
			Объект.Ссылка,
			ФайлБезРасширения,
			ФайловыеФункцииКлиентСервер.РасширениеБезТочки(ФайлРасширение),
			ТекущаяДата(),
			ТекущаяДата(),
			АдресВоВременномХранилище,
			,
			"ЭДПрисоединенныеФайлы");
			
		МассивВозврата.Добавить(ДобавленныйФайл);
		
		НомерДокумента = ЭлектронныеДокументыФорматОбмена.ВернутьИдЭД(ДобавленныйФайл, ИдентификаторОрганизации, Неопределено);
		
		СтруктураДокумента =  Новый Структура("Автор, ВладелецЭД, Организация, Контрагент, ВидЭД, НаправлениеЭД, НомерЭД, Отправитель, Получатель, НомерДокументаОтправителя, ДатаДокументаОтправителя, НомерВерсииЭД, СоглашениеЭД", 
			ОбщегоНазначения.ТекущийПользователь(), Объект.Ссылка, Объект.Организация, Объект.Контрагент, Перечисления.ВидыЭД.ПроизвольныйЭД, 
			Перечисления.НаправленияЭД.Исходящий, НомерДокумента, ИдентификаторОрганизации, ИдентификаторКонтрагента, 
			Объект.Номер, Объект.Дата, 0, СоглашениеЭД);
		ЭлектронныеДокументы.ИзменитьПоСсылкеПрисоединенныйФайл(ДобавленныйФайл, СтруктураДокумента);
	КонецЦикла;
	
	ЭтаФорма.Прочитать();
	
	Возврат МассивВозврата;
		
КонецФункции

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Объект") Тогда
		ЗначениеВРеквизитФормы(Параметры.Объект.ПолучитьОбъект(), "Объект");
	КонецЕсли;
		
	Если Объект.Ссылка.Пустая() Тогда // это новый
		Объект.СтатусДокумента	= Перечисления.СтатусыЭД.НеОтправлен;	
		Объект.Направление 		= Перечисления.НаправленияЭД.Исходящий;
	КонецЕсли;
	
	Если НЕ Объект.Прочитан И НЕ Объект.Ссылка.Пустая() 
		И Объект.Направление = Перечисления.НаправленияЭД.Входящий Тогда
		Документ = РеквизитФормыВЗначение("Объект");
		Документ.Прочитан = Истина;
		Если ЕстьСоглашение(Документ) Тогда
			Документ.Записать();
			ЗначениеВРеквизитФормы(Документ, "Объект");
			ИзмененСтатус = Истина;
		КонецЕсли;	
	КонецЕсли;
	
	ОбновитьТаблицуВложений();
	УправлениеВидимостьюДоступностью();
	
КонецПроцедуры

&НаСервере
Функция ОбновитьТаблицуВложений()
	
	ЗапросВложений = Новый Запрос;
	ЗапросВложений.УстановитьПараметр("ВладелецФайла", Объект.Ссылка);
	ЗапросВложений.Текст = "ВЫБРАТЬ
	                       |	ЭДПрисоединенныеФайлы.Ссылка КАК Ссылка,
	                       |	ЭДПрисоединенныеФайлы.Наименование КАК ИмяФайла,
	                       |	ЭДПрисоединенныеФайлы.Расширение КАК Расширение
	                       |ИЗ
	                       |	Справочник.ЭДПрисоединенныеФайлы КАК ЭДПрисоединенныеФайлы
	                       |ГДЕ
	                       |	ЭДПрисоединенныеФайлы.ВладелецФайла = &ВладелецФайла";
	Результат = ЗапросВложений.Выполнить().Выгрузить();
	
	Результат.Колонки.Добавить("ИндексКартинки");
	Результат.Колонки.Добавить("НаименованиеФайла");
	
	Для Каждого ЭлементРезультат Из Результат Цикл
		ЭлементРезультат.ИндексКартинки = ФайловыеФункцииКлиентСервер.ПолучитьИндексПиктограммыФайла(ЭлементРезультат.Расширение);
		ЭлементРезультат.НаименованиеФайла = ЭлементРезультат.ИмяФайла +"." + ЭлементРезультат.Расширение;
	КонецЦикла;
	ЗначениеВРеквизитФормы(Результат, "Вложения");
	
КонецФункции

&НаКлиенте
Процедура ПодписатьИОтправить(Команда)
	
	ОчиститьСообщения();
	Если ЭтаФорма.ПроверитьЗаполнение() Тогда
		ПараметрыДокумента = ПолучитьМассивЭДИОтправить();
		ОбработатьВыбранныеДокументы(ПараметрыДокумента);	
		УстановитьСтатусПодготовленКОтправке(ПараметрыДокумента);
		Оповестить("ОбновитьСостояниеЭД");
	КонецЕсли;		
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСтатусПодготовленКОтправке(ПараметрыДокумента)
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ПараметрыДокумента.Свойство("ЭтоИсходящийДокумент") И НЕ ПараметрыДокумента.ЭтоИсходящийДокумент Тогда 
		ДокументОбъект.СтатусДокумента = Перечисления.СтатусыЭД.ПодготовленоПодтверждение; 
	Иначе
		ДокументОбъект.СтатусДокумента = Перечисления.СтатусыЭД.ПодготовленКОтправке; 	
	КонецЕсли;
	Если ЕстьСоглашение(ДокументОбъект) Тогда
		ДокументОбъект.Записать();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
		ЭтаФорма.Прочитать();
		ОбновитьЗаголовокФормы();
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивЭДИОтправить()
	
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	Если ЭтаФорма.Модифицированность И ЕстьСоглашение(ДокументОбъект) Тогда
		ДокументОбъект.Записать();
		ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	КонецЕсли;
	
	ТаблицаВложений = РеквизитФормыВЗначение("Вложения");

	МассивВложений = ТаблицаВложений.ВыгрузитьКолонку("Ссылка");
	ЭтоИсходящийДокумент = Объект.Направление = Перечисления.НаправленияЭД.Исходящий;
    Возврат (Новый Структура("МассивНаОтправку, ЭтоИсходящийДокумент", МассивВложений, ЭтоИсходящийДокумент))
	
КонецФункции

&НаКлиенте
Процедура ОбработатьВыбранныеДокументы(ПараметрыПодписи)
	
//#Если Не ВебКлиент Тогда
			
	Если Не ПодключитьРасширениеРаботыСФайлами() Тогда
		Предупреждение(НСтр("ru = 'Для данной операции необходимо установить расширение работы с файлами!'"));
		Возврат;
	КонецЕсли;
    КолПодготовленных = ЭлектронныеДокументыКлиент.ПодготовитьКОтправкеЭД(ПараметрыПодписи.МассивНаОтправку, Ложь, , Истина);
	
	ЭтаФорма.Прочитать();
	
	ТекстСостояния = НСтр("ru = 'Подготовлено к отправке: (%1)'");	
	ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСостояния, КолПодготовленных);
	ТекстЗаголовка = НСтр("ru = 'Обмен электронными документами'");
	ПоказатьОповещениеПользователя(ТекстЗаголовка, ,ТекстСостояния);
	
//#КонецЕсли

КонецПроцедуры

&НаСервере
Процедура УдалитьЛишниеПрисоединенныеФайлы()
	
	ПараметрыВыборки = Новый Структура("ВладелецФайла", Объект.Ссылка);
	ВыборкаПрисоединенныхФайлов = ЭлектронныеДокументы.ПолучитьВыборкуЭДПоОтбору(ПараметрыВыборки);
	Пока ЗначениеЗаполнено(ВыборкаПрисоединенныхФайлов) И ВыборкаПрисоединенныхФайлов.Следующий() Цикл
		МассивФайлов = Вложения.Выгрузить().ВыгрузитьКолонку("Ссылка");
		Если МассивФайлов.Найти(ВыборкаПрисоединенныхФайлов.Ссылка) = Неопределено Тогда
			ВыборкаПрисоединенныхФайлов.Ссылка.ПолучитьОбъект().Удалить();
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ЕстьСоглашение(ОбъектДокумент)
	НастройкиЭД = ЭлектронныеДокументы.ОпределитьНастройкиОбменаЭДПоИсточнику(ОбъектДокумент);
	СоглашениеОпределялось = Истина;
	Если ЗначениеЗаполнено(НастройкиЭД) Тогда
		ОбъектДокумент.ДополнительныеСвойства.Вставить("ЕстьСоглашение", Истина);
		СоглашениеЭД = НастройкиЭД.СоглашениеЭД;
		Возврат Истина;
	Иначе
		СоглашениеЭД = Справочники.СоглашенияОбИспользованииЭД.ПустаяСсылка();
	КонецЕсли;
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ВложенияПослеУдаления(Элемент)
	
	УдалитьЛишниеПрисоединенныеФайлы();
	
КонецПроцедуры

&НаКлиенте
Процедура ВложенияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭД = Элементы.Вложения.ТекущиеДанные.Ссылка;
	// откроем вложение по стандартному механизму
	ДанныеФайла = ПрисоединенныеФайлы.ПолучитьДанныеФайла(ЭД, УникальныйИдентификатор);
	ПрисоединенныеФайлыКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьДокумент(Команда)
	
	Если Элементы.Вложения.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
			
	ТекДокумент = Элементы.Вложения.ТекущиеДанные.Ссылка;
	
	Попытка
		МенеджерКриптографии = ЭлектроннаяПодписьКлиент.ПолучитьМенеджерКриптографии();
		#Если ВебКлиент Тогда
			Если МенеджерКриптографии=Неопределено Тогда
				ТекстОшибки = НСтр("ru = 'Расширение для работы с криптографией не установлено, операция прервана.'");
				ЭлектронныеДокументыКлиент.ОбработатьИсключениеПоЭДНаКлиенте(НСтр("ru = 'открытие обработки документов на подпись'"), ТекстОшибки);
				Возврат;
			КонецЕсли	
		#КонецЕсли		
	Исключение
		ЭлектронныеДокументыКлиент.ОбработатьИсключениеПоЭДНаКлиенте(НСтр("ru = 'установка подписи в произвольном ЭД'"), ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		Возврат;
	КонецПопытки;
	
	МенеджерКриптографии.ВключениеСертификатовВПодпись = РежимВключенияСертификатовКриптографии.ВключатьСертификатСубъекта; 	
	МассивСтруктурСертификатов = ЭлектроннаяПодписьКлиент.ПолучитьМассивСтруктурСертификатов(Истина);
	ПараметрыФормы = Новый Структура("МассивСтруктурСертификатов, ОбъектСсылка", МассивСтруктурСертификатов, ТекДокумент);
	
	СтруктураПараметровПодписи = ОткрытьФормуМодально("ОбщаяФорма.УстановкаПодписиЭЦП", ПараметрыФормы);
	
	Если ТипЗнч(СтруктураПараметровПодписи) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеПодписи = ЭлектроннаяПодписьКлиент.СформироватьДанныеПодписи(МенеджерКриптографии, ТекДокумент, 
							ПрисоединенныеФайлы.ПолучитьДвоичныеДанныеФайла(ТекДокумент), СтруктураПараметровПодписи);

	ЭлектронныеДокументы.ДобавитьПодпись(ТекДокумент, ДанныеПодписи);
	ТекстСостояния = НСтр("ru = 'Подписано: (%1)'");	
	ТекстСостояния = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСостояния, 1);
	ТекстЗаголовка = НСтр("ru = 'Обмен электронными документами'");
	ПоказатьОповещениеПользователя(ТекстЗаголовка, ,ТекстСостояния);
	ЭтаФорма.Прочитать();
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточкуФайла(Команда)
	
	ДанныеТЧ = Элементы.Вложения.ТекущиеДанные;
	Если ДанныеТЧ = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ТекДокумент = Элементы.Вложения.ТекущиеДанные.Ссылка;
	ПараметрыОткрытия = Новый Структура("ПрисоединенныйФайл", ТекДокумент);
	ОткрытьФорму("ОбщаяФорма.ПрисоединенныйФайл", ПараметрыОткрытия);
	ЭтаФорма.Прочитать();
	
	УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьДоступностьЭлементов()
	Если Объект.СтатусДокумента = ПредопределенноеЗначение("Перечисление.СтатусыЭД.НеОтправлен")
		ИЛИ Объект.СтатусДокумента = ПредопределенноеЗначение("Перечисление.СтатусыЭД.Получен") Тогда 
		Элементы.ПодписатьИОтправитьЭД.Доступность = Истина; 
	Иначе 
		Элементы.ПодписатьИОтправитьЭД.Доступность 	= Ложь; 
		Элементы.Добавить.Доступность 				= Ложь;
		Элементы.Удалить.Доступность 				= Ложь;
		Элементы.Подписать.Доступность 				= Ложь;
		Элементы.Сообщение.Доступность 				= Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НомерПриИзменении(Элемент)
	ОбновитьЗаголовокФормы();
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	ОбновитьЗаголовокФормы();
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбновитьЗаголовокФормы();
	Если ИзмененСтатус Тогда 
		Оповестить("ОбновитьСостояниеЭД");
	КонецЕсли;
    УстановитьДоступностьЭлементов();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	ОбновитьЗаголовокФормы();
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	Отказ = НЕ ЕстьСоглашение(ТекущийОбъект);
КонецПроцедуры

