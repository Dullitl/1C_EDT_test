
Функция ОпределитьИспользованиеБюджетнойСтатьи(Дт, БС)
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СтатьиОборотовПоБюджетамабс_ПериодыИспользования.Ссылка,
		|	СтатьиОборотовПоБюджетамабс_ПериодыИспользования.Ссылка.Код,
		|	СтатьиОборотовПоБюджетамабс_ПериодыИспользования.Период,
		|	СтатьиОборотовПоБюджетамабс_ПериодыИспользования.Использование
		|ИЗ
		|	Справочник.СтатьиОборотовПоБюджетам.абс_ПериодыИспользования КАК СтатьиОборотовПоБюджетамабс_ПериодыИспользования
		|ГДЕ
		|	&Дт МЕЖДУ НАЧАЛОПЕРИОДА(СтатьиОборотовПоБюджетамабс_ПериодыИспользования.Период, ГОД) И КОНЕЦПЕРИОДА(СтатьиОборотовПоБюджетамабс_ПериодыИспользования.Период, ГОД)
		|	И СтатьиОборотовПоБюджетамабс_ПериодыИспользования.Ссылка = &Ссылка";
	Запрос.УстановитьПараметр("Дт", Дт);
	Запрос.УстановитьПараметр("Ссылка", БС);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат.Количество();
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда
		Статус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка;
		Ответственный = глЗначениеПеременной("глТекущийПользователь");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	
	НаборЗаписей = РегистрыСведений.абс_ИзменениеСтатусовПервичныхДокументов.СоздатьНаборЗаписей();	
	НаборЗаписей.Отбор.ПервичныйДокумент.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера(); //ТекущаяДата();  АБС Коломиец 17233
	Запись.ПервичныйДокумент = Ссылка;
	Запись.Пользователь = ТекПользователь;	
	Запись.СтатусДокумента = Статус;	
	Запись.Комментарий = Комментарий;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = ТекущаяДата();
	Статус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка;
	СоответствиеБюджетныхАналитик.Очистить();
	СоответствиеБиллинговыхУслуг.Очистить();
	Комментарий = "";
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Статус = Перечисления.абс_СтатусыПервичныхДокументов.Согласован Тогда		
		Для Каждого Стр Из СоответствиеБюджетныхАналитик Цикл
			Если ЗначениеЗаполнено(Стр.СтатьяОборотов) Тогда
				БС = ОпределитьИспользованиеБюджетнойСтатьи(Дата, Стр.СтатьяОборотов);
				Если БС = 0 Тогда				
					Сообщить("В строке " + Строка(Стр.НомерСтроки) + " статья оборотов '" + Строка(Стр.СтатьяОборотов) + "' не используется в периоде " + Формат(Год(Дата), "ЧЦ=4; ЧГ=0"));
					Отказ = Истина;
					Возврат;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		//
		НаборСоответствияНБУ = РегистрыСведений.абс_СоответствиеБиллинговыхУслугНоменклатуре.СоздатьНаборЗаписей();
		НаборСоответствияНБУ.Отбор.Организация.Установить(Организация);
		Для Каждого ЗаписьНБУ Из СоответствиеБиллинговыхУслуг Цикл
        	НоваяЗаписьНБУ = НаборСоответствияНБУ.Добавить();
			НоваяЗаписьНБУ.Организация = Организация;
			НоваяЗаписьНБУ.ТипБиллинга = ЗаписьНБУ.ТипБиллинга;
			НоваяЗаписьНБУ.НаименованиеУслуги = СокрЛП(ЗаписьНБУ.НаименованиеУслуги);
			НоваяЗаписьНБУ.КодУслугиБиллинга = СокрЛП(ЗаписьНБУ.КодУслугиБиллинга);
			НоваяЗаписьНБУ.Номенклатура = ЗаписьНБУ.Номенклатура;
			НоваяЗаписьНБУ.этоМГМН = ЗаписьНБУ.этоМГМН;
			НоваяЗаписьНБУ.ДокументРегистратор = Ссылка;
			Если ЗаписьНБУ.Номенклатура.абс_СтатусНоменклатуры <> Перечисления.абс_СтатусыНоменклатуры.Использование Тогда
				НоменклатураОбъект = ЗаписьНБУ.Номенклатура.ПолучитьОбъект();
				НоменклатураОбъект.ЗаписатьНовыйСтатус(Перечисления.абс_СтатусыНоменклатуры.Использование, "Автоматический перевод статуса документом: " + Строка(Ссылка));
				НоменклатураОбъект.абс_СтатусНоменклатуры = Перечисления.абс_СтатусыНоменклатуры.Использование;
				НоменклатураОбъект.Записать();				
			КонецЕсли;
		КонецЦикла;
		НаборСоответствияНБУ.Записать();
		//
		НаборСоответствияНБА = РегистрыСведений.абс_СоответствиеНоменклатурыБюджетнымАналитикам.СоздатьНаборЗаписей();
		НаборСоответствияНБА.Отбор.Организация.Установить(Организация);		
		Для Каждого ЗаписьНБА Из СоответствиеБюджетныхАналитик Цикл
        	НоваяЗаписьНБА = НаборСоответствияНБА.Добавить();
			НоваяЗаписьНБА.Организация = Организация;
			НоваяЗаписьНБА.Номенклатура = ЗаписьНБА.Номенклатура;
			НоваяЗаписьНБА.абс_ЦФУ = ЗаписьНБА.ЦФУ;
			НоваяЗаписьНБА.СтатьяОборотов = ЗаписьНБА.СтатьяОборотов;
			НоваяЗаписьНБА.абс_ТипКонтрагента = ЗаписьНБА.абс_ТипКонтрагента;
			НоваяЗаписьНБА.ЦФО = ЗаписьНБА.ЦФО;
			НоваяЗаписьНБА.НоменклатурнаяГруппа = ЗаписьНБА.НоменклатурнаяГруппа;
			НоваяЗаписьНБА.ДокументРегистратор = Ссылка;
			Если ЗаписьНБА.Номенклатура.абс_СтатусНоменклатуры <> Перечисления.абс_СтатусыНоменклатуры.Использование Тогда
				НоменклатураОбъект = ЗаписьНБА.Номенклатура.ПолучитьОбъект();
				НоменклатураОбъект.ЗаписатьНовыйСтатус(Перечисления.абс_СтатусыНоменклатуры.Использование, "Автоматический перевод статуса документом: " + Строка(Ссылка));
				НоменклатураОбъект.абс_СтатусНоменклатуры = Перечисления.абс_СтатусыНоменклатуры.Использование;
				НоменклатураОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
		НаборСоответствияНБА.Записать();
	КонецЕсли;
	
КонецПроцедуры