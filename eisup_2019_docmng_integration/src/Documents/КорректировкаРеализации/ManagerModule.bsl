/////////////////////////////////////////////////////////////////////////////////

// Проводки - набор записей регистра бухгалтерии, в который будут добавлены записи
// ТоварНаКомиссии - тип "Булево".
// СтрокаТЧ - строка таблицы документа, содержит поля
//	- СчетаУчетаБУ
//	- СчетаУчетаНУ
//	- СчетРасходовБУ
//	- СчетРасходовНУ
//	- Номенклатура
//	- Склад
//	- Субконто
// Партия - строка талицы партий (или другая коллекция) содержащая информацию о количестве и сумме
//	- СуммаСписания
//	- Количество
// Период - дата движений
// Учет - Может принимать значения "БУ" - бухгалтерский, "НУ" - налоговый, "ПР" - налоговый для регистрации постоянных разниц.
// Счет91 - тип "Булево". Определяет использование счета прочих доходов и расходов
// ПрименитьК - тип "Булево". Если "Истина" то проводка будет сделана на счет "К" вместо счета учета (Дт 90.02 - Кт 41.К).
// ЗакрытьК - тип "Булево". Если "Истина" то формируется проводка по закрытию счета "К" (Дт 41.К - Кт 41.01).
//
Процедура ПодготовитьСтрокуТаблицыПоТоваров(СтруктураШапкиДокумента, ТаблицаТоваровДляУчетаЗатрат, СтрокаТЧ, Период, Учет = "БУ", Счет91 = Ложь, ПР = ложь) Экспорт
	
	НоваяСтрока = ТаблицаТоваровДляУчетаЗатрат.Добавить();
	
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТЧ);
	
	Если ТаблицаТоваровДляУчетаЗатрат.Колонки.Найти("ДатаИсправительнойЗаписи") = Неопределено Тогда
		ТаблицаТоваровДляУчетаЗатрат.Колонки.Добавить("ДатаИсправительнойЗаписи");
	КонецЕсли;
	Если ТаблицаТоваровДляУчетаЗатрат.Колонки.Найти("КоличествоНУ") = Неопределено Тогда
		ТаблицаТоваровДляУчетаЗатрат.Колонки.Добавить("КоличествоНУ");
	КонецЕсли;
	Если ТаблицаТоваровДляУчетаЗатрат.Колонки.Найти("ОтразитьПостояннуюРазницу") = Неопределено Тогда
		ТаблицаТоваровДляУчетаЗатрат.Колонки.Добавить("ОтразитьПостояннуюРазницу");
	КонецЕсли;
	
	Если СтруктураШапкиДокумента.Дата <> Период Тогда
		НоваяСтрока.ДатаИсправительнойЗаписи = Период;
	КонецЕсли;
	
	Если Счет91 Тогда
		Если СтрокаТЧ.СуммаБУ >= 0 Тогда
			НоваяСтрока.СчетРасходовБУ = ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД;
			НоваяСтрока.СчетРасходовНУ = ПланыСчетов.Налоговый.ВнереализационныеРасходы;
		Иначе
			НоваяСтрока.СчетРасходовБУ = ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД;
			НоваяСтрока.СчетРасходовНУ = ПланыСчетов.Налоговый.ВнереализационныеДоходы;
		КонецЕсли;
		НоваяСтрока.СубконтоБУ = СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов;
		НоваяСтрока.СубконтоНУ = СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов;
	Иначе
		НоваяСтрока.СчетРасходовБУ = СтрокаТЧ.СчетРасходовБУ;
		НоваяСтрока.СчетРасходовНУ = СтрокаТЧ.СчетРасходовНУ;
		НоваяСтрока.СубконтоБУ = СтрокаТЧ.СубконтоБУ;
		НоваяСтрока.СубконтоНУ = СтрокаТЧ.СубконтоНУ;
	КонецЕсли;
	
	Если Учет = "БУ" Тогда
		НоваяСтрока.Количество 		= СтрокаТЧ.Количество;
		НоваяСтрока.КоличествоНУ 	= 0;
	Иначе
		НоваяСтрока.Количество 		= 0;
		НоваяСтрока.КоличествоНУ    = СтрокаТЧ.Количество;
	КонецЕсли;
	
	НоваяСтрока.ОтразитьПостояннуюРазницу = ПР;
		
КонецПроцедуры

// Проводки - набор записей регистра бухгалтерии, в который будут добавлены записи
// СтрокаТЧ - строка таблицы документа, содержит поля
//	- СуммаБУ
//	- СуммаВал
// Период - дата движений
// ПрименитьК - тип "Булево". Если "Истина" то проводка будет сделана на счет "К" вместо счета расчетов (Дт 76.К - Кт 76.К).
// ЗакрытьК - тип "Булево". Если "Истина" то формируется проводка по закрытию счета "К" (Дт 62.01 - Кт 76.К и Дт 76.К - Кт 76.09).
//
Процедура СформироватьПроводкиПоВыручкеКомитента(СтруктураШапкиДокумента, Проводки, СтрокаТЧ, Период, ПрименитьК = Ложь, ЗакрытьК = Ложь) Экспорт
	
	Если СтрокаТЧ.СуммаБУ = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗакрытьК Тогда
		Проводка = Проводки.Добавить();
		
		Проводка.Период       = Период;
		
		//нач ВСТАВКА Нарыжный 30.09.2013 32968
	
		ПрошлыйМесяц = Год(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Год(СтруктураШапкиДокумента.Дата) Или  Месяц(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Месяц(СтруктураШапкиДокумента.Дата);
	
		Проводка.Период       = ?(ПрошлыйМесяц, СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.ДокументРеализацииДата); 	
	
		// кон ВСТАВКА Нарыжный 30.09.2013 32968
		
		Проводка.Организация  = СтруктураШапкиДокумента.Организация;
		Проводка.Содержание   = "Корректировка расчетов с комитентом";
		
		Если ПрименитьК Тогда
			Проводка.СчетДт = ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода;
		Иначе
			Проводка.СчетДт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
			Если Проводка.СчетДт.Валютный Тогда
				Проводка.ВалютаДт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаДт = СтрокаТЧ.СуммаВал;
			КонецЕсли;
		КонецЕсли;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент, Истина);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
		
		Если ПрименитьК Тогда
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода;
		Иначе			
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
		КонецЕсли;
		
		Проводка.Сумма = СтрокаТЧ.СуммаБУ;
		
	Иначе
		//Возврат расчетов с покупателем с 76К
		Проводка = Проводки.Добавить();
		
		//нач ВСТАВКА Нарыжный 30.09.2013 32968
	
		ПрошлыйМесяц = Год(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Год(СтруктураШапкиДокумента.Дата) Или  Месяц(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Месяц(СтруктураШапкиДокумента.Дата);
		
		Проводка.Период       = ?(ПрошлыйМесяц, СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.ДокументРеализацииДата); 	
	
		// кон ВСТАВКА Нарыжный 30.09.2013 32968
		
		Проводка.Период       = Период;
		Проводка.Организация  = СтруктураШапкиДокумента.Организация;
		Проводка.Содержание   = "Корректировка расчетов с комитентом";
		
		Проводка.СчетДт = СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент, Истина);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
		
		Если Проводка.СчетДт.Валютный Тогда
			Проводка.ВалютаДт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
			Проводка.ВалютнаяСуммаДт = СтрокаТЧ.СуммаВал;
		КонецЕсли;
		
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент, Истина);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
		
		Проводка.Сумма = СтрокаТЧ.СуммаБУ;
		
		//Возврат расчетов с комитентом с 76К
		Проводка = Проводки.Добавить();
		
		Проводка.Период       = Период;
		Проводка.Организация  = СтруктураШапкиДокумента.Организация;
		Проводка.Содержание   = "Корректировка расчетов с комитентом";
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода;
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеРасчетыСРазнымиДебиторамиИКредиторами;
		Проводка.Сумма  = СтрокаТЧ.СуммаБУ;
	КонецЕсли;
	
КонецПроцедуры

Функция абс_ПроверитьДвижениеПоКонтрагенты(СтруктураШапкиДокумента)  
	
	Возврат (СтруктураШапкиДокумента.Контрагент <> СтруктураШапкиДокумента.абс_Контрагент
		     или СтруктураШапкиДокумента.ДоговорКонтрагента <> СтруктураШапкиДокумента.абс_ДоговорКонтрагента)
		     и ЗначениеЗаполнено(СтруктураШапкиДокумента.абс_ДоговорКонтрагента) 
			 и ЗначениеЗаполнено(СтруктураШапкиДокумента.абс_Контрагент); 
	
КонецФункции

// Проводки - набор записей регистра бухгалтерии, в который будут добавлены записи
// СтрокаТЧ - строка таблицы документа, содержит поля
//	- СуммаБУ
//	- СуммаВал
//	- СчетДоходовБУ
//	- СчетДоходовНУ
//	- Номенклатура
//	- Субконто
//	- СтавкаНДС
// Период - дата движений
// Учет - Может принимать значения "БУ" - бухгалтерский, "НУ" - налоговый, "ПР" - налоговый для регистрации постоянных разниц.
// ПрименитьК - тип "Булево". Если "Истина" то проводка будет сделана на счет "К" вместо счета расчетов (Дт 76.К - Кт 90.01).
// ЗакрытьК - тип "Булево". Если "Истина" то формируется проводка по закрытию счета "К" (Дт 62.01 - Кт 76.К).
//
Процедура СформироватьПроводкиПоСобственнойВыручке(СтруктураШапкиДокумента, Проводки, СтрокаТЧ, Период, Учет = "БУ", Счет91 = Ложь, ПрименитьК = Ложь, ЗакрытьК = Ложь) Экспорт
	
	Если СтрокаТЧ.СуммаБУ = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Проводка = Проводки.Добавить();
	
	//нач ВСТАВКА Нарыжный 30.09.2013 32968
	
	ПрошлыйМесяц = Год(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Год(СтруктураШапкиДокумента.Дата) Или  Месяц(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Месяц(СтруктураШапкиДокумента.Дата);
	
	Проводка.Период       = ?(ПрошлыйМесяц, СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.ДокументРеализацииДата); 	
	
	// кон ВСТАВКА Нарыжный 30.09.2013 32968

	Проводка.Период       = Период;
	Проводка.Организация  = СтруктураШапкиДокумента.Организация;
	Проводка.Содержание   = "Корректировка реализации";
	Проводка.Сумма        = ?(Учет = "БУ", СтрокаТЧ.СуммаБУ, СтрокаТЧ.СуммаБУ - СтрокаТЧ.НДС);
	
	//АБС ВСТАВКА НАЧАЛО
	Если абс_ПроверитьДвижениеПоКонтрагенты(СтруктураШапкиДокумента) Тогда
		Проводка.Сумма   = ?(Учет = "БУ", СтрокаТЧ.СуммаБУ, СтрокаТЧ.СуммаБУ - СтрокаТЧ.НДС);	
	КонецЕсли;	
	//\\АБС ВСТАВКА КОНЕЦ	
	
	СчетУчетаРасчетов 		= ?(Учет = "БУ", СтруктураШапкиДокумента.СчетУчетаРасчетовСКонтрагентом, ПланыСчетов.Налоговый.ПоступлениеИВыбытиеИмуществаРаботУслугПрав);
	СчетПрочихРасходов 		= ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД, ПланыСчетов.Налоговый.ВнереализационныеРасходы);
	СчетТекущихДоходов		= ?(Учет = "БУ", СтрокаТЧ.СчетДоходовБУ, СтрокаТЧ.СчетДоходовНУ);
	СчетПрочихДоходов 		= ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.ПрочиеДоходы, ПланыСчетов.Налоговый.ВнереализационныеДоходы);
	СчетКоррРасчетов		= ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.КорректировкаРасчетовПрошлогоПериода, ПланыСчетов.Налоговый.ПустаяСсылка());
	Субконто				= ?(Учет = "БУ", СтрокаТЧ.СубконтоБУ, СтрокаТЧ.СубконтоНУ);
	
	Если Счет91 И (СтрокаТЧ.СуммаБУ > 0) Тогда
		
		Проводка.СчетКт  = СчетПрочихДоходов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
		//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
		ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения91
																				,СтрокаТЧ.абс_СубконтоБУ2                  
																				,СтруктураШапкиДокумента.ДокументРеализацииДата);
		//\\АБС ВСТАВКА №37834 КОНЕЦ			
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ас_ПериодыОтражения",ПериодОтражения);
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РеализуемыеАктивы", СтрокаТЧ.Номенклатура);
		
		Если Учет <> "ПР" Тогда
			Проводка.СчетДт = СчетУчетаРасчетов;
			Если Учет = "БУ" И Проводка.СчетДт.Валютный Тогда
				Проводка.ВалютаДт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаДт = СтрокаТЧ.СуммаВал;
			КонецЕсли;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент, Истина);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);		 
		Иначе
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		КонецЕсли;
				
		Если Учет = "НУ" Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"УсловияПоступленияИВыбытия", Перечисления.УсловияПоступленияИВыбытияИмущества.ЗаПлату);
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
		КонецЕсли;
		
		
	ИначеЕсли Счет91 И (СтрокаТЧ.СуммаБУ < 0) Тогда
		
		Проводка.Сумма = - Проводка.Сумма;
		
		Проводка.СчетДт  = СчетПрочихРасходов;
		
		// {{ТТК Сладков А. Заявка № 06.07.2016 начало
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
		СтатьяИзменениеСтоимостиРаботУслуг= ПолучитьСтатьюИзменениеСтоимостиРаботУслуг();

		
		Если СтруктураШапкиДокумента.ВидОперации =Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
			И Год(СтруктураШапкиДокумента.ДокументОснованиеДата)<Год(СтруктураШапкиДокумента.Дата)
			И  СтатьяИзменениеСтоимостиРаботУслуг <> Неопределено Тогда
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтатьяИзменениеСтоимостиРаботУслуг);
			
		Иначе
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
			
		КонецЕсли;
		// }}ТТК Сладков А. Заявка № 06.07.2016 окончание
		
		//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
		ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения91
																				,СтрокаТЧ.абс_СубконтоБУ2                  
																				,СтруктураШапкиДокумента.ДокументРеализацииДата);
		//\\АБС ВСТАВКА №37834 КОНЕЦ		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ас_ПериодыОтражения",ПериодОтражения);
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РеализуемыеАктивы", СтрокаТЧ.Номенклатура);

		Если Учет <> "ПР" Тогда
			Проводка.СчетКт = СчетУчетаРасчетов;
			Если Учет = "БУ" И Проводка.СчетКт.Валютный Тогда
				Проводка.ВалютаКт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
				Проводка.ВалютнаяСуммаКт = СтрокаТЧ.СуммаВал;
			КонецЕсли;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент, Истина);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
		ИначеЕсли СтруктураШапкиДокумента.ОтчетностьПодписана Тогда
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		Иначе
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР;
			Проводка.Сумма      = - СтрокаТЧ.СуммаБУ;	
		КонецЕсли;
		
		Если Учет = "НУ" Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"УсловияПоступленияИВыбытия", Перечисления.УсловияПоступленияИВыбытияИмущества.ЗаПлату);
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
		КонецЕсли;
		
		
		// {{ТТК Сладков А. Заявка №7737700  15.07.2016 начало
		Если СтруктураШапкиДокумента.ВидОперации =Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
			И Год(СтруктураШапкиДокумента.ДокументОснованиеДата)<Год(СтруктураШапкиДокумента.Дата)
			И  СтатьяИзменениеСтоимостиРаботУслуг <> Неопределено и Учет = "НУ"Тогда
			
		
			 Если СтатьяИзменениеСтоимостиРаботУслуг.ПринятиеКНалоговомуУчету Тогда
    						
				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.НУ;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.НУ;
			
			ИначеЕсли СтатьяИзменениеСтоимостиРаботУслуг.абс_УточнениеЗатрат Тогда

				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.ВР;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.ВР;
						
			ИначеЕсли (СтатьяИзменениеСтоимостиРаботУслуг.ПринятиеКНалоговомуУчету =ЛОЖЬ 
				и  СтатьяИзменениеСтоимостиРаботУслуг.абс_УточнениеЗатрат = ЛОЖЬ)  Тогда
				
				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.ПР;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.ПР;
				
			Иначе
				
				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.НУ;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.НУ;

			КонецЕсли;
			
		ИначеЕсли  СтруктураШапкиДокумента.ВидОперации =Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
			И Год(СтруктураШапкиДокумента.ДокументОснованиеДата)<Год(СтруктураШапкиДокумента.Дата)
			И  ЗначениеЗаполнено(СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов) и Учет = "НУ"Тогда
		

				Если СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов.ПринятиеКНалоговомуУчету Тогда
    						
				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.НУ;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.НУ;
			
			ИначеЕсли СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов.абс_УточнениеЗатрат Тогда

				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.ВР;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.ВР;
						
			ИначеЕсли (СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов.ПринятиеКНалоговомуУчету =ЛОЖЬ 
				и  СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов.абс_УточнениеЗатрат = ЛОЖЬ)  Тогда
				
				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.ПР;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.ПР;
				
			Иначе
				
				Проводка.ВидУчетаДт 	= Перечисления.ВидыУчетаПоПБУ18.НУ;
				Проводка.ВидУчетаКт	 	= Перечисления.ВидыУчетаПоПБУ18.НУ;

			КонецЕсли;

		КонецЕсли;
		// }}ТТК Сладков А. Заявка №7737700  15.07.2016 окончание
		
		
	Иначе
		
		Если ЗакрытьК Тогда
			Проводка.СчетКт = СчетКоррРасчетов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент, Истина);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);			
		Иначе
			Проводка.СчетКт   = СчетТекущихДоходов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, 1, Субконто);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СтавкиНДС", СтрокаТЧ.СтавкаНДС);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", СтрокаТЧ.Номенклатура);			
		КонецЕсли;
		
		Если Учет <> "ПР" Тогда
			Если ПрименитьК Тогда
				Проводка.СчетДт = СчетКоррРасчетов;
			Иначе
				Проводка.СчетДт = СчетУчетаРасчетов;
				Если Учет = "БУ" И Проводка.СчетДт.Валютный Тогда
					Проводка.ВалютаДт        = СтруктураШапкиДокумента.ВалютаВзаиморасчетов;
					Проводка.ВалютнаяСуммаДт = СтрокаТЧ.СуммаВал;
				КонецЕсли;
			КонецЕсли;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Контрагенты",        СтруктураШапкиДокумента.Контрагент, Истина);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"Договоры",           СтруктураШапкиДокумента.ДоговорКонтрагента);
		Иначе
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		КонецЕсли;
		
		Если Учет = "НУ" Тогда
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт,"УсловияПоступленияИВыбытия", Перечисления.УсловияПоступленияИВыбытияИмущества.ЗаПлату);
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
		КонецЕсли;
				
	КонецЕсли;
		
КонецПроцедуры

// Учет - Может принимать значения "БУ" - бухгалтерский, "НУ" - налоговый, "ПР" - налоговый для регистрации постоянных разниц.
// Проводки - набор записей регистра бухгалтерии, в который будут добавлены записи
// Период - дата движений
// Организация
// Стоимость
//
Процедура СформироватьФинансовыйРезультат(Учет = "БУ", Проводки, Период, Организация, ФинРезультат) Экспорт
	
	Если ФинРезультат = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	ПрибыльУбытокОтПродаж	= ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.ПрибыльУбытокОтПродаж, ПланыСчетов.Налоговый.ПрибыльУбытокОтПродаж);
	ПрибылиИУбытки 			= ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.ПрибылиИУбыткиНеОблагаемыеЕНВД, ПланыСчетов.Налоговый.ПрибылиИУбыткиБезНалогаНаПрибыль);

	Проводка 				= Проводки.Добавить();
	Проводка.Период       	= Период;
	Проводка.Организация  	= Организация;
	Проводка.Содержание   	= "Финансовый результат корректировки";
	
	Если ФинРезультат > 0 Тогда
		Проводка.Сумма 	= ФинРезультат;
		Проводка.СчетДт = ПрибыльУбытокОтПродаж;
		Проводка.СчетКт = ПрибылиИУбытки;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПрибылиИУбытки", Перечисления.ПрибылиИУбытки.ПрибыльУбытокОтПродаж);
	Иначе
		Проводка.Сумма  = - ФинРезультат;
		Проводка.СчетДт = ПрибылиИУбытки;
		Проводка.СчетКт = ПрибыльУбытокОтПродаж;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрибылиИУбытки", Перечисления.ПрибылиИУбытки.ПрибыльУбытокОтПродаж);		
	КонецЕсли;
	
	Если Учет = "НУ" Тогда
		Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
		Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
	КонецЕсли;
		
КонецПроцедуры

// Проводки - набор записей регистра бухгалтерии, в который будут добавлены записи
// СтрокаТЧ - строка таблицы документа, содержит поля
//	- Номенклатура
//	- СчетРасходовБУ
//	- Субконто
//	- СтавкаНДС
//	- СуммаБУ
//	- НДС
//	- НДСИтоговый 	(пересчитанное в валюту регл. учета значение реквизита СуммаНДС)
//	- НДСДоИзм 		(пересчитанное в валюту регл. учета значение реквизита СуммаНДСДоИзменения)
//	- НДСДоКорр		(пересчитанное в валюту регл. учета значение реквизита СуммаДоКорректировки)
// Период - дата движений
// Счет91 - тип "Булево". Определяет использование счета прочих доходов и расходов
//
Процедура СформироватьПроводкиПоНДС(СтруктураШапкиДокумента, Проводки, СтрокаТЧ, Период, Счет91 = Ложь) Экспорт
	
	Если СтрокаТЧ.НДС = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СчетУчетаНДСПоРеализации = ?(БухгалтерскийУчет.ЭтоСубсчет(СтрокаТЧ.СчетРасходовБУ, ПланыСчетов.Хозрасчетный.ПрочиеДоходыИРасходы), СтрокаТЧ.СчетРасходовБУ, ПланыСчетов.Хозрасчетный.Продажи_НДС);
	
	СчетФактура = СтруктураШапкиДокумента.Ссылка;
	НаСчет19 	= Ложь;
	ВтораяПроводка = Ложь;
	СписатьНДС 	= СтрокаТЧ.НДС;
	Если СтруктураШапкиДокумента.ВидОперации = Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение Тогда
		НаСчет19 = (СписатьНДС < 0);		
	Иначе
		ИсправляемыйДокумент = УчетНДС.ПолучитьИсправляемыйДокументРеализации(СтруктураШапкиДокумента.ДокументРеализации);
		Если ТипЗнч(ИсправляемыйДокумент) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
			СчетФактура = ИсправляемыйДокумент;
			НаСчет19 	= (СтрокаТЧ.НДСДоИзм - СтрокаТЧ.НДСДоКорр < 0);
			НаСчет19Исп = (СтрокаТЧ.НДСИтоговый - СтрокаТЧ.НДСДоКорр < 0);
			ВтораяПроводка = НаСчет19 <> НаСчет19Исп;
			СписатьНДС	= ?(ВтораяПроводка, СтрокаТЧ.НДСДоКорр -  СтрокаТЧ.НДСДоИзм, СписатьНДС);
		КонецЕсли;			
	КонецЕсли;
	
	Проводка = Проводки.Добавить();
	
	Проводка.Период       = Период;
	
	//нач ВСТАВКА Нарыжный 30.09.2013 32968
	
	ПрошлыйМесяц = Год(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Год(СтруктураШапкиДокумента.Дата) Или  Месяц(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Месяц(СтруктураШапкиДокумента.Дата);
	
	Проводка.Период       = ?(ПрошлыйМесяц, СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.ДокументРеализацииДата); 	
	
	// кон ВСТАВКА Нарыжный 30.09.2013 32968
	
	Проводка.Организация  = СтруктураШапкиДокумента.Организация;
	Проводка.Содержание   = "Корректировка реализации";
	
	Если Счет91 И СписатьНДС < 0 Тогда
		//АБС+ Тупиков 19.11.2012
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.03");
		//Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
		
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РеализуемыеАктивы", СтрокаТЧ.Номенклатура);
		
		// {{ТТК Сладков А. Заявка №7737700 06.07.2016 начало
		//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
		СтатьяИзменениеСтоимостиРаботУслуг= ПолучитьСтатьюИзменениеСтоимостиРаботУслуг();
		
		Если СтруктураШапкиДокумента.ВидОперации =Перечисления.ВидыОперацийИсправленияПоступленияРеализации.СогласованноеИзменение 
			И Год(СтруктураШапкиДокумента.ДокументОснованиеДата)<Год(СтруктураШапкиДокумента.Дата)
			И СтатьяИзменениеСтоимостиРаботУслуг<>Неопределено
			Тогда  
						
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтатьяИзменениеСтоимостиРаботУслуг);
			
		Иначе
			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
			
		КонецЕсли;
		// }}ТТК Сладков А. Заявка №7737700 06.07.2016 окончание

		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтавкиНДС", СтрокаТЧ.СтавкаНДС);
		
		Если НаСчет19 Тогда
			//Проводка.СчетДт = ПланыСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации; //абсо по ТЗ
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ОтрицательныеКорректировкиНДС; //абсо по ТЗ
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СФПолученные", СчетФактура);
		Иначе
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДС;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			////АБС+ Тупиков 15133
			//Если Не ЗначениеЗаполнено(СтрокаТЧ.абс_СубконтоБУ2) Тогда
			//	ПериодОтражения = ПолучитьПериодНДСПоДатеКвартал(СтруктураШапкиДокумента.ДокументРеализацииДата);
			//Иначе
			//	ПериодОтражения = СтрокаТЧ.абс_СубконтоБУ2;
			//КонецЕсли;
			////АБС- Тупиков
			//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
			ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения
																					,СтрокаТЧ.абс_СубконтоБУ2                  
																					,СтруктураШапкиДокумента.ДокументРеализацииДата);
			//\\АБС ВСТАВКА №37834 КОНЕЦ  
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ас_ПериодыОтражения"   , ПериодОтражения);
			
		КонецЕсли;
		Проводка.Сумма = СписатьНДС;
	Иначе
		//Проводка.СчетДт = ?(Счет91, ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД, СчетУчетаНДСПоРеализации);
		Проводка.СчетДт = ?(Счет91, ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.03"), СчетУчетаНДСПоРеализации); //АБС+ Тупиков 17928
		Если Счет91 Тогда
			//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РеализуемыеАктивы", СтрокаТЧ.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
			//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
			ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения91
																					,СтрокаТЧ.абс_СубконтоБУ2                  
																					,СтруктураШапкиДокумента.ДокументРеализацииДата);
			//\\АБС ВСТАВКА №37834 КОНЕЦ				
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ас_ПериодыОтражения",ПериодОтражения);			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтавкиНДС", СтрокаТЧ.СтавкаНДС);   //АБС+ Тупиков 17928	
		Иначе
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтрокаТЧ.СубконтоБУ);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтавкиНДС", СтрокаТЧ.СтавкаНДС);
			//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
			ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(?(Проводка.СчетДт = ПланыСчетов.Хозрасчетный.НДС,СтруктураШапкиДокумента.абс_ПериодОтражения,СтруктураШапкиДокумента.абс_ПериодОтражения91)
																					,СтрокаТЧ.абс_СубконтоБУ2                  
																					,СтруктураШапкиДокумента.ДокументРеализацииДата);
			//\\АБС ВСТАВКА №37834 КОНЕЦ			
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ас_ПериодыОтражения",ПериодОтражения);
		КонецЕсли;
		
		Если НаСчет19 Тогда
			//Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации; //абсо по ТЗ
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ОтрицательныеКорректировкиНДС; //абсо по ТЗ
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СФПолученные", СчетФактура);
		Иначе
			Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДС;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			//АБС+ Тупиков 15133
			//Если Не ЗначениеЗаполнено(СтрокаТЧ.абс_СубконтоБУ2) Тогда
			//	ПериодОтражения = ПолучитьПериодНДСПоДатеКвартал(СтруктураШапкиДокумента.ДокументРеализацииДата);
			//Иначе
			//	ПериодОтражения = СтрокаТЧ.абс_СубконтоБУ2;
			//КонецЕсли;
			//АБС- Тупиков  			
			//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
			ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения
																					,СтрокаТЧ.абс_СубконтоБУ2                  
																					,СтруктураШапкиДокумента.ДокументРеализацииДата);
			//\\АБС ВСТАВКА №37834 КОНЕЦ    	
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ас_ПериодыОтражения"   , ПериодОтражения);
			
		КонецЕсли;
		Проводка.Сумма = СписатьНДС;
	КонецЕсли;
	
	Если ВтораяПроводка Тогда
		НаСчет19 	= (СтрокаТЧ.НДСИтоговый - СтрокаТЧ.НДСДоКорр < 0);
		СписатьНДС	= СтрокаТЧ.НДСИтоговый - СтрокаТЧ.НДСДоКорр;
		
		Если СписатьНДС <> 0 Тогда
			Проводка = Проводки.Добавить();
			
			Проводка.Период       = Период;
			
			//нач ВСТАВКА Нарыжный 30.09.2013 32968
	
			ПрошлыйМесяц = Год(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Год(СтруктураШапкиДокумента.Дата) Или  Месяц(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Месяц(СтруктураШапкиДокумента.Дата);
	
			Проводка.Период       = ?(ПрошлыйМесяц, СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.ДокументРеализацииДата); 	
	
			// кон ВСТАВКА Нарыжный 30.09.2013 32968

			Проводка.Организация  = СтруктураШапкиДокумента.Организация;
			Проводка.Содержание   = "Корректировка реализации";
			
			Если Счет91 И СписатьНДС < 0 Тогда
				
				Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ПрочиеДоходы;
				//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "РеализуемыеАктивы", СтрокаТЧ.Номенклатура);
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
				//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
				ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения91
																						,СтрокаТЧ.абс_СубконтоБУ2                  
																						,СтруктураШапкиДокумента.ДокументРеализацииДата);
				//\\АБС ВСТАВКА №37834 КОНЕЦ				
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ас_ПериодыОтражения",ПериодОтражения);
				
				Если НаСчет19 Тогда
					//Проводка.СчетДт = ПланыСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации; //абсо по ТЗ
					Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ОтрицательныеКорректировкиНДС; //абсо по ТЗ
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СФПолученные", СчетФактура);
				Иначе
					Проводка.СчетДт = ПланыСчетов.Хозрасчетный.НДС;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
					//Если Не ЗначениеЗаполнено(СтрокаТЧ.абс_СубконтоБУ2) Тогда
					//	ПериодОтражения = ПолучитьПериодНДСПоДатеКвартал(СтруктураШапкиДокумента.ДокументРеализацииДата);
					//Иначе
					//	ПериодОтражения = СтрокаТЧ.абс_СубконтоБУ2;
					//КонецЕсли;
					//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
					ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения
																							,СтрокаТЧ.абс_СубконтоБУ2                  
																							,СтруктураШапкиДокумента.ДокументРеализацииДата);
					//\\АБС ВСТАВКА №37834 КОНЕЦ   					
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ас_ПериодыОтражения"   , ПериодОтражения);
				КонецЕсли;
				Проводка.Сумма = - СписатьНДС;
			Иначе
				Проводка.СчетДт = ?(Счет91, ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД, СчетУчетаНДСПоРеализации);
				Если Счет91 Тогда
					//БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "РеализуемыеАктивы", СтрокаТЧ.Номенклатура);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
					//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
					ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения91
																							,СтрокаТЧ.абс_СубконтоБУ2                  
																							,СтруктураШапкиДокумента.ДокументРеализацииДата);
					//\\АБС ВСТАВКА №37834 КОНЕЦ					
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ас_ПериодыОтражения",ПериодОтражения);
				Иначе
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, СтрокаТЧ.СубконтоБУ);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "СтавкиНДС", СтрокаТЧ.СтавкаНДС);
				КонецЕсли;
				
				Если НаСчет19 Тогда
					//Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДСПоУменьшениюСтоимостиРеализации; //абсо по ТЗ
					Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ОтрицательныеКорректировкиНДС; //абсо по ТЗ
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", СтруктураШапкиДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "СФПолученные", СчетФактура);
				Иначе
					Проводка.СчетКт = ПланыСчетов.Хозрасчетный.НДС;
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ВидыПлатежейВГосБюджет", Перечисления.ВидыПлатежейВГосБюджет.Налог);
					//Если Не ЗначениеЗаполнено(СтрокаТЧ.абс_СубконтоБУ2) Тогда
					//	ПериодОтражения = ПолучитьПериодНДСПоДатеКвартал(СтруктураШапкиДокумента.ДокументРеализацииДата);
					//Иначе
					//	ПериодОтражения = СтрокаТЧ.абс_СубконтоБУ2;
					//КонецЕсли;
					//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
					ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения
																							,СтрокаТЧ.абс_СубконтоБУ2                  
																							,СтруктураШапкиДокумента.ДокументРеализацииДата);
					//\\АБС ВСТАВКА №37834 КОНЕЦ   					
					БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ас_ПериодыОтражения"   , ПериодОтражения);
				КонецЕсли;
				Проводка.Сумма = СписатьНДС;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьПроводкиПоТовару(СтруктураШапкиДокумента, Проводки, Партия, Период, Учет = "БУ", Счет91 = Ложь, ПрименитьК = Ложь, ЗакрытьК = Ложь) Экспорт
	
	Если ПрименитьК И Партия.Комиссионный Тогда
		Возврат;
	КонецЕсли;
	
	МПЗ = БухгалтерскийУчет.ПолучитьНазваниеОбъекта(Партия.СчетУчета);
	Проводка = Проводки.Добавить();
	
	Проводка.Период       = Период;
	
	//нач ВСТАВКА Нарыжный 30.09.2013 32968
	
	ПрошлыйМесяц = Год(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Год(СтруктураШапкиДокумента.Дата) Или  Месяц(СтруктураШапкиДокумента.ДокументРеализацииДата) <  Месяц(СтруктураШапкиДокумента.Дата);
	
	Проводка.Период       = ?(ПрошлыйМесяц, СтруктураШапкиДокумента.Дата, СтруктураШапкиДокумента.ДокументРеализацииДата); 	
	
	// кон ВСТАВКА Нарыжный 30.09.2013 32968
	
	Проводка.Организация  = СтруктураШапкиДокумента.Организация;
	Проводка.Содержание   = "Корректировка реализации " + МПЗ;
	СчетПрочихДоходов 	  = ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.ПрочиеДоходы, ПланыСчетов.Налоговый.ВнереализационныеДоходы);
	СчетПрочихРасходов 	  = ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.ПрочиеРасходыНеОблагаемыеЕНВД, ПланыСчетов.Налоговый.ВнереализационныеРасходы);
	СчетТекущихРасходов	  = ?(Учет = "БУ", Партия.СчетРасходовБУ, Партия.СчетРасходовНУ);
	СчетКоррТоваров 	  = ?(Учет = "БУ", ПланыСчетов.Хозрасчетный.КорректировкаТоваровПрошлогоПериода, ПланыСчетов.Налоговый.КорректировкаТоваровПрошлогоПериода);
	Субконто			  = ?(Учет = "БУ", Партия.СубконтоБУ, Партия.СубконтоНУ);
	Проводка.Сумма        = Партия.Стоимость;
	
	Если НЕ Партия.Комиссионный И Счет91 И (Партия.Стоимость >= 0) Тогда
		
		Проводка.СчетДт   = СчетПрочихРасходов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Номенклатура", Партия.Номенклатура);
		//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
		ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения91
																				,Неопределено                  
																				,СтруктураШапкиДокумента.ДокументРеализацииДата);
		//\\АБС ВСТАВКА №37834 КОНЕЦ		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ас_ПериодыОтражения",ПериодОтражения);
		
		Если Учет <> "ПР" Тогда
			Проводка.СчетКт = Партия.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Номенклатура", Партия.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Склады",       СтруктураШапкиДокумента.Склад);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Контрагенты",  СтруктураШапкиДокумента.Контрагент);
			Проводка.КоличествоКт = Партия.Количество;
		Иначе
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		КонецЕсли;
		Если Учет = "НУ" Тогда
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
		КонецЕсли;
		
	ИначеЕсли НЕ Партия.Комиссионный И Счет91 И (Партия.Стоимость < 0) Тогда
		
		Проводка.Сумма    = - Проводка.Сумма;
		Проводка.СчетКт   = СчетПрочихДоходов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ПрочиеДоходыИРасходы", СтруктураШапкиДокумента.СтатьяПрочихДоходовИРасходов);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Номенклатура", Партия.Номенклатура);
		//АБС ВСТАВКА №37834 НАЧАЛО «25 января 2014 г.», Пополитов
		ПериодОтражения = абс_СерверныеФункции.КорректныйПериодОтраженияНеДляНДС(СтруктураШапкиДокумента.абс_ПериодОтражения91
																				,Неопределено                  
																				,СтруктураШапкиДокумента.ДокументРеализацииДата);
		//\\АБС ВСТАВКА №37834 КОНЕЦ			
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ас_ПериодыОтражения",ПериодОтражения);
		
		Если Учет <> "ПР" Тогда
			Проводка.СчетДт = Партия.СчетУчета;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Номенклатура", Партия.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Склады",       СтруктураШапкиДокумента.Склад);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Контрагенты",  СтруктураШапкиДокумента.Контрагент);
			Проводка.КоличествоДт = - Партия.Количество;
		Иначе
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		КонецЕсли;
		Если Учет = "НУ" Тогда
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
		КонецЕсли;
		
	ИначеЕсли НЕ Партия.Комиссионный И ЗакрытьК Тогда
		Проводка.СчетДт = СчетКоррТоваров;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Номенклатура", Партия.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт,Проводка.СубконтоДт, "Склады",       СтруктураШапкиДокумента.Склад);
		Проводка.КоличествоДт = Партия.Количество;
		
		Проводка.СчетКт = Партия.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Номенклатура", Партия.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Склады",       СтруктураШапкиДокумента.Склад);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Контрагенты",  СтруктураШапкиДокумента.Контрагент);
		Проводка.КоличествоКт = Партия.Количество;
		
		Если Учет = "НУ" Тогда
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
		КонецЕсли;
			
	ИначеЕсли НЕ Партия.Комиссионный Тогда
		
		Проводка.СчетДт   = СчетТекущихРасходов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, 1, Субконто);
		
		Если Учет <> "ПР" Тогда
			Если ПрименитьК Тогда
				Проводка.СчетКт = СчетКоррТоваров;
			Иначе
				Проводка.СчетКт = Партия.СчетУчета;
			КонецЕсли;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Номенклатура", Партия.Номенклатура);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Склады",       СтруктураШапкиДокумента.Склад);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Контрагенты",  СтруктураШапкиДокумента.Контрагент);
			Проводка.КоличествоКт = Партия.Количество;
		Иначе
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		КонецЕсли;
		
		Если Учет = "НУ" Тогда
			Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.НУ;
			Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.НУ;			
		КонецЕсли;
	Иначе
		
		Проводка.СчетКт = Партия.СчетУчета;
		
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Номенклатура", Партия.Номенклатура);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Склады",       СтруктураШапкиДокумента.Склад);
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт,Проводка.СубконтоКт, "Контрагенты",  СтруктураШапкиДокумента.Контрагент);
		
		Проводка.КоличествоКт = Партия.Количество;
		
	КонецЕсли;
	
	Если Учет <> "БУ" И Партия.ПостояннаяРазница <> 0 Тогда
		Проводка2 = Проводки.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка2, Проводка);
		Проводка2.Сумма = Партия.ПостояннаяРазница;
		Если ЗначениеЗаполнено(Проводка.КоличествоДт) Тогда
			Проводка2.КоличествоДт = 0;
		КонецЕсли;
		Если ЗначениеЗаполнено(Проводка.КоличествоКт) Тогда
			Проводка2.КоличествоКт = 0;
		КонецЕсли;
		Если ЗначениеЗаполнено(Проводка.ВидУчетаДт) Тогда
			Проводка2.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		КонецЕсли;
		Если ЗначениеЗаполнено(Проводка.ВидУчетаКт) Тогда
			Проводка2.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР;
		КонецЕсли;		
	КонецЕсли;
	
	Если Учет <> "БУ" И Партия.ВременнаяРазница <> 0 Тогда
		Проводка2 = Проводки.Добавить();
		ЗаполнитьЗначенияСвойств(Проводка2, Проводка);
		Проводка2.Сумма = Партия.ВременнаяРазница;
		Если ЗначениеЗаполнено(Проводка.КоличествоДт) Тогда
			Проводка2.КоличествоДт = 0;
		КонецЕсли;
		Если ЗначениеЗаполнено(Проводка.КоличествоКт) Тогда
			Проводка2.КоличествоКт = 0;
		КонецЕсли;
		Если ЗначениеЗаполнено(Проводка.ВидУчетаДт) Тогда
			Проводка2.ВидУчетаДт = ?(Проводка.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ПР, Перечисления.ВидыУчетаПоПБУ18.ПР, Перечисления.ВидыУчетаПоПБУ18.ВР);
		КонецЕсли;
		Если ЗначениеЗаполнено(Проводка.ВидУчетаКт) Тогда
			Проводка2.ВидУчетаКт = ?(Проводка.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ПР, Перечисления.ВидыУчетаПоПБУ18.ПР, Перечисления.ВидыУчетаПоПБУ18.ВР);
		КонецЕсли;
	КонецЕсли;
	
	
	
КонецПроцедуры

//АБС+ Тупиков 15133
Функция ПолучитьПериодНДСПоДатеКвартал(ДатаПериода) Экспорт
	
	НомерГода = СтрЗаменить(СтрЗаменить(СокрЛП(Год(ДатаПериода)), " ",""), Символы.НПП, "");
	Квартал = НачалоКвартала(ДатаПериода);
    НомерМесяца = Месяц(Квартал);

	Если НомерМесяца = 1 Тогда
		НомерКвартала = 1;
	ИначеЕсли НомерМесяца = 4 Тогда
		НомерКвартала = 2;
	ИначеЕсли НомерМесяца = 7 Тогда
		НомерКвартала = 3;
	ИначеЕсли НомерМесяца = 10 Тогда
		НомерКвартала = 4;
	КонецЕсли;
	
	КодПоиска = СокрЛП(НомерГода) + СокрЛП(НомерКвартала);
	ПериодОтражения = Справочники.ас_ПериодыОтражения.НайтиПоКоду(КодПоиска,,глЗначениеПеременной("абс_ВыбиратьПериодОтраженияДляНДС"));
	
	Возврат ПериодОтражения;
	
КонецФункции
 //АБС- Тупиков 

 
 // {{ТТК Сладков А. Заявка №7737700 06.07.2016 начало
Функция ПолучитьСтатьюИзменениеСтоимостиРаботУслуг()
	
	 // По заявке от Мольковой меняет статью прочих доходов и расходов 
	 // в проводках меняем, если вид операции корректировка  по согласованию сторон и корректировка 
	 // в сторону уменьшения 	 
	 
	
	 Запрос=новый Запрос;
	 
	 Запрос.Текст =
	 "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	 |	ttk_СтатьяИзменениеСтоимостиРаботУслуг.Значение
	 |ИЗ
	 |	Константа.ttk_СтатьяИзменениеСтоимостиРаботУслуг КАК ttk_СтатьяИзменениеСтоимостиРаботУслуг";
	 
	 Выборка = Запрос.Выполнить().Выбрать();
	 
	 Пока Выборка.Следующий() Цикл
		 
		 Если ЗначениеЗаполнено(Выборка.Значение) Тогда
			 
		 	Возврат Выборка.Значение;
			
		Иначе
			
		    Возврат Неопределено;

		КонецЕсли;
			
		 
	 КонецЦикла;
	 
	 
	 Возврат Неопределено;
	 
	
КонецФункции
 // {{ТТК Сладков А. Заявка №7737700 06.07.2016 конец


 	
 