&НаКлиенте
Перем ТекущийКлюч;

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокДоступныхСтатусов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьВидимость();
	ДанныеОСВПриАктивизацииСтрокиОбработчик();
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ЗаполнитьСписокДоступныхСтатусов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	УстановитьВидимость();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫЫ

&НаКлиенте
Процедура ДанныеОСВПриАктивизацииСтроки(Элемент)
	
	ПодключитьОбработчикОжидания("ДанныеОСВПриАктивизацииСтрокиОбработчик", 0.2, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРегистраСуммаРегистрПриИзменении(Элемент)
	
	ПересчитатьСуммуПоДоговору();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРегистраПослеУдаления(Элемент)
	
	ПересчитатьСуммуПоДоговору();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРегистраПередУдалением(Элемент, Отказ)
	
	ЗаполнитьТекущиКлюч();

КонецПроцедуры

&НаКлиенте
Процедура ДанныеРегистраПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа)
	
	ЗаполнитьТекущиКлюч();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРегистраПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	Если НоваяСтрока Тогда
		ТекущиеДанныеРегистра = Элементы.ДанныеРегистра.ТекущиеДанные;
		Если ТекущиеДанныеРегистра <> Неопределено Тогда 
			ТекущиеДанныеРегистра.Ключ = ТекущийКлюч;	
		КонецЕсли;
	КонецЕсли;
			
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРегистраПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ПересчитатьСуммуПоДоговору();
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеРегистраОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	СтрокаТаблицы = Элементы.ДанныеРегистра.ТекущиеДанные;
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Структура") Тогда
		ЗаполнитьЗначенияСвойств(СтрокаТаблицы, ВыбранноеЗначение);;
		Модифицированность = Истина;
	КонецЕсли;

КонецПроцедуры

 &НаКлиенте
Процедура ДанныеРегистраВалютнаяСуммаРегистрПриИзменении(Элемент)
	
	ПересчитатьСуммуПоДоговору();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗаполнитьНаСервере();
	ДанныеОСВПриАктивизацииСтрокиОбработчик();
	//УстановитьВидимость();
	//Элементы.ДанныеОСВ.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура РаспределитьАвтоматическиПоДоговору(Команда)

	ЗаполнитьТекущиКлюч();	
	РаспределитьАвтоматическиПоДоговоруНаСервере(ТекущийКлюч);
	//ПересчитатьСуммуПоДоговору();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеРегистра(Команда)
	
	ЗаполнитьДанныеРегистраНаСервере();
	ДанныеОСВПриАктивизацииСтрокиОбработчик();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодобратьДокумент(Команда)
		
	ТекущиеДанныеРегистра = Элементы.ДанныеРегистра.ТекущиеДанные;
	Если ТекущиеДанныеРегистра = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Объект.ДанныеОСВ.НайтиСтроки(Новый Структура("Ключ", ТекущиеДанныеРегистра.Ключ));
	Если МассивСтрок.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметры = Новый Структура;
	СтруктураПараметры.Вставить("Организация", Объект.Организация);
	СтруктураПараметры.Вставить("Контрагент", МассивСтрок[0].Субконто1);
	СтруктураПараметры.Вставить("Договор", МассивСтрок[0].Субконто2);
	СтруктураПараметры.Вставить("Счет", МассивСтрок[0].Счет);
	СтруктураПараметры.Вставить("РедактируемыйДокумент", ТекущиеДанныеРегистра.Документ);

	ОткрытьФормуМодально("Документ.абс_ПриведениеРегистровКОСВ.Форма.ВыборДокументаРасчетов", СтруктураПараметры, Элементы.ДанныеРегистра);

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ КЛИЕНТСКИЕ ПРОЦЕДУРЫ И ФУНКЦИ

&НаКлиенте
Процедура ДанныеОСВПриАктивизацииСтрокиОбработчик()
	
	ТекущиеДанныеОСВ = Элементы.ДанныеОСВ.ТекущиеДанные;
	Если ТекущиеДанныеОСВ = Неопределено Тогда 
		КлючОтбора = Новый УникальныйИдентификатор();
	Иначе
		КлючОтбора = ТекущиеДанныеОСВ.Ключ;	
	КонецЕсли;
	Элементы.ДанныеРегистра.ОтборСтрок = Новый ФиксированнаяСтруктура("Ключ", КлючОтбора);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимость()
	
	Элементы.ДанныеОСВ.ОтборСтрок = Новый ФиксированнаяСтруктура("Сторнировать", Ложь);
	
	Если Объект.ВидЗаполнения = 2 Тогда 
		Элементы.ФормаЗаполнитьДанныеРегистра.Видимость = Ложь;
	Иначе
		Элементы.ФормаЗаполнитьДанныеРегистра.Видимость = Истина;	
	КонецЕсли;
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПриведениеРегистровКОСВ.ОжидаетФормированиеДвижений")
		ИЛИ Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПриведениеРегистровКОСВ.КорректировкаВыполнена") Тогда
		РедактирвоаниеЗапрещено = Истина;
	Иначе
		РедактирвоаниеЗапрещено = Ложь;	
	КонецЕсли;
	
	Для Каждого элемент Из Элементы Цикл 	
		Если НЕ (элемент.Имя = "Статус"
			ИЛИ ТипЗнч(элемент) = тип("ДекорацияФормы") 	
			ИЛИ ТипЗнч(элемент) = тип("КнопкаКоманднойПанели") 
			ИЛИ ТипЗнч(элемент) = тип("КнопкаФормы")
			ИЛИ ТипЗнч(элемент) = тип("ГруппаФормы")
			ИЛИ ТипЗнч(элемент) = тип("УправляемаяФорма")) Тогда
// +++ввв 21.04.2016 г.
				Попытка
				элемент.ТолькоПросмотр = РедактирвоаниеЗапрещено;
				Исключение
				КонецПопытки;
// ---ввв 21.04.2016 г.
		КонецЕсли;	
	КонецЦикла;
	
	Элементы.ДанныеРегистра.КоманднаяПанель.Доступность = НЕ РедактирвоаниеЗапрещено;
	Элементы.ГруппаКнопокОсновная.Доступность = НЕ РедактирвоаниеЗапрещено;
	Элементы.ДанныеОСВ.ТолькоПросмотр = Истина;
		
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьСуммуПоДоговору()
	
	ТекущиеДанныеРегистра = Элементы.ДанныеРегистра.ТекущиеДанные;
	Если ТекущиеДанныеРегистра = Неопределено Тогда 
		Ключ = ТекущийКлюч;
	Иначе
		Ключ = ТекущиеДанныеРегистра.Ключ;	
	КонецЕсли;
	
	Сумма = 0;
	ВалютнаяСумма = 0;
	МассивСтрок = Объект.ДанныеРегистра.НайтиСтроки(Новый Структура("Ключ", Ключ));
	Для Каждого строка из МассивСтрок Цикл 
		Сумма = Сумма + строка.СуммаРегистр;
		ВалютнаяСумма = ВалютнаяСумма + строка.ВалютнаяСуммаРегистр;
	КонецЦикла;
	
	МассивСтрок = Объект.ДанныеОСВ.НайтиСтроки(Новый Структура("Ключ", Ключ));
	Для Каждого строка из МассивСтрок Цикл 
		строка.СуммаРегистр = Сумма;
		строка.ВалютнаяСуммаРегистр = ВалютнаяСумма;
		строка.СуммаРасхождение = строка.СуммаОСВ - строка.СуммаРегистр;
		строка.ВалютнаяСуммаРасхождение = строка.ВалютнаяСуммаОСВ - строка.ВалютнаяСуммаРегистр;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТекущиКлюч()
	
	ТекущиеДанныеРегистра = Элементы.ДанныеОСВ.ТекущиеДанные;
	Если ТекущиеДанныеРегистра = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	ТекущийКлюч = ТекущиеДанныеРегистра.Ключ;
	
КонецПроцедуры

&НаКлиенте
Процедура ВидЗаполненияПриИзменении(Элемент)
	
	УстановитьВидимость();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИ

&НаСервере
Процедура ЗаполнитьНаСервере()
		
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьДокумент();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
			
КонецПроцедуры

&НаСервере
Процедура РаспределитьАвтоматическиПоДоговоруНаСервере(Ключ)

	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьДанныеРегистра_Взаиморасчеты(Ключ);
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеРегистраНаСервере()
		
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьДанныеРегистра();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
			
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДоступныхСтатусов()
	
	Статус = Объект.Статус;
	Статусы = Перечисления.абс_СтатусыПриведениеРегистровКОСВ;
	
	МассивСтатусов = Новый Массив;
	МассивСтатусов.Добавить(Статус);
	
	Если НЕ Параметры.Ключ.Пустая() Тогда	
		
		Если Статус = Статусы.Подготовка Тогда
			МассивСтатусов.Добавить(Статусы.ОжидаетФормированиеДвижений);
		КонецЕсли;
		
		Если Статус = Статусы.Отказ Тогда
			МассивСтатусов.Добавить(Статусы.Подготовка);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Статус) Тогда
			МассивСтатусов.Добавить(Статусы.Подготовка);
		КонецЕсли;
		
		Если Статус <> Статусы.Отказ Тогда
			МассивСтатусов.Добавить(Статусы.Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
	Элементы.Статус.СписокВыбора.ЗагрузитьЗначения(МассивСтатусов);
	
КонецПроцедуры

