
////////////////////////////////////////////////////////////////////////////////
// Программный Интерфейс

Функция ПолучитьДеревоРассхождений_Взаиморасчеты(Организация, ПериодОстатков, МассивСчетов, ЗнакОстатка = 1) Экспорт
	
	Если МассивСчетов.КОличество() > 0 Тогда 	
		РасчетыСПотсавщиками = Ложь;
		ЭтоСчетАвансов = ПолучитьМассивСчетов(Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыПолученные).Найти(МассивСчетов[0]) <> Неопределено;		
		Если ПолучитьМассивСчетов(Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыВыданные).Найти(МассивСчетов[0]) <> Неопределено Тогда 
			РасчетыСПотсавщиками = Истина;
		ИначеЕсли ПолучитьМассивСчетов(Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.РасчетыСПоставщиками).Найти(МассивСчетов[0]) <> Неопределено Тогда 
			РасчетыСПотсавщиками = Истина;
		КонецЕсли;
	КонецЕсли;
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СчетОплаты КАК Счет,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Контрагент,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДоговорКонтрагента КАК Договор,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Сделка,
	                      |	СУММА(РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка) КАК ВалютнаяСуммаРегистр,
	                      |	СУММА(РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка) КАК СуммаРегистр,
	                      |	ВЫБОР
	                      |		КОГДА &ЭтоСчетАвансов
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка < 0
	                      |							И РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	                      |						ТОГДА 0
	                      |					ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка
	                      |				КОНЕЦ
	                      |		ИНАЧЕ ВЫБОР
	                      |				КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка < 0
	                      |					ТОГДА 0
	                      |				ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка
	                      |			КОНЕЦ
	                      |	КОНЕЦ КАК СуммаРегистр_положительные,
	                      |	ВЫБОР
	                      |		КОГДА &ЭтоСчетАвансов
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка < 0
	                      |							ИЛИ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	                      |						ТОГДА 0
	                      |					ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка
	                      |				КОНЕЦ
	                      |		ИНАЧЕ ВЫБОР
	                      |				КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка < 0
	                      |					ТОГДА 0
	                      |				ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка
	                      |			КОНЕЦ
	                      |	КОНЕЦ КАК ВалютнаяСуммаРегистр_положительные,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДатаОплаты
	                      |ПОМЕСТИТЬ Регистр
	                      |ИЗ
	                      |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(
	                      |			&ПериодОстатков,
	                      |			Организация = &Организация
	                      |				И СчетОплаты В ИЕРАРХИИ (&МассивСчетов)) КАК РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Контрагент,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДоговорКонтрагента,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СчетОплаты,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Сделка,
	                      |	ВЫБОР
	                      |		КОГДА &ЭтоСчетАвансов
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка < 0
	                      |							И РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	                      |						ТОГДА 0
	                      |					ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка
	                      |				КОНЕЦ
	                      |		ИНАЧЕ ВЫБОР
	                      |				КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка < 0
	                      |					ТОГДА 0
	                      |				ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка
	                      |			КОНЕЦ
	                      |	КОНЕЦ,
	                      |	ВЫБОР
	                      |		КОГДА &ЭтоСчетАвансов
	                      |			ТОГДА ВЫБОР
	                      |					КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка < 0
	                      |							ИЛИ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	                      |						ТОГДА 0
	                      |					ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка
	                      |				КОНЕЦ
	                      |		ИНАЧЕ ВЫБОР
	                      |				КОГДА РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка < 0
	                      |					ТОГДА 0
	                      |				ИНАЧЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка
	                      |			КОНЕЦ
	                      |	КОНЕЦ,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДатаОплаты
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ХозрасчетныйОстатки.Счет,
	                      |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	                      |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	                      |	СУММА(ВЫБОР
	                      |			КОГДА ХозрасчетныйОстатки.Счет.Валютный
	                      |				ТОГДА -ХозрасчетныйОстатки.ВалютнаяСуммаОстаток
	                      |			ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстаток
	                      |		КОНЕЦ * &ЗнакОстаткаОСВ) КАК ВалютнаяСуммаОСВ,
	                      |	СУММА(-ХозрасчетныйОстатки.СуммаОстаток * &ЗнакОстаткаОСВ) КАК СуммаОСВ
	                      |ПОМЕСТИТЬ ОСВ
	                      |ИЗ
	                      |	РегистрБухгалтерии.Хозрасчетный.Остатки(&ПериодОстатков, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов),
	                      |	ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.Контрагенты),
	                      |	ХозрасчетныйОстатки.Счет
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЕСТЬNULL(ОСВ.Счет, Регистр.Счет) КАК Счет,
	                      |	ЕСТЬNULL(ОСВ.Контрагент, Регистр.Контрагент) КАК Контрагент,
	                      |	ЕСТЬNULL(ОСВ.Договор, Регистр.Договор) КАК Договор,
	                      |	МАКСИМУМ(ЕСТЬNULL(ОСВ.ВалютнаяСуммаОСВ, 0)) КАК ВалютнаяСуммаОСВ,
	                      |	МАКСИМУМ(ЕСТЬNULL(ОСВ.СуммаОСВ, 0)) КАК СуммаОСВ,
	                      |	СУММА(ЕСТЬNULL(Регистр.ВалютнаяСуммаРегистр, 0)) КАК ВалютнаяСуммаРегистр,
	                      |	СУММА(ЕСТЬNULL(Регистр.СуммаРегистр, 0)) КАК СуммаРегистр,
	                      |	СУММА(ЕСТЬNULL(Регистр.СуммаРегистр_положительные, 0)) КАК СуммаРегистр_положительные,
	                      |	СУММА(ЕСТЬNULL(Регистр.ВалютнаяСуммаРегистр_положительные, 0)) КАК ВалютнаяСуммаРегистр_положительные
	                      |ПОМЕСТИТЬ Группировка
	                      |ИЗ
	                      |	Регистр КАК Регистр
	                      |		ПОЛНОЕ СОЕДИНЕНИЕ ОСВ КАК ОСВ
	                      |		ПО Регистр.Контрагент = ОСВ.Контрагент
	                      |			И Регистр.Счет = ОСВ.Счет
	                      |			И Регистр.Договор = ОСВ.Договор
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ЕСТЬNULL(ОСВ.Счет, Регистр.Счет),
	                      |	ЕСТЬNULL(ОСВ.Контрагент, Регистр.Контрагент),
	                      |	ЕСТЬNULL(ОСВ.Договор, Регистр.Договор)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Группировка.Счет,
	                      |	Группировка.Контрагент,
	                      |	Группировка.Договор,
	                      |	Группировка.ВалютнаяСуммаОСВ,
	                      |	Группировка.СуммаОСВ,
	                      |	Группировка.ВалютнаяСуммаРегистр,
	                      |	Группировка.СуммаРегистр
	                      |ПОМЕСТИТЬ Сравнение
	                      |ИЗ
	                      |	Группировка КАК Группировка
	                      |ГДЕ
	                      |	(Группировка.ВалютнаяСуммаОСВ - Группировка.ВалютнаяСуммаРегистр <> 0
	                      |			ИЛИ Группировка.СуммаОСВ - Группировка.СуммаРегистр <> 0
	                      |			ИЛИ Группировка.СуммаОСВ - Группировка.СуммаРегистр_положительные <> 0
	                      |			ИЛИ Группировка.ВалютнаяСуммаОСВ - Группировка.ВалютнаяСуммаРегистр_положительные <> 0)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	Сравнение.Счет КАК Счет,
	                      |	Сравнение.Контрагент КАК Контрагент,
	                      |	Сравнение.Договор КАК ДоговорКонтрагента,
	                      |	Сравнение.ВалютнаяСуммаОСВ КАК ВалютнаяСуммаОСВ,
	                      |	Сравнение.СуммаОСВ КАК СуммаОСВ,
	                      |	ЕСТЬNULL(Регистр.ВалютнаяСуммаРегистр, 0) КАК ВалютнаяСуммаРегистр,
	                      |	ЕСТЬNULL(Регистр.СуммаРегистр, 0) КАК СуммаРегистр,
	                      |	Регистр.Документ,
	                      |	Регистр.Сделка,
	                      |	Сравнение.Договор.ВестиПоДокументамРасчетовСКонтрагентом КАК ВестиПоДокументам
	                      |ИЗ
	                      |	Сравнение КАК Сравнение
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Регистр КАК Регистр
	                      |		ПО Сравнение.Счет = Регистр.Счет
	                      |			И Сравнение.Контрагент = Регистр.Контрагент
	                      |			И Сравнение.Договор = Регистр.Договор
	                      |ИТОГИ
	                      |	МАКСИМУМ(ВалютнаяСуммаОСВ),
	                      |	МАКСИМУМ(СуммаОСВ),
	                      |	СУММА(ВалютнаяСуммаРегистр),
	                      |	СУММА(СуммаРегистр),
	                      |	МАКСИМУМ(ВестиПоДокументам)
	                      |ПО
	                      |	Счет,
	                      |	Контрагент,
	                      |	ДоговорКонтрагента");
						  
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("ПериодОстатков", Новый Граница(ПериодОстатков));
	Запрос.УстановитьПараметр("МассивСчетов", 	МассивСчетов);
	Запрос.УстановитьПараметр("ЗнакОстатка", 	ЗнакОстатка);
	Запрос.УстановитьПараметр("ЗнакОстаткаОСВ", ЗнакОстатка);
	Запрос.УстановитьПараметр("ЭтоСчетАвансов", ЭтоСчетАвансов);
	
	Если РасчетыСПотсавщиками Тогда
		Запрос.УстановитьПараметр("ЗнакОстаткаОСВ", -ЗнакОстатка);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации", "РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации");  
	КонецЕсли;	
		
	Возврат Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
КонецФункции

Функция ПолучитьТаблицуКорректировочногоРаспределения_Взаиморасчеты(Организация, ПериодОстатков, Счет, Контрагент, Договор, СуммаОСВ, ВалютнаяСуммаОСВ, ЗнакОстатка = 1, ДокументОснование = Неопределено) Экспорт
	
	ТаблицаРаспределния = Неопределено;
	ЭтоСчетАвансов = ПолучитьМассивСчетов(Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыПолученные).Найти(Счет) <> Неопределено;
	
	Если ЭтоСчетАвансов Тогда 
		ТаблицаРаспределния = Взаиморасчеты_РаспределитьПо76АВ(Организация, ПериодОстатков, Счет, Контрагент, Договор, СуммаОСВ, ВалютнаяСуммаОСВ);	
	КонецЕсли;
	
	Если ЭтоСчетАвансов И ТаблицаРаспределния = Неопределено Тогда 
		ТаблицаРаспределния = Взаиморасчеты_РаспределитьПоНДСсАвансов(Организация, ПериодОстатков, Счет, Контрагент, Договор, СуммаОСВ, ВалютнаяСуммаОСВ);	
	КонецЕсли;
	
	Если ТаблицаРаспределния = Неопределено Тогда 
		ТаблицаРаспределния = Взаиморасчеты_РаспределитьПоРегистру(Организация, ПериодОстатков, Счет, Контрагент, Договор, СуммаОСВ, ВалютнаяСуммаОСВ, ЗнакОстатка, ДокументОснование, Истина);
	КонецЕсли;
	
	Возврат ТаблицаРаспределния;
	
КонецФункции

Процедура СформироватьДвиженияКорректировки() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	|	абс_ПриведениеРегистровКОСВ.Ссылка,
	|	абс_ПриведениеРегистровКОСВ.Операция,
	|	абс_ПриведениеРегистровКОСВ.ДокументДвижений,
	|	абс_ПриведениеРегистровКОСВ.Дата
	|ИЗ
	|	Документ.абс_ПриведениеРегистровКОСВ КАК абс_ПриведениеРегистровКОСВ
	|ГДЕ
	|	абс_ПриведениеРегистровКОСВ.Статус = &Статус");
	
	Запрос.УстановитьПараметр("Статус", Перечисления.абс_СтатусыПриведениеРегистровКОСВ.ОжидаетФормированиеДвижений);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		
		Если НЕ ЗначениеЗаполнено(Выборка.ДокументДвижений) Тогда 
			ДокументДвиженийОбъект = Документы.КорректировкаЗаписейРегистров.СоздатьДокумент();
		Иначе
			ДокументДвиженийОбъект = Выборка.ДокументДвижений.ПолучитьОбъект(); 	
		КонецЕсли;
		
		ДокументДвиженийОбъект.абс_Заблокирована = Истина;
		//ДокументДвиженийОбъект.абс_Заблокирована = Ложь;
		ДокументДвиженийОбъект.ПометкаУдаления = Ложь;
		ДокументДвиженийОбъект.Дата = Выборка.Дата;
		ДокументДвиженийОбъект.Записать(РежимЗаписиДокумента.Запись);
		
		Если НЕ ЗначениеЗаполнено(Выборка.ДокументДвижений) Тогда 
			ДокументОбъект.ДокументДвижений = ДокументДвиженийОбъект.Ссылка;
			ДокументОбъект.Записать();
		КонецЕсли;
		
		абс_ПроведениеДокументов.УдалитьДвиженияРегистратора(ДокументДвиженийОбъект.Ссылка);
		
		СкорректироватьРегистрыВзаиморасчеты(Выборка.Ссылка, ДокументДвиженийОбъект.Ссылка, Выборка.Дата, ПолучитьЗнакОстатка(Выборка.Операция));	
		
		Если Выборка.Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыПолученные Тогда 
			СкорректироватьРегистрыНДСсАвансов(Выборка.Ссылка, ДокументДвиженийОбъект.Ссылка, Выборка.Дата, ПолучитьЗнакОстатка(Выборка.Операция));				
		КонецЕсли;
		
		абс_Филиализация.ЗаполнитьТаблицыРегистровДокументаДвижений(ДокументДвиженийОбъект.Ссылка);	
		
		ДокументОбъект.Статус = Перечисления.абс_СтатусыПриведениеРегистровКОСВ.КорректировкаВыполнена;
		ДокументОбъект.Записать();
		
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Распределние суммы ОСВ

Функция Взаиморасчеты_РаспределитьПоРегистру(Организация, ПериодОстатков, Счет, Контрагент, Договор, СуммаОСВ, ВалютнаяСуммаОСВ, ЗнакОстатка = 1, ДокументОснование = Неопределено, ПоНДСсАвансов = Неопределено)
	
	ВалютнаяСуммаРегистр = 0;
	СуммаРегистр = 0;
	ЭтоСчетАвансов = ПолучитьМассивСчетов(Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыПолученные).Найти(Счет) <> Неопределено И ПоНДСсАвансов;	
	
	РасчетыСПотсавщиками = Ложь;
	Если ПолучитьМассивСчетов(Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыВыданные).Найти(Счет) <> Неопределено Тогда 
		РасчетыСПотсавщиками = Истина;
	ИначеЕсли ПолучитьМассивСчетов(Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.РасчетыСПоставщиками).Найти(Счет) <> Неопределено Тогда 
		РасчетыСПотсавщиками = Истина;
	КонецЕсли;

	
	Запрос = Новый Запрос;	
	Запрос.УстановитьПараметр("Договор", Договор);
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодОстатков", Новый Граница(ПериодОстатков));
	Запрос.УстановитьПараметр("ЗнакОстатка", ЗнакОстатка);
	Запрос.УстановитьПараметр("Счет", Счет);
	Запрос.УстановитьПараметр("ЭтоСчетАвансов", ЭтоСчетАвансов);
	
	Если ЭтоСчетАвансов Тогда 
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НДСсАвансовОстатки.Организация,
		|	НДСсАвансовОстатки.СчетФактура КАК Документ,
		|	НДСсАвансовОстатки.Покупатель КАК Контрагент,
		|	НДСсАвансовОстатки.ДоговорКонтрагента КАК Договор,
		|	НДСсАвансовОстатки.СуммаБезНДСОстаток + НДСсАвансовОстатки.НДСОстаток КАК СуммаРегистр,
		|	НДСсАвансовОстатки.ВалютнаяСуммаСНДСОстаток КАК ВалютнаяСуммаРегистр
		|ИЗ
		|	РегистрНакопления.НДСсАвансов.Остатки(
		|			&ПериодОстатков,
		|			Организация = &Организация
		|				И Покупатель = &Контрагент
		|				И ДоговорКонтрагента = &Договор) КАК НДСсАвансовОстатки
		|ГДЕ
		|	НДСсАвансовОстатки.СуммаБезНДСОстаток + НДСсАвансовОстатки.НДСОстаток > 0
		|	И НДСсАвансовОстатки.ВалютнаяСуммаСНДСОстаток > 0";
		
	Иначе
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Организация,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Контрагент,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДоговорКонтрагента,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка КАК ВалютнаяСуммаРегистр,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка КАК СуммаРегистр,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Сделка
		               |ИЗ
		               |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(
		               |			&ПериодОстатков,
		               |			ДоговорКонтрагента = &Договор
		               |				И Контрагент = &Контрагент
		               |				И Организация = &Организация
		               |				И СчетОплаты = &Счет) КАК РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки
		               |ГДЕ
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток * &ЗнакОстатка > 0
		               |	И РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток * &ЗнакОстатка > 0
		               |	И ВЫБОР
		               |			КОГДА &ЭтоСчетАвансов
		               |				ТОГДА НЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
		               |			ИНАЧЕ ИСТИНА
		               |		КОНЕЦ";
		
		Если РасчетыСПотсавщиками Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации", "РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации");  
		КонецЕсли;						   
	КонецЕсли;
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	Если ЭтоСчетАвансов Тогда 
		ТЗ.Колонки.Добавить("Сделка");
	КонецЕсли;
	ТаблицаРаспределния = ТЗ.СкопироватьКолонки("Документ, СуммаРегистр, ВалютнаяСуммаРегистр, Сделка");
	
	Для Каждого строка из ТЗ Цикл 
		ВалютнаяСуммаРегистр = ВалютнаяСуммаРегистр + строка.ВалютнаяСуммаРегистр;
		СуммаРегистр = СуммаРегистр + строка.СуммаРегистр;
	КонецЦикла;
	
	СуммаРаспределения = 0;
	ВалютнаяСуммаРаспределения = 0;
	
	//Выбираем вариант распределние
	ЭтоУменьшение = Ложь;
	Если СуммаРегистр > СуммаОСВ Тогда 
		ЭтоУменьшение = Истина;
	ИначеЕсли СуммаРегистр = СуммаОСВ И ВалютнаяСуммаРегистр > ВалютнаяСуммаОСВ Тогда 
		ЭтоУменьшение = Истина;
	КонецЕсли;
		
	ЭтоУвеличение = Ложь;
	Если СуммаРегистр < СуммаОСВ Тогда 
		ЭтоУвеличение = Истина;
	ИначеЕсли СуммаРегистр = СуммаОСВ И ВалютнаяСуммаРегистр < ВалютнаяСуммаОСВ Тогда 
		ЭтоУвеличение = Истина;
	КонецЕсли;
	
	//Распределние
	Если ЭтоУменьшение Тогда
		
		СуммаРаспределения = СуммаОСВ;
		ВалютнаяСуммаРаспределения = ВалютнаяСуммаОСВ;
		й = 0;
		
		Пока (ТЗ.Количество() > й) И ((СуммаРаспределения > 0) ИЛИ (ВалютнаяСуммаРаспределения > 0)) Цикл
			строкаОстатков = ТЗ[й];
			строкаРаспределения = ТаблицаРаспределния.Добавить();
			
			ЗаполнитьЗначенияСвойств(строкаРаспределения, строкаОстатков); 
			
			строкаРаспределения.СуммаРегистр = Мин(СуммаРаспределения, строкаОстатков.СуммаРегистр);
			строкаРаспределения.ВалютнаяСуммаРегистр = Мин(ВалютнаяСуммаРаспределения, строкаОстатков.ВалютнаяСуммаРегистр);
			
			СуммаРаспределения = Макс(0, СуммаРаспределения - строкаРаспределения.СуммаРегистр);
			ВалютнаяСуммаРаспределения = Макс(0, ВалютнаяСуммаРаспределения - строкаРаспределения.ВалютнаяСуммаРегистр);
			й = й + 1;
		КонецЦикла;
		
	ИначеЕсли ЭтоУвеличение Тогда
		
		Для Каждого строкаОстатков из ТЗ Цикл 
			ЗаполнитьЗначенияСвойств(ТаблицаРаспределния.Добавить(), строкаОстатков);	
		КонецЦикла;
		
		СуммаРаспределения = СуммаОСВ - СуммаРегистр;
		ВалютнаяСуммаРаспределения = ВалютнаяСуммаОСВ - ВалютнаяСуммаРегистр;
		
		Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Организация,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Контрагент,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.ДоговорКонтрагента,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Документ,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Сделка,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Регистратор,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.СуммаВзаиморасчетовОборот * &ЗнакОстатка КАК ВалютнаяСуммаРегистр,
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.СуммаРегОборот * &ЗнакОстатка КАК СуммаРегистр
		               |ИЗ
		               |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Обороты(
		               |			,
		               |			&ПериодОстатков,
		               |			Регистратор,
		               |			ДоговорКонтрагента = &Договор
		               |				И Контрагент = &Контрагент
		               |				И Организация = &Организация
		               |				И СчетОплаты = &Счет) КАК РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты
		               |ГДЕ
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.СуммаРегОборот * &ЗнакОстатка > 0
		               |	И НЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Документ В (&МассивДокументов)
		               |	И РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.СуммаВзаиморасчетовОборот * &ЗнакОстатка > 0
		               |	И ВЫБОР
		               |			КОГДА &ЭтоСчетАвансов
		               |				ТОГДА НЕ РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
		               |			ИНАЧЕ ИСТИНА
		               |		КОНЕЦ
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Период";
		
		Если РасчетыСПотсавщиками Тогда 
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации", "РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации");  
		КонецЕсли;						   
		
		Запрос.УстановитьПараметр("МассивДокументов", ТЗ.ВыгрузитьКолонку("Документ"));			   
		ТЗ_Обороты = Запрос.Выполнить().Выгрузить();					   
		й = 0;
		
		Пока (ТЗ_Обороты.Количество() > й) И ((СуммаРаспределения > 0) ИЛИ (ВалютнаяСуммаРаспределения > 0)) Цикл
			строкаОстатков = ТЗ_Обороты[й];
			й = й + 1;
			
			Если НЕ ЗначениеЗаполнено(строкаОстатков.Документ) Тогда
				Продолжить;
			КонецЕсли;
			
			строкаРаспределения = ТаблицаРаспределния.Добавить();
			
			ЗаполнитьЗначенияСвойств(строкаРаспределения, строкаОстатков); 
			
			строкаРаспределения.СуммаРегистр = Мин(СуммаРаспределения, строкаОстатков.СуммаРегистр);
			строкаРаспределения.ВалютнаяСуммаРегистр = Мин(ВалютнаяСуммаРаспределения, строкаОстатков.ВалютнаяСуммаРегистр);
			
			СуммаРаспределения = Макс(0, СуммаРаспределения - строкаРаспределения.СуммаРегистр);
			ВалютнаяСуммаРаспределения = Макс(0, ВалютнаяСуммаРаспределения - строкаРаспределения.ВалютнаяСуммаРегистр);
		КонецЦикла;
		
	ИначеЕсли СуммаРегистр = СуммаОСВ Тогда	
		
		Для Каждого строкаОстатков из ТЗ Цикл 
			ЗаполнитьЗначенияСвойств(ТаблицаРаспределния.Добавить(), строкаОстатков);	
		КонецЦикла;
		
	КонецЕсли;
		
	Если (СуммаРаспределения <> 0) ИЛИ (ВалютнаяСуммаРаспределения  <> 0) Тогда 
		ДокументРасчетовОбъект = ПолучитьДокументРасчетов(Организация, Контрагент, Договор, ДокументОснование);
		ДокументРасчетовОбъект.СуммаДокумента = СуммаРаспределения;
		ДокументРасчетовОбъект.Дата = ПериодОстатков;
		ДокументРасчетовОбъект.УстановитьНовыйНомер();
		ДокументРасчетовОбъект.ОбменДанными.Загрузка = Истина;
		ДокументРасчетовОбъект.Записать();
		строкаРаспределения = ТаблицаРаспределния.Добавить();
		строкаРаспределения.Документ = ДокументРасчетовОбъект.Ссылка;
		строкаРаспределения.СуммаРегистр = СуммаРаспределения;
		строкаРаспределения.ВалютнаяСуммаРегистр = ВалютнаяСуммаРаспределения;
	КонецЕсли;
	
	Если ЭтоСчетАвансов Тогда 
		ЗаполнитьСделки(ТаблицаРаспределния, Организация, Контрагент, Договор, Счет);		
	КонецЕсли;
	
	Возврат ТаблицаРаспределния;
	
КонецФункции

Функция Взаиморасчеты_РаспределитьПо76АВ(Организация, ПериодОстатков, Счет, Контрагент, Договор, СуммаОСВ, ВалютнаяСуммаОСВ)
	
	Сумма_76АВ = 0;
	ПересчетВалютнойСуммы = Ложь;
	
	Если Счет.Валютный И Договор.ВалютаВзаиморасчетов <> глЗначениеПеременной("ВалютаРегламентированногоУчета") Тогда 
		ПересчетВалютнойСуммы = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Субконто1 КАК Контрагент,
	|	ХозрасчетныйОстатки.Субконто2 КАК Документ,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаНДС,
	|	ХозрасчетныйОстатки.Организация,
	|	&ДоговорКОнтрагента КАК ДоговорКонтрагента,
	|	0 КАК СуммаРегистр,
	|	0 КАК ВалютнаяСуммаРегистр
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ПериодОстатков,
	|			Счет = &Счет_76АВ,
	|			,
	|			Организация = &Организация
	|				И Субконто1 = &Контрагент) КАК ХозрасчетныйОстатки");
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Договор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодОстатков", Новый Граница(ПериодОстатков));
	Запрос.УстановитьПараметр("Счет_76АВ", ПланыСчетов.Хозрасчетный.НДСпоАвансамИПредоплатам);
	Запрос.УстановитьПараметр("Счет", Счет);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	ТЗ.Колонки.Добавить("Сделка");
	
	Если ТЗ.Количество() = 0 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	//расчитаем сумму аванса по данным 76.АВ
	Для Каждого строка из ТЗ Цикл 
		Сумма_76АВ = Сумма_76АВ + строка.СуммаНДС;
		строка.СуммаРегистр = Окр((строка.СуммаНДС / 18) * 118, 2);
		Если НЕ ПересчетВалютнойСуммы Тогда 
			строка.ВалютнаяСуммаРегистр = строка.СуммаРегистр;
		Иначе
			Курс = МодульВалютногоУчета.ПолучитьКурсВалюты(Договор.ВалютаВзаиморасчетов, строка.Документ.Дата);  
			строка.ВалютнаяСуммаРегистр = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(строка.ВалютнаяСуммаРегистр, 
			глЗначениеПеременной("ВалютаРегламентированногоУчета"), Договор.ВалютаВзаиморасчетов,
			1, Курс.Курс, 
			1, Курс.Кратность);	
		КонецЕсли;
	КонецЦикла;
	
	//Проверим, сходится ли сумма 76.АВ и 62.02 (если не сходится - остатки по нескольким договорам)
	Дельта = ТЗ.Итог("СуммаРегистр") - СуммаОСВ;
	Дельта = ?(Дельта < 0, -Дельта, Дельта);
	
	Если Дельта > 1 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	//уберем остатки от округления
	ТЗ[ТЗ.Количество()-1].СуммаРегистр = ТЗ[ТЗ.Количество()-1].СуммаРегистр - (ТЗ.Итог("СуммаРегистр") - СуммаОСВ);
	ТЗ[ТЗ.Количество()-1].ВалютнаяСуммаРегистр = ТЗ[ТЗ.Количество()-1].ВалютнаяСуммаРегистр - (ТЗ.Итог("ВалютнаяСуммаРегистр") - ВалютнаяСуммаОСВ);
	
	//получим сделки	
	ЗаполнитьСделки(ТЗ, Организация, Контрагент, Договор, Счет);
	
	Возврат ТЗ; 
	
КонецФункции

Функция Взаиморасчеты_РаспределитьПоНДСсАвансов(Организация, ПериодОстатков, Счет, Контрагент, Договор, СуммаОСВ, ВалютнаяСуммаОСВ)
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	НДСсАвансовОстатки.Организация,
	                      |	НДСсАвансовОстатки.СчетФактура КАК Документ,
	                      |	НДСсАвансовОстатки.Покупатель КАК Контрагент,
	                      |	НДСсАвансовОстатки.ДоговорКонтрагента КАК Договор,
	                      |	НДСсАвансовОстатки.СуммаБезНДСОстаток + НДСсАвансовОстатки.НДСОстаток КАК СуммаРегистр,
	                      |	НДСсАвансовОстатки.ВалютнаяСуммаСНДСОстаток КАК ВалютнаяСуммаРегистр
	                      |ИЗ
	                      |	РегистрНакопления.НДСсАвансов.Остатки(
	                      |			&ПериодОстатков,
	                      |			Организация = &Организация
	                      |				И Покупатель = &Контрагент
	                      |				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК НДСсАвансовОстатки
	                      |ГДЕ
	                      |	НДСсАвансовОстатки.НДСОстаток > 0");
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Договор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ПериодОстатков", Новый Граница(ПериодОстатков));
	Запрос.УстановитьПараметр("Счет", Счет);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	ТЗ.Колонки.Добавить("Сделка");
	
	Если ТЗ.Количество() = 0 Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Дельта = ТЗ.Итог("СуммаРегистр") - СуммаОСВ;
	Дельта = ?(Дельта < 0, -Дельта, Дельта);
	
	ВалютнаяДельта = ТЗ.Итог("ВалютнаяСуммаРегистр") - ВалютнаяСуммаОСВ;
	ВалютнаяДельта = ?(ВалютнаяДельта < 0, -ВалютнаяДельта, ВалютнаяДельта);

	
	Если (Дельта > 1) ИЛИ (ВалютнаяДельта > 1) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	//уберем остатки от округления
	ТЗ[ТЗ.Количество()-1].СуммаРегистр = ТЗ[ТЗ.Количество()-1].СуммаРегистр - (ТЗ.Итог("СуммаРегистр") - СуммаОСВ);
	ТЗ[ТЗ.Количество()-1].ВалютнаяСуммаРегистр = ТЗ[ТЗ.Количество()-1].ВалютнаяСуммаРегистр - (ТЗ.Итог("ВалютнаяСуммаРегистр") - ВалютнаяСуммаОСВ);
	
	//получим сделки	
	ЗаполнитьСделки(ТЗ, Организация, Контрагент, Договор, Счет);
	
	Возврат ТЗ; 
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// Корректировки регистров

Процедура СкорректироватьРегистрыВзаиморасчеты(Ссылка, ДокументДвижений, Период, ЗнакОстатка) Экспорт
	
	РасчетыСПотсавщиками = Ложь;
	
	Если Ссылка.Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыВыданные Тогда 
		РасчетыСПотсавщиками = Истина;
	ИначеЕсли Ссылка.Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.РасчетыСПоставщиками Тогда 
		РасчетыСПотсавщиками = Истина;
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_ПриведениеРегистровКОСВДанныеОСВ.Субконто1 КАК Контрагент,
	                      |	абс_ПриведениеРегистровКОСВДанныеОСВ.Субконто2 КАК Договор,
	                      |	абс_ПриведениеРегистровКОСВДанныеОСВ.Счет,
	                      |	абс_ПриведениеРегистровКОСВДанныеОСВ.Ключ
	                      |ПОМЕСТИТЬ вт_сторнировать
	                      |ИЗ
	                      |	Документ.абс_ПриведениеРегистровКОСВ.ДанныеОСВ КАК абс_ПриведениеРегистровКОСВДанныеОСВ
	                      |ГДЕ
	                      |	абс_ПриведениеРегистровКОСВДанныеОСВ.Ссылка = &Ссылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДоговорКонтрагента,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Сделка,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СчетОплаты,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДатаОплаты,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Организация,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Контрагент,
	                      |	-РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов,
	                      |	-РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток КАК СуммаРег,
	                      |	&Период
	                      |ИЗ
	                      |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(
	                      |			&ПериодОстатков,
	                      |			Организация = &Организация
	                      |				И (Контрагент, ДоговорКонтрагента, СчетОплаты) В
	                      |					(ВЫБРАТЬ
	                      |						т.Контрагент,
	                      |						т.Договор,
	                      |						т.Счет
	                      |					ИЗ
	                      |						вт_сторнировать КАК т)) КАК РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	вт_сторнировать.Контрагент,
	                      |	вт_сторнировать.Договор КАК ДоговорКонтрагента,
	                      |	вт_сторнировать.Счет КАК СчетОплаты,
	                      |	ВЫБОР
	                      |		КОГДА СчетФактураВыданный.Ссылка ЕСТЬ НЕ NULL 
	                      |			ТОГДА СчетФактураВыданный.ДокументОснование
	                      |		ИНАЧЕ абс_ПриведениеРегистровКОСВДанныеРегистра.Документ
	                      |	КОНЕЦ КАК Документ,
	                      |	абс_ПриведениеРегистровКОСВДанныеРегистра.Сделка,
	                      |	абс_ПриведениеРегистровКОСВДанныеРегистра.СуммаРегистр * &ЗнакОстатка КАК СуммаРег,
	                      |	абс_ПриведениеРегистровКОСВДанныеРегистра.ВалютнаяСуммаРегистр * &ЗнакОстатка КАК СуммаВзаиморасчетов,
	                      |	абс_ПриведениеРегистровКОСВДанныеРегистра.Ссылка.Организация,
	                      |	ВЫБОР
	                      |		КОГДА &ЗнакОстатка = 1
	                      |			ТОГДА абс_ПриведениеРегистровКОСВДанныеРегистра.Документ.Дата
	                      |		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	                      |	КОНЕЦ КАК ДатаОплаты,
	                      |	&Период
	                      |ИЗ
	                      |	Документ.абс_ПриведениеРегистровКОСВ.ДанныеРегистра КАК абс_ПриведениеРегистровКОСВДанныеРегистра
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_сторнировать КАК вт_сторнировать
	                      |		ПО абс_ПриведениеРегистровКОСВДанныеРегистра.Ключ = вт_сторнировать.Ключ
	                      |			И (абс_ПриведениеРегистровКОСВДанныеРегистра.Ссылка = &Ссылка)
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный КАК СчетФактураВыданный
	                      |		ПО абс_ПриведениеРегистровКОСВДанныеРегистра.Документ = СчетФактураВыданный.Ссылка");
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПериодОстатков", Новый Граница(Период));
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.УстановитьПараметр("Организация", Ссылка.Организация);
	Запрос.УстановитьПараметр("ЗнакОстатка", ЗнакОстатка);
	
	Если РасчетыСПотсавщиками Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации", "РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации");  
		Набор = РегистрыНакопления.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.СоздатьНаборЗаписей();
	Иначе
		Набор = РегистрыНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.СоздатьНаборЗаписей();
	КонецЕсли;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	//Набор = РегистрыНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.СоздатьНаборЗаписей();
	Набор.Отбор.Регистратор.Установить(ДокументДвижений);
	Набор.Записать();
	
	Для Каждого строка из МассивРезультатов[1].Выгрузить() Цикл 
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), строка);
	КонецЦикла;
	
	Для Каждого строка из МассивРезультатов[2].Выгрузить() Цикл 
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), строка);
	КонецЦикла;
	
	Набор.Записать();
	
	
КонецПроцедуры

Процедура СкорректироватьРегистрыНДСсАвансов(Ссылка, ДокументДвижений, Период, ЗнакОстатка) Экспорт
		
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДоговорКонтрагента,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Сделка,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Документ,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СчетОплаты,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.ДатаОплаты,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Организация,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.Контрагент,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов,
	                      |	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки.СуммаРегОстаток КАК СуммаРег,
	                      |	&Период
	                      |ПОМЕСТИТЬ РасчетыПоРеалиации
	                      |ИЗ
	                      |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(
	                      |			&ПериодОстатков,
	                      |			Организация = &Организация
	                      |				И СчетОплаты В (&МассивСчетов)
	                      |				И ВЫБОР
	                      |					КОГДА &ОтборПоДоговорам
	                      |						ТОГДА ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом = &ПоДоговорам
	                      |					ИНАЧЕ ИСТИНА
	                      |				КОНЕЦ) КАК РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НДСсАвансовОстатки.Организация,
	                      |	НДСсАвансовОстатки.ВидЦенности,
	                      |	НДСсАвансовОстатки.СчетФактура,
	                      |	НДСсАвансовОстатки.Покупатель,
	                      |	НДСсАвансовОстатки.ДоговорКонтрагента,
	                      |	НДСсАвансовОстатки.СтавкаНДС,
	                      |	НДСсАвансовОстатки.ВалютаАванса КАК ВалютаАванса,
	                      |	НДСсАвансовОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС,
	                      |	НДСсАвансовОстатки.НДСОстаток КАК НДС,
	                      |	НДСсАвансовОстатки.ВалютнаяСуммаСНДСОстаток КАК ВалютнаяСуммаСНДС,
	                      |	НДСсАвансовОстатки.СуммаБезНДСОстаток + НДСсАвансовОстатки.НДСОстаток КАК СуммаСНДС,
	                      |	&Период
	                      |ПОМЕСТИТЬ НДСсАвансов
	                      |ИЗ
	                      |	РегистрНакопления.НДСсАвансов.Остатки(
	                      |			&ПериодОстатков,
	                      |			Организация = &Организация
	                      |				И ВЫБОР
	                      |					КОГДА &ОтборПоДоговорам
	                      |							И ЕСТЬNULL(ДоговорКонтрагента, НЕОПРЕДЕЛЕНО) <> НЕОПРЕДЕЛЕНО
	                      |							И ДоговорКонтрагента <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	                      |						ТОГДА ДоговорКонтрагента.ВестиПоДокументамРасчетовСКонтрагентом = &ПоДоговорам
	                      |					ИНАЧЕ ИСТИНА
	                      |				КОНЕЦ) КАК НДСсАвансовОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НДСсАвансов.Организация,
	                      |	НДСсАвансов.СчетФактура,
	                      |	НДСсАвансов.Покупатель,
	                      |	НДСсАвансов.ДоговорКонтрагента,
	                      |	СУММА(НДСсАвансов.СуммаБезНДС) КАК СуммаБезНДС,
	                      |	СУММА(НДСсАвансов.НДС) КАК НДС,
	                      |	СУММА(НДСсАвансов.ВалютнаяСуммаСНДС) КАК ВалютнаяСуммаСНДС,
	                      |	СУММА(НДСсАвансов.СуммаСНДС) КАК СуммаСНДС
	                      |ПОМЕСТИТЬ НДСсАвансов_Свернуто
	                      |ИЗ
	                      |	НДСсАвансов КАК НДСсАвансов
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	НДСсАвансов.СчетФактура,
	                      |	НДСсАвансов.Покупатель,
	                      |	НДСсАвансов.ДоговорКонтрагента,
	                      |	НДСсАвансов.Организация
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЕСТЬNULL(НДСсАвансов_Свернуто.Организация, РасчетыПоРеалиации.Организация) КАК Организация,
	                      |	ЕСТЬNULL(НДСсАвансов_Свернуто.СчетФактура, РасчетыПоРеалиации.Документ) КАК СчетФактура,
	                      |	ЕСТЬNULL(НДСсАвансов_Свернуто.Покупатель, РасчетыПоРеалиации.Контрагент) КАК Покупатель,
	                      |	ЕСТЬNULL(НДСсАвансов_Свернуто.ДоговорКонтрагента, РасчетыПоРеалиации.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	                      |	ВЫБОР
	                      |		КОГДА РасчетыПоРеалиации.Организация ЕСТЬ NULL 
	                      |				ИЛИ (ВЫРАЗИТЬ(РасчетыПоРеалиации.СуммаРег / 118 * 100 КАК ЧИСЛО(15, 2))) - НДСсАвансов_Свернуто.СуммаБезНДС <> 0
	                      |				ИЛИ (ВЫРАЗИТЬ(РасчетыПоРеалиации.СуммаРег / 118 * 18 КАК ЧИСЛО(15, 2))) - НДСсАвансов_Свернуто.НДС <> 0
	                      |				ИЛИ РасчетыПоРеалиации.СуммаВзаиморасчетов - НДСсАвансов_Свернуто.ВалютнаяСуммаСНДС <> 0
	                      |			ТОГДА 1
	                      |		КОГДА НДСсАвансов_Свернуто.Организация ЕСТЬ NULL 
	                      |			ТОГДА 2
	                      |	КОНЕЦ КАК ВидКорректировки
	                      |ПОМЕСТИТЬ Сравнение
	                      |ИЗ
	                      |	РасчетыПоРеалиации КАК РасчетыПоРеалиации
	                      |		ПОЛНОЕ СОЕДИНЕНИЕ НДСсАвансов_Свернуто КАК НДСсАвансов_Свернуто
	                      |		ПО (НДСсАвансов_Свернуто.Организация = РасчетыПоРеалиации.Организация)
	                      |			И (НДСсАвансов_Свернуто.Покупатель = РасчетыПоРеалиации.Контрагент)
	                      |			И (НДСсАвансов_Свернуто.ДоговорКонтрагента = РасчетыПоРеалиации.ДоговорКонтрагента)
	                      |			И (НДСсАвансов_Свернуто.СчетФактура = РасчетыПоРеалиации.Документ)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	НДСсАвансов.Организация,
	                      |	НДСсАвансов.ВидЦенности,
	                      |	НДСсАвансов.СчетФактура,
	                      |	НДСсАвансов.Покупатель,
	                      |	НДСсАвансов.ДоговорКонтрагента,
	                      |	НДСсАвансов.СтавкаНДС,
	                      |	НДСсАвансов.ВалютаАванса,
	                      |	-НДСсАвансов.СуммаБезНДС КАК СуммаБезНДС,
	                      |	-НДСсАвансов.НДС КАК НДС,
	                      |	-НДСсАвансов.ВалютнаяСуммаСНДС КАК ВалютнаяСуммаСНДС,
	                      |	НДСсАвансов.СуммаСНДС,
	                      |	НДСсАвансов.Период
	                      |ИЗ
	                      |	Сравнение КАК Сравнение
	                      |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НДСсАвансов КАК НДСсАвансов
	                      |		ПО Сравнение.Организация = НДСсАвансов.Организация
	                      |			И Сравнение.СчетФактура = НДСсАвансов.СчетФактура
	                      |			И Сравнение.ДоговорКонтрагента = НДСсАвансов.ДоговорКонтрагента
	                      |			И Сравнение.Покупатель = НДСсАвансов.Покупатель
	                      |			И (Сравнение.ВидКорректировки = 1)
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РасчетыПоРеалиации.Период,
	                      |	РасчетыПоРеалиации.ДоговорКонтрагента,
	                      |	РасчетыПоРеалиации.Документ КАК СчетФактура,
	                      |	РасчетыПоРеалиации.Организация,
	                      |	РасчетыПоРеалиации.Контрагент КАК Покупатель,
	                      |	РасчетыПоРеалиации.СуммаВзаиморасчетов КАК ВалютнаяСуммаСНДС,
	                      |	ВЫРАЗИТЬ(РасчетыПоРеалиации.СуммаРег / 118 * 18 КАК ЧИСЛО(15, 2)) КАК НДС,
	                      |	ВЫРАЗИТЬ(РасчетыПоРеалиации.СуммаРег / 118 * 100 КАК ЧИСЛО(15, 2)) КАК СуммаБезНДС,
	                      |	РасчетыПоРеалиации.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаАванса,
	                      |	&ВидЦенности,
	                      |	&СтавкаНДС,
	                      |	Сравнение.ВидКорректировки
	                      |ИЗ
	                      |	РасчетыПоРеалиации КАК РасчетыПоРеалиации
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ Сравнение КАК Сравнение
	                      |		ПО (Сравнение.Организация = РасчетыПоРеалиации.Организация)
	                      |			И (Сравнение.Покупатель = РасчетыПоРеалиации.Контрагент)
	                      |			И (Сравнение.ДоговорКонтрагента = РасчетыПоРеалиации.ДоговорКонтрагента)
	                      |			И (Сравнение.СчетФактура = РасчетыПоРеалиации.Документ)
	                      |ГДЕ
	                      |	(Сравнение.ВидКорректировки = 2
	                      |			ИЛИ Сравнение.ВидКорректировки = 1)");
	
	Запрос.УстановитьПараметр("ПериодОстатков", 	Новый Граница(Период));
	Запрос.УстановитьПараметр("Период", 			Период);
	Запрос.УстановитьПараметр("Организация", 		Ссылка.Организация);
	Запрос.УстановитьПараметр("ВидЦенности", 		Перечисления.ВидыЦенностей.АвансыПолученные);
	Запрос.УстановитьПараметр("СтавкаНДС", 			Перечисления.СтавкиНДС.НДС18_118);
    Запрос.УстановитьПараметр("МассивСчетов", 		ПолучитьМассивСчетов(Ссылка.Операция));
	Запрос.УстановитьПараметр("ПоДоговорам", 		(Ссылка.ВидЗаполнения = 2));
	Запрос.УстановитьПараметр("ОтборПоДоговорам", 	(Ссылка.ВидЗаполнения <> 0));
		
	Набор = РегистрыНакопления.НДСсАвансов.СоздатьНаборЗаписей();
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Набор.Отбор.Регистратор.Установить(ДокументДвижений);
	Набор.Записать();
	
	Для Каждого строка из МассивРезультатов[4].Выгрузить() Цикл 
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), строка);
	КонецЦикла;
	
	Для Каждого строка из МассивРезультатов[5].Выгрузить() Цикл 
		ЗаполнитьЗначенияСвойств(Набор.Добавить(), строка);
	КонецЦикла;
	
	//Для Каждого строка из МассивРезультатов[6].Выгрузить() Цикл 
	//	ЗаполнитьЗначенияСвойств(Набор.Добавить(), строка);
	//КонецЦикла;
	//
	Набор.Записать();
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Служебные процедуры и функции

Процедура ЗаполнитьСделки(ТЗ, Организация, Контрагент, Договор, Счет)
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Документ,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.Сделка,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.СуммаРегОборот,
	|	РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты.СуммаВзаиморасчетовОборот
	|ИЗ
	|	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Обороты(
	|			,
	|			,
	|			,
	|			Организация = &Организация
	|				И Контрагент = &Контрагент
	|				И ДоговорКонтрагента = &ДоговорКонтрагента
	|				И СчетОплаты = &Счет
	|				И Сделка <> НЕОПРЕДЕЛЕНО) КАК РасчетыПоРеализацииВУсловныхЕдиницахОрганизацииОбороты";
	
	Запрос.УстановитьПараметр("Контрагент", Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента", Договор);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Счет", Счет);
		
	ТЗ_Сделки = Запрос.Выполнить().Выгрузить();
	
	Если ТЗ_Сделки.Количество() > 0 Тогда  
		Для Каждого строка из ТЗ Цикл 		
			строкаСделки = ТЗ_Сделки.Найти(строка.Документ, "Документ");
			Если строкаСделки <> Неопределено Тогда 
				строка.Сделка = строкаСделки.Сделка;  	
			КонецЕсли;	
		КонецЦикла;
	КонецЕсли;	
	
КонецПроцедуры

Функция ПолучитьДокументРасчетов(Организация, Контрагент, Договор, ДокументОснование)
	
	Документ = Неопределено;
	Если ДокументОснование <> Неопределено Тогда 
		
		Запрос = Новый Запрос("ВЫБРАТЬ
		|	ДокументРасчетовСКонтрагентом.Ссылка
		|ИЗ
		|	Документ.ДокументРасчетовСКонтрагентом КАК ДокументРасчетовСКонтрагентом
		|ГДЕ
		|	ДокументРасчетовСКонтрагентом.абс_ДокументОснование = &ДокументОснование
		|	И ДокументРасчетовСКонтрагентом.Организация = &Организация
		|	И ДокументРасчетовСКонтрагентом.Контрагент = &Контрагент
		|	И ДокументРасчетовСКонтрагентом.ДоговорКонтрагента = &ДоговорКонтрагента");
		Запрос.УстановитьПараметр("ДокументОснование", ДокументОснование);
		Запрос.УстановитьПараметр("Организация", Организация);
		Запрос.УстановитьПараметр("Контрагент", Контрагент);
		Запрос.УстановитьПараметр("ДоговорКонтрагента", Договор);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Следующий() Тогда 
			Документ = Выборка.Ссылка;
		КонецЕсли;	
	КонецЕсли;
	
	Если Документ <> Неопределено Тогда 
		ДокументОбъект = Документ.ПолучитьОбъект();
	Иначе
		ДокументОбъект = Документы.ДокументРасчетовСКонтрагентом.СоздатьДокумент();
	КонецЕсли;
	
	ДокументОбъект.ДополнительныеСвойства.Вставить("ОтключитьПроверкуЗаполненияРеквизитов", Истина);
	ДокументОбъект.Организация = Организация;
	ДокументОбъект.Контрагент = Контрагент;
	ДокументОбъект.ДоговорКонтрагента = Договор;
	ДокументОбъект.абс_ДокументОснование = ДокументОснование;
	ДокументОбъект.Комментарий = "[Создан автоматически для приведения регистров к ОСВ]";
	
	Возврат ДокументОбъект; 
	
КонецФункции

Функция ПолучитьМассивСчетов(Операция) Экспорт
	
	МассивСчетов = Новый Массив;
	Если Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыПолученные Тогда 
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.02.Д"));
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.22.Д"));
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("62.32.Д"));
	ИначеЕсли Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.РасчетыСПокупателями Тогда 
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателями);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиВал);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиУЕ);	
	ИначеЕсли Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыВыданные Тогда 
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымУЕ);	
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.02.Д"));
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.22.Д"));
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.32.Д"));
	ИначеЕсли Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.РасчетыСПоставщиками Тогда 
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщиками);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиВал);
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиУЕ);	
		МассивСчетов.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.01.Д"));
	КонецЕсли;
	
	Возврат МассивСчетов; 
	
КонецФункции

Функция ПолучитьЗнакОстатка(Операция) Экспорт
	
	ЗнакОстатка = 1;
	Если Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыПолученные Тогда 
		ЗнакОстатка = 1;
	ИначеЕсли Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.АвансыВыданные Тогда 
		ЗнакОстатка = 1;
	ИначеЕсли Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.РасчетыСПокупателями Тогда
		ЗнакОстатка = -1;	
	ИначеЕсли Операция = Перечисления.абс_ВидыОперацийПриведениеРегистровКОСВ.РасчетыСПоставщиками Тогда 
		ЗнакОстатка = -1;	
	КонецЕсли;
	
	Возврат ЗнакОстатка; 
	
КонецФункции

