
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ЭтоНовый() Тогда 
		Статус = Перечисления.абс_СтатусыИзмененияКонтрагентаВДоговоре.Подготовка;
		Ответственный = глЗначениеПеременной("глТекущийПользователь");
		Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	КонецЕсли;
	 
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	//СписокДоговоров.Очистить();
	Статус = Перечисления.абс_СтатусыИзмененияКонтрагентаВДоговоре.Подготовка;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	Если ПометкаУдаления Тогда 
		УдалитьДвиженияКорректировки();
		Возврат;
	КонецЕсли;
			
	Если Статус <> Перечисления.абс_СтатусыИзмененияКонтрагентаВДоговоре.Завершен Тогда 
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверитьАктуальностьЗаполненияВзаиморасчетов() Тогда 
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не совпаают остатки по взаиморасчетам с данными документа. Перезаполните остатки по взаиморасчетам по кнопке ""Заполнить остатки по взаиморасчетам""");
		Возврат;	
	КонецЕсли;
	
	КорректировкаОбъект = ПолучитьКорректировкуДолга(); 
	СопоставлениеДоговоров = Новый Соответствие;
	
	Для Каждого строка из СписокДоговоров Цикл 
		
		СоздатьКопиюДоговора(строка);
		ЗаполнитьСтрокуКорректировкиУПР(КорректировкаОбъект, строка);
		ЗаполнитьСтрокуКорректировкиРЕГЛ(КорректировкаОбъект, строка);
		ЗакрытьДоговор(строка.Договор);
		СопоставлениеДоговоров.Вставить(строка.Договор, строка.НовыйДоговор);
		
	КонецЦикла;
	
	ПеренестиРегистрыВзаиморасчетов(КорректировкаОбъект, СопоставлениеДоговоров);
	ЗаписатьКорректировкуДолга(КорректировкаОбъект);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	Если ПометкаУдаления Тогда 
		Возврат;
	КонецЕсли;
	
	Если Статус = Перечисления.абс_СтатусыИзмененияКонтрагентаВДоговоре.ОбработкаБухгалтерои Тогда 
		ПроверитьКонтрагентов(Отказ);
		ПроверяемыеРеквизиты.Добавить("Организация");
		ПроверяемыеРеквизиты.Добавить("Контрагент");
		ПроверяемыеРеквизиты.Добавить("НовыйКонтрагент");	
		ПроверяемыеРеквизиты.Добавить("СписокДоговоров.Договор");
	КонецЕсли;
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПО КОПИРОВАНИЮ ДОГОВОРОВ


Процедура СоздатьКопиюДоговора(строка)
	
	Если НЕ ЗначениеЗаполнено(строка.НовыйДоговор) Тогда 
		НовыйДоговорОбъект = строка.Договор.Скопировать();
		НовыйДоговорОбъект.Владелец = НовыйКонтрагент;		
		НовыйДоговорОбъект.Записать();
		строка.НовыйДоговор = НовыйДоговорОбъект.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуКорректировкиУПР(КорректировкаОбъект, строка)
	
	Если строка.Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком Тогда
		ДвиженияУПР = КорректировкаОбъект.Движения.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации;
	Иначе
		ДвиженияУПР = КорректировкаОбъект.Движения.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации;
	КонецЕсли;
	
	МассивСтрокПоДоговоруУПР = ВзаиморасчетыУпр.НайтиСтроки(Новый Структура("Договор", строка.Договор));
	
	Для Каждого строкаУПР из МассивСтрокПоДоговоруУПР Цикл  
		
		Движение = ДвиженияУПР.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, строкаУПР);
		Движение.СуммаВзаиморасчетов = -Движение.СуммаВзаиморасчетов;
		Движение.СуммаРег = -Движение.СуммаРег;
		Движение.Активность = Истина;
		Движение.Период = Дата;
		Движение.ДоговорКонтрагента = строкаУПР.Договор;
		Движение.Контрагент = Контрагент;
		Движение.Организация = Организация;
		
		Движение = ДвиженияУПР.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, строкаУПР);
		Движение.СуммаВзаиморасчетов = Движение.СуммаВзаиморасчетов;
		Движение.СуммаРег = Движение.СуммаРег;
		Движение.Активность = Истина;
		Движение.Период = Дата;
		Движение.ДоговорКонтрагента = строка.НовыйДоговор;
		Движение.Контрагент = НовыйКонтрагент;
		Движение.Организация = Организация;

	КонецЦикла;
		
КонецПроцедуры

Процедура ЗаполнитьСтрокуКорректировкиРЕГЛ(КорректировкаОбъект, строка)
		
	МассивСтрокПоДоговоруРЕГЛ = ВзаиморасчетыРегл.НайтиСтроки(Новый Структура("Договор", строка.Договор));
	
	Для Каждого строкаРЕГЛ из ВзаиморасчетыРегл Цикл  
		
		Движение = КорректировкаОбъект.Движения.Хозрасчетный.Добавить();
		Движение.Активность = Истина;
		Движение.Период = Дата;
		Движение.Организация = Организация;		
		Движение.СчетДт = строкаРЕГЛ.СчетОплаты;
		Движение.СчетКт = строкаРЕГЛ.СчетОплаты;
		
		БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 1, Контрагент);
		БухгалтерскийУчет.УстановитьСубконто(Движение.СчетКт, Движение.СубконтоКт, 2, строкаРЕГЛ.Договор);
		
		БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 1, НовыйКонтрагент);
		БухгалтерскийУчет.УстановитьСубконто(Движение.СчетДт, Движение.СубконтоДт, 2, строка.НовыйДоговор);
		
		Движение.Сумма = строкаРЕГЛ.СуммаВзаиморасчетов;
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ЗакрытьДоговор(Договор)

	ДоговорОбъект = Договор.ПОлучитьОбъект();
	ДоговорОбъект.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Закрыт;
	ДоговорОбъект.Записать();
	
КонецПроцедуры

Процедура ПеренестиРегистрыВзаиморасчетов(КорректировкаОбъект, СопоставлениеДоговоров)
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ВзаиморасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	                      |	ВзаиморасчетыСКонтрагентамиОстатки.Сделка,
	                      |	ВзаиморасчетыСКонтрагентамиОстатки.Организация,
	                      |	ВзаиморасчетыСКонтрагентамиОстатки.Контрагент,
	                      |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов,
	                      |	ВзаиморасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпр
	                      |ИЗ
	                      |	РегистрНакопления.ВзаиморасчетыСКонтрагентами.Остатки(
	                      |			&Период,
	                      |			ДоговорКонтрагента В (&МассивДоговор)
	                      |				И Организация = &Организация
	                      |				И Контрагент = &Контрагент) КАК ВзаиморасчетыСКонтрагентамиОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.ДоговорКонтрагента,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.Сделка,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.ДокументРасчетовСКонтрагентом,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.ВидРасчетовСКонтрагентом,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.УпрУчет,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.Организация,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.Контрагент,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов,
	                      |	ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки.СуммаРеглОстаток КАК СуммаРегл
	                      |ИЗ
	                      |	РегистрНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Остатки(
	                      |			&Период,
	                      |			ДоговорКонтрагента В (&МассивДоговор)
	                      |				И Организация = &Организация
	                      |				И Контрагент = &Контрагент) КАК ВзаиморасчетыСКонтрагентамиПоДокументамРасчетовОстатки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РасчетыСКонтрагентамиОстатки.ДоговорКонтрагента,
	                      |	РасчетыСКонтрагентамиОстатки.Сделка,
	                      |	РасчетыСКонтрагентамиОстатки.РасчетыВозврат,
	                      |	РасчетыСКонтрагентамиОстатки.Организация,
	                      |	РасчетыСКонтрагентамиОстатки.Контрагент,
	                      |	РасчетыСКонтрагентамиОстатки.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов,
	                      |	РасчетыСКонтрагентамиОстатки.СуммаУпрОстаток КАК СуммаУпр
	                      |ИЗ
	                      |	РегистрНакопления.РасчетыСКонтрагентами.Остатки(
	                      |			&Период,
	                      |			ДоговорКонтрагента В (&МассивДоговор)
	                      |				И Организация = &Организация
	                      |				И Контрагент = &Контрагент) КАК РасчетыСКонтрагентамиОстатки");
						  
	Запрос.УстановитьПараметр("Период", 		Новый Граница(Дата, ВидГраницы.Исключая));					  
	Запрос.УстановитьПараметр("Организация", 	Организация);
	Запрос.УстановитьПараметр("Контрагент",  	Контрагент);
	Запрос.УстановитьПараметр("МассивДоговор",  СписокДоговоров.ВыгрузитьКолонку("Договор"));
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	
	Выборка = МассивРезультатов[0].Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Движение = КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентами.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.СуммаВзаиморасчетов = -Движение.СуммаВзаиморасчетов;
		Движение.СуммаУпр = -Движение.СуммаУпр;
		
		Движение = КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентами.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Контрагент = НовыйКонтрагент;
		Движение.ДоговорКонтрагента = СопоставлениеДоговоров.Получить(Движение.ДоговорКонтрагента);
	КонецЦикла;
	
	Выборка = МассивРезультатов[1].Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Движение = КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.СуммаВзаиморасчетов = -Движение.СуммаВзаиморасчетов;
		Движение.СуммаРегл = -Движение.СуммаРегл;
		
		Движение = КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Контрагент = НовыйКонтрагент;
		Движение.ДоговорКонтрагента = СопоставлениеДоговоров.Получить(Движение.ДоговорКонтрагента);
	КонецЦикла;
	
	Выборка = МассивРезультатов[2].Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Движение = КорректировкаОбъект.Движения.РасчетыСКонтрагентами.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.СуммаВзаиморасчетов = -Движение.СуммаВзаиморасчетов;
		Движение.СуммаУпр = -Движение.СуммаУпр;
		
		Движение = КорректировкаОбъект.Движения.РасчетыСКонтрагентами.ДобавитьПриход();
		ЗаполнитьЗначенияСвойств(Движение, Выборка);
		Движение.Период = Дата;
		Движение.Активность = Истина;
		Движение.Контрагент = НовыйКонтрагент;
		Движение.ДоговорКонтрагента = СопоставлениеДоговоров.Получить(Движение.ДоговорКонтрагента);
	КонецЦикла;


	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ


Функция ПолучитьКорректировкуДолга()
	
	Если НЕ ЗначениеЗаполнено(КорректировкаДолга) Тогда 
		КорректировкаОбъект = Документы.КорректировкаЗаписейРегистров.СоздатьДокумент();
	Иначе
		КорректировкаОбъект = КорректировкаДолга.ПолучитьОбъект();
	КонецЕсли;
	
	КорректировкаОбъект.Дата = Дата;
	
	КорректировкаОбъект.ТаблицаРегистровБухгалтерии.Очистить();
	КорректировкаОбъект.ТаблицаРегистровНакопления.Очистить();
	
	строка = КорректировкаОбъект.ТаблицаРегистровБухгалтерии.Добавить();
	строка.Имя = "Хозрасчетный";
	строка.Представление = "Хозрасчетный";
	
	строка = КорректировкаОбъект.ТаблицаРегистровНакопления.Добавить();
	строка.Имя = "РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации";
	строка.Представление = "Расчеты по приобретению (бухгалтерский учет)";

	строка = КорректировкаОбъект.ТаблицаРегистровНакопления.Добавить();
	строка.Имя = "РасчетыПоРеализацииВУсловныхЕдиницахОрганизации";
	строка.Представление = "Расчеты по реализации (бухгалтерский учет)";
	
	строка = КорректировкаОбъект.ТаблицаРегистровНакопления.Добавить();
	строка.Имя = "ВзаиморасчетыСКонтрагентами";
	строка.Представление = "Взаиморасчеты с контрагентами";

	строка = КорректировкаОбъект.ТаблицаРегистровНакопления.Добавить();
	строка.Имя = "ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов";
	строка.Представление = "Взаиморасчеты с контрагентами по документам расчетов";
	
	строка = КорректировкаОбъект.ТаблицаРегистровНакопления.Добавить();
	строка.Имя = "РасчетыСКонтрагентами";
	строка.Представление = "Расчеты с контрагентами";

	КорректировкаОбъект.Записать();
	
	КорректировкаОбъект.Движения.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Записать();
	КорректировкаОбъект.Движения.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Записать();
    КорректировкаОбъект.Движения.Хозрасчетный.Записать();
	КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентами.Записать();
	КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Записать();
	КорректировкаОбъект.Движения.РасчетыСКонтрагентами.Записать();
	
	Возврат КорректировкаОбъект;

КонецФункции

Процедура ЗаписатьКорректировкуДолга(КорректировкаОбъект)
	
	КорректировкаОбъект.Движения.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Записать();
	КорректировкаОбъект.Движения.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Записать();
    КорректировкаОбъект.Движения.Хозрасчетный.Записать();
	КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентами.Записать();
	КорректировкаОбъект.Движения.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов.Записать();
	КорректировкаОбъект.Движения.РасчетыСКонтрагентами.Записать();

	
	Попытка 
		КорректировкаОбъект.Записать();
	Исключение
		КорректировкаОбъект.ОбменДанными.Загрузка = Истина;
		КорректировкаОбъект.Записать();	
	КонецПопытки;
	
	КорректировкаДолга = КорректировкаОбъект.Ссылка;
	
КонецПроцедуры

ПРоцедура ПроверитьКонтрагентов(Отказ)
	
	Для Каждого строка из СписокДоговоров Цикл 	
		Если (строка.Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком) И 
			(НЕ НовыйКонтрагент.Поставщик) Тогда 
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Для договоров с поставщиком необходимо поставить признак ""Поставщик"" в карточке контрагента");	
			Отказ = Истина;
		ИначеЕсли (строка.Договор.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем) И 
			(НЕ НовыйКонтрагент.Покупатель) Тогда 
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Для договоров с покупателем необходимо поставить признак ""Покупатель"" в карточке контрагента");
			Отказ = Истина;
		КонецЕсли;		
	КонецЦикла;	
	
КонецПроцедуры

Функция ПроверитьАктуальностьЗаполненияВзаиморасчетов() Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТЗ.СчетОплаты КАК СчетОплаты,
	                      |	ТЗ.Договор КАК Договор,
	                      |	ТЗ.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов
	                      |ПОМЕСТИТЬ ВТ_ВзаиморасчетыРегл
	                      |ИЗ
	                      |	&ТЗ КАК ТЗ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ХозрасчетныйОстатки.Счет КАК СчетОплаты,
	                      |	ХозрасчетныйОстатки.Субконто2 КАК Договор,
	                      |	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаВзаиморасчетов
	                      |ИЗ
	                      |	ВТ_ВзаиморасчетыРегл КАК ВТ_ВзаиморасчетыРегл
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Остатки(
	                      |				&Период,
	                      |				,
	                      |				&МассивСубконто,
	                      |				Организация = &Организация
	                      |					И Субконто2 В (&МассивДоговоров)) КАК ХозрасчетныйОстатки
	                      |		ПО (ХозрасчетныйОстатки.Субконто2 = ВТ_ВзаиморасчетыРегл.Договор)
	                      |			И (ХозрасчетныйОстатки.Счет = ВТ_ВзаиморасчетыРегл.СчетОплаты)
	                      |ГДЕ
	                      |	ВТ_ВзаиморасчетыРегл.СуммаВзаиморасчетов <> ЕСТЬNULL(ХозрасчетныйОстатки.СуммаОстаток, 0)");
						  
	МассивСубконто = Новый Массив;
	МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	МассивСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос.УстановитьПараметр("МассивДоговоров", 	СписокДоговоров.ВыгрузитьКолонку("Договор"));
	Запрос.УстановитьПараметр("МассивСубконто", 	МассивСубконто);
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ТЗ", 				ВзаиморасчетыРегл.Выгрузить());
	Запрос.УстановитьПараметр("Организация", 		Организация);

	Если НЕ Запрос.Выполнить().Пустой() Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ТЗ.Договор КАК Договор,
	                      |	ТЗ.Документ,
	                      |	ТЗ.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	                      |	ТЗ.СуммаРег КАК СуммаРег,
	                      |	ТЗ.СчетОплаты,
	                      |	ТЗ.Сделка,
	                      |	ТЗ.ДатаОплаты
	                      |ПОМЕСТИТЬ ВТ_ВзаиморасчетыУпр
	                      |ИЗ
	                      |	&ТЗ КАК ТЗ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РегистрРассчетов.ДоговорКонтрагента КАК Договор,
	                      |	РегистрРассчетов.Документ,
	                      |	РегистрРассчетов.СчетОплаты,
	                      |	РегистрРассчетов.Сделка,
	                      |	РегистрРассчетов.ДатаОплаты,
	                      |	РегистрРассчетов.СуммаВзаиморасчетовОстаток,
	                      |	РегистрРассчетов.СуммаРегОстаток
	                      |ПОМЕСТИТЬ ВТ_РегистрРассчетов
	                      |ИЗ
	                      |	РегистрНакопления.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации.Остатки(
	                      |			&Период,
	                      |			ДоговорКонтрагента В (&МассивДоговоров)
	                      |				И Контрагент = &Контрагент
	                      |				И Организация = &Организация) КАК РегистрРассчетов
	                      |
	                      |ОБЪЕДИНИТЬ ВСЕ
	                      |
	                      |ВЫБРАТЬ
	                      |	РегистрРассчетов.ДоговорКонтрагента,
	                      |	РегистрРассчетов.Документ,
	                      |	РегистрРассчетов.СчетОплаты,
	                      |	РегистрРассчетов.Сделка,
	                      |	РегистрРассчетов.ДатаОплаты,
	                      |	РегистрРассчетов.СуммаВзаиморасчетовОстаток,
	                      |	РегистрРассчетов.СуммаРегОстаток
	                      |ИЗ
	                      |	РегистрНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации.Остатки(
	                      |			&Период,
	                      |			ДоговорКонтрагента В (&МассивДоговоров)
	                      |				И Контрагент = &Контрагент
	                      |				И Организация = &Организация) КАК РегистрРассчетов
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	РегистрРассчетов.Договор КАК Договор,
	                      |	РегистрРассчетов.Документ,
	                      |	РегистрРассчетов.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетов,
	                      |	РегистрРассчетов.СуммаРегОстаток КАК СуммаРег,
	                      |	РегистрРассчетов.СчетОплаты,
	                      |	РегистрРассчетов.Сделка,
	                      |	РегистрРассчетов.ДатаОплаты,
	                      |	ВТ_ВзаиморасчетыУпр.Договор КАК Договор1,
	                      |	ВТ_ВзаиморасчетыУпр.Документ КАК Документ1,
	                      |	ВТ_ВзаиморасчетыУпр.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов1,
	                      |	ВТ_ВзаиморасчетыУпр.СуммаРег КАК СуммаРег1,
	                      |	ВТ_ВзаиморасчетыУпр.СчетОплаты КАК СчетОплаты1,
	                      |	ВТ_ВзаиморасчетыУпр.Сделка КАК Сделка1,
	                      |	ВТ_ВзаиморасчетыУпр.ДатаОплаты КАК ДатаОплаты1
	                      |ИЗ
	                      |	ВТ_ВзаиморасчетыУпр КАК ВТ_ВзаиморасчетыУпр
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_РегистрРассчетов КАК РегистрРассчетов
	                      |		ПО (РегистрРассчетов.Договор = ВТ_ВзаиморасчетыУпр.Договор)
	                      |			И (РегистрРассчетов.Сделка = ВТ_ВзаиморасчетыУпр.Сделка)
	                      |			И (РегистрРассчетов.Документ = ВТ_ВзаиморасчетыУпр.Документ)
	                      |			И (РегистрРассчетов.СчетОплаты = ВТ_ВзаиморасчетыУпр.СчетОплаты)
	                      |			И (РегистрРассчетов.ДатаОплаты = ВТ_ВзаиморасчетыУпр.ДатаОплаты)
	                      |ГДЕ
	                      |	(ВТ_ВзаиморасчетыУпр.СуммаВзаиморасчетов <> ЕСТЬNULL(РегистрРассчетов.СуммаВзаиморасчетовОстаток, 0)
	                      |			ИЛИ ВТ_ВзаиморасчетыУпр.СуммаРег <> ЕСТЬNULL(РегистрРассчетов.СуммаРегОстаток, 0))");
						  
	Запрос.УстановитьПараметр("МассивДоговоров", 	СписокДоговоров.ВыгрузитьКолонку("Договор"));
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ТЗ", 				ВзаиморасчетыУпр.Выгрузить());
	Запрос.УстановитьПараметр("Контрагент", 		Контрагент);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	
	Если НЕ Запрос.Выполнить().Пустой() Тогда 
		Возврат Ложь;
	КонецЕсли;

	Возврат Истина;
	
КонецФункции

Процедура УдалитьДвиженияКорректировки()
	
	Если НЕ ЗначениеЗаполнено(КорректировкаДолга) Тогда 
		Возврат;
	КонецЕсли;
	
	СнятьАктивность(РегистрыНакопления.РасчетыПоПриобретениюВУсловныхЕдиницахОрганизации);
	СнятьАктивность(РегистрыНакопления.РасчетыПоРеализацииВУсловныхЕдиницахОрганизации);
	СнятьАктивность(РегистрыБухгалтерии.Хозрасчетный);
	СнятьАктивность(РегистрыНакопления.ВзаиморасчетыСКонтрагентами);
	СнятьАктивность(РегистрыНакопления.ВзаиморасчетыСКонтрагентамиПоДокументамРасчетов);
	СнятьАктивность(РегистрыНакопления.РасчетыСКонтрагентами);
		
КонецПроцедуры

Процедура СнятьАктивность(Регистр)
	
	НаборЗаписей = Регистр.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Регистратор.Установить(КорректировкаДолга);
	НаборЗаписей.Прочитать();
	НаборЗаписей.УстановитьАктивность(Ложь);
	НаборЗаписей.Записать();	
	
КонецПроцедуры






