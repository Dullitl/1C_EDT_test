
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	
	ЭтаФорма.ИсторияСтатусов.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаОтгрузку", Объект.Ссылка);
	
	
	Если Объект.Ссылка.Пустая() ТОгда
		
		Объект.ИнициаторОтгрузки =  глЗначениеПеременной("глТекущийПользователь");
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	

	СтатусДокумента = Документы.ttk_ЗаявкаНаОтгрузку.ПолучитьТекущийСтатусЗаявкиНаОтгрузку(Объект.Ссылка);
		
	Если  НЕ СтатусДокумента=Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ПустаяСсылка() Тогда
		
		Элементы.СтатусДокумента.СписокВыбора.Добавить(СтатусДокумента, Строка(СтатусДокумента));
		
	КонецЕсли;
	
	Если Объект.Ссылка.Пустая() Тогда
	
	  	Элементы.СтатусДокумента.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка, "Подготовка");
		ЭтаФорма.СтатусДокумента = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка;
		
	КонецЕсли;
		
	
	УстановитьВидимостьДосупность();
	
	
КонецПроцедуры


&НаСервере
Процедура УстановитьВидимостьДосупность()
	
	
	СтатусВРегистре = Документы.ttk_ЗаявкаНаОтгрузку.ПолучитьТекущийСтатусЗаявкиНаОтгрузку(Объект.Ссылка);
	
	Элементы.НоменклатураОтметка.Видимость		= 	Ложь;
	Элементы.КнопкаСоздатьДокумент.Видимость	=   Ложь;

	
	Если СтатусВРегистре = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ПустаяСсылка() Тогда
		
		Элементы.Дата.ТолькоПросмотр 				= Ложь;
		Элементы.Организация.ТолькоПросмотр 		= Ложь;
		Элементы.Основание.ТолькоПросмотр 			= Ложь;
		Элементы.СтатусДокумента.ТолькоПросмотр 	= Ложь;
		Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
		Элементы.Склад.ТолькоПросмотр 				= Ложь;
		Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;

		
	ИначеЕсли СтатусВРегистре = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка Тогда
		
		Если Объект.ИнициаторОтгрузки =  глЗначениеПеременной("глТекущийПользователь") Тогда
			
			Элементы.Дата.ТолькоПросмотр 				= Ложь;
			Элементы.Организация.ТолькоПросмотр 		= Ложь;
			Элементы.Основание.ТолькоПросмотр 			= Ложь;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Ложь;
			Элементы.Номенклатура.ТолькоПросмотр 		= Ложь;
			Элементы.Склад.ТолькоПросмотр 				= Ложь;
			Элементы.ОткрытьФормуПодбора.Доступность	= Истина;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;
	

		Иначе
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Истина;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;



		КонецЕсли;

		
	ИначеЕсли СтатусВРегистре = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.СолгасованиеСРуководителемИнициатора Тогда
		
		
		 РуководительИнициатора =  ПолучитьРуководителяПодразделения(глЗначениеПеременной("глТекущийПользователь").абс_Сотрудник.ТекущееПодразделениеОрганизации);
		 
		
		 Если РуководительИнициатора =  глЗначениеПеременной("глТекущийПользователь") Тогда
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Ложь;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;



		Иначе
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Истина;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;

		КонецЕсли;

		
		
	ИначеЕсли СтатусВРегистре = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ЗавершающийЭтапСогласования Тогда

		
		СогласующийПоследнегоЭтапа = ПолучитьСогласующегоПоОснованию(Объект.Основание);
		
		
	    Если СогласующийПоследнегоЭтапа =  глЗначениеПеременной("глТекущийПользователь") Тогда
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Ложь;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;

	
		Иначе
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Истина;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;

	
			
		КонецЕсли;

	ИначеЕсли СтатусВРегистре = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Завершен Тогда

		
		Если Объект.ИнициаторОтгрузки =  глЗначениеПеременной("глТекущийПользователь") Тогда
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Ложь;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;

		Иначе
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Истина;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;

		КонецЕсли;
		
		Если РольДоступна("ttk_СозданиеДокументовНаОснованииЗаявокНаОтгрузку") Тогда
			
						                           	     	
			Элементы.Номенклатура.ТолькоПросмотр    				 = Ложь;
			Элементы.НоменклатураДокумент.ТолькоПросмотр   			= Истина;
			Элементы.НоменклатураКоличество.ТолькоПросмотр   		= Истина;
			Элементы.НоменклатураНоменклатура.ТолькоПросмотр   		= Истина;
			Элементы.НоменклатураСерияНоменклатуры.ТолькоПросмотр   = Истина;
			Элементы.НоменклатураХарактеристика.ТолькоПросмотр  	 = Истина;

			
			Элементы.Номенклатура.ИзменятьПорядокСтрок 	 = Ложь;
			Элементы.Номенклатура.ИзменятьСоставСтрок	 = Ложь;
			
			Элементы.НоменклатураОтметка.Видимость		= Истина;
			Элементы.КнопкаСоздатьДокумент.Видимость    = Истина;

			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Ложь;
			Элементы.КнопкаСоздатьДокумент.Доступность  = Истина;



		КонецЕсли;
		
	ИначеЕсли СтатусВРегистре = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ Тогда

		
		Если Объект.ИнициаторОтгрузки =  глЗначениеПеременной("глТекущийПользователь") Тогда
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Ложь;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;

		Иначе
			
			Элементы.Дата.ТолькоПросмотр 				= Истина;
			Элементы.Организация.ТолькоПросмотр 		= Истина;
			Элементы.Основание.ТолькоПросмотр 			= Истина;
			Элементы.СтатусДокумента.ТолькоПросмотр 	= Истина;
			Элементы.Номенклатура.ТолькоПросмотр 		= Истина;
			Элементы.Склад.ТолькоПросмотр 				= Истина;
			Элементы.ОткрытьФормуПодбора.Доступность	= Ложь;
			Элементы.НоменклатураОтметка.ТолькоПросмотр	= Истина;

		КонецЕсли;
	
	
		
	Иначе
		
		Элементы.Основание.ТолькоПросмотр = Истина;
	
	КонецЕсли;
	
	
	
	
КонецПроцедуры



&НаКлиенте
Процедура ОткрытьФормуПодбора(Команда)
	
	
	ПараметрыФормы = Новый Структура("МножественныйВыбор, РежимВыбора, ЗакрыватьПриВыборе,Склад", Истина, Истина, ЛОЖЬ,Объект.Склад); 
    результат = ОткрытьФормуМодально("Документ.ttk_ЗаявкаНаОтгрузку.Форма.ФормаПодбораНоменклатуры", ПараметрыФормы, ЭтаФорма);


КонецПроцедуры


&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия="ПодборНоменклатурыДляРезерва" Тогда
		
		Для Сч = 0 По Параметр.ЭтаФорма.ТаблицаВыбора.Количество() -1 Цикл
			
	  	 	ТекЭлемент = Параметр.ЭтаФорма.ТаблицаВыбора[Сч];
			
			НоваяСтрокаТЧ=Объект.Номенклатура.Добавить();
				
			НоваяСтрокаТЧ.Номенклатура 			= ТекЭлемент.Номенклатура; 
			НоваяСтрокаТЧ.Характеристика		= ТекЭлемент.ХарактеристикаНоменклатуры; 
			НоваяСтрокаТЧ.СерияНоменклатуры 	= ТекЭлемент.СерияНоменклатуры; 
			НоваяСтрокаТЧ.Количество 			= ТекЭлемент.Количество;

			
		КонецЦикла
		
	КонецЕсли;
	

КонецПроцедуры



&НаКлиенте
Процедура СтатусДокументаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	

	СписокСтатусовДляВыбора = новый Массив ;
	
	Элемент.СписокВыбора.Очистить();  
	
	ТекСтатус = Документы.ttk_ЗаявкаНаОтгрузку.ПолучитьТекущийСтатусЗаявкиНаОтгрузку(Объект.Ссылка);
	
	Если  НЕ ТекСтатус=Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ПустаяСсылка() 
	И Элемент.СписокВыбора.НайтиПоЗначению(ЭтаФорма.СтатусДокумента)=Неопределено Тогда
		
		Элементы.СтатусДокумента.СписокВыбора.Добавить(ТекСтатус, Строка(ТекСтатус));
		
	КонецЕсли;

	
		
	Если 		ТекСтатус = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ПустаяСсылка() Тогда
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка, "Подготовка");		
		
		КонецЕсли;

				
	ИначеЕсли 	ТекСтатус = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка Тогда
		
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка, "Подготовка");		
		
		КонецЕсли;

		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.СолгасованиеСРуководителемИнициатора)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.СолгасованиеСРуководителемИнициатора, "Согласование с руководителем инициатора");		
		
		КонецЕсли;

		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ, "Отказ");
		
		КонецЕсли;		  	
				
	ИначеЕсли 	ТекСтатус = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.СолгасованиеСРуководителемИнициатора Тогда	
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.СолгасованиеСРуководителемИнициатора)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.СолгасованиеСРуководителемИнициатора, "Согласование с руководителем инициатора");		
		
		КонецЕсли;
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ЗавершающийЭтапСогласования)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ЗавершающийЭтапСогласования, "Завершающий этап согласования");		
		
		КонецЕсли;

		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ, "Отказ");
		 	
		КонецЕсли;

		
		
	ИначеЕсли 	ТекСтатус = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ЗавершающийЭтапСогласования Тогда	
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ЗавершающийЭтапСогласования)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ЗавершающийЭтапСогласования, "Завершающий этап согласования");		
		
		КонецЕсли;

		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Завершен)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Завершен, "Завершен");

		 	
		КонецЕсли;		
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ, "Отказ");
		 	
		КонецЕсли;

	
		
	ИначеЕсли 	ТекСтатус = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Завершен Тогда	
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Завершен)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Завершен, "Завершен");

		 	
		КонецЕсли;		
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ, "Отказ");
		 	
		КонецЕсли;

	ИначеЕсли 	ТекСтатус = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ Тогда	
		
		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ, "Отказ");
		 	
		КонецЕсли;

		Если Элемент.СписокВыбора.НайтиПоЗначению(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка)=Неопределено Тогда
		
			Элемент.СписокВыбора.Добавить(Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Подготовка, "Подготовка");
		 	
		КонецЕсли;

		
	
	КонецЕсли;
	

	   
	
КонецПроцедуры


&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	
	СтатусВРегистре = Документы.ttk_ЗаявкаНаОтгрузку.ПолучитьТекущийСтатусЗаявкиНаОтгрузку(ТекущийОбъект.Ссылка);

	Если  ЭтаФорма.СтатусДокумента <> СтатусВРегистре Тогда
		
		НаборЗаписей = РегистрыСведений.ttk_ИзменениеСтатусовЗаявокНаОтгрузку.СоздатьНаборЗаписей(); 

		НаборЗаписей.Отбор.ЗаявкаНаОтгрузку.Установить(ТекущийОбъект.Ссылка); 
		НаборЗаписей.Отбор.Период.Установить(ТекущаяДата()); 

		
		НовЗапись = НаборЗаписей.Добавить(); 
		НовЗапись.ЗаявкаНаОтгрузку = ТекущийОбъект.Ссылка; 
		НовЗапись.Период = ТекущаяДата(); 
		
		
		НовЗапись.Статус 		= ЭтаФорма.СтатусДокумента; 
		НовЗапись.Пользователь 	= глЗначениеПеременной("глТекущийПользователь");


		НаборЗаписей.Записать(Истина); 
		
		
		Если ЭтаФорма.СтатусДокумента = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.СолгасованиеСРуководителемИнициатора Тогда  
		
		
			   Если ТекущийОбъект.ЗаказПокупателя = Документы.ЗаказПокупателя.ПустаяСсылка()  Тогда
				
					ДокЗаказ 	  = Документы.ЗаказПокупателя.СоздатьДокумент();
					ДокЗаказ.Дата = ТекущаяДата();
				
					ДокЗаказ.Организация 			=  ТекущийОбъект.Организация;
					ДокЗаказ.ttk_ЗаявкаНаОтгрузку 	=  ТекущийОбъект.Ссылка;
					ДокЗаказ.ВидОперации 			=  Перечисления.ВидыОперацийЗаказПокупателя.ПродажаКомиссия;
					Докзаказ.ВалютаДокумента		=  глЗначениеПеременной("ВалютаРегламентированногоУчета");

					ДокЗаказ.Записать();
					
					ТекущийОбъект.ЗаказПокупателя = ДокЗаказ.Ссылка;
					
				КонецЕсли;
					
				//Создаем документ резерва
					
				ДокументУстановкиРезерва = Документы.ttk_ФормированиеРезерва.СоздатьДокумент();
				
				ДокументУстановкиРезерва.ВидОперации = Перечисления.ttk_ФормированиеРезерваВидОперации.УстановкаРезерва;
				
				ДокументУстановкиРезерва.Склад = ТекущийОбъект.Склад;
				
				ДокументУстановкиРезерва.Заказ = ТекущийОбъект.ЗаказПокупателя;
				
				ДокументУстановкиРезерва.Дата =	ТекущаяДата();
				
				Для Каждого Строка Из ТекущийОбъект.Номенклатура Цикл
					
					Если ЗначениеЗаполнено(Строка.Документ) Тогда
						
						Продолжить;
						
					КонецЕсли;
					
					НС_Резерв = ДокументУстановкиРезерва.Номенклатура.Добавить();
					
					ЗаполнитьЗначенияСвойств(НС_Резерв,Строка);
					
					
				КонецЦикла;
				
				ДокументУстановкиРезерва.Записать(РежимЗаписиДокумента.Проведение);
				
				// +++ 2017.05.31 Гущина   записываю док тут, т.к. иначе не заполняет заказ и после отказа остатки в резервах + - 
				ТекущийОбъект.Записать(РежимЗаписиДокумента.Запись);
				//--- 2017.05.31 Гущина
				
				Согласующий =  ПолучитьРуководителяПодразделения(ТекущийОбъект.ИнициаторОтгрузки.абс_Сотрудник.ТекущееПодразделениеОрганизации);
				
				ОтправитьСообщенияПользователю(Согласующий,"Согласование заявки на отгрузку "+ТекущийОбъект.Номер + " от "+ Строка(ТекущийОбъект.Дата),"Заявка на отгрузку"+ТекущийОбъект.Номер + " от "+ Строка(ТекущийОбъект.Дата) + " ожидает согласования!");
				

		ИначеЕсли ЭтаФорма.СтатусДокумента = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.ЗавершающийЭтапСогласования Тогда
				
				
				 Согласующий = ПолучитьСогласующегоПоОснованию(ТекущийОбъект.Основание);
				 
				 Если ЗначениеЗАполнено(Согласующий) Тогда
					 
					ОтправитьСообщенияПользователю(Согласующий,"Согласование заявки на отгрузку "+ТекущийОбъект.Номер + " от "+ Строка(ТекущийОбъект.Дата),"Заявка на отгрузку"+ТекущийОбъект.Номер + " от "+ Строка(ТекущийОбъект.Дата) + " ожидает согласования!");
					
				 КонецЕсли;
				
		ИначеЕсли ЭтаФорма.СтатусДокумента = Перечисления.ttk_СтатусыЗаявокНаОтгрузку.Отказ Тогда 		
			
			
		
		КонецЕсли;

			
	КонецЕсли;
	
		
		
	УстановитьВидимостьДосупность();

КонецПроцедуры


&НаСервере
Процедура ОтправитьСообщенияПользователю(Пользователь,ТемаСообщения,ТекстСообщения)
	
	
	
	ПараметрыСтруктура = Новый Структура;
	ПараметрыСтруктура.Вставить("УчетнаяЗапись", Справочники.УчетныеЗаписиЭлектроннойПочты.НайтиПоКоду("000000001")); //Системная учетная запись
	ПараметрыСтруктура.Вставить("Подписка", Неопределено); 
	ПараметрыСтруктура.Вставить("ТемаСообщения", ТемаСообщения);
	ПараметрыСтруктура.Вставить("ТекстСообщения", ТекстСообщения);
	ПараметрыСтруктура.Вставить("Важность", ВажностьИнтернетПочтовогоСообщения.Высокая);
	ПараметрыСтруктура.Вставить("Ответственный", Пользователь);
	ПараметрыСтруктура.Вставить("ВестиЛогОтправки", ЛОЖЬ);
	ttk_ОбщегоНазначения.ОтправитьУведомленияПользователямНаЭлАдрес(Неопределено, Неопределено, ПараметрыСтруктура);
	


КонецПроцедуры


&НаСервере
Функция ПолучитьРуководителяПодразделения(ПодразделениеОрганизации)
	
	
	Запрос = новый ЗАпрос;
	
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	              |	Пользователи.Ссылка КАК Пользователь
	              |ИЗ
	              |	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	              |			,
	              |			СтруктурнаяЕдиница = &Подразделение
	              |				И ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)) КАК ОтветственныеЛицаОрганизацийСрезПоследних
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Пользователи КАК Пользователи
	              |		ПО ОтветственныеЛицаОрганизацийСрезПоследних.ФизическоеЛицо = Пользователи.ФизЛицо";
	
	Запрос.УстановитьПараметр("Подразделение",ПодразделениеОрганизации);
	
	Выборка =Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Пользователь;
		
	Иначе
		
		Возврат Справочники.Пользователи.ПустаяСсылка();
		
	КонецЕсли;
	
	
КонецФункции

&НаСервере
Функция ПолучитьСогласующегоПоОснованию(Основание)
	
	Запрос = новый ЗАпрос;
	
	Запрос.Текст ="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	              |	ttk_ОтветственныеПоВидамЗаявокНаОтгрузкуСрезПоследних.Ответственный
	              |ИЗ
	              |	РегистрСведений.ttk_ОтветственныеПоВидамЗаявокНаОтгрузку.СрезПоследних(, Основание = &Основание) КАК ttk_ОтветственныеПоВидамЗаявокНаОтгрузкуСрезПоследних";
	
	Запрос.УстановитьПараметр("Основание",Основание);
	
	Выборка =Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		
		Возврат Выборка.Ответственный;
		
	Иначе
		
		Возврат Справочники.Пользователи.ПустаяСсылка();
		
	КонецЕсли;
	
	
КонецФункции

&НаКлиенте
Процедура СтатусДокументаПриИзменении(Элемент)
	
	 УстановитьВидимостьДосупность();
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПередУдалением(Элемент, Отказ)
	
	НачатьТранзакцию();
		
	Попытка
		
		Если ЗначениеЗаполнено(Элемент.ТекущиеДанные.Документ) Тогда
			
			
			Если ТипЗнч(Элемент.ТекущиеДанные.Документ) = Тип("ДокументСсылка.абс_АВИЗО") Тогда
				
				
				Если НЕ Элемент.ТекущиеДанные.Документ.Статус = Перечисления.абс_СтатусыАвизо.Отмена Тогда
					
					
					  Предупреждение("Нельзя удалять строки с документами не в статусе 'Отменен' !");
					  Отказ = Истина;

				Иначе
					
					
					СнятьРезервыПоСтроке(Элемент.ТекущиеДанные);
					
					Предупреждение("Строка удалена, резервы сняты");  
									
				КонецЕсли;
				
			ИначеЕсли	ТипЗнч(Элемент.ТекущиеДанные.Документ) = Тип("ДокументСсылка.ПеремещениеТоваров") Тогда
				
				
				
				Если НЕ Элемент.ТекущиеДанные.Документ.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Отмена Тогда
					
					
					  Предупреждение("Нельзя удалять строки с документами не в статусе 'Отменен' !");
					  Отказ = Истина;

				Иначе
					
					
					СнятьРезервыПоСтроке(Элемент.ТекущиеДанные);
					
					Предупреждение("Строка удалена, резервы сняты");    
					
					
					
				КонецЕсли;

				
				
			Иначе
				
			       Предупреждение("Нельзя удалять строки с документами не в статусе 'Отменен' !");
				   Отказ = Истина;

			КонецЕсли;
			
				
		КонецЕсли;
	
			
	Исключение
		
		Отказ = Истина;
		
		Сообщить(ОписаниеОшибки());
					
		ОтменитьТранзакцию();	
		
	КонецПопытки;
	
  ЗафиксироватьТранзакцию();
		
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПослеУдаления(Элемент)
	
	ЭтаФорма.Записать();

КонецПроцедуры



&НаКлиенте
Процедура СоздатьДокумент(Команда)
	
	СпискоВидовДокументов = новый СписокЗначений;
	
	СпискоВидовДокументов.Добавить("Авизо","Авизо");
	СпискоВидовДокументов.Добавить("Перемещение товаров","Перемещение товаров"); 
	СпискоВидовДокументов.Добавить("Передача товаров","Передача товаров");  

	ВыбЭлемент = СпискоВидовДокументов.ВыбратьЭлемент("Выберите тип создаваемого документа", ВыбЭлемент);
	
	Если ВыбЭлемент = Неопределено Тогда 
	    Сообщить("Не выбран тип документа");
		Возврат;
	Иначе
	    ВыбЗначение = ВыбЭлемент.Значение;
	КонецЕсли;
	
	СоздатьОтмеченныеДокументы(ВыбЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОтмеченныеДокументы(ТипДокумента)
	
	Отбор = новый Структура;
	Отбор.Вставить("Отметка", Истина);
	

	МассивСтрокСОтметкой = Объект.Номенклатура.НайтиСтроки(Отбор);
	
	Если МассивСтрокСОтметкой.Количество() = 0 Тогда
		
		Предупреждение("Необходимо выбрать строки!");
		
		Возврат;
		
	КонецЕсли;
	
	Если ТипДокумента = "Авизо"  Тогда
		
		    НачатьТранзакцию();
			
			СпискоВидовОпераций = новый СписокЗначений;
			
			СпискоВидовОпераций.Добавить("ПередачаМатериалыВНО","Передача материалов, оборудования, вложения в необоротные активы");
			СпискоВидовОпераций.Добавить("ПередачаТоваров","Передача товаров");
		    СпискоВидовОпераций.Добавить("ПередачаМатериалы10_07","Передача по материалов по счетам 10.07, 08.12, 45");
			
			ВыбОперация = СпискоВидовОпераций.ВыбратьЭлемент("Выберите тип операции авизо", ВыбОперация);

			
			Попытка
				
				  	ДокументАвизо = Документы.абс_АВИЗО.СоздатьДокумент();
					ДокументАвизо.Склад = Объект.Склад;
					            	
					ДокументАвизо.ВидОперации		= Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО;
					ДокументАвизо.ВидОперацииТМЦ 	= Перечисления.ВидыОперацийСписаниеТоваров.ТоварыПродукция;
								
					
										
					
					Для Каждого Строка из МассивСтрокСОтметкой Цикл
						
							Если Строка.Отметка=Ложь  Или  ЗначениеЗАполнено(Строка.Документ)Тогда
								
								Продолжить;
								
							КонецЕсли;
							
							НоваяСтрокаТЧ=ДокументАвизо.Товары.Добавить();
								
							НоваяСтрокаТЧ.Номенклатура 						= Строка.Номенклатура; 
							НоваяСтрокаТЧ.ХарактеристикаНоменклатуры 		= Строка.Характеристика; 
							НоваяСтрокаТЧ.СерияНоменклатуры 				= Строка.СерияНоменклатуры; 
							НоваяСтрокаТЧ.Качество 							= Справочники.Качество.Новый; 
							
							НоваяСтрокаТЧ.ЕдиницаИзмерения 					= Строка.Номенклатура.ЕдиницаХраненияОстатков;
							НоваяСтрокаТЧ.Коэффициент      					= НоваяСтрокаТЧ.ЕдиницаИзмерения.Коэффициент;
							НоваяСтрокаТЧ.ЕдиницаИзмеренияМест    		    = Строка.Номенклатура.ЕдиницаИзмеренияМест;

							НоваяСтрокаТЧ.Количество		 				= Строка.Количество; 
							
							НоваяСтрокаТЧ.ДокументРезерва 					= Объект.ЗаказПокупателя; 
							НоваяСтрокаТЧ.ДокументРезерваСтрока 			= Строка(НоваяСтрокаТЧ.ДокументРезерва);	
							
							ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрокаТЧ, ДокументАвизо);

							Если Объект.Склад.ВидСклада = Перечисления.ВидыСкладов.НТТ Тогда

								НоваяСтрокаТЧ.Цена = Строка.Цена;
								ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрокаТЧ, ДокументАвизо);

							КонецЕсли;
							
							СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары",НоваяСтрокаТЧ, ДокументАвизо, Истина, Истина);

					КонецЦикла;		

				    ФормаДок = ДокументАвизо.ПолучитьФорму();
					
					ФормаДок.УстановитьОперациюДляЗаявкиНаОтгрузку(ВыбОперация.Значение);
					
					ФормаДок.ОткрытьМодально();
					
					Если НЕ ДокументАвизо.Ссылка.Пустая() Тогда
						
							Для Каждого Строка из Объект.Номенклатура Цикл
						
								Если Строка.Отметка=Ложь  Или  ЗначениеЗАполнено(Строка.Документ)Тогда
									
									Продолжить;
									
								КонецЕсли;
								
								
								Строка.Документ = ДокументАвизо.Ссылка;
								
							КонецЦикла;
							
							
					КонецЕсли;

					ЭтаФорма.Записать();
					
			Исключение
				
					Сообщить(ОписаниеОшибки());
					
					ОтменитьТранзакцию();
					
			КонецПопытки;
			
			ЗафиксироватьТранзакцию();
	//+++ 2017.05.31 Гущина
	ИначеЕсли ТипДокумента = "Перемещение товаров"  Тогда  
		
		    НачатьТранзакцию();
			
			Попытка
				
				  	ДокументПеремещение                  =  Документы.ПеремещениеТоваров.СоздатьДокумент();
					ДокументПеремещение.СкладОтправитель =  Объект.Склад;
					            	
					ДокументПеремещение.ВидОперации		 =  Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
					ДокументПеремещение.Организация		 =  Объект.Организация;			
					
					Для Каждого Строка из МассивСтрокСОтметкой Цикл
						
							Если Строка.Отметка=Ложь  Или  ЗначениеЗАполнено(Строка.Документ)Тогда
								
								Продолжить;
								
							КонецЕсли;
							
							НоваяСтрокаТЧ=ДокументПеремещение.Товары.Добавить();
								
							НоваяСтрокаТЧ.Номенклатура 						= Строка.Номенклатура; 
							НоваяСтрокаТЧ.ХарактеристикаНоменклатуры 		= Строка.Характеристика; 
							НоваяСтрокаТЧ.СерияНоменклатуры 				= Строка.СерияНоменклатуры; 
							НоваяСтрокаТЧ.Качество 							= Справочники.Качество.Новый; 
							
							НоваяСтрокаТЧ.ЕдиницаИзмерения 					= Строка.Номенклатура.ЕдиницаХраненияОстатков;
							НоваяСтрокаТЧ.Коэффициент      					= НоваяСтрокаТЧ.ЕдиницаИзмерения.Коэффициент;
							НоваяСтрокаТЧ.ЕдиницаИзмеренияМест    		    = Строка.Номенклатура.ЕдиницаИзмеренияМест;

							НоваяСтрокаТЧ.Количество		 				= Строка.Количество; 
							
							НоваяСтрокаТЧ.ДокументРезерва 					= Объект.ЗаказПокупателя; 
							
							ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрокаТЧ, ДокументПеремещение);

							Если Объект.Склад.ВидСклада = Перечисления.ВидыСкладов.НТТ Тогда

								НоваяСтрокаТЧ.Цена = Строка.Цена;
								ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрокаТЧ, ДокументПеремещение);

							КонецЕсли;
							
							СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары",НоваяСтрокаТЧ, ДокументПеремещение, Истина, Истина);

					КонецЦикла;		

				    ДокументПеремещение.ПолучитьФорму().ОткрытьМодально();
					
					Если НЕ ДокументПеремещение.Ссылка.Пустая() Тогда
						
							Для Каждого Строка из Объект.Номенклатура Цикл
						
								Если Строка.Отметка=Ложь  Или  ЗначениеЗАполнено(Строка.Документ)Тогда
									
									Продолжить;
									
								КонецЕсли;
								
								
								Строка.Документ = ДокументПеремещение.Ссылка;
								
							КонецЦикла;
							
							
					КонецЕсли;

					ЭтаФорма.Записать();
					
			Исключение
				
					Сообщить(ОписаниеОшибки());
					
					ОтменитьТранзакцию();
					
			КонецПопытки;
			
			ЗафиксироватьТранзакцию();
	
		// --- 2017.05.31 Гущина 	
		
		
	ИначеЕсли ТипДокумента = "Передача товаров"  Тогда  
		
		    НачатьТранзакцию();
			
			Попытка
				
				  	ДокументПередачаТоваров                 =  Документы.ПередачаТоваров.СоздатьДокумент();
					ДокументПередачаТоваров.Склад 			=  Объект.Склад;
					            	
					ДокументПередачаТоваров.Организация		 =  Объект.Организация;	
					
					
					Для Каждого Строка из МассивСтрокСОтметкой Цикл
						
							Если Строка.Отметка=Ложь  Или  ЗначениеЗАполнено(Строка.Документ)Тогда
								
								Продолжить;
								
							КонецЕсли;
							
							НоваяСтрокаТЧ=ДокументПередачаТоваров.Товары.Добавить();
								
							НоваяСтрокаТЧ.Номенклатура 						= Строка.Номенклатура; 
							НоваяСтрокаТЧ.ХарактеристикаНоменклатуры 		= Строка.Характеристика; 
							НоваяСтрокаТЧ.СерияНоменклатуры 				= Строка.СерияНоменклатуры; 
							НоваяСтрокаТЧ.Качество 							= Справочники.Качество.Новый; 
							
							НоваяСтрокаТЧ.ЕдиницаИзмерения 					= Строка.Номенклатура.ЕдиницаХраненияОстатков;
							НоваяСтрокаТЧ.Коэффициент      					= НоваяСтрокаТЧ.ЕдиницаИзмерения.Коэффициент;
							НоваяСтрокаТЧ.ЕдиницаИзмеренияМест    		    = Строка.Номенклатура.ЕдиницаИзмеренияМест;

							НоваяСтрокаТЧ.Количество		 				= Строка.Количество; 
							
							НоваяСтрокаТЧ.ДокументРезерва 					= Объект.ЗаказПокупателя; 
							
							ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрокаТЧ, ДокументПередачаТоваров);

							Если Объект.Склад.ВидСклада = Перечисления.ВидыСкладов.НТТ Тогда

								НоваяСтрокаТЧ.Цена = Строка.Цена;
								ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрокаТЧ, ДокументПередачаТоваров);

							КонецЕсли;
							
							СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары",НоваяСтрокаТЧ, ДокументПередачаТоваров, Истина, Истина);

					КонецЦикла;		

				    ДокументПередачаТоваров.ПолучитьФорму().ОткрытьМодально();
					
					Если НЕ ДокументПередачаТоваров.Ссылка.Пустая() Тогда
						
							Для Каждого Строка из Объект.Номенклатура Цикл
						
								Если Строка.Отметка=Ложь  Или  ЗначениеЗАполнено(Строка.Документ)Тогда
									
									Продолжить;
									
								КонецЕсли;
								
								
								Строка.Документ = ДокументПередачаТоваров.Ссылка;
								
							КонецЦикла;
							
							
					КонецЕсли;

					ЭтаФорма.Записать();
					
			Исключение
				
					Сообщить(ОписаниеОшибки());
					
					ОтменитьТранзакцию();
					
			КонецПопытки;
			
			ЗафиксироватьТранзакцию();
	
			
	
			
	КонецЕсли;
		

	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураОтметкаПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Элемент.Родитель.ТекущиеДанные.Документ) Тогда
		
		Элемент.Родитель.ТекущиеДанные.Отметка = Ложь;
		
		Сообщить("Нельзя ставить отметку в строке где документ уже создан!");
		
		
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НоменклатураПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Копирование Тогда
		
		Элемент.ТекущиеДанные.Документ=Неопределено;
		
	КонецЕсли; 
 
КонецПроцедуры

&НаКлиенте
Процедура СнятьРезервыПоСтроке(Строка)
	
  	ДокОбъект = Документы.ttk_ФормированиеРезерва.СоздатьДокумент();

	ДокОбъект.ВидОперации =		Перечисления.ttk_ФормированиеРезерваВидОперации.СнятиеРезерва;

	ДокОбъект.Дата = ТекущаяДата();

	ДокОбъект.Заказ = Объект.ЗаказПокупателя;

	ДокОбъект.Комментарий = "Автоматическое снятие резерва по заявке на отгрузку  " + Объект.Номер + " от "+ Строка(Объект.Дата);
	
	ДокОбъект.Ответственный  = глЗначениеПеременной("глТекущийПользователь");
					
						
	НоваяСтрокаНоменклатура 					=  ДокОбъект.Номенклатура.Добавить();

	НоваяСтрокаНоменклатура.Номенклатура 		= Строка.Номенклатура;

	НоваяСтрокаНоменклатура.Характеристика 		=  Строка.Характеристика;

	НоваяСтрокаНоменклатура.СерияНоменклатуры	=  Строка.СерияНоменклатуры;


	НоваяСтрокаНоменклатура.Количество 			 =   Строка.Количество;
				
    ДокОбъект.Склад								 =  Объект.Склад;
	
	ДокОбъект.Записать(РежимЗаписиДокумента.Проведение);
																								
КонецПроцедуры

