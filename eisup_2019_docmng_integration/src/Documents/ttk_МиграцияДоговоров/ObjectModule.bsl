
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если Статус = Перечисления.ttk_СтатусыМиграцииДоговоров.Выполнено Тогда
		
		НаборЗаписей = РегистрыСведений.ttk_МиграцияДоговоров.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Документ.Установить(Ссылка); 
		НаборЗаписей.Прочитать(); 
		НаборЗаписей.Очистить();
		
		Для Каждого СтрТЧ Из РеестрДоговоров Цикл
			
			Если ЗначениеЗаполнено(СтрТЧ.Контрагент) И
				ЗначениеЗаполнено(СтрТЧ.Договор) И
				ЗначениеЗаполнено(СтрТЧ.ДоговорПриемник) Тогда
				
				НоваяЗапись = НаборЗаписей.Добавить(); 
				НоваяЗапись.Дата            = НачалоМесяца(ДатаПереносаОстатков);
				НоваяЗапись.Документ        = Ссылка;
				НоваяЗапись.Ответственный   = Ответственный;
				
				НоваяЗапись.ДоговорИсточник = СтрТЧ.Договор;
				НоваяЗапись.ДоговорПриемник = СтрТЧ.ДоговорПриемник;
			Иначе
				Отказ = Истина;
			КонецЕсли;
			
		КонецЦикла;
		НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияПередающая) Тогда
		Сообщить("Не заполнена передающая организация");
		Отказ = Истина;
	КонецЕсли;	
	
	Если НЕ ЗначениеЗаполнено(ОрганизацияПринимающая) Тогда
		Сообщить("Не заполнена принимающая организация");
		Отказ = Истина;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДатаПереносаОстатков) Тогда
		Сообщить("Не заполнена дата ввода остатков");
		Отказ = Истина;
	КонецЕсли;
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Для Каждого СтрТЧ ИЗ РеестрДоговоров Цикл
			Если НЕ ЗначениеЗаполнено(СтрТЧ.Договор) Тогда
				Сообщить("В строке " + СтрТЧ.НомерСтроки + " не заполнен договор источник! Заполните");	
				Отказ = Истина;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрТЧ.ДоговорПриемник) Тогда
				Сообщить("В строке " + СтрТЧ.НомерСтроки + " не заполнен договор Приемник! Заполните");	
				Отказ = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	НаборЗаписей = РегистрыСведений.ttk_МиграцияДоговоров.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Документ.Установить(Ссылка); 
	НаборЗаписей.Прочитать(); 
	НаборЗаписей.Очистить();
	НаборЗаписей.Записать();
КонецПроцедуры

Процедура ЗаписатьНовыйСтатус(НовыйСтатус, Комментарий = Неопределено, ИмяПользователя = "") Экспорт
	
	// АБС Новоселов+ вставка Может передаваться имя пользователя ИСУЗК
	Если ЗначениеЗаполнено(ИмяПользователя) Тогда 
		ТекПользователь = Справочники.Пользователи.НайтиПоКоду(ИмяПользователя);
		Если Не ЗначениеЗаполнено(ТекПользователь) Тогда 
			ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
		КонецЕсли;
	Иначе// АБС Новоселов-	
		ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.ttk_ИзменениеСтатусовМиграцииДоговоров.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ДокументМиграцииДоговоров.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();

	Запись.ДокументМиграцииДоговоров = Ссылка;
	Запись.Пользователь 			 = ТекПользователь;	
	Запись.Статус					 = НовыйСтатус;
	
	Запись.Комментарий 				 = Комментарий;
	
	ОтветственныйСотрудник = абс_БизнесПроцессы.ПолучитьСотрудникаПользователя(ТекПользователь);
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;

	Попытка 	
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусМиграцииДоговоровПоРегистру(Ссылка);	
		Если НЕ Статус = СтатусПоРегистру Тогда
			ЗаписатьНовыйСтатус(Статус, ""); // абс_ПричинаИзмененияСтатуса); Лапин Закоментил, все равно причин никто не вводит почти
		КонецЕсли;                                                                                		
	Исключение
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при записи документа: " + ОписаниеОшибки() + ".", Отказ);		
		Возврат;    		
	КонецПопытки;		
	
КонецПроцедуры

