
////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

// В процедуре выполняется контроль заполнения необходимых полей табличной части
// "СоставОС"
//
// Вызывается из обработчика проведения
//
Процедура ПроверитьТабличнуюЧасть(СообщениеОбОшибках = "")
	
	Для Каждого ТекСтрока Из СоставОС Цикл
		Если ЗначениеЗаполнено(ТекСтрока.КоличествоУдалить) Тогда
			Если ЗначениеЗаполнено(ТекСтрока.КоличествоДобавить) Тогда  // 1. замена
				Если Не ЗначениеЗаполнено(ТекСтрока.НоменклатураТекущая) ИЛИ Не ЗначениеЗаполнено(ТекСтрока.НоменклатураЗаменяющая) Тогда
					СообщениеОбОшибках = СообщениеОбОшибках + " В строке №" + СокрЛП(ТекСтрока.НомерСтроки) + " не указана удаляемая (текущая) или добавляемая (заменяющая) номенклатура." + Символы.ПС;
				КонецЕсли;
			Иначе 														// 2. удаление
				Если Не ЗначениеЗаполнено(ТекСтрока.НоменклатураТекущая) Тогда
					СообщениеОбОшибках = СообщениеОбОшибках + " В строке №" + СокрЛП(ТекСтрока.НомерСтроки) + " не указана удаляемая номенклатура (текущая)." + Символы.ПС;
				КонецЕсли;
			КонецЕсли;			
		ИначеЕсли ЗначениеЗаполнено(ТекСтрока.КоличествоДобавить) Тогда // 3. добавление
			Если Не ЗначениеЗаполнено(ТекСтрока.НоменклатураЗаменяющая) Тогда
				СообщениеОбОшибках = СообщениеОбОшибках + " В строке №" + СокрЛП(ТекСтрока.НомерСтроки) + " не указана добавляемая номенклатура (заменяющая)." + Символы.ПС;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// В процедуре выполняется проверка на наличие в табличной части номенклатур текущих или заменяющих,
// являющихся услугами
//
// Параметры:
//			Отказ - Булево - признак отказа от проведения документа
//			Заголовок - строка - представление документа при проведении
//
Процедура ПроверитьЧтоНетУслуг(Отказ, Заголовок)
	
	// Цикл по строкам табличной части документа.
	ПредставлениеТабличнойЧасти = ЭтотОбъект.Метаданные().ТабличныеЧасти.СоставОС.Представление();
	Для каждого СтрокаТаблицы Из СоставОС Цикл
		Если СтрокаТаблицы.НоменклатураТекущая.Услуга И ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураТекущая) Тогда   
			ТекстОшибки = НСтр("ru = 'В строке номер ""%НомерСтроки%"" табличной части ""%ПредставлениеТабличнойЧасти%"": в качестве номенклатуры текущей указана услуга. Услуг здесь быть не должно!'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
			
			ТекстПоля = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДляВыдачиСообщенийПоСтрокеТЧ("СоставОС", СтрокаТаблицы.НомерСтроки, "НоменклатураТекущая");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля,, Отказ);
		КонецЕсли;
		Если СтрокаТаблицы.НоменклатураЗаменяющая.Услуга И ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураЗаменяющая) Тогда   
			ТекстОшибки = НСтр("ru = 'В строке номер ""%НомерСтроки%"" табличной части ""%ПредставлениеТабличнойЧасти%"": в качестве номенклатуры заменяющей указана услуга. Услуг здесь быть не должно!'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
			
			ТекстПоля = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДляВыдачиСообщенийПоСтрокеТЧ("СоставОС", СтрокаТаблицы.НомерСтроки, "НоменклатураЗаменяющая");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// В процедуре выполняется проверка на наличие в табличной части номенклатур текущих или заменяющих,
// являющихся наборами
//
// Параметры:
//			Отказ - Булево - признак отказа от проведения документа
//			Заголовок - строка - представление документа при проведении
//
Процедура ПроверитьЧтоНетНаборов(Отказ, Заголовок)
	
	// Цикл по строкам табличной части документа.
	ПредставлениеТабличнойЧасти = ЭтотОбъект.Метаданные().ТабличныеЧасти.СоставОС.Представление();
	Для каждого СтрокаТаблицы Из СоставОС Цикл
		Если СтрокаТаблицы.НоменклатураТекущая.Набор И ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураТекущая) Тогда   
			ТекстОшибки = НСтр("ru = 'В строке номер ""%НомерСтроки%"" табличной части ""%ПредставлениеТабличнойЧасти%"": в качестве номенклатуры текущей указан набор-пакет. Наборов-пакетов здесь быть не должно!'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
			
			ТекстПоля = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДляВыдачиСообщенийПоСтрокеТЧ("СоставОС", СтрокаТаблицы.НомерСтроки, "НоменклатураТекущая");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля,, Отказ);
		КонецЕсли;
		Если СтрокаТаблицы.НоменклатураЗаменяющая.Набор И ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураЗаменяющая) Тогда   
			ТекстОшибки = НСтр("ru = 'В строке номер ""%НомерСтроки%"" табличной части ""%ПредставлениеТабличнойЧасти%"": в качестве номенклатуры заменяющей указан набор-пакет. Наборов-пакетов здесь быть не должно!'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
			
			ТекстПоля = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДляВыдачиСообщенийПоСтрокеТЧ("СоставОС", СтрокаТаблицы.НомерСтроки, "НоменклатураЗаменяющая");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// В процедуре выполняется проверка на наличие в табличной части номенклатур текущих или заменяющих,
// являющихся комплектами
//
// Параметры:
//			Отказ - Булево - признак отказа от проведения документа
//			Заголовок - строка - представление документа при проведении
//
Процедура ПроверитьЧтоНетКомплектов(Отказ, Заголовок)
	
	// Цикл по строкам табличной части документа.
	ПредставлениеТабличнойЧасти = ЭтотОбъект.Метаданные().ТабличныеЧасти.СоставОС.Представление();
	Для каждого СтрокаТаблицы Из СоставОС Цикл
		Если СтрокаТаблицы.НоменклатураТекущая.Комплект И ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураТекущая) Тогда   
			ТекстОшибки = НСтр("ru = 'В строке номер ""%НомерСтроки%"" табличной части ""%ПредставлениеТабличнойЧасти%"": в качестве номенклатуры текущей указан набор-комплект. Наборов-комплектов здесь быть не должно!'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
			
			ТекстПоля = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДляВыдачиСообщенийПоСтрокеТЧ("СоставОС", СтрокаТаблицы.НомерСтроки, "НоменклатураТекущая");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля,, Отказ);
		КонецЕсли;
		Если СтрокаТаблицы.НоменклатураЗаменяющая.Комплект И ЗначениеЗаполнено(СтрокаТаблицы.НоменклатураЗаменяющая) Тогда   
			ТекстОшибки = НСтр("ru = 'В строке номер ""%НомерСтроки%"" табличной части ""%ПредставлениеТабличнойЧасти%"": в качестве номенклатуры заменяющей указан набор-копмлект. Наборов-комплектов здесь быть не должно!'");
			
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%НомерСтроки%", СтрокаТаблицы.НомерСтроки);
			ТекстОшибки = СтрЗаменить(ТекстОшибки, "%ПредставлениеТабличнойЧасти%", ПредставлениеТабличнойЧасти);
			
			ТекстПоля = ОбщегоНазначенияКлиентСервер.ПолучитьТекстДляВыдачиСообщенийПоСтрокеТЧ("СоставОС", СтрокаТаблицы.НомерСтроки, "НоменклатураЗаменяющая");
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки, ЭтотОбъект, ТекстПоля,, Отказ);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

// Процедура вызывается при проведении документа
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// проверим заполнение документа
	Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	Если Не ЗначениеЗаполнено(ВнеоборотныйАктив) Тогда
		Отказ = Истина;
		#Если Клиент Тогда
			Сообщить("Не указан внеоборотный актив! Документ не проведен.", СтатусСообщения.Важное);
		#КонецЕсли
		Возврат;
	КонецЕсли;
	
	СообщениеОбОшибках = "";
	ПроверитьТабличнуюЧасть(СообщениеОбошибках);
	Если СообщениеОбОшибках <> "" Тогда
		#Если Клиент Тогда
			Сообщить(СообщениеОбОшибках, СтатусСообщения.Важное);
		#КонецЕсли
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	// проверим, чтобы в табличной части не было услуг, наборов и комплектов
	ПроверитьЧтоНетУслуг(Отказ, Заголовок);
	ПроверитьЧтоНетНаборов(Отказ, Заголовок);
	ПроверитьЧтоНетКомплектов(Отказ, Заголовок);
	
	Если Не Отказ Тогда
		// теперь соберем данные для проверки остатков и формирования движений
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	ас_ИзменениеСоставаОССоставОС.НоменклатураТекущая КАК НоменклатураТекущая,
		               |	ас_ИзменениеСоставаОССоставОС.ХарактеристикаНоменклатурыТекущая КАК ХарактеристикаНоменклатурыТекущая,
		               |	ас_ИзменениеСоставаОССоставОС.СерияНоменклатурыТекущая КАК СерияНоменклатурыТекущая,
		               |	ас_ИзменениеСоставаОССоставОС.НоменклатураЗаменяющая КАК НоменклатураЗаменяющая,
		               |	ас_ИзменениеСоставаОССоставОС.ХарактеристикаНоменклатурыЗаменяющая КАК ХарактеристикаНоменклатурыЗаменяющая,
		               |	ас_ИзменениеСоставаОССоставОС.СерияНоменклатурыЗаменяющая КАК СерияНоменклатурыЗаменяющая,
		               |	СУММА(ас_ИзменениеСоставаОССоставОС.КоличествоУдалить * ВЫБОР
		               |			КОГДА ас_ИзменениеСоставаОССоставОС.КоэффициентТекущий = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ас_ИзменениеСоставаОССоставОС.КоэффициентТекущий
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(ас_ИзменениеСоставаОССоставОС.НоменклатураТекущая.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ас_ИзменениеСоставаОССоставОС.НоменклатураТекущая.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК КоличествоУдалить,
		               |	СУММА(ас_ИзменениеСоставаОССоставОС.КоличествоДобавить * ВЫБОР
		               |			КОГДА ас_ИзменениеСоставаОССоставОС.КоэффициентЗаменяющий = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ас_ИзменениеСоставаОССоставОС.КоэффициентЗаменяющий
		               |		КОНЕЦ / ВЫБОР
		               |			КОГДА ЕСТЬNULL(ас_ИзменениеСоставаОССоставОС.НоменклатураЗаменяющая.ЕдиницаХраненияОстатков.Коэффициент, 0) = 0
		               |				ТОГДА 1
		               |			ИНАЧЕ ас_ИзменениеСоставаОССоставОС.НоменклатураЗаменяющая.ЕдиницаХраненияОстатков.Коэффициент
		               |		КОНЕЦ) КАК КоличествоДобавить,
		               |	СУММА(ас_ИзменениеСоставаОССоставОС.СуммаУдалить) КАК СуммаУдалить,
		               |	СУММА(ас_ИзменениеСоставаОССоставОС.СуммаДобавить) КАК СуммаДобавить
		               |ПОМЕСТИТЬ ДанныеДокумента
		               |ИЗ
		               |	Документ.абс_ИзменениеСоставаОС.СоставОС КАК ас_ИзменениеСоставаОССоставОС
		               |ГДЕ
		               |	ас_ИзменениеСоставаОССоставОС.Ссылка = &Ссылка
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ас_ИзменениеСоставаОССоставОС.ХарактеристикаНоменклатурыЗаменяющая,
		               |	ас_ИзменениеСоставаОССоставОС.НоменклатураЗаменяющая,
		               |	ас_ИзменениеСоставаОССоставОС.СерияНоменклатурыТекущая,
		               |	ас_ИзменениеСоставаОССоставОС.НоменклатураТекущая,
		               |	ас_ИзменениеСоставаОССоставОС.ХарактеристикаНоменклатурыТекущая,
		               |	ас_ИзменениеСоставаОССоставОС.СерияНоменклатурыЗаменяющая
		               |;
		               |
		               |////////////////////////////////////////////////////////////////////////////////
		               |ВЫБРАТЬ
		               |	ДанныеДокумента.НоменклатураТекущая,
		               |	ДанныеДокумента.ХарактеристикаНоменклатурыТекущая,
		               |	ДанныеДокумента.СерияНоменклатурыТекущая,
		               |	ДанныеДокумента.КоличествоУдалить,
		               |	ДанныеДокумента.НоменклатураЗаменяющая,
		               |	ДанныеДокумента.ХарактеристикаНоменклатурыЗаменяющая,
		               |	ДанныеДокумента.СерияНоменклатурыЗаменяющая,
		               |	ДанныеДокумента.КоличествоДобавить,
		               |	ЕСТЬNULL(ас_НоменклатураВОСОстатки.КоличествоОстаток, 0) КАК КоличествоОстатокТекущий,
		               |	ДанныеДокумента.СуммаДобавить,
		               |	ЕСТЬNULL(ас_НоменклатураВОСОстатки.СуммаОстаток, 0) КАК СуммаОстатокТекущий,
		               |	ДанныеДокумента.СуммаУдалить
		               |ИЗ
		               |	ДанныеДокумента КАК ДанныеДокумента
		               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.абс_СоставОС.Остатки(
		               |				&Период,
		               |				ВнеоборотныйАктив = &ОС
		               |					И Номенклатура В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.НоменклатураТекущая
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И ХарактеристикаНоменклатуры В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.ХарактеристикаНоменклатурыТекущая
		               |						ИЗ
		               |							ДанныеДокумента)
		               |					И СерияНоменклатуры В
		               |						(ВЫБРАТЬ
		               |							ДанныеДокумента.СерияНоменклатурыТекущая
		               |						ИЗ
		               |							ДанныеДокумента)) КАК ас_НоменклатураВОСОстатки
		               |		ПО ДанныеДокумента.НоменклатураТекущая = ас_НоменклатураВОСОстатки.Номенклатура
		               |			И ДанныеДокумента.ХарактеристикаНоменклатурыТекущая = ас_НоменклатураВОСОстатки.ХарактеристикаНоменклатуры
		               |			И ДанныеДокумента.СерияНоменклатурыТекущая = ас_НоменклатураВОСОстатки.СерияНоменклатуры
		               |
		               |ДЛЯ ИЗМЕНЕНИЯ";
		
		СообщенияОбОшибках = "";
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("ОС", ВнеоборотныйАктив);
		Запрос.УстановитьПараметр("Период", ЭтотОбъект.МоментВремени());
		Результат = Запрос.Выполнить();
		ТзРезультатДляКонтроля = Результат.Выгрузить();
		Выборка = Результат.Выбрать();
		
		// сначала проконтролируем, чтобы не пытались списать лишнее
		ТзРезультатДляКонтроля.Свернуть("НоменклатураТекущая, ХарактеристикаНоменклатурыТекущая, СерияНоменклатурыТекущая, КоличествоОстатокТекущий", "КоличествоУдалить");
		Для Каждого ТекСтрока Из ТзРезультатДляКонтроля Цикл
			Если ТекСтрока.КоличествоОстатокТекущий < ТекСтрока.КоличествоУдалить Тогда
				Отказ = Истина;
				СообщенияОбОшибках = СообщенияОбОшибках + 
				" Попытка исключить из состава внеоборотного актива номенклатуру сверх остатка! " + Символы.ПС + " - " + СокрЛП(ТекСтрока.НоменклатураТекущая)
				+ " хар-ка: <" + СокрЛП(ТекСтрока.ХарактеристикаНоменклатурыТекущая) + "> серия: <" + СокрЛП(ТекСтрока.СерияНоменклатурыТекущая) + "> ." + Символы.ПС
				+ " Остаток в составе: " + СокрЛП(ТекСтрока.КоличествоОстатокТекущий) + ", исключаемое кол-во: " + СокрЛП(ТекСтрока.КоличествоУдалить) + "." + Символы.ПС;
			КонецЕсли;
		КонецЦикла;
		
		#Если Клиент Тогда
			Если СообщенияОбОшибках <> "" Тогда
				Сообщить("Ошибка при проведении документа!", СтатусСообщения.Важное);
				Сообщить(СообщенияОбОшибках);
			КонецЕсли;			
		#КонецЕсли
		
		Форма = ЭтотОбъект.ПолучитьФорму();
		Если Форма <> Неопределено И Форма.Модифицированность Тогда
			Форма.Модифицированность = Ложь;
		КонецЕсли;
		
		Если Не Отказ Тогда
			// движения
			Пока Выборка.Следующий() Цикл
				Если Выборка.КоличествоУдалить <> 0 Тогда // расход
					Движение = Движения.абс_СоставОС.Добавить();
					Движение.Период = Дата;
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Номенклатура = Выборка.НоменклатураТекущая;
					Движение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатурыТекущая;
					Движение.СерияНоменклатуры = Выборка.СерияНоменклатурыТекущая;
					Движение.ВнеоборотныйАктив = ВнеоборотныйАктив;
					Движение.Количество = Выборка.КоличествоУдалить;
					Движение.Сумма = Выборка.СуммаУдалить;
				КонецЕсли;
				Если Выборка.КоличествоДобавить <> 0 Тогда // приход
					Движение = Движения.абс_СоставОС.Добавить();
					Движение.Период = Дата;
					Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
					Движение.Номенклатура = Выборка.НоменклатураЗаменяющая;
					Движение.ХарактеристикаНоменклатуры = Выборка.ХарактеристикаНоменклатурыЗаменяющая;
					Движение.СерияНоменклатуры = Выборка.СерияНоменклатурыЗаменяющая;
					Движение.ВнеоборотныйАктив = ВнеоборотныйАктив;
					Движение.Количество = Выборка.КоличествоДобавить;
					Движение.Сумма = Выборка.СуммаДобавить;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры