
&НаКлиенте
Функция ПеременнаяСодержитСвойство(Переменная, ИмяСвойства)
	
	// Инициализируем структуру для теста с ключом (значение переменной "ИмяСвойства") и значением NULL
	СтруктураПроверка = Новый Структура;
	СтруктураПроверка.Вставить(ИмяСвойства, NULL);
	
	// Заполняем созданную структуру из переданного значения переменной
	ЗаполнитьЗначенияСвойств(СтруктураПроверка, Переменная);
	
	// Если значение для свойства структуры осталось NULL, то искомое свойство не найдено, и наоборот.
	Если СтруктураПроверка[ИмяСвойства] = NULL Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура УстановитьТолькоПросмотрВсемЭлементам(мТолькоПросмотр = Истина)

	Для Каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ДекорацияФормы") Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			Элемент.ТолькоПросмотр = мТолькоПросмотр;
		Исключение
			Элемент.Доступность = Не мТолькоПросмотр;						
		КонецПопытки;
	КонецЦикла;
    Элементы.Ответственный.ТолькоПросмотр = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыНаСервере()
	
	ИсторияСогласования.Параметры.УстановитьЗначениеПараметра("Дт", ТекущаяДата());
	ИсторияСогласования.Параметры.УстановитьЗначениеПараметра("СсылкаНаДокумент", Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимость()
	
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"));	
	
	УстановитьТолькоПросмотрВсемЭлементам();
	Если мСтатус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПервичныхДокументов.Подготовка") Тогда
		УстановитьТолькоПросмотрВсемЭлементам(Ложь);
	ИначеЕсли мСтатус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПервичныхДокументов.СогласованиеОФК") Тогда
		Если (Не мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеДЭФ) = Неопределено Или
				Не мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено) Тогда
			УстановитьТолькоПросмотрВсемЭлементам(Ложь);
		КонецЕсли;
	Иначе			
		УстановитьТолькоПросмотрВсемЭлементам(Ложь);
	КонецЕсли;		
	
КонецПроцедуры	

&НаСервере
Процедура ЗаполнитьСтатусыДокументаНаСервере()

	Документы.ttk_УстановкаСоответствияНоменклатурыБюджетнымАналитикам.ЗаполнитьСписокДоступныхСтатусов(Элементы.мСтатус.СписокВыбора, Объект.Ссылка);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСтатусыДокументаНаСервере();
	мСтатус = Объект.Статус;
	//ТекущаяОрганизация = Объект.Организация;
	ОбновитьВидимость();
	//Если ЭтоНовый Тогда
	//	кмдЗаполнить(Элементы.ФормакмдЗаполнить);
	//КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЭтоНовый = (Параметры.Ключ.Пустая() И Параметры.ЗначениеКопирования.Пустая());	
	УстановитьПараметрыНаСервере();	
	вСтатус = Объект.Статус;	
	
КонецПроцедуры

&НаКлиенте
Процедура мСтатусПриИзменении(Элемент)
	
	Объект.Статус = мСтатус;	
	ЗаполнитьСтатусыДокументаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ОбновитьВидимость();
	УстановитьПараметрыНаСервере();
	Элементы.ИсторияСогласования.Обновить();
	ЗаполнитьСтатусыДокументаНаСервере();
	ОбновитьОтображениеДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Если вСтатус <> Объект.Статус Тогда
		ПричинаИзмененияСтатуса = "";
		Если ВвестиСтроку(ПричинаИзмененияСтатуса, "Укажите причину изменения статуса.", , Истина) Тогда
			Объект.ПричинаИзмененияСтатуса = ПричинаИзмененияСтатуса;
		Иначе 
			мСтатус = вСтатус;
		КонецЕсли;
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	
	ЗапролнитьНастройкиНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ЗапролнитьНастройкиНаСервере()
	
	Объект.ОтражениеСтатейБюджетаПланаПлатежей.Загрузить(Документы.ttk_ОтражениеСтатейБюджетаВРазделыПланаПлатежей.ПолучитьТекущиеНастройкиПланаПлатежей(Объект.Дата));
	
КонецПроцедуры