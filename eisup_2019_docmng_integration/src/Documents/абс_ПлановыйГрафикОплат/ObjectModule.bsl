Перем мВалютаРегламентированногоУчета Экспорт;

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	СтруктураКурсДоговора = МодульВалютногоУчета.ПолучитьКурсВалюты(ДоговорКонтрагента.ВалютаВзаиморасчетов, Дата);
	СтруктураКурсРегл = МодульВалютногоУчета.ПолучитьКурсВалюты(мВалютаРегламентированногоУчета, Дата);
	
	// регистр абс_УсловияОплатыПоДоговорам
	Движения.абс_УсловияОплатыПоДоговорам.Записывать = Истина;
	Движения.абс_УсловияОплатыПоДоговорам.Очистить();
	
	Для Каждого ТекСтрокаАвансы Из Оплаты Цикл
		Если ТекСтрокаАвансы.Сумма=0 И НЕ ТекСтрокаАвансы.ДвиженияПоНулевымСуммам И НЕ ДвиженияПоНулевымСуммам Тогда 
			Продолжить;
		КонецЕсли;
		
		//проверка записи движения за день этого документа
		//ПлановыйГрафикЗаЭтотДень = абс_СерверныеФункции.НайтиПлановыйГрафик(ДоговорКонтрагента, Проект, Новый Структура("УсловиеОплаты, ОперативныеДанные", УсловиеОплаты, ОперативныеДанные), НачалоМесяца(ТекСтрокаАвансы.ПериодРегистрации), Дата);
		//Если НЕ ПлановыйГрафикЗаЭтотДень = Неопределено Тогда
		//	Сообщить("По строке №"+Строка(ТекСтрокаАвансы.НомерСтроки)+" для периода регистрации """+Формат(НачалоМесяца(ТекСтрокаАвансы.ПериодРегистрации),"ДФ='ММММ гггг'")+""" уже существует документ Плановый График: """+Строка(ПлановыйГрафикЗаЭтотДень)+""" !", СтатусСообщения.Внимание);
		//	Отказ = Истина;
		//	Возврат;
		//КонецЕсли;
		
		Движение = Движения.абс_УсловияОплатыПоДоговорам.Добавить();
		Движение.Период = НачалоДня(Дата);
		Движение.ДоговорКонтрагента = ДоговорКонтрагента;
		Движение.Проект = Проект;
		Движение.ПериодРегистрации = НачалоМесяца(ТекСтрокаАвансы.ПериодРегистрации);
		
		//АБС_Стрельцов+ добавлено: 22.10.2012
		//------------------------
		Движение.ОперативныеДанные = ОперативныеДанные;
		Движение.УсловиеОплаты	   = УсловиеОплаты;
		//------------------------
		//АБС_Стрельцов-
		
		Движение.Сумма = ТекСтрокаАвансы.Сумма;
		Если ЗначениеЗаполнено(ДоговорКонтрагента) Тогда 
			Движение.СуммаРегл = МодульВалютногоУчета.ПересчитатьИзВалютыВВалюту(
						Движение.Сумма, 
						ДоговорКонтрагента.ВалютаВзаиморасчетов, мВалютаРегламентированногоУчета,
						СтруктураКурсДоговора.Курс, СтруктураКурсРегл.Курс,
						СтруктураКурсДоговора.Кратность, СтруктураКурсРегл.Кратность);
		Иначе 
			Движение.СуммаРегл = Движение.Сумма;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПерезаполнитьТЧПоУмолчанию(Знач СВопросом=Ложь) Экспорт
	
	Если СВопросом Тогда 
		#Если Клиент Тогда 
			Режим = РежимДиалогаВопрос.ДаНет;
			Текст = "ru = ""Перезаполнить табличную часть?"";"
			+ " en = ""Do you want to continue?""";
			Ответ = Вопрос(НСтр(Текст), Режим, 0);
			Если Ответ = КодВозвратаДиалога.Нет Тогда
				Возврат;
			КонецЕсли;
		#КонецЕсли
	КонецЕсли;
	
	ТЗПериодов = ПолучитьТаблицуПериодовНаГод(Год(Год));
	Оплаты.Загрузить(ТЗПериодов);
	
КонецПроцедуры

Функция ПолучитьТаблицуПериодовНаГод(ПериодГод) Экспорт
	
	Запрос  = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.Год = &ПериодГод
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации";
	Запрос.УстановитьПараметр("ПериодГод", ПериодГод);
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	
	Возврат ТЗ;
	
КонецФункции 

Процедура ЗаполнитьПоФакту() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	//АБС_Стрельцов+ изменено: 22.10.2012
	//-----------------------------------
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	абс_ЗакупочныйЗаказГрафикОплат.Ссылка КАК ЗЗ,
	|	абс_ЗакупочныйЗаказГрафикОплат.Период КАК ПериодРегистрации,
	|	абс_ЗакупочныйЗаказГрафикОплат.ВалютнаяСуммаБезНДС,
	|	абс_ЗакупочныйЗаказГрафикОплат.ВалютнаяСуммаСНДС,
	|	абс_ЗакупочныйЗаказГрафикОплат.СуммаБезНДС,
	|	абс_ЗакупочныйЗаказГрафикОплат.СуммаНДС
	|ИЗ
	|	Документ.абс_ЗакупочныйЗаказ.";
	
	Если УсловиеОплаты = Перечисления.абс_ВидыУсловийОплатПоДоговорам.Поступление Или УсловиеОплаты = Перечисления.абс_ВидыУсловийОплатПоДоговорам.Реализация Тогда
		ТекстЗапроса = ТекстЗапроса + "ГрафикПоставок";
	Иначе
		ТекстЗапроса = ТекстЗапроса + "ГрафикОплат";
	КонецЕСли;
	
	ТекстЗапроса = ТекстЗапроса + " КАК абс_ЗакупочныйЗаказГрафикОплат
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			абс_ЗакупочныйЗаказДоговоры.Ссылка КАК Ссылка
	|		ИЗ
	|			Документ.абс_ЗакупочныйЗаказ.Договоры КАК абс_ЗакупочныйЗаказДоговоры
	|		ГДЕ
	|			абс_ЗакупочныйЗаказДоговоры.ДоговорКонтрагента = &ДоговорКонтрагента
	|			И абс_ЗакупочныйЗаказДоговоры.Ссылка.Статус В (ЗНАЧЕНИЕ(Перечисление.абсСтатусЗакупочногоЗаказа.Согласован), ЗНАЧЕНИЕ(Перечисление.абсСтатусЗакупочногоЗаказа.Исполнение))
	|		
	|		СГРУППИРОВАТЬ ПО
	|			абс_ЗакупочныйЗаказДоговоры.Ссылка) КАК ВложенныйЗапрос
	|		ПО абс_ЗакупочныйЗаказГрафикОплат.Ссылка = ВложенныйЗапрос.Ссылка
	|ГДЕ
	|	абс_ЗакупочныйЗаказГрафикОплат.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И абс_ЗакупочныйЗаказГрафикОплат.ВалютнаяСуммаБезНДС > 0
	|ИТОГИ ПО
	|	ЗЗ";
	
	Запрос.УстановитьПараметр("Проект", Проект);
    Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонтрагента);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоГода(Год));
	Запрос.УстановитьПараметр("КонецПериода", КонецГода(Год));
	
	Запрос.Текст = ТекстЗапроса;
	//-------------------------------------------
	//АБС_Стрельцов-
	
	ТЗПлан = Новый ТаблицаЗначений;
	ТЗПлан.Колонки.Добавить("Проект", Новый ОписаниеТипов("СправочникСсылка.Проекты"));
	ТЗПлан.Колонки.Добавить("ПериодРегистрации", Новый ОписаниеТипов("Дата"));
	ТЗПлан.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	Выборка = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		МассивКоэфф = Выборка.ЗЗ.РаспределениеПоПроектам.ВыгрузитьКолонку("Проект");
		ИндексПроекта = МассивКоэфф.Найти(Проект);
		
		Если ИндексПроекта=Неопределено Тогда 
	    	Продолжить;
		КонецЕсли;
		
		ВыборкаПериодов = Выборка.Выбрать();
		Пока ВыборкаПериодов.Следующий() Цикл
			
			РаспределениеВал = ttk_ОбщегоНазначения.РаспределитьПропорционально(ВыборкаПериодов.ВалютнаяСуммаБезНДС, Выборка.ЗЗ.РаспределениеПоПроектам.ВыгрузитьКолонку("ДоляРаспределения"));
			
			н = ТЗПлан.Добавить();
			н.Проект = Проект;
			н.ПериодРегистрации = ВыборкаПериодов.ПериодРегистрации;
			н.Сумма = РаспределениеВал[ИндексПроекта];
			
		КонецЦикла;
		
	КонецЦикла;
	
	ТЗПлан.Свернуть("Проект, ПериодРегистрации","Сумма");
	
	Запрос.Текст = "ВЫБРАТЬ * Поместить ВТПлан ИЗ &ТЗПлан КАК ТЗПлан";
	Запрос.УстановитьПараметр("ТЗПлан", ТЗПлан);
	Запрос.Выполнить();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТПлан.ПериодРегистрации,
	|	ВТПлан.Сумма КАК Сумма
	|ИЗ
	|	ВТПлан КАК ВТПлан
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПлан.ПериодРегистрации,
	|	ВТПлан.Сумма";
	
	Оплаты.Загрузить(Запрос.Выполнить().Выгрузить());
	
	ЗаполненАвтоматически = Истина;
	
КонецПроцедуры


мВалютаРегламентированногоУчета   = глЗначениеПеременной("ВалютаРегламентированногоУчета");