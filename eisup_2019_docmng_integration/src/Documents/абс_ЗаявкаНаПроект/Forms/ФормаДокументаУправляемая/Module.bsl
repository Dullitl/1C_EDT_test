     
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСтатустНаСервере();
	мСтатус = Объект.СтатусПроекта;
	ОбновитьВидимость();
	ВидимостьФактическихДанных();
	УстановитьОтборфактическихДанных();
	
	ИТР.Параметры.УстановитьЗначениеПараметра("Проект", Объект.Проект);
	ИТР.Параметры.УстановитьЗначениеПараметра("Формировать", Ложь);

	УстановитьПараметрыВыбораРП();//***** АБС Гетц. Параметры выбора РП. 22.01.14
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИсторияСогласования.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаПроект", Объект.Ссылка);
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.СтатусПроекта = Перечисления.абс_СтатусыПроектов.Подготовка;
		Объект.Инициатор = глЗначениеПеременной("глТекущийПользователь");		
		Объект.ВидОперации = Перечисления.абс_ВидыОперацийЗаявкаНаПроект.СозданиеПроекта;
		Объект.Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");//АБС ВСТАВКА Проектный учет  10.01.2014 13:43:18  Глебов
		Объект.Проект      = Справочники.Проекты.ПустаяСсылка();
	КонецЕсли;
	
	мВалюта = Справочники.Валюты.НайтиПоКоду("643");
	
КонецПроцедуры

&НаКлиенте
Процедура мСтатусПриИзменении(Элемент)
	
	ЗаполнитьСтатустНаСервере();
	Объект.СтатусПроекта = мСтатус;
	ОбновитьВидимость();
	
КонецПроцедуры

//абс Родин 39895 240414
&НаСервере
Функция ПолучитьОрганизациюНаСервере()
	Возврат Объект.ПортфельПроекта.абс_Организация;	
КонецФункции
//абс Родин 39895 240414

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	врСтатус =  абс_БизнесПроцессы.ПолучитьСтатусСогласованияПроекта(Объект.Ссылка);
	
	Если мСтатус <> врСтатус Тогда
		
		Объект.ПричинаИзмененияСтатуса = "";
		ВвестиСтроку(Объект.ПричинаИзмененияСтатуса, "Укажите причину изменения статуса.",,Истина);
		
	КонецЕсли;	
	
	//абс Родин 39895 240414
	Если ЗначениеЗаполнено(Объект.ПортфельПроекта) Тогда
		Если ПолучитьОрганизациюНаСервере() <> Объект.Организация Тогда
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = "Организация в заявке и в портфеле проекта должны совпадать!";
			Сообщение.Сообщить();	
			Отказ = Истина;	
		КонецЕсли;
	КонецЕсли;
	
	//абс Родин 39895 240414
	
КонецПроцедуры

&НаКлиенте
Процедура ПроектПриИзменении(Элемент)
	ЗаполнитьПоПроекту();
	ПриИзмененииСроковПроекта();
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПроектаПриИзменении(Элемент)
	ПриИзмененииСроковПроекта();
КонецПроцедуры

&НаКлиенте
Процедура ВыборПериода(Команда)
	ПериодПроекта = Новый СтандартныйПериод(Объект.ДатаНачалаПроекта, Объект.ДатаОкончанияПроекта);
	ДП = Новый ДиалогРедактированияСтандартногоПериода();
	ДП.Период = ПериодПроекта;
	Если ДП.Редактировать() Тогда 		
		Объект.ДатаНачалаПроекта = ДП.Период.ДатаНачала;
		Объект.ДатаОкончанияПроекта = ДП.Период.ДатаОкончания;
		ПриИзмененииСроковПроекта();
	КонецЕсли;
КонецПроцедуры

/////////////////////////////////////////////////////////////
// Прочие процедуры и функции

&НаКлиенте
Процедура ОбновитьВидимость()
	
	Элементы.Проект.ТолькоПросмотр = Истина;	
	
	УстановитьТолькоПросмотрВсемЭлементам(Ложь);
	Если не мСтатус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПроектов.Подготовка") Тогда
		
		УстановитьТолькоПросмотрВсемЭлементам();
		
		Если мСтатус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПроектов.СогласованиеДЭИ") Тогда
			Элементы.ДоходыПроектов.ТолькоПросмотр  = Ложь;
			Элементы.РасходыПроектов.ТолькоПросмотр = Ложь;
			
		ИначеЕсли мСтатус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПроектов.СогласованиеДТР") Тогда	
			
			Элементы.ДоходыПроектов.ТолькоПросмотр 	= Ложь;
			
			
		ИначеЕсли мСтатус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПроектов.РазработкаТЭО") Тогда
			
			Элементы.ТЭО.ТолькоПросмотр            	= Ложь;
			
		ИначеЕсли мСтатус = ПредопределенноеЗначение("Перечисление.абс_СтатусыПроектов.Согласован") Тогда
			
			
			
		КонецЕсли;		
	Иначе			
		
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявкаНаПроект.АктуализацияДанныхПроекта") Тогда
			Элементы.Проект.ТолькоПросмотр = Ложь;
		КонецЕсли;		
		
	КонецЕсли;		
	
КонецПроцедуры	

&НаКлиенте
Процедура ОбновитьТекстПериода()
	Если Не ЗначениеЗаполнено(Объект.ДатаНачалаПроекта) Или Не ЗначениеЗаполнено(Объект.ДатаОкончанияПроекта) Тогда 
		СрокиПроекта = "<Ввести сроки проекта>";
	Иначе 
		СрокиПроекта = Формат(Объект.ДатаНачалаПроекта, "ДФ='""с"" dd MMMM yyyy ""г.""'") + Формат(Объект.ДатаОкончанияПроекта, "ДФ='""по"" dd MMMM yyyy ""г.""'");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьСтатустНаСервере();
	мСтатус = Объект.СтатусПроекта;
	ОбновитьВидимость();
    Элементы.ИсторияСогласования1.Обновить();
	
	Если Объект.СтатусПроекта = ПредопределенноеЗначение("Перечисление.абс_СтатусыПроектов.Согласован") Тогда
		Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявкаНаПроект.АктуализацияДанныхПроекта") Тогда 
			СформироватьПроектыНомСервер();
		Иначе 
			Если Не ЗначениеЗаполнено(Объект.Проект) Тогда //АБС Гетц. 09.01.14. Убран вопрос.
				СформироватьПроектыНомСервер();
				ИТР.Параметры.УстановитьЗначениеПараметра("Проект", Объект.Проект);
			КонецЕсли;
		КонецЕсли;
	 КонецЕсли;
	 
	 УстановитьПараметрСпискаНаСервере();
	 ОбновитьОтображениеДанных();
 КонецПроцедуры
 
&НаСервере
Процедура СформироватьПроектыНомСервер()
	абс_Привилегированный.СформироватьНоменклатурныеГруппыИПроектыБезКонтроляПрав(Объект.Ссылка);
	ЗначениеВДанныеФормы(Объект.Ссылка.ПолучитьОбъект(), Объект);
КонецПроцедуры
 
 &НаСервере
 Процедура УстановитьПараметрСпискаНаСервере()
	 ИсторияСогласования.Параметры.УстановитьЗначениеПараметра("ЗаявкаНаПроект", Объект.Ссылка);
 КонецПроцедуры	
 
&НаСервере
Процедура ЗаполнитьСтатустНаСервере()

	Документы.абс_ЗаявкаНаПроект.ЗаполнитьСписокДоступныхСтатусов(Элементы.мСтатус.СписокВыбора,Объект.Ссылка);

КонецПроцедуры // ()

&НаКлиенте
Процедура УстановитьТолькоПросмотрВсемЭлементам(мТолькоПросмотр = Истина)

	Для каждого Элемент Из Элементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") ИЛИ
			Элемент = Элементы.мСтатус ИЛИ
			Элемент = Элементы.мСтатусКонтекстноеМеню ИЛИ
			Элемент = Элементы.ФормаКоманднаяПанель ИЛИ
			Элемент = Элементы.Проект Тогда
			Продолжить;
		КонецЕсли;	
		//Сообщить(Элемент);
		Попытка
			Элемент.ТолькоПросмотр = мТолькоПросмотр;
		Исключение
			//Элемент.Доступность    = НЕ мТолькоПросмотр;
		КонецПопытки;	
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСроковПроекта()
	
	ЗаполнитьПериоды(Объект.ДоходыПроектов);
	ЗаполнитьПериоды(Объект.РасходыПроектов);
	
КонецПроцедуры

&НаКлиенте 
Процедура ЗаполнитьПериоды(ТЧ)
	
	Если Не ЗначениеЗаполнено(Объект.ДатаНачалаПроекта) Или Не ЗначениеЗаполнено(Объект.ДатаОкончанияПроекта) Тогда 
		Возврат;
	КонецЕсли;
	
	ТЧ.Сортировать("Период");
	
	КонецПериода 	= НачалоМесяца(Объект.ДатаОкончанияПроекта);
	Период 	= НачалоМесяца(Объект.ДатаНачалаПроекта);
	
	Индекс = 0;
	КоличествоСтрок    = ТЧ.Количество();
	
	Пока Индекс < КоличествоСтрок ИЛИ Период <= КонецПериода  Цикл
		
		Если Индекс = КоличествоСтрок ИЛИ ТЧ[Индекс].Период > Период Тогда
			НоваяСтрока = ТЧ.Вставить(Индекс);
			НоваяСтрока.Период = Период;
			КоличествоСтрок = КоличествоСтрок + 1;
			Период = ДобавитьМесяц(Период, 1);
			Индекс = Индекс + 1;
		ИначеЕсли ТЧ[Индекс].Период < Период ИЛИ ТЧ[Индекс].Период > КонецПериода Тогда
			ТЧ.Удалить(Индекс);
			КоличествоСтрок = КоличествоСтрок - 1;
		Иначе
			Период = ДобавитьМесяц(Период, 1);
			Индекс = Индекс + 1;
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	Объект.Проект = ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка");
	ЗаполнитьПоПроекту();
	ОбновитьВидимость();
	ВидимостьФактическихДанных();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПроекту()

	Объект.ВидПроекта = Объект.Проект.абс_ВидПроекта;
	Объект.Организация = Объект.Проект.абс_Организация;
	Объект.РуководительПроекта = Объект.Проект.абс_РуководительПроекта;
	Объект.НаименованиеПроекта = Объект.Проект.Наименование;
	Объект.КодТитула = Объект.Проект.КодПроектаКомпании;
	Объект.ДатаНачалаПроекта = Объект.Проект.ДатаНачала;
	Объект.ДатаОкончанияПроекта = Объект.Проект.ДатаОкончания;
	Объект.ТЭО = Объект.Проект.абс_ТЭО;
	Объект.ПортфельПроекта = Объект.Проект.абс_Портфель;
	Объект.Доходный = Объект.Проект.абс_ДоходныйПроект;
	
	//Объект.ДоходыПроектов.Загрузить(ПолучитьДоходыРасходыПроектов(ПредопределенноеЗначение("Перечисление.абс_ВидыУсловийОплатПоДоговорам.Реализация")));
	//Объект.РасходыПроектов.Загрузить(ПолучитьДоходыРасходыПроектов(ПредопределенноеЗначение("Перечисление.абс_ВидыУсловийОплатПоДоговорам.Поступление")));
	
	ИТР.Параметры.УстановитьЗначениеПараметра("Проект", Объект.Проект);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьДоходыРасходыПроектов(ВидУсловияДоговора)
	
	Запрос  = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации,
	|	0 КАК Сумма,
	|	0 КАК СуммаРегл
	|ПОМЕСТИТЬ ВТПериоды
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &ДатаНачала И &ДатаОкончания
	|
	|СГРУППИРОВАТЬ ПО
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ЕСТЬNULL(абс_УсловияОплатыПоДоговорамСрезПоследних.Сумма, 0) КАК Сумма,
	|	абс_УсловияОплатыПоДоговорамСрезПоследних.ПериодРегистрации,
	|	ЕСТЬNULL(абс_УсловияОплатыПоДоговорамСрезПоследних.СуммаРегл, 0) КАК СуммаРегл,
	|	абс_УсловияОплатыПоДоговорамСрезПоследних.Регистратор
	|ПОМЕСТИТЬ ВТ
	|ИЗ
	|	РегистрСведений.абс_УсловияОплатыПоДоговорам.СрезПоследних(
	|			,
	|			Проект = &Проект
	|				И ВЫБОР
	|					КОГДА &ВидУсловияДоговора <> НЕОПРЕДЕЛЕНО
	|						ТОГДА УсловиеОплаты = &ВидУсловияДоговора
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|				И ОперативныеДанные = ЛОЖЬ) КАК абс_УсловияОплатыПоДоговорамСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТПериоды.ПериодРегистрации,
	|	ЕСТЬNULL(СУММА(ЕСТЬNULL(ВТ.Сумма, 0)), 0) КАК Сумма
	|ИЗ
	|	ВТПериоды КАК ВТПериоды
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ КАК ВТ
	|		ПО ВТПериоды.ПериодРегистрации = ВТ.ПериодРегистрации
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТПериоды.ПериодРегистрации";
	
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Объект.ДатаНачалаПроекта));
	Запрос.УстановитьПараметр("ДатаОкончания", КонецМесяца(Объект.ДатаОкончанияПроекта));
	Запрос.УстановитьПараметр("Проект", Объект.Проект);
	Запрос.УстановитьПараметр("ВидУсловияДоговора", ВидУсловияДоговора);
	
	Возврат Запрос.Выполнить().Выгрузить();	
КонецФункции	

&НаКлиенте
Процедура ГруппаПроектыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	Если ТекущаяСтраница = Элементы.ГруппаИТР Тогда 
		ИТР.Параметры.УстановитьЗначениеПараметра("Формировать", Истина);
	КонецЕсли;
КонецПроцедуры

//Урал абс 12.12.2013
////////////ПРОЦЕДУРЫ И ФУНКЦИИ ФАКТИЧЕСКИХ ДАННЫХ (Страницы Доходы и Расходы)/////////////////////////

//-----Обработчики---------------------------------------------------------------------------------------
&НаКлиенте
Процедура ВидЗаполненияПриИзменении(Элемент)
	
	ВидимостьФактическихДанных();
	
КонецПроцедуры

&НаКлиенте
Процедура ОборотыБюджетовСтатьяОборотов1НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПриНачалеВыбораСтатьиОборотов(Элементы.ОборотыБюджетов1, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежиПоПроектам1ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ЗаполнитьКолонкиПоУмолчанию(Элементы.ПлатежиПоПроектам1, "ПлатежиПоПроектам");
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Процедура ОборотыБюджетов1ПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда
		ЗаполнитьКолонкиПоУмолчанию(Элементы.ОборотыБюджетов1, "ОборотыБюджетов");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОборотыБюджетовПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		ЗаполнитьКолонкиПоУмолчанию(Элементы.ОборотыБюджетов, "ОборотыБюджетов");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежиПоПроектамПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И НЕ Копирование Тогда
		ЗаполнитьКолонкиПоУмолчанию(Элементы.ПлатежиПоПроектам, "ПлатежиПоПроектам");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОборотыБюджетовСтатьяОборотовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПриНачалеВыбораСтатьиОборотов(Элементы.ОборотыБюджетов, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры
//\\-------------------------------------------------------------------------------------------------------

//----Обработчики команд-----------------------------------------------------------------------------------

&НаКлиенте
Процедура ЗаполнитьОборотыБюджета(Команда)
	
	ЗаполнитьФактическиеДанные("ОборотыБюджетов");
			
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПлатежиПоПроектам(Команда)
	
	ЗаполнитьФактическиеДанные("ПлатежиПоПроектам");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьФактическиеДанные(ИмяТЧ)
	
	НезаполненныеРеквизиты = "";

	Если Объект.Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка") Тогда
		НезаполненныеРеквизиты = НезаполненныеРеквизиты + ", Организация";
	КонецЕсли;
	
	Если Объект.ПериодДанных = Дата(1,1,1) Тогда
		НезаполненныеРеквизиты = НезаполненныеРеквизиты + ", ПериодДанных";
	КонецЕсли;
	
	Если Объект.Проект = ПредопределенноеЗначение("Справочник.Проекты.ПустаяСсылка") Тогда
		НезаполненныеРеквизиты = НезаполненныеРеквизиты + ", Проект";
	КонецЕсли;
	
	Если НезаполненныеРеквизиты <> "" Тогда
		Предупреждение("Не запаолнены поля: " + Сред(НезаполненныеРеквизиты, 3));
		Возврат;
	КонецЕсли;
	
	Если Элементы.ГруппаПроекты.ТекущаяСтраница = Элементы.СтраницаДоходы Тогда
		ПриходРасход = ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.Приход");
	ИначеЕсли Элементы.ГруппаПроекты.ТекущаяСтраница = Элементы.СтраницаРасходы Тогда
		ПриходРасход = ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.Расход");
	КонецЕсли;

	Если Объект[ИмяТЧ].НайтиСтроки(Новый Структура("ПриходРасход", ПриходРасход)).Количество() Тогда
		Ответ = Вопрос("Табличная часть будет очищена " + ИмяТЧ + " (" + ПриходРасход + "). Продолжить?", РежимДиалогаВопрос.ДаНет);
		Если Ответ = КодВозвратаДиалога.Нет Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ЗаполнитьФактическиеДанныеСервер(ИмяТЧ, ПриходРасход);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьФактическиеДанныеСервер(ИмяТЧ, ПриходРасход)
	
	СтрокиДляУдаления = Объект[ИмяТЧ].НайтиСтроки(Новый Структура("ПриходРасход", ПриходРасход));
	
	Для Каждого Строка Из СтрокиДляУдаления Цикл
		Объект[ИмяТЧ].Удалить(Строка);
	КонецЦикла;
	
	Запрос = Новый Запрос;

	Если ИмяТЧ = "ПлатежиПоПроектам" Тогда
			Запрос.Текст = "ВЫБРАТЬ
			               |	абс_ДДСПоПроектамОбороты.Контрагент,
			               |	абс_ДДСПоПроектамОбороты.ДоговорКонтрагента,
			               |	абс_ДДСПоПроектамОбороты.Проект,
			               |	абс_ДДСПоПроектамОбороты.ФактОперФакт,
			               |	абс_ДДСПоПроектамОбороты.ПриходРасход,
			               |	абс_ДДСПоПроектамОбороты.ОплатаАванс,
			               |	абс_ДДСПоПроектамОбороты.Документ,
			               |	абс_ДДСПоПроектамОбороты.СуммаОборот КАК Сумма,
			               |	абс_ДДСПоПроектамОбороты.СуммаРеглОборот КАК СуммаРегл
			               |ИЗ
			               |	РегистрНакопления.абс_ДДСПоПроектам.Обороты(
			               |			,
			               |			&КонецПериода,
			               |			,
			               |			ПриходРасход = &ПриходРасход
			               |				И Проект = &Проект) КАК абс_ДДСПоПроектамОбороты";
	
		Запрос.Параметры.Вставить("ПриходРасход", ПриходРасход);
	Иначе
		Запрос.Текст = "ВЫБРАТЬ
		               |	ОборотыБюджетовОбороты.Сценарий,
		               |	ОборотыБюджетовОбороты.Проект,
		               |	ОборотыБюджетовОбороты.ЦФО,
		               |	ОборотыБюджетовОбороты.СтатьяОборотов,
		               |	ОборотыБюджетовОбороты.абс_ТипКонтрагента,
		               |	ОборотыБюджетовОбороты.абс_ТипСети,
		               |	ОборотыБюджетовОбороты.абс_КВ,
		               |	ОборотыБюджетовОбороты.абс_ТЭО,
		               |	ОборотыБюджетовОбороты.абс_ЦФУ,
		               |	ОборотыБюджетовОбороты.абс_ТипРасхода,
		               |	ОборотыБюджетовОбороты.Организация,
		               |	ОборотыБюджетовОбороты.ДоговорКонтрагента,
		               |	ОборотыБюджетовОбороты.абс_СчетБУ,
		               |	ОборотыБюджетовОбороты.СуммаУпрОборот КАК СуммаУпр
		               |ИЗ
		               |	РегистрНакопления.ОборотыБюджетов.Обороты(
		               |			,
		               |			&КонецПериода,
		               |			,
		               |			СтатьяОборотов.абс_ДоходнаяСтатья = &ДоходнаяСтатья
		               |				И Проект = &Проект
		               |				И Организация = &Организация
		               |				И Сценарий = &Сценарий) КАК ОборотыБюджетовОбороты";
		
		Запрос.Параметры.Вставить("ДоходнаяСтатья", ПриходРасход = Перечисления.ВидыДвиженийПриходРасход.Приход);				   
		Запрос.Параметры.Вставить("Организация", Объект.Организация);
		Запрос.Параметры.Вставить("Сценарий", глЗначениеПеременной("абс_СценарийДляФакта"));
		Запрос.Параметры.Вставить("ТЭО", Объект.ТЭО);
	КонецЕсли;
		
	Запрос.Параметры.Вставить("КонецПериода", Объект.ПериодДанных);
	Запрос.Параметры.Вставить("Проект", Объект.Проект);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Объект[ИмяТЧ].Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		НоваяСтрока.ПриходРасход = ПриходРасход;
		Если ИмяТЧ = "ОборотыБюджетов" Тогда
			НоваяСтрока.Валюта = мВалюта;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

//\\------------------------------------------------------------------------------------------------------

//-----Прочие функции и процедуры--------------------------------------------------------------------------
&НаКлиенте
Процедура ВидимостьФактическихДанных()
	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыОперацийЗаявкаНаПроект.АктуализацияДанныхПроекта") Тогда
		Элементы.СтраницаДоходы.Видимость  = Истина;
		Элементы.СтраницаРасходы.Видимость = Истина;
		Если Объект.ВидЗаполнения = "ПоДокументам" Тогда
			Элементы.ОборотыБюджетовДокументРегистратор.Видимость   = Истина;
			Элементы.ПлатежиПоПроектамДокументРегистратор.Видимость = Истина;
			Элементы.ОборотыБюджетовДокументРегистратор1.Видимость   = Истина;
			Элементы.ПлатежиПоПроектамДокументРегистратор1.Видимость = Истина;
		ИначеЕсли Объект.ВидЗаполнения = "Сводно" Тогда
			Элементы.ОборотыБюджетовДокументРегистратор.Видимость   = Ложь;
			Элементы.ПлатежиПоПроектамДокументРегистратор.Видимость = Ложь;
			Элементы.ОборотыБюджетовДокументРегистратор1.Видимость   = Ложь;
			Элементы.ПлатежиПоПроектамДокументРегистратор1.Видимость = Ложь;
		КонецЕСли;
	Иначе
		Элементы.СтраницаДоходы.Видимость  = Ложь;
		Элементы.СтраницаРасходы.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьОтборФактическихДанных()
	
	Элементы.ПлатежиПоПроектам.ОтборСтрок  = Новый ФиксированнаяСтруктура("ПриходРасход", Перечисления.ВидыДвиженийПриходРасход.Приход);
    Элементы.ПлатежиПоПроектам1.ОтборСтрок = Новый ФиксированнаяСтруктура("ПриходРасход", Перечисления.ВидыДвиженийПриходРасход.Расход);
	Элементы.ОборотыБюджетов.ОтборСтрок    = Элементы.ПлатежиПоПроектам.ОтборСтрок;
	Элементы.ОборотыБюджетов1.ОтборСтрок   = Элементы.ПлатежиПоПроектам1.ОтборСтрок;
		
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьКолонкиПоУмолчанию(ТаблицаФормы, ИмяТЧ)
	
	Объект[ИмяТЧ][Объект[ИмяТЧ].Количество() - 1].ПриходРасход = ТаблицаФормы.ОтборСтрок.ПриходРасход;
	Если ИмяТЧ = "ОборотыБюджетов" Тогда
		Объект[ИмяТЧ][Объект[ИмяТЧ].Количество() - 1].Валюта = мВалюта;
	КонецЕсли;
	
КонецПроцедуры	

&НаКлиенте
Процедура ПриНачалеВыбораСтатьиОборотов(Таблицаформы, Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ФормаВыбора = ПолучитьФорму("Справочник.СтатьиОборотовПоБюджетам.ФормаВыбора",,Элемент);
	ФормаВыбора.Отбор.абс_ДоходнаяСтатья.Использование = Истина;
	ФормаВыбора.Отбор.абс_ДоходнаяСтатья.Значение = (ТаблицаФормы.ОтборСтрок.ПриходРасход = ПредопределенноеЗначение("Перечисление.ВидыДвиженийПриходРасход.Приход"));
	ФормаВыбора.ЭлементыФормы.СправочникСписок.НастройкаОтбора.абс_ДоходнаяСтатья.Доступность = Ложь;
	ФормаВыбора.ОткрытьМодально();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИТРИзФайла(Команда)
	
	абс_СлужебныеФункции.ПолучитьОбработку("абс_ЗагрузкаИТР").ПолучитьФорму().Открыть();
	
КонецПроцедуры

//Вставка 120114 Проектный учет Родин
&НаСервере
Процедура ПроставитьПортфель()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ПортфельПроекта = ДокументОбъект.ГруппаПроектов;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаСервере
Процедура ПроставитьГруппуПроектов()
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ГруппаПроектов = ДокументОбъект.ПортфельПроекта.Родитель;
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
КонецПроцедуры

&НаКлиенте
Процедура ГруппаПроектовПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Объект.ПортфельПроекта) Тогда	
		ПроставитьПортфель();
	КонецЕсли;	
КонецПроцедуры

&НаКлиенте
Процедура ПортфельПроектаПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(Объект.ГруппаПроектов) Тогда	
		ПроставитьГруппуПроектов();
	КонецЕсли;	
КонецПроцедуры
//Вставка 120114 Проектный учет Родин

//***** АБС Гетц. Параметры выбора РП. 22.01.14
&НаКлиенте
Процедура УстановитьПараметрыВыбораРП()
	Элемент = Элементы.РуководительПроекта;
	
	НовыйМассив = Новый Массив();
	НовыйПараметр = Новый ПараметрВыбора("Отбор.абс_СтатусСотрудника", ПредопределенноеЗначение("Перечисление.абс_СтатусыСотрудников.Работает"));
	НовыйМассив.Добавить(НовыйПараметр);
	НовыйПараметр = Новый ПараметрВыбора("Отбор.ТекущееПодразделениеКомпании", ПолучитьПодразделениеПользователя(Объект.Инициатор));
	НовыйМассив.Добавить(НовыйПараметр);
	НовыеПараметры = Новый ФиксированныйМассив(НовыйМассив);
	Элемент.ПараметрыВыбора = НовыеПараметры;
КонецПроцедуры

&НаКлиенте
Процедура ИнициаторПриИзменении(Элемент)
	УстановитьПараметрыВыбораРП();
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьПодразделениеПользователя(Пользователь)
	Сотрудник = абс_БизнесПроцессы.ПолучитьСотрудникаПользователя(Пользователь);
	Возврат Сотрудник.ТекущееПодразделениеОрганизации;
КонецФункции
//***** АБС Гетц. Параметры выбора РП. \\

//АБС ВСТАВКА 13.02.2014 Навценя

 &НаКлиенте
Процедура РуководительПроектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПользовательРП = ОткрытьФормуМодально("Справочник.Пользователи.ФормаВыбора");	
	Если НЕ ЗначениеЗаполнено(ПользовательРП) Тогда 
		Возврат;
	КонецЕсли;
	
	Объект.РуководительПроекта = ПользовательРП.абс_Сотрудник;
	
КонецПроцедуры

&НаКлиенте
Процедура РуководительПроектаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	СформироватьСпискоВыбораНаСервере(Текст, ДанныеВыбора, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура РуководительПроектаАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	
	СформироватьСпискоВыбораНаСервере(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СформироватьСпискоВыбораНаСервере(Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если ЗначениеЗаполнено(Текст) Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 51
		|	Пользователи.абс_Сотрудник КАК Ссылка,
		|	Пользователи.абс_Сотрудник.Наименование КАК Наименование,
		|	Пользователи.абс_Сотрудник.Код КАК Код
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	Пользователи.Наименование ПОДОБНО &Наименование";
		
		Запрос.УстановитьПараметр("Наименование", Текст + "%");
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Количество = Выборка.Количество();
		
		Если Количество < 51 Тогда
			
			Значение = Новый СписокЗначений;
			Пока Выборка.Следующий() Цикл
				Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда 
					Значение.Добавить(Выборка.Ссылка, Выборка.Наименование + " (" + СокрЛП(Выборка.Код) + ")");
				КонецЕсли;
			КонецЦикла;
			
			ДанныеВыбора = Значение;
			
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

//АБС ВСТАВКА  КОНЕЦ

//АБС ВСТАВКА 47653  29.09.2014 18:16:59  Шамов
&НаКлиенте
Процедура ИсторияСогласования1Выбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
КонецПроцедуры
//АБС ВСТАВКА 47653 КОНЕЦ 


//\\--------------------------------------------------------------------------------------------------------

////////\\\\\\\\\КОНЕЦ ФАКТИЧЕСКИЕ ДАННЫЕ (Страницы Доходы и Расходы)\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
//\\Урал абс 12.12.2013



	