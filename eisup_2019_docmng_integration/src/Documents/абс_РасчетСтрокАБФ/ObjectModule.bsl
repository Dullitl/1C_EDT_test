Процедура ЗаполнитьСтрокиАБФ() Экспорт
	
	Запрос = Новый запрос(
	"ВЫБРАТЬ
	|	абс_СтрокиАБФРЖД.Ссылка КАК СтрокаФормы,
	|	абс_СтрокиАБФРЖД.Владелец КАК Форма,
	|	абс_СтрокиАБФРЖД.Бюджет,
	|	абс_СтрокиАБФРЖД.ПоказательБюджета,
	|	абс_СтрокиАБФРЖД.КлассификаторЕБК,
	|	абс_СтрокиАБФРЖД.ЭлементКлассификатораЕБК,
	|	абс_СтрокиАБФРЖД.КлассификаторЕБК.ТипКлассификатора КАК ТипКлассификатораЕБК,
	|	абс_СоответствиеПроводокПоказателямБюджетаРЖД.СчетДт,
	|	абс_СоответствиеПроводокПоказателямБюджетаРЖД.СчетКт
	|ИЗ
	|	Справочник.абс_СтрокиАБФРЖД КАК абс_СтрокиАБФРЖД
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_СоответствиеПроводокПоказателямБюджетаРЖД КАК абс_СоответствиеПроводокПоказателямБюджетаРЖД
	|		ПО абс_СтрокиАБФРЖД.Бюджет = абс_СоответствиеПроводокПоказателямБюджетаРЖД.Бюджет
	|			И абс_СтрокиАБФРЖД.ПоказательБюджета = абс_СоответствиеПроводокПоказателямБюджетаРЖД.ПоказательБюджета
	|ГДЕ
	|	абс_СтрокиАБФРЖД.Владелец = &Форма
	|
	|УПОРЯДОЧИТЬ ПО
	|	абс_СтрокиАБФРЖД.Порядок");
	
	Запрос.УстановитьПараметр("Форма", Форма);
	
	СтрокиАБФ.Загрузить(Запрос.Выполнить().Выгрузить());	
	
КонецПроцедуры

Процедура РасчетСтрокАБФ() Экспорт
	
	Для Каждого СтрокаАБФ Из СтрокиАБФ Цикл
		
		Если НЕ ЗначениеЗаполнено(СтрокаАБФ.ПоказательБюджета) Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаАБФ.Сумма = ПолучитьЗначениеСтрокиАБФ(СтрокаАБФ);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗначениеСтрокиАБФ(СтруктураСтроки) Экспорт
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто1) = &ТипАналитики
	|			ТОГДА ХозрасчетныйОбороты.Субконто1
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто2) = &ТипАналитики
	|			ТОГДА ХозрасчетныйОбороты.Субконто2
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.Субконто3) = &ТипАналитики
	|			ТОГДА ХозрасчетныйОбороты.Субконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаДт,
	|	ВЫБОР
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто1) = &ТипАналитики
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто1
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто2) = &ТипАналитики
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто2
	|		КОГДА ТИПЗНАЧЕНИЯ(ХозрасчетныйОбороты.КорСубконто3) = &ТипАналитики
	|			ТОГДА ХозрасчетныйОбороты.КорСубконто3
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК АналитикаКт,
	|	ХозрасчетныйОбороты.СуммаОборот,
	|	ХозрасчетныйОбороты.СуммаОборотДт,
	|	ХозрасчетныйОбороты.СуммаОборотКт
	|ПОМЕСТИТЬ ВТ_ОборотыДтКтАналитика
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&ПериодНач,
	|			&ПериодКон,
	|			,
	|			ВЫБОР
	|				КОГДА (НЕ &Счет = &ПустойСчет)
	|					ТОГДА &Счет = &СчетДт
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ,
	|			,
	|			,
	|			ВЫБОР
	|				КОГДА (НЕ &СчетКт = &ПустойСчет)
	|					ТОГДА КорСчет = &СчетКт
	|				ИНАЧЕ ИСТИНА
	|			КОНЕЦ,
	|			) КАК ХозрасчетныйОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОборотыДтКтАналитика.АналитикаДт,
	|	ВТ_ОборотыДтКтАналитика.АналитикаКт,
	|	ВТ_ОборотыДтКтАналитика.СуммаОборот,
	|	ВТ_ОборотыДтКтАналитика.СуммаОборотДт,
	|	ВТ_ОборотыДтКтАналитика.СуммаОборотКт,
	|	МаппингДт.ЗначениеКлассификатораЕБК КАК ЗначениеКлассификатораЕБКДт,
	|	МаппингКт.ЗначениеКлассификатораЕБК КАК ЗначениеКлассификатораЕБККт,
	|	ВЫБОР
	|		КОГДА (НЕ ВТ_ОборотыДтКтАналитика.СуммаОборотДт = &ПустойСчет)
	|				И (НЕ ВТ_ОборотыДтКтАналитика.СуммаОборотКт = &ПустойСчет)
	|			ТОГДА ВТ_ОборотыДтКтАналитика.СуммаОборотДт
	|		КОГДА (НЕ ВТ_ОборотыДтКтАналитика.СуммаОборотДт = &ПустойСчет)
	|				И ВТ_ОборотыДтКтАналитика.СуммаОборотКт = &ПустойСчет
	|			ТОГДА ВТ_ОборотыДтКтАналитика.СуммаОборотДт
	|		КОГДА ВТ_ОборотыДтКтАналитика.СуммаОборотДт = &ПустойСчет
	|				И (НЕ ВТ_ОборотыДтКтАналитика.СуммаОборотКт = &ПустойСчет)
	|			ТОГДА ВТ_ОборотыДтКтАналитика.СуммаОборотКт
	|	КОНЕЦ КАК Поле1
	|ИЗ
	|	ВТ_ОборотыДтКтАналитика КАК ВТ_ОборотыДтКтАналитика
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_СоответствиеАналитикЕБК КАК МаппингДт
	|		ПО ВТ_ОборотыДтКтАналитика.АналитикаДт = МаппингДт.ЗначениеАналитики
	|			И (МаппингДт.КлассификаторЕБК = &КлассификаторЕБК)
	|			И (МаппингДт.ЗначениеКлассификатораЕБК = &ЗначениеКлассификатораЕБК)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_СоответствиеАналитикЕБК КАК МаппингКт
	|		ПО ВТ_ОборотыДтКтАналитика.АналитикаКт = МаппингКт.ЗначениеАналитики
	|			И (МаппингКт.КлассификаторЕБК = &КлассификаторЕБК)
	|			И (МаппингКт.ЗначениеКлассификатораЕБК = &ЗначениеКлассификатораЕБК)");
	
	
	
КонецФункции

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.абс_ЗначенияПоказателейСтрокАБФ.Записывать = Истина;
	Движения.абс_ЗначенияПоказателейСтрокАБФ.Очистить();
	
	ТаблицаДвижений = СтрокиАБФ.Выгрузить(Новый Структура("РасчетПроизведен", Истина));
	ТаблицаДвижений.Свернуть("СтрокаФормы", "Сумма");
	
	Для Каждого СтрокаДвижений Из ТаблицаДвижений Цикл
		Движение = Движения.абс_ЗначенияПоказателейСтрокАБФ.Добавить();
		Движение.Период = ПериодНач;
		ЗаполнитьЗначенияСвойств(Движение, СтрокаДвижений);
	КонецЦикла;
	
КонецПроцедуры


