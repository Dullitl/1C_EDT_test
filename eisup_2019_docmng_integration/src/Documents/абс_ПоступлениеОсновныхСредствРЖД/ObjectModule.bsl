Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

#Если Клиент Тогда
// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		Предупреждение("Документ можно распечатать только после его записи");
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		Предупреждение("Недостаточно полномочий для печати непроведенного документа!");
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли; 
		
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#КонецЕсли

Процедура ДозаполнитьДанныеСтроки(ТекущиеДанные) Экспорт
	
	ОС = ТекущиеДанные.ОсновноеСредство;
	Если ЗначениеЗаполнено(ОС)
		 И ЗначениеЗаполнено(ОС.КодПоОКОФ)
		 И ЗначениеЗаполнено(ОС.абс_ГруппаОСРЖД) Тогда
		 
		СтруктураДанных = РегистрыСведений.абс_СоответствиеОКОФГруппОСРЖД.Получить(Новый Структура("ОКОФ, ГруппаОСРЖД", ОС.КодПоОКОФ, ОС.абс_ГруппаОСРЖД));
		
		ТекущиеДанные.СрокПолезногоИспользования = СтруктураДанных.СрокПолезногоИспользования;
		ТекущиеДанные.ЛиквидационнаяСтоимость = ТекущиеДанные.ПервоначальнаяСтоимость*СтруктураДанных.ПроцентЛиквидационнойСтоимости/100;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ)
	
	Если мУдалятьДвижения Тогда
		ttk_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Для Каждого ТекСтрокаОсновныеСредства Из ОсновныеСредства Цикл
		Если ТекСтрокаОсновныеСредства.УчитыватьКакОС Тогда
			Если НЕ ЗначениеЗаполнено(ТекСтрокаОсновныеСредства.СчетСниженияСтоимости) Тогда
				#Если Клиент Тогда
				Сообщить("Не заполнен реквизит: Счет снижения стоимости");
				#КонецЕсли
				Отказ = Истина;
			КонецЕсли;
			// регистр абс_ОсновныеСредстваРЖД
			Движение = Движения.абс_ОсновныеСредстваРЖД.Добавить();
			Движение.Период = ТекСтрокаОсновныеСредства.ДатаПринятияКУчету;
			Движение.ОсновноеСредство = ТекСтрокаОсновныеСредства.ОсновноеСредство;
			Движение.Организация = Организация;
			Движение.ДатаПринятияКУчету = ТекСтрокаОсновныеСредства.ДатаПринятияКУчету;
			Движение.МестонахождениеОбъекта = ТекСтрокаОсновныеСредства.МестонахождениеОбъекта;
			Движение.МОЛ = ТекСтрокаОсновныеСредства.МОЛ;
			Движение.СчетУчета = ТекСтрокаОсновныеСредства.СчетУчета;
			Движение.СрокПолезногоИспользования = ТекСтрокаОсновныеСредства.СрокПолезногоИспользования;
			Движение.НачислятьАмортизацию = ТекСтрокаОсновныеСредства.НачислятьАмортизацию;
			Движение.МетодНачисленияАмортизации = ТекСтрокаОсновныеСредства.МетодНачисленияАмортизации;
			Движение.СчетНачисленияАмортизации = ТекСтрокаОсновныеСредства.СчетНачисленияАмортизации;
			Движение.ПервоначальнаяСтоимость = ТекСтрокаОсновныеСредства.ПервоначальнаяСтоимость;
			Движение.ЛиквидационнаяСтоимость = ТекСтрокаОсновныеСредства.ЛиквидационнаяСтоимость;
			Движение.СчетЗатрат = ТекСтрокаОсновныеСредства.СчетЗатрат;
			Движение.Субконто1 = ТекСтрокаОсновныеСредства.Субконто1;
			Движение.Субконто2 = ТекСтрокаОсновныеСредства.Субконто2;
			Движение.Субконто3 = ТекСтрокаОсновныеСредства.Субконто3;
			Движение.ПредполагаемыйОбъемПродукции = ТекСтрокаОсновныеСредства.ПредполагаемыйОбъемПродукции;
			Движение.СуммаНачисленнойАмортизации = ТекСтрокаОсновныеСредства.СуммаНачисленнойАмортизации;
			Движение.Состояние = Перечисления.ВидыСостоянийОС.ВведеноВЭксплуатацию;
			Движение.КоэффициентУскорения = ТекСтрокаОсновныеСредства.КоэффициентУскорения;
			Движение.СчетСниженияСтоимости = ТекСтрокаОсновныеСредства.СчетСниженияСтоимости;
			Движение.СправедливаяСтоимость = ТекСтрокаОсновныеСредства.ПервоначальнаяСтоимость;
		КонецЕсли;		
	КонецЦикла;
	
	// записываем движения регистров
	Движения.абс_ОсновныеСредстваРЖД.Записать();

КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;


	 
	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью



