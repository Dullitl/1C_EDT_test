
////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Подготовка;
	Ответственный = глЗначениеПеременной("глТекущийПользователь");
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	СчетБУ = ПланыСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу;
	СчетНУ = ПланыСчетов.Налоговый.НайтиПоКоду("79.01");
	ПричинаСписания = Справочники.ПричиныСписания.НайтиПоКоду("000000013");
	Событие = Справочники.СобытияОС.НайтиПоКоду("000000011");
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Статус 					= Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Подготовка;
	ДокументВводОстатковОС 	= Документы.ВводНачальныхОстатковОС.ПустаяСсылка();
	ДокументСписаниеОС 		= Документы.СписаниеОС.ПустаяСсылка();
	Ответственный = глЗначениеПеременной("глТекущийПользователь");
	Организация = УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), "ОсновнаяОрганизация");
	СчетБУ = ПланыСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу;
	СчетНУ = ПланыСчетов.Налоговый.НайтиПоКоду("79.01");
	ПричинаСписания = Справочники.ПричиныСписания.НайтиПоКоду("000000013");
	Событие = Справочники.СобытияОС.НайтиПоКоду("000000011");
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда 
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("СоздаватьДокументы", Ложь);
	
	Если ПометкаУдаления Тогда 
		абс_БизнесПроцессыПривелегированный.ПометитьНаУдалениеДокументыВводаОстатков(Новый Структура("СсылкаНаОбъект",Ссылка));
	КонецЕсли;
	
	//Если НЕ ЭтоНовый() Тогда 
	//	Если Ссылка.Статус <> Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Завершен
	//		И Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Завершен
	//		И (НЕ ПометкаУдаления) Тогда 
	//		СтруктураДокументы = абс_БизнесПроцессыПривелегированный.СоздатьПустыеДокументы(Новый Структура("СсылкаНаОбъект",Ссылка), ОрганизацияИсточник, ОрганизацияПриемник, Дата);
	//		
	//		ДокументСписаниеОС       =  СтруктураДокументы.ДокументСписаниеОС;
	//		ДокументВводОстатковОС   =  СтруктураДокументы.ДокументВводОстатковОС;
	
	//		ДополнительныеСвойства.СоздаватьДокументы = Истина;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.ОбработкаБухгалтером И (НЕ ПометкаУдаления) Тогда 
		СтруктураДокументы = абс_БизнесПроцессыПривелегированный.СоздатьПустыеДокументы(Новый Структура("СсылкаНаОбъект",Ссылка), ОрганизацияИсточник, ОрганизацияПриемник, Дата);
		ДокументСписаниеОС       =  СтруктураДокументы.ДокументСписаниеОС;
		ДополнительныеСвойства.СоздаватьДокументы = Истина;
		
		мДокументСписаниеОС     = абс_БизнесПроцессыПривелегированный.СоздатьСписаниеОС(Новый Структура("СсылкаНаОбъект,ДокументСписаниеОС",Ссылка,ДокументСписаниеОС));
		ДокументСписаниеОС     =  мДокументСписаниеОС.ДокументСписаниеОС;
		
		//абс_БизнесПроцессыПривелегированный.ПровестиДокументПоОС(Новый Структура("СсылкаНаОбъект",ДокументСписаниеОС));
		
	КонецЕсли;
	
// {{KM WARE Лазаревский К.В. Заявка № 23.09.2015 начало
// принимающая сторона может быть и КЦ
// {{Старый код:
//	Если Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.ОбработкаФилиалом 
// }}Новый код:
Если ((Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.ОбработкаФилиалом ИЛИ Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.ОбработкаБухгалтером ) 
	

// {{KM WARE Малыгин П.К. Заявка № 24.11.2015 начало
// Проверка на филиал не нужна. Существуют передачи из головной организации в филиалы
//И ОрганизацияИсточник.абс_СтатусОрганизации = Перечисления.абс_СтатусОрганизации.Филиал)
// }}KM WARE Малыгин П.К. Заявка № 24.11.2015 окончание 

// }}KM WARE Лазаревский К.В. Заявка № 23.09.2015 окончание 		
		И (НЕ ПометкаУдаления)) Тогда 
		СтруктураДокументы = абс_БизнесПроцессыПривелегированный.СоздатьПустыеДокументы(Новый Структура("СсылкаНаОбъект",Ссылка), ОрганизацияИсточник, ОрганизацияПриемник, Дата);
		ДокументВводОстатковОС   =  СтруктураДокументы.ДокументВводОстатковОС;
		ДополнительныеСвойства.СоздаватьДокументы = Истина;
		
		мДокументВводОстатковОС = абс_БизнесПроцессыПривелегированный.СоздатьВводНачальныхОстатков(Новый Структура("СсылкаНаОбъект,ДокументВводОстатковОС",Ссылка,ДокументВводОстатковОС));
		ДокументВводОстатковОС = мДокументВводОстатковОС.ДокументВводОстатковОС;
		
		//абс_БизнесПроцессыПривелегированный.ПровестиДокументПоОС(Новый Структура("СсылкаНаОбъект",ДокументВводОстатковОС));
		
	КонецЕсли;
	
	
	//Если Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Завершен И (НЕ ПометкаУдаления) Тогда 
	//	Если ЗначениеЗаполнено(ДокументВводОстатковОС) Тогда
	//		Если Не ЗначениеЗаполнено(ДокументВводОстатковОС.абс_Обособленное) ИЛИ абс_ОбособленноеПодразделение <> ДокументВводОстатковОС.абс_Обособленное Тогда
	//			
	//			абс_БизнесПроцессыПривелегированный.ДополнитьДокументВводОстатков(Новый Структура("СсылкаНаОбъект,ОбособленноеПодразделение,Подразделение,ПодразделениеОрганизации",ДокументВводОстатковОС,абс_ОбособленноеПодразделение,Подразделение,ПодразделениеОрганизации));
	//			
	//		КонецЕсли;
	//	КонецЕсли;
	//КонецЕсли;
	
	Если Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Отказ Тогда
		абс_БизнесПроцессыПривелегированный.ДокументыПередачиОСВОтказ(Новый Структура("ДокументСписаниеОС,ДокументВводОстатковОС",ДокументСписаниеОС,ДокументВводОстатковОС));	
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	//Если ДополнительныеСвойства.Свойство("СоздаватьДокументы") Тогда	
	//	Если ДополнительныеСвойства.СоздаватьДокументы Тогда  
	//		мДокументСписаниеОС     = абс_БизнесПроцессыПривелегированный.СоздатьСписаниеОС(Новый Структура("СсылкаНаОбъект",Ссылка));
	//		ДокументСписаниеОС     =  мДокументСписаниеОС.ДокументСписаниеОС;
	//		
	//		мДокументВводОстатковОС = абс_БизнесПроцессыПривелегированный.СоздатьВводНачальныхОстатков(Новый Структура("СсылкаНаОбъект",Ссылка));
	//		ДокументВводОстатковОС = мДокументВводОстатковОС.ДокументВводОстатковОС;
	//	КонецЕсли;
	//КонецЕсли;
	
	//Если Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.ОбработкаБухгалтером И (НЕ ПометкаУдаления) Тогда
	//	мДокументСписаниеОС     = абс_БизнесПроцессыПривелегированный.СоздатьСписаниеОС(Новый Структура("СсылкаНаОбъект",Ссылка));
	//	ДокументСписаниеОС     =  мДокументСписаниеОС.ДокументСписаниеОС;
	//	
	//	абс_БизнесПроцессыПривелегированный.ПровестиДокументПоОС(Новый Структура("СсылкаНаОбъект",ДокументСписаниеОС));
	//	
	//КонецЕсли;
	//
	//Если Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Завершен И (НЕ ПометкаУдаления) Тогда
	//	мДокументВводОстатковОС = абс_БизнесПроцессыПривелегированный.СоздатьВводНачальныхОстатков(Новый Структура("СсылкаНаОбъект",Ссылка));
	//	ДокументВводОстатковОС = мДокументВводОстатковОС.ДокументВводОстатковОС;
	//	
	//	абс_БизнесПроцессыПривелегированный.ПровестиДокументПоОС(Новый Структура("СсылкаНаОбъект",ДокументВводОстатковОС));
	//	
	//КонецЕсли;
	//
	//
	//Если Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Отказ Тогда
	//	
	//	абс_БизнесПроцессыПривелегированный.ПометитьНаУдалениеДокументыВводаОстатков(Новый Структура("СсылкаНаОбъект",Ссылка));
	//	
	//КонецЕсли;
	
КонецПроцедуры

