
////////////////////////////////////////////////////////////////////////////////
// ПРОГРАММНЫЙ  ИНТЕРФЕЙС

Процедура СоздатьСписаниеОС(Ссылка, ДокументСписаниеОС) Экспорт
	
	ДокуметнОбъект = ДокументСписаниеОС.ПолучитьОбъект();
	ДокуметнОбъект.ОС.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_ПередачаОСМеждуФиллиалами.ОрганизацияИсточник КАК Организация,
	                      |	абс_ПередачаОСМеждуФиллиалами.СчетБУ КАК СчетСписанияБУ,
	                      |	абс_ПередачаОСМеждуФиллиалами.СчетНУ КАК СчетСписанияНУ,
	                      |	абс_ПередачаОСМеждуФиллиалами.Ответственный,
	                      |	абс_ПередачаОСМеждуФиллиалами.ПричинаСписания,
	                      |	абс_ПередачаОСМеждуФиллиалами.Событие,
	                      |	абс_ПередачаОСМеждуФиллиалами.Событие КАК СобытиеРегл,
	                      |	ИСТИНА КАК ОтражатьВБухгалтерскомУчете,
	                      |	ИСТИНА КАК ОтражатьВНалоговомУчете,
	                      |	ИСТИНА КАК ОтражатьВУправленческомУчете,
	                      |	ЗНАЧЕНИЕ(Перечисление.абс_ВидыОперацийСписанияОС.ПеремещениеМеждуФилиалами) КАК ВидОперации,
	                      |	абс_ПередачаОСМеждуФиллиалами.ОрганизацияПриемник КАК СубконтоБУ,
	                      |	абс_ПередачаОСМеждуФиллиалами.ОрганизацияПриемник КАК СубконтоНУ,
	                      |	абс_ПередачаОСМеждуФиллиалами.Дата
	                      |ИЗ
	                      |	Документ.абс_ПередачаОСМеждуФиллиалами КАК абс_ПередачаОСМеждуФиллиалами
	                      |ГДЕ
	                      |	абс_ПередачаОСМеждуФиллиалами.Ссылка = &Ссылка");
						  
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
	ВыборкаПоШапке.Следующий();
	
	ЗаполнитьЗначенияСвойств(ДокуметнОбъект, ВыборкаПоШапке);
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	абс_ПередачаОСМеждуФиллиаламиОС.НомерСтроки,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредствоПриемник,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Стоимость,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Амортизация,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияЗаМесяц,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СписаноНаЗатраты,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СтоимостьБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияЗаМесяцБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СписаноНаЗатратыБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СтоимостьНУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияНУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияЗаМесяцНУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СуммаКапитальныхВложенийВключаемыхВРасходыНУ
	               |ИЗ
	               |	Документ.абс_ПередачаОСМеждуФиллиалами.ОС КАК абс_ПередачаОСМеждуФиллиаламиОС
	               |ГДЕ
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Ссылка = &Ссылка";
				   
	ВыборкаПоТаблице = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаПоТаблице.Следующий() Цикл 
		ЗаполнитьЗначенияСвойств(ДокуметнОбъект.ОС.Добавить(), ВыборкаПоТаблице);
	КонецЦикла;
	
	ДокуметнОбъект.ОбменДанными.Загрузка = Истина;
	ДокуметнОбъект.ПометкаУдаления = Ложь;
	ДокуметнОбъект.Записать();

КонецПроцедуры

Процедура СоздатьВводНачальныхОстатков(Ссылка, ДокументВводОстатковОС) Экспорт
	
	ДокуметнОбъект = ДокументВводОстатковОС.ПолучитьОбъект();
	ДокуметнОбъект.ОС.Очистить();
	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_ПередачаОСМеждуФиллиалами.Ответственный,
	                      |	ИСТИНА КАК ОтражатьВБухгалтерскомУчете,
	                      |	ИСТИНА КАК ОтражатьВНалоговомУчете,
	                      |	ИСТИНА КАК ОтражатьВУправленческомУчете,
	                      |	ЗНАЧЕНИЕ(Перечисление.абс_ВидыОперацийВводОстОС.ПоступлениеПоАвизо) КАК ВидОперации,
	                      |	абс_ПередачаОСМеждуФиллиалами.Дата,
	                      |	абс_ПередачаОСМеждуФиллиалами.ОрганизацияПриемник КАК Организация,
	                      |	абс_ПередачаОСМеждуФиллиалами.ПодразделениеОрганизации,
	                      |	абс_ПередачаОСМеждуФиллиалами.Подразделение
	                      |ИЗ
	                      |	Документ.абс_ПередачаОСМеждуФиллиалами КАК абс_ПередачаОСМеждуФиллиалами
	                      |ГДЕ
	                      |	абс_ПередачаОСМеждуФиллиалами.Ссылка = &Ссылка");
						  
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	ВыборкаПоШапке = Запрос.Выполнить().Выбрать();
	ВыборкаПоШапке.Следующий();
	
	ЗаполнитьЗначенияСвойств(ДокуметнОбъект, ВыборкаПоШапке);
	
	//|	ВЫБОР
	//|		КОГДА ЕСТЬNULL(ПервоначальнуеНУ.МетодНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.ПустаяСсылка)
	//|			ТОГДА УчетнаяПолитика.МетодНачисленияАмортизацииНУ
	//|		ИНАЧЕ ПервоначальнуеНУ.МетодНачисленияАмортизации
	//|	КОНЕЦ КАК МетодНачисленияАмортизацииНУ,
	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	абс_ПередачаОСМеждуФиллиаламиОС.НомерСтроки,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредствоПриемник КАК ОсновноеСредствоПриемник,
	               |	СостоянияОС_Эксплутатация.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	               |	СостоянияОСОрганизаций__Эксплутатация.ДатаСостояния КАК ДатаВводаВЭксплуатациюРегл,
	               |	СостоянияОС_Принятие.ДатаСостояния КАК ДатаПринятияКУчету,
	               |	СостоянияОСОрганизаций_Принятие.ДатаСостояния КАК ДатаПринятияКУчетуРегл,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство КАК ОсновноеСредство,
	               |	&СобытиеПринятияКУчету,
	               |	&СобытиеПринятияКУчету КАК СобытиеПринятияКУчетуРегл,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Стоимость КАК ПервоначальнаяСтоимость,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	               |	ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации) КАК ПорядокВключенияСтоимостиВСоставРасходовНУ,
	               |	СчетаБУ.СчетУчета КАК СчетУчетаБУ,
	               |	СчетаБУ.СчетНачисленияАмортизации КАК СчетАмортизацииБУ,
	               |	СчетаНУ.СчетУчета КАК СчетУчетаНУ,
	               |	СчетаНУ.СчетНачисленияАмортизации КАК СчетАмортизацииНУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Амортизация КАК НакопленнаяАмортизация,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияБУ КАК НакопленнаяАмортизацияБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияНУ КАК СуммаНакопленнойАмортизацииНУ,
				   |	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияНУ КАК НакопленнаяАмортизацияНУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.ТекущаяСтоимость,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.ТекущаяСтоимостьБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.ТекущаяСтоимостьНУ,
	               |	ПараметрыАмортизация.СрокПолезногоИспользования,
	               |	ПараметрыАмортизация.КоэффициентАмортизации,
	               |	ПараметрыАмортизация.КоэффициентУскорения,
	               |	ПараметрыАмортизацияБУ.СрокПолезногоИспользования КАК СрокПолезногоИспользованияБУ,
	               |	ПараметрыАмортизацияБУ.КоэффициентАмортизации КАК КоэффициентАмортизацииБУ,
	               |	ПараметрыАмортизацияБУ.КоэффициентУскорения КАК КоэффициентУскоренияБУ,
	               |	ПараметрыАмортизацияНУ.СрокПолезногоИспользования КАК СрокПолезногоИспользованияНУ,
	               |	ПараметрыАмортизация.СтоимостьДляВычисленияАмортизации,
	               |	ПараметрыАмортизацияБУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизацииБУ,
	               |	ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Линейный) КАК МетодНачисленияАмортизацииНУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СпособОтражения КАК СпособОтраженияРасходовПоАмортизации,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СпособОтражения КАК СпособОтраженияРасходовПоАмортизацииБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.СпособОтражения КАК СпособОтраженияРасходовПоАмортизацииНУ,
	               |	ПервоначальныеСведенияОС.СпособНачисленияАмортизации,
	               |	ПервоначальныеБУ.СпособНачисленияАмортизации КАК СпособНачисленияАмортизацииБУ,
	               |	ПервоначальныеБУ.СпособПоступления КАК СпособПоступленияБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Ссылка.СчетБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Ссылка.СчетНУ,
	               |	ПараметрыАмортизацияНУ.СрокИспользованияДляВычисленияАмортизации КАК ФактическийСрокИспользованияНУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Ссылка.ОрганизацияИсточник КАК СубконтоБУ,
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Ссылка.ОрганизацияИсточник КАК СубконтоНУ,
	               |	ИСТИНА КАК НачислятьАмортизацию,
	               |	ИСТИНА КАК НачислятьАмортизациюБУ,
	               |	ИСТИНА КАК НачислятьАмортизациюНУ,
				   |	&СобытиеВводВЭксплуатацию КАК СобытиеВводВЭксплуатацию,
				   |	&СобытиеВводВЭксплуатацию КАК СобытиеВводВЭксплуатациюРегл
	               |ИЗ
	               |	Документ.абс_ПередачаОСМеждуФиллиалами.ОС КАК абс_ПередачаОСМеждуФиллиаламиОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС КАК СостоянияОС_Эксплутатация
	               |		ПО (СостоянияОС_Эксплутатация.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВведеноВЭксплуатацию))
	               |			И абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = СостоянияОС_Эксплутатация.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций__Эксплутатация
	               |		ПО (СостоянияОСОрганизаций__Эксплутатация.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ВведеноВЭксплуатацию))
	               |			И абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = СостоянияОСОрганизаций__Эксплутатация.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС КАК СостоянияОС_Принятие
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = СостоянияОС_Принятие.ОсновноеСредство
	               |			И (СостоянияОС_Принятие.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций_Принятие
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = СостоянияОСОрганизаций_Принятие.ОсновноеСредство
	               |			И (СостоянияОСОрганизаций_Принятие.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету))
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних КАК СчетаБУ
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = СчетаБУ.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаНалоговогоУчетаОС.СрезПоследних КАК СчетаНУ
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = СчетаНУ.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОС.СрезПоследних КАК ПараметрыАмортизация
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = ПараметрыАмортизация.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних КАК ПараметрыАмортизацияБУ
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = ПараметрыАмортизацияБУ.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних КАК ПараметрыАмортизацияНУ
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = ПараметрыАмортизацияНУ.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних КАК ПервоначальнуеНУ
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = ПервоначальнуеНУ.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних КАК ПервоначальныеСведенияОС
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних КАК ПервоначальныеБУ
	               |		ПО абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство = ПервоначальныеБУ.ОсновноеСредство,
	               |	РегистрСведений.УчетнаяПолитикаОрганизаций.СрезПоследних(, Организация = &ОрганизацияПриемник) КАК УчетнаяПолитика
	               |ГДЕ
	               |	абс_ПередачаОСМеждуФиллиаламиОС.Ссылка = &Ссылка";
				   
	Запрос.УстановитьПараметр("СобытиеПринятияКУчету", Справочники.СобытияОС.НайтиПоНаименованию("Принятие к учету"));
	Запрос.УстановитьПараметр("СобытиеВводВЭксплуатацию", Справочники.СобытияОС.НайтиПоНаименованию("Ввод в эксплуатацию"));
	Запрос.УстановитьПараметр("ОрганизацияПриемник", Ссылка.ОрганизацияПриемник);
	
	абс_Обособленное      = Ссылка.ПодразделениеОрганизации;
	ОрганизацияПолучатель = Ссылка.ОрганизацияПриемник;
		
	ВыборкаПоТаблице = Запрос.Выполнить().Выбрать();
	//МетодНачисленияАмортизацииНУ , ДатаПереходаКРасчетуПоБазовойСтоимостиНУ, ФактическийСрокИспользованияНУ
	Пока ВыборкаПоТаблице.Следующий() Цикл 
		НоваяСтрока = ДокуметнОбъект.ОС.Добавить();
		Сведения = УправлениеВнеоборотнымиАктивами.ПолучитьСведенияОбОС(ВыборкаПоТаблице.ОсновноеСредство, ВыборкаПоШапке.Дата);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Сведения);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаПоТаблице);
		Если ЗначениеЗаполнено(ВыборкаПоТаблице.ОсновноеСредствоПриемник) Тогда 
			НоваяСтрока.ОсновноеСредство = ВыборкаПоТаблице.ОсновноеСредствоПриемник;
		Иначе
			НоваяСтрока.ОсновноеСредство = абс_БизнесПроцессыПривелегированный.ПолучитьОСПриемник(ВыборкаПоТаблице.ОсновноеСредство,,ВыборкаПоШапке.абс_ОбособленноеПодразделение, ВыборкаПоШапке.ОрганизацияПриемник);
		КонецЕсли;
		НоваяСтрока.ИнвентарныйНомерРегл = НоваяСтрока.ОсновноеСредство.Код;
		НоваяСтрока.МОЛРегл = НоваяСтрока.МОЛ;
	КонецЦикла;
	
	ДокуметнОбъект.ОбменДанными.Загрузка = Истина;
	ДокуметнОбъект.ПометкаУдаления = Ложь;
	ДокуметнОбъект.Записать();
		
КонецПроцедуры

//Функция ПолучитьОСПриемник(ОСИсточник, ОСПриемник = Неопределено) Экспорт
//	
//	Если ЗначениеЗаполнено(ОСПриемник) Тогда 
//		Возврат ОСПриемник;
//	КонецЕсли;
//	
//	Запрос = Новый Запрос("Выбрать т.Ссылка из Справочник.ОсновныеСредства как т где т.абс_ОсновноеСредствоИсточник = &ОС");
//	Запрос.УстановитьПараметр("ОС", ОСИсточник);
//	Выборка = Запрос.Выполнить().Выбрать();
//	Если Выборка.Следующий() Тогда  
//		Возврат Выборка.Ссылка;
//	КонецЕсли;
//	
//	ОСПриемникОбъект = ОСИсточник.Скопировать(); 
//	ОСПриемникОбъект.Код = ОСИсточник.Код;
//	ОСПриемникОбъект.абс_ОсновноеСредствоИсточник = ОСИсточник;
//	ОСПриемникОбъект.Записать();
//	
//	Возврат ОСПриемникОбъект.Ссылка; 
//		
//КонецФункции

Функция НайтиОСПриемник(ОСИсточник, ОСПриемник = Неопределено) Экспорт
	
	Если ЗначениеЗаполнено(ОСПриемник) Тогда 
		Возврат ОСПриемник;
	КонецЕсли;
	
	Запрос = Новый Запрос("Выбрать т.Ссылка из Справочник.ОсновныеСредства как т где т.абс_ОсновноеСредствоИсточник = &ОС");
	Запрос.УстановитьПараметр("ОС", ОСИсточник);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда  
		Возврат Выборка.Ссылка;
	КонецЕсли;
	
	Возврат ОСПриемник; 
	
КонецФункции

Процедура СоздатьПустыеДокументы(ДокументВводОстатковОС, ДокументСписаниеОС, ОрганизацияИсточник, ОрганизацияПриемник, Дата) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДокументСписаниеОС) Тогда 
		ДокуметнОбъект = Документы.СписаниеОС.СоздатьДокумент();
		ДокуметнОбъект.Дата = Дата;
		ДокуметнОбъект.Организация = ОрганизацияИсточник;
		ДокуметнОбъект.УстановитьНовыйНомер();
		ДокуметнОбъект.ОбменДанными.Загрузка = Истина;
		ДокуметнОбъект.Записать();
		ДокументСписаниеОС = ДокуметнОбъект.Ссылка;	
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ДокументВводОстатковОС) Тогда 
		ДокуметнОбъект = Документы.ВводНачальныхОстатковОС.СоздатьДокумент();
		ДокуметнОбъект.Дата = Дата;
		ДокуметнОбъект.Организация = ОрганизацияПриемник;
		ДокуметнОбъект.УстановитьНовыйНомер();
	 	ДокуметнОбъект.ОбменДанными.Загрузка = Истина;
		ДокуметнОбъект.Записать();
		ДокументВводОстатковОС = ДокуметнОбъект.Ссылка;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПометитьНаУдаление(ДокументВводОстатковОС, ДокументСписаниеОС) Экспорт
	
	Если ЗначениеЗаполнено(ДокументСписаниеОС) Тогда 
		ДокуметнОбъект = ДокументСписаниеОС.ПолучитьОбъект();
		ДокуметнОбъект.ПометкаУдаления = Истина;
		ДокуметнОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДокументВводОстатковОС) Тогда 
		ДокуметнОбъект = ДокументВводОстатковОС.ПолучитьОбъект();
		ДокуметнОбъект.ПометкаУдаления = Истина;
		ДокуметнОбъект.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	КонецЕсли;
	
КонецПроцедуры

