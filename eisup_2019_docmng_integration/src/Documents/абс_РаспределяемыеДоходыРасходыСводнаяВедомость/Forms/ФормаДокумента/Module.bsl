
&НаСервере
Перем мРолиПользователя;


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьСписокДоступныхСтатусов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьДоступность();
	ПериодСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ПричинаИзмененияСтатуса = "";
	
	Если СпрашиватьПричинуИзмененияСтатуса() Тогда	
		Если Не Отказ Тогда
			ВвестиСтроку(Объект.ПричинаИзмененияСтатуса, "Введите причину изменения статуса",,Истина);
		КонецЕсли;	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьСписокДоступныхСтатусов();
	УстановитьДоступность();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ЭЛЕМЕНТОВ ФОРМЫЫ

&НаКлиенте
Процедура ДокументыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Документы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Документ) Тогда 
		ОткрытьЗначение(ТекущиеДанные.Документ);		
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ВидОперацииРаспределнияПриИзменении(Элемент)
	
	Если ВопросОчиститьТаблицу() Тогда 
		Объект.ДокументыРаспределения.Очистить();
	КонецЕсли;
		
КонецПроцедуры


&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	Объект.Дата = КонецМесяца(Объект.Дата);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ КОМАНД

&НаКлиенте
Процедура ИсторияСтатусов(Команда)
	
	ЗначениеОтбора = Новый Структура("Документ", Объект.Ссылка);
	ПараметрыВыбора = Новый Структура("Отбор", ЗначениеОтбора);
	ОткрытьФорму("РегистрСведений.абс_ИзменениеСтатусовРаспреденияДоходовРасходов.ФормаСписка", ПараметрыВыбора);
		
КонецПроцедуры

&НаКлиенте
Процедура ПечатьСводнаяВедомость(Команда)

	ТабДок = ПолучитьТабличныйДокументСводнаяВедомостьПоРаспределяемымДоходамСервер(ПолучитьМассивДокументов(), Объект.Организация);
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДок, 1, Ложь,"Сводная  ведомость по распределяемым доходам");
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуВДокументах(Команда)
	
	ТекущиеДанные = Элементы.Документы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если НЕ ВопросУдалитьДокумент() Тогда 
		Возврат;
	КонецЕсли;
	
	МассивДокументов = Новый Массив;
	МассивДокументов.Добавить(ТекущиеДанные.Документ);
	
	ПеревестиСтатусДокументов(МассивДокументов, Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Отказ);
	
	МассивУдаления = Объект.ДокументыРаспределения.НайтиСтроки(Новый Структура("Документ", ТекущиеДанные.Документ));
	Для Каждого строка из МассивУдаления Цикл 
		Объект.ДокументыРаспределения.Удалить(строка);			
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуДокументов(Команда)
	
	Если ВопросОчиститьТаблицу() Тогда 
		ЗаполнитьТаблицуДокументовНаСервере();
	КонецЕсли;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ КЛИЕНТСКИЕ ПРОЦЕДУРЫ И ФУНКЦИ
 
&НаКлиенте
Функция ПолучитьМассивДокументов()
	
	МассивИсточник = Новый Массив;
	МассивПриемник = Новый Массив;
	
	Для Каждого строка из Объект.ДокументыРаспределения Цикл 
		МассивИсточник.Добавить(строка.Документ);	
	КонецЦикла;
	
	Для Каждого Элемент Из МассивИсточник Цикл	
		Если МассивПриемник.Найти(Элемент) = Неопределено Тогда	
			МассивПриемник.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивПриемник;
	
КонецФункции

&НаКлиенте
Функция ВопросОчиститьТаблицу()
	
	Если Объект.ДокументыРаспределения.Количество() = 0 Тогда 
		Возврат Истина;
	КонецЕсли;
	
	Ответ = Вопрос("Сводная ведомость будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Возврат Истина
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Функция ВопросУдалитьДокумент()
	
	Ответ = Вопрос("Удалить документ из сводной ведомости и перевести в статус ""Отказ""?", РежимДиалогаВопрос.ДаНет, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Возврат Истина
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура УстановитьДоступность()
	
	РазрешитьРедактирвоание = (Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеДЭФ"));
	Элементы.ФормаЗаполнитьТаблицуДокументов.Доступность = РазрешитьРедактирвоание;
	
	Для Каждого элемент Из Элементы Цикл 	
		Если НЕ (элемент.Имя = "Статус"
			ИЛИ ТипЗнч(элемент) = тип("ДекорацияФормы") 	
			ИЛИ ТипЗнч(элемент) = тип("КнопкаКоманднойПанели") 
			ИЛИ ТипЗнч(элемент) = тип("КнопкаФормы")
			ИЛИ ТипЗнч(элемент) = тип("ГруппаФормы")
			ИЛИ ТипЗнч(элемент) = тип("УправляемаяФорма")
			ИЛИ ТипЗнч(элемент) = тип("ДополнениеЭлементаФормы")) Тогда
				элемент.ТолькоПросмотр = НЕ РазрешитьРедактирвоание;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЧИЕ СЕРВЕРНЫЕ ПРОЦЕДУРЫ И ФУНКЦИ

&НаСервере
Процедура ЗаполнитьСписокДоступныхСтатусов()
	
	СтруктураПараметров = Новый Структура("ЦФО, Организация, Ответственный, ТекущийСтатус, Статус");
	ЗаполнитьЗначенияСвойств(СтруктураПараметров, Объект);
	СтруктураПараметров.ТекущийСтатус = Объект.Ссылка.Статус;
	
	МассивПропускаемыхСтатусов = Новый Массив;
	МассивПропускаемыхСтатусов.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.Подготовка);
	МассивПропускаемыхСтатусов.Добавить(Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеРуководителемБлока);
	
	МассивДоступныхСтатусов = РегистрыСведений.абс_ИзменениеСтатусовРаспреденияДоходовРасходов.ПолучитьСписокДоступныхСтатусво(СтруктураПараметров, 
															глЗначениеПеременной("глТекущийПользователь"), 
															мРолиПользователя);  
																														
	Если МассивДоступныхСтатусов.Количество() > 0 Тогда 														
		Для й = 0 По МассивДоступныхСтатусов.Количество()-1 Цикл 
			Если МассивПропускаемыхСтатусов.Найти(МассивДоступныхСтатусов[й]) <> Неопределено Тогда 
				МассивДоступныхСтатусов[й] = Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеДЭФ; 	
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
																													
	Элементы.Статус.СписокВыбора.ЗагрузитьЗначения(МассивДоступныхСтатусов);
	
КонецПроцедуры

&НаСервере
Функция СпрашиватьПричинуИзмененияСтатуса()
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СпрашиватьПричину = НЕ Объект.Статус = Объект.Ссылка.Статус;
	
	Возврат СпрашиватьПричину;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьТаблицуДокументовНаСервере()
		
	ДокументОбъект = РеквизитФормыВЗначение("Объект");
	ДокументОбъект.ЗаполнитьТаблицуДокументов();
	ЗначениеВРеквизитФормы(ДокументОбъект, "Объект");
			
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТабличныйДокументСводнаяВедомостьПоРаспределяемымДоходамСервер(МассивДокументов, Организация)
		
	Возврат Документы.абс_РаспределяемыеДоходыРасходы.ВыполнитьПечатьСводнаяВедомостьПоРаспределяемымДоходам(МассивДокументов, Организация);
	
КонецФункции

&НаСервереБезКонтекста
Процедура ПеревестиСтатусДокументов(МассивДокументов, Статус)
	
	Документы.абс_РаспределяемыеДоходыРасходыСводнаяВедомость.ПеревестиСтатусДокументов(МассивДокументов, Статус);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ ДЛЯ ВЫБОРА ПЕРИОДА

&НаКлиенте
Процедура ПериодСтрокаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	
	СтруктураПараметров = Новый Структура("Значение");
	РаботаСДиалогами.НачалоВыбораИзСпискаПредставленияПериодаРегистрации(СтруктураПараметров, СтандартнаяОбработка, Объект.Дата, ЭтаФорма);
	Если СтруктураПараметров.Значение <> Неопределено Тогда 
		ПериодСтрока = СтруктураПараметров.Значение;
	Иначе
		ПериодСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.Дата);		
	КонецЕсли;
	
	Объект.Дата = КонецМесяца(Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокаПриИзменении(Элемент)
	
	РаботаСДиалогами.ДатаКакМесяцПодобратьДатуПоТексту(ПериодСтрока, Объект.Дата);
	ПериодСтрока = РаботаСДиалогами.ДатаКакМесяцПредставление(Объект.Дата);
	
	Объект.Дата = КонецМесяца(Объект.Дата);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокаОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	
	//РаботаСДиалогами.ДатаКакМесяцОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодСтрокаОчистка(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

