
Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Статус 			= Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеДЭФ;
	Ответственный 	= глЗначениеПеременной("глТекущийПользователь");
	Организация		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Ответственный, "ОсновнаяОрганизация");
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)

	Статус 			= Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеДЭФ;
	Ответственный 	= глЗначениеПеременной("глТекущийПользователь");
	Организация		= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Ответственный, "ОсновнаяОрганизация");
    ДокументыРаспределения.Очистить();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	ПроверитьПовторныйВводОперации(Отказ);	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусРаспреденияДоходовРасходов(Ссылка);
	
	Если НЕ Статус = СтатусПоРегистру Тогда
		РегистрыСведений.абс_ИзменениеСтатусовРаспреденияДоходовРасходов.ЗаписатьНовыйСтатус(Ссылка, Статус, ПричинаИзмененияСтатуса);
		Документы.абс_РаспределяемыеДоходыРасходыСводнаяВедомость.ПеревестиСтатусДокументов(ПолучитьМассивДокументов(), Статус, Отказ);
	КонецЕсли;
	
КонецПроцедуры


Процедура ЗаполнитьТаблицуДокументов() Экспорт
	
	ДокументыРаспределения.Очистить();
	
	Запрос = Новый Запрос;
	Если ВидОперацииРаспределния = 0 Тогда 
		Запрос.Текст = "ВЫБРАТЬ
		|	абс_РаспределяемыеДоходыРасходыДоходы.Ссылка КАК Документ,
		|	абс_РаспределяемыеДоходыРасходыДоходы.НомерСтроки,
		|	абс_РаспределяемыеДоходыРасходыДоходы.Филиал,
		|	абс_РаспределяемыеДоходыРасходыДоходы.КодБУ,
		|	абс_РаспределяемыеДоходыРасходыДоходы.КодУУ,
		|	абс_РаспределяемыеДоходыРасходыДоходы.СуммарныйКоэффициентРаспределения,
		|	абс_РаспределяемыеДоходыРасходыДоходы.ОбщаяСуммаКРаспределению,
		|	абс_РаспределяемыеДоходыРасходыДоходы.СчетДт,
		|	абс_РаспределяемыеДоходыРасходыДоходы.СчетКт,
		|	абс_РаспределяемыеДоходыРасходыДоходы.НоменклатурнаяГруппа,
		|	абс_РаспределяемыеДоходыРасходыДоходы.СтатьяЗатрат,
		|	абс_РаспределяемыеДоходыРасходыДоходы.СтавкаНДС,
		|	абс_РаспределяемыеДоходыРасходыДоходы.СтатьяБюджета,
		|	абс_РаспределяемыеДоходыРасходыДоходы.Ссылка.ЦФУ,
		|	абс_РаспределяемыеДоходыРасходыДоходы.Ссылка.ЦФО
		|ИЗ
		|	Документ.абс_РаспределяемыеДоходыРасходы.Доходы КАК абс_РаспределяемыеДоходыРасходыДоходы
		|ГДЕ
		|	абс_РаспределяемыеДоходыРасходыДоходы.Ссылка.Статус = &Статус
		|	И абс_РаспределяемыеДоходыРасходыДоходы.Ссылка.Дата >= &ДатаНачала
		|	И абс_РаспределяемыеДоходыРасходыДоходы.Ссылка.Дата <= &ДатаКонца";
	ИначеЕсли ВидОперацииРаспределния = 1 Тогда 
		Запрос.Текст = "ВЫБРАТЬ
		|	абс_РаспределяемыеДоходыРасходыРасходы.Ссылка КАК Документ,
		|	абс_РаспределяемыеДоходыРасходыРасходы.НомерСтроки,
		|	абс_РаспределяемыеДоходыРасходыРасходы.Филиал,
		|	абс_РаспределяемыеДоходыРасходыРасходы.КодБУ,
		|	абс_РаспределяемыеДоходыРасходыРасходы.КодУУ,
		|	абс_РаспределяемыеДоходыРасходыРасходы.СуммарныйКоэффициентРаспределения,
		|	абс_РаспределяемыеДоходыРасходыРасходы.ОбщаяСуммаКРаспределению,
		|	абс_РаспределяемыеДоходыРасходыРасходы.СчетДт,
		|	абс_РаспределяемыеДоходыРасходыРасходы.СчетКт,
		|	абс_РаспределяемыеДоходыРасходыРасходы.НоменклатурнаяГруппа,
		|	абс_РаспределяемыеДоходыРасходыРасходы.СтатьяЗатрат,
		|	абс_РаспределяемыеДоходыРасходыРасходы.СтавкаНДС,
		|	абс_РаспределяемыеДоходыРасходыРасходы.Подразделение,
		|	абс_РаспределяемыеДоходыРасходыРасходы.СтатьяБюджета,
		|	абс_РаспределяемыеДоходыРасходыРасходы.ВидДеятельности,
		|	абс_РаспределяемыеДоходыРасходыРасходы.ПодразделениеСтр,
		|	абс_РаспределяемыеДоходыРасходыРасходы.ПодразделениеПриемник,
		|	абс_РаспределяемыеДоходыРасходыРасходы.Ссылка.ЦФУ,
		|	абс_РаспределяемыеДоходыРасходыРасходы.Ссылка.ЦФО
		|ИЗ
		|	Документ.абс_РаспределяемыеДоходыРасходы.Расходы КАК абс_РаспределяемыеДоходыРасходыРасходы
		|ГДЕ
		|	абс_РаспределяемыеДоходыРасходыРасходы.Ссылка.Статус = &Статус
		|	И абс_РаспределяемыеДоходыРасходыРасходы.Ссылка.Дата >= &ДатаНачала
		|	И абс_РаспределяемыеДоходыРасходыРасходы.Ссылка.Дата <= &ДатаКонца";		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("Статус", Перечисления.абс_СтатусыРаспределенияДоходовРасходов.СогласованиеДЭФ);
	Запрос.УстановитьПараметр("ДатаНачала", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("ДатаКонца", 	КонецМесяца(Дата));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 		
		строкаДокументов = ДокументыРаспределения.Добавить();
		ЗаполнитьЗначенияСвойств(строкаДокументов, Выборка);		
	КонецЦикла;
	
КонецПроцедуры


Процедура ПроверитьПовторныйВводОперации(Отказ)
		
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                      |	Док.Ссылка
	                      |ИЗ
	                      |	Документ.абс_РаспределяемыеДоходыРасходыСводнаяВедомость КАК Док
	                      |ГДЕ
	                      |	Док.Организация = &Организация
	                      |	И Док.ВидОперацииРаспределния = &ВидОперацииРаспределния
	                      |	И Док.Ссылка <> &Ссылка
	                      |	И КОНЕЦПЕРИОДА(Док.Дата, МЕСЯЦ) = &Период");
						  
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Период", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("ВидОперацииРаспределния", ВидОперацииРаспределния);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Результат = Запрос.Выполнить();
	
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку("Для %1 по виду операции %2 за период %4, уже введен документ: %3", 
																				Организация, 
																				?(ВидОперацииРаспределния = 0, "Доходы", "Расходы"),
																				Выборка.Ссылка,
																				Формат(Дата, "ДФ='ММММ гггг'"));
		ttk_ОбщегоНазначения.СообщитьОбОшибке(ТекстОшибки, Отказ);
	КонецЕсли;
	

КонецПроцедуры

Функция ПолучитьМассивДокументов()
	
	МассивИсточник = Новый Массив;
	МассивПриемник = Новый Массив;
	
	Для Каждого строка из ДокументыРаспределения Цикл 
		МассивИсточник.Добавить(строка.Документ);	
	КонецЦикла;
	
	Для Каждого Элемент Из МассивИсточник Цикл	
		Если МассивПриемник.Найти(Элемент) = Неопределено Тогда	
			МассивПриемник.Добавить(Элемент);
		КонецЕсли;
	КонецЦикла;
	
	Возврат МассивПриемник;
	
КонецФункции

