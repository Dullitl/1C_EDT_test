// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	Возврат Новый Структура("ЗаявлениеВФССДополнительныеДниОтпуска", "Заявление о возмещении расходов на оплату выходных дней");
КонецФункции // ПолучитьСтруктуруПечатныхФорм()

#Если ТолстыйКлиентОбычноеПриложение Тогда

//Процедура вывода сведений на печать
Функция Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	
	Если ИмяМакета = "ЗаявлениеВФССДополнительныеДниОтпуска" Тогда
		
		ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
		ОбработкаКомментариев.УдалитьСообщения();
		
		ВыборкаПоШапкеДокумента = СформироватьЗапросПоШапкеДокумента().Выбрать();
		ВыборкаПоШапкеДокумента.Следующий();
		
		ВыборкаПоТЧРаботникиОрганизации = СформироватьЗапросПоТЧРаботникиОрганизации().Выбрать();
	
		Отказ = Ложь;
	
		Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
		
		ПроверкаЗаполненияШапкиДокумента(ВыборкаПоШапкеДокумента, Отказ, Заголовок);
		
		Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
		
			ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(ВыборкаПоТЧРаботникиОрганизации, Отказ, Заголовок);
		
		КонецЦикла; 
		
		Если Отказ Тогда
	
			ОбработкаКомментариев.ПоказатьСообщения();
			
			Возврат Неопределено;
	
		КонецЕсли; 
		
		ВыборкаПоТЧРаботникиОрганизации.Сбросить();
		
		ТабДокумент = Новый ТабличныйДокумент;
		
		ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаявлениеВФССДополнительныеДниОтпуска";
		
		Макет = ПолучитьМакет("ЗаявлениеВФССДополнительныеДниОтпуска");
		
		ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
		
		ДлиныСтрок = Новый Массив();
		ДлиныСтрок.Добавить(27);
			
		НаПечатьНаименованиеТерриториальногоОрганаФСС = ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(ВыборкаПоШапкеДокумента.НаименованиеТерриториальногоОрганаФСС, ДлиныСтрок);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НаПечатьНаименованиеТерриториальногоОрганаФСС, ОбластьШапка, "НаименованиеФСС_", 135);
		
		НаПечатьОрганизация = ВыборкаПоШапкеДокумента.ОрганизацияНаименование;
			
		НаПечатьОрганизация = ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(НаПечатьОрганизация, ДлиныСтрок);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НаПечатьОрганизация, ОбластьШапка, "Страхователь_", 81);
		
		
		ТабДокумент.Вывести(ОбластьШапка);
		
		Пока ВыборкаПоТЧРаботникиОрганизации.Следующий() Цикл
			
			Если ВыборкаПоТЧРаботникиОрганизации.НомерСтроки > 1 Тогда
			
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
			
				ТабДокумент.Вывести(ОбластьСтрока);
			
			КонецЕсли; 
		
			НПП = Формат(ВыборкаПоТЧРаботникиОрганизации.НомерСтроки, "ЧЦ=2");
			
			НПП = Лев("  ", 2 - СтрДлина(НПП)) + НПП;
			
			ДлиныСтрок = Новый Массив();
			ДлиныСтрок.Добавить(28);
			
			ФИО = ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(ОбщегоНазначения.ФамилияИнициалыФизЛица(ВыборкаПоТЧРаботникиОрганизации.ФИОСотрудника), ДлиныСтрок);
			
			Статус = ВыборкаПоТЧРаботникиОрганизации.Статус;
			
			СреднедневнойЗаработок = Формат(ВыборкаПоТЧРаботникиОрганизации.СреднедневнойЗаработок, "ЧЦ=15; ЧДЦ=2; ЧН=; ЧГ=");
			
			СреднедневнойЗаработок = Лев("        ", 8 - СтрДлина(СреднедневнойЗаработок)) + СреднедневнойЗаработок;
			
			ПерваяСтрокаВыводилась = Ложь;
			
			Пока СтрДлина(ФИО) > 0 ИЛИ НЕ ПерваяСтрокаВыводилась Цикл
				
				ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
				
				Если НЕ ПерваяСтрокаВыводилась Тогда
					
					ПерваяСтрокаВыводилась = Истина;
					
					ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(НПП, ОбластьСтрока, "НПП_", 2);
					
					ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СреднедневнойЗаработок, ОбластьСтрока, "СреднедневнойЗаработок_", 8);
					
					ОбластьСтрока.Области["Статус"].Текст = Статус;
				
				КонецЕсли;
				
				Если СтрДлина(ФИО) <= 28 Тогда
				
					СтрокаФИО = ФИО;
					
					ФИО = "";
				
				Иначе
				
					СтрокаФИО = Лев(ФИО, 28);
					
					ФИО = Сред(ФИО, 29);
				
				КонецЕсли;
				
				ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрокаФИО, ОбластьСтрока, "ФИОПолучателя_", 28);
				
				ТабДокумент.Вывести(ОбластьСтрока);
				
			КонецЦикла;
			
		КонецЦикла;
		
		ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
		
		ИтогоСреднеДневнойЗаработок = РаботникиОрганизации.Итог("СреднедневнойЗаработок");
		
		СтрокаИтогоСреднеДневнойЗаработок = Формат(ИтогоСреднеДневнойЗаработок, "ЧДЦ=2; ЧН=; ЧГ=");
		
		СтрокаИтогоСреднеДневнойЗаработок = Лев("        ", 8 - СтрДлина(СтрокаИтогоСреднеДневнойЗаработок)) + СтрокаИтогоСреднеДневнойЗаработок; 
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрокаИтогоСреднеДневнойЗаработок, ОбластьПодвал, "ИтогоСреднеДневнойЗаработок_", 8);
		
		ИтогоРазмерПособия = ВыборкаПоШапкеДокумента.СуммаПособий;
		
		Рубли = Формат(Цел(ИтогоРазмерПособия), "ЧН=; ЧГ=");
		
		Рубли = Лев("        ", 8 - СтрДлина(Рубли)) + Рубли;
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Рубли, ОбластьПодвал, "ИтогоРазмерПособияРубли_", 8);
		
		Копейки = Формат((ИтогоРазмерПособия - Цел(ИтогоРазмерПособия)) * 100, "ЧЦ=2; ЧН=; ЧВН=");
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Копейки, ОбластьПодвал, "ИтогоРазмерПособияКопейки_", 2);
		
		СтрокаКоличествоСтраниц = Формат(ВыборкаПоШапкеДокумента.КоличествоСтраниц, "ЧЦ=2");
		
		СтрокаКоличествоСтраниц = Лев("  ", 2 - СтрДлина(СтрокаКоличествоСтраниц)) + СтрокаКоличествоСтраниц;
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(СтрокаКоличествоСтраниц, ОбластьПодвал, "КоличествоСтраниц_", 2);
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.РегистрационныйНомерФСС, ОбластьПодвал, "РегистрационныйНомерФСС_", 10);
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.ДополнительныйКодФСС, ОбластьПодвал, "ДополнительныйКодФСС_", 10);
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.КодПодчиненностиФСС, ОбластьПодвал, "КодПодчиненностиФСС_", 5);
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.ИНН, ОбластьПодвал, "ИНН_", 12);
		
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(ВыборкаПоШапкеДокумента.КПП, ОбластьПодвал, "КПП_", 9);
		
		ДлиныСтрок = Новый Массив();
		ДлиныСтрок.Добавить(24);
		ДлиныСтрок.Добавить(63); // нужно 43, даю больше что бы хоть что то влезло
			
		Адрес = ОбменСведениямиОПособияхСФСС.РазбитьСтрокуНаПодСтроки(УправлениеКонтактнойИнформацией.ПолучитьПредставлениеАдресаПоСтрока(ВыборкаПоШапкеДокумента.АдресОрганизации), ДлиныСтрок);
		ФормированиеПечатныхФормЗК.ВывестиДанныеПоБуквенно(Адрес, ОбластьПодвал, "Адрес_", 67);
		
		ОбластьПодвал.Области["ДолжностьФИОРуководителя"].Текст = "" + ВыборкаПоШапкеДокумента.ДолжностьРуководителя + ", " + ВыборкаПоШапкеДокумента.ФИОРуководителя;
		
		ТабДокумент.Вывести(ОбластьПодвал);
		
		Возврат УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, "Заявление о возмещении расходов на оплату выходных дней");
		
	КонецЕсли;
	
КонецФункции // Печать() 

#КонецЕсли

Процедура ЗаполнитьДанныеОрганизации() Экспорт

	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ОбщегоНазначения.ПолучитьЗначенияРеквизитов(Организация,"РегистрационныйНомерФСС, ДополнительныйКодФСС, КодПодчиненностиФСС, НаименованиеТерриториальногоОрганаФСС"));
	
	Руководитель = Неопределено;
	ДолжностьРуководителя = Неопределено;
	АдресОрганизации = Неопределено;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОтветственныеЛицаСрезПоследних.Должность КАК ДолжностьРуководителя,
	|	ОтветственныеЛицаСрезПоследних.ОтветственноеЛицо,
	|	ОтветственныеЛицаСрезПоследних.ФизическоеЛицо,
	|	ФизическиеЛица.Комментарий
	|ИЗ
	|	РегистрСведений.ОтветственныеЛицаОрганизаций.СрезПоследних(
	|			&Дата,
	|			ОтветственноеЛицо = ЗНАЧЕНИЕ(Перечисление.ОтветственныеЛицаОрганизаций.Руководитель)
	|				И СтруктурнаяЕдиница = &Организация) КАК ОтветственныеЛицаСрезПоследних
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ФизическиеЛица
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФизическиеЛица.Ссылка";
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
	
		Руководитель = Выборка.ФизическоеЛицо;
		ДолжностьРуководителя = Выборка.ДолжностьРуководителя;
	
	КонецЦикла;
	
	Запрос.УстановитьПараметр("ЭтоЮрЛицо", ОбщегоНазначенияПереопределяемый.ЭтоЮрЛицо(Организация));
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВЫБОР
	|		КОГДА &ЭтоЮрЛицо
	|			ТОГДА "","" + АдресЮрЛица.Поле1 + "","" + АдресЮрЛица.Поле2 + "","" + АдресЮрЛица.Поле3 + "","" + АдресЮрЛица.Поле4 + "","" + АдресЮрЛица.Поле5 + "","" + АдресЮрЛица.Поле6 + "","" + АдресЮрЛица.Поле7 + "","" + АдресЮрЛица.Поле8 + "","" + АдресЮрЛица.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресЮрЛица.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		КОГДА АдресаФактические.Поле1 ЕСТЬ NULL 
	|			ТОГДА "","" + АдресаРегистрации.Поле1 + "","" + АдресаРегистрации.Поле2 + "","" + АдресаРегистрации.Поле3 + "","" + АдресаРегистрации.Поле4 + "","" + АдресаРегистрации.Поле5 + "","" + АдресаРегистрации.Поле6 + "","" + АдресаРегистрации.Поле7 + "","" + АдресаРегистрации.Поле8 + "","" + АдресаРегистрации.Поле9 + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|						ТОГДА ""дом""
	|					ИНАЧЕ ""владение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|						ТОГДА ""корпус""
	|					ИНАЧЕ ""строение""
	|				КОНЕЦ + "","" + ВЫБОР
	|					КОГДА АдресаРегистрации.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|						ТОГДА ""кв.""
	|					ИНАЧЕ ""оф.""
	|				КОНЕЦ
	|		ИНАЧЕ "","" + АдресаФактические.Поле1 + "","" + АдресаФактические.Поле2 + "","" + АдресаФактические.Поле3 + "","" + АдресаФактические.Поле4 + "","" + АдресаФактические.Поле5 + "","" + АдресаФактические.Поле6 + "","" + АдресаФактические.Поле7 + "","" + АдресаФактические.Поле8 + "","" + АдресаФактические.Поле9 + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипДома В (ЗНАЧЕНИЕ(Перечисление.ТипыДомов.Дом), ЗНАЧЕНИЕ(Перечисление.ТипыДомов.ПустаяСсылка))
	|					ТОГДА ""дом""
	|				ИНАЧЕ ""владение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКорпуса В (ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.Корпус), ЗНАЧЕНИЕ(Перечисление.ТипыКорпусов.ПустаяСсылка))
	|					ТОГДА ""корпус""
	|				ИНАЧЕ ""строение""
	|			КОНЕЦ + "","" + ВЫБОР
	|				КОГДА АдресаФактические.ТипКвартиры В (ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.Квартира), ЗНАЧЕНИЕ(Перечисление.ТипыКвартир.ПустаяСсылка))
	|					ТОГДА ""кв.""
	|				ИНАЧЕ ""оф.""
	|			КОНЕЦ
	|	КОНЕЦ КАК АдресОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаФактические
	|		ПО Организация.ИндивидуальныйПредприниматель = АдресаФактические.Объект
	|			И (АдресаФактические.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ФактАдресФизЛица))
	|			И (АдресаФактические.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресаРегистрации
	|		ПО Организация.ИндивидуальныйПредприниматель = АдресаРегистрации.Объект
	|			И (АдресаРегистрации.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресФизЛица))
	|			И (АдресаРегистрации.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КонтактнаяИнформация КАК АдресЮрЛица
	|		ПО Организация.Ссылка = АдресЮрЛица.Объект
	|			И (АдресЮрЛица.Вид = ЗНАЧЕНИЕ(Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации))
	|			И (АдресЮрЛица.Тип = ЗНАЧЕНИЕ(Перечисление.ТипыКонтактнойИнформации.Адрес))
	|ГДЕ
	|	Организация.Ссылка = &Организация";
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		АдресОрганизации = СокрЛП(Выборка.АдресОрганизации);
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет табличную часть "РаботникиОрганизации"
//			Предварительно ее очистив.
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
Процедура Автозаполнение() Экспорт

	РаботникиОрганизации.Очистить();
	
	СуммаПособий = 0;
		
	ДатаПередачиФССВыплатыПособий = ПроцедурыУправленияПерсоналом.ЗначениеУчетнойПолитикиПоПерсоналуОрганизации(глЗначениеПеременной("глУчетнаяПолитикаПоПерсоналуОрганизации"), Организация, "ДатаПередачиФССВыплатыПособий");
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	ПособияСоциальномуСтрахованию.Сотрудник,
	               |	ПособияСоциальномуСтрахованию.Сотрудник.Физлицо КАК Физлицо,
	               |	ПособияСоциальномуСтрахованию.ДокументОснование,
	               |	ПособияСоциальномуСтрахованию.СуммаВсего,
	               |	ВЫБОР
	               |		КОГДА ПособияСоциальномуСтрахованию.ДокументОснование.СпособРегистрацииВремени = ЗНАЧЕНИЕ(Перечисление.СпособыРегистрацииВремени.РегистрацияДляЧастиСмены)
	               |			ТОГДА ИСТИНА
	               |		ИНАЧЕ ЕСТЬNULL(ВЫБОР
	               |					КОГДА РаботникиОрганизацийСрезПоследних.ПериодЗавершения <= &ДатаПередачиФССВыплатыПособий
	               |							И РаботникиОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	               |						ТОГДА РаботникиОрганизацийСрезПоследних.ГрафикРаботыЗавершения.СуммированныйУчетРабочегоВремени
	               |					ИНАЧЕ РаботникиОрганизацийСрезПоследних.ГрафикРаботы.СуммированныйУчетРабочегоВремени
	               |				КОНЕЦ, ЛОЖЬ)
	               |	КОНЕЦ КАК СуммированныйУчетРабочегоВремени
	               |ПОМЕСТИТЬ ВТПолучателиПособия
	               |ИЗ
	               |	РегистрНакопления.ПособияСоциальномуСтрахованию КАК ПособияСоциальномуСтрахованию
	               |		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	               |			ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Ссылка КАК Ссылка,
	               |			ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Сотрудник КАК Сотрудник,
	               |			ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.ДокументОснование КАК ДокументОснование
	               |		ИЗ
	               |			Документ.ЗаявлениеВФССНаДетейИнвалидов.РаботникиОрганизации КАК ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации
	               |		ГДЕ
	               |			ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Ссылка.Проведен = ИСТИНА
	               |			И ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Ссылка.Ссылка <> &Ссылка
	               |			И ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Ссылка.Организация = &Организация) КАК РанееВведенныеДокументы
	               |		ПО ПособияСоциальномуСтрахованию.Сотрудник = РанееВведенныеДокументы.Сотрудник
	               |			И ПособияСоциальномуСтрахованию.ДокументОснование = РанееВведенныеДокументы.ДокументОснование
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&ДатаПередачиФССВыплатыПособий, ) КАК РаботникиОрганизацийСрезПоследних
	               |		ПО ПособияСоциальномуСтрахованию.Сотрудник = РаботникиОрганизацийСрезПоследних.Сотрудник
	               |ГДЕ
	               |	ПособияСоциальномуСтрахованию.ВидПособияСоциальногоСтрахования = ЗНАЧЕНИЕ(Перечисление.ВидыПособийСоциальногоСтрахования.ДополнительныеВыходныеДниПоУходуЗаДетьмиИнвалидами)
	               |	И РанееВведенныеДокументы.Ссылка ЕСТЬ NULL 
	               |	И ПособияСоциальномуСтрахованию.Период >= &ДатаПередачиФССВыплатыПособий
	               |	И ПособияСоциальномуСтрахованию.Организация = &Организация
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РасчетСреднегоЗаработка.Сотрудник,
	               |	ВТПолучателиПособия.ДокументОснование,
	               |	РасчетСреднегоЗаработка.ВидРасчета,
	               |	РасчетСреднегоЗаработка.Результат,
	               |	РасчетСреднегоЗаработка.ОтработаноДней,
	               |	РасчетСреднегоЗаработка.ОтработаноЧасов,
	               |	РасчетСреднегоЗаработка.НормаПоПятидневке,
	               |	РасчетСреднегоЗаработка.ОтработаноПоПятидневке,
	               |	РасчетСреднегоЗаработка.ЧислоМесяцев,
	               |	РасчетСреднегоЗаработка.КоэффициентИндексации,
	               |	РасчетСреднегоЗаработка.БазовыйПериодНачало,
	               |	РасчетСреднегоЗаработка.БазовыйПериодКонец,
	               |	РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	               |ПОМЕСТИТЬ ВТРасчетСреднегоЗаработка
	               |ИЗ
	               |	ВТПолучателиПособия КАК ВТПолучателиПособия
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.РасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	               |		ПО ВТПолучателиПособия.Сотрудник = РасчетСреднегоЗаработка.Сотрудник
	               |			И ВТПолучателиПособия.ДокументОснование = РасчетСреднегоЗаработка.Регистратор
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	РасчетСреднегоЗаработка.Сотрудник,
	               |	РасчетСреднегоЗаработка.ДокументОснование,
	               |	СУММА(ВЫБОР
	               |			КОГДА РасчетСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые)
	               |				ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	               |						КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	               |							ТОГДА 1
	               |						ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	               |					КОНЕЦ
	               |			КОГДА РасчетСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые)
	               |				ТОГДА РасчетСреднегоЗаработка.Результат
	               |			КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев = 0
	               |				ТОГДА 0
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоПремиям)
	               |						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	               |								КОГДА РасчетСреднегоЗаработка.КоэффициентИндексации < 1
	               |									ТОГДА 1
	               |								ИНАЧЕ РасчетСреднегоЗаработка.КоэффициентИндексации
	               |							КОНЕЦ
	               |					КОГДА РасчетСреднегоЗаработка.ВидРасчета В (&ПоФиксПремиямНеИндексируемые)
	               |						ТОГДА РасчетСреднегоЗаработка.Результат * ВЫБОР
	               |								КОГДА РасчетСреднегоЗаработка.НормаПоПятидневке = 0
	               |									ТОГДА 0
	               |								ИНАЧЕ РасчетСреднегоЗаработка.ОтработаноПоПятидневке / РасчетСреднегоЗаработка.НормаПоПятидневке
	               |							КОНЕЦ
	               |					ИНАЧЕ РасчетСреднегоЗаработка.Результат
	               |				КОНЕЦ * ВЫБОР
	               |					КОГДА РасчетСреднегоЗаработка.ЧислоМесяцев > РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка
	               |						ТОГДА РасчетСреднегоЗаработка.ПериодРасчетаСреднегоЗаработка / РасчетСреднегоЗаработка.ЧислоМесяцев
	               |					ИНАЧЕ 1
	               |				КОНЕЦ
	               |		КОНЕЦ) КАК СреднийЗаработок,
	               |	СУММА(ВЫБОР
	               |			КОГДА РасчетСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые)
	               |					ИЛИ РасчетСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые)
	               |				ТОГДА РасчетСреднегоЗаработка.ОтработаноДней
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ОтработаноДней,
	               |	СУММА(ВЫБОР
	               |			КОГДА РасчетСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуИндексируемые)
	               |					ИЛИ РасчетСреднегоЗаработка.ВидРасчета = ЗНАЧЕНИЕ(ПланВидовРасчета.СреднийЗаработок.ПоЗаработкуНеИндексируемые)
	               |				ТОГДА РасчетСреднегоЗаработка.ОтработаноЧасов
	               |			ИНАЧЕ 0
	               |		КОНЕЦ) КАК ОтработаноЧасов
	               |ПОМЕСТИТЬ ВТСреднийЗаработок
	               |ИЗ
	               |	ВТРасчетСреднегоЗаработка КАК РасчетСреднегоЗаработка
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	РасчетСреднегоЗаработка.Сотрудник,
	               |	РасчетСреднегоЗаработка.ДокументОснование
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВТПолучателиПособия.Сотрудник КАК Сотрудник,
	               |	ВТПолучателиПособия.Физлицо,
	               |	ВТПолучателиПособия.ДокументОснование,
	               |	ВТПолучателиПособия.СуммаВсего,
	               |	ВЫРАЗИТЬ(ВЫБОР
	               |			КОГДА ВТПолучателиПособия.СуммированныйУчетРабочегоВремени
	               |				ТОГДА ВЫБОР
	               |						КОГДА ВТСреднийЗаработок.ОтработаноЧасов = 0
	               |							ТОГДА 0
	               |						ИНАЧЕ ВТСреднийЗаработок.СреднийЗаработок / ВТСреднийЗаработок.ОтработаноЧасов
	               |					КОНЕЦ
	               |			ИНАЧЕ ВЫБОР
	               |					КОГДА ВТСреднийЗаработок.ОтработаноДней = 0
	               |						ТОГДА 0
	               |					ИНАЧЕ ВТСреднийЗаработок.СреднийЗаработок / ВТСреднийЗаработок.ОтработаноДней
	               |				КОНЕЦ
	               |		КОНЕЦ КАК ЧИСЛО(15, 2)) КАК СреднедневнойЗаработок
	               |ИЗ
	               |	ВТПолучателиПособия КАК ВТПолучателиПособия
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТСреднийЗаработок КАК ВТСреднийЗаработок
	               |		ПО ВТПолучателиПособия.Сотрудник = ВТСреднийЗаработок.Сотрудник
	               |			И ВТПолучателиПособия.ДокументОснование = ВТСреднийЗаработок.ДокументОснование
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Сотрудник";
	
	ПоПремиям = Новый Массив(2);
	ПоПремиям[0] = ПланыВидовРасчета.СреднийЗаработок.ПоПремиямИндексируемые;
	ПоПремиям[1] = ПланыВидовРасчета.СреднийЗаработок.ПоГодовойПремииИндексируемые;
	ПоФиксПремиямНеИндексируемые = Новый Массив(2);
	ПоФиксПремиямНеИндексируемые[0] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксГодовойПремииНеИндексируемые;
	ПоФиксПремиямНеИндексируемые[1] = ПланыВидовРасчета.СреднийЗаработок.ПоФиксПремиямНеИндексируемые;
	
	Запрос.УстановитьПараметр("ДатаПередачиФССВыплатыПособий", ДатаПередачиФССВыплатыПособий);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ПоПремиям", ПоПремиям);
	Запрос.УстановитьПараметр("ПоФиксПремиямНеИндексируемые", ПоФиксПремиямНеИндексируемые);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		
		Выборка = РезультатЗапроса.Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			НоваяСтрока = РаботникиОрганизации.Добавить();
		
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			
			СуммаПособий = СуммаПособий + Выборка.СуммаВсего;
		
		КонецЦикла; 
	
	КонецЕсли; 
	
КонецПроцедуры // Автозаполнение()


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

#Если ТолстыйКлиентОбычноеПриложение Тогда

// Собирает сведения по щапке документа для вывода напечать и проверки заполнения
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СформироватьЗапросПоШапкеДокумента()

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаявлениеВФССНаДетейИнвалидов.Ссылка,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.Номер,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.Дата,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.Организация КАК Организация,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.НаименованиеТерриториальногоОрганаФСС,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.РегистрационныйНомерФСС,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.ДополнительныйКодФСС,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.КодПодчиненностиФСС,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.АдресОрганизации,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.Руководитель,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.ДолжностьРуководителя,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.КраткийСоставДокумента,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.СуммаПособий,
	                      |	ЗаявлениеВФССНаДетейИнвалидов.КоличествоСтраниц
	                      |ПОМЕСТИТЬ ВТДанныеДокумента
	                      |ИЗ
	                      |	Документ.ЗаявлениеВФССНаДетейИнвалидов КАК ЗаявлениеВФССНаДетейИнвалидов
	                      |ГДЕ
	                      |	ЗаявлениеВФССНаДетейИнвалидов.Ссылка = &ДокументСсылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ВТДанныеДокумента.Ссылка,
	                      |	ВТДанныеДокумента.Номер,
	                      |	ВТДанныеДокумента.Дата,
	                      |	ВТДанныеДокумента.Организация,
	                      |	ВТДанныеДокумента.Организация.НаименованиеПолное КАК ОрганизацияНаименование,
	                      |	ВТДанныеДокумента.НаименованиеТерриториальногоОрганаФСС,
	                      |	ВТДанныеДокумента.РегистрационныйНомерФСС,
	                      |	ВТДанныеДокумента.ДополнительныйКодФСС,
	                      |	ВТДанныеДокумента.КодПодчиненностиФСС,
	                      |	ВТДанныеДокумента.АдресОрганизации,
	                      |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ВТДанныеДокумента.Руководитель.Наименование) КАК ФИОРуководителя,
	                      |	ВТДанныеДокумента.ДолжностьРуководителя,
	                      |	ВТДанныеДокумента.КраткийСоставДокумента,
	                      |	ВТДанныеДокумента.СуммаПособий,
	                      |	ВТДанныеДокумента.КоличествоСтраниц,
	                      |	ВТДанныеДокумента.Организация.ИНН КАК ИНН,
	                      |	ВТДанныеДокумента.Организация.КПП КАК КПП
	                      |ИЗ
	                      |	ВТДанныеДокумента КАК ВТДанныеДокумента
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	                      |				&Дата,
	                      |				ФизЛицо В
	                      |					(ВЫБРАТЬ
	                      |						ВТДанныеДокумента.Руководитель
	                      |					ИЗ
	                      |						ВТДанныеДокумента КАК ВТДанныеДокумента)) КАК ФИОФизЛицСрезПоследних
	                      |		ПО ВТДанныеДокумента.Руководитель = ФИОФизЛицСрезПоследних.ФизЛицо");

	
	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Возврат Запрос.Выполнить();	

КонецФункции // СформироватьЗапросПоШапкеДокумента()

// Запрос по табличной части РаботникиОрганизации для вывода на печать и проверки корректности заполнения
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
Функция СформироватьЗапросПоТЧРаботникиОрганизации()

	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.НомерСтроки,
	                      |	ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.ФизЛицо,
	                      |	ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Статус,
	                      |	ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.СреднедневнойЗаработок
	                      |ПОМЕСТИТЬ ВТТЧРаботникиОрганизации
	                      |ИЗ
	                      |	Документ.ЗаявлениеВФССНаДетейИнвалидов.РаботникиОрганизации КАК ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации
	                      |ГДЕ
	                      |	ЗаявлениеВФССНаДетейИнвалидовРаботникиОрганизации.Ссылка = &ДокументСсылка
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ВТТЧРаботникиОрганизации.НомерСтроки,
	                      |	ЕСТЬNULL(ФИОФизЛицСрезПоследних.Фамилия + "" "" + ФИОФизЛицСрезПоследних.Имя + "" "" + ФИОФизЛицСрезПоследних.Отчество, ВТТЧРаботникиОрганизации.ФизЛицо.Наименование) КАК ФИОСотрудника,
	                      |	ВТТЧРаботникиОрганизации.Статус,
	                      |	ВТТЧРаботникиОрганизации.СреднедневнойЗаработок
	                      |ИЗ
	                      |	ВТТЧРаботникиОрганизации КАК ВТТЧРаботникиОрганизации
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(
	                      |				&Дата,
	                      |				ФизЛицо В
	                      |					(ВЫБРАТЬ
	                      |						ВТТЧРаботникиОрганизации.ФизЛицо
	                      |					ИЗ
	                      |						ВТТЧРаботникиОрганизации КАК ВТТЧРаботникиОрганизации)) КАК ФИОФизЛицСрезПоследних
	                      |		ПО ВТТЧРаботникиОрганизации.ФизЛицо = ФИОФизЛицСрезПоследних.ФизЛицо");
	
	
	Запрос.УстановитьПараметр("ДокументСсылка", Ссылка);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоТЧРаботникиОрганизации()
 
// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение, не заполнен или
// заполнен некорректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
//
// Параметры: 
//	ВыборкаПоШапкеДокумента	- выборка из результата запрос
//	Отказ 					- флаг отказа
//	Заголовок				- Заголовок для сообщений об ошибках
Процедура ПроверкаЗаполненияШапкиДокумента(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;

	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.АдресОрганизации) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указан адрес организации!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.НаименованиеТерриториальногоОрганаФСС) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указано наименование территориального органа ФСС!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.РегистрационныйНомерФСС) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указан регистрационный номер в ФСС!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.СуммаПособий) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана сумма пособий!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.КоличествоСтраниц) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указано количество страниц!"), Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверкаЗаполненияШапкиДокумента()

// Проверяет заполненность полей табличной части "РаботникиОрганизации"
// Проверка ведется по строке выборки по табличной части
//
// Параметры
// Параметры: 
//	СтрокаВыборкиПоТЧРаботникиОрганизации	- выборка из результата запрос
//	Отказ 									- флаг отказа
//	Заголовок								- Заголовок для сообщений об ошибках
//
Процедура ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации(СтрокаВыборкиПоТЧРаботникиОрганизации, Отказ, Заголовок)

	ТекстОшибкиСНомеромСтроки = НСтр("ru='В строке номер %НомерСтроки% табличной части ""Работники организации"": '");
	ТекстОшибкиСНомеромСтроки = СтрЗаменить(ТекстОшибкиСНомеромСтроки, "%НомерСтроки%", СтрокаВыборкиПоТЧРаботникиОрганизации.НомерСтроки);
	
	Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.ФИОСотрудника) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса(ТекстОшибкиСНомеромСтроки + "Не указан сотрудник!"), Отказ, Заголовок);
	КонецЕсли;

	Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.Статус) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса(ТекстОшибкиСНомеромСтроки + "Не указан статус!"), Отказ, Заголовок);
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(СтрокаВыборкиПоТЧРаботникиОрганизации.СреднедневнойЗаработок) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса(ТекстОшибкиСНомеромСтроки + "Не указан среднедневной заработок!"), Отказ, Заголовок);
	КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиТЧРаботникиОрганизации()

#КонецЕсли

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);

	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ);
	
КонецПроцедуры

