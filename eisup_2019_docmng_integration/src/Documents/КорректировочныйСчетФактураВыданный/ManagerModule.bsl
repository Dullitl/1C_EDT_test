//Функция Абс_НайтиПодчиненныйКорректировочныйСчетФактуру(Знач ДокументСсылка) Экспорт

//	Если не ЗначениеЗаполнено(ДокументСсылка) Тогда
//		Возврат Неопределено;
//	КонецЕсли;
//		
//	НайденныйДокумент = Неопределено;

//	Запрос = Новый Запрос;

//	// Установим параметры запроса
//	Запрос.УстановитьПараметр("ДокументСсылка", ДокументСсылка);

//	Запрос.Текст = 
//	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
//	|	КорректировочныйСчетФактураВыданный.Ссылка
//	|ИЗ
//	|	Документ.КорректировочныйСчетФактураВыданный КАК КорректировочныйСчетФактураВыданный
//	|ГДЕ
//	|	КорректировочныйСчетФактураВыданный.Абс_Основание = &ДокументСсылка";
//	
//	ВыборкаИзЗапроса = Запрос.Выполнить().Выбрать();

//	
//	Если ВыборкаИзЗапроса.Следующий() Тогда
//		
//		НайденныйДокумент = ВыборкаИзЗапроса.Ссылка;
//	КонецЕсли;

//	Если Не ЗначениеЗаполнено(НайденныйДокумент) Тогда
//		
//		Возврат "Ввести корректировочную счет-фактуру";
//	Иначе
//		Возврат НайденныйДокумент;
//	КонецЕсли;
//КонецФункции // НайтиПодчиненныйСчетФактуру()


//Процедура ВвестиКорректировочныйСчетФактуру(ДокументОбъект,ФормаДокумента)Экспорт

//	Если (Не ДокументОбъект.Проведен) и (Не ДокументОбъект.ПометкаУдаления) Тогда
//		
//			Ответ = Вопрос("Корректировочную Счет-фактуру нельзя вводить на основании не проведенного документа! Провести документ?", РежимДиалогаВопрос.ДаНет);

//			Если Ответ = КодВозвратаДиалога.Да Тогда

//				Попытка

//					// выполняем проведение документа
//					Если НЕ ФормаДокумента.ЗаписатьВФорме(РежимЗаписиДокумента.Проведение) Тогда
//						Возврат;
//					КонецЕсли;

//				Исключение
//					Возврат;
//				КонецПопытки;

//			Иначе
//				Возврат;
//			КонецЕсли;

//		КонецЕсли;

//		//Попытаемся найти счет фактуру
//		СчетФактура =Абс_НайтиПодчиненныйКорректировочныйСчетФактуру(ДокументОбъект.Ссылка);

//		ОбъектСчетаФактуры = Неопределено;

//		//Если потерпели неудачу, то необходимо ввести новый документ 
//		Если СчетФактура = "Ввести корректировочную счет-фактуру" 
//		   И (Не ДокументОбъект.ПометкаУдаления) Тогда
//			//Вводим новый документ на основании нашего
//			Если ДокументОбъект.Модифицированность() Тогда
//				Предупреждение("Документ был изменен! Сначала следует записать документ!");
//				Возврат;
//			КонецЕсли;

//			ОбъектСчетаФактуры = Документы.КорректировочныйСчетФактураВыданный.СоздатьДокумент();
//			
//			ОбъектСчетаФактуры.Заполнить(ДокументОбъект.Ссылка); 
//			// Откроем форму для редактирования счета фактуры
//			ФормаСчетаФактуры = ОбъектСчетаФактуры.ПолучитьФорму( ,ФормаДокумента,Строка(ДокументОбъект));
//			ФормаСчетаФактуры.Открыть();

//		ИначеЕсли ЗначениеЗаполнено(СчетФактура) Тогда
//			// Откроем форму для редактирования счета фактуры
//			ФормаСчетаФактуры = СчетФактура.ПолучитьФорму( , ФормаДокумента, Строка(ДокументОбъект));
//			ФормаСчетаФактуры.Открыть();

//		Иначе
//			Предупреждение("На основании документов, помеченных на удаление, ввод корректировочных счетов-фактур не предусмотрен.");

//		КонецЕсли;
//	
//КонецПроцедуры