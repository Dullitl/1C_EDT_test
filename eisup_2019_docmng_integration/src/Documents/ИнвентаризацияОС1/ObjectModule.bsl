//////////////////////////////////////////////////////////////////////////////// 
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА
//

#Если Клиент Тогда


// Функция формирует табличный документ с печатной формой сличительной ведомости
//
// Параметры:
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ - печатная форма сличительной ведомости.
//
Функция ПечатьИНВ18() Экспорт

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИнвентаризацияОС1.Дата КАК Дата,
	|	ИнвентаризацияОС1.Номер КАК Номер,
	|	ИнвентаризацияОС1.Организация КАК Организация,
	|	ИнвентаризацияОС1.ПодразделениеОрганизации.Представление КАК ПодразделениеПредставление,
	|	ИнвентаризацияОС1.ПодразделениеОрганизации.Код КАК ПодразделениеКод,
	|	ИнвентаризацияОС1.ДатаНачалаИнвентаризации КАК ДатаНачалаИнвентаризации,
	|	ИнвентаризацияОС1.ДатаОкончанияИнвентаризации КАК ДатаОкончанияИнвентаризации,
	|	ИнвентаризацияОС1.ДокументОснованиеВид КАК ДокументОснованиеВид,
	|	ИнвентаризацияОС1.ДокументОснованиеДата КАК ДокументОснованиеДата,
	|	ИнвентаризацияОС1.ДокументОснованиеНомер КАК ДокументОснованиеНомер
	|ИЗ
	|	Документ.ИнвентаризацияОС1 КАК ИнвентаризацияОС1
	|ГДЕ
	|	ИнвентаризацияОС1.Ссылка = &Ссылка";
	
	Док = Запрос.Выполнить().Выбрать();
	Док.Следующий();
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Ссылка",      Ссылка);
	Запрос.УстановитьПараметр("Организация", Док.Организация);
	Запрос.УстановитьПараметр("Дата",        Док.Дата);
	
	Если ЭтотОбъект.ИнвентаризацияСчетаМЦ01 Тогда
		Запрос.Текст=
		"ВЫБРАТЬ
		|	ИнвентаризацияОСОС1.НомерСтроки КАК НомерСтроки,
		|	ИнвентаризацияОСОС1.ОсновноеСредство КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОСОС1.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
		|			ТОГДА ИнвентаризацияОСОС1.ОсновноеСредство.Наименование
		|		ИНАЧЕ ИнвентаризацияОСОС1.ОсновноеСредство.НаименованиеПолное
		|	КОНЕЦ КАК ОсновноеСредствоНаименованиеПолное,
		|	&ПустаяДата КАК ДатаВыпуска,
		|	"""" КАК ЗаводскойНомер,
		|	"""" КАК НомерПаспорта,
		|	ИнвентаризацияОСОС1.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
		|	ИнвентаризацияОСОС1.СтоимостьФактическая КАК СтоимостьФактическая,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОСОС1.НаличиеПоДаннымУчета = ИСТИНА
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НаличиеПоДаннымУчета,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОСОС1.НаличиеФактическое = ИСТИНА
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НаличиеФактическое,
		|	ИнвентаризацияОСОС1.ОсновноеСредство.Код КАК ИнвентарныйНомер
		|ИЗ
		|	Документ.ИнвентаризацияОС1.ОС КАК ИнвентаризацияОСОС
		|ГДЕ
		|	ИнвентаризацияОСОС1.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		Запрос.УстановитьПараметр("ПустаяДата",Дата(1,1,1));
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ИнвентаризацияОСОС1.НомерСтроки КАК НомерСтроки,
		|	ИнвентаризацияОСОС1.ОсновноеСредство КАК ОсновноеСредство,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОСОС1.ОсновноеСредство.НаименованиеПолное ПОДОБНО """"
		|			ТОГДА ИнвентаризацияОСОС1.ОсновноеСредство.Наименование
		|		ИНАЧЕ ИнвентаризацияОСОС1.ОсновноеСредство.НаименованиеПолное
		|	КОНЕЦ КАК ОсновноеСредствоНаименованиеПолное,
		|	ИнвентаризацияОСОС1.ОсновноеСредство.ДатаВыпуска КАК ДатаВыпуска,
		|	ИнвентаризацияОСОС1.ОсновноеСредство.ЗаводскойНомер КАК ЗаводскойНомер,
		|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
		|	ИнвентаризацияОСОС1.ОсновноеСредство.НомерПаспорта КАК НомерПаспорта,
		|	ИнвентаризацияОСОС1.СтоимостьПоДаннымУчета КАК СтоимостьПоДаннымУчета,
		|	ИнвентаризацияОСОС1.СтоимостьФактическая КАК СтоимостьФактическая,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОСОС1.НаличиеПоДаннымУчета = ИСТИНА
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НаличиеПоДаннымУчета,
		|	ВЫБОР
		|		КОГДА ИнвентаризацияОСОС1.НаличиеФактическое = ИСТИНА
		|			ТОГДА 1
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК НаличиеФактическое,
		|	ИнвентаризацияОСОС1.Ссылка
		|ИЗ
		|	Документ.ИнвентаризацияОС1.ОС КАК ИнвентаризацияОСОС1
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&Дата, Организация = &Организация) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
		|		ПО ИнвентаризацияОСОС1.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		|ГДЕ
		|	ИнвентаризацияОСОС1.Ссылка = &Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
	КонецЕсли;
	ТаблицаОС = Запрос.Выполнить().Выгрузить();
	
	Макет = ПолучитьМакет("ИНВ18");
	
	// Получаем области макета для вывода в табличный документ
	Шапка                     = Макет.ПолучитьОбласть("Шапка");
//	СекцияМОЛ                 = Макет.ПолучитьОбласть("СекцияМОЛ");
	СтрокаНадТаблицей         = Макет.ПолучитьОбласть("СтрокаНадТаблицей");
	ЗаголовокТаблицы          = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	СтрокаТаблицы             = Макет.ПолучитьОбласть("СтрокаТаблицы");
	ПодвалТаблицы             = Макет.ПолучитьОбласть("ПодвалТаблицы");
	ПодписьГлавногоБухгалтера = Макет.ПолучитьОбласть("ПодписьГлавногоБухгалтера");
	//ШапкаПодписейМОЛ          = Макет.ПолучитьОбласть("ШапкаПодписейМОЛ");
	Подпись                   = Макет.ПолучитьОбласть("Подпись");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры макета по умолчанию
	ТабДокумент.ПолеСверху              = 1;
	ТабДокумент.ПолеСлева               = 0;
	ТабДокумент.ПолеСнизу               = 0;
	ТабДокумент.ПолеСправа              = 0;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.ОриентацияСтраницы      = ОриентацияСтраницы.Портрет;
	
	// Загрузим настройки пользователя
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_ИнвентаризацияОС_ИНВ18";

	// Выведем шапку документа
	СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Док.Организация, Док.Дата);
	
	Шапка.Параметры.Заполнить(Док);
	Шапка.Параметры.Организация          = Док.Организация;

	Шапка.Параметры.Подразделение        = Док.ПодразделениеПредставление;
	
	Шапка.Параметры.НомерДокумента = ЗаполнениеДокументов.ПолучитьНомерНаПечать(Док);
	Шапка.Параметры.ДатаДокумента  = Док.Дата;
	
	ТабДокумент.Вывести(Шапка);
	
	// Получим список МОЛ на основании списка ОС
	СписокОС = ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство");
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ОсновноеСредство", СписокОС);
	Запрос.УстановитьПараметр("Организация",      Организация);
	Запрос.УстановитьПараметр("Дата",             Дата);
	
	Если ЭтотОбъект.ИнвентаризацияСчетаМЦ01 Тогда
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ЕСТЬNULL(ХозрасчетныйОстатки.Субконто2, """") КАК МОЛ,
		|	ХозрасчетныйОстатки.СуммаОстатокДт
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(
		|		&Дата,
		|		Счет = &СчетМЦ01,
		|		,
		|		Организация = &Организация
		|			И Субконто1 В (&ОсновноеСредство)) КАК ХозрасчетныйОстатки";
		Запрос.УстановитьПараметр("СчетМЦ01", ПланыСчетов.Хозрасчетный.МЦ01);
	Иначе
		Запрос.Текст =
		"ВЫБРАТЬ
		|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ КАК МОЛ
		|ИЗ
		|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Дата, Организация = &Организация И ОсновноеСредство В (&ОсновноеСредство)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних";
	КонецЕсли;

	Результат = Запрос.Выполнить().Выгрузить();
	СписокМОЛ = Результат.ВыгрузитьКолонку("МОЛ");
	
	// Выведем подписи МОЛов
	ДанныеМОЛ = ОбщегоНазначения.ДанныеФизЛиц(Организация, СписокМОЛ, Дата);
	
	
	// Проверим, помещаются ли строка над таблицей, заголовок и первая строка.
	ШапкаТаблицы = Новый Массив;
	ШапкаТаблицы.Добавить(СтрокаНадТаблицей);
	ШапкаТаблицы.Добавить(ЗаголовокТаблицы);
	ШапкаТаблицы.Добавить(СтрокаТаблицы);
	
	Если НЕ ТабДокумент.ПроверитьВывод(ШапкаТаблицы) Тогда
			
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	КонецЕсли;
	
	// Выведем строку над таблицей
	ТабДокумент.Вывести(СтрокаНадТаблицей);
	
	// Выведем заголовок таблицы	
	ТабДокумент.Вывести(ЗаголовокТаблицы);
	
	// Создадим переменные для накопления итогов по каждой странице
	ИтогНедостачаКоличество = 0;
	ИтогНедостачаСтоимость  = 0;
	
	// Выведем строки таблицы
	Для Каждого СтрокаОС Из ТаблицаОС Цикл
		Если СтрокаОС.ИнвентарныйНомер = Null ТОгда
			 СтрокаОС.ИнвентарныйНомер ="ТМЦ";
		КонецЕсли;
			СтрокаТаблицы.Параметры.Заполнить(СтрокаОС);
			
		
		СтрокаСПодвалом = Новый Массив;
		СтрокаСПодвалом.Добавить(СтрокаТаблицы);
		СтрокаСПодвалом.Добавить(ПодвалТаблицы);
		Если (ТаблицаОС.Индекс(СтрокаОС) + 1) = ТаблицаОС.Количество() Тогда // если последняя строка, должна
			СтрокаСПодвалом.Добавить(ПодписьГлавногоБухгалтера);             // помещаться и подпись гл.бухгалтера
		КонецЕсли;
		
		Если НЕ ТабДокумент.ПроверитьВывод(СтрокаСПодвалом) Тогда
			
			// Выведем подвал таблицы
			ПодвалТаблицы.Параметры.ИтогНедостачаКоличество = ИтогНедостачаКоличество;
			ПодвалТаблицы.Параметры.ИтогНедостачаСтоимость  = ИтогНедостачаСтоимость;
			
			ТабДокумент.Вывести(ПодвалТаблицы);
			
			// Обнулим переменные для накопления итогов по каждой странице
			ИтогНедостачаКоличество = 0;
			ИтогНедостачаСтоимость  = 0;
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			
			// Выведем заголовок таблицы	
			ТабДокумент.Вывести(ЗаголовокТаблицы);
			
		КонецЕсли;
		
		РазницаПоНаличию   = СтрокаОС.НаличиеФактическое - СтрокаОС.НаличиеПоДаннымУчета;
		РазницаПоСтоимости = СтрокаОС.СтоимостьФактическая - СтрокаОС.СтоимостьПоДаннымУчета;
		
		НедостачаКоличество = ?(РазницаПоНаличию < 0, -РазницаПоНаличию, 0);
		НедостачаСтоимость  = ?(РазницаПоСтоимости < 0, -РазницаПоСтоимости, 0);
		
		ИтогНедостачаКоличество = ИтогНедостачаКоличество + НедостачаКоличество;
		ИтогНедостачаСтоимость  = ИтогНедостачаСтоимость + НедостачаСтоимость;
		
		СтрокаТаблицы.Параметры.НедостачаКоличество = НедостачаКоличество;
		СтрокаТаблицы.Параметры.НедостачаСтоимость  = НедостачаСтоимость;
		
		ТабДокумент.Вывести(СтрокаТаблицы);
		
	КонецЦикла;
	
	// Выведем подвал таблицы
	ПодвалТаблицы.Параметры.ИтогНедостачаКоличество = ИтогНедостачаКоличество;
	ПодвалТаблицы.Параметры.ИтогНедостачаСтоимость  = ИтогНедостачаСтоимость;
	
	ТабДокумент.Вывести(ПодвалТаблицы);
	
	// Проверим, помещаются ли шапка подписей и одна подпись
	Подписи = Новый Массив;

	Подписи.Добавить(Подпись);
	
	Если НЕ ТабДокумент.ПроверитьВывод(Подписи) Тогда
			
		// Выведем разрыв страницы
		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();

	КонецЕсли;
	
	// Выведем подписи МОЛов
	ЗаголовокРазделаПодписей = "Сдал";
	ВыводитьЗаголовок = Истина;
	
	// Сначала выведем МОЛов из выборки
	Для Каждого СтрокаМОЛ Из ДанныеМОЛ Цикл
		
		Если НЕ ТабДокумент.ПроверитьВывод(Подпись) Тогда
			
			// Выведем разрыв страницы
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
			ВыводитьЗаголовок = Истина; // на новой странице выведем заголовок набора подписей
		
		КонецЕсли;
		
		Подпись.Параметры.ЗаголовокРазделаПодписей = ?(ВыводитьЗаголовок, 
		                                               ЗаголовокРазделаПодписей,
													   "");
		Подпись.Параметры.Должность                = СтрокаМОЛ.Должность;
		Подпись.Параметры.РасшифровкаПодписи       = СтрокаМОЛ.Представление;
		
		ТабДокумент.Вывести(Подпись);
		
		ВыводитьЗаголовок = Ложь; // в следующей итерации вывод заголовка не нужен
		
	КонецЦикла;
		// Выведем подпись бухгалтера
   
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Док.Организация, Док.Дата);

	ТабДокумент.Вывести(ПодписьГлавногоБухгалтера);
	

	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьИНВ18()


// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходмое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь, НепосредственнаяПечать = Ложь) Экспорт
	// Получить экземпляр документа на печать
	//Если ИмяМакета = "ИНВ1" тогда
		ТабДокумент = Печать1();
	//ИначеЕсли ИмяМакета = "ИНВ18" тогда
	//	ТабДокумент = ПечатьИНВ18();
	//ИначеЕсли ИмяМакета = "ИНВ22" тогда
	//	ТабДокумент = ПечатьИНВ22();
	//КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект, ЭтотОбъект.Метаданные().Представление()));

КонецПроцедуры // Печать()

#КонецЕсли

// Возвращает доступные варианты печати документа
//
// Вовращаемое значение:
//  Струткура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	
	Возврат Новый Структура("ИНВ18","Обходной");

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	ttk_ОбщегоНазначения.ДобавитьПрефиксУзла(Префикс);
КонецПроцедуры

Функция Печать1() Экспорт
	//{{_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ(Печать1)
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	ТабДок = Новый ТабличныйДокумент;
	Макет = Документы.ИнвентаризацияОС1.ПолучитьМакет("Печать1");
	// Заголовок
  // Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(Шапка);
	// ОС
	Область = Макет.ПолучитьОбласть("ОСШапка");
	ТабДок.Вывести(Область);
	ОбластьОС = Макет.ПолучитьОбласть("ОС");
	н=0;
	Для Каждого ТекСтрокаОС Из ОС Цикл
		 н=н+1;
		 Если   ТекСтрокаОС.Вид ="" ТОгда
			 ОбластьОС.Параметры.Вид=Строка(ТекСтрокаОС.ОсновноеСредство.Код);
			 ОбластьОС.Параметры.ОсновноеСредство=Строка(ТекСтрокаОС.ОсновноеСредство);
			 ОбластьОС.Параметры.Кол=1;
			 ОбластьОС.Параметры.СтоимостьПоДаннымУчета = ТекСтрокаОС.СтоимостьПоДаннымУчета;
			 ТабДок.Вывести(ОбластьОС);

		 Иначе
			 ОбластьОС.Параметры.Номер=Н;		 
			 ОбластьОС.Параметры.Заполнить(ТекСтрокаОС);
			 ТабДок.Вывести(ОбластьОС);
		 Конецесли ;	
	КонецЦикла;
	

	Область = Макет.ПолучитьОбласть("ИнвентаризационнаяКомиссияШапка");
	Область.Параметры.МОЛ = Мол;
	ТабДок.Вывести(Область);
	
	
	// Подвал
	Подвал = Макет.ПолучитьОбласть("Подвал");
	Подвал.Параметры.Заполнить(ЭтотОбъект);
	ТабДок.Вывести(Подвал);

	ТабДок.ОтображатьСетку = Ложь;
	ТабДок.Защита = Ложь;
	ТабДок.ТолькоПросмотр = Ложь;
	ТабДок.ОтображатьЗаголовки = Ложь;
	ТабДок.Показать();
	//}}_КОНСТРУКТОР_ПЕЧАТИ_ЭЛЕМЕНТ
КонецФункции

