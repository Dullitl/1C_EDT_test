////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Выполняет расчет налога для указанного списка физлиц 
Процедура Рассчитать() Экспорт

	ФизЛица = РаботникиОрганизации.ВыгрузитьКолонку("ФизЛицо");
	
	Если Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуЮрЛицо(ФизЛица);
		ПоляСтруктурыПоиска = "ДополнительноеПоле, ФизЛицо, КодПоОКАТО, КПП";
	Иначе
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуФизЛицо(ФизЛица);
		ПоляСтруктурыПоиска = "ДополнительноеПоле, ФизЛицо";
	КонецЕсли;
	
	ПоляСтруктурыПоиска = СтрЗаменить(ПоляСтруктурыПоиска, "ДополнительноеПоле,", НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки());
	СтруктураПоиска = Новый Структура(ПоляСтруктурыПоиска);
	
	Для Каждого СтрокаТЧ Из РаботникиОрганизации Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаТЧ); 
		СтрокиВозврата = НФДЛКВозврату.НайтиСтроки(СтруктураПоиска);
		Если СтрокиВозврата.Количество() > 0 Тогда
			СтрокаТЧ.СуммаВозвратаПоСтавке13 = СтрокиВозврата[0].СуммаВозвратаПоСтавке13;
			СтрокаТЧ.СуммаВозвратаПоСтавке09 = СтрокиВозврата[0].СуммаВозвратаПоСтавке09;
			СтрокаТЧ.СуммаВозвратаПоСтавке35 = СтрокиВозврата[0].СуммаВозвратаПоСтавке35;
		Иначе
			СтрокаТЧ.СуммаВозвратаПоСтавке13 = 0;
			СтрокаТЧ.СуммаВозвратаПоСтавке09 = 0;
			СтрокаТЧ.СуммаВозвратаПоСтавке35 = 0;
		КонецЕсли;	
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличную часть документа отпусками по графику отпусков
//
// Параметры
//  ДатаНачала, ДатаОкончания – даты начала и окончания 
//								просмотра графика отпусков	
//
Процедура Автозаполнение() Экспорт
	
	Если Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо Тогда
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуЮрЛицо();
	Иначе
		НФДЛКВозврату = ПолучитьНДФЛКВозвратуФизЛицо();
	КонецЕсли;
	
	РаботникиОрганизации.Загрузить(НФДЛКВозврату);
	
КонецПроцедуры // Автозаполнение()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ЗАПОЛНЕНИЯ И РАСЧЕТА ДОКУМЕНТА

// Выбор сальдо на дату документа с учетом всех "МесяцевНалоговогоПериода" < МесяцНалоговогоПериода
// Интересует только отрицательное сальдо по налогу, т.е. когда удержано больше чем начислено
Функция ПолучитьНДФЛКВозвратуЮрЛицо(ФизЛица = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", КонецМесяца(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("Ставка13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	Запрос.УстановитьПараметр("Ставка09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	Запрос.УстановитьПараметр("Ставка35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35);

	Запрос.УстановитьПараметр("ПустойКодПоОКАТО","");
	Запрос.УстановитьПараметр("ПустойКПП","");
	
	Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
	Запрос.УстановитьПараметр("Физлица", Физлица);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СальдоПоСтавкам.ДополнительноеПоле,
	|	СальдоПоСтавкам.ФизЛицо КАК ФизЛицо,
	|	СальдоПоСтавкам.КодПоОКАТО,
	|	СальдоПоСтавкам.КПП,
	|	ВЫБОР
	|		КОГДА СальдоПоСтавкам.СальдоПоСтавке13 < 0
	|			ТОГДА -СальдоПоСтавкам.СальдоПоСтавке13
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке13,
	|	ВЫБОР
	|		КОГДА СальдоПоСтавкам.СальдоПоСтавке09 < 0
	|			ТОГДА -СальдоПоСтавкам.СальдоПоСтавке09
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке09,
	|	ВЫБОР
	|		КОГДА СальдоПоСтавкам.СальдоПоСтавке35 < 0
	|			ТОГДА -СальдоПоСтавкам.СальдоПоСтавке35
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке35
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.НомерСтроки КАК ДополнительноеПоле,
	|		НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|		СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка13
	|					ТОГДА ВЫБОР
	|							КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								ТОГДА НДФЛРасчетыСБюджетом.Налог
	|							ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СальдоПоСтавке13,
	|		СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка09
	|					ТОГДА ВЫБОР
	|							КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								ТОГДА НДФЛРасчетыСБюджетом.Налог
	|							ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СальдоПоСтавке09,
	|		СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка35
	|					ТОГДА ВЫБОР
	|							КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								ТОГДА НДФЛРасчетыСБюджетом.Налог
	|							ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СальдоПоСтавке35,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
	|		КОНЕЦ КАК КодПоОКАТО,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.КПП
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|		КОНЕЦ КАК КПП
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода <= &МесяцНалоговогоПериода
	|		И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
	|		И НДФЛРасчетыСБюджетом.Период <= &ДатаДокумента
	|		И (&ПоВсемФизлицам
	|				ИЛИ НДФЛРасчетыСБюджетом.ФизЛицо В (&Физлица))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛРасчетыСБюджетом.НомерСтроки,
	|		НДФЛРасчетыСБюджетом.ФизЛицо,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КПП <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.КПП
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП, &ПустойКПП) <> &ПустойКПП
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КПП
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КПП, &ПустойКПП)
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.КодПоОКАТО
	|			КОГДА ЕСТЬNULL(НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО, &ПустойКодПоОКАТО) <> &ПустойКодПоОКАТО
	|				ТОГДА НДФЛРасчетыСБюджетом.ПодразделениеОрганизации.КодПоОКАТО
	|			ИНАЧЕ ЕСТЬNULL(НДФЛРасчетыСБюджетом.ОбособленноеПодразделение.КодПоОКАТО, &ПустойКодПоОКАТО)
	|		КОНЕЦ) КАК СальдоПоСтавкам
	|ГДЕ
	|	(СальдоПоСтавкам.СальдоПоСтавке13 < 0
	|			ИЛИ СальдоПоСтавкам.СальдоПоСтавке09 < 0
	|			ИЛИ СальдоПоСтавкам.СальдоПоСтавке35 < 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо";
	
	ДополнительноеПоле = НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СальдоПоСтавкам.ДополнительноеПоле,", ДополнительноеПоле);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НДФЛРасчетыСБюджетом.НомерСтроки КАК ДополнительноеПоле,", ДополнительноеПоле);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НДФЛРасчетыСБюджетом.НомерСтроки,", ДополнительноеПоле);
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

// Выбор сальдо на дату документа с учетом всех "МесяцевНалоговогоПериода" < МесяцНалоговогоПериода
// Интересует только отрицательное сальдо по налогу, т.е. когда удержано больше чем начислено
Функция ПолучитьНДФЛКВозвратуФизЛицо(ФизЛица = Неопределено)
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ОбщегоНазначения.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ДатаДокумента", Дата);
	Запрос.УстановитьПараметр("МесяцНалоговогоПериода", КонецМесяца(МесяцНалоговогоПериода));
	Запрос.УстановитьПараметр("Ставка13", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13);
	Запрос.УстановитьПараметр("Ставка09", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09);
	Запрос.УстановитьПараметр("Ставка35", Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35);

	Запрос.УстановитьПараметр("ПоВсемФизлицам", Физлица = Неопределено);	
	Запрос.УстановитьПараметр("Физлица", Физлица);	
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СальдоПоСтавкам.ДополнительноеПоле,
	|	СальдоПоСтавкам.ФизЛицо КАК ФизЛицо,
	|	ВЫБОР
	|		КОГДА СальдоПоСтавкам.СальдоПоСтавке13 < 0
	|			ТОГДА -СальдоПоСтавкам.СальдоПоСтавке13
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке13,
	|	ВЫБОР
	|		КОГДА СальдоПоСтавкам.СальдоПоСтавке09 < 0
	|			ТОГДА -СальдоПоСтавкам.СальдоПоСтавке09
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке09,
	|	ВЫБОР
	|		КОГДА СальдоПоСтавкам.СальдоПоСтавке35 < 0
	|			ТОГДА -СальдоПоСтавкам.СальдоПоСтавке35
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВозвратаПоСтавке35
	|ИЗ
	|	(ВЫБРАТЬ
	|		НДФЛРасчетыСБюджетом.НомерСтроки КАК ДополнительноеПоле,
	|		НДФЛРасчетыСБюджетом.ФизЛицо КАК ФизЛицо,
	|		СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка13
	|					ТОГДА ВЫБОР
	|							КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								ТОГДА НДФЛРасчетыСБюджетом.Налог
	|							ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СальдоПоСтавке13,
	|		СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка09
	|					ТОГДА ВЫБОР
	|							КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								ТОГДА НДФЛРасчетыСБюджетом.Налог
	|							ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СальдоПоСтавке09,
	|		СУММА(ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = &Ставка35
	|					ТОГДА ВЫБОР
	|							КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|								ТОГДА НДФЛРасчетыСБюджетом.Налог
	|							ИНАЧЕ -НДФЛРасчетыСБюджетом.Налог
	|						КОНЕЦ
	|				ИНАЧЕ 0
	|			КОНЕЦ) КАК СальдоПоСтавке35
	|	ИЗ
	|		РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|	ГДЕ
	|		НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода <= &МесяцНалоговогоПериода
	|		И НДФЛРасчетыСБюджетом.Организация = &ГоловнаяОрганизация
	|		И НДФЛРасчетыСБюджетом.Период <= &ДатаДокумента
	|		И (&ПоВсемФизлицам
	|				ИЛИ НДФЛРасчетыСБюджетом.ФизЛицо В (&Физлица))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		НДФЛРасчетыСБюджетом.НомерСтроки,
	|		НДФЛРасчетыСБюджетом.ФизЛицо) КАК СальдоПоСтавкам
	|ГДЕ
	|	(СальдоПоСтавкам.СальдоПоСтавке13 < 0
	|			ИЛИ СальдоПоСтавкам.СальдоПоСтавке09 < 0
	|			ИЛИ СальдоПоСтавкам.СальдоПоСтавке35 < 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизЛицо";
	
	ДополнительноеПоле = НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки();
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СальдоПоСтавкам.ДополнительноеПоле,", ДополнительноеПоле);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НДФЛРасчетыСБюджетом.НомерСтроки КАК ДополнительноеПоле,", ДополнительноеПоле);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НДФЛРасчетыСБюджетом.НомерСтроки,", ДополнительноеПоле);
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить()
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Формирует запрос по шапке документа
//
// Параметры: 
//  Режим - режим проведения
//
// Возвращаемое значение:
//  Результат запроса
//
Функция СформироватьЗапросПоШапке(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛВозвратНалога.Дата,
	|	НДФЛВозвратНалога.Дата КАК Период,
	|	НДФЛВозвратНалога.Ссылка,
	|	НДФЛВозвратНалога.МесяцНалоговогоПериода,
	|	НДФЛВозвратНалога.Организация,
	|	ВЫБОР
	|		КОГДА НДФЛВозвратНалога.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НДФЛВозвратНалога.Организация
	|		ИНАЧЕ НДФЛВозвратНалога.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК ГоловнаяОрганизация
	|ИЗ
	|	Документ.НДФЛВозвратНалога КАК НДФЛВозвратНалога
	|ГДЕ
	|	НДФЛВозвратНалога.Ссылка = &ДокументСсылка";

	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Формирует запрос по табличной части документам
//
// Параметры: 
//  Режим        - режим проведения.
//
// Возвращаемое значение:
//  Результат запроса.
//
Функция СформироватьЗапросПоРаботникиОрганизации(Режим)

	Запрос = Новый Запрос;

	// Установим параметры запроса
	Запрос.УстановитьПараметр("ДокументСсылка" , Ссылка);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НДФЛВозвратНалогаРаботникиОрганизации.НомерСтроки КАК НомерСтроки,
	|	НДФЛВозвратНалогаРаботникиОрганизации.ФизЛицо,
	|	НДФЛВозвратНалогаРаботникиОрганизации.СуммаВозвратаПоСтавке13,
	|	НДФЛВозвратНалогаРаботникиОрганизации.СуммаВозвратаПоСтавке09,
	|	НДФЛВозвратНалогаРаботникиОрганизации.СуммаВозвратаПоСтавке35,
	|	НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,
	|	НДФЛВозвратНалогаРаботникиОрганизации.КодПоОКАТО,
	|	НДФЛВозвратНалогаРаботникиОрганизации.КПП
	|ИЗ
	|	Документ.НДФЛВозвратНалога.РаботникиОрганизации КАК НДФЛВозвратНалогаРаботникиОрганизации
	|ГДЕ
	|	НДФЛВозвратНалогаРаботникиОрганизации.Ссылка = &ДокументСсылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Запрос.Текст = СтрЗаменить(ТекстЗапроса, "НЕОПРЕДЕЛЕНО КАК ДополнительноеПоле,", НДФЛВозвратНалогаПереопределяемый.ПолучитьДополнительноеПолеОписанияСтроки());
	
	Возврат Запрос.Выполнить();

КонецФункции // СформироватьЗапросПоШапке()

// Проверяет правильность заполнения шапки документа.
// Если какой-то из реквизитов шапки, влияющий на проведение не заполнен или
// заполнен не корректно, то выставляется флаг отказа в проведении.
// Проверка выполняется по выборке из результата запроса по шапке,
// все проверяемые реквизиты должны быть включены в выборку по шапке.
//
// Параметры: 
//  ВыборкаПоШапкеДокумента	- выборка из результата запроса по шапке документа,
//  Отказ 		 - флаг отказа в проведении,
//	Заголовок	 - Заголовок для сообщений об ошибках проведения.
//
Процедура ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок)

	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.Организация) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке(ОбщегоНазначения.ПреобразоватьСтрокуИнтерфейса("Не указана организация!"), Отказ, Заголовок);
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ВыборкаПоШапкеДокумента.МесяцНалоговогоПериода) Тогда
		ОбщегоНазначения.ВывестиИнформациюОбОшибке("Не указан период, за который возвращается налог!", Отказ, Заголовок);
	КонецЕсли;

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Проверяет правильность заполнения строки документа.
Процедура ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок)

		НачалоСообщения = "В строке № """+ СокрЛП(ВыборкаПоРаботникиОрганизации.НомерСтроки) +
									""" табл. части ""Сотрудники организации"": ";
									
		Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.ФизЛицо) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указано физическое лицо!", Отказ, Заголовок);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоРаботникиОрганизации.СуммаВозвратаПоСтавке13 + ВыборкаПоРаботникиОрганизации.СуммаВозвратаПоСтавке09 + ВыборкаПоРаботникиОрганизации.СуммаВозвратаПоСтавке35) Тогда
			ОбщегоНазначения.ВывестиИнформациюОбОшибке(НачалоСообщения + "не указаны суммы возврата налога!", Отказ, Заголовок);
		КонецЕсли;
	
КонецПроцедуры // ПроверитьЗаполнениеСтрокиРаботникиОрганизации()

// По строке выборки результата запроса по документу формируем движения по регистрам
//
// Параметры: 
//  ВыборкаПоШапкеДокумента                  - выборка из результата запроса по шапке документа
//
// Возвращаемое значение:
//  Нет.
//
Процедура ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ)
	
	// Проведем возврат как отрицательный расход (отрицательное удержание налога) отдельно для каждой ставки
	
	Если ВыборкаПоТЧ.СуммаВозвратаПоСтавке13 <> 0 Тогда	
		ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка13, ВыборкаПоТЧ.СуммаВозвратаПоСтавке13)
	КонецЕсли;
	
	Если ВыборкаПоТЧ.СуммаВозвратаПоСтавке09 <> 0 Тогда
		ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09, ВыборкаПоТЧ.СуммаВозвратаПоСтавке09)
	КонецЕсли;
	
	Если ВыборкаПоТЧ.СуммаВозвратаПоСтавке35 <> 0 Тогда
		ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка35, ВыборкаПоТЧ.СуммаВозвратаПоСтавке35)
	КонецЕсли;
	
	НДФЛВозвратНалогаПереопределяемый.ДобавитьСтрокуВДвиженияПоРегистрамНакопленияДополнительно(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ);
	
КонецПроцедуры // ДобавитьСтрокуВДвиженияПоРегистрамНакопления

Процедура ДобавитьСтрокуДвиженийПоСтавке(ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, СтавкаНалогообложения, СуммаВозврата)
	
	Движение = Движения.НДФЛКЗачету.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Период, Организация");
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоТЧ);
	
	// Свойства
	Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
	// Измерения
	Движение.СтавкаНалогообложенияРезидента = СтавкаНалогообложения;
	// Ресурсы
	Движение.СуммаНДФЛКЗачету 				= СуммаВозврата;
	
	
	Движение = Движения.НДФЛРасчетыСБюджетом.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Период, МесяцНалоговогоПериода");
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоТЧ);
	// Свойства
	Движение.ВидДвижения					= ВидДвиженияНакопления.Расход;
	// Измерения
	Движение.Организация					= ВыборкаПоШапкеДокумента.ГоловнаяОрганизация;
	Движение.СтавкаНалогообложенияРезидента	= СтавкаНалогообложения;
	// Ресурсы
	Движение.Налог							= - СуммаВозврата; 
	// Реквизиты
	Движение.ОбособленноеПодразделение		= ВыборкаПоШапкеДокумента.Организация;
	Движение.ВидСтроки						= Перечисления.НДФЛРасчетыСБюджетомВидСтроки.ВозвратНалога;
	
	Если СтавкаНалогообложения = Перечисления.НДФЛСтавкиНалогообложенияРезидента.Ставка09 Тогда
		Движение.КодДохода					= Справочники.ДоходыНДФЛ.Код1010;
	КонецЕсли;			

	
	Движение = Движения.ВзаиморасчетыСРаботникамиОрганизаций.Добавить();
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоШапкеДокумента,"Период, Организация");
	ЗаполнитьЗначенияСвойств(Движение,ВыборкаПоТЧ);
	// Свойства
	Движение.ВидДвижения					= ВидДвиженияНакопления.Приход;
	// Измерения
	Движение.ПериодВзаиморасчетов		= ВыборкаПоШапкеДокумента.МесяцНалоговогоПериода;
	// Ресурсы
	Движение.СуммаВзаиморасчетов			= СуммаВозврата; 
	
	НДФЛВозвратНалогаПереопределяемый.ДобавитьСтрокуДвиженийПоСтавкеДополнительно(Движения, ВыборкаПоШапкеДокумента, ВыборкаПоТЧ, СтавкаНалогообложения, СуммаВозврата);
	
КонецПроцедуры // ДобавитьСтрокуДвиженийПоСтавке

////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведения(Отказ, Режим)
	
	ОбработкаКомментариев = глЗначениеПеременной("глОбработкаСообщений");
	ОбработкаКомментариев.УдалитьСообщения();
	
	// Заголовок для сообщений об ошибках проведения.
	Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	РезультатЗапросаПоШапке = СформироватьЗапросПоШапке(Режим);

	// Получим реквизиты шапки из запроса
	ВыборкаПоШапкеДокумента = РезультатЗапросаПоШапке.Выбрать();

	Если ВыборкаПоШапкеДокумента.Следующий() Тогда

		//Надо позвать проверку заполнения реквизитов шапки
		ПроверитьЗаполнениеШапки(ВыборкаПоШапкеДокумента, Отказ, Заголовок);

		// Движения стоит добавлять, если в проведении еще не отказано (отказ = ложь)
		Если НЕ Отказ Тогда

			// получим реквизиты табличной части
			ВыборкаПоРаботникиОрганизации = СформироватьЗапросПоРаботникиОрганизации(Режим).Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

			Пока ВыборкаПоРаботникиОрганизации.Следующий() Цикл 

				// проверим очередную строку табличной части
				ПроверитьЗаполнениеСтрокиРаботникиОрганизации(ВыборкаПоРаботникиОрганизации, Отказ, Заголовок);
				
				// Заполним записи в наборах записей регистров
				ДобавитьСтрокуВДвиженияПоРегистрамНакопления(ВыборкаПоШапкеДокумента, ВыборкаПоРаботникиОрганизации);

			КонецЦикла;
		КонецЕсли;

	КонецЕсли;

	ОбработкаКомментариев.ПоказатьСообщения();
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	МассивТЧ = Новый Массив();
	МассивТЧ.Добавить(РаботникиОрганизации);
	
	КраткийСоставДокумента = ПроцедурыУправленияПерсоналом.ЗаполнитьКраткийСоставДокумента(МассивТЧ, "Физлицо");
	
	Если РежимЗаписи = РежимЗаписиДокумента.Проведение  Тогда
		
		ЭтоНеЮрЛицо = Не Организация.ЮрФизЛицо <> Перечисления.ЮрФизЛицо.ФизЛицо;
		
		Для каждого СтрокаТЧ Из РаботникиОрганизации Цикл
			Если ЭтоНеЮрЛицо Тогда
				СтрокаТЧ.КодПоОКАТО = "";
				СтрокаТЧ.КПП = "";
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

