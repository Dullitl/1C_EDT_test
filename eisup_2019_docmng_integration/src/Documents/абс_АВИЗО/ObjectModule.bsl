 
 // Печать
Функция ПолучитьСтруктуруПечатныхФорм() Экспорт

	Структура = Новый Структура;
	//Структура.Вставить("ПечатьОбщая", "Печать общая");
	//Структура.Вставить("ПечатьТовары", "Печать товары");
	//Структура.Вставить("ПечатьСводное", "Печать сводное");
	Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаОС Тогда
		Структура.Вставить("ОС2", "Форма ОС-2");
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО 
		ИЛИ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалы10_07 
// {{KM WARE Лазаревский К.В. Заявка № 23.09.2015 начало
 		ИЛИ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаТоваров
// }}KM WARE Лазаревский К.В. Заявка № 23.09.2015 окончание		
		Тогда
		Структура.Вставить("М15", "Форма М-15");
		Структура.Вставить("ТОРГ13", "Форма ТОРГ-13");
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийАвизо.РасчетныеОперации ИЛИ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.СтроительствоОбъековОС Тогда
		Структура.Вставить("Авизо", "Авизо");
	КонецЕсли;
	
	Возврат Структура;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
		
	МассивОбъектов = Новый Массив;
	МассивОбъектов.Добавить(Ссылка);

	// Получить экземпляр документа на печать
	Если ИмяМакета = "ПечатьОбщая" Тогда
		
		ТабДокумент = Документы.абс_АВИЗО.ПечатьОбщая(Ссылка);
		
	ИначеЕсли ИмяМакета = "ПечатьТовары" Тогда
		
		ТабДокумент = Документы.абс_АВИЗО.ПечатьТовары(Ссылка);
		
	ИначеЕсли ИмяМакета = "ПечатьСводное" Тогда
		
		ТабДокумент = Документы.абс_АВИЗО.ПечатьСводное(Ссылка);
		
	ИначеЕсли ИмяМакета = "ОС2" Тогда
		ТабДокумент = Документы.абс_АВИЗО.ПечатьОС2(Ссылка);
	ИначеЕсли ИмяМакета = "М15" Тогда
		ТабДокумент = Документы.абс_АВИЗО.ПечатьМ15(Ссылка);
	ИначеЕсли ИмяМакета = "ТОРГ13" Тогда
		ТабДокумент = Документы.абс_АВИЗО.ПечатьТОРГ13(Ссылка);
	ИначеЕсли ИмяМакета = "Авизо" Тогда
		ТабДокумент = Документы.абс_АВИЗО.ПечатьАвизо(Ссылка);
	ИначеЕсли ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);
		
		Если ТабДокумент = Неопределено Тогда
			Возврат
		КонецЕсли; 
		
	КонецЕсли;
	
	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект), Ссылка);

	
КонецПроцедуры

Процедура ЗаполнитьОстаткиМатериалыОборудованиеВНА() Экспорт

	

КонецПроцедуры

Процедура ЗаполнитьОстаткиОС() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_ПередачаОСМеждуФиллиаламиОС.ОсновноеСредство,
	|	абс_ПередачаОСМеждуФиллиаламиОС.СтоимостьБУ,
	|	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияБУ,
	|	абс_ПередачаОСМеждуФиллиаламиОС.СтоимостьНУ,
	|	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияНУ,
	|	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияЗаМесяцБУ,
	|	абс_ПередачаОСМеждуФиллиаламиОС.АмортизацияЗаМесяцНУ
	|ИЗ
	|	Документ.абс_ПередачаОСМеждуФиллиалами.ОС КАК абс_ПередачаОСМеждуФиллиаламиОС
	|ГДЕ
	|	абс_ПередачаОСМеждуФиллиаламиОС.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", ДокументОснованиеИсточник);
	
	ОсновныеСредства.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

Процедура ЗаполнитьПоСписаниюТоваров(Основание)
	Организация = Основание.Организация;
	ДокументОснование = Основание;	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СписаниеТоваровТовары.Номенклатура,
	|	СписаниеТоваровТовары.СерияНоменклатуры,
	|	СписаниеТоваровТовары.ХарактеристикаНоменклатуры,
	|	СписаниеТоваровТовары.Количество,
	|	""Списание товаров"" КАК Документ,
	|	СписаниеТоваровТовары.Ссылка.Номер,
	|	СписаниеТоваровТовары.Ссылка.Дата
	|ПОМЕСТИТЬ ТабДок
	|ИЗ
	|	Документ.СписаниеТоваров.Товары КАК СписаниеТоваровТовары
	|ГДЕ
	|	СписаниеТоваровТовары.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.СубконтоКт1 КАК Номенклатура,
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.СчетКт,
	|	Хозрасчетный.КоличествоКт КАК Количество,
	|	Хозрасчетный.Сумма
	|ПОМЕСТИТЬ РегистрБУ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК Хозрасчетный
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Налоговый.СубконтоКт1 КАК Номенклатура,
	|	Налоговый.СчетДт КАК СчетДтНу,
	|	Налоговый.СчетКт КАК СчетКтНу,
	|	Налоговый.КоличествоКт КАК Количество,
	|	Налоговый.Сумма
	|ПОМЕСТИТЬ РегистрНУ
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.ДвиженияССубконто(, , Регистратор = &Ссылка, , ) КАК Налоговый
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТабДок.Номенклатура,
	|	ТабДок.СерияНоменклатуры,
	|	ТабДок.ХарактеристикаНоменклатуры,
	|	ТабДок.Количество,
	|	РегистрБУ.Сумма * ТабДок.Количество / РегистрБУ.Количество КАК Сумма,
	|	РегистрБУ.СчетДт,
	|	РегистрБУ.СчетКт,
	|	РегистрНУ.СчетДтНу,
	|	РегистрНУ.СчетКтНу,
	|	ТабДок.Документ,
	|	ТабДок.Номер,
	|	ТабДок.Дата,
	|	ТабДок.Документ КАК Документ1,
	|	ТабДок.Номер КАК Номер1,
	|	ТабДок.Дата КАК Дата1
	|ИЗ
	|	ТабДок КАК ТабДок
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБУ КАК РегистрБУ
	|		ПО ТабДок.Номенклатура = РегистрБУ.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНУ КАК РегистрНУ
	|		ПО ТабДок.Номенклатура = РегистрНУ.Номенклатура";
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
КонецПроцедуры

Процедура ОбработкаЗаполнения(Основание)
	
	Если НЕ ЗначениеЗаполнено(Основание) Тогда
		Возврат
	КонецЕсли;
	
	//Если ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеТоваров") Тогда
	//	ЗаполнитьПоСписаниюТоваров(Основание);
	//ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПрочиеЗатраты") Тогда
	//	ЗаполнитьПоПрочимЗатратам(Основание);
	//Иначе
	//	Запрос = Новый Запрос;
	//	Если НЕ ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеОС") Тогда
	//		Запрос.Текст = 	
	//		"ВЫБРАТЬ
	//		|	ХозрасчетныйДвиженияССубконто.Организация,
	//		|	ХозрасчетныйДвиженияССубконто.Сумма,
	//		|	ХозрасчетныйДвиженияССубконто.СчетДт,
	//		|	ХозрасчетныйДвиженияССубконто.СчетКт,
	//		|	ХозрасчетныйДвиженияССубконто.Регистратор,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоКт2
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(&Дата1, &Дата2, Регистратор = &Ссылка) КАК ХозрасчетныйДвиженияССубконто" ;
	//	Иначе
	//		Запрос.Текст = "ВЫБРАТЬ
	//		|	ХозрасчетныйДвиженияССубконто.Организация,
	//		|	ХозрасчетныйДвиженияССубконто.Сумма,
	//		|	ХозрасчетныйДвиженияССубконто.СчетДт,
	//		|	ХозрасчетныйДвиженияССубконто.СчетКт,
	//		|	ХозрасчетныйДвиженияССубконто.Регистратор,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1 КАК СубконтоДт1,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//		|	1 КАК НомерПроводки
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	//		|			&Дата1,
	//		|			&Дата2,
	//		|			Регистратор = &Ссылка
	//		|				И СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.АмортизацияОС_01)
	//		|				И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС)) КАК ХозрасчетныйДвиженияССубконто
	//		|
	//		|ОБЪЕДИНИТЬ ВСЕ
	//		|
	//		|ВЫБРАТЬ
	//		|	ХозрасчетныйДвиженияССубконто.Организация,
	//		|	ХозрасчетныйДвиженияССубконто.Сумма,
	//		|	ХозрасчетныйДвиженияССубконто.СчетДт,
	//		|	ХозрасчетныйДвиженияССубконто.СчетКт,
	//		|	ХозрасчетныйДвиженияССубконто.Регистратор,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	//		|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	//		|	2
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	//		|			&Дата1,
	//		|			&Дата2,
	//		|			Регистратор = &Ссылка
	//		|				И СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВыбытиеОС)
	//		|				И СчетКт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОСвОрганизации)) КАК ХозрасчетныйДвиженияССубконто
	//		|
	//		|УПОРЯДОЧИТЬ ПО
	//		|	СубконтоДт1,
	//		|	НомерПроводки УБЫВ";
	//	КонецЕсли;
	//	
	//	Запрос.УстановитьПараметр("Ссылка",Основание.Ссылка );
	//	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда	
	//		Запрос.УстановитьПараметр("Дата1", НачалоДня(Основание.ДатаОплаты));
	//		Запрос.УстановитьПараметр("Дата2", КонецДня(Основание.ДатаОплаты));
	//	Иначе
	//		Запрос.УстановитьПараметр("Дата1", НачалоМинуты(Основание.Дата));
	//		Запрос.УстановитьПараметр("Дата2", КонецМинуты(Основание.Дата));
	//	КонецЕсли;
	//	
	//	ВыборкаДвижений = Запрос.Выполнить().Выбрать();
	//	Организация = Основание.Организация;
	//	ДокументОснование = Основание.Ссылка;
	//	ПозицДвоет=Найти(Строка(ТипЗнч(ДокументОснование.Ссылка)), ":"); 
	//	НазвДокум=Сред(Строка(ТипЗнч(ДокументОснование.Ссылка)),ПозицДвоет+1);
	//	Пока ВыборкаДвижений.Следующий() Цикл
	//		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
	//			Если Не ЗначениеЗаполнено(ВыборкаДвижений.СчетДт)  Тогда
	//				Продолжить;
	//			КонецЕсли;
	//			
	//			Счет79 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("79");
	//			Если НЕ ВыборкаДвижений.СчетДт.ПринадлежитЭлементу(Счет79) Тогда
	//				Продолжить;
	//				//Не записываем в таб. часть проводки по НДС
	//			КонецЕсли;
	//		КонецЕсли;
	//		НоваяСтрока=ТабличнаяЧасть.Добавить();
	//		НоваяСтрока.Документ = НазвДокум;
	//		НоваяСтрока.Номер = ДокументОснование.Номер;
	//		НоваяСтрока.Дата=ДокументОснование.Дата;
	//		Если НЕ ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеОС") Тогда
	//			НоваяСтрока.СчетДт=ВыборкаДвижений.СчетДт;
	//			НоваяСтрока.СчетКт=ВыборкаДвижений.СчетКт;
	//		Иначе
	//			Если ВыборкаДвижений.НомерПроводки = 1 Тогда
	//				НоваяСтрока.СчетДт=ПланыСчетов.Хозрасчетный.АмортизацияОС_01;
	//				НоваяСтрока.СчетКт=ПланыСчетов.Хозрасчетный.НайтиПоКоду("79.01");
	//			ИначеЕсли ВыборкаДвижений.НомерПроводки = 2 Тогда 
	//				НоваяСтрока.СчетДт=ПланыСчетов.Хозрасчетный.НайтиПоКоду("79.01");
	//				НоваяСтрока.СчетКт=ПланыСчетов.Хозрасчетный.ОСвОрганизации;
	//			КонецЕсли;
	//		КонецЕсли;
	//		Счет79 = ПланыСчетов.Хозрасчетный.НайтиПоКоду("79");
	//		НоваяСтрока.Сумма=ВыборкаДвижений.Сумма;
	//		Если НЕ ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеОС") Тогда
	//			КоррАналитика = "Дт";
	//			Если ВыборкаДвижений.СчетКт.ПринадлежитЭлементу(Счет79) Тогда
	//				Филиал = ВыборкаДвижений.СубконтоКт1;
	//			КонецЕсли;
	//			Если ВыборкаДвижений.СчетДт.ПринадлежитЭлементу(Счет79) Тогда
	//				Филиал = ВыборкаДвижений.СубконтоДт1;
	//				КоррАналитика = "Кт";
	//			КонецЕсли;
	//		Иначе
	//			Если Основание.СчетСписанияБУ.ПринадлежитЭлементу(Счет79) Тогда
	//				Филиал = Основание.СубконтоБУ;
	//			КонецЕсли;
	//		КонецЕсли;
	//		
	//		Если ТипЗнч(Основание) = Тип("ДокументСсылка.ПлатежноеПоручениеИсходящее") Тогда	
	//			АдресСуммы = Найти(ВыборкаДвижений.Регистратор.НазначениеПлатежа, "Сумма");		
	//			Если АдресСуммы > 0 Тогда
	//				ТекстНазначение = Лев(ВыборкаДвижений.Регистратор.НазначениеПлатежа, АдресСуммы - 2);
	//			Иначе
	//				ТекстНазначение = ВыборкаДвижений.Регистратор.НазначениеПлатежа;
	//			КонецЕсли;
	//			НоваяСтрока.НаименованиеПередаваемогоИмущества=ТекстНазначение;	
	//		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.КорректировкаДолга") Тогда
	//			НоваяСтрока.НаименованиеПередаваемогоИмущества="Оплата контрагенту "+ВыборкаДвижений["Субконто"+КоррАналитика+"1"] +" по договору "+ВыборкаДвижений["Субконто"+КоррАналитика+"2"];
	//		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ОперацияБух") Тогда
	//			НоваяСтрока.НаименованиеПередаваемогоИмущества = Основание.Содержание;
	//		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.СписаниеОС") Тогда
	//			НоваяСтрока.НаименованиеПередаваемогоИмущества = ВыборкаДвижений.СубконтоДт1;
	//		ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
	//			Попытка
	//				НоваяСтрока.НаименованиеПередаваемогоИмущества=СокрЛП(Основание.Услуги[0].Содержание);
	//			Исключение
	//				НоваяСтрока.НаименованиеПередаваемогоИмущества="Распределение платы на "  +СокрЛП(Основание.Комментарий);
	//			КонецПопытки;
	//		КонецЕсли;
	//	КонецЦикла;
	//КонецЕсли;
	
	// {{ТТК Сладков А. Заявка № 19.05.2016 начало

	Если ТипЗнч(Основание) = Тип("ДокументСсылка.ttk_ФормированиеРезерва") Тогда
		
		Склад = Основание.Склад;
		            	
		ВидОперации		= Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО;
		ВидОперацииТМЦ 	= Перечисления.ВидыОперацийСписаниеТоваров.ТоварыПродукция;
		
		Запрос=новый Запрос;
		
		Запрос.Текст ="ВЫБРАТЬ
		              |	ТоварыВРезервеНаСкладахОстатки.Номенклатура,
		              |	ТоварыВРезервеНаСкладахОстатки.ХарактеристикаНоменклатуры,
		              |	ТоварыВРезервеНаСкладахОстатки.СерияНоменклатуры,
		              |	СУММА(ТоварыВРезервеНаСкладахОстатки.КоличествоОстаток) КАК КоличествоОстаток
		              |ИЗ
		              |	РегистрНакопления.ТоварыВРезервеНаСкладах.Остатки(, ДокументРезерва = &Заказ) КАК ТоварыВРезервеНаСкладахОстатки
		              |
		              |СГРУППИРОВАТЬ ПО
		              |	ТоварыВРезервеНаСкладахОстатки.Номенклатура,
		              |	ТоварыВРезервеНаСкладахОстатки.ХарактеристикаНоменклатуры,
		              |	ТоварыВРезервеНаСкладахОстатки.СерияНоменклатуры";
					  
	
		
		Запрос.УстановитьПараметр("Заказ", Основание.Заказ);

			
		Выборка = Запрос.Выполнить().Выбрать();
			
		
		Пока Выборка.Следующий() Цикл
				
				НоваяСтрокаТЧ=Товары.Добавить();
					
				НоваяСтрокаТЧ.Номенклатура 						= Выборка.Номенклатура; 
				НоваяСтрокаТЧ.ХарактеристикаНоменклатуры 		= Выборка.ХарактеристикаНоменклатуры; 
				НоваяСтрокаТЧ.СерияНоменклатуры 				= Выборка.СерияНоменклатуры; 
				 
				
				НоваяСтрокаТЧ.ЕдиницаИзмерения 					= Выборка.Номенклатура.ЕдиницаХраненияОстатков;
				НоваяСтрокаТЧ.Коэффициент      					= НоваяСтрокаТЧ.ЕдиницаИзмерения.Коэффициент;
				НоваяСтрокаТЧ.ЕдиницаИзмеренияМест    		    = Выборка.Номенклатура.ЕдиницаИзмеренияМест;

				НоваяСтрокаТЧ.Количество		 				= Выборка.КоличествоОстаток; 
				
				НоваяСтрокаТЧ.ДокументРезерва 					= Основание.Заказ; 
				НоваяСтрокаТЧ.ДокументРезерваСтрока 			= Строка(НоваяСтрокаТЧ.ДокументРезерва);	
				
				ОбработкаТабличныхЧастей.РассчитатьКоличествоМестТабЧасти(НоваяСтрокаТЧ, ЭтотОбъект);

				Если Склад.ВидСклада = Перечисления.ВидыСкладов.НТТ Тогда

					НоваяСтрокаТЧ.Цена = Выборка.Цена;
					ОбработкаТабличныхЧастей.РассчитатьСуммуТабЧасти(НоваяСтрокаТЧ, ЭтотОбъект);

				КонецЕсли;
				
				СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары",НоваяСтрокаТЧ, ЭтотОбъект, Истина, Истина);

		КонецЦикла;

		
	// {{ТТК Сладков А. ИТ ДЕВ № D2017-0307-3226 23.05.2017 начало	
	ИначеЕсли ТипЗнч(Основание) = Тип("ДокументСсылка.ttk_ЗаявкаНаОтгрузку") Тогда

		
					
	// }}ТТК Сладков А. ИТ ДЕВ № D2017-0307-3226 23.05.2017 окончание	
	КонецЕсли;
		
	// }}ТТК Сладков А. Заявка № 20.05.2016 окончание	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	//+++ Колесников А.С. 05.11.2018 [CHG448 / 601] 
	ПроверкаПройдена = ttk_ИнтеграцияБП30Сервер.ПроверкаПометкиУдаления(Дата,ПометкаУдаления);
	Если ПроверкаПройдена И ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО Тогда
		Отказ = Истина;	
	КонецЕсли;	
	//--- Колесников А.С. 05.11.2018 [CHG448 / 601] 
	
	//Если ОбменДанными.Загрузка Тогда 
	//	Возврат;
	//КонецЕсли;
	//Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО Тогда
	//	СуммаДокумента = Товары.Итог("Сумма");
	//ИначеЕсли  ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаОС Тогда	
	//	СуммаДокумента = ОсновныеСредства.Итог("ТекущаяСтоимостьБУ");
	//ИначеЕсли  ВидОперации = Перечисления.абс_ВидыОперацийАвизо.РасчетныеОперации  ИЛИ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.СтроительствоОбъековОС Тогда	
	//	СуммаДокумента = ТабличнаяЧасть.Итог("Сумма");
	//КонецЕсли;
	
	////Если Филиал.Пустая() Тогда
	////	Возврат;	
	////КонецЕсли;
// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
// 	
	Если ВидОперации <> Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
		Для каждого Строка Из ТабличнаяЧасть Цикл
			Если НЕ ЗначениеЗаполнено(Строка.СчетДт) И НЕ (KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетДтНУ,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ПереноситьНУОтдельноотБУ)ИЛИ KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетКтНУ,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ПереноситьНУОтдельноотБУ)) Тогда
				Отказ = Истина;
				Сообщить("Строка " + Строка.Номер + " не заполнено значение СчетДт!");
			ИначеЕсли НЕ ЗначениеЗаполнено(Строка.СчетКт) И НЕ (KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетДтНУ,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ПереноситьНУОтдельноотБУ)ИЛИ KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетКтНУ,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ПереноситьНУОтдельноотБУ)) Тогда
				Отказ = Истина;
				Сообщить("Строка " + Строка.Номер + " не заполнено значение СчетКт!");
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание			
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)	
	Префикс = "";
	ОбщегоНазначения.ДобавитьПрефиксОрганизации(ЭтотОбъект, Префикс);
КонецПроцедуры

Процедура ЗаполнитьПоПрочимЗатратам(Основание)
	Организация = Основание.Организация;
	ДокументОснование=Основание;
	Запрос=Новый Запрос;
	Запрос.Текст="ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	|	ХозрасчетныйДвиженияССубконто.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(&НачПериода, &КонПериода, Организация = &Организация, , ) КАК ХозрасчетныйДвиженияССубконто
	|ГДЕ
	|	ХозрасчетныйДвиженияССубконто.Регистратор = &ДокументОснование";
	Запрос.УстановитьПараметр("ДокументОснование",Основание);
	Запрос.УстановитьПараметр("НачПериода",НачалоДня(Основание.Дата));
	Запрос.УстановитьПараметр("КонПериода",КонецДня(Основание.Дата));
	Запрос.УстановитьПараметр("Организация",Организация);
	
	Выборка=Запрос.Выполнить().Выбрать();
	Филиал=Основание.Субконто1;
	Пока Выборка.Следующий() Цикл
		НовСтр=ТабличнаяЧасть.Добавить();
		НовСтр.Дата=Основание.Дата;
		НовСтр.Номер=Основание.Номер;
		НовСтр.Документ=Строка(Основание);
		НовСтр.СчетДт=Выборка.СчетДт;
		НовСтр.СчетКт=Выборка.СчетКт;
		НовСтр.Сумма=Выборка.Сумма;
		НовСтр.НаименованиеПередаваемогоИмущества="Авизо передача через Прочие затраты"
	КонецЦикла;
КонецПроцедуры

Процедура ЗаполнитьПоОснованию(Основание) Экспорт
	
	//ТабличнаяЧасть.Очистить();
	//
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//	"ВЫБРАТЬ
	//	|	ХозрасчетныйОбороты.Счет,
	//	|	ХозрасчетныйОбороты.КорСчет,
	//	|	ХозрасчетныйОбороты.КорСубконто1,
	//	|	ХозрасчетныйОбороты.КорСубконто2,
	//	|	ХозрасчетныйОбороты.КорСубконто3,
	//	|	ХозрасчетныйОбороты.СуммаОборотДт,
	//	|	ХозрасчетныйОбороты.СуммаОборотКт,
	//	|	ХозрасчетныйОбороты.КоличествоКорОборотДт,
	//	|	ХозрасчетныйОбороты.КоличествоКорОборотКт,
	//	|	ХозрасчетныйОбороты.Регистратор
	//	|ПОМЕСТИТЬ ВТХозрасчетный
	//	|ИЗ
	//	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	//	|			,
	//	|			,
	//	|			Регистратор,
	//	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВнутрихозяйственныеРасчеты)),
	//	|			,
	//	|			Организация = &Организация
	//	|				И Субконто1 = &Филиал,
	//	|			,
	//	|			) КАК ХозрасчетныйОбороты
	//	|ГДЕ
	//	|	ХозрасчетныйОбороты.Регистратор = &Регистратор
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТХозрасчетный.Счет,
	//	|	ВТХозрасчетный.КорСчет,
	//	|	ВТХозрасчетный.КорСубконто1,
	//	|	ВТХозрасчетный.КорСубконто2,
	//	|	ВТХозрасчетный.КорСубконто3,
	//	|	МАКСИМУМ(ВТХозрасчетный.СуммаОборотДт) КАК СуммаОборотДт,
	//	|	МАКСИМУМ(ВТХозрасчетный.СуммаОборотКт) КАК СуммаОборотКт,
	//	|	МАКСИМУМ(ВТХозрасчетный.КоличествоКорОборотДт) КАК КоличествоКорОборотДт,
	//	|	МАКСИМУМ(ВТХозрасчетный.КоличествоКорОборотКт) КАК КоличествоКорОборотКт,
	//	|	МАКСИМУМ(СоответствиеСчетовБУиНУСрезПоследних.СчетНУ) КАК СчетНУ,
	//	|	ВТХозрасчетный.Регистратор
	//	|ПОМЕСТИТЬ ВТХозрасчетныйСНУ
	//	|ИЗ
	//	|	ВТХозрасчетный КАК ВТХозрасчетный,
	//	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	//	|			,
	//	|			СчетБУ В
	//	|						(ВЫБРАТЬ
	//	|							ВТХозрасчетный.КорСчет
	//	|						ИЗ
	//	|							ВТХозрасчетный)
	//	|					И СчетКоррБУ В
	//	|						(ВЫБРАТЬ
	//	|							ВТХозрасчетный.Счет
	//	|						ИЗ
	//	|							ВТХозрасчетный)
	//	|				ИЛИ СчетКоррБУ = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СоответствиеСчетовБУиНУСрезПоследних
	//	|
	//	|СГРУППИРОВАТЬ ПО
	//	|	ВТХозрасчетный.Регистратор,
	//	|	ВТХозрасчетный.Счет,
	//	|	ВТХозрасчетный.КорСчет,
	//	|	ВТХозрасчетный.КорСубконто1,
	//	|	ВТХозрасчетный.КорСубконто2,
	//	|	ВТХозрасчетный.КорСубконто3
	//	|;
	//	|
	//	|////////////////////////////////////////////////////////////////////////////////
	//	|ВЫБРАТЬ
	//	|	ВТХозрасчетныйСНУ.Счет,
	//	|	ВТХозрасчетныйСНУ.КорСчет,
	//	|	ВТХозрасчетныйСНУ.КорСубконто1,
	//	|	ВТХозрасчетныйСНУ.КорСубконто2,
	//	|	ВТХозрасчетныйСНУ.КорСубконто3,
	//	|	ВТХозрасчетныйСНУ.СуммаОборотДт,
	//	|	ВТХозрасчетныйСНУ.СуммаОборотКт,
	//	|	ВТХозрасчетныйСНУ.КоличествоКорОборотДт,
	//	|	ВТХозрасчетныйСНУ.КоличествоКорОборотКт,
	//	|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборотДт, 0) КАК СуммаОборотДтНУ,
	//	|	ЕСТЬNULL(НалоговыйОбороты.СуммаОборотКт, 0) КАК СуммаОборотКтНУ,
	//	|	ЕСТЬNULL(НалоговыйОборотыВР.СуммаОборотДт, 0) КАК СуммаОборотДтВР,
	//	|	ЕСТЬNULL(НалоговыйОборотыВР.СуммаОборотКт, 0) КАК СуммаОборотКтВР,
	//	|	ЕСТЬNULL(НалоговыйОборотыПР.СуммаОборотДт, 0) КАК СуммаОборотДтПР,
	//	|	ЕСТЬNULL(НалоговыйОборотыПР.СуммаОборотКт, 0) КАК СуммаОборотКтПР
	//	|ИЗ
	//	|	ВТХозрасчетныйСНУ КАК ВТХозрасчетныйСНУ
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Обороты(
	//	|				,
	//	|				,
	//	|				Регистратор,
	//	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнутрихозяйственныеРасчеты)),
	//	|				,
	//	|				Организация = &Организация
	//	|					И Субконто1 = &Филиал
	//	|					И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ),
	//	|				,
	//	|				) КАК НалоговыйОбороты
	//	|		ПО ВТХозрасчетныйСНУ.СчетНУ = НалоговыйОбороты.КорСчет
	//	|			И ВТХозрасчетныйСНУ.КорСубконто1 = НалоговыйОбороты.КорСубконто1
	//	|			И ВТХозрасчетныйСНУ.КорСубконто2 = НалоговыйОбороты.КорСубконто2
	//	|			И ВТХозрасчетныйСНУ.КорСубконто3 = НалоговыйОбороты.КорСубконто3
	//	|			И ВТХозрасчетныйСНУ.Регистратор = НалоговыйОбороты.Регистратор
	//	|			И ВТХозрасчетныйСНУ.Счет.Код = НалоговыйОбороты.Счет.Код
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Обороты(
	//	|				,
	//	|				,
	//	|				Регистратор,
	//	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнутрихозяйственныеРасчеты)),
	//	|				,
	//	|				Организация = &Организация
	//	|					И Субконто1 = &Филиал
	//	|					И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР),
	//	|				,
	//	|				) КАК НалоговыйОборотыПР
	//	|		ПО ВТХозрасчетныйСНУ.Счет.Код = НалоговыйОборотыПР.Счет.Код
	//	|			И ВТХозрасчетныйСНУ.СчетНУ = НалоговыйОборотыПР.КорСчет
	//	|			И ВТХозрасчетныйСНУ.КорСубконто1 = НалоговыйОборотыПР.КорСубконто1
	//	|			И ВТХозрасчетныйСНУ.КорСубконто2 = НалоговыйОборотыПР.КорСубконто2
	//	|			И ВТХозрасчетныйСНУ.КорСубконто3 = НалоговыйОборотыПР.КорСубконто3
	//	|			И ВТХозрасчетныйСНУ.Регистратор = НалоговыйОборотыПР.Регистратор
	//	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Обороты(
	//	|				,
	//	|				,
	//	|				Регистратор,
	//	|				Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Налоговый.ВнутрихозяйственныеРасчеты)),
	//	|				,
	//	|				Организация = &Организация
	//	|					И Субконто1 = &Филиал
	//	|					И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР),
	//	|				,
	//	|				) КАК НалоговыйОборотыВР
	//	|		ПО ВТХозрасчетныйСНУ.Счет.Код = НалоговыйОборотыВР.Счет.Код
	//	|			И ВТХозрасчетныйСНУ.СчетНУ = НалоговыйОборотыВР.КорСчет
	//	|			И ВТХозрасчетныйСНУ.КорСубконто1 = НалоговыйОборотыВР.КорСубконто1
	//	|			И ВТХозрасчетныйСНУ.КорСубконто2 = НалоговыйОборотыВР.КорСубконто2
	//	|			И ВТХозрасчетныйСНУ.КорСубконто3 = НалоговыйОборотыВР.КорСубконто3
	//	|			И ВТХозрасчетныйСНУ.Регистратор = НалоговыйОборотыВР.Регистратор";

	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("Регистратор", Основание);
	//Запрос.УстановитьПараметр("Филиал", Филиал);

	//Результат = Запрос.Выполнить();

	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	//
	//ПозицДвоет=Найти(Строка(ТипЗнч(Основание)), ":"); 
	//НазвДокум=Сред(Строка(ТипЗнч(Основание)),ПозицДвоет+1);
	//
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл		
	//	НоваяСтрока = ТабличнаяЧасть.Добавить();
	//	НоваяСтрока.Документ = НазвДокум;
	//	НоваяСтрока.Дата = Основание.Дата;
	//	НоваяСтрока.Номер = Основание.Номер;
	//	НоваяСтрока.Субконто1 = ВыборкаДетальныеЗаписи.КорСубконто1;
	//	НоваяСтрока.Субконто2 = ВыборкаДетальныеЗаписи.КорСубконто2;
	//	НоваяСтрока.Субконто3 = ВыборкаДетальныеЗаписи.КорСубконто3;		
	//	Если (ВыборкаДетальныеЗаписи.СуммаОборотКт <> 0) Или (ВыборкаДетальныеЗаписи.КоличествоКорОборотКт <> 0) Или (ВыборкаДетальныеЗаписи.СуммаОборотКтНУ <> 0) Или (ВыборкаДетальныеЗаписи.СуммаОборотКтПР <> 0) Или (ВыборкаДетальныеЗаписи.СуммаОборотКтВР <> 0) Тогда
	//		НоваяСтрока.СчетДт = ВыборкаДетальныеЗаписи.КорСчет;
	//		НоваяСтрока.СчетКт = ВыборкаДетальныеЗаписи.Счет;
	//		НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.СуммаОборотКт;
	//		НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.КоличествоКорОборотКт;
	//		НоваяСтрока.СуммаНУ = ВыборкаДетальныеЗаписи.СуммаОборотКтНУ;
	//		НоваяСтрока.СуммаПР = ВыборкаДетальныеЗаписи.СуммаОборотКтПР;
	//		НоваяСтрока.СуммаВР = ВыборкаДетальныеЗаписи.СуммаОборотКтВР;
	//	Иначе
	//		НоваяСтрока.СчетКт = ВыборкаДетальныеЗаписи.КорСчет;
	//		НоваяСтрока.СчетДт = ВыборкаДетальныеЗаписи.Счет;
	//		НоваяСтрока.Сумма = ВыборкаДетальныеЗаписи.СуммаОборотДт;
	//		НоваяСтрока.Количество = ВыборкаДетальныеЗаписи.КоличествоКорОборотДт;
	//		НоваяСтрока.СуммаНУ = ВыборкаДетальныеЗаписи.СуммаОборотДтНУ;
	//		НоваяСтрока.СуммаПР = ВыборкаДетальныеЗаписи.СуммаОборотДтПР;
	//		НоваяСтрока.СуммаВР = ВыборкаДетальныеЗаписи.СуммаОборотДтВР;			
	//	КонецЕсли;		
	//	Попытка
	//		НоваяСтрока.НаименованиеПередаваемогоИмущества=СокрЛП(Основание.Услуги[0].Содержание);
	//	Исключение
	//		НоваяСтрока.НаименованиеПередаваемогоИмущества="Распределение платы на "  +СокрЛП(Основание.Комментарий);
	//	КонецПопытки;		
	//КонецЦикла;

КонецПроцедуры

Процедура ЗаписатьНовыйСтатус(НовыйСтатус,ПричинаИзмененияСтатуса)

	НаборЗаписей = РегистрыСведений.абс_ИсторияСтатусовАвизо.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.Авизо.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = абс_СерверныеФункции.ПолучитьДатуСервера();

	Запись.Авизо  			= Ссылка;
	Запись.Пользователь	 		= глЗначениеПеременной("глТекущийПользователь");	
	Запись.СтатусДокумента  	= НовыйСтатус;
	
	Запись.Комментарий 			= ПричинаИзмененияСтатуса;
	
	НаборЗаписей.Записать();

КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусАвизо(Ссылка);
	
	Если НЕ Статус = СтатусПоРегистру Тогда
		
		ЗаписатьНовыйСтатус(Статус, ПричинаИзмененияСтатуса);		
		
		//Крамаренко Д.М.
		//НФС 2018
		Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО Тогда
			Для Каждого Строка из Товары Цикл
				СтрокаНачалаСообщенияОбОшибке = Нстр("ru = 'В строке номер """+ СокрЛП(Строка.НомерСтроки) +
				""" табличной части "" Передача товаров "": '");
				Если НЕ ЗначениеЗаполнено(Строка.СтатьяОборотов) Тогда
					ttk_ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке+"не заполнена Бюджетная Статья",Отказ,"Ошибка аналитик");
				КонецЕсли;
				//проверка счетов группы 07 или 08
				Если ЗначениеЗаполнено(Строка.СчетУчетаБУ) Тогда
				СчетаПроверочнойГруппы07 = Строка.СчетУчетаБУ.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке) ИЛИ Строка.СчетУчетаБУ = ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке;
				СчетаПроверочнойГруппы08 = Строка.СчетУчетаБУ.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы) ИЛИ Строка.СчетУчетаБУ = ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы;
				КонецЕсли;
				//проверка статьи КВ и аналитик
				Если СокрЛП(Строка.СтатьяОборотов.Код) = "КВпоПост" Тогда
					Если НЕ ЗначениеЗаполнено(Строка.абс_ТЭО) ИЛИ НЕ ЗначениеЗаполнено(Строка.абс_КВ) Тогда
						ttk_ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + "не заполнены аналитики " +
						"ТЭО и КВ - они обязательны при указанной статье!", Отказ, "Ошибка аналитик");				
					КонецЕсли;
				КонецЕсли;
				//проверка статьи КВ и счетов учета
				Если Статус = Перечисления.абс_СтатусыАвизо.ОбработкаПринятыхДокументов Тогда
					Если СокрЛП(Строка.СтатьяОборотов.Код) = "КВпоПост" Тогда
						Если НЕ (СчетаПроверочнойГруппы07 ИЛИ СчетаПроверочнойГруппы08) Тогда
							ttk_ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + Нстр("ru = 'Необходимо выбрать при установленной бюджетной статье только счета группы 07 или 08'") , Отказ, "Ошибка аналитик");			
						КонецЕсли;
					КонецЕсли;
					Если СчетаПроверочнойГруппы07 ИЛИ СчетаПроверочнойГруппы08  Тогда
						Если СокрЛП(Строка.СтатьяОборотов.Код) <> "КВпоПост" Тогда
							ttk_ОбщегоНазначения.СообщитьОбОшибке(СтрокаНачалаСообщенияОбОшибке + Нстр("ru = 'Необходимо выбрать при установленных счетах группы 07 или 08 только статью Единая КВ'") , Отказ, "Ошибка аналитик");
						КонецЕсли;			
					КонецЕсли;
				КонецЕсли;				
			КонецЦикла;				
		КонецЕсли;
		
	КонецЕсли;
	Если Статус = Перечисления.абс_СтатусыАвизо.Отказ Тогда
		//УстановитьПривилегированныйРежим(Истина);
		
		абс_БизнесПроцессыПривелегированный.АвизоВОтказ(Новый Структура("ВидОперации,ДокументОснованиеИсточник,ДокументОснованиеПриемник,ДокументОснованиеПриемникДоп,ДокументОснованиеИсточникДоп",ВидОперации,ДокументОснованиеИсточник,ДокументОснованиеПриемник,ДокументОснованиеПриемникДоп,ДокументОснованиеИсточникДоп),Отказ);
		
	КонецЕсли;	
		
		
КонецПроцедуры

// {{KM WARE Лазаревский К.В. Заявка № 27.10.2015 начало
Функция ПолучитьКорСчетНУ()

		КорСчетНУ = ПланыСчетов.Налоговый.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|			,
	|			СчетБУ = &КорСчет
	|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних"
	;
	
	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КорСчетНУ = ВыборкаДетальныеЗаписи.СчетНУ;	
	КонецЦикла;

Возврат  КорСчетНУ;
КонецФункции // ПолучитьКорСчетНУ() }}KM WARE Лазаревский К.В. Заявка № 27.10.2015 окончание

Процедура ЗаполнитьОСНаСервере(ПерезаполнитьТЧ, СпособОтраженияДляОсСНулевойСтоимостью) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",     Организация);
	Запрос.УстановитьПараметр("ОрганизацияПриемник",     ОрганизацияПриемник);
	
	Запрос.УстановитьПараметр("Период",          Дата);
	
	ОтражатьВУправленческомУчете = Истина;
	ОтражатьВБухгалтерскомУчете = Истина;
	ОтражатьВНалоговомУчете = Истина;
// {{KM WARE Лазаревский К.В. Заявка № 15.09.2015 начало
// для выбора

	Если ПерезаполнитьТЧ Тогда
		Запрос.Текст = 
	              "ВЫБРАТЬ
		    |	СостоянияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
		    |	СостоянияОСОрганизаций.Состояние,
		    |	СостоянияОСОрганизаций.ДатаСостояния КАК ДатаСостояния
		    |ПОМЕСТИТЬ вт_дата
		    |ИЗ
		    |	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
		    |ГДЕ
		    |	СостоянияОСОрганизаций.Организация = &Организация
			// {{KM WARE Малыгин П.К. Заявка №35398 13.01.2016 начало
			// Это не работает как надо
			//|	И СостоянияОСОрганизаций.Состояние <> &Состояние
			// }}KM WARE Малыгин П.К. Заявка №35398 13.01.2016 окончание
		    |	И ВЫБОР
		    |			КОГДА &ОтборЦельИспользования
		    |				ТОГДА &ЦельИспользования = СостоянияОСОрганизаций.ОсновноеСредство.ЦельИспользования
		    |			ИНАЧЕ ИСТИНА
		    |		КОНЕЦ
		    |
		  	|" +ДополнитьТекстЗапросаПоОСОтборами(Запрос) + "
		    |ИНДЕКСИРОВАТЬ ПО
		    |	ОсновноеСредство,
		    |	ДатаСостояния
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |ВЫБРАТЬ
		    |	вт_дата.ОсновноеСредство КАК ОсновноеСредство,
		    |	МАКСИМУМ(вт_дата.ДатаСостояния) КАК ДатаСостояния
		    |ПОМЕСТИТЬ вт_последняяДата
		    |ИЗ
		    |	вт_дата КАК вт_дата
		    |
		    |СГРУППИРОВАТЬ ПО
		    |	вт_дата.ОсновноеСредство
		    |
		    |ИНДЕКСИРОВАТЬ ПО
		    |	ОсновноеСредство,
		    |	ДатаСостояния
		    |;
		    |
			// {{KM WARE Малыгин П.К. Заявка №35398 13.01.2016 начало
			// Добавляем рабочий отбор по состоянию ОС
			|////////////////////////////////////////////////////////////////////////////////
		    |ВЫБРАТЬ
		    |	вт_дата.ОсновноеСредство,
		    |	вт_дата.Состояние
		    |ПОМЕСТИТЬ ПоследнееСостояниеОС
		    |ИЗ
		    |	вт_последняяДата КАК вт_последняяДата
		    |		ЛЕВОЕ СОЕДИНЕНИЕ вт_дата КАК вт_дата
		    |		ПО вт_последняяДата.ОсновноеСредство = вт_дата.ОсновноеСредство
		    |			И вт_последняяДата.ДатаСостояния = вт_дата.ДатаСостояния
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
			// }}KM WARE Малыгин П.К. Заявка №35398 13.01.2016 окончание
			//// {{KM WARE Малыгин П.К. Заявка № 35398  02.12.2015 начало
			// В таблицу Основные средства попадали неверные данные
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ
			//|	вт_последняяДата.ОсновноеСредство
			//|ПОМЕСТИТЬ ОсновныеСредства
			//|ИЗ
			//|	вт_последняяДата КАК вт_последняяДата
			//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
			//|		ПО вт_последняяДата.ОсновноеСредство = ОсновныеСредства.Ссылка
			//|;
			//|	ВЫБРАТЬ
			//|		вт_последняяДата.ОсновноеСредство
			//|	ИЗ
			//|		вт_последняяДата КАК вт_последняяДата
			//|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
			//|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ) КАК МестонахождениеОССрезПоследних
			//|				ПО ОсновныеСредства.Ссылка = МестонахождениеОССрезПоследних.ОсновноеСредство
			//|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Период, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
			//// {{KM WARE Малыгин П.К. Заявка № 35398  01.12.2015 начало
			//// Ошибка в запросе
			//// {{Старый код:
			////			|				ПО ОсновныеСредства.Ссылка = МестонахождениеОССрезПоследних.ОсновноеСредство
			//// }}Новый код:
			//|				ПО ОсновныеСредства.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
			//// }}KM WARE Малыгин П.К. Заявка № 35398  01.12.2015 окончание 
			//|			ПО вт_последняяДата.ОсновноеСредство = ОсновныеСредства.Ссылка		   
			//|	ГДЕ
			//|	ВЫБОР
			//|		КОГДА &ОтборПоПодразделению Тогда &Подразделение = МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение 
			//|		ИНАЧЕ ИСТИНА
			//|	КОНЕЦ
			////|	И  
			////|	ВЫБОР
			////|		КОГДА &ОтборПоОбособленное Тогда &Обособленное = МестонахождениеОССрезПоследних.Обособленное 
			////|		ИНАЧЕ ИСТИНА
			////|	КОНЕЦ
			//|	И  
			//|	ВЫБОР
			//|		КОГДА &ОтборПоМОЛ Тогда &МОЛ = МестонахождениеОССрезПоследних.МОЛ 
			//|		ИНАЧЕ ИСТИНА
			//|	КОНЕЦ
			//|СГРУППИРОВАТЬ ПО
			//|	вт_последняяДата.ОсновноеСредство
			//|";
			//// }}KM WARE Малыгин П.К. Заявка № 35398  02.12.2015 окончание 
            |////////////////////////////////////////////////////////////////////////////////
			// {{KM WARE Малыгин П.К. Заявка № 35398 13.01.2016 начало
			// {{Старый код:
			//|ВЫБРАТЬ
			//|	вт_последняяДата.ОсновноеСредство
			//|ПОМЕСТИТЬ ОсновныеСредства
			//|ИЗ
			//|	вт_последняяДата КАК вт_последняяДата
			//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
			//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ) КАК МестонахождениеОССрезПоследних
			//|			ПО ОсновныеСредства.Ссылка = МестонахождениеОССрезПоследних.ОсновноеСредство
			//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Период, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
			//|			ПО ОсновныеСредства.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
			//|		ПО вт_последняяДата.ОсновноеСредство = ОсновныеСредства.Ссылка
			//|ГДЕ
			//|	ВЫБОР
			//|			КОГДА &ОтборПоПодразделению
			//|				ТОГДА &Подразделение = МестонахождениеОССрезПоследних.Местонахождение
			//|			ИНАЧЕ ИСТИНА
			//|		КОНЕЦ
			//|	И ВЫБОР
			//|			КОГДА &ОтборПоМОЛ
			//|				ТОГДА &МОЛ = МестонахождениеОССрезПоследних.МОЛ
			//|			ИНАЧЕ ИСТИНА
			//|		КОНЕЦ
			//|СГРУППИРОВАТЬ ПО
			//|	вт_последняяДата.ОсновноеСредство
			//|;
			//|
			//|////////////////////////////////////////////////////////////////////////////////
			//|ВЫБРАТЬ
			//|	вт_последняяДата.ОсновноеСредство
			//|ИЗ
			//|	вт_последняяДата КАК вт_последняяДата
			//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
			//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ) КАК МестонахождениеОССрезПоследних
			//|			ПО ОсновныеСредства.Ссылка = МестонахождениеОССрезПоследних.ОсновноеСредство
			//|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Период, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
			//|			ПО ОсновныеСредства.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
			//|		ПО вт_последняяДата.ОсновноеСредство = ОсновныеСредства.Ссылка
			//|ГДЕ
			//|	ВЫБОР
			//|			КОГДА &ОтборПоПодразделению
			//|				ТОГДА &Подразделение = МестонахождениеОССрезПоследних.Местонахождение
			//|			ИНАЧЕ ИСТИНА
			//|		КОНЕЦ
			//|	И ВЫБОР
			//|			КОГДА &ОтборПоМОЛ
			//|				ТОГДА &МОЛ = МестонахождениеОССрезПоследних.МОЛ
			//|			ИНАЧЕ ИСТИНА
			//|		КОНЕЦ
			//|
			//|СГРУППИРОВАТЬ ПО
			//|	вт_последняяДата.ОсновноеСредство";			 
			// }}Новый код:
		    |ВЫБРАТЬ
		    |	ПоследнееСостояниеОС.ОсновноеСредство КАК ОсновноеСредство
		    |ПОМЕСТИТЬ ОсновныеСредства
		    |ИЗ
		    |	ПоследнееСостояниеОС КАК ПоследнееСостояниеОС
		    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
		    |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ) КАК МестонахождениеОССрезПоследних
		    |			ПО ОсновныеСредства.Ссылка = МестонахождениеОССрезПоследних.ОсновноеСредство
		    |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Период, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
		    |			ПО ОсновныеСредства.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		    |		ПО ПоследнееСостояниеОС.ОсновноеСредство = ОсновныеСредства.Ссылка
		    |ГДЕ
		    |	ВЫБОР
		    |			КОГДА &ОтборПоПодразделению
		    |				ТОГДА &Подразделение = МестонахождениеОССрезПоследних.Местонахождение
		    |			ИНАЧЕ ИСТИНА
		    |		КОНЕЦ
		    |	И ВЫБОР
		    |			КОГДА &ОтборПоМОЛ
		    |				ТОГДА &МОЛ = МестонахождениеОССрезПоследних.МОЛ
		    |			ИНАЧЕ ИСТИНА
		    |		КОНЕЦ
		    |	И ПоследнееСостояниеОС.Состояние <> &Состояние
		    |;
		    |
		    |////////////////////////////////////////////////////////////////////////////////
		    |ВЫБРАТЬ
		    |	ПоследнееСостояниеОС.ОсновноеСредство КАК ОсновноеСредство
		    |ИЗ
		    |	ПоследнееСостояниеОС КАК ПоследнееСостояниеОС
		    |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ОсновныеСредства КАК ОсновныеСредства
		    |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ) КАК МестонахождениеОССрезПоследних
		    |			ПО ОсновныеСредства.Ссылка = МестонахождениеОССрезПоследних.ОсновноеСредство
		    |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&Период, ) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
		    |			ПО ОсновныеСредства.Ссылка = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
		    |		ПО ПоследнееСостояниеОС.ОсновноеСредство = ОсновныеСредства.Ссылка
		    |ГДЕ
		    |	ВЫБОР
		    |			КОГДА &ОтборПоПодразделению
		    |				ТОГДА &Подразделение = МестонахождениеОССрезПоследних.Местонахождение
		    |			ИНАЧЕ ИСТИНА
		    |		КОНЕЦ
		    |	И ВЫБОР
		    |			КОГДА &ОтборПоМОЛ
		    |				ТОГДА &МОЛ = МестонахождениеОССрезПоследних.МОЛ
		    |			ИНАЧЕ ИСТИНА
		    |		КОНЕЦ
		    |	И ПоследнееСостояниеОС.Состояние <> &Состояние
			// {{KM WARE Малыгин П.К. Заявка № 27.01.2016 начало
			// Исправление задвоения записей в случае, когда принятие к учету и ввод в эксплуатацию сделаны одновременной
			|СГРУППИРОВАТЬ ПО
			|	ПоследнееСостояниеОС.ОсновноеСредство
			// }}KM WARE Малыгин П.К. Заявка № 27.01.2016 окончание			
			|"; 
			 // }}KM WARE Малыгин П.К. Заявка № 35398 13.01.2016 окончание 
	
			
			//"ВЫБРАТЬ
			//|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство
			//|ПОМЕСТИТЬ ОсновныеСредства
			//|ИЗ
			//|	РегистрБухгалтерии.Хозрасчетный.Остатки(, Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки
			//|Соединить
			//|Выбрать 
			//|	СостояниеОС
			//|" +ДополнитьТекстЗапросаОтборами(Запрос) + "
			//|;
			//|ВЫБРАТЬ
			//|	ОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство
			//|ИЗ
			//|	ОсновныеСредства КАК ОсновныеСредства
			//|";
		//Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.ОсновныеСредства);	
		Запрос.УстановитьПараметр("Состояние", Перечисления.СостоянияОС.СнятоСУчета);	
		// {{KM WARE Малыгин П.К. Заявка № 35398  01.12.2015 начало
		// Отбор не по нужному реквизиту
		// {{Старый код:
		// Запрос.УстановитьПараметр("ОтборПоПодразделению", ЗначениеЗаполнено(абс_ЦФО));
		// Запрос.УстановитьПараметр("Подразделение", абс_ЦФО);
		// }}Новый код:
		Запрос.УстановитьПараметр("ОтборПоПодразделению", ЗначениеЗаполнено(Подразделение));
		Запрос.УстановитьПараметр("Подразделение", Подразделение);
		// }}KM WARE Малыгин П.К. Заявка № 35398  01.12.2015 окончание 
		
		
		//Запрос.УстановитьПараметр("ОтборПоОбособленное", ЗначениеЗаполнено(ПодразделениеОрганизации));
		//Запрос.УстановитьПараметр("Обособленное", ПодразделениеОрганизации);
		Запрос.УстановитьПараметр("ОтборПоМОЛ", ЗначениеЗаполнено(МОЛ));
		Запрос.УстановитьПараметр("МОЛ", МОЛ);
		Запрос.УстановитьПараметр("ОтборЦельИспользования", ЗначениеЗаполнено(ЦельИспользования));
		Запрос.УстановитьПараметр("ЦельИспользования", ЦельИспользования);
		Рез = Запрос.Выполнить().Выгрузить();
		
		ОсновныеСредства.Очистить();
		Для Каждого Строка Из Рез Цикл
			НовСтрока = ОсновныеСредства.Добавить();
			НовСтрока.ОсновноеСредство = строка.ОсновноеСредство;
		КонецЦикла;
	Иначе	
		Запрос.Текст = 
			"ВЫБРАТЬ
		   	|	ОсновноеСредство
			|ПОМЕСТИТЬ ОсновныеСредства
			|ИЗ &ВнешнийИсточник КАК ВнешнийИсточник
			|";
		Запрос.УстановитьПараметр("ВнешнийИсточник", ОсновныеСредства.Выгрузить());
		Запрос.Выполнить();
	КонецЕсли;			
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//   |	ОсновноеСредство
	//|ПОМЕСТИТЬ ОсновныеСредства
	//|ИЗ &ВнешнийИсточник КАК ВнешнийИсточник
	//|";
	//Запрос.Выполнить();
// }}KM WARE Лазаревский К.В. Заявка № 15.09.2015 окончание	
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА НалоговыйОстатки.Субконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА НалоговыйОстатки.Субконто1
	               |		ИНАЧЕ НалоговыйОстатки.Субконто2
	               |	КОНЕЦ КАК ОС,
	               |	НалоговыйОстатки.СуммаОстатокДт КАК ПР,
	               |	NULL КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОС),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	               |				И ВЫБОР
	               |					КОГДА Субконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА Субконто1 В
	               |								(ВЫБРАТЬ
	               |									ОсновныеСредства.ОсновноеСредство
	               |								ИЗ
	               |									ОсновныеСредства)
	               |					ИНАЧЕ Субконто2 В
	               |							(ВЫБРАТЬ
	               |								ОсновныеСредства.ОсновноеСредство
	               |							ИЗ
	               |								ОсновныеСредства)
	               |				КОНЕЦ) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА НалоговыйОстатки.Субконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |			ТОГДА НалоговыйОстатки.Субконто1
	               |		ИНАЧЕ НалоговыйОстатки.Субконто2
	               |	КОНЕЦ,
	               |	NULL,
	               |	НалоговыйОстатки.СуммаОстатокДт
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОС),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	               |				И ВЫБОР
	               |					КОГДА Субконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА Субконто1 В
	               |								(ВЫБРАТЬ
	               |									ОсновныеСредства.ОсновноеСредство
	               |								ИЗ
	               |									ОсновныеСредства)
	               |					ИНАЧЕ Субконто2 В
	               |							(ВЫБРАТЬ
	               |								ОсновныеСредства.ОсновноеСредство
	               |							ИЗ
	               |								ОсновныеСредства)
	               |				КОНЕЦ) КАК НалоговыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1 КАК ОС,
	               |	НалоговыйОстатки.СуммаОстатокКт КАК ПР,
	               |	NULL КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР_Ам
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОСАм),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	               |				И Субконто1 В
	               |					(ВЫБРАТЬ
	               |						ОсновныеСредства.ОсновноеСредство
	               |					ИЗ
	               |						ОсновныеСредства)) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1,
	               |	NULL,
	               |	НалоговыйОстатки.СуммаОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОСАм),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	               |				И Субконто1 В
	               |					(ВЫБРАТЬ
	               |						ОсновныеСредства.ОсновноеСредство
	               |					ИЗ
	               |						ОсновныеСредства)) КАК НалоговыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтНУ_ПР_ВР.ОС,
	               |	СУММА(ВтНУ_ПР_ВР.ПР) КАК ПР,
	               |	СУММА(ВтНУ_ПР_ВР.ВР) КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР_св
	               |ИЗ
	               |	ВтНУ_ПР_ВР КАК ВтНУ_ПР_ВР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВтНУ_ПР_ВР.ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтНУ_ПР_ВР_Ам.ОС,
	               |	СУММА(ВтНУ_ПР_ВР_Ам.ПР) КАК ПР,
	               |	СУММА(ВтНУ_ПР_ВР_Ам.ВР) КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР_Ам_св
	               |ИЗ
	               |	ВтНУ_ПР_ВР_Ам КАК ВтНУ_ПР_ВР_Ам
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВтНУ_ПР_ВР_Ам.ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ОсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	               |	АмортизацияБухгалтерскийУчетОстатки.Организация КАК Организация,
	               |	АмортизацияОстатки.ОсновноеСредство КАК ОС_УУ,
	               |	АмортизацияБухгалтерскийУчетОстатки.ОсновноеСредство КАК ОС_БУ,
	               |	АмортизацияНалоговыйУчетОстатки.ОсновноеСредство КАК ОС_НУ,
	               |	АмортизацияОстатки.СтоимостьОстаток КАК Стоимость,
	               |	АмортизацияБухгалтерскийУчетОстатки.СтоимостьОстаток КАК СтоимостьБУ,
	               |	АмортизацияНалоговыйУчетОстатки.СтоимостьОстаток КАК СтоимостьНУ,
	               |	ВтНУ_ПР_ВР_св.ПР КАК СтоимостьПР,
	               |	ВтНУ_ПР_ВР_св.ВР КАК СтоимостьВР,
	               |	ВтНУ_ПР_ВР_Ам_св.ПР КАК АмортизацияПР,
	               |	ВтНУ_ПР_ВР_Ам_св.ВР КАК АмортизацияВР,
	               |	АмортизацияОстатки.АмортизацияОстаток КАК Амортизация,
	               |	АмортизацияБухгалтерскийУчетОстатки.АмортизацияОстаток КАК АмортизацияБУ,
	               |	АмортизацияНалоговыйУчетОстатки.АмортизацияОстаток КАК АмортизацияНУ,
	               |	ОсновныеСредстваСписанныеНаЗатратыОстатки.ОсновноеСредство КАК ОС_НаЗатратыУУ,
	               |	ОсновныеСредстваСписанныеНаЗатратыОрганизацииОстатки.ОсновноеСредство КАК ОС_НаЗатратыБУ,
	               |	ОсновныеСредстваСписанныеНаЗатратыОстатки.СтоимостьОстаток КАК СтоимостьНаЗатраты,
	               |	ОсновныеСредстваСписанныеНаЗатратыОрганизацииОстатки.СтоимостьОстаток КАК СтоимостьНаЗатратыБУ,
	               |	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации КАК СпособОтражения,
	               |	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации,
	               |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер
	               |ИЗ
	               |	ОсновныеСредства КАК ОсновныеСредства
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОСБухгалтерскийУчет.Остатки(
	               |				&Период,
	               |				ОсновноеСредство В
	               |						(ВЫБРАТЬ
	               |							ОсновныеСредства.ОсновноеСредство
	               |						ИЗ
	               |							ОсновныеСредства)
	               |					И Организация = &Организация) КАК АмортизацияБухгалтерскийУчетОстатки
	               |		ПО ОсновныеСредства.ОсновноеСредство = АмортизацияБухгалтерскийУчетОстатки.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОС.Остатки(
	               |				&Период,
	               |				ОсновноеСредство В
	               |					(ВЫБРАТЬ
	               |						ОсновныеСредства.ОсновноеСредство
	               |					ИЗ
	               |						ОсновныеСредства)) КАК АмортизацияОстатки
	               |		ПО ОсновныеСредства.ОсновноеСредство = АмортизацияОстатки.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОССписанныеНаЗатраты.Остатки(
	               |				&Период,
	               |				ОсновноеСредство В
	               |					(ВЫБРАТЬ
	               |						ОсновныеСредства.ОсновноеСредство
	               |					ИЗ
	               |						ОсновныеСредства)) КАК ОсновныеСредстваСписанныеНаЗатратыОстатки
	               |		ПО ОсновныеСредства.ОсновноеСредство = ОсновныеСредстваСписанныеНаЗатратыОстатки.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОССписанныеНаЗатратыОрганизаций.Остатки(
	               |				&Период,
	               |				ОсновноеСредство В
	               |						(ВЫБРАТЬ
	               |							ОсновныеСредства.ОсновноеСредство
	               |						ИЗ
	               |							ОсновныеСредства)
	               |					И Организация = &Организация) КАК ОсновныеСредстваСписанныеНаЗатратыОрганизацииОстатки
	               |		ПО ОсновныеСредства.ОсновноеСредство = ОсновныеСредстваСписанныеНаЗатратыОрганизацииОстатки.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОСНалоговыйУчет.Остатки(
	               |				&Период,
	               |				ОсновноеСредство В
	               |						(ВЫБРАТЬ
	               |							ОсновныеСредства.ОсновноеСредство
	               |						ИЗ
	               |							ОсновныеСредства)
	               |					И Организация = &Организация) КАК АмортизацияНалоговыйУчетОстатки
	               |		ПО ОсновныеСредства.ОсновноеСредство = АмортизацияНалоговыйУчетОстатки.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(, Организация = &Организация) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_СоответствияОбъектовПереноса КАК абс_СоответствияОбъектовПереноса
	               |			ПО (абс_СоответствияОбъектовПереноса.ОрганизацияПриемник = &ОрганизацияПриемник)
	               |				И СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.Организация = абс_СоответствияОбъектовПереноса.ОрганизацияИсточник
	               |				И СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации = абс_СоответствияОбъектовПереноса.ОбъектИсточник
	               |		ПО ОсновныеСредства.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	               |				&Период,
	               |				ОсновноеСредство В
	               |						(ВЫБРАТЬ
	               |							ОсновныеСредства.ОсновноеСредство
	               |						ИЗ
	               |							ОсновныеСредства)
	               |					И Организация = &Организация) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
	               |		ПО ОсновныеСредства.ОсновноеСредство = ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтНУ_ПР_ВР_св КАК ВтНУ_ПР_ВР_св
	               |		ПО ОсновныеСредства.ОсновноеСредство = ВтНУ_ПР_ВР_св.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтНУ_ПР_ВР_Ам_св КАК ВтНУ_ПР_ВР_Ам_св
	               |		ПО ОсновныеСредства.ОсновноеСредство = ВтНУ_ПР_ВР_Ам_св.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	               |		ПО ОсновныеСредства.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство";
				   
				   СчетаОС   = Новый Массив;
				   СчетаОСАм = Новый Массив;
				   
				   СчетаОС.Добавить(ПланыСчетов.Налоговый.ОсновныеСредства);
				   СчетаОС.Добавить(ПланыСчетов.Налоговый.ДоходныеВложенияВ_МЦ);
				   
				   СчетаОСАм.Добавить(ПланыСчетов.Налоговый.АмортизацияОсновныхСредств);
				   
				   Запрос.УстановитьПараметр("СчетаОС",     СчетаОС);
				   Запрос.УстановитьПараметр("СчетаОСАм",     СчетаОСАм);
				   
				   
				   
	ТЗ = Запрос.Выполнить().Выгрузить();

	ТаблицаАмортизацииУпр = Новый ТаблицаЗначений();
	ТаблицаАмортизацииБух = Новый ТаблицаЗначений();
	
	Если ТЗ.Количество()>0 Тогда

		СписокОС = ТЗ.ВыгрузитьКолонку("ОсновноеСредство");
		
		Если ОтражатьВУправленческомУчете Тогда
			ТаблицаАмортизацииУпр = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииУпр(Дата, СписокОС);
		КонецЕсли;

		Если ОтражатьВБухгалтерскомУчете Тогда
			ТаблицаАмортизацииБух = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииБухРегл(Дата, Организация, СписокОС);
		КонецЕсли;

		Если ОтражатьВНалоговомУчете Тогда
			ТаблицаАмортизацииНал = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНалогРегл(Ссылка, Дата, Организация, СписокОС);
		КонецЕсли;
		
		Отказ      = Ложь;
		Заголовок  = "";
		
		ТаблицаАмортизацииНал.Колонки.ОС.Имя = "ОбъектУчета";
		ТаблицаАмортизацииНал.Колонки.Добавить("СчетАмортизации");

		ТаблицаАмортизацииБух.Колонки.ОС.Имя = "ОбъектУчета";
		
        СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
		СтруктураШапкиДокумента.Вставить("ПериодРегистрации", КонецМесяца(Дата));
		
		// Начисление амортизации.
		ТаблицаАмортизацииНал.Колонки.Налог.Имя = "Сумма";
		//ТабЗатрат = Неопределено;
		
		
		СтруктураШапкиДокумента.Вставить("ОрганизацияПрименяетУСН", 		 Ложь);
		СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчетеУСНДоходы", Ложь);
		СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчетеУСН", 		 Ложь);
		СтруктураШапкиДокумента.Вставить("ПоддержкаПБУ18", 					 Истина);
		СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчете", 		 Истина);
		СтруктураШапкиДокумента.Вставить("ОтражатьВБухгалтерскомУчете", 	 Истина);
		СтруктураШапкиДокумента.Вставить("ОтражатьВУправленческомУчете", 	 Истина);
		
		Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
			СтруктураПолейУчетнойПолитикиНУ = Новый Структура("ПоддержкаПБУ18");
			ttk_ОбщегоНазначения.ДополнитьПоложениямиУчетнойПолитики(СтруктураШапкиДокумента, СтруктураШапкиДокумента.Дата, Отказ, СтруктураШапкиДокумента.Организация, "Бух", СтруктураПолейУчетнойПолитикиНУ);
		КонецЕсли;
		
		ТаблицаАмортизацииБух.Колонки.Бух.Имя = "Сумма";
        ТаблицаАмортизацииБух.Колонки.Добавить("СчетАмортизации");
        ТаблицаАмортизацииБух.Колонки.Добавить("СчетУчета");
		ТаблицаАмортизацииБух.Колонки.Добавить("СчетАмортизацииНУ");
		
		мКэшСчетов = Новый Соответствие; 
		Для Каждого Строка Из ТаблицаАмортизацииБух Цикл
			СчетНУСоответствующийСчетуБУ = мКэшСчетов[Строка.СчетУчетаБУ];
			Если СчетНУСоответствующийСчетуБУ = Неопределено Тогда
				СчетНУСоответствующийСчетуБУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Строка.СчетУчетаБУ), Ложь, СтруктураШапкиДокумента.Дата);
				мКэшСчетов.Вставить(Строка.СчетУчетаБУ, СчетНУСоответствующийСчетуБУ);
			КонецЕсли;
			Строка.СчетУчета = СчетНУСоответствующийСчетуБУ;
			СчетНУСоответствующийСчетуБУ = мКэшСчетов[Строка.СчетАмортизацииБУ];
			Если СчетНУСоответствующийСчетуБУ = Неопределено Тогда
				СчетНУСоответствующийСчетуБУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Строка.СчетАмортизацииБУ), Ложь, СтруктураШапкиДокумента.Дата);
				мКэшСчетов.Вставить(Строка.СчетАмортизацииБУ, СчетНУСоответствующийСчетуБУ);
			КонецЕсли;
			Строка.СчетАмортизацииНУ = СчетНУСоответствующийСчетуБУ;
			
		КонецЦикла;
		
		ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииБух, СтруктураШапкиДокумента,"НеБух","ОС");
		
		СтруктураШапкиДокумента.Дата = СтруктураШапкиДокумента.ПериодРегистрации;
		НалоговыйУчет.РасчетРазницПоАмортизации(СтруктураШапкиДокумента, "ОС", "", ТаблицаАмортизацииНал, ТабЗатрат, ТаблицаАмортизацииБух);
		
		ТаблицаАмортизацииНал.Колонки.ОбъектУчета.Имя = "ОС";
		ТаблицаАмортизацииБух.Колонки.ОбъектУчета.Имя = "ОС";
		
		ТаблицаАмортизацииНал.Колонки.Сумма.Имя = "Налог";
		ТаблицаАмортизацииБух.Колонки.Сумма.Имя = "Бух";
		
		Для каждого Строка Из ОсновныеСредства Цикл

			СтрокаТЗ = ТЗ.Найти(Строка.ОсновноеСредство,"ОС_БУ,ОС_УУ, ОС_НУ, ОС_НаЗатратыУУ,ОС_НаЗатратыБУ");

			Если СтрокаТЗ = Неопределено Тогда

				Если ОтражатьВУправленческомУчете Тогда

					Строка.Стоимость          = 0;
					Строка.Амортизация        = 0;
					Строка.АмортизацияЗаМесяц = 0;
					Строка.СписаноНаЗатраты   = Ложь;

				КонецЕсли;

				Если ОтражатьВБухгалтерскомУчете Тогда

					Строка.СтоимостьБУ          = 0;
					Строка.АмортизацияБУ        = 0;
					Строка.АмортизацияЗаМесяцБУ = 0;
					Строка.СписаноНаЗатратыБУ   = Ложь;
                    Строка.СпособОтражения = "";
				КонецЕсли;

				Если ОтражатьВНалоговомУчете Тогда

					Строка.СтоимостьНУ                                  = 0;
					Строка.АмортизацияНУ                                = 0;
					Строка.АмортизацияЗаМесяцНУ                         = 0;
					Строка.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = 0;

				КонецЕсли;

			Иначе

				// В соответствующие поля строки запишем данные из запроса
				Если ОтражатьВУправленческомУчете Тогда

					Если СтрокаТЗ.СтоимостьНаЗатраты = NULL Тогда

						Строка.Стоимость            = СтрокаТЗ.Стоимость;
						Строка.Амортизация          = СтрокаТЗ.Амортизация;
						СтрокаТаблицаАмортизацииУпр = ТаблицаАмортизацииУпр.Найти(Строка.ОсновноеСредство,"ОС");
						Строка.АмортизацияЗаМесяц   = ?(СтрокаТаблицаАмортизацииУпр = Неопределено,0,СтрокаТаблицаАмортизацииУпр.Упр);
						Строка.СписаноНаЗатраты     = Ложь;

						Если Строка.ТекущаяСтоимость = 0 Тогда
							Строка.ТекущаяСтоимость = Строка.Стоимость;
						КонецЕсли;
						
					Иначе

						Строка.Стоимость          = СтрокаТЗ.СтоимостьНаЗатраты;
						Строка.Амортизация        = 0;
						Строка.АмортизацияЗаМесяц = 0;
						Строка.СписаноНаЗатраты   = Истина;

					КонецЕсли;

				КонецЕсли;

				Если ОтражатьВБухгалтерскомУчете Тогда
					
					Строка.СпособОтражения = СтрокаТЗ.СпособОтражения;
					
					Если СтрокаТЗ.СтоимостьНаЗатратыБУ = NULL Тогда

						Строка.СтоимостьБУ          = СтрокаТЗ.СтоимостьБУ;
						Строка.АмортизацияБУ        = СтрокаТЗ.АмортизацияБУ;
						СтрокаТаблицаАмортизацииБух = ТаблицаАмортизацииБух.Найти(Строка.ОсновноеСредство,"ОС");
						Строка.АмортизацияЗаМесяцБУ = ?(СтрокаТаблицаАмортизацииБух = Неопределено,0,СтрокаТаблицаАмортизацииБух.Бух);
						Строка.СписаноНаЗатратыБУ   = Ложь;

						Если Строка.ТекущаяСтоимостьБУ = 0 Тогда
							Строка.ТекущаяСтоимостьБУ = Строка.СтоимостьБУ;
						КонецЕсли;
						
					Иначе

						Строка.СтоимостьБУ = СтрокаТЗ.СтоимостьНаЗатратыБУ;
						Строка.АмортизацияБУ        = 0;
						Строка.АмортизацияЗаМесяцБУ = 0;
						Строка.СписаноНаЗатратыБУ   = Истина;

					КонецЕсли;

				КонецЕсли;

				Если ОтражатьВНалоговомУчете Тогда

					Строка.СтоимостьНУ                                  = СтрокаТЗ.СтоимостьНУ;
					Строка.АмортизацияНУ                                = СтрокаТЗ.АмортизацияНУ;
					СтрокаТаблицаАмортизацииНал                         = ТаблицаАмортизацииНал.Найти(Строка.ОсновноеСредство,"ОС");
					Строка.АмортизацияЗаМесяцНУ                         = ?(СтрокаТаблицаАмортизацииНал = Неопределено,0,СтрокаТаблицаАмортизацииНал.Налог);
					Строка.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = ?(СтрокаТаблицаАмортизацииНал = Неопределено,0,СтрокаТаблицаАмортизацииНал.СуммаКапитальныхВложенийВключаемыхВРасходы);
					
					Строка.АмортизацияПР  = СтрокаТЗ.АмортизацияПР;
					Строка.АмортизацияВР  = СтрокаТЗ.АмортизацияВР;
					
					Строка.СтоимостьПР    = СтрокаТЗ.СтоимостьПР;
					Строка.СтоимостьВР    = СтрокаТЗ.СтоимостьВР;
					
					Если ТаблицаАмортизацииНал.колонки.Найти("СуммаПР") = Неопределено ИЛИ СтрокаТаблицаАмортизацииНал = Неопределено Тогда
						СуммаПР = 0;
					Иначе	
						СуммаПР = СтрокаТаблицаАмортизацииНал.СуммаПР;
					КонецЕсли;
					
					Строка.АмортизацияЗаМесяцПР = СуммаПР;
					
					Если СтрокаТаблицаАмортизацииНал = Неопределено Тогда
						Строка.АмортизацияЗаМесяцВР = 0;
					Иначе
						Строка.АмортизацияЗаМесяцВР = СтрокаТаблицаАмортизацииНал.СуммаБУ - Строка.АмортизацияЗаМесяцНУ - СуммаПР;
					КонецЕсли;
					
					Если Строка.ТекущаяСтоимостьНУ = 0 Тогда
						Строка.ТекущаяСтоимостьНУ = Строка.СтоимостьНУ;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Строка.СпособОтражения) Тогда
				Строка.СпособОтражения = СпособОтраженияДляОсСНулевойСтоимостью;
			КонецЕсли;

		КонецЦикла;

	Иначе

		Сообщить("Данные для заполнения отсутствуют.");

	КонецЕсли;
	
	Для каждого строка из ОсновныеСредства Цикл 
		строка.ТекущаяСтоимость   = строка.Стоимость;
		строка.ТекущаяСтоимостьБУ = строка.СтоимостьБУ;
		строка.ТекущаяСтоимостьНУ = строка.СтоимостьНУ;
	КонецЦикла;
	
КонецПроцедуры

// {{KM WARE Лазаревский К.В. Заявка № 01.10.2015 начало
Процедура ЗаполнитьОСНаСервере_БезСтоимости(Перезаполнить)
КонецПроцедуры
// }}KM WARE Лазаревский К.В. Заявка № 101.10.2015 окончание

// ЗаполнитьНМАНаСервере
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// {{KM WARE Лазаревский К.В. Заявка № 15.09.2015 начало
Процедура ЗаполнитьНМАНаСервере(ПерезаполнитьТЧ)  Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("ОрганизацияПриемник", ОрганизацияПриемник);
	
	Запрос.УстановитьПараметр("Период",          	 Дата);
	
	Запрос.УстановитьПараметр("Ссылка", ЭтотОбъект.Ссылка);
	ОтражатьВУправленческомУчете = Истина;
	ОтражатьВБухгалтерскомУчете = Истина;
	ОтражатьВНалоговомУчете = Истина;

	Если ПерезаполнитьТЧ Тогда
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	Выразить(ХозрасчетныйОстатки.Субконто1 КАК Справочник.НематериальныеАктивы) КАК НМА
			//|ПОМЕСТИТЬ НМА
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.Остатки(, Счет В ИЕРАРХИИ (&Счет), , Организация = &Организация) КАК ХозрасчетныйОстатки
			|" +ДополнитьТекстЗапросаОтборами(Запрос) + "
			//|;
			//|ВЫБРАТЬ
			//|	вт_НМА.НМА КАК НМА
			//|ИЗ
			//|	НМА КАК вт_НМА
			//|
			|";
		Запрос.УстановитьПараметр("Счет", ПланыСчетов.Хозрасчетный.НематериальныеАктивы);	
		Рез = Запрос.Выполнить().Выгрузить();
		
		НМА.Очистить();
		Для Каждого Строка Из Рез Цикл
			НовСтрока = НМА.Добавить();
			НовСтрока.НМА = строка.НМА;
		КонецЦикла;
	Иначе	
		//Запрос.Текст = 
		//	"ВЫБРАТЬ
		//   	|	ВнешнийИсточник.НМА
		//	|ПОМЕСТИТЬ НМА
		//	|ИЗ &ВнешнийИсточник КАК ВнешнийИсточник
		//	|";
		//Запрос.УстановитьПараметр("ВнешнийИсточник", НМА.Выгрузить());
		//Запрос.Выполнить();
	КонецЕсли;			
	
	Запрос.Текст = "ВЫБРАТЬ
	               |	абс_АВИЗОНМА.НМА
	               |ПОМЕСТИТЬ НМА
	               |ИЗ
	               |	Документ.абс_АВИЗО.НМА КАК абс_АВИЗОНМА
	               |ГДЕ
	               |	абс_АВИЗОНМА.Ссылка = &Ссылка
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА НалоговыйОстатки.Субконто1 ССЫЛКА Справочник.НематериальныеАктивы
	               |			ТОГДА НалоговыйОстатки.Субконто1
	               |		ИНАЧЕ НалоговыйОстатки.Субконто2
	               |	КОНЕЦ КАК ОС,
	               |	НалоговыйОстатки.СуммаОстатокДт КАК ПР,
	               |	NULL КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОС),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	               |				И ВЫБОР
	               |					КОГДА Субконто1 ССЫЛКА Справочник.ОсновныеСредства
	               |						ТОГДА Субконто1 В
	               |								(ВЫБРАТЬ
	               |									вт_НМА.НМА
	               |								ИЗ
	               |									НМА КАК вт_НМА)
	               |					ИНАЧЕ Субконто2 В
	               |							(ВЫБРАТЬ
	               |								вт_НМА.НМА
	               |							ИЗ
	               |								НМА КАК вт_НМА)
	               |				КОНЕЦ) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	ВЫБОР
	               |		КОГДА НалоговыйОстатки.Субконто1 ССЫЛКА Справочник.НематериальныеАктивы
	               |			ТОГДА НалоговыйОстатки.Субконто1
	               |		ИНАЧЕ НалоговыйОстатки.Субконто2
	               |	КОНЕЦ,
	               |	NULL,
	               |	НалоговыйОстатки.СуммаОстатокДт
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОС),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	               |				И ВЫБОР
	               |					КОГДА Субконто1 ССЫЛКА Справочник.НематериальныеАктивы
	               |						ТОГДА Субконто1 В
	               |								(ВЫБРАТЬ
	               |									вт_НМА.НМА
	               |								ИЗ
	               |									НМА КАК вт_НМА)
	               |					ИНАЧЕ Субконто2 В
	               |							(ВЫБРАТЬ
	               |								вт_НМА.НМА
	               |							ИЗ
	               |								НМА КАК вт_НМА)
	               |				КОНЕЦ) КАК НалоговыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1 КАК ОС,
	               |	НалоговыйОстатки.СуммаОстатокКт КАК ПР,
	               |	NULL КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР_Ам
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОСАм),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	               |				И Субконто1 В
	               |					(ВЫБРАТЬ
	               |						вт_НМА.НМА
	               |					ИЗ
	               |						НМА КАК вт_НМА)) КАК НалоговыйОстатки
	               |
	               |ОБЪЕДИНИТЬ ВСЕ
	               |
	               |ВЫБРАТЬ
	               |	НалоговыйОстатки.Субконто1,
	               |	NULL,
	               |	НалоговыйОстатки.СуммаОстатокКт
	               |ИЗ
	               |	РегистрБухгалтерии.Налоговый.Остатки(
	               |			&Период,
	               |			Счет В ИЕРАРХИИ (&СчетаОСАм),
	               |			,
	               |			Организация = &Организация
	               |				И ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	               |				И Субконто1 В
	               |					(ВЫБРАТЬ
	               |						вт_НМА.НМА
	               |					ИЗ
	               |						НМА КАК вт_НМА)) КАК НалоговыйОстатки
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтНУ_ПР_ВР.ОС,
	               |	СУММА(ВтНУ_ПР_ВР.ПР) КАК ПР,
	               |	СУММА(ВтНУ_ПР_ВР.ВР) КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР_св
	               |ИЗ
	               |	ВтНУ_ПР_ВР КАК ВтНУ_ПР_ВР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВтНУ_ПР_ВР.ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	ВтНУ_ПР_ВР_Ам.ОС,
	               |	СУММА(ВтНУ_ПР_ВР_Ам.ПР) КАК ПР,
	               |	СУММА(ВтНУ_ПР_ВР_Ам.ВР) КАК ВР
	               |ПОМЕСТИТЬ ВтНУ_ПР_ВР_Ам_св
	               |ИЗ
	               |	ВтНУ_ПР_ВР_Ам КАК ВтНУ_ПР_ВР_Ам
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВтНУ_ПР_ВР_Ам.ОС
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ
	               |	вт_НМА.НМА КАК НМА,
	               |	АмортизацияБухгалтерскийУчетОстатки.Организация КАК Организация,
	               |	АмортизацияОстатки.НематериальныйАктив КАК ОС_УУ,
	               |	АмортизацияБухгалтерскийУчетОстатки.НематериальныйАктив КАК ОС_БУ,
	               |	АмортизацияНалоговыйУчетОстатки.НематериальныйАктив КАК ОС_НУ,
	               |	АмортизацияОстатки.СтоимостьОстаток КАК Стоимость,
	               |	АмортизацияБухгалтерскийУчетОстатки.СтоимостьОстаток КАК СтоимостьБУ,
	               |	АмортизацияНалоговыйУчетОстатки.СтоимостьОстаток КАК СтоимостьНУ,
	               |	ВтНУ_ПР_ВР_св.ПР КАК СтоимостьПР,
	               |	ВтНУ_ПР_ВР_св.ВР КАК СтоимостьВР,
	               |	ВтНУ_ПР_ВР_Ам_св.ПР КАК АмортизацияПР,
	               |	ВтНУ_ПР_ВР_Ам_св.ВР КАК АмортизацияВР,
	               |	АмортизацияОстатки.АмортизацияОстаток КАК Амортизация,
	               |	АмортизацияБухгалтерскийУчетОстатки.АмортизацияОстаток КАК АмортизацияБУ,
	               |	АмортизацияНалоговыйУчетОстатки.АмортизацияОстаток КАК АмортизацияНУ,
	               |	0 КАК Поле1,
	               |	0 КАК Поле2,
	               |	0 КАК Поле3,
	               |	0 КАК Поле4,
	               |	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособОтраженияРасходов КАК СпособОтражения,
	               |	ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования КАК СрокИспользованияДляВычисленияАмортизации,
	               |	АмортизацияЗаМесяцБУ.АмортизацияОборот КАК АмортизацияЗаМесяцБУ,
	               |	АмортизацияЗаМесяцБУ.СтоимостьОборот КАК СтоимостьЗаМесяцБУ,
	               |	АмортизацияЗаМесяцНУ.АмортизацияОборот КАК АмортизацияЗаМесяцНУ,
	               |	АмортизацияЗаМесяцНУ.СтоимостьОборот КАК СтоимостьЗаМесяцНУ
	               |ИЗ
	               |	НМА КАК вт_НМА
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМАБухгалтерскийУчет.Остатки(
	               |				&Период,
	               |				НематериальныйАктив В
	               |						(ВЫБРАТЬ
	               |							вт_НМА.НМА
	               |						ИЗ
	               |							НМА КАК вт_НМА)
	               |					И Организация = &Организация) КАК АмортизацияБухгалтерскийУчетОстатки
	               |		ПО вт_НМА.НМА = АмортизацияБухгалтерскийУчетОстатки.НематериальныйАктив
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМАБухгалтерскийУчет.Остатки(
	               |				&Период,
	               |				НематериальныйАктив В
	               |					(ВЫБРАТЬ
	               |						вт_НМА.НМА
	               |					ИЗ
	               |						НМА КАК вт_НМА)) КАК АмортизацияОстатки
	               |		ПО вт_НМА.НМА = АмортизацияОстатки.НематериальныйАктив
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМАНалоговыйУчет.Остатки(
	               |				&Период,
	               |				НематериальныйАктив В
	               |						(ВЫБРАТЬ
	               |							вт_НМА.НМА
	               |						ИЗ
	               |							НМА КАК вт_НМА)
	               |					И Организация = &Организация) КАК АмортизацияНалоговыйУчетОстатки
	               |		ПО вт_НМА.НМА = АмортизацияНалоговыйУчетОстатки.НематериальныйАктив
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииНМАБухгалтерскийУчет.СрезПоследних(, Организация = &Организация) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	               |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.абс_СоответствияОбъектовПереноса КАК абс_СоответствияОбъектовПереноса
	               |			ПО (абс_СоответствияОбъектовПереноса.ОрганизацияПриемник = &ОрганизацияПриемник)
	               |				И СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.Организация = абс_СоответствияОбъектовПереноса.ОрганизацияИсточник
	               |				И СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.НематериальныйАктив = абс_СоответствияОбъектовПереноса.ОбъектИсточник
	               |		ПО вт_НМА.НМА = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияНМАБухгалтерскийУчет.СрезПоследних(
	               |				&Период,
	               |				НематериальныйАктив В
	               |						(ВЫБРАТЬ
	               |							вт_НМА.НМА
	               |						ИЗ
	               |							НМА КАК вт_НМА)
	               |					И Организация = &Организация) КАК ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних
	               |		ПО вт_НМА.НМА = ПервоначальныеСведенияНМАБухгалтерскийУчетСрезПоследних.НематериальныйАктив
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтНУ_ПР_ВР_св КАК ВтНУ_ПР_ВР_св
	               |		ПО вт_НМА.НМА = ВтНУ_ПР_ВР_св.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВтНУ_ПР_ВР_Ам_св КАК ВтНУ_ПР_ВР_Ам_св
	               |		ПО вт_НМА.НМА = ВтНУ_ПР_ВР_Ам_св.ОС
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМАБухгалтерскийУчет.Обороты(
	               |				НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ),
	               |				КОНЕЦПЕРИОДА(&Период, МЕСЯЦ),
	               |				Период,
	               |				НематериальныйАктив В
	               |					(ВЫБРАТЬ
	               |						вт_НМА.НМА
	               |					ИЗ
	               |						НМА КАК вт_НМА)) КАК АмортизацияЗаМесяцБУ
	               |		ПО вт_НМА.НМА = АмортизацияЗаМесяцБУ.НематериальныйАктив
	               |		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьНМАНалоговыйУчет.Обороты(
	               |				НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ),
	               |				КОНЕЦПЕРИОДА(&Период, МЕСЯЦ),
	               |				Период,
	               |				НематериальныйАктив В
	               |					(ВЫБРАТЬ
	               |						вт_НМА.НМА
	               |					ИЗ
	               |						НМА КАК вт_НМА)) КАК АмортизацияЗаМесяцНУ
	               |		ПО вт_НМА.НМА = АмортизацияЗаМесяцНУ.НематериальныйАктив";
				   
				   СчетаОС   = Новый Массив;
				   СчетаОСАм = Новый Массив;
				   
				   СчетаОС.Добавить(ПланыСчетов.Налоговый.НематериальныеАктивы);
				   СчетаОС.Добавить(ПланыСчетов.Налоговый.НематериальныеАктивыОрганизации);
				   
				   СчетаОСАм.Добавить(ПланыСчетов.Налоговый.АмортизацияНематериальныхАктивов);
				   
				   Запрос.УстановитьПараметр("СчетаОС",     СчетаОС);
				   Запрос.УстановитьПараметр("СчетаОСАм",     СчетаОСАм);
				   
				   
				   
	ТЗ = Запрос.Выполнить().Выгрузить();

	ТаблицаАмортизацииУпр = Новый ТаблицаЗначений();
	ТаблицаАмортизацииБух = Новый ТаблицаЗначений();

	Если ТЗ.Количество()>0 Тогда

		СписокОС = ТЗ.ВыгрузитьКолонку("НМА");
		
		Если ОтражатьВУправленческомУчете Тогда
//			ТаблицаАмортизацииУпр = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииУпр(Дата, СписокОС);
			ТаблицаАмортизацииУпр = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНМА_НИОКР_БухРегл(Дата, Организация, СписокОС);
		КонецЕсли;

		Если ОтражатьВБухгалтерскомУчете Тогда
//			ТаблицаАмортизацииБух = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииБухРегл(Дата, Организация, СписокОС);
			ТаблицаАмортизацииБух = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНМА_НИОКР_БухРегл(Дата, Организация,СписокОС);
		КонецЕсли;

		Если ОтражатьВНалоговомУчете Тогда
//			ТаблицаАмортизацииНал = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНалогРегл(Ссылка, Дата, Организация, СписокОС);
			ТаблицаАмортизацииНал = УправлениеВнеоборотнымиАктивами. РасчетАмортизацииНМА_НИОКР_НалогРегл(Ссылка, Дата, Организация, СписокОС);
		КонецЕсли;
		
		Отказ      = Ложь;
		Заголовок  = "";
		
		ТаблицаАмортизацииНал.Колонки.НМА.Имя = "ОбъектУчета";
		ТаблицаАмортизацииНал.Колонки.Добавить("СчетАмортизации");

		ТаблицаАмортизацииБух.Колонки.НМА.Имя = "ОбъектУчета";
		
        СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
		СтруктураШапкиДокумента.Вставить("ПериодРегистрации", КонецМесяца(Дата));
		
		// Начисление амортизации.
		ТаблицаАмортизацииНал.Колонки.Налог.Имя = "Сумма";
		//ТабЗатрат = Неопределено;
		
		
		СтруктураШапкиДокумента.Вставить("ОрганизацияПрименяетУСН", 		 Ложь);
		СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчетеУСНДоходы", Ложь);
		СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчетеУСН", 		 Ложь);
		СтруктураШапкиДокумента.Вставить("ПоддержкаПБУ18", 					 Истина);
		СтруктураШапкиДокумента.Вставить("ОтражатьВНалоговомУчете", 		 Истина);
		СтруктураШапкиДокумента.Вставить("ОтражатьВБухгалтерскомУчете", 	 Истина);
		СтруктураШапкиДокумента.Вставить("ОтражатьВУправленческомУчете", 	 Истина);
		
		Если СтруктураШапкиДокумента.ОтражатьВБухгалтерскомУчете ИЛИ СтруктураШапкиДокумента.ОтражатьВНалоговомУчете Тогда
			СтруктураПолейУчетнойПолитикиНУ = Новый Структура("ПоддержкаПБУ18");
			ttk_ОбщегоНазначения.ДополнитьПоложениямиУчетнойПолитики(СтруктураШапкиДокумента, СтруктураШапкиДокумента.Дата, Отказ, СтруктураШапкиДокумента.Организация, "Бух", СтруктураПолейУчетнойПолитикиНУ);
		КонецЕсли;
		
		ТаблицаАмортизацииБух.Колонки.Бух.Имя = "Сумма";
        ТаблицаАмортизацииБух.Колонки.Добавить("СчетАмортизации");
        ТаблицаАмортизацииБух.Колонки.Добавить("СчетУчета");
		ТаблицаАмортизацииБух.Колонки.Добавить("СчетАмортизацииНУ");
		
		мКэшСчетов = Новый Соответствие; 
		Для Каждого Строка Из ТаблицаАмортизацииБух Цикл
			СчетНУСоответствующийСчетуБУ = мКэшСчетов[Строка.СчетУчетаБУ];
			Если СчетНУСоответствующийСчетуБУ = Неопределено Тогда
				СчетНУСоответствующийСчетуБУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Строка.СчетУчетаБУ), Ложь, СтруктураШапкиДокумента.Дата);
				мКэшСчетов.Вставить(Строка.СчетУчетаБУ, СчетНУСоответствующийСчетуБУ);
			КонецЕсли;
			Строка.СчетУчета = СчетНУСоответствующийСчетуБУ;
			СчетНУСоответствующийСчетуБУ = мКэшСчетов[Строка.СчетАмортизацииБУ];
			Если СчетНУСоответствующийСчетуБУ = Неопределено Тогда
				СчетНУСоответствующийСчетуБУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ", Строка.СчетАмортизацииБУ), Ложь, СтруктураШапкиДокумента.Дата);
				мКэшСчетов.Вставить(Строка.СчетАмортизацииБУ, СчетНУСоответствующийСчетуБУ);
			КонецЕсли;
			Строка.СчетАмортизацииНУ = СчетНУСоответствующийСчетуБУ;
			
		КонецЦикла;
		
		ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТаблицаАмортизацииБух, СтруктураШапкиДокумента,"НеБух","НМА");
		
		СтруктураШапкиДокумента.Дата = СтруктураШапкиДокумента.ПериодРегистрации;
		НалоговыйУчет.РасчетРазницПоАмортизации(СтруктураШапкиДокумента, "НМА", "", ТаблицаАмортизацииНал, ТабЗатрат, ТаблицаАмортизацииБух);
		
		ТаблицаАмортизацииНал.Колонки.ОбъектУчета.Имя = "НМА";
		ТаблицаАмортизацииБух.Колонки.ОбъектУчета.Имя = "НМА";
		
		ТаблицаАмортизацииНал.Колонки.Сумма.Имя = "Налог";
		ТаблицаАмортизацииБух.Колонки.Сумма.Имя = "Бух";
		
		Для каждого Строка Из НМА Цикл

			СтрокаТЗ = ТЗ.Найти(Строка.НМА,"ОС_БУ,ОС_УУ, ОС_НУ");

			Если СтрокаТЗ = Неопределено Тогда

				Если ОтражатьВУправленческомУчете Тогда

					Строка.Стоимость          = 0;
					Строка.Амортизация        = 0;
					Строка.АмортизацияЗаМесяц = Строка.АмортизацияЗаМесяцБУ;
					Строка.СписаноНаЗатраты   = Ложь;

				КонецЕсли;

				Если ОтражатьВБухгалтерскомУчете Тогда

					Строка.СтоимостьБУ          = 0;
					Строка.АмортизацияБУ        = 0;
					Строка.АмортизацияЗаМесяцБУ = Строка.АмортизацияЗаМесяцБУ;
					Строка.СписаноНаЗатратыБУ   = Ложь;
                    Строка.СпособОтражения = "";
				КонецЕсли;

				Если ОтражатьВНалоговомУчете Тогда

					Строка.СтоимостьНУ                                  = 0;
					Строка.АмортизацияНУ                                = 0;
					Строка.АмортизацияЗаМесяцНУ                         = Строка.АмортизацияЗаМесяцНУ;
					Строка.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = 0;

				КонецЕсли;

			Иначе

				// В соответствующие поля строки запишем данные из запроса
				Если ОтражатьВУправленческомУчете Тогда

					Строка.Стоимость            = СтрокаТЗ.Стоимость;
					Строка.Амортизация          = СтрокаТЗ.Амортизация;
					СтрокаТаблицаАмортизацииУпр = ТаблицаАмортизацииУпр.Найти(Строка.НМА ,"НМА");
					Строка.АмортизацияЗаМесяц   = ?(СтрокаТаблицаАмортизацииУпр = Неопределено, СтрокаТЗ.АмортизацияЗаМесяцБУ,СтрокаТаблицаАмортизацииУпр.Упр);
					Строка.СписаноНаЗатраты     = Ложь;

					Если Строка.ТекущаяСтоимость = 0 Тогда
						Строка.ТекущаяСтоимость = Строка.Стоимость;
					КонецЕсли;
						
				КонецЕсли;

				Если ОтражатьВБухгалтерскомУчете Тогда
					
					Строка.СпособОтражения = СтрокаТЗ.СпособОтражения;
					

					Строка.СтоимостьБУ          = СтрокаТЗ.СтоимостьБУ;
					Строка.АмортизацияБУ        = СтрокаТЗ.АмортизацияБУ;
					СтрокаТаблицаАмортизацииБух = ТаблицаАмортизацииБух.Найти(Строка.НМА, "НМА");
					Строка.АмортизацияЗаМесяцБУ = ?(СтрокаТаблицаАмортизацииБух = Неопределено, СтрокаТЗ.АмортизацияЗаМесяцБУ,СтрокаТаблицаАмортизацииБух.Бух);
					Строка.СписаноНаЗатратыБУ   = Ложь;

					Если Строка.ТекущаяСтоимостьБУ = 0 Тогда
						Строка.ТекущаяСтоимостьБУ = Строка.СтоимостьБУ;
					КонецЕсли;
						
				КонецЕсли;

				Если ОтражатьВНалоговомУчете Тогда

					Строка.СтоимостьНУ                                  = СтрокаТЗ.СтоимостьНУ;
					Строка.АмортизацияНУ                                = СтрокаТЗ.АмортизацияНУ;
					СтрокаТаблицаАмортизацииНал                         = ТаблицаАмортизацииНал.Найти(Строка.НМА, "НМА");
					Строка.АмортизацияЗаМесяцНУ                         = ?(СтрокаТаблицаАмортизацииНал = Неопределено, СтрокаТЗ.АмортизацияЗаМесяцНУ,СтрокаТаблицаАмортизацииНал.Налог);
					Строка.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = ?(СтрокаТаблицаАмортизацииНал = Неопределено,0,СтрокаТаблицаАмортизацииНал.СуммаКапитальныхВложенийВключаемыхВРасходы);
					
					Строка.АмортизацияПР  = СтрокаТЗ.АмортизацияПР;
					Строка.АмортизацияВР  = СтрокаТЗ.АмортизацияВР;
					
					Строка.СтоимостьПР    = СтрокаТЗ.СтоимостьПР;
					Строка.СтоимостьВР    = СтрокаТЗ.СтоимостьВР;
					
					Если ТаблицаАмортизацииНал.колонки.Найти("СуммаПР") = Неопределено ИЛИ СтрокаТаблицаАмортизацииНал = Неопределено Тогда
						СуммаПР = 0;
					Иначе	
						СуммаПР = СтрокаТаблицаАмортизацииНал.СуммаПР;
					КонецЕсли;
					
					Строка.АмортизацияЗаМесяцПР = СуммаПР;
					
					Если СтрокаТаблицаАмортизацииНал = Неопределено Тогда
						Строка.АмортизацияЗаМесяцВР = Строка.АмортизацияЗаМесяцБУ-Строка.АмортизацияЗаМесяцНУ - СуммаПР;
					Иначе
						Строка.АмортизацияЗаМесяцВР = СтрокаТаблицаАмортизацииНал.СуммаБУ - Строка.АмортизацияЗаМесяцНУ - СуммаПР;
					КонецЕсли;
					
					Если Строка.ТекущаяСтоимостьНУ = 0 Тогда
						Строка.ТекущаяСтоимостьНУ = Строка.СтоимостьНУ;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;

		КонецЦикла;

	Иначе

		Сообщить("Данные для заполнения отсутствуют.");

	КонецЕсли;
	
	Для каждого строка из НМА Цикл 
		строка.ТекущаяСтоимость   = строка.Стоимость;
		строка.ТекущаяСтоимостьБУ = строка.СтоимостьБУ;
		строка.ТекущаяСтоимостьНУ = строка.СтоимостьНУ;
	КонецЦикла;
	
КонецПроцедуры // () }}KM WARE Лазаревский К.В. Заявка № 15.09.2015 окончание

// <Описание процедуры>
// Формирование документа Списание НМА
// {{KM WARE Лазаревский К.В. Заявка № 16.09.2015 начало
Процедура СформироватьСписаниеНМА()  ЭКСПОРТ
	Отказ = Ложь;
	
	Док = абс_БизнесПроцессыПривелегированный.СформироватьСписаниеНМАСервер(Новый Структура("СсылкаНаОбъект",Ссылка),Отказ);
	
	Если Не Отказ Тогда
		ДокументОснованиеИсточник = Док;
	КонецЕсли;  
КонецПроцедуры // СформироватьСписениеНМА() }}KM WARE Лазаревский К.В. Заявка № 16.09.2015 окончание

//СформироватьОприходованиеНМА
// {{KM WARE Лазаревский К.В. Заявка № 15.09.2015 начало
Процедура СформироватьОприходованиеНМА()  ЭКСПОРТ
	Отказ = Ложь;
	
	Док = абс_БизнесПроцессыПривелегированный.СформироватьОприходованиеНМАСервер(Новый Структура("СсылкаНаОбъект",Ссылка),Отказ);
	
	Если Не Отказ Тогда
		ДокументОснованиеПриемник = Док;
	КонецЕсли;  
КонецПроцедуры // СформироватьОприходованиеНМА() }}KM WARE Лазаревский К.В. Заявка № 16.09.2015 окончание


Процедура СформироватьДокументПередачаОС() Экспорт
	
	УжеСоздан = Ложь;                       
	
	Если ЗначениеЗаполнено(ДокументОснованиеИсточник) Тогда
		ДокументПередача = ДокументОснованиеИсточник.ПолучитьОбъект();
		УжеСоздан = Истина;
	Иначе	
		ДокументПередача = Документы.абс_ПередачаОСМеждуФиллиалами.СоздатьДокумент();
	КонецЕсли;
	
	// {{KM WARE Малыгин П.К. Заявка № 10.12.2015 начало
	// Перед созданием нового документа - сохраним код для дальнейшего использования
	Для Каждого ОС из ОсновныеСредства Цикл
		ОбъектОС = ОС.ОсновноеСредство.ПолучитьОбъект();	
		Если НЕ ЗначениеЗаполнено(ОбъектОС.абс_КодДляПоиска) Тогда
			ОбъектОС.абс_КодДляПоиска = ПолучитьИнвентарныйНомер(ОС.ОсновноеСредство,Организация);
			ОбъектОС.ОбменДанными.Загрузка = Истина;
			ОбъектОС.Записать();
		КонецЕсли;		
	КонецЦикла;	
	
	
	//// }}KM WARE Малыгин П.К. Заявка № 10.12.2015 окончание

	
	
	ДокументПередача.ОС.Загрузить(ОсновныеСредства.Выгрузить());
	ДокументПередача.Дата = Дата;
	ДокументПередача.ОрганизацияИсточник  = Организация;
	ДокументПередача.ОрганизацияПриемник  = ОрганизацияПриемник;
	ДокументПередача.абс_ОбособленноеПодразделение = абс_ОбособленноеПодразделение;
	
	ДокументПередача.ПричинаСписания = Справочники.ПричиныСписания.НайтиПоКоду("000000013");
	ДокументПередача.Событие         = Справочники.СобытияОС.НайтиПоКоду("000000011");
	ДокументПередача.СчетБУ = ПланыСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу;
	ДокументПередача.СчетНУ = ПланыСчетов.Налоговый.НайтиПоКоду("79.01");
	
	ДокументПередача.Подразделение              = Подразделение; 
	ДокументПередача.ПодразделениеОрганизации   = ПодразделениеОрганизации;
	ДокументПередача.Ответственный              = глЗначениеПеременной("глТекущийПользователь");

	
	//ДокументПередача.Заполнить(Новый Структура);
	//ДокументПередача.Записать(РежимЗаписиДокумента.Запись);
	
	ДокументПередача.Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.Подготовка;
	ДокументПередача.Записать(РежимЗаписиДокумента.Запись);
	
	ДокументПередача.Статус = Перечисления.абс_СтатусыПередачаОСМеждуФиллиалами.ОбработкаБухгалтером;
	ДокументПередача.Записать(РежимЗаписиДокумента.Запись);
	
	Если Не УжеСоздан Тогда
		ДокументОснованиеИсточник =  ДокументПередача.Ссылка;
	КонецЕсли;

КонецПроцедуры


// {{KM WARE Лазаревский К.В. Заявка № 26.10.2015 начало
Процедура ЗаполнитьСтроительствоОбъековОС_Расчеты()  Экспорт

	Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.СтроительствоОбъековОС Тогда
		ЗаполнитьСтроительствоОбъековОС();
	Иначе
		ЗаполнитьЗабаланс();
	КонецЕсли;	
	

КонецПроцедуры // () }}KM WARE Лазаревский К.В. Заявка № 26.10.2015 окончание
	
// {{KM WARE Лазаревский К.В. Заявка № 26.10.2015 начало
Процедура ЗаполнитьСтроительствоОбъековОС()
	ТабличнаяЧасть.Очистить();
	//Получаем список ОС
	КорСчетНУ = ПолучитьКорСчетНУ();

	//| " +ДополнитьТекстЗапросаОтборами(Запрос) + "
	Запрос = Новый Запрос();
	Запрос.Текст = "ВЫБРАТЬ
	                      |	ХозрасчетныйОстатки.Счет,
	                      |	ХозрасчетныйОстатки.Субконто1 КАК ОбъектСтроительства,
	                      |	ХозрасчетныйОстатки.Субконто3 КАК СпособСтроительства,
	                      |	ХозрасчетныйОстатки.Организация,
	                      |	СУММА(ХозрасчетныйОстатки.СуммаОстаток) КАК СуммаОстаток
	                      |ПОМЕСТИТЬ Вт_ОбъектыСпособы
	                      |ИЗ
	                      |	РегистрБухгалтерии.Хозрасчетный.Остатки(&НаДату, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
						  | " +ДополнитьТекстЗапросаОтборами(Запрос) + "
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ХозрасчетныйОстатки.Субконто1,
	                      |	ХозрасчетныйОстатки.Счет,
	                      |	ХозрасчетныйОстатки.Субконто3,
	                      |	ХозрасчетныйОстатки.Организация
						  |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	МАКСИМУМ(ЕСТЬNULL(ХозрасчетныйОборотыДтКт.Период, ДАТАВРЕМЯ(2001, 1, 1, 0, 0, 0))) КАК Период,
	                      |	ХозрасчетныйОборотыДтКт.СчетКт,
	                      |	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	                      |	ХозрасчетныйОборотыДтКт.СубконтоКт3,
	                      |	ХозрасчетныйОборотыДтКт.Организация КАК Организация1,
	                      |	СУММА(ХозрасчетныйОборотыДтКт.СуммаОборот) КАК СуммаОборот
	                      |ПОМЕСТИТЬ вт_оборотыКт
	                      |ИЗ
	                      |	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	                      |			,
	                      |			&НаДату,
	                      |			Регистратор,
	                      |			,
	                      |			,
	                      |			СчетКт В ИЕРАРХИИ (&МассивСчетов),
	                      |			,
	                      |			(Организация, СубконтоКт1, СубконтоКт3) В
	                      |				(ВЫБРАТЬ
	                      |					Вт.Организация КАК Организация,
	                      |					Вт.ОбъектСтроительства КАК СубконтоКт1,
	                      |					Вт.СпособСтроительства КАК СубконтоКт3
	                      |				ИЗ
	                      |					Вт_ОбъектыСпособы КАК Вт)) КАК ХозрасчетныйОборотыДтКт
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ХозрасчетныйОборотыДтКт.СчетКт,
	                      |	ХозрасчетныйОборотыДтКт.СубконтоКт1,
	                      |	ХозрасчетныйОборотыДтКт.СубконтоКт3,
	                      |	ХозрасчетныйОборотыДтКт.Организация
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ЕСТЬNULL(вт_оборотыКт.Период, ДАТАВРЕМЯ(2001, 1, 1, 0, 0, 0)) Как Период,
	                      |	Вт_ОбъектыСпособы.Счет,
	                      |	Вт_ОбъектыСпособы.ОбъектСтроительства,
	                      |	Вт_ОбъектыСпособы.СпособСтроительства,
	                      |	Вт_ОбъектыСпособы.Организация,
	                      |	Вт_ОбъектыСпособы.СуммаОстаток
	                      |ИЗ
	                      |	Вт_ОбъектыСпособы КАК Вт_ОбъектыСпособы
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ вт_оборотыКт КАК вт_оборотыКт
	                      |		ПО Вт_ОбъектыСпособы.Счет = вт_оборотыКт.СчетКт
	                      |			И Вт_ОбъектыСпособы.ОбъектСтроительства = вт_оборотыКт.СубконтоКт1
	                      |			И Вт_ОбъектыСпособы.СпособСтроительства = вт_оборотыКт.СубконтоКт3
	                      |			И Вт_ОбъектыСпособы.Организация = вт_оборотыКт.Организация1
	                      |ГДЕ
	                      |	Вт_ОбъектыСпособы.СуммаОстаток <> 0";
						  
	Запрос.УстановитьПараметр("НаДату", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Организация79", ОрганизацияПриемник);
	Запрос.УстановитьПараметр("МассивСчетов", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	ТабОбъектыСтроительства = Запрос.Выполнить().Выгрузить();
	
	ЗапросОборотыДт = Новый Запрос("ВЫБРАТЬ
	                               |	ХозрасчетныйОбороты.Счет,
	                               |	ХозрасчетныйОбороты.Субконто1,
	                               |	ХозрасчетныйОбороты.Субконто2,
	                               |	ХозрасчетныйОбороты.Субконто3,
	                               |	СУММА(ХозрасчетныйОбороты.СуммаОборот) КАК СуммаОборот,
	                               |	СУММА(ХозрасчетныйОбороты.ВалютнаяСуммаОборот) КАК ВалютнаяСуммаОборот,
	                               |	СУММА(ХозрасчетныйОбороты.КоличествоОборот) КАК КоличествоОборот,
	                               |	ЕСТЬNULL(ХозрасчетныйОбороты.Валюта, ЗНАЧЕНИЕ(справочник.валюты.Пустаяссылка)) КАК Валюта
	                               |ПОМЕСТИТЬ вт_ОстаткиХоз
	                               |ИЗ
	                               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	                               |			&НачалоПериода,
	                               |			&КонецПериода,
	                               |			Период,
	                               |			Счет = &СчетБУ,
	                               |			,
	                               |			Субконто1 = &ОбъектСтроительства
	                               |				И Субконто3 = &СпособСтроительства
	                               |				И Организация = &Организация,
	                               |			,
	                               |			) КАК ХозрасчетныйОбороты
	                               |ГДЕ
	                               |	ХозрасчетныйОбороты.Организация = &Организация
	                               |
	                               |СГРУППИРОВАТЬ ПО
	                               |	ХозрасчетныйОбороты.Субконто3,
	                               |	ХозрасчетныйОбороты.Субконто1,
	                               |	ХозрасчетныйОбороты.Субконто2,
	                               |	ХозрасчетныйОбороты.Счет,
	                               |	ЕСТЬNULL(ХозрасчетныйОбороты.Валюта, ЗНАЧЕНИЕ(справочник.валюты.Пустаяссылка))
	                               |;
	                               |
	                               |////////////////////////////////////////////////////////////////////////////////
	                               |ВЫБРАТЬ
	                               |	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ
	                               |ПОМЕСТИТЬ вт_СчетНу
	                               |ИЗ
	                               |	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних КАК СоответствиеСчетовБУиНУСрезПоследних
	                               |ГДЕ
	                               |	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ = &СчетБУ
	                               |;
	                               |
	                               |////////////////////////////////////////////////////////////////////////////////
	                               |ВЫБРАТЬ
	                               |	НалоговыйОбороты.Счет,
	                               |	НалоговыйОбороты.Субконто1,
	                               |	НалоговыйОбороты.Субконто2,
	                               |	НалоговыйОбороты.Субконто3,
	                               |	НалоговыйОбороты.ВидУчета,
	                               |	НалоговыйОбороты.СуммаОборот,
	                               |	НалоговыйОбороты.КоличествоОборот
	                               |ПОМЕСТИТЬ вт_налог
	                               |ИЗ
	                               |	РегистрБухгалтерии.Налоговый.Обороты(
	                               |			&НачалоПериода,
	                               |			&КонецПериода,
	                               |			Период,
	                               |			Счет В ИЕРАРХИИ
	                               |				(ВЫБРАТЬ
	                               |					вт.СчетНУ
	                               |				ИЗ
	                               |					вт_счетНУ КАК вт),
	                               |			,
	                               |			Субконто1 = &ОбъектСтроительства
	                               |				И Субконто3 = &СпособСтроительства
	                               |				И Организация = &Организация,
	                               |			,
	                               |			) КАК НалоговыйОбороты
	                               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_СчетНу КАК вт_СчетНу
	                               |		ПО НалоговыйОбороты.Счет = вт_СчетНу.СчетНУ
	                               |;
	                               |
	                               |////////////////////////////////////////////////////////////////////////////////
	                               |ВЫБРАТЬ
	                               |	вт_ОстаткиХоз.Счет,
	                               |	вт_ОстаткиХоз.Субконто1,
	                               |	вт_ОстаткиХоз.Субконто2 КАК Субконто2,
	                               |	вт_ОстаткиХоз.Субконто3,
	                               |	вт_ОстаткиХоз.СуммаОборот,
	                               |	вт_ОстаткиХоз.ВалютнаяСуммаОборот,
	                               |	вт_ОстаткиХоз.КоличествоОборот,
	                               |	вт_налог.ВидУчета КАК ВидУчета,
	                               |	вт_налог.СуммаОборот КАК СуммаОборотНУ,
	                               |	вт_налог.КоличествоОборот КАК КоличествоОборотНУ,
	                               |	вт_налог.Счет КАК СчетНУ,
	                               |	вт_ОстаткиХоз.Валюта
	                               |ИЗ
	                               |	вт_ОстаткиХоз КАК вт_ОстаткиХоз
	                               |		ЛЕВОЕ СОЕДИНЕНИЕ вт_налог КАК вт_налог
	                               |		ПО вт_ОстаткиХоз.Субконто1 = вт_налог.Субконто1
	                               |			И вт_ОстаткиХоз.Субконто3 = вт_налог.Субконто3
	                               |			И вт_ОстаткиХоз.Субконто2 = вт_налог.Субконто2
	                               |ИТОГИ ПО
	                               |	Субконто2,
	                               |	ВидУчета");
	
	Для Каждого СтрокаТаб из ТабОбъектыСтроительства Цикл
		Если Не ЗначениеЗаполнено(СтрокаТаб.ОбъектСтроительства) Тогда
			продолжить;
		КонецЕсли;
		ЗапросОборотыДт.УстановитьПараметр("НачалоПериода", Новый Граница(СтрокаТаб.Период, ВидГраницы.Исключая));
		ЗапросОборотыДт.УстановитьПараметр("КонецПериода", Дата);
		ЗапросОборотыДт.УстановитьПараметр("ОбъектСтроительства", СтрокаТаб.ОбъектСтроительства);
		ЗапросОборотыДт.УстановитьПараметр("СпособСтроительства", СтрокаТаб.СпособСтроительства);
		ЗапросОборотыДт.УстановитьПараметр("СчетБУ", СтрокаТаб.счет);
		ЗапросОборотыДт.УстановитьПараметр("Организация", Организация);
		РезультатОборотыДт = ЗапросОборотыДт.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
		НовСтрока = Неопределено;
		Пока РезультатОборотыДт.Следующий() Цикл
			
			ВыборкаСубконто2 = РезультатОборотыДт.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
			Пока ВыборкаСубконто2.Следующий() Цикл
				НовСтрока = ТабличнаяЧасть.Добавить();
				ВыборкаВидУчета = ВыборкаСубконто2.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
				Пока ВыборкаВидУчета.Следующий() Цикл
					новСтрока.СчетКт   = ВыборкаВидУчета.Счет; 
					новСтрока.СчетКтНУ = ВыборкаВидУчета.СчетНУ; 
					новСтрока.СчетДт   = КорСчет; 
					новСтрока.СчетДтНУ = КорСчетНУ; 
					новСтрока.НаименованиеПередаваемогоИмущества = ВыборкаВидУчета.Субконто1.Наименование;
					новСтрока.СубконтоКт1                        = ВыборкаВидУчета.Субконто1;
					новСтрока.СубконтоКт2                        = ВыборкаВидУчета.Субконто2;
					новСтрока.СубконтоКт3                        = ВыборкаВидУчета.Субконто3;
					новСтрока.СубконтоКтНУ1                      = ВыборкаВидУчета.Субконто1;
					новСтрока.СубконтоКтНУ2                      = ВыборкаВидУчета.Субконто2;
					новСтрока.СубконтоКтНУ3                      = ВыборкаВидУчета.Субконто3;
					НовСтрока.СубконтоДт1                        = ОрганизацияПриемник;
					НовСтрока.СубконтоДтНУ1                      = ОрганизацияПриемник;
					новСтрока.Валюта                             = ВыборкаВидУчета.Валюта;
					новСтрока.Дата                               = Дата;
					новСтрока.ВалютнаяСумма                      = ВыборкаВидУчета.ВалютнаяСуммаОборот;
					Новстрока.Сумма                              = ВыборкаВидУчета.СуммаОборот;
					НовСтрока.ВалютнаяСумма                      = ВыборкаВидУчета.ВалютнаяСуммаОборот;
					Если  ВыборкаВидУчета.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.НУ тогда
						новСтрока.СуммаНУ =  ВыборкаВидУчета.СуммаОборотНУ;
					ИначеЕсли  ВыборкаВидУчета.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.ВР тогда
						новСтрока.СуммаВР =  ВыборкаВидУчета.СуммаОборотНУ;
					ИначеЕсли  ВыборкаВидУчета.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.ПР тогда
						новСтрока.СуммаПР =  ВыборкаВидУчета.СуммаОборотНУ;
					Иначе
					КонецЕсли;	
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;	
КонецПроцедуры // () }}KM WARE Лазаревский К.В. Заявка № 26.10.2015 окончание	

// {{KM WARE Лазаревский К.В. Заявка № 26.10.2015 начало
Процедура ЗаполнитьЗабаланс()
	КорСчетНУ = ПолучитьКорСчетНУ();

	Запрос = Новый Запрос;
	Запрос.Текст = 
// {{KM WARE Лазаревский К.В. Заявка № 18.08.2015 начало
// изменение запроса по аналогии с миграцией договоров (внешние обработки/перенос остатков по договорам)
// {{Старый код:

//		"ВЫБРАТЬ
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Субконто1
//		|		ИНАЧЕ ХозрасчетныйОстатки.Организация
//		|	КОНЕЦ КАК СубконтоДт1,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Субконто2
//		|	КОНЕЦ КАК СубконтоДт2,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Субконто3
//		|	КОНЕЦ КАК СубконтоДт3,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Счет
//		|		ИНАЧЕ &КорСчет
//		|	КОНЕЦ КАК СчетДт,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Счет
//		|		ИНАЧЕ &КорСчет
//		|	КОНЕЦ КАК СчетКт,
//		|	ХозрасчетныйОстатки.Валюта,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
//		|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
//		|	КОНЕЦ КАК Сумма,
//		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСумма,
//		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
//		|	ХозрасчетныйОстатки.Счет КАК СчетБУ,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Субконто1
//		|		ИНАЧЕ ХозрасчетныйОстатки.Организация
//		|	КОНЕЦ КАК СубконтоКт1,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Субконто2
//		|	КОНЕЦ КАК СубконтоКт2,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА ХозрасчетныйОстатки.Субконто3
//		|	КОНЕЦ КАК СубконтоКт3,
//		|	ХозрасчетныйОстатки.Субконто1,
//		|	ХозрасчетныйОстатки.Субконто2,
//		|	ХозрасчетныйОстатки.Субконто3
//		|ПОМЕСТИТЬ втХозрасчетный
//		|ИЗ
//		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НаДату, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
//// {{KM WARE Лазаревский К.В. Заявка № 17.08.2015 начало
//// вызов функции 
//		| " +ДополнитьТекстЗапросаОтборами(Запрос) + "
//// }}KM WARE Лазаревский К.В. Заявка № 17.08.2015 окончание		
//		|ИНДЕКСИРОВАТЬ ПО
//		|	СубконтоДт1,
//		|	СубконтоДт2,
//		|	СубконтоДт3,
//		|	СчетДт
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
//		|			ТОГДА ХозрасчетныйОбороты.Счет
//		|		ИНАЧЕ &КорСчет
//		|	КОНЕЦ КАК СчетДт,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
//		|			ТОГДА ХозрасчетныйОбороты.Счет
//		|		ИНАЧЕ &КорСчет
//		|	КОНЕЦ КАК СчетКт,
//		|	ХозрасчетныйОбороты.Субконто1,
//		|	ХозрасчетныйОбороты.Субконто2,
//		|	ХозрасчетныйОбороты.Субконто3,
//		|	ВЫБОР
//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
//		|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
//		|		ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
//		|	КОНЕЦ КАК Сумма
//		|ПОМЕСТИТЬ ОборотыПо68_02
//		|ИЗ
//		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , , Счет В (&МассивСчетов68_02), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
//		|ПОМЕСТИТЬ втСчетаНУ
//		|ИЗ
//		|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
//		|			&НаДату,
//		|			СчетБУ В ИЕРАРХИИ (&МассивСчетов)
//		|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
//		|
//		|ИНДЕКСИРОВАТЬ ПО
//		|	СчетНУ
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто1
//		|		ИНАЧЕ НалоговыйОстатки.Организация
//		|	КОНЕЦ КАК СубконтоДтНУ1,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто2
//		|	КОНЕЦ КАК СубконтоДтНУ2,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто3
//		|	КОНЕЦ КАК СубконтоДтНУ3,
//		|	втСчетаНУ.СчетБУ КАК СчетБУ,
//		|	СУММА(ВЫБОР
//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ)
//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
//		|			ИНАЧЕ 0
//		|		КОНЕЦ) КАК СуммаНУ,
//		|	СУММА(ВЫБОР
//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
//		|			ИНАЧЕ 0
//		|		КОНЕЦ) КАК СуммаПР,
//		|	СУММА(ВЫБОР
//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
//		|			ИНАЧЕ 0
//		|		КОНЕЦ) КАК СуммаВР,
//		|	НалоговыйОстатки.КоличествоОстаток КАК Количество,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Счет
//		|		ИНАЧЕ &КорСчетНУ
//		|	КОНЕЦ КАК СчетДтНУ,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Счет
//		|		ИНАЧЕ &КорСчетНУ
//		|	КОНЕЦ КАК СчетКтНУ,
//		|	НалоговыйОстатки.Субконто1,
//		|	НалоговыйОстатки.Субконто2,
//		|	НалоговыйОстатки.Субконто3,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто1
//		|		ИНАЧЕ НалоговыйОстатки.Организация
//		|	КОНЕЦ КАК СубконтоКтНУ1,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто2
//		|	КОНЕЦ КАК СубконтоКтНУ2,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто3
//		|	КОНЕЦ КАК СубконтоКтНУ3
//		|ПОМЕСТИТЬ втНалоговый
//		|ИЗ
//		|	втСчетаНУ КАК втСчетаНУ
//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Остатки(&НаДату, , , Организация = &Организация) КАК НалоговыйОстатки
//		|		ПО втСчетаНУ.СчетНУ = НалоговыйОстатки.Счет
////		| " +ДополнитьТекстЗапросаОтборамиНУ(Запрос) + "
//		|
//		|СГРУППИРОВАТЬ ПО
//		|	втСчетаНУ.СчетБУ,
//		|	НалоговыйОстатки.КоличествоОстаток,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Счет
//		|		ИНАЧЕ &КорСчетНУ
//		|	КОНЕЦ,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Счет
//		|		ИНАЧЕ &КорСчетНУ
//		|	КОНЕЦ,
//		|	НалоговыйОстатки.Субконто2,
//		|	НалоговыйОстатки.Субконто3,
//		|	НалоговыйОстатки.Субконто1,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто2
//		|	КОНЕЦ,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто3
//		|	КОНЕЦ,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто2
//		|	КОНЕЦ,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто3
//		|	КОНЕЦ,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто1
//		|		ИНАЧЕ НалоговыйОстатки.Организация
//		|	КОНЕЦ,
//		|	ВЫБОР
//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
//		|			ТОГДА НалоговыйОстатки.Субконто1
//		|		ИНАЧЕ НалоговыйОстатки.Организация
//		|	КОНЕЦ
//		|
//		|ИНДЕКСИРОВАТЬ ПО
//		|	СубконтоДтНУ1,
//		|	СубконтоДтНУ2,
//		|	СубконтоДтНУ3,
//		|	СчетБУ
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	втХозрасчетный.СубконтоДт1 КАК СубконтоДт1,
//		|	втХозрасчетный.СубконтоДт2 КАК СубконтоДт2,
//		|	втХозрасчетный.СубконтоДт3 КАК СубконтоДт3,
//		|	втХозрасчетный.Валюта,
//		|	втНалоговый.СуммаНУ,
//		|	втНалоговый.СуммаПР,
//		|	втНалоговый.СуммаВР,
//		|	втХозрасчетный.ВалютнаяСумма,
//		|	втХозрасчетный.Сумма,
//		|	ЕСТЬNULL(втХозрасчетный.Количество, втНалоговый.Количество) КАК Количество,
//		|	втХозрасчетный.СчетДт,
//		|	втХозрасчетный.СчетКт,
//		|	втНалоговый.СчетДтНУ,
//		|	втНалоговый.СчетКтНУ,
//		|	втХозрасчетный.СубконтоКт1,
//		|	втХозрасчетный.СубконтоКт2,
//		|	втХозрасчетный.СубконтоКт3,
//		|	втНалоговый.СубконтоДтНУ1,
//		|	втНалоговый.СубконтоДтНУ2,
//		|	втНалоговый.СубконтоДтНУ3,
//		|	втНалоговый.СубконтоКтНУ1,
//		|	втНалоговый.СубконтоКтНУ2,
//		|	втНалоговый.СубконтоКтНУ3
//		|ПОМЕСТИТЬ втОбщаяТаблица
//		|ИЗ
//		|	втХозрасчетный КАК втХозрасчетный
//		|		ПОЛНОЕ СОЕДИНЕНИЕ втНалоговый КАК втНалоговый
//		|		ПО втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
//		|			И втХозрасчетный.Субконто1 = втНалоговый.Субконто1
//		|			И (ВЫБОР
//		|				КОГДА НЕ втХозрасчетный.Субконто2 ЕСТЬ NULL 
//		|					ТОГДА втХозрасчетный.Субконто2 = втНалоговый.Субконто2
//		|				ИНАЧЕ ИСТИНА
//		|			КОНЕЦ)
//		|			И (ВЫБОР
//		|				КОГДА НЕ втХозрасчетный.Субконто3 ЕСТЬ NULL 
//		|					ТОГДА втХозрасчетный.Субконто3 = втНалоговый.Субконто3
//		|				ИНАЧЕ ИСТИНА
//		|			КОНЕЦ)
//		|			И втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
//		|
//		|ОБЪЕДИНИТЬ ВСЕ
//		|
//		|ВЫБРАТЬ
//		|	ОборотыПо68_02.Субконто1,
//		|	ОборотыПо68_02.Субконто2,
//		|	ОборотыПо68_02.Субконто3,
//		|	NULL,
//		|	0,
//		|	0,
//		|	0,
//		|	0,
//		|	ОборотыПо68_02.Сумма,
//		|	0,
//		|	ОборотыПо68_02.СчетДт,
//		|	ОборотыПо68_02.СчетКт,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL,
//		|	NULL
//		|ИЗ
//		|	ОборотыПо68_02 КАК ОборотыПо68_02
//		|;
//		|
//		|////////////////////////////////////////////////////////////////////////////////
//		|ВЫБРАТЬ
//		|	втОбщаяТаблица.СубконтоДт1 КАК СубконтоКт1,
//		|	втОбщаяТаблица.СубконтоДт2 КАК СубконтоКт2,
//		|	втОбщаяТаблица.СубконтоДт3 КАК СубконтоКт3,
//		|	втОбщаяТаблица.Валюта,
//		|	втОбщаяТаблица.СуммаНУ,
//		|	втОбщаяТаблица.СуммаПР,
//		|	втОбщаяТаблица.СуммаВР,
//		|	втОбщаяТаблица.ВалютнаяСумма,
//		|	втОбщаяТаблица.Сумма,
//		|	втОбщаяТаблица.Количество,
//		|	втОбщаяТаблица.СчетДт КАК СчетКт,
//		|	втОбщаяТаблица.СчетКт КАК СчетДт,
//		|	втОбщаяТаблица.СчетДтНУ КАК СчетКтНУ,
//		|	втОбщаяТаблица.СчетКтНУ КАК СчетДтНУ,
//		|	втОбщаяТаблица.СубконтоКт1 КАК СубконтоДт1,
//		|	втОбщаяТаблица.СубконтоКт2 КАК СубконтоДт2,
//		|	втОбщаяТаблица.СубконтоКт3 КАК СубконтоДт3,
//		|	втОбщаяТаблица.СубконтоДтНУ1 КАК СубконтоКтНУ1,
//		|	втОбщаяТаблица.СубконтоДтНУ2 КАК СубконтоКтНУ2,
//		|	втОбщаяТаблица.СубконтоДтНУ3 КАК СубконтоКтНУ3,
//		|	втОбщаяТаблица.СубконтоКтНУ1 КАК СубконтоДтНУ1,
//		|	втОбщаяТаблица.СубконтоКтНУ2 КАК СубконтоДтНУ2,
//		|	втОбщаяТаблица.СубконтоКтНУ3 КАК СубконтоДтНУ3,
//		|	ВЫБОР
//		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Наименование
//		|	КОНЕЦ КАК СубконтоКт_БУ_Договор,
//		|	ВЫБОР
//		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Наименование
//		|	КОНЕЦ КАК СубконтоДт_БУ_Договор,
//		|	ВЫБОР
//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ1.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ2.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ3.Наименование
//		|	КОНЕЦ КАК СубконтоКт_НУ_Договор,
//		|	ВЫБОР
//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ1.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ2.Наименование
//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ3.Наименование
//		|	КОНЕЦ КАК СубконтоДт_НУ_Договор,
//		|	ВЫБОР
//		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Владелец
//		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Владелец
//		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Владелец
//		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Владелец
//		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Владелец
//		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
//		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Владелец
//		|	КОНЕЦ КАК КонтрагентПриемник
//		|ИЗ
//		|	втОбщаяТаблица КАК втОбщаяТаблица";
//
//	МассивСчетов68_02  = Новый Массив;
//	Для каждого Стр Из СчетаУчета Цикл
//		Если Стр.СчетУчета = ПланыСчетов.Хозрасчетный.НДС Тогда
//			МассивСчетов68_02.Добавить(ПланыСчетов.Хозрасчетный.НДС);
//		КонецЕсли;
//	КонецЦикла;
//		
//	Запрос.УстановитьПараметр("НаДату", Дата);
//	Запрос.УстановитьПараметр("Организация", Организация);
//	Запрос.УстановитьПараметр("МассивСчетов", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
//	Запрос.УстановитьПараметр("МассивСчетов68_02", МассивСчетов68_02);
//	Запрос.УстановитьПараметр("КорСчет", КорСчет);
//	Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
//	ТабличнаяЧасть.Загрузить(Запрос.Выполнить().Выгрузить());

//}}Новый код
		//|" +ДополнитьТекстЗапросаОтборами(Запрос) + "
		"ВЫБРАТЬ
		|	ХозрасчетныйОстатки.Счет,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Субконто3,
		|	ХозрасчетныйОстатки.Организация,
		|	ЕСТЬNULL(ХозрасчетныйОстатки.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
		|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
		|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
		|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт,
		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт КАК ВалютнаяСуммаОстатокДт,
		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСуммаОстатокКт,
		|	ХозрасчетныйОстатки.КоличествоОстаток КАК КоличествоОстаток,
		|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КоличествоОстатокДт,
		|	ХозрасчетныйОстатки.КоличествоОстатокКт КАК КоличествоОстатокКт
		|ПОМЕСТИТЬ вт_врем
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НаДату, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ХозрасчетныйОбороты.Счет,
		|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
		|	ХозрасчетныйОбороты.Субконто2,
		|	ХозрасчетныйОбороты.Субконто3 КАК Субконто3,
		|	ХозрасчетныйОбороты.Организация,
		|	ЕСТЬNULL(ХозрасчетныйОбороты.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
		|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
		|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт,
		|	ХозрасчетныйОбороты.СуммаОборот
		|ПОМЕСТИТЬ вт_Обороты
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.Обороты(
		|			,
		|			&НаДату,
		|			,
		|			Счет В ИЕРАРХИИ (&МассивСчетов),
		|			,
		|			Организация = &Организация
		|				И Субконто1 В
		|					(ВЫБРАТЬ
		|						вт_врем.Субконто1
		|					ИЗ
		|						вт_врем КАК вт_врем
		|					СГРУППИРОВАТЬ ПО
		|									вт_врем.Субконто1),
		|			,
		|			) КАК ХозрасчетныйОбороты
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_Обороты.Субконто1,
		|	вт_Обороты.Субконто3,
		|	СУММА(вт_Обороты.СуммаОборотКт) КАК СуммаОборотКт
		|ПОМЕСТИТЬ вт_оборотКт
		|ИЗ
		|	вт_Обороты КАК вт_Обороты
		|
		|СГРУППИРОВАТЬ ПО
		|	вт_Обороты.Субконто1,
		|	вт_Обороты.Субконто3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_Обороты.Счет,
		|	вт_Обороты.Субконто1,
		|	вт_Обороты.Субконто2,
		|	вт_Обороты.Субконто3,
		|	вт_Обороты.Организация,
		|	вт_Обороты.Валюта,
		|	вт_Обороты.СуммаОборотДт,
		|	вт_Обороты.СуммаОборотКт КАК СуммаОборотКт1,
		|	вт_Обороты.СуммаОборот
		|ПОМЕСТИТЬ вт_ТолькоДебитовыеОбороты
		|ИЗ
		|	вт_Обороты КАК вт_Обороты
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ вт_оборотКт КАК вт_оборотКт
		|		ПО вт_Обороты.Субконто1 = вт_оборотКт.Субконто1
		|			И вт_Обороты.Субконто3 = вт_оборотКт.Субконто3
		|ГДЕ
		|	вт_оборотКт.СуммаОборотКт = 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_врем.Счет,
		|	вт_врем.Субконто1,
		|	ЕСТЬNULL(вт_ТолькоДебитовыеОбороты.Субконто2, вт_врем.Субконто2) КАК Субконто2,
		|	вт_врем.Субконто3,
		|	вт_врем.Организация,
		|	вт_врем.Валюта,
		|	ЕСТЬNULL(вт_ТолькоДебитовыеОбороты.СуммаОборотДт, вт_врем.СуммаОстаток) КАК СуммаОстаток,
		|	вт_врем.СуммаОстатокДт,
		|	вт_врем.СуммаОстатокКт,
		|	вт_врем.ВалютнаяСуммаОстаток,
		|	вт_врем.ВалютнаяСуммаОстатокДт,
		|	вт_врем.ВалютнаяСуммаОстатокКт,
		|	вт_врем.КоличествоОстаток,
		|	вт_врем.КоличествоОстатокДт,
		|	вт_врем.КоличествоОстатокКт
		|ПОМЕСТИТЬ Вт_Врем1
		|ИЗ
		|	вт_врем КАК вт_врем
		|		ЛЕВОЕ СОЕДИНЕНИЕ вт_ТолькоДебитовыеОбороты КАК вт_ТолькоДебитовыеОбороты
		|		ПО вт_врем.Субконто1 = вт_ТолькоДебитовыеОбороты.Субконто1
		|			И вт_врем.Субконто3 = вт_ТолькоДебитовыеОбороты.Субконто3
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	вт_врем.Счет,
		|	вт_врем.Субконто1,
		|	вт_врем.Субконто2,
		|	вт_врем.Субконто3,
		|	вт_врем.Организация,
		|	вт_врем.Валюта,
		|	СУММА(вт_врем.СуммаОстаток) КАК СуммаОстаток,
		|	СУММА(вт_врем.СуммаОстатокДт) КАК СуммаОстатокДт,
		|	СУММА(вт_врем.СуммаОстатокКт) КАК СуммаОстатокКт,
		|	СУММА(вт_врем.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток,
		|	СУММА(вт_врем.ВалютнаяСуммаОстатокДт) КАК ВалютнаяСуммаОстатокДт,
		|	СУММА(вт_врем.ВалютнаяСуммаОстатокКт) КАК ВалютнаяСуммаОстатокКт,
		|	СУММА(вт_врем.КоличествоОстаток) КАК КоличествоОстаток,
		|	СУММА(вт_врем.КоличествоОстатокДт) КАК КоличествоОстатокДт,
		|	СУММА(вт_врем.КоличествоОстатокКт) КАК КоличествоОстатокКт
		|ПОМЕСТИТЬ ХозрасчетныйОстатки
		|ИЗ
		|	Вт_Врем1 КАК вт_врем
		|
		|СГРУППИРОВАТЬ ПО
		|	вт_врем.Счет,
		|	вт_врем.Субконто1,
		|	вт_врем.Субконто2,
		|	вт_врем.Субконто3,
		|	вт_врем.Организация,
		|	вт_врем.Валюта
		|
		|ИМЕЮЩИЕ
		|	СУММА(вт_врем.СуммаОстаток) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
		|			ТОГДА ХозрасчетныйОстатки.Субконто1
		|		КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
		|				И ХозрасчетныйОстатки.СуммаОстатокДт < 0
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ &Организация79
		|	КОНЕЦ КАК СубконтоДт1,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
		|			ТОГДА ХозрасчетныйОстатки.Субконто2
		|		КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
		|				И ХозрасчетныйОстатки.СуммаОстатокДт < 0
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт2,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
		|			ТОГДА ХозрасчетныйОстатки.Субконто3
		|		КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
		|				И ХозрасчетныйОстатки.СуммаОстатокДт < 0
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
		|			ТОГДА ХозрасчетныйОстатки.Счет
		|		ИНАЧЕ &КорСчет
		|	КОНЕЦ КАК СчетДт,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
		|			ТОГДА ХозрасчетныйОстатки.Счет
		|		ИНАЧЕ &КорСчет
		|	КОНЕЦ КАК СчетКт,
		|	ХозрасчетныйОстатки.Валюта,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
		|			ТОГДА ХозрасчетныйОстатки.СуммаОстаток
		|		ИНАЧЕ -ХозрасчетныйОстатки.СуммаОстаток
		|	КОНЕЦ КАК Сумма,
		|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСумма,
		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
		|	ХозрасчетныйОстатки.Счет КАК СчетБУ,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
		|			ТОГДА ХозрасчетныйОстатки.Субконто1
		|		КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
		|				И ХозрасчетныйОстатки.СуммаОстатокКт < 0
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|		ИНАЧЕ &Организация79
		|	КОНЕЦ КАК СубконтоКт1,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
		|			ТОГДА ХозрасчетныйОстатки.Субконто2
		|		КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
		|				И ХозрасчетныйОстатки.СуммаОстатокКт < 0
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоКт2,
		|	ВЫБОР
		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
		|			ТОГДА ХозрасчетныйОстатки.Субконто3
		|		КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
		|				И ХозрасчетныйОстатки.СуммаОстатокКт < 0
		|			ТОГДА НЕОПРЕДЕЛЕНО
		|	КОНЕЦ КАК СубконтоКт3,
		|	ХозрасчетныйОстатки.Субконто1,
		|	ХозрасчетныйОстатки.Субконто2,
		|	ХозрасчетныйОстатки.Субконто3
		|ПОМЕСТИТЬ втХозрасчетный
		|ИЗ
		|	ХозрасчетныйОстатки КАК ХозрасчетныйОстатки
		|" +ДополнитьТекстЗапросаОтборами(Запрос) + "
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СубконтоДт1,
		|	СубконтоДт2,
		|	СубконтоДт3,
		|	СчетДт
		|;
		|
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|ПОМЕСТИТЬ втСчетаНУ
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
		|			&НаДату,
		|			 Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втХозрасчетный.СубконтоДт1 КАК СубконтоДт1,
		|	втХозрасчетный.СубконтоДт2 КАК СубконтоДт2,
		|	втХозрасчетный.СубконтоДт3 КАК СубконтоДт3,
		|	втХозрасчетный.Валюта,
		|	втХозрасчетный.ВалютнаяСумма,
		|	втХозрасчетный.Сумма,
		|	втХозрасчетный.СчетДт,
		|	втХозрасчетный.СчетКт,
		|	втХозрасчетный.СубконтоКт1,
		|	втХозрасчетный.СубконтоКт2,
		|	втХозрасчетный.СубконтоКт3,
		|	втСчетаНУ_Дт.СчетНУ КАК СчетДтНУ,
		|	втСчетаНУ_Кт.СчетНУ КАК СчетКтНУ
		|ПОМЕСТИТЬ втОбщаяТаблица
		|ИЗ
		|	втХозрасчетный КАК втХозрасчетный
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ_Дт
		|		ПО втХозрасчетный.СчетКт = втСчетаНУ_Дт.СчетБУ
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ_Кт
		|		ПО втХозрасчетный.СчетДт = втСчетаНУ_Кт.СчетБУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втОбщаяТаблица.СубконтоДт1 КАК СубконтоКт1,
		|	втОбщаяТаблица.СубконтоДт2 КАК СубконтоКт2,
		|	втОбщаяТаблица.СубконтоДт3 КАК СубконтоКт3,
		|	втОбщаяТаблица.Валюта,
		|	втОбщаяТаблица.ВалютнаяСумма,
		|	втОбщаяТаблица.Сумма,
		|	втОбщаяТаблица.СчетДт КАК СчетКт,
		|	втОбщаяТаблица.СчетКт КАК СчетДт,
		|	втОбщаяТаблица.СубконтоКт1 КАК СубконтоДт1,
		|	втОбщаяТаблица.СубконтоКт2 КАК СубконтоДт2,
		|	втОбщаяТаблица.СубконтоКт3 КАК СубконтоДт3,
		|	ВЫБОР
		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Наименование
		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Наименование
		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Наименование
		|	КОНЕЦ КАК СубконтоКт_БУ_Договор,
		|	ВЫБОР
		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Наименование
		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Наименование
		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Наименование
		|	КОНЕЦ КАК СубконтоДт_БУ_Договор,
		|	ВЫБОР
		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Владелец
		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Владелец
		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Владелец
		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Владелец
		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Владелец
		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Владелец
		|	КОНЕЦ КАК КонтрагентПриемник,
		|	втОбщаяТаблица.СчетДтНУ КАК СчетДтНУ,
		|	втОбщаяТаблица.СчетКтНУ КАК СчетКтНУ
		|ИЗ
		|	втОбщаяТаблица КАК втОбщаяТаблица
		|ГДЕ
		|	втОбщаяТаблица.Сумма <> 0";


	МассивСчетов68_02  = Новый Массив;
	Для каждого Стр Из СчетаУчета Цикл
		Если Стр.СчетУчета = ПланыСчетов.Хозрасчетный.НДС Тогда
			МассивСчетов68_02.Добавить(ПланыСчетов.Хозрасчетный.НДС);
		КонецЕсли;
	КонецЦикла;
		
	Запрос.УстановитьПараметр("НаДату", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Организация79", ОрганизацияПриемник);
	Запрос.УстановитьПараметр("МассивСчетов", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	Запрос.УстановитьПараметр("МассивСчетов68_02", МассивСчетов68_02);
// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
// 
// {{Старый код:
	//Запрос.УстановитьПараметр("КорСчет", КорСчет);
	//Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
// }}Новый код:
	Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
		Запрос.УстановитьПараметр("КорСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
		Запрос.УстановитьПараметр("КорСчетНУ", ПланыСчетов.Налоговый.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("КорСчет", КорСчет);
		Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
	КонецЕсли;	
// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 	
	
	ТабличнаяЧасть.Загрузить(Запрос.Выполнить().Выгрузить());
// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
// Добавил проверку на забаланс. счета
	Если НЕ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
		Если ВидОперации <> Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
			Для Каждого Строка Из ТабличнаяЧасть Цикл
				Для Сч = 1 По 3 Цикл
					СубконтоБУДт = Строка["СубконтоДт" + Формат(Сч, "ЧЦ=1; ЧДЦ=0")];
					СубконтоБУКт = Строка["СубконтоКт" + Формат(Сч, "ЧЦ=1; ЧДЦ=0")];
					СубконтоДтНУЗаполнено = Ложь;
					СубконтоКтНУЗаполнено = Ложь;
					Для СчНУ = 1 По 3 Цикл
						Если ЗначениеЗаполнено(СубконтоБУДт) Тогда 
							//СубконтоНУ = Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							Если НЕ ЗначениеЗаполнено(Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоДтНУЗаполнено Тогда
								Строка["СубконтоДтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУДт;
								СубконтоДтНУЗаполнено = Истина;
							КонецЕсли;
						КонецЕсли;
						Если ЗначениеЗаполнено(СубконтоБУКт) Тогда 
							//СубконтоНУ = Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							Если НЕ ЗначениеЗаполнено(Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоКтНУЗаполнено Тогда
								Строка["СубконтоКтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУКт;
								СубконтоКтНУЗаполнено = Истина;
							КонецЕсли;
						КонецЕсли;	
					КонецЦикла;	
					Если ТипЗнч(СубконтоБУДт) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						Строка.ДоговорКонтрагентаПриемник = СубконтоБУДт.ДоговорПослеМиграции;
					ИначеЕсли ТипЗнч(СубконтоБУКт) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						Строка.ДоговорКонтрагентаПриемник = СубконтоБУКт.ДоговорПослеМиграции;
					КонецЕсли;
				КонецЦикла;
				Строка.СуммаНУ = Строка.Сумма;
			КонецЦикла;	
		КонецЕсли;
	КонецЕсли;
// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 	
// }}KM WARE Лазаревский К.В. Заявка № 18.08.2015 окончание 
	
КонецПроцедуры // () }}KM WARE Лазаревский К.В. Заявка № 26.10.2015 окончание

Процедура ЗаполнитьРасчетныеОперации() Экспорт
	
    // {{KM WARE Малыгин П.К. Заявка № 22.12.2015 начало
	// Нужна проверка перед заполнением
	МассивСчетовПроверки = СчетаУчета.ВыгрузитьКолонку("СчетУчета");
	ЕстьКосяк = Ложь;
	Для Каждого СчетПроверки ИЗ МассивСчетовПроверки Цикл
		
		Если KWR_ОсобыйПорядокОбработкиСчетов(СчетПроверки,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ЗапретитьСамостоятельноеИспользованиевАвизо) Тогда	
			Сообщить("Счет "+СчетПроверки+" не заполняется самостоятельно, удалите его из списка счетов");
			ЕстьКосяк = Истина;
			
			Если KWR_ОсобыйПорядокОбработкиСчетов(СчетПроверки,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.СчетНДССАвансовПолученных) Тогда
				Сообщить("Это счет НДС авансов, он заполняется по счетам авансов:");
				ЗапросСчетаАвансов = Новый Запрос;
				ЗапросСчетаАвансов.Текст =  "ВЫБРАТЬ
				|	kwr_СчетаАВИЗО_ОсобыйПорядок.Счет,
				|	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка
				|ИЗ
				|	РегистрСведений.kwr_СчетаАВИЗО_ОсобыйПорядок КАК kwr_СчетаАВИЗО_ОсобыйПорядок
				|ГДЕ                 
				|	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка = &ОсобаяОбработка";
				ЗапросСчетаАвансов.УстановитьПараметр("ОсобаяОбработка",Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.СчетАвансовПолученных);	
				РезультатСчетаАвансов = ЗапросСчетаАвансов.Выполнить().Выбрать();			
				Пока РезультатСчетаАвансов.Следующий() Цикл
					Сообщить(РезультатСчетаАвансов.Счет);
				КонецЦикла;	
			КонецЕсли;	
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	Если ЕстьКосяк Тогда
		Возврат;
	КонецЕсли;
    // }}KM WARE Малыгин П.К. Заявка № 22.12.2015 окончание
	
	КорСчетНУ = ПланыСчетов.Налоговый.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|			,
	|			СчетБУ = &КорСчет
	|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних";
	
	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КорСчетНУ = ВыборкаДетальныеЗаписи.СчетНУ;	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	// {{KM WARE Лазаревский К.В. Заявка № 18.08.2015 начало
	// изменение запроса по аналогии с миграцией договоров (внешние обработки/перенос остатков по договорам)
	// {{Старый код:
	
	//		"ВЫБРАТЬ
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто1
	//		|		ИНАЧЕ ХозрасчетныйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоДт1,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоДт2,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоДт3,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетДт,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетКт,
	//		|	ХозрасчетныйОстатки.Валюта,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	//		|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	//		|	КОНЕЦ КАК Сумма,
	//		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСумма,
	//		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	//		|	ХозрасчетныйОстатки.Счет КАК СчетБУ,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто1
	//		|		ИНАЧЕ ХозрасчетныйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоКт1,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоКт2,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоКт3,
	//		|	ХозрасчетныйОстатки.Субконто1,
	//		|	ХозрасчетныйОстатки.Субконто2,
	//		|	ХозрасчетныйОстатки.Субконто3
	//		|ПОМЕСТИТЬ втХозрасчетный
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НаДату, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
	//// {{KM WARE Лазаревский К.В. Заявка № 17.08.2015 начало
	//// вызов функции 
	//		| " +ДополнитьТекстЗапросаОтборами(Запрос) + "
	//// }}KM WARE Лазаревский К.В. Заявка № 17.08.2015 окончание		
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	СубконтоДт1,
	//		|	СубконтоДт2,
	//		|	СубконтоДт3,
	//		|	СчетДт
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
	//		|			ТОГДА ХозрасчетныйОбороты.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетДт,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
	//		|			ТОГДА ХозрасчетныйОбороты.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетКт,
	//		|	ХозрасчетныйОбороты.Субконто1,
	//		|	ХозрасчетныйОбороты.Субконто2,
	//		|	ХозрасчетныйОбороты.Субконто3,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
	//		|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	//		|		ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
	//		|	КОНЕЦ КАК Сумма
	//		|ПОМЕСТИТЬ ОборотыПо68_02
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , , Счет В (&МассивСчетов68_02), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	//		|ПОМЕСТИТЬ втСчетаНУ
	//		|ИЗ
	//		|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	//		|			&НаДату,
	//		|			СчетБУ В ИЕРАРХИИ (&МассивСчетов)
	//		|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
	//		|
	//		|СГРУППИРОВАТЬ ПО
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	//		|
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	СчетНУ
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоДтНУ1,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоДтНУ2,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоДтНУ3,
	//		|	втСчетаНУ.СчетБУ КАК СчетБУ,
	//		|	СУММА(ВЫБОР
	//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ)
	//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
	//		|			ИНАЧЕ 0
	//		|		КОНЕЦ) КАК СуммаНУ,
	//		|	СУММА(ВЫБОР
	//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
	//		|			ИНАЧЕ 0
	//		|		КОНЕЦ) КАК СуммаПР,
	//		|	СУММА(ВЫБОР
	//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
	//		|			ИНАЧЕ 0
	//		|		КОНЕЦ) КАК СуммаВР,
	//		|	НалоговыйОстатки.КоличествоОстаток КАК Количество,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ КАК СчетДтНУ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ КАК СчетКтНУ,
	//		|	НалоговыйОстатки.Субконто1,
	//		|	НалоговыйОстатки.Субконто2,
	//		|	НалоговыйОстатки.Субконто3,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоКтНУ1,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоКтНУ2,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоКтНУ3
	//		|ПОМЕСТИТЬ втНалоговый
	//		|ИЗ
	//		|	втСчетаНУ КАК втСчетаНУ
	//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Остатки(&НаДату, , , Организация = &Организация) КАК НалоговыйОстатки
	//		|		ПО втСчетаНУ.СчетНУ = НалоговыйОстатки.Счет
	////		| " +ДополнитьТекстЗапросаОтборамиНУ(Запрос) + "
	//		|
	//		|СГРУППИРОВАТЬ ПО
	//		|	втСчетаНУ.СчетБУ,
	//		|	НалоговыйОстатки.КоличествоОстаток,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ,
	//		|	НалоговыйОстатки.Субконто2,
	//		|	НалоговыйОстатки.Субконто3,
	//		|	НалоговыйОстатки.Субконто1,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ
	//		|
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	СубконтоДтНУ1,
	//		|	СубконтоДтНУ2,
	//		|	СубконтоДтНУ3,
	//		|	СчетБУ
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	втХозрасчетный.СубконтоДт1 КАК СубконтоДт1,
	//		|	втХозрасчетный.СубконтоДт2 КАК СубконтоДт2,
	//		|	втХозрасчетный.СубконтоДт3 КАК СубконтоДт3,
	//		|	втХозрасчетный.Валюта,
	//		|	втНалоговый.СуммаНУ,
	//		|	втНалоговый.СуммаПР,
	//		|	втНалоговый.СуммаВР,
	//		|	втХозрасчетный.ВалютнаяСумма,
	//		|	втХозрасчетный.Сумма,
	//		|	ЕСТЬNULL(втХозрасчетный.Количество, втНалоговый.Количество) КАК Количество,
	//		|	втХозрасчетный.СчетДт,
	//		|	втХозрасчетный.СчетКт,
	//		|	втНалоговый.СчетДтНУ,
	//		|	втНалоговый.СчетКтНУ,
	//		|	втХозрасчетный.СубконтоКт1,
	//		|	втХозрасчетный.СубконтоКт2,
	//		|	втХозрасчетный.СубконтоКт3,
	//		|	втНалоговый.СубконтоДтНУ1,
	//		|	втНалоговый.СубконтоДтНУ2,
	//		|	втНалоговый.СубконтоДтНУ3,
	//		|	втНалоговый.СубконтоКтНУ1,
	//		|	втНалоговый.СубконтоКтНУ2,
	//		|	втНалоговый.СубконтоКтНУ3
	//		|ПОМЕСТИТЬ втОбщаяТаблица
	//		|ИЗ
	//		|	втХозрасчетный КАК втХозрасчетный
	//		|		ПОЛНОЕ СОЕДИНЕНИЕ втНалоговый КАК втНалоговый
	//		|		ПО втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
	//		|			И втХозрасчетный.Субконто1 = втНалоговый.Субконто1
	//		|			И (ВЫБОР
	//		|				КОГДА НЕ втХозрасчетный.Субконто2 ЕСТЬ NULL 
	//		|					ТОГДА втХозрасчетный.Субконто2 = втНалоговый.Субконто2
	//		|				ИНАЧЕ ИСТИНА
	//		|			КОНЕЦ)
	//		|			И (ВЫБОР
	//		|				КОГДА НЕ втХозрасчетный.Субконто3 ЕСТЬ NULL 
	//		|					ТОГДА втХозрасчетный.Субконто3 = втНалоговый.Субконто3
	//		|				ИНАЧЕ ИСТИНА
	//		|			КОНЕЦ)
	//		|			И втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
	//		|
	//		|ОБЪЕДИНИТЬ ВСЕ
	//		|
	//		|ВЫБРАТЬ
	//		|	ОборотыПо68_02.Субконто1,
	//		|	ОборотыПо68_02.Субконто2,
	//		|	ОборотыПо68_02.Субконто3,
	//		|	NULL,
	//		|	0,
	//		|	0,
	//		|	0,
	//		|	0,
	//		|	ОборотыПо68_02.Сумма,
	//		|	0,
	//		|	ОборотыПо68_02.СчетДт,
	//		|	ОборотыПо68_02.СчетКт,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL
	//		|ИЗ
	//		|	ОборотыПо68_02 КАК ОборотыПо68_02
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	втОбщаяТаблица.СубконтоДт1 КАК СубконтоКт1,
	//		|	втОбщаяТаблица.СубконтоДт2 КАК СубконтоКт2,
	//		|	втОбщаяТаблица.СубконтоДт3 КАК СубконтоКт3,
	//		|	втОбщаяТаблица.Валюта,
	//		|	втОбщаяТаблица.СуммаНУ,
	//		|	втОбщаяТаблица.СуммаПР,
	//		|	втОбщаяТаблица.СуммаВР,
	//		|	втОбщаяТаблица.ВалютнаяСумма,
	//		|	втОбщаяТаблица.Сумма,
	//		|	втОбщаяТаблица.Количество,
	//		|	втОбщаяТаблица.СчетДт КАК СчетКт,
	//		|	втОбщаяТаблица.СчетКт КАК СчетДт,
	//		|	втОбщаяТаблица.СчетДтНУ КАК СчетКтНУ,
	//		|	втОбщаяТаблица.СчетКтНУ КАК СчетДтНУ,
	//		|	втОбщаяТаблица.СубконтоКт1 КАК СубконтоДт1,
	//		|	втОбщаяТаблица.СубконтоКт2 КАК СубконтоДт2,
	//		|	втОбщаяТаблица.СубконтоКт3 КАК СубконтоДт3,
	//		|	втОбщаяТаблица.СубконтоДтНУ1 КАК СубконтоКтНУ1,
	//		|	втОбщаяТаблица.СубконтоДтНУ2 КАК СубконтоКтНУ2,
	//		|	втОбщаяТаблица.СубконтоДтНУ3 КАК СубконтоКтНУ3,
	//		|	втОбщаяТаблица.СубконтоКтНУ1 КАК СубконтоДтНУ1,
	//		|	втОбщаяТаблица.СубконтоКтНУ2 КАК СубконтоДтНУ2,
	//		|	втОбщаяТаблица.СубконтоКтНУ3 КАК СубконтоДтНУ3,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Наименование
	//		|	КОНЕЦ КАК СубконтоКт_БУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Наименование
	//		|	КОНЕЦ КАК СубконтоДт_БУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ3.Наименование
	//		|	КОНЕЦ КАК СубконтоКт_НУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ3.Наименование
	//		|	КОНЕЦ КАК СубконтоДт_НУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Владелец
	//		|	КОНЕЦ КАК КонтрагентПриемник
	//		|ИЗ
	//		|	втОбщаяТаблица КАК втОбщаяТаблица";
	//
	//	МассивСчетов68_02  = Новый Массив;
	//	Для каждого Стр Из СчетаУчета Цикл
	//		Если Стр.СчетУчета = ПланыСчетов.Хозрасчетный.НДС Тогда
	//			МассивСчетов68_02.Добавить(ПланыСчетов.Хозрасчетный.НДС);
	//		КонецЕсли;
	//	КонецЦикла;
	//		
	//	Запрос.УстановитьПараметр("НаДату", Дата);
	//	Запрос.УстановитьПараметр("Организация", Организация);
	//	Запрос.УстановитьПараметр("МассивСчетов", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	//	Запрос.УстановитьПараметр("МассивСчетов68_02", МассивСчетов68_02);
	//	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	//	Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
	//	ТабличнаяЧасть.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//}}Новый код
	
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто3,
	|	ХозрасчетныйОстатки.Организация,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт КАК ВалютнаяСуммаОстатокДт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСуммаОстатокКт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокДт КАК ВалютнаяСуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокКт КАК ВалютнаяСуммаРазвернутыйОстатокКт,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КоличествоОстатокДт,
	|	ХозрасчетныйОстатки.КоличествоОстатокКт КАК КоличествоОстатокКт,
	|	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокДт КАК КоличествоРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокКт КАК КоличествоРазвернутыйОстатокКт
	|ПОМЕСТИТЬ вт_врем
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НаДату, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
	|" +ДополнитьТекстЗапросаОтборами(Запрос) + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_врем.Счет,
	|	вт_врем.Субконто1,
	|	вт_врем.Субконто2,
	|	вт_врем.Субконто3,
	|	вт_врем.Организация,
	|	вт_врем.Валюта,
	|	СУММА(вт_врем.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(вт_врем.СуммаОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(вт_врем.СуммаОстатокКт) КАК СуммаОстатокКт,
	|	СУММА(вт_врем.СуммаРазвернутыйОстатокДт) КАК СуммаРазвернутыйОстатокДт,
	|	СУММА(вт_врем.СуммаРазвернутыйОстатокКт) КАК СуммаРазвернутыйОстатокКт,
	|	СУММА(вт_врем.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток,
	|	СУММА(вт_врем.ВалютнаяСуммаОстатокДт) КАК ВалютнаяСуммаОстатокДт,
	|	СУММА(вт_врем.ВалютнаяСуммаОстатокКт) КАК ВалютнаяСуммаОстатокКт,
	|	СУММА(вт_врем.ВалютнаяСуммаРазвернутыйОстатокДт) КАК ВалютнаяСуммаРазвернутыйОстатокДт,
	|	СУММА(вт_врем.ВалютнаяСуммаРазвернутыйОстатокКт) КАК ВалютнаяСуммаРазвернутыйОстатокКт,
	|	СУММА(вт_врем.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(вт_врем.КоличествоОстатокДт) КАК КоличествоОстатокДт,
	|	СУММА(вт_врем.КоличествоОстатокКт) КАК КоличествоОстатокКт,
	|	СУММА(вт_врем.КоличествоРазвернутыйОстатокДт) КАК КоличествоРазвернутыйОстатокДт,
	|	СУММА(вт_врем.КоличествоРазвернутыйОстатокКт) КАК КоличествоРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ХозрасчетныйОстатки
	|ИЗ
	|	вт_врем КАК вт_врем
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_врем.Счет,
	|	вт_врем.Субконто1,
	|	вт_врем.Субконто2,
	|	вт_врем.Субконто3,
	|	вт_врем.Организация,
	|	вт_врем.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(вт_врем.СуммаОстаток) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА &Организация79
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто1
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокДт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ &Организация79
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто2
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокДт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто3
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокДт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Счет
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА &КорСчет
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Счет
	|				ИНАЧЕ &КорСчет
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Счет
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА &КорСчет
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Счет
	|				ИНАЧЕ &КорСчет
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКт,
	|	ХозрасчетныйОстатки.Валюта,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|	КОНЕЦ КАК Сумма,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСумма,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	|	ХозрасчетныйОстатки.Счет КАК СчетБУ,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА &Организация79
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто1
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокКт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ &Организация79
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто2
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокКт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто3
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокКт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоКт3,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|ХозрасчетныйОстатки.Субконто3
	|ПОМЕСТИТЬ втХозрасчетный
	|ИЗ
	|	ХозрасчетныйОстатки КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	СчетДт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	|ПОМЕСТИТЬ втСчетаНУ
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&НаДату, Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втХозрасчетный.СубконтоДт1 КАК СубконтоДт1,
	|	втХозрасчетный.СубконтоДт2 КАК СубконтоДт2,
	|	втХозрасчетный.СубконтоДт3 КАК СубконтоДт3,
	|	втХозрасчетный.Валюта,
	|	втХозрасчетный.ВалютнаяСумма,
	|	втХозрасчетный.Сумма,
	|	втХозрасчетный.СчетДт,
	|	втХозрасчетный.СчетКт,
	|	втХозрасчетный.СубконтоКт1,
	|	втХозрасчетный.СубконтоКт2,
	|	втХозрасчетный.СубконтоКт3,
	|	втСчетаНУ_Дт.СчетНУ КАК СчетДтНУ,
	|	втСчетаНУ_Кт.СчетНУ КАК СчетКтНУ,
	|	втХозрасчетный.Количество
	|ПОМЕСТИТЬ втОбщаяТаблица
	|ИЗ
	|	втХозрасчетный КАК втХозрасчетный
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ_Дт
	|		ПО втХозрасчетный.СчетКт = втСчетаНУ_Дт.СчетБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ_Кт
	|		ПО втХозрасчетный.СчетДт = втСчетаНУ_Кт.СчетБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбщаяТаблица.СубконтоДт1 КАК СубконтоКт1,
	|	втОбщаяТаблица.СубконтоДт2 КАК СубконтоКт2,
	|	втОбщаяТаблица.СубконтоДт3 КАК СубконтоКт3,
	|	втОбщаяТаблица.Валюта,
	|	втОбщаяТаблица.ВалютнаяСумма,
	|	втОбщаяТаблица.Сумма,
	|	втОбщаяТаблица.СчетДт КАК СчетКт,
	|	втОбщаяТаблица.СчетКт КАК СчетДт,
	|	втОбщаяТаблица.СубконтоКт1 КАК СубконтоДт1,
	|	втОбщаяТаблица.СубконтоКт2 КАК СубконтоДт2,
	|	втОбщаяТаблица.СубконтоКт3 КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт1.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт2.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт3.Наименование
	|	КОНЕЦ КАК СубконтоКт_БУ_Договор,
	|	ВЫБОР
	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт1.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт2.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт3.Наименование
	|	КОНЕЦ КАК СубконтоДт_БУ_Договор,
	|	ВЫБОР
	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт1.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт2.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт3.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт1.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт2.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт3.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоДт1
	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоДт2
	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоДт3
	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоКт1
	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоКт2
	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоКт3
	|	КОНЕЦ КАК КонтрагентПриемник,
	|	втОбщаяТаблица.СчетДтНУ КАК СчетДтНУ,
	|	втОбщаяТаблица.СчетКтНУ КАК СчетКтНУ,
	|	втОбщаяТаблица.Количество
	|ИЗ
	|	втОбщаяТаблица КАК втОбщаяТаблица
	|ГДЕ
	|	втОбщаяТаблица.Сумма <> 0";

	
	
	МассивСчетов68_02  = Новый Массив;
	Для каждого Стр Из СчетаУчета Цикл
		Если Стр.СчетУчета = ПланыСчетов.Хозрасчетный.НДС Тогда
			МассивСчетов68_02.Добавить(ПланыСчетов.Хозрасчетный.НДС);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("НаДату", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Организация79", ОрганизацияПриемник);
	Запрос.УстановитьПараметр("МассивСчетов", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	Запрос.УстановитьПараметр("МассивСчетов68_02", МассивСчетов68_02);
	// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
	// 
	// {{Старый код:
	//Запрос.УстановитьПараметр("КорСчет", КорСчет);
	//Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
	// }}Новый код:
	Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
		Запрос.УстановитьПараметр("КорСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
		Запрос.УстановитьПараметр("КорСчетНУ", ПланыСчетов.Налоговый.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("КорСчет", КорСчет);
		Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
	КонецЕсли;	
	// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 	
	
	ТабличнаяЧасть.Загрузить(Запрос.Выполнить().Выгрузить());
	// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
	// Добавил проверку на забаланс. счета
	Если НЕ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
		Если ВидОперации <> Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
			Для Каждого Строка Из ТабличнаяЧасть Цикл
				
				
				Для Сч = 1 По 3 Цикл
					// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
					// ДобавляемСчетчики	
					СчетчикБУ = Сч-1;
					// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
					
					СубконтоБУДт = Строка["СубконтоДт" + Формат(Сч, "ЧЦ=1; ЧДЦ=0")];
					СубконтоБУКт = Строка["СубконтоКт" + Формат(Сч, "ЧЦ=1; ЧДЦ=0")];
					СубконтоДтНУЗаполнено = Ложь;
					СубконтоКтНУЗаполнено = Ложь;
					
						Для СчНУ = 1 По 3 Цикл
						// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
						// ДобавляемСчетчики	
						СчетчикНУ = СчНУ-1;	
						// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
						
						
						// {{KM WARE Малыгин П.К. Заявка № 16.11.2015 начало
						// Дополнительная проверка чтобы не выходить за границы массивов субконто
						// {{Старый код:
						//Если ЗначениеЗаполнено(СубконтоБУДт) Тогда
						// }}Новый код:
						Если ЗначениеЗаполнено(СубконтоБУДт) И СчНУ<=Строка.СчетДтНУ.ВидыСубконто.Количество()  Тогда
							// }}KM WARE Малыгин П.К. Заявка № 16.11.2015 окончание  
							
							//СубконтоНУ = Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Проверяем, что виды субконто совпадают
							СубконтаСчетаДТБУ =	Строка.СчетДт.ВидыСубконто[СчетчикБУ].ВидСубконто.ТипЗначения;
							СубконтоСчетаДТНУ = Строка.СчетДтНУ.ВидыСубконто[СчетчикНУ].ВидСубконто.ТипЗначения;
							Если СубконтаСчетаДТБУ = СубконтоСчетаДТНУ Тогда
								Если НЕ ЗначениеЗаполнено(Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоДтНУЗаполнено Тогда
									Строка["СубконтоДтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУДт;
									СубконтоДтНУЗаполнено = Истина;
								КонецЕсли;
								
							КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Требуется дополнительная проверка на соотвествие типов субконто
							//Если НЕ ЗначениеЗаполнено(Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоДтНУЗаполнено Тогда
							//	Строка["СубконтоДтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУДт;
							//	СубконтоДтНУЗаполнено = Истина;
							//КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
							
						КонецЕсли;
						// {{KM WARE Малыгин П.К. Заявка № 16.11.2015 начало
						// Дополнительная проверка чтобы не выходить за границы массивов субконто
						// {{Старый код:
						//Если ЗначениеЗаполнено(СубконтоБУКт) Тогда
						// }}Новый код:
						Если ЗначениеЗаполнено(СубконтоБУКт) И СчНУ<=Строка.СчетКтНУ.ВидыСубконто.Количество() Тогда 
							// }}KM WARE Малыгин П.К. Заявка № 16.11.2015 окончание 
							
							//СубконтоНУ = Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Проверяем, что виды субконто совпадают
							СубконтаСчетаКТБУ =	Строка.СчетКт.ВидыСубконто[СчетчикБУ].ВидСубконто.ТипЗначения;
							СубконтоСчетаКТНУ = Строка.СчетКтНУ.ВидыСубконто[СчетчикНУ].ВидСубконто.ТипЗначения;
							Если СубконтаСчетаКТБУ = СубконтоСчетаКТНУ Тогда
								Если НЕ ЗначениеЗаполнено(Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоКтНУЗаполнено Тогда
									Строка["СубконтоКтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУКт;
									СубконтоКтНУЗаполнено = Истина;
								КонецЕсли;
								
							КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Требуется дополнительная проверка на соотвествие типов субконто
							//СубконтоНУ = Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							//Если НЕ ЗначениеЗаполнено(Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоКтНУЗаполнено Тогда
							//	Строка["СубконтоКтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУКт;
							//	СубконтоКтНУЗаполнено = Истина;
							//КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
						КонецЕсли;	
						
					КонецЦикла;	
					Если ТипЗнч(СубконтоБУДт) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						Если НЕ ЗначениеЗаполнено(СубконтоБУДт.ДоговорПослеМиграции) Тогда
							// {{KM WARE Лазаревский К.В. Заявка № 15.10.2015 начало
							// создание новых договоров
							//Переделал на отдельную кнопку
							//Ошибки = Новый Структура;
							//абс_Филиализация.СоздатьЭлементДоговорыКонтрагентов(СубконтоБУДт, Организация, ОрганизацияПриемник, Ошибки);							
							// }}KM WARE Лазаревский К.В. Заявка № 15.10.2015 окончание							
						КонецЕсли;	
						Строка.ДоговорКонтрагентаПриемник = СубконтоБУДт.ДоговорПослеМиграции;
					ИначеЕсли ТипЗнч(СубконтоБУКт) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						Если НЕ ЗначениеЗаполнено(СубконтоБУКт.ДоговорПослеМиграции) Тогда
							// {{KM WARE Лазаревский К.В. Заявка № 15.10.2015 начало
							// создание новых договоров
							//Переделал на отдельную кнопку
							//Ошибки = Новый Структура;
							//абс_Филиализация.СоздатьЭлементДоговорыКонтрагентов(СубконтоБУКт, Организация, ОрганизацияПриемник, Ошибки);							
							// }}KM WARE Лазаревский К.В. Заявка № 15.10.2015 окончание							
						КонецЕсли;	
						Строка.ДоговорКонтрагентаПриемник = СубконтоБУКт.ДоговорПослеМиграции;
					КонецЕсли;
				КонецЦикла;
				
				// {{KM WARE Малыгин П.К. Заявка № 34610 12.11.2015 начало
				// Для ряда счетов нужно расчитывать НУ в разрезе ПБУ18
				// {{Старый код:
				//Строка.СуммаНУ = Строка.Сумма;
				// }}Новый код:
				Если kwr_РасчитыватьНуПрВр(Строка.СчетКтНУ) ИЛИ kwr_РасчитыватьНуПрВр(Строка.СчетДтНУ) Тогда
					kwr_ЗаполнитьДанные(Строка);	
				Иначе
					Строка.СуммаНУ = Строка.Сумма;	
				КонецЕсли;
				// }}KM WARE Малыгин П.К. Заявка № 34610 12.11.2015 окончание 
				
				// {{KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 начало
				// Для ряда счетов автоматически заполнять НУ не нужно
				НеЗаполнятьНУ = Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.НеЗаполнятьДанныеНУАвтоматически;
				Если KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетКтНУ,НеЗаполнятьНУ) ИЛИ KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетДтНУ,НеЗаполнятьНУ) Тогда
					Строка.СуммаНУ = 0;	
				Иначе
					Строка.СуммаНУ = Строка.Сумма;	
				КонецЕсли;
                // }}KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 окончание 
					
			КонецЦикла;	
			
			// {{KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 начало
			// Заполнение данных по счетам НУ, для которых не предусмотрено заполнение в соотвествии с аналитикой БУ.
			Если ОтборПоСчетамУчета.Количество() = 0 Тогда
			ТЗСчетовНуКТ = ТабличнаяЧасть.Выгрузить(,"СчетКтНУ"); 
			ТЗСчетовНуКТ.Свернуть("СчетКтНУ");
			ТЗСчетовНуДТ = ТабличнаяЧасть.Выгрузить(,"СчетДтНУ");
			ТЗСчетовНуДТ.Свернуть("СчетДтНУ");
			
			ТЗСчетов = НОВЫЙ ТаблицаЗначений;
			ТЗСчетов.Колонки.Добавить("СчетНУ");
			
			Для Каждого СтрокаКт ИЗ ТЗСчетовНуКТ Цикл
			СтрокаСчетов = ТЗСчетов.Добавить();
			СтрокаСчетов.СчетНУ = СтрокаКт.СчетКтНУ;
			КонецЦикла;	
			
			Для Каждого СтрокаКт ИЗ ТЗСчетовНуДТ Цикл
			СтрокаСчетов = ТЗСчетов.Добавить();
			СтрокаСчетов.СчетНУ = СтрокаКт.СчетДТНУ;
			КонецЦикла;	

			ТЗСчетов.Свернуть("СчетНУ");
            МассивСчетов = ТЗСчетов.ВыгрузитьКолонку("СчетНУ");
			ПереноситьНУОтдельноотБУ = Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ПереноситьНУОтдельноотБУ;
				
			Для Каждого СчетНУ из МассивСчетов Цикл
				Если KWR_ОсобыйПорядокОбработкиСчетов(СчетНУ,ПереноситьНУОтдельноотБУ) Тогда	
					
				KWR_ЗаполнитьНУОтдельно(СчетНУ,Организация,Дата,КорСчетНУ);	
					
				КонецЕсли;	
			КонецЦикла;	
            КонецЕсли; 			
			 // }}KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 окончание 

		КонецЕсли;
	КонецЕсли;
	// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 	
	// }}KM WARE Лазаревский К.В. Заявка № 18.08.2015 окончание 
	
КонецПроцедуры

Процедура ЗаполнитьРасчетныеОперацииСмигрированныеДоговора() Экспорт
	
	МассивСчетовПроверки = СчетаУчета.ВыгрузитьКолонку("СчетУчета");
	ЕстьКосяк = Ложь;
	Для Каждого СчетПроверки ИЗ МассивСчетовПроверки Цикл
		///////////////////////////////////////////////////////////////////////////////////////////////////////
		ЕстьДоговор = Ложь;	
		Для КоличествоСубконто = 1 По  СчетПроверки.ВидыСубконто.Количество() Цикл
			Если СчетПроверки.ВидыСубконто[КоличествоСубконто-1].ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры Тогда
				ЕстьДоговор = Истина;	
			КонецЕсли;
		КонецЦикла;	
		
		Если НЕ ЕстьДоговор Тогда
			Сообщить("По счету "+СчетПроверки+" нет субконто Договор - заполнение невозможно");
			ЕстьКосяк=Истина;
		КонецЕсли;
		///////////////////////////////////////////////////////////////////////////////////////////////////////
		
		Если KWR_ОсобыйПорядокОбработкиСчетов(СчетПроверки,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ЗапретитьСамостоятельноеИспользованиевАвизо) Тогда	
			Сообщить("Счет "+СчетПроверки+" не заполняется самостоятельно, удалите его из списка счетов");
			ЕстьКосяк = Истина;
			
			Если KWR_ОсобыйПорядокОбработкиСчетов(СчетПроверки,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.СчетНДССАвансовПолученных) Тогда
				Сообщить("Это счет НДС авансов, он заполняется по счетам авансов:");
				ЗапросСчетаАвансов = Новый Запрос;
				ЗапросСчетаАвансов.Текст =  "ВЫБРАТЬ
				|	kwr_СчетаАВИЗО_ОсобыйПорядок.Счет,
				|	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка
				|ИЗ
				|	РегистрСведений.kwr_СчетаАВИЗО_ОсобыйПорядок КАК kwr_СчетаАВИЗО_ОсобыйПорядок
				|ГДЕ                 
				|	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка = &ОсобаяОбработка";
				ЗапросСчетаАвансов.УстановитьПараметр("ОсобаяОбработка",Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.СчетАвансовПолученных);	
				РезультатСчетаАвансов = ЗапросСчетаАвансов.Выполнить().Выбрать();			
				Пока РезультатСчетаАвансов.Следующий() Цикл
					Сообщить(РезультатСчетаАвансов.Счет);
				КонецЦикла;	
			КонецЕсли;	
			
		КонецЕсли;
		
		
	КонецЦикла;
	
	Если ЕстьКосяк Тогда
		Возврат;
	КонецЕсли;
	
	
	КорСчетНУ = ПланыСчетов.Налоговый.ПустаяСсылка();
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	|			,
	|			СчетБУ = &КорСчет
	|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних";
	
	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		КорСчетНУ = ВыборкаДетальныеЗаписи.СчетНУ;	
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	// {{KM WARE Лазаревский К.В. Заявка № 18.08.2015 начало
	// изменение запроса по аналогии с миграцией договоров (внешние обработки/перенос остатков по договорам)
	// {{Старый код:
	
	//		"ВЫБРАТЬ
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто1
	//		|		ИНАЧЕ ХозрасчетныйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоДт1,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоДт2,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоДт3,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетДт,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетКт,
	//		|	ХозрасчетныйОстатки.Валюта,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	//		|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	//		|	КОНЕЦ КАК Сумма,
	//		|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСумма,
	//		|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	//		|	ХозрасчетныйОстатки.Счет КАК СчетБУ,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто1
	//		|		ИНАЧЕ ХозрасчетныйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоКт1,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоКт2,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА ХозрасчетныйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоКт3,
	//		|	ХозрасчетныйОстатки.Субконто1,
	//		|	ХозрасчетныйОстатки.Субконто2,
	//		|	ХозрасчетныйОстатки.Субконто3
	//		|ПОМЕСТИТЬ втХозрасчетный
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НаДату, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
	//// {{KM WARE Лазаревский К.В. Заявка № 17.08.2015 начало
	//// вызов функции 
	//		| " +ДополнитьТекстЗапросаОтборами(Запрос) + "
	//// }}KM WARE Лазаревский К.В. Заявка № 17.08.2015 окончание		
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	СубконтоДт1,
	//		|	СубконтоДт2,
	//		|	СубконтоДт3,
	//		|	СчетДт
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
	//		|			ТОГДА ХозрасчетныйОбороты.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетДт,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
	//		|			ТОГДА ХозрасчетныйОбороты.Счет
	//		|		ИНАЧЕ &КорСчет
	//		|	КОНЕЦ КАК СчетКт,
	//		|	ХозрасчетныйОбороты.Субконто1,
	//		|	ХозрасчетныйОбороты.Субконто2,
	//		|	ХозрасчетныйОбороты.Субконто3,
	//		|	ВЫБОР
	//		|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
	//		|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	//		|		ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
	//		|	КОНЕЦ КАК Сумма
	//		|ПОМЕСТИТЬ ОборотыПо68_02
	//		|ИЗ
	//		|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , , Счет В (&МассивСчетов68_02), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	//		|ПОМЕСТИТЬ втСчетаНУ
	//		|ИЗ
	//		|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	//		|			&НаДату,
	//		|			СчетБУ В ИЕРАРХИИ (&МассивСчетов)
	//		|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
	//		|
	//		|СГРУППИРОВАТЬ ПО
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
	//		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	//		|
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	СчетНУ
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоДтНУ1,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоДтНУ2,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоДтНУ3,
	//		|	втСчетаНУ.СчетБУ КАК СчетБУ,
	//		|	СУММА(ВЫБОР
	//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ)
	//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
	//		|			ИНАЧЕ 0
	//		|		КОНЕЦ) КАК СуммаНУ,
	//		|	СУММА(ВЫБОР
	//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
	//		|			ИНАЧЕ 0
	//		|		КОНЕЦ) КАК СуммаПР,
	//		|	СУММА(ВЫБОР
	//		|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	//		|				ТОГДА НалоговыйОстатки.СуммаОстаток
	//		|			ИНАЧЕ 0
	//		|		КОНЕЦ) КАК СуммаВР,
	//		|	НалоговыйОстатки.КоличествоОстаток КАК Количество,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ КАК СчетДтНУ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ КАК СчетКтНУ,
	//		|	НалоговыйОстатки.Субконто1,
	//		|	НалоговыйОстатки.Субконто2,
	//		|	НалоговыйОстатки.Субконто3,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ КАК СубконтоКтНУ1,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ КАК СубконтоКтНУ2,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ КАК СубконтоКтНУ3
	//		|ПОМЕСТИТЬ втНалоговый
	//		|ИЗ
	//		|	втСчетаНУ КАК втСчетаНУ
	//		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Остатки(&НаДату, , , Организация = &Организация) КАК НалоговыйОстатки
	//		|		ПО втСчетаНУ.СчетНУ = НалоговыйОстатки.Счет
	////		| " +ДополнитьТекстЗапросаОтборамиНУ(Запрос) + "
	//		|
	//		|СГРУППИРОВАТЬ ПО
	//		|	втСчетаНУ.СчетБУ,
	//		|	НалоговыйОстатки.КоличествоОстаток,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Счет
	//		|		ИНАЧЕ &КорСчетНУ
	//		|	КОНЕЦ,
	//		|	НалоговыйОстатки.Субконто2,
	//		|	НалоговыйОстатки.Субконто3,
	//		|	НалоговыйОстатки.Субконто1,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто2
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто3
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ,
	//		|	ВЫБОР
	//		|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	//		|			ТОГДА НалоговыйОстатки.Субконто1
	//		|		ИНАЧЕ НалоговыйОстатки.Организация
	//		|	КОНЕЦ
	//		|
	//		|ИНДЕКСИРОВАТЬ ПО
	//		|	СубконтоДтНУ1,
	//		|	СубконтоДтНУ2,
	//		|	СубконтоДтНУ3,
	//		|	СчетБУ
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	втХозрасчетный.СубконтоДт1 КАК СубконтоДт1,
	//		|	втХозрасчетный.СубконтоДт2 КАК СубконтоДт2,
	//		|	втХозрасчетный.СубконтоДт3 КАК СубконтоДт3,
	//		|	втХозрасчетный.Валюта,
	//		|	втНалоговый.СуммаНУ,
	//		|	втНалоговый.СуммаПР,
	//		|	втНалоговый.СуммаВР,
	//		|	втХозрасчетный.ВалютнаяСумма,
	//		|	втХозрасчетный.Сумма,
	//		|	ЕСТЬNULL(втХозрасчетный.Количество, втНалоговый.Количество) КАК Количество,
	//		|	втХозрасчетный.СчетДт,
	//		|	втХозрасчетный.СчетКт,
	//		|	втНалоговый.СчетДтНУ,
	//		|	втНалоговый.СчетКтНУ,
	//		|	втХозрасчетный.СубконтоКт1,
	//		|	втХозрасчетный.СубконтоКт2,
	//		|	втХозрасчетный.СубконтоКт3,
	//		|	втНалоговый.СубконтоДтНУ1,
	//		|	втНалоговый.СубконтоДтНУ2,
	//		|	втНалоговый.СубконтоДтНУ3,
	//		|	втНалоговый.СубконтоКтНУ1,
	//		|	втНалоговый.СубконтоКтНУ2,
	//		|	втНалоговый.СубконтоКтНУ3
	//		|ПОМЕСТИТЬ втОбщаяТаблица
	//		|ИЗ
	//		|	втХозрасчетный КАК втХозрасчетный
	//		|		ПОЛНОЕ СОЕДИНЕНИЕ втНалоговый КАК втНалоговый
	//		|		ПО втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
	//		|			И втХозрасчетный.Субконто1 = втНалоговый.Субконто1
	//		|			И (ВЫБОР
	//		|				КОГДА НЕ втХозрасчетный.Субконто2 ЕСТЬ NULL 
	//		|					ТОГДА втХозрасчетный.Субконто2 = втНалоговый.Субконто2
	//		|				ИНАЧЕ ИСТИНА
	//		|			КОНЕЦ)
	//		|			И (ВЫБОР
	//		|				КОГДА НЕ втХозрасчетный.Субконто3 ЕСТЬ NULL 
	//		|					ТОГДА втХозрасчетный.Субконто3 = втНалоговый.Субконто3
	//		|				ИНАЧЕ ИСТИНА
	//		|			КОНЕЦ)
	//		|			И втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
	//		|
	//		|ОБЪЕДИНИТЬ ВСЕ
	//		|
	//		|ВЫБРАТЬ
	//		|	ОборотыПо68_02.Субконто1,
	//		|	ОборотыПо68_02.Субконто2,
	//		|	ОборотыПо68_02.Субконто3,
	//		|	NULL,
	//		|	0,
	//		|	0,
	//		|	0,
	//		|	0,
	//		|	ОборотыПо68_02.Сумма,
	//		|	0,
	//		|	ОборотыПо68_02.СчетДт,
	//		|	ОборотыПо68_02.СчетКт,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL,
	//		|	NULL
	//		|ИЗ
	//		|	ОборотыПо68_02 КАК ОборотыПо68_02
	//		|;
	//		|
	//		|////////////////////////////////////////////////////////////////////////////////
	//		|ВЫБРАТЬ
	//		|	втОбщаяТаблица.СубконтоДт1 КАК СубконтоКт1,
	//		|	втОбщаяТаблица.СубконтоДт2 КАК СубконтоКт2,
	//		|	втОбщаяТаблица.СубконтоДт3 КАК СубконтоКт3,
	//		|	втОбщаяТаблица.Валюта,
	//		|	втОбщаяТаблица.СуммаНУ,
	//		|	втОбщаяТаблица.СуммаПР,
	//		|	втОбщаяТаблица.СуммаВР,
	//		|	втОбщаяТаблица.ВалютнаяСумма,
	//		|	втОбщаяТаблица.Сумма,
	//		|	втОбщаяТаблица.Количество,
	//		|	втОбщаяТаблица.СчетДт КАК СчетКт,
	//		|	втОбщаяТаблица.СчетКт КАК СчетДт,
	//		|	втОбщаяТаблица.СчетДтНУ КАК СчетКтНУ,
	//		|	втОбщаяТаблица.СчетКтНУ КАК СчетДтНУ,
	//		|	втОбщаяТаблица.СубконтоКт1 КАК СубконтоДт1,
	//		|	втОбщаяТаблица.СубконтоКт2 КАК СубконтоДт2,
	//		|	втОбщаяТаблица.СубконтоКт3 КАК СубконтоДт3,
	//		|	втОбщаяТаблица.СубконтоДтНУ1 КАК СубконтоКтНУ1,
	//		|	втОбщаяТаблица.СубконтоДтНУ2 КАК СубконтоКтНУ2,
	//		|	втОбщаяТаблица.СубконтоДтНУ3 КАК СубконтоКтНУ3,
	//		|	втОбщаяТаблица.СубконтоКтНУ1 КАК СубконтоДтНУ1,
	//		|	втОбщаяТаблица.СубконтоКтНУ2 КАК СубконтоДтНУ2,
	//		|	втОбщаяТаблица.СубконтоКтНУ3 КАК СубконтоДтНУ3,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Наименование
	//		|	КОНЕЦ КАК СубконтоКт_БУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Наименование
	//		|	КОНЕЦ КАК СубконтоДт_БУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоДтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДтНУ3.Наименование
	//		|	КОНЕЦ КАК СубконтоКт_НУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ1.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ2.Наименование
	//		|		КОГДА втОбщаяТаблица.СубконтоКтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКтНУ3.Наименование
	//		|	КОНЕЦ КАК СубконтоДт_НУ_Договор,
	//		|	ВЫБОР
	//		|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт1.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт2.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоДт3.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт1.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт2.Владелец
	//		|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	//		|			ТОГДА втОбщаяТаблица.СубконтоКт3.Владелец
	//		|	КОНЕЦ КАК КонтрагентПриемник
	//		|ИЗ
	//		|	втОбщаяТаблица КАК втОбщаяТаблица";
	//
	//	МассивСчетов68_02  = Новый Массив;
	//	Для каждого Стр Из СчетаУчета Цикл
	//		Если Стр.СчетУчета = ПланыСчетов.Хозрасчетный.НДС Тогда
	//			МассивСчетов68_02.Добавить(ПланыСчетов.Хозрасчетный.НДС);
	//		КонецЕсли;
	//	КонецЦикла;
	//		
	//	Запрос.УстановитьПараметр("НаДату", Дата);
	//	Запрос.УстановитьПараметр("Организация", Организация);
	//	Запрос.УстановитьПараметр("МассивСчетов", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	//	Запрос.УстановитьПараметр("МассивСчетов68_02", МассивСчетов68_02);
	//	Запрос.УстановитьПараметр("КорСчет", КорСчет);
	//	Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
	//	ТабличнаяЧасть.Загрузить(Запрос.Выполнить().Выгрузить());
	
	//}}Новый код
	
		"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|	ХозрасчетныйОстатки.Субконто3,
	|	ХозрасчетныйОстатки.Организация,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.Валюта, ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)) КАК Валюта,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаОстаток,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК СуммаОстатокДт,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаОстатокКт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт КАК СуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт КАК СуммаРазвернутыйОстатокКт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСуммаОстаток,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт КАК ВалютнаяСуммаОстатокДт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт КАК ВалютнаяСуммаОстатокКт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокДт КАК ВалютнаяСуммаРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокКт КАК ВалютнаяСуммаРазвернутыйОстатокКт,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ХозрасчетныйОстатки.КоличествоОстатокДт КАК КоличествоОстатокДт,
	|	ХозрасчетныйОстатки.КоличествоОстатокКт КАК КоличествоОстатокКт,
	|	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокДт КАК КоличествоРазвернутыйОстатокДт,
	|	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокКт КАК КоличествоРазвернутыйОстатокКт,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто1 КАК Справочник.ДоговорыКонтрагентов)) <> &ПустойДоговор
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто2 КАК Справочник.ДоговорыКонтрагентов)) <> &ПустойДоговор
	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	|		КОГДА (ВЫРАЗИТЬ(ХозрасчетныйОстатки.Субконто3 КАК Справочник.ДоговорыКонтрагентов)) <> &ПустойДоговор
	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоговорПоСубконто
	|ПОМЕСТИТЬ вт_врем_врем
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НаДату,
	|			Счет В ИЕРАРХИИ (&МассивСчетов),
	|			,
	|			Организация = &Организация) КАК ХозрасчетныйОстатки
	|"+ДополнитьТекстЗапросаОтборами(Запрос) + "
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_врем_врем.Счет,
	|	вт_врем_врем.Субконто1,
	|	вт_врем_врем.Субконто2,
	|	вт_врем_врем.Субконто3,
	|	вт_врем_врем.Организация,
	|	вт_врем_врем.Валюта,
	|	вт_врем_врем.СуммаОстаток,
	|	вт_врем_врем.СуммаОстатокДт,
	|	вт_врем_врем.СуммаОстатокКт,
	|	вт_врем_врем.СуммаРазвернутыйОстатокДт,
	|	вт_врем_врем.СуммаРазвернутыйОстатокКт,
	|	вт_врем_врем.ВалютнаяСуммаОстаток,
	|	вт_врем_врем.ВалютнаяСуммаОстатокДт,
	|	вт_врем_врем.ВалютнаяСуммаОстатокКт,
	|	вт_врем_врем.ВалютнаяСуммаРазвернутыйОстатокДт,
	|	вт_врем_врем.ВалютнаяСуммаРазвернутыйОстатокКт,
	|	вт_врем_врем.КоличествоОстаток,
	|	вт_врем_врем.КоличествоОстатокДт,
	|	вт_врем_врем.КоличествоОстатокКт,
	|	вт_врем_врем.КоличествоРазвернутыйОстатокДт,
	|	вт_врем_врем.КоличествоРазвернутыйОстатокКт,
	|	вт_врем_врем.ДоговорПоСубконто
	|ПОМЕСТИТЬ вт_врем
	|ИЗ
	|	вт_врем_врем КАК вт_врем_врем
	|ГДЕ
	|	вт_врем_врем.ДоговорПоСубконто.ДоговорПослеМиграции <> &ПустойДоговор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	вт_врем.Счет,
	|	вт_врем.Субконто1,
	|	вт_врем.Субконто2,
	|	вт_врем.Субконто3,
	|	вт_врем.Организация,
	|	вт_врем.Валюта,
	|	СУММА(вт_врем.СуммаОстаток) КАК СуммаОстаток,
	|	СУММА(вт_врем.СуммаОстатокДт) КАК СуммаОстатокДт,
	|	СУММА(вт_врем.СуммаОстатокКт) КАК СуммаОстатокКт,
	|	СУММА(вт_врем.СуммаРазвернутыйОстатокДт) КАК СуммаРазвернутыйОстатокДт,
	|	СУММА(вт_врем.СуммаРазвернутыйОстатокКт) КАК СуммаРазвернутыйОстатокКт,
	|	СУММА(вт_врем.ВалютнаяСуммаОстаток) КАК ВалютнаяСуммаОстаток,
	|	СУММА(вт_врем.ВалютнаяСуммаОстатокДт) КАК ВалютнаяСуммаОстатокДт,
	|	СУММА(вт_врем.ВалютнаяСуммаОстатокКт) КАК ВалютнаяСуммаОстатокКт,
	|	СУММА(вт_врем.ВалютнаяСуммаРазвернутыйОстатокДт) КАК ВалютнаяСуммаРазвернутыйОстатокДт,
	|	СУММА(вт_врем.ВалютнаяСуммаРазвернутыйОстатокКт) КАК ВалютнаяСуммаРазвернутыйОстатокКт,
	|	СУММА(вт_врем.КоличествоОстаток) КАК КоличествоОстаток,
	|	СУММА(вт_врем.КоличествоОстатокДт) КАК КоличествоОстатокДт,
	|	СУММА(вт_врем.КоличествоОстатокКт) КАК КоличествоОстатокКт,
	|	СУММА(вт_врем.КоличествоРазвернутыйОстатокДт) КАК КоличествоРазвернутыйОстатокДт,
	|	СУММА(вт_врем.КоличествоРазвернутыйОстатокКт) КАК КоличествоРазвернутыйОстатокКт
	|ПОМЕСТИТЬ ХозрасчетныйОстатки
	|ИЗ
	|	вт_врем КАК вт_врем
	|
	|СГРУППИРОВАТЬ ПО
	|	вт_врем.Счет,
	|	вт_врем.Субконто1,
	|	вт_врем.Субконто2,
	|	вт_врем.Субконто3,
	|	вт_врем.Организация,
	|	вт_врем.Валюта
	|
	|ИМЕЮЩИЕ
	|	СУММА(вт_врем.СуммаОстаток) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА &Организация79
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто1
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокДт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ &Организация79
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоДт1,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто2
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокДт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоДт2,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто3
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокДт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоДт3,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА ХозрасчетныйОстатки.Счет
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА &КорСчет
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|					ТОГДА ХозрасчетныйОстатки.Счет
	|				ИНАЧЕ &КорСчет
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетДт,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Счет
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА &КорСчет
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Счет
	|				ИНАЧЕ &КорСчет
	|			КОНЕЦ
	|	КОНЕЦ КАК СчетКт,
	|	ХозрасчетныйОстатки.Валюта,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	|	КОНЕЦ КАК Сумма,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСумма,
	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	|	ХозрасчетныйОстатки.Счет КАК СчетБУ,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА &Организация79
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто1
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокКт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|				ИНАЧЕ &Организация79
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто2
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокКт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоКт2,
	|	ВЫБОР
	// {{KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 начало
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	|		КОГДА ХозрасчетныйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ВЫБОР
	// }}KM WARE Лазаревский К.В. Заявка №35492 24.11.2015 окончание
	|				КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|					ТОГДА ХозрасчетныйОстатки.Субконто3
	|				КОГДА ХозрасчетныйОстатки.Счет.Забалансовый = ИСТИНА
	|						И ХозрасчетныйОстатки.СуммаОстатокКт < 0
	|					ТОГДА НЕОПРЕДЕЛЕНО
	|			КОНЕЦ
	|	КОНЕЦ КАК СубконтоКт3,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.Субконто2,
	|ХозрасчетныйОстатки.Субконто3
	|ПОМЕСТИТЬ втХозрасчетный
	|ИЗ
	|	ХозрасчетныйОстатки КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СубконтоДт1,
	|	СубконтоДт2,
	|	СубконтоДт3,
	|	СчетДт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	|ПОМЕСТИТЬ втСчетаНУ
	|ИЗ
	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(&НаДату, Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
	|
	|СГРУППИРОВАТЬ ПО
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
	|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетНУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втХозрасчетный.СубконтоДт1 КАК СубконтоДт1,
	|	втХозрасчетный.СубконтоДт2 КАК СубконтоДт2,
	|	втХозрасчетный.СубконтоДт3 КАК СубконтоДт3,
	|	втХозрасчетный.Валюта,
	|	втХозрасчетный.ВалютнаяСумма,
	|	втХозрасчетный.Сумма,
	|	втХозрасчетный.СчетДт,
	|	втХозрасчетный.СчетКт,
	|	втХозрасчетный.СубконтоКт1,
	|	втХозрасчетный.СубконтоКт2,
	|	втХозрасчетный.СубконтоКт3,
	|	втСчетаНУ_Дт.СчетНУ КАК СчетДтНУ,
	|	втСчетаНУ_Кт.СчетНУ КАК СчетКтНУ,
	|	втХозрасчетный.Количество
	|ПОМЕСТИТЬ втОбщаяТаблица
	|ИЗ
	|	втХозрасчетный КАК втХозрасчетный
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ_Дт
	|		ПО втХозрасчетный.СчетКт = втСчетаНУ_Дт.СчетБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ_Кт
	|		ПО втХозрасчетный.СчетДт = втСчетаНУ_Кт.СчетБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбщаяТаблица.СубконтоДт1 КАК СубконтоКт1,
	|	втОбщаяТаблица.СубконтоДт2 КАК СубконтоКт2,
	|	втОбщаяТаблица.СубконтоДт3 КАК СубконтоКт3,
	|	втОбщаяТаблица.Валюта,
	|	втОбщаяТаблица.ВалютнаяСумма,
	|	втОбщаяТаблица.Сумма,
	|	втОбщаяТаблица.СчетДт КАК СчетКт,
	|	втОбщаяТаблица.СчетКт КАК СчетДт,
	|	втОбщаяТаблица.СубконтоКт1 КАК СубконтоДт1,
	|	втОбщаяТаблица.СубконтоКт2 КАК СубконтоДт2,
	|	втОбщаяТаблица.СубконтоКт3 КАК СубконтоДт3,
	|	ВЫБОР
	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт1.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт2.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт3.Наименование
	|	КОНЕЦ КАК СубконтоКт_БУ_Договор,
	|	ВЫБОР
	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт1.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт2.Наименование
	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт3.Наименование
	|	КОНЕЦ КАК СубконтоДт_БУ_Договор,
	|	ВЫБОР
	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт1.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт2.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоДт3.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт1.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт2.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	|			ТОГДА втОбщаяТаблица.СубконтоКт3.Владелец
	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоДт1
	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоДт2
	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоДт3
	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоКт1
	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоКт2
	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.Контрагенты
	|			ТОГДА втОбщаяТаблица.СубконтоКт3
	|	КОНЕЦ КАК КонтрагентПриемник,
	|	втОбщаяТаблица.СчетДтНУ КАК СчетДтНУ,
	|	втОбщаяТаблица.СчетКтНУ КАК СчетКтНУ,
	|	втОбщаяТаблица.Количество
	|ИЗ
	|	втОбщаяТаблица КАК втОбщаяТаблица
	|ГДЕ
	|	втОбщаяТаблица.Сумма <> 0
	|УПОРЯДОЧИТЬ ПО
	|СчетДт,
	|СчетКт
	|";

	
	
	МассивСчетов68_02  = Новый Массив;
	Для каждого Стр Из СчетаУчета Цикл
		Если Стр.СчетУчета = ПланыСчетов.Хозрасчетный.НДС Тогда
			МассивСчетов68_02.Добавить(ПланыСчетов.Хозрасчетный.НДС);
		КонецЕсли;
	КонецЦикла;
	
	Запрос.УстановитьПараметр("НаДату", Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Организация79", ОрганизацияПриемник);
	Запрос.УстановитьПараметр("МассивСчетов", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	Запрос.УстановитьПараметр("МассивСчетов68_02", МассивСчетов68_02);
	
	Запрос.УстановитьПараметр("ПустойДоговор", Справочники.ДоговорыКонтрагентов.ПустаяСсылка());
	
	// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
	// 
	// {{Старый код:
	//Запрос.УстановитьПараметр("КорСчет", КорСчет);
	//Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
	// }}Новый код:
	Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
		Запрос.УстановитьПараметр("КорСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
		Запрос.УстановитьПараметр("КорСчетНУ", ПланыСчетов.Налоговый.ПустаяСсылка());
	Иначе
		Запрос.УстановитьПараметр("КорСчет", КорСчет);
		Запрос.УстановитьПараметр("КорСчетНУ", КорСчетНУ);
	КонецЕсли;	
	// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 	
	
	ТабличнаяЧасть.Загрузить(Запрос.Выполнить().Выгрузить());
	// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
	// Добавил проверку на забаланс. счета
	Если НЕ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
		Если ВидОперации <> Перечисления.абс_ВидыОперацийАвизо.ПеремещениеИмуществаЗабаланс Тогда
			Для Каждого Строка Из ТабличнаяЧасть Цикл
				
				
				Для Сч = 1 По 3 Цикл
					// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
					// ДобавляемСчетчики	
					СчетчикБУ = Сч-1;
					// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
					
					СубконтоБУДт = Строка["СубконтоДт" + Формат(Сч, "ЧЦ=1; ЧДЦ=0")];
					СубконтоБУКт = Строка["СубконтоКт" + Формат(Сч, "ЧЦ=1; ЧДЦ=0")];
					СубконтоДтНУЗаполнено = Ложь;
					СубконтоКтНУЗаполнено = Ложь;
					
						Для СчНУ = 1 По 3 Цикл
						// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
						// ДобавляемСчетчики	
						СчетчикНУ = СчНУ-1;	
						// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
						
						
						// {{KM WARE Малыгин П.К. Заявка № 16.11.2015 начало
						// Дополнительная проверка чтобы не выходить за границы массивов субконто
						// {{Старый код:
						//Если ЗначениеЗаполнено(СубконтоБУДт) Тогда
						// }}Новый код:
						Если ЗначениеЗаполнено(СубконтоБУДт) И СчНУ<=Строка.СчетДтНУ.ВидыСубконто.Количество()  Тогда
							// }}KM WARE Малыгин П.К. Заявка № 16.11.2015 окончание  
							
							//СубконтоНУ = Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Проверяем, что виды субконто совпадают
							СубконтаСчетаДТБУ =	Строка.СчетДт.ВидыСубконто[СчетчикБУ].ВидСубконто.ТипЗначения;
							СубконтоСчетаДТНУ = Строка.СчетДтНУ.ВидыСубконто[СчетчикНУ].ВидСубконто.ТипЗначения;
							Если СубконтаСчетаДТБУ = СубконтоСчетаДТНУ Тогда
								Если НЕ ЗначениеЗаполнено(Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоДтНУЗаполнено Тогда
									Строка["СубконтоДтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУДт;
									СубконтоДтНУЗаполнено = Истина;
								КонецЕсли;
								
							КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Требуется дополнительная проверка на соотвествие типов субконто
							//Если НЕ ЗначениеЗаполнено(Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоДтНУЗаполнено Тогда
							//	Строка["СубконтоДтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУДт;
							//	СубконтоДтНУЗаполнено = Истина;
							//КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
							
						КонецЕсли;
						// {{KM WARE Малыгин П.К. Заявка № 16.11.2015 начало
						// Дополнительная проверка чтобы не выходить за границы массивов субконто
						// {{Старый код:
						//Если ЗначениеЗаполнено(СубконтоБУКт) Тогда
						// }}Новый код:
						Если ЗначениеЗаполнено(СубконтоБУКт) И СчНУ<=Строка.СчетКтНУ.ВидыСубконто.Количество() Тогда 
							// }}KM WARE Малыгин П.К. Заявка № 16.11.2015 окончание 
							
							//СубконтоНУ = Строка["СубконтоДтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Проверяем, что виды субконто совпадают
							СубконтаСчетаКТБУ =	Строка.СчетКт.ВидыСубконто[СчетчикБУ].ВидСубконто.ТипЗначения;
							СубконтоСчетаКТНУ = Строка.СчетКтНУ.ВидыСубконто[СчетчикНУ].ВидСубконто.ТипЗначения;
							Если СубконтаСчетаКТБУ = СубконтоСчетаКТНУ Тогда
								Если НЕ ЗначениеЗаполнено(Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоКтНУЗаполнено Тогда
									Строка["СубконтоКтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУКт;
									СубконтоКтНУЗаполнено = Истина;
								КонецЕсли;
								
							КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
							// {{KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 начало
							// Требуется дополнительная проверка на соотвествие типов субконто
							//СубконтоНУ = Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")];
							//Если НЕ ЗначениеЗаполнено(Строка["СубконтоКтНУ" + Формат(СчНУ, "ЧЦ=1; ЧДЦ=0")]) И НЕ СубконтоКтНУЗаполнено Тогда
							//	Строка["СубконтоКтНУ" + Формат(СчНу, "ЧЦ=1; ЧДЦ=0")] = СубконтоБУКт;
							//	СубконтоКтНУЗаполнено = Истина;
							//КонецЕсли;
							// }}KM WARE Малыгин П.К. Заявка № 35332 16.11.2015 окончание
							
						КонецЕсли;	
						
					КонецЦикла;	
					Если ТипЗнч(СубконтоБУДт) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						Если НЕ ЗначениеЗаполнено(СубконтоБУДт.ДоговорПослеМиграции) Тогда
							// {{KM WARE Лазаревский К.В. Заявка № 15.10.2015 начало
							// создание новых договоров
							//Переделал на отдельную кнопку
							//Ошибки = Новый Структура;
							//абс_Филиализация.СоздатьЭлементДоговорыКонтрагентов(СубконтоБУДт, Организация, ОрганизацияПриемник, Ошибки);							
							// }}KM WARE Лазаревский К.В. Заявка № 15.10.2015 окончание							
						КонецЕсли;	
						Строка.ДоговорКонтрагентаПриемник = СубконтоБУДт.ДоговорПослеМиграции;
					ИначеЕсли ТипЗнч(СубконтоБУКт) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда
						Если НЕ ЗначениеЗаполнено(СубконтоБУКт.ДоговорПослеМиграции) Тогда
							// {{KM WARE Лазаревский К.В. Заявка № 15.10.2015 начало
							// создание новых договоров
							//Переделал на отдельную кнопку
							//Ошибки = Новый Структура;
							//абс_Филиализация.СоздатьЭлементДоговорыКонтрагентов(СубконтоБУКт, Организация, ОрганизацияПриемник, Ошибки);							
							// }}KM WARE Лазаревский К.В. Заявка № 15.10.2015 окончание							
						КонецЕсли;	
						Строка.ДоговорКонтрагентаПриемник = СубконтоБУКт.ДоговорПослеМиграции;
					КонецЕсли;
				КонецЦикла;
				
				// {{KM WARE Малыгин П.К. Заявка № 34610 12.11.2015 начало
				// Для ряда счетов нужно расчитывать НУ в разрезе ПБУ18
				// {{Старый код:
				//Строка.СуммаНУ = Строка.Сумма;
				// }}Новый код:
				Если kwr_РасчитыватьНуПрВр(Строка.СчетКтНУ) ИЛИ kwr_РасчитыватьНуПрВр(Строка.СчетДтНУ) Тогда
					kwr_ЗаполнитьДанные(Строка);	
				Иначе
					Строка.СуммаНУ = Строка.Сумма;	
				КонецЕсли;
				// }}KM WARE Малыгин П.К. Заявка № 34610 12.11.2015 окончание 
				
				// {{KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 начало
				// Для ряда счетов автоматически заполнять НУ не нужно
				НеЗаполнятьНУ = Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.НеЗаполнятьДанныеНУАвтоматически;
				Если KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетКтНУ,НеЗаполнятьНУ) ИЛИ KWR_ОсобыйПорядокОбработкиСчетов(Строка.СчетДтНУ,НеЗаполнятьНУ) Тогда
					Строка.СуммаНУ = 0;	
				Иначе
					Строка.СуммаНУ = Строка.Сумма;	
				КонецЕсли;
                // }}KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 окончание 
					
			КонецЦикла;	
			
			// {{KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 начало
			// Заполнение данных по счетам НУ, для которых не предусмотрено заполнение в соотвествии с аналитикой БУ.
			Если ОтборПоСчетамУчета.Количество() = 0 Тогда
			ТЗСчетовНуКТ = ТабличнаяЧасть.Выгрузить(,"СчетКтНУ"); 
			ТЗСчетовНуКТ.Свернуть("СчетКтНУ");
			ТЗСчетовНуДТ = ТабличнаяЧасть.Выгрузить(,"СчетДтНУ");
			ТЗСчетовНуДТ.Свернуть("СчетДтНУ");
			
			ТЗСчетов = НОВЫЙ ТаблицаЗначений;
			ТЗСчетов.Колонки.Добавить("СчетНУ");
			
			Для Каждого СтрокаКт ИЗ ТЗСчетовНуКТ Цикл
			СтрокаСчетов = ТЗСчетов.Добавить();
			СтрокаСчетов.СчетНУ = СтрокаКт.СчетКтНУ;
			КонецЦикла;	
			
			Для Каждого СтрокаКт ИЗ ТЗСчетовНуДТ Цикл
			СтрокаСчетов = ТЗСчетов.Добавить();
			СтрокаСчетов.СчетНУ = СтрокаКт.СчетДТНУ;
			КонецЦикла;	

			ТЗСчетов.Свернуть("СчетНУ");
            МассивСчетов = ТЗСчетов.ВыгрузитьКолонку("СчетНУ");
			ПереноситьНУОтдельноотБУ = Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.ПереноситьНУОтдельноотБУ;
				
			Для Каждого СчетНУ из МассивСчетов Цикл
				Если KWR_ОсобыйПорядокОбработкиСчетов(СчетНУ,ПереноситьНУОтдельноотБУ) Тогда	
					
				KWR_ЗаполнитьНУОтдельно(СчетНУ,Организация,Дата,КорСчетНУ);	
					
				КонецЕсли;	
			КонецЦикла;	
            КонецЕсли; 			
			 // }}KM WARE Малыгин П.К. Заявка № 35492 18.12.2015 окончание 

		КонецЕсли;
	КонецЕсли;
	// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 	
	// }}KM WARE Лазаревский К.В. Заявка № 18.08.2015 окончание 
	
КонецПроцедуры


// Дополняем табличную часть счетами, по которым запрещено самостоятельное заполнение
//
// {{KM WARE Малыгин П.К. Заявка № 22.12.2015 начало
Процедура kwr_ЗаполнитьПодчиненныеСчета() Экспорт
	//Заполняем НДС по авансам полученым
	ЗапросСчетАвансовНДС = Новый Запрос;
	ЗапросСчетАвансовНДС.Текст = "ВЫБРАТЬ
	                             |	kwr_СчетаАВИЗО_ОсобыйПорядок.Счет,
	                             |	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка
	                             |ИЗ
	                             |	РегистрСведений.kwr_СчетаАВИЗО_ОсобыйПорядок КАК kwr_СчетаАВИЗО_ОсобыйПорядок
	                             |ГДЕ
	                             |	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка = &АвансыНДС";
	ЗапросСчетАвансовНДС.УстановитьПараметр("АвансыНДС",Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.СчетНДССАвансовПолученных);
	Результат = ЗапросСчетАвансовНДС.Выполнить().Выбрать();
	Если Результат.Количество()=1 Тогда
	Результат.Следующий();
	
	СчетАвансов = Результат.Счет;	
	ИначеЕсли Результат.Количество()>1 Тогда 
	Сообщить("Больше одного счета НДС полученных авансов. Ошибка!");
	Возврат;
	ИначеЕсли Результат.Количество()=0 Тогда 
    Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаРасчетов ИЗ ТабличнаяЧасть Цикл
		Если СтрокаРасчетов.СчетКт = КорСчет И KWR_ОсобыйПорядокОбработкиСчетов(СтрокаРасчетов.СчетДт,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.СчетАвансовПолученных) Тогда
		ЗаполнитьНДСАвансов(СтрокаРасчетов,СтрокаРасчетов.СчетДт,СтрокаРасчетов.СубконтоДт1,СтрокаРасчетов.СубконтоДт2,СтрокаРасчетов.СубконтоДт3,СчетАвансов);
		
		//ОбработкаПрерыванияПользователя();
		
		ИначеЕсли СтрокаРасчетов.СчетДт = КорСчет И KWR_ОсобыйПорядокОбработкиСчетов(СтрокаРасчетов.СчетКт,Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.СчетАвансовПолученных) Тогда	
		ЗаполнитьНДСАвансов(СтрокаРасчетов,СтрокаРасчетов.СчетКт,СтрокаРасчетов.СубконтоКт1,СтрокаРасчетов.СубконтоКт2,СтрокаРасчетов.СубконтоКт3,СчетАвансов);
		КонецЕсли;	
	КонецЦикла;	
	///////////////////////////////////////////////////////////////////////////////////////////////////
	
	
КонецПроцедуры // kwr_ЗаполнитьПодчиненныеСчета() }}KM WARE Малыгин П.К. Заявка № 22.12.2015 окончание


// {{KM WARE Малыгин П.К. Заявка № 22.12.2015 начало
Процедура ЗаполнитьНДСАвансов(СтрокаРасчетов,Счет,Субконто1,Субконто2,Субконто3,СчетАвансов)
	Запрос = Новый Запрос;
	
	Контрагент = Неопределено;
	Договор = Неопределено;
	
	Если  ТипЗнч(Субконто1) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Контрагент = Субконто1;	
	ИначеЕсли ТипЗнч(Субконто2) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Контрагент = Субконто2;	
	ИначеЕсли ТипЗнч(Субконто3) = Тип("СправочникСсылка.Контрагенты") Тогда 
		Контрагент = Субконто3;		
	КонецЕсли;
	
	Если  ТипЗнч(Субконто1) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда 
		Договор = Субконто1;	
	ИначеЕсли ТипЗнч(Субконто2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда 
		Договор = Субконто2;	
	ИначеЕсли ТипЗнч(Субконто3) = Тип("СправочникСсылка.ДоговорыКонтрагентов") Тогда 
		Договор = Субконто3;		
	КонецЕсли;
	
	
	Если НЕ ЗначениеЗаполнено(Контрагент) ИЛИ НЕ ЗначениеЗаполнено(Договор) Тогда
		Сообщить("Ошибка в строке:"+СтрокаРасчетов.НомерСтроки + " По данной строке нет нужной аналитики");	
		Возврат;
	КонецЕсли;	
	
	
	
	Запрос.Текст = "ВЫБРАТЬ
	|	НДСсАвансовОстатки.Организация,
	|	НДСсАвансовОстатки.СчетФактура,
	|	НДСсАвансовОстатки.ДоговорКонтрагента,
	|	НДСсАвансовОстатки.СуммаБезНДСОстаток,
	|	НДСсАвансовОстатки.НДСОстаток
	|ИЗ
	|	РегистрНакопления.НДСсАвансов.Остатки(
	|			&Дата,
	|			Организация = &Организация
	|				И Покупатель = &Контрагент
	|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК НДСсАвансовОстатки";
	
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("Контрагент",Контрагент);
	Запрос.УстановитьПараметр("ДоговорКонтрагента",Договор);
	Запрос.УстановитьПараметр("Дата",Дата);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого СтрокаРезультат ИЗ Результат Цикл
		НоваяСтрокаТЗ = ТабличнаяЧасть.Добавить();
		
		Если СчетАвансов.Вид =  ВидСчета.Пассивный Тогда
			НоваяСтрокаТЗ.СчетДт =СчетАвансов; 
			НоваяСтрокаТЗ.СчетКт =КорСчет; 	
			НоваяСтрокаТЗ.СубконтоКт1 = Организация;
			
			НоваяСтрокаТЗ.kwr_ДоговорКонтрагентаИсточник =СтрокаРезультат.ДоговорКонтрагента; 	
			НоваяСтрокаТЗ.ДоговорКонтрагентаПриемник =НоваяСтрокаТЗ.kwr_ДоговорКонтрагентаИсточник.ДоговорПослеМиграции; 	
			НоваяСтрокаТЗ.КонтрагентПриемник = Контрагент; 
			НоваяСтрокаТЗ.Сумма = СтрокаРезультат.НДСОстаток;
			
			Для Каждого ВидСубконто ИЗ НоваяСтрокаТЗ.СчетДт.ВидыСубконто Цикл
				
				Если ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты Тогда
					НоваяСтрокаТЗ.СубконтоДт1 = Контрагент;	
				КонецЕсли;
				
				Если ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные Тогда
					НоваяСтрокаТЗ.СубконтоДт2 = СтрокаРезультат.СчетФактура;	
				КонецЕсли;
				
			КонецЦикла;	
			
		ИначеЕсли СчетАвансов.Вид =  ВидСчета.Активный Тогда
			НоваяСтрокаТЗ.СчетКт =СчетАвансов;
			НоваяСтрокаТЗ.СчетДт =КорСчет; 	
			НоваяСтрокаТЗ.СубконтоДт1 = Организация;
			
			НоваяСтрокаТЗ.kwr_ДоговорКонтрагентаИсточник =СтрокаРезультат.ДоговорКонтрагента;
			НоваяСтрокаТЗ.ДоговорКонтрагентаПриемник =НоваяСтрокаТЗ.kwr_ДоговорКонтрагентаИсточник.ДоговорПослеМиграции; 	
			НоваяСтрокаТЗ.КонтрагентПриемник = Контрагент; 
			НоваяСтрокаТЗ.Сумма = СтрокаРезультат.НДСОстаток;
			
			Для Каждого ВидСубконто ИЗ НоваяСтрокаТЗ.СчетКт.ВидыСубконто Цикл
				
				Если ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты Тогда
					НоваяСтрокаТЗ.СубконтоКт1 = Контрагент;	
				КонецЕсли;
				
				Если ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные Тогда
					НоваяСтрокаТЗ.СубконтоКт2 = СтрокаРезультат.СчетФактура;	
				КонецЕсли;
				
				
				
				
			КонецЦикла;		 
			
		КонецЕсли;
	КонецЦикла;	
КонецПроцедуры // ЗаполнитьНДСАвансов() }}KM WARE Малыгин П.К. Заявка № 22.12.2015 окончание


Процедура ЗаполнитьПередачаМатериалыВНО() Экспорт
   
   	
   
КонецПроцедуры

Функция ПоулучитьТЧТовары()

	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_АВИЗОТовары.Номенклатура,
	|	абс_АВИЗОТовары.ХарактеристикаНоменклатуры,
	|	СУММА(абс_АВИЗОТовары.Количество) КАК Количество,
	|	абс_АВИЗОТовары.ЕдиницаИзмерения,
	|	абс_АВИЗОТовары.Коэффициент,
	|	абс_АВИЗОТовары.СерияНоменклатуры,
	|	абс_АВИЗОТовары.СчетУчетаБУ,
	|	абс_АВИЗОТовары.СчетУчетаНУ,
	|	абс_АВИЗОТовары.ЕдиницаИзмеренияМест,
	|	абс_АВИЗОТовары.ЕдиницаИзмеренияМест.Коэффициент КАК КоэффициентМест,
	|	абс_АВИЗОТовары.ДокументПартии,
	|	абс_АВИЗОТовары.Качество,
	|	абс_АВИЗОТовары.СчетУчетаБУПередачи КАК СчетПередачиБУ,
	|	абс_АВИЗОТовары.СчетУчетаНУПередачи КАК СчетПередачиНУ,
	|	абс_АВИЗОТовары.ДокументРезерва,
	//Крамаренко Д.М.
	//НФС 2018
	|	абс_АВИЗОТовары.СтатьяОборотов КАК СтатьяОборотов,
	|	абс_АВИЗОТовары.абс_ТЭО КАК абс_ТЭО,
	|	абс_АВИЗОТовары.абс_КВ КАК абс_КВ
	//Крамаренко Д.М.
	//НФС 2018 
	|ИЗ
	|	Документ.абс_АВИЗО.Товары КАК абс_АВИЗОТовары
	|ГДЕ
	|	абс_АВИЗОТовары.Ссылка = &Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	абс_АВИЗОТовары.Номенклатура,
	|	абс_АВИЗОТовары.ХарактеристикаНоменклатуры,
	|	абс_АВИЗОТовары.ЕдиницаИзмерения,
	|	абс_АВИЗОТовары.Коэффициент,
	|	абс_АВИЗОТовары.СерияНоменклатуры,
	|	абс_АВИЗОТовары.СчетУчетаБУ,
	|	абс_АВИЗОТовары.СчетУчетаНУ,
	|	абс_АВИЗОТовары.ЕдиницаИзмеренияМест,
	|	абс_АВИЗОТовары.ЕдиницаИзмеренияМест.Коэффициент,
	|	абс_АВИЗОТовары.ДокументПартии,
	|	абс_АВИЗОТовары.Качество,
	|	абс_АВИЗОТовары.СчетУчетаБУПередачи,
	|	абс_АВИЗОТовары.СчетУчетаНУПередачи,
	|	абс_АВИЗОТовары.ДокументРезерва,
	|	абс_АВИЗОТовары.СтатьяОборотов,
	|	абс_АВИЗОТовары.абс_ТЭО,
	|	абс_АВИЗОТовары.абс_КВ";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Возврат Запрос.Выполнить().Выгрузить();

КонецФункции 

Процедура СформироватьДокументыВозвратТоваров() Экспорт
	
	Если ЗначениеЗаполнено(ДокументОснованиеИсточникДоп) Тогда
		ДокВозвратПереданныхТоваров = ДокументОснованиеИсточникДоп.ПолучитьОбъект();
	Иначе	
		ДокВозвратПереданныхТоваров = Документы.ВозвратПереданныхТоваров.СоздатьДокумент();	
	КонецЕсли;
	
	ДокВозвратПереданныхТоваров.Дата = Дата;
	ДокВозвратПереданныхТоваров.Контрагент          = Контрагент;
	ДокВозвратПереданныхТоваров.ВалютаДокумента     = ДоговорКонрагента.ВалютаВзаиморасчетов;
	ДокВозвратПереданныхТоваров.ДоговорКонтрагента  = ДоговорКонрагента;
	ДокВозвратПереданныхТоваров.КратностьВзаиморасчетов   = 1;
	ДокВозвратПереданныхТоваров.КурсВзаиморасчетов        = 1;
	ДокВозвратПереданныхТоваров.Организация = Организация;
	ДокВозвратПереданныхТоваров.ОтражатьВУправленческомУчете = Истина;
	ДокВозвратПереданныхТоваров.СкладОрдер     = Склад;
	ДокВозвратПереданныхТоваров.ВидОперации    = Перечисления.ВидыОперацийВозвратТоваров.ИзПереработки;
	ДокВозвратПереданныхТоваров.Ответственный  = глЗначениеПеременной("глТекущийПользователь");
	ДокВозвратПереданныхТоваров.ВидПоступления = Перечисления.ВидыПоступленияТоваров.НаСклад;
	ДокВозвратПереданныхТоваров.абс_НазначениеПлатежа  = абс_НазначениеПлатежа;
	ДокВозвратПереданныхТоваров.абс_ЦФО                = абс_ЦФО;
	
	ДокВозвратПереданныхТоваров.Товары.Загрузить(ПоулучитьТЧТовары());
	
	ДокВозвратПереданныхТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка;
	ДокВозвратПереданныхТоваров.Записать(РежимЗаписиДокумента.Запись);
	
	//БылаОшибка = Ложь;
	
	//Попытка 
	//	ДокВозвратПереданныхТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.СогласованиеОФК;
	//	ДокВозвратПереданныхТоваров.Записать(РежимЗаписиДокумента.Проведение);
	//Исключение
	//	БылаОшибка = Истина;
	//	Сообщить(ОписаниеОшибки());
	//КонецПопытки;
	
	//Если Не БылаОшибка Тогда
	
	ДокВозвратПереданныхТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Завершен;
	ДокВозвратПереданныхТоваров.ОтражатьВБухгалтерскомУчете = Истина;
	ДокВозвратПереданныхТоваров.ОтражатьВНалоговомУчете     = Истина;
	ДокВозвратПереданныхТоваров.Записать(РежимЗаписиДокумента.Проведение);
	
	
	// {{KM WARE Малыгин П.К. Заявка № 17.11.2015 начало
	// Отмена вопроса, АВИЗО формируется не только из формы документа и тут происходит затык.
	
	//Если НЕ абс_БизнесПроцессыПривелегированный.ПроводкиСформированы(Новый Структура("СсылкаНаОбъект",ДокВозвратПереданныхТоваров.Ссылка)) Тогда
	//	
	//	// {{KM WARE Малыгин П.К. Заявка № 28.10.2015 начало
	//	// Задаём пользователю тупой вопрос
	//	Ответ = Вопрос("Проводок по бухгалтерскому учету в документе нет. Это не является ошибкой если идёт ""возврат"" переданных товаров на склад по счёту 10.07. Продолжить?",РежимДиалогаВопрос.ДаНет);
	//	Если Ответ = КодВозвратаДиалога.Нет Тогда	
	//	// }}KM WARE Малыгин П.К. Заявка № 28.10.2015 окончание
	//		
	//	ДокВозвратПереданныхТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка;
	//	ДокВозвратПереданныхТоваров.ОтражатьВБухгалтерскомУчете = Ложь;
	//	ДокВозвратПереданныхТоваров.ОтражатьВНалоговомУчете     = Ложь;
	//	ДокВозвратПереданныхТоваров.Записать(РежимЗаписиДокумента.Проведение);
	//	
	//	// {{KM WARE Малыгин П.К. Заявка № 28.10.2015 начало
	//	// Задаём пользователю тупой вопрос
	//	КонецЕсли;
	//	// }}KM WARE Малыгин П.К. Заявка № 28.10.2015 окончание
	
	//КонецЕсли;
	
	//КонецЕсли;
	// }}KM WARE Малыгин П.К. Заявка № 17.11.2015 окончание 
	ДокументОснованиеИсточникДоп = ДокВозвратПереданныхТоваров.Ссылка;
	
КонецПроцедуры

Процедура СформироватьДокументСписаниеТоваров() Экспорт
	
	Если ЗначениеЗаполнено(ДокументОснованиеИсточник) Тогда
		ДокСписаниеТоваров = ДокументОснованиеИсточник.ПолучитьОбъект();
	Иначе	
		ДокСписаниеТоваров = Документы.СписаниеТоваров.СоздатьДокумент();	
	КонецЕсли;
	
	Если ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалы10_07 Тогда
		ДокСписаниеТоваров.Дата = Дата + 1;
	Иначе
		//+++ Колесников А.С. 05.11.2018 [CHG448 / 601]		
		Если ttk_ИнтеграцияБП30Сервер.ПроверкаИспользованияКонстантыИнтеграцияБП30(Дата) Тогда
			ДокСписаниеТоваров.Дата = ТекущаяДата();
		Иначе 
			ДокСписаниеТоваров.Дата = Дата;
		КонецЕсли;
		
	КонецЕсли;
	
	ДокСписаниеТоваров.Организация = Организация;
	ДокСписаниеТоваров.ОтражатьВУправленческомУчете = Истина;
	ДокСписаниеТоваров.Склад = Склад;
	ДокСписаниеТоваров.ВидОперации   = ВидОперацииТМЦ;
	ДокСписаниеТоваров.Ответственный = глЗначениеПеременной("глТекущийПользователь");
	ДокСписаниеТоваров.абс_Основание = Основание.Основание;
    ДокСписаниеТоваров.абс_Авизо     = Ссылка;
	
	
	ДокСписаниеТоваров.НДСвСтоимостиТоваров = Перечисления.ДействиеНДСВСтоимостиТоваров.НеИзменять;
	ДокСписаниеТоваров.Товары.Загрузить(ПоулучитьТЧТовары());
	
	
	ДокСписаниеТоваров.абс_КоррСчетБУ    = КорСчет;
	ДокСписаниеТоваров.абс_КоррСубконто1 = ОрганизацияПриемник;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(, СчетБУ = &СчетБУ) КАК СоответствиеСчетовБУиНУСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ";

	Запрос.УстановитьПараметр("СчетБУ", КорСчет);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();

	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		ДокСписаниеТоваров.абс_КоррСчетНУ      = ВыборкаДетальныеЗаписи.СчетНУ;
		ДокСписаниеТоваров.абс_КоррСубконтоНУ1 = ОрганизацияПриемник;
	КонецЕсли;
		
	ДокСписаниеТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка;
	ДокСписаниеТоваров.Записать(РежимЗаписиДокумента.Запись);
	
	
	Если ДокументОснованиеИсточникДоп.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Завершен ИЛИ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО 
// {{KM WARE Лазаревский К.В. Заявка № 27.10.2015 начало
		ИЛИ ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаТоваров
// }}KM WARE Лазаревский К.В. Заявка № 27.10.2015 окончание		
		Тогда 
		ДокСписаниеТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Завершен;
		//+++ Колесников А.С. 05.11.2018 [CHG448 / 601]		
		Если ttk_ИнтеграцияБП30Сервер.ПроверкаИспользованияКонстантыИнтеграцияБП30(Дата) Тогда
			ДокСписаниеТоваров.ОтражатьВУправленческомУчете = Истина;
		Иначе 
			ДокСписаниеТоваров.ОтражатьВБухгалтерскомУчете = Истина;
			ДокСписаниеТоваров.ОтражатьВНалоговомУчете     = Истина;
		КонецЕсли;
		//--- Колесников А.С. 05.11.2018 [CHG448 / 601]	
		
		Попытка
			ДокСписаниеТоваров.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
	КонецЕсли;
	
	Если НЕ абс_БизнесПроцессыПривелегированный.ПроводкиСформированы(Новый Структура("СсылкаНаОбъект",ДокСписаниеТоваров.Ссылка)) Тогда
		ДокСписаниеТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка;
		ДокСписаниеТоваров.ОтражатьВБухгалтерскомУчете = Ложь;
		ДокСписаниеТоваров.ОтражатьВНалоговомУчете     = Ложь;
		Попытка
			ДокСписаниеТоваров.Записать(РежимЗаписиДокумента.Проведение);
		Исключение
			Сообщить(ОписаниеОшибки());	
		КонецПопытки;
	КонецЕсли;
	
		
	ДокументОснованиеИсточник = ДокСписаниеТоваров.Ссылка;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыПоОстаткам() Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|ПОМЕСТИТЬ втСчетаНУ
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
		|			&НаДату,
		|			СчетБУ В ИЕРАРХИИ (&СчетаУчета)
		|				И НЕ СчетБУ В (&СчетаУчетаИскл)
		|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Организация,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Склад,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Заказ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.КоличествоОстаток КАК Количество,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.СтоимостьОстаток КАК СуммаНУ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ПостояннаяРазницаОстаток КАК СуммаПР,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ВременнаяРазницаОстаток КАК СуммаВР,
		// {{KM WARE Малыгин П.К. Заявка № 666 21.10.2015 начало
		// Наличие доп-аналитики давало отрицательные остатки после группировки
		// |	ПартииТоваровНаСкладахНалоговыйУчетОстатки.ДокументОприходования КАК ДокументОприходования
		// }}KM WARE Малыгин П.К. Заявка № 666 21.10.2015 окончание
		|	втСчетаНУ.СчетБУ КАК СчетУчетаБУ,
		|	втСчетаНУ.СчетНУ КАК СчетУчетаНУ,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Заказ КАК Заказ1,
		//|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.Качество КАК Качество1,
		|	ПартииТоваровНаСкладахНалоговыйУчетОстатки.СтоимостьОстаток
		|ПОМЕСТИТЬ ОстаткиНУ
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладахНалоговыйУчет.Остатки(
		|			&НаДату,
		|			Организация = &Организация
		|				И Склад = &Склад) КАК ПартииТоваровНаСкладахНалоговыйУчетОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ
		|		ПО ПартииТоваровНаСкладахНалоговыйУчетОстатки.СчетУчета = втСчетаНУ.СчетНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СерияНоменклатуры,
		|	СУММА(ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.КоличествоОстаток) КАК Количество,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СчетУчета КАК СчетУчетаБУ,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
		// {{KM WARE Малыгин П.К. Заявка № 666 21.10.2015 начало
		// Наличие доп-аналитики давало отрицательные остатки после группировки
		// |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.ДокументОприходования КАК ДокументОприходования
		// }}KM WARE Малыгин П.К. Заявка № 666 21.10.2015 окончание
		|	ОстаткиНУ.СчетУчетаНУ,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Заказ КАК ДокументРезерва,
		|	ЕСТЬNULL(ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СтоимостьОстаток, ОстаткиНУ.СтоимостьОстаток) КАК Сумма
		|ИЗ
		|	РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет.Остатки(
		|			&НаДату,
		|			Организация = &Организация
		|				И Склад = &Склад
		|				И СчетУчета В ИЕРАРХИИ (&СчетаУчета)) КАК ПартииТоваровНаСкладахБухгалтерскийУчетОстатки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНУ КАК ОстаткиНУ
		|		ПО ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Организация = ОстаткиНУ.Организация
		|			И ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура = ОстаткиНУ.Номенклатура
		|			И ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СчетУчета = ОстаткиНУ.СчетУчетаБУ
		|			И ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Склад = ОстаткиНУ.Склад
		|			И ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.ХарактеристикаНоменклатуры = ОстаткиНУ.ХарактеристикаНоменклатуры
		|			И ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СерияНоменклатуры = ОстаткиНУ.СерияНоменклатуры
		|			И ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Заказ = ОстаткиНУ.Заказ
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СчетУчета,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент,
		|	ОстаткиНУ.СчетУчетаНУ,
		|	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Заказ,
		|	ЕСТЬNULL(ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СтоимостьОстаток, ОстаткиНУ.СтоимостьОстаток)";
		
	Запрос.УстановитьПараметр("СчетаУчета", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	Запрос.УстановитьПараметр("НаДату", Дата);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Склад", Склад);
	
// {{KM WARE Лазаревский К.В. Заявка № 21.08.2015 начало
// для того, что бы исключить счета 08.07; 10.07.1; 10.07.2; 10.07.3. По этим счетам другая операция.
	Массив = Новый Массив;
	Массив.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("08.07"));
	Массив.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.07.1"));
	Массив.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.07.2"));
	Массив.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("10.07.3"));
 	Запрос.УстановитьПараметр("СчетаУчетаИскл", Массив);
// }}KM WARE Лазаревский К.В. Заявка № 21.08.2015 окончание	
	
	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	Для каждого Стр Из Товары Цикл
		ОбработкаТабличныхЧастей.ЗаполнитьСчетНУпоСчетуБУТабЧасти(Стр);
		
		ОбработкаТабличныхЧастей.РассчитатьСуммуНДСТабЧасти(Стр, ЭтотОбъект);
		Стр.СуммаБезНДС =  Стр.Сумма -  Стр.СуммаНДС;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьТоварыПоОстаткамПередача() Экспорт 

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|ПОМЕСТИТЬ втСчетаНУ
		|ИЗ
		|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
		|			&НаДату,
		|			СчетБУ В ИЕРАРХИИ (&СчетаУчета)
		|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
		|
		|СГРУППИРОВАТЬ ПО
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
		|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	СчетНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.Организация,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.Номенклатура,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ДокументОприходования,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.КоличествоОстаток КАК Количество,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.СтоимостьОстаток КАК СуммаНУ,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ПостояннаяРазницаОстаток КАК СуммаПР,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.ВременнаяРазницаОстаток КАК СуммаВР,
		|	втСчетаНУ.СчетБУ КАК СчетУчетаБУ,
		|	втСчетаНУ.СчетНУ КАК СчетУчетаНУ,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.абс_ЦФО,
		|	ПартииТоваровПереданныеНалоговыйУчетОстатки.абс_НазначениеПлатежа
		|ПОМЕСТИТЬ ОстаткиНУ
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеНалоговыйУчет.Остатки(
		|			,
// {{KM WARE Лазаревский К.В. Заявка № 23.10.2015 начало
// 
// {{Старый код:
		//|			абс_ЦФО = &абс_ЦФО И Номенклатура.НазначениеИспользования = &абс_НазначениеИспользования
// }}Новый код:
		|			ВЫБОР
		|					КОГДА &абс_ЦФОЗаполнено
		|						ТОГДА абс_ЦФО = &абс_ЦФО
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &абс_НазначениеИспользованияЗаполнен
		|						ТОГДА Номенклатура.НазначениеИспользования = &абс_НазначениеИспользования
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
// }}KM WARE Лазаревский К.В. Заявка № 23.10.2015 окончание 		
		|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ПартииТоваровПереданныеНалоговыйУчетОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаНУ КАК втСчетаНУ
		|		ПО ПартииТоваровПереданныеНалоговыйУчетОстатки.СчетУчета = втСчетаНУ.СчетНУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Номенклатура,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.СерияНоменклатуры,
		|	СУММА(ПартииТоваровПереданныеБухгалтерскийУчетОстатки.КоличествоОстаток) КАК Количество,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.СчетУчета КАК СчетУчетаБУПередачи,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков КАК ЕдиницаИзмерения,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент КАК Коэффициент,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.ДокументПередачи КАК ДокументПартии,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.абс_ЗаказПроект КАК ДокументРезерва,
		|	ОстаткиНУ.СчетУчетаНУ КАК СчетУчетаНУПередачи
		|ИЗ
		|	РегистрНакопления.ПартииТоваровПереданныеБухгалтерскийУчет.Остатки(
		|			,
// {{KM WARE Лазаревский К.В. Заявка № 23.10.2015 начало
// 
// {{Старый код:
		//|			абс_ЦФО = &абс_ЦФО И Номенклатура.НазначениеИспользования = &абс_НазначениеИспользования
// }}Новый код:
		|			ВЫБОР
		|					КОГДА &абс_ЦФОЗаполнено
		|						ТОГДА абс_ЦФО = &абс_ЦФО
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
		|				И ВЫБОР
		|					КОГДА &абс_НазначениеИспользованияЗаполнен
		|						ТОГДА Номенклатура.НазначениеИспользования = &абс_НазначениеИспользования
		|					ИНАЧЕ ИСТИНА
		|				КОНЕЦ
// }}KM WARE Лазаревский К.В. Заявка № 23.10.2015 окончание 		
		|				И ДоговорКонтрагента = &ДоговорКонтрагента) КАК ПартииТоваровПереданныеБухгалтерскийУчетОстатки
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиНУ КАК ОстаткиНУ
		|		ПО ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Организация = ОстаткиНУ.Организация
		|			И ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Номенклатура = ОстаткиНУ.Номенклатура
		|			И ПартииТоваровПереданныеБухгалтерскийУчетОстатки.СчетУчета = ОстаткиНУ.СчетУчетаБУ
		|			И ПартииТоваровПереданныеБухгалтерскийУчетОстатки.ДокументОприходования = ОстаткиНУ.ДокументОприходования
		|			И ПартииТоваровПереданныеБухгалтерскийУчетОстатки.ХарактеристикаНоменклатуры = ОстаткиНУ.ХарактеристикаНоменклатуры
		|			И ПартииТоваровПереданныеБухгалтерскийУчетОстатки.СерияНоменклатуры = ОстаткиНУ.СерияНоменклатуры
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Номенклатура,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.ХарактеристикаНоменклатуры,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.СерияНоменклатуры,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.СчетУчета,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.Номенклатура.ЕдиницаХраненияОстатков.Коэффициент,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.ДокументПередачи,
		|	ПартииТоваровПереданныеБухгалтерскийУчетОстатки.абс_ЗаказПроект,
		|	ОстаткиНУ.СчетУчетаНУ
		|
		|ИМЕЮЩИЕ
		|	СУММА(ПартииТоваровПереданныеБухгалтерскийУчетОстатки.КоличествоОстаток) > 0";
//		|"+ ДополнитьТекстЗапросаПоРегистрамОтборами(Запрос, "ОстаткиНУ", "СчетУчетаБУ") +"
		
	Запрос.УстановитьПараметр("СчетаУчета", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	Запрос.УстановитьПараметр("НаДату", Дата);
// {{KM WARE Лазаревский К.В. Заявка № 21.08.2015 начало
// для 10.07
//{{Старый код:
	//Запрос.УстановитьПараметр("Организация", Организация);
	//Запрос.УстановитьПараметр("Склад", Склад);
// }}Новый код:
	Запрос.УстановитьПараметр("ДоговорКонтрагента", ДоговорКонрагента);
	Запрос.УстановитьПараметр("абс_ЦФО", абс_ЦФО);
	Запрос.УстановитьПараметр("абс_НазначениеИспользования", ЦельИспользования);
	
	Запрос.УстановитьПараметр("абс_ЦФОЗаполнено", ЗначениеЗаполнено(абс_ЦФО));
	Запрос.УстановитьПараметр("абс_НазначениеИспользованияЗаполнен", ЗначениеЗаполнено(ЦельИспользования));
	
// }}KM WARE Лазаревский К.В. Заявка № 21.08.2015 окончание

	Товары.Загрузить(Запрос.Выполнить().Выгрузить());
	Для каждого Стр Из Товары Цикл
		ОбработкаТабличныхЧастей.ПриИзмененииНоменклатурыТабЧасти(Стр, ЭтотОбъект);
		Стр.Качество = Справочники.Качество.Новый;
// {{KM WARE Лазаревский К.В. Заявка № 21.08.2015 начало
// для 10.07
//{{Старый код:
		//СчетаУчетаВДокументах.ЗаполнитьСчетаУчетаТабличнойЧасти("Товары", Стр, ЭтотОбъект, Истина, Истина);
// }}Новый код:
		Стр.СчетУчетаБУ = Стр.СчетУчетаБУПередачи;
		Стр.СчетУчетаНУ = Стр.СчетУчетаНУПередачи;
// }}KM WARE Лазаревский К.В. Заявка № 21.08.2015 окончание
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьДокументПередачаТоваров() Экспорт

	СтрДокПередачаТоваров = абс_БизнесПроцессыПривелегированный.СформироватьДокументПередачаТоваровНаСервере(Новый Структура("СсылкаНаОбъект",Ссылка));
	ДокументОснованиеПриемникДоп = СтрДокПередачаТоваров.ДокПередачаТоваров;

КонецПроцедуры

Процедура СформироватьОприходованиеТоваров() Экспорт

	СтрДокОприходованиеТоваров = абс_БизнесПроцессыПривелегированный.СформироватьОприходованиеТоваровНаСервере(Новый Структура("СсылкаНаОбъект,СкладПриемник",Ссылка,СкладПриемник));
	ДокументОснованиеПриемник = СтрДокОприходованиеТоваров.ДокОприходованиеТоваров;

КонецПроцедуры

Процедура СформироватьКорректировкуДолгаПоСписаниюЗадолженности() Экспорт

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	абс_АВИЗОТабличнаяЧасть.Субконто1,
		|	абс_АВИЗОТабличнаяЧасть.Субконто2,
		|	абс_АВИЗОТабличнаяЧасть.Субконто3,
		|	абс_АВИЗОТабличнаяЧасть.СчетДт,
		|	абс_АВИЗОТабличнаяЧасть.СчетКт,
		|	СУММА(абс_АВИЗОТабличнаяЧасть.СуммаНУ) КАК СуммаНУ,
		|	СУММА(абс_АВИЗОТабличнаяЧасть.СуммаПР) КАК СуммаПР,
		|	СУММА(абс_АВИЗОТабличнаяЧасть.СуммаВР) КАК СуммаВР,
		|	абс_АВИЗОТабличнаяЧасть.Валюта,
		|	СУММА(абс_АВИЗОТабличнаяЧасть.ВалютнаяСумма) КАК ВалютнаяСумма,
		|	СУММА(абс_АВИЗОТабличнаяЧасть.Сумма) КАК Сумма
		|ПОМЕСТИТЬ втТЧ
		|ИЗ
		|	Документ.абс_АВИЗО.ТабличнаяЧасть КАК абс_АВИЗОТабличнаяЧасть
		|ГДЕ
		|	абс_АВИЗОТабличнаяЧасть.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_АВИЗОТабличнаяЧасть.Субконто1,
		|	абс_АВИЗОТабличнаяЧасть.Субконто2,
		|	абс_АВИЗОТабличнаяЧасть.Субконто3,
		|	абс_АВИЗОТабличнаяЧасть.СчетДт,
		|	абс_АВИЗОТабличнаяЧасть.СчетКт,
		|	абс_АВИЗОТабличнаяЧасть.Валюта
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	втТЧ.Субконто1 КАК Субконто1,
		|	втТЧ.Субконто2 КАК Субконто2,
		|	втТЧ.Субконто3,
		|	втТЧ.СчетДт КАК СчетДт,
		|	втТЧ.СчетКт КАК СчетКт,
		|	втТЧ.СуммаНУ КАК СуммаНУ,
		|	втТЧ.СуммаПР КАК СуммаПР,
		|	втТЧ.СуммаВР КАК СуммаВР,
		|	втТЧ.Валюта,
		|	втТЧ.ВалютнаяСумма КАК ВалютнаяСумма,
		|	втТЧ.Сумма КАК Сумма
		|ИЗ
		|	втТЧ КАК втТЧ
		|ИТОГИ
		|	МАКСИМУМ(СчетДт),
		|	МИНИМУМ(СчетКт),
		|	СУММА(СуммаНУ),
		|	СУММА(СуммаПР),
		|	СУММА(СуммаВР),
		|	СУММА(ВалютнаяСумма),
		|	СУММА(Сумма)
		|ПО
		|	Субконто1,
		|	Субконто2";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Субконто1");
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Док = Документы.КорректировкаДолга.СоздатьДокумент();
		Док.Дата = Дата;
		Док.Организация = Организация;
		Док.ВидОперации = Перечисления.ВидыОперацийКорректировкаДолга.СписаниеЗадолженности;
		
		Док.ОтражатьВУправленческомУчете = Истина;
		Док.ОтражатьВБухгалтерскомУчете  = Истина;
		Док.ОтражатьВНалоговомУчете      = Истина;
		Док.КонтрагентДебитор  		     =  ВыборкаДетальныеЗаписи.Субконто1;
		
		ПоДоговору = ВыборкаДетальныеЗаписи.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Субконто2"); 	
		
		Пока ПоДоговору.Следующий() Цикл
			НС = Док.СуммыДолга.Добавить();
			НС.Сумма      				= ПоДоговору.Сумма;
			НС.СуммаРегл  				= ПоДоговору.Сумма;
			НС.КурсВзаиморасчетов       = 1;
			НС.КратностьВзаиморасчетов  = 1;
			НС.СчетУчетаРасчетов        = ПоДоговору.СчетДт;
			НС.ДоговорКонтрагента       = ПоДоговору.Субконто2;
			
		КонецЦикла;	
		
		Док.Записать(РежимЗаписиДокумента.Запись);
		
		//НС 					= ДокументыДвижения.Добавить();
		//НС.ДокументДвижения = Док.Ссылка;
		
	КонецЦикла;



КонецПроцедуры

Процедура СформироватьКорректировкуДолгаПоОприходованиюЗадолженности()


КонецПроцедуры

// Перенос ОбъектыСтроительства

Процедура СформироватьДокументРасчетныеОперации()  Экспорт
	
	Отказ = Ложь;
	
	Док = абс_БизнесПроцессыПривелегированный.СформироватьДокументРасчетныеОперацииСервер(Новый Структура("СсылкаНаОбъект",Ссылка),Отказ);
	
	Если Не Отказ Тогда
		ДокументОснованиеИсточник = Док;
	КонецЕсли;  
	
КонецПроцедуры

// {{KM WARE Лазаревский К.В. Заявка № <Дата dd.mm.yyyy> начало
//Убрано как ненужное 
// {{

//// СформироватьДокументОборудованиеКУстановке0807
////
////
//// {{KM WARE Малыгин П.К. Заявка № 21.10.2015 начало
//Процедура СформироватьДокументОборудованиеКУстановке0807() Экспорт
//	
//	Отказ = Ложь;
//	
//	Док = абс_БизнесПроцессыПривелегированный.СформироватьДокументОборудованиеКУстановке0807Сервер(Новый Структура("СсылкаНаОбъект",Ссылка),Отказ);
//	
//	Если Не Отказ Тогда
//		ДокументОснованиеИсточник = Док;
//	КонецЕсли;  
//	
//КонецПроцедуры
// }}
// }}KM WARE Лазаревский К.В. Заявка № <Дата dd.mm.yyyy> окончание

Процедура СформироватьДвиженияПоОперацииРаспределениеДоходовРасходов(НаправлениеПереноса)
	
	//Запрос = Новый Запрос;
	//Запрос.Текст = 
	//"ВЫБРАТЬ
	//|	ВЫБОР
	//|		КОГДА &НаправлениеПереноса = ""-""
	//|			ТОГДА -абс_РаспределяемыеДоходыРасходыДоходы.ОбщаяСуммаКРаспределению
	//|		ИНАЧЕ абс_РаспределяемыеДоходыРасходыДоходы.ОбщаяСуммаКРаспределению
	//|	КОНЕЦ КАК Сумма,
	//|	абс_РаспределяемыеДоходыРасходыДоходы.СчетДт,
	//|	абс_РаспределяемыеДоходыРасходыДоходы.СчетКт,
	//|	абс_РаспределяемыеДоходыРасходыДоходы.СтавкаНДС,
	//|	абс_РаспределяемыеДоходыРасходыДоходы.НоменклатурнаяГруппа,
	//|	абс_РаспределяемыеДоходыРасходыДоходы.СтатьяЗатрат,
	//|	NULL КАК Подразделение,
	//|	ВЫБОР
	//|		КОГДА &НаправлениеПереноса = ""-""
	//|			ТОГДА &ОрганизацияКТТК
	//|		ИНАЧЕ абс_РаспределяемыеДоходыРасходыДоходы.Филиал
	//|	КОНЕЦ КАК Организация,
	//|	абс_РаспределяемыеДоходыРасходыДоходы.СтатьяБюджета
	//|ИЗ
	//|	Документ.абс_РаспределяемыеДоходыРасходы.Доходы КАК абс_РаспределяемыеДоходыРасходыДоходы
	//|ГДЕ
	//|	абс_РаспределяемыеДоходыРасходыДоходы.Ссылка = &Ссылка
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	ВЫБОР
	//|		КОГДА &НаправлениеПереноса = ""-""
	//|			ТОГДА -абс_РаспределяемыеДоходыРасходыРасходы.ОбщаяСуммаКРаспределению
	//|		ИНАЧЕ абс_РаспределяемыеДоходыРасходыРасходы.ОбщаяСуммаКРаспределению
	//|	КОНЕЦ,
	//|	абс_РаспределяемыеДоходыРасходыРасходы.СчетДт,
	//|	абс_РаспределяемыеДоходыРасходыРасходы.СчетКт,
	//|	абс_РаспределяемыеДоходыРасходыРасходы.СтавкаНДС,
	//|	абс_РаспределяемыеДоходыРасходыРасходы.НоменклатурнаяГруппа,
	//|	абс_РаспределяемыеДоходыРасходыРасходы.СтатьяЗатрат,
	//|	абс_РаспределяемыеДоходыРасходыРасходы.Подразделение,
	//|	ВЫБОР
	//|		КОГДА &НаправлениеПереноса = ""-""
	//|			ТОГДА &ОрганизацияКТТК
	//|		ИНАЧЕ абс_РаспределяемыеДоходыРасходыРасходы.Филиал
	//|	КОНЕЦ,
	//|	абс_РаспределяемыеДоходыРасходыРасходы.СтатьяБюджета
	//|ИЗ
	//|	Документ.абс_РаспределяемыеДоходыРасходы.Расходы КАК абс_РаспределяемыеДоходыРасходыРасходы
	//|ГДЕ
	//|	абс_РаспределяемыеДоходыРасходыРасходы.Ссылка = &Ссылка
	//|ИТОГИ ПО
	//|	Организация";
	//
	//ОрганизацияКТТК = Справочники.Организации.НайтиПоНаименованию("КТТК");
	//
	//Запрос.УстановитьПараметр("ОрганизацияКТТК", ОрганизацияКТТК);
	//Запрос.УстановитьПараметр("НаправлениеПереноса", НаправлениеПереноса);
	//Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	//Результат = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам,"Организация");
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	
	//	Если НаправлениеПереноса = "-" Тогда
	//		Если Не ЗначениеЗаполнено(Объект.ДокументДвижений) Тогда
	//			ДокументОбъект = Документы.ОперацияБух.СоздатьДокумент();	
	//			ДокументОбъект.Дата        = Объект.Дата;
	//			ДокументОбъект.Организация = ВыборкаДетальныеЗаписи.Организация;
	//			ДокументОбъект.абс_ЦФУ     = Объект.ЦФУ;
	//			ДокументОбъект.абс_ЦФО     = Объект.ЦФО;
	//			ДокументОбъект.абс_БюджетнаяСтатья = ВыборкаДетальныеЗаписи.СтатьяБюджета;
	//			ДокументОбъект.абс_РучноеФормированиеОборотовБюджетов = Истина;
	//			
	//			ДокументОбъект.ОбменДанными.Загрузка = Истина;
	//			
	//		Иначе	
	//			ДокументОбъект =  Объект.ДокументДвижений.ПолучитьОбъект();
	//		КонецЕсли;	
	//	Иначе
	//		
	//		Если НЕ ЗначениеЗаполнено(Авизо.ДокументОснованиеПриемник) Тогда
	//			ДокументОбъект = Документы.ОперацияБух.СоздатьДокумент();	
	//		Иначе	
	//			ДокументОбъект = Авизо.ДокументОснованиеПриемник.ПолучитьОбъект();
	//			ДокументОбъект.Движения.Хозрасчетный.Очистить();
	//			ДокументОбъект.Движения.ОборотыБюджетов.Очистить();
	//		КонецЕсли;
	//		
	//		ДокументОбъект.Дата        = Объект.Дата;
	//		ДокументОбъект.Организация = ВыборкаДетальныеЗаписи.Организация;
	//		ДокументОбъект.абс_ЦФУ     = Объект.ЦФУ;
	//		ДокументОбъект.абс_ЦФО     = Объект.ЦФО;
	//		ДокументОбъект.абс_БюджетнаяСтатья = ВыборкаДетальныеЗаписи.СтатьяБюджета;
	//		
	//		ДокументОбъект.ОбменДанными.Загрузка = Истина;
	//		ДокументОбъект.ПометкаУдаления = Ложь;
	//		
	//		ДокументОбъект.абс_РучноеФормированиеОборотовБюджетов = Истина;
	//		ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	//		
	//	КонецЕсли;
	//	
	//	мСумма = 0;
	//	ПоФилиалу = ВыборкаДетальныеЗаписи.Выбрать();
	//	Пока ПоФилиалу.Следующий() Цикл
	//		
	//		НС = ДокументОбъект.Движения.Хозрасчетный.Добавить(); 	
	//		ЗаполнитьЗначенияСвойств(НС,ПоФилиалу);
	//		НС.Организация = ДокументОбъект.Организация;
	//		
	//		мСумма  =  мСумма + ПоФилиалу.Сумма;
	//		
	//		Для каждого ВидСубконто Из ПоФилиалу.СчетКт.ВидыСубконто Цикл
	//			Если ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
	//				НС.СубконтоКт[ВидСубконто.ВидСубконто] = ПоФилиалу.НоменклатурнаяГруппа;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
	//				НС.СубконтоКт[ВидСубконто.ВидСубконто] = ПоФилиалу.СтатьяЗатрат;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда
	//				НС.СубконтоКт[ВидСубконто.ВидСубконто] = ПоФилиалу.Подразделение;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС Тогда
	//				НС.СубконтоКт[ВидСубконто.ВидСубконто] = ПоФилиалу.СтавкаНДС;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
	//				НС.СубконтоКт[ВидСубконто.ВидСубконто] = ОрганизацияКТТК;	
	//			КонецЕсли;
	//		КонецЦикла;
	//		
	//		Для каждого ВидСубконто Из ПоФилиалу.СчетДт.ВидыСубконто Цикл
	//			Если ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы Тогда
	//				НС.СубконтоДт[ВидСубконто.ВидСубконто] = ПоФилиалу.НоменклатурнаяГруппа;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат Тогда
	//				НС.СубконтоДт[ВидСубконто.ВидСубконто] = ПоФилиалу.СтатьяЗатрат;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения Тогда
	//				НС.СубконтоДт[ВидСубконто.ВидСубконто] = ПоФилиалу.Подразделение;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтавкиНДС Тогда
	//				НС.СубконтоДт[ВидСубконто.ВидСубконто] = ПоФилиалу.СтавкаНДС;	
	//			ИначеЕсли ВидСубконто.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
	//				НС.СубконтоДт[ВидСубконто.ВидСубконто] = ОрганизацияКТТК;	
	//			КонецЕсли;
	//		КонецЦикла;
	//		
	//		НС = ДокументОбъект.Движения.ОборотыБюджетов.Добавить(); 	
	//		НС.СуммаСценария  = ПоФилиалу.Сумма;
	//		НС.СуммаУпр       = ПоФилиалу.Сумма;
	//		НС.ВалютнаяСумма  = ПоФилиалу.Сумма;
	//		НС.Период         = Объект.Дата;
	//		НС.абс_ЦФУ        = Объект.ЦФУ;
	//		НС.ЦФО            = Объект.ЦФО;
	//		НС.Организация    = ПоФилиалу.Организация;
	//		НС.СтатьяОборотов = ПоФилиалу.СтатьяБюджета;
	//		НС.Сценарий       = глЗначениеПеременной("абс_СценарийДляФакта");
	//		НС.Валюта         = Справочники.Валюты.НайтиПоКоду("643");
	//		
	//		
	//		НС = ДокументОбъект.Движения.ОборотыБюджетов.Добавить(); 	
	//		НС.СуммаСценария  = ПоФилиалу.Сумма;
	//		НС.СуммаУпр       = ПоФилиалу.Сумма;
	//		НС.ВалютнаяСумма  = ПоФилиалу.Сумма;
	//		НС.Период         = Объект.Дата;
	//		НС.абс_ЦФУ        = Объект.ЦФУ;
	//		НС.ЦФО            = Объект.ЦФО;
	//		НС.Организация    = ПоФилиалу.Организация;
	//		НС.СтатьяОборотов = ПоФилиалу.СтатьяБюджета;
	//		НС.Сценарий       = глЗначениеПеременной("абс_СценарийДляОперФакта");
	//		НС.Валюта         = Справочники.Валюты.НайтиПоКоду("643");
	//		
	//	КонецЦикла;
	//	
	//	НалоговыйУчет.ЗаполнитьДанныеНалоговогоУчетаПоБухгалтерскомуУчету(ДокументОбъект.Движения.Налоговый, ДокументОбъект.Движения.Хозрасчетный, ДокументОбъект.Дата);
	//	
	//	ДокументОбъект.СуммаОперации = мСумма;
	//	
	//	ДокументОбъект.Содержание = "Передача доходов/расходов по документу № " + СокрЛП(Объект.Номер);
	//	ДокументОбъект.Записать(РежимЗаписиДокумента.Запись);
	//	
	//	Если НаправлениеПереноса = "+" Тогда
	//		
	//		НайденныеСтроки = Объект.СформированныеДокументы.НайтиСтроки(Новый Структура("Документ,Организация",Авизо.Ссылка,Авизо.ОрганизацияПриемник));
	//		
	//		Если НайденныеСтроки.Количество() = 0 Тогда	
	//			ЗаполнитьАвизоПоОснованию(Авизо);
	//			Авизо.Записать(РежимЗаписиДокумента.Запись);
	//			НС = Объект.СформированныеДокументы.Добавить();
	//			НС.Документ      = Авизо.Ссылка;
	//			НС.Организация   = Авизо.ОрганизацияПриемник;
	//		КонецЕсли;
	//	Иначе
	//		Объект.ДокументДвижений = ДокументОбъект.Ссылка;
	//	КонецЕсли;
	//	
	//КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьОприходованиеРасчетныеОперации() Экспорт
	
	Отказ = Ложь;
	Для каждого Стр Из ТабличнаяЧасть Цикл
// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
// забалансовые счета не проверяем
// {{Старый код:
		//Если (ТипЗнч(Стр.СубконтоДт1) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоДт2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоДт3) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоКт1) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоКт2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоКт3) = Тип("СправочникСсылка.ДоговорыКонтрагентов")) И (Не ЗначениеЗаполнено(Стр.ДоговорКонтрагентаПриемник)) Тогда
		//	Сообщить("В строке "+ Строка(Стр.НомерСтроки) + " необходимо заполнить договор приемник!");	
		//	Отказ = Истина;	
		//КонецЕсли;	

// }}Новый код:
		Если ЗначениеЗаполнено(Стр.СчетДт) И НЕ Стр.СчетДт.Забалансовый Тогда
			Если (ТипЗнч(Стр.СубконтоДт1) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоДт2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоДт3) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоКт1) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоКт2) = Тип("СправочникСсылка.ДоговорыКонтрагентов") ИЛИ ТипЗнч(Стр.СубконтоКт3) = Тип("СправочникСсылка.ДоговорыКонтрагентов")) И (Не ЗначениеЗаполнено(Стр.ДоговорКонтрагентаПриемник)) Тогда
				Сообщить("В строке "+ Строка(Стр.НомерСтроки) + " необходимо заполнить договор приемник!");	
				Отказ = Истина;	
			КонецЕсли;	
		КонецЕсли;
// }}KM WARE Лазаревский К.В. Заявка № 07.09.2015 окончание		
		НеобходимаПроверкаПоОС = Ложь;
		
		Если Стр.СчетДт <> ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям Тогда
			ТаблицаСубконто = Стр.СчетДт.ВидыСубконто;
			Для Каждого ТекущаяСтрока Из ТаблицаСубконто Цикл 
				Если ТекущаяСтрока.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
					НеобходимаПроверкаПоОС = Истина;	
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
		
		
		Если Стр.СчетКт <> ПланыСчетов.Хозрасчетный.РасчетыПоТекущимОперациям Тогда
			ТаблицаСубконто = Стр.СчетКт.ВидыСубконто;
			Для Каждого ТекущаяСтрока Из ТаблицаСубконто Цикл 
				Если ТекущаяСтрока.ВидСубконто = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОбособленныеПодразделения Тогда
					НеобходимаПроверкаПоОС = Истина;	
				КонецЕсли;	
			КонецЦикла;	
		КонецЕсли;
		
		Если НеобходимаПроверкаПоОС И (ТипЗнч(Стр.СубконтоДт1) = Тип("СправочникСсылка.абс_ОбособленныеПодразделения") ИЛИ ТипЗнч(Стр.СубконтоДт2) = Тип("СправочникСсылка.абс_ОбособленныеПодразделения") ИЛИ ТипЗнч(Стр.СубконтоДт3) = Тип("СправочникСсылка.абс_ОбособленныеПодразделения") ИЛИ ТипЗнч(Стр.СубконтоКт1) = Тип("СправочникСсылка.абс_ОбособленныеПодразделения") ИЛИ ТипЗнч(Стр.СубконтоКт2) = Тип("СправочникСсылка.абс_ОбособленныеПодразделения") ИЛИ ТипЗнч(Стр.СубконтоКт3) = Тип("СправочникСсылка.абс_ОбособленныеПодразделения")) И (Не ЗначениеЗаполнено(Стр.ОбособленноеПодразделениеПриемник)) Тогда
			Сообщить("В строке "+ Строка(Стр.НомерСтроки) + " необходимо заполнить обособленное подразделение приемник!");	
			Отказ = Истина;	
		КонецЕсли;	
		
		Если Отказ Тогда
			Возврат;	
		КонецЕсли;
		
		
	КонецЦикла;
	
	Док = абс_БизнесПроцессыПривелегированный.СформироватьОприходованиеРасчетныеОперацииСервер(Новый Структура("СсылкаНаОбъект",Ссылка),Отказ);
	
	Если Не Отказ Тогда
		ДокументОснованиеПриемник = Док.Ссылка;
	КонецЕсли;

КонецПроцедуры

// {{KM WARE Лазаревский К.В. Заявка № <Дата dd.mm.yyyy> начало
//Убрано как ненужное 
// {{
//// СформироватьДокументОприходованиеОборудованиеКУстановке0807
////
////
//// {{KM WARE Малыгин П.К. Заявка № 22.10.2015 начало
//Процедура СформироватьДокументОприходованиеОборудованиеКУстановке0807() Экспорт
//	
//	Отказ = Ложь;
//	
//	Док = абс_БизнесПроцессыПривелегированный.СформироватьДокументОприходованиеОборудованиеКУстановке0807(Новый Структура("СсылкаНаОбъект",Ссылка),Отказ);
//	
//	Если Не Отказ Тогда
//		ДокументОснованиеПриемник = Док.Ссылка;
//	КонецЕсли;  
//	
//КонецПроцедуры
// }}
// }}KM WARE Лазаревский К.В. Заявка № <Дата dd.mm.yyyy> окончание



Функция ПроверитьСчет(Счет)
	
	Если Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками) ИЛИ Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами)
		ИЛИ Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыСПокупателямиИЗаказчиками) Тогда	
		Возврат 1;
	ИначеЕсли Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасходыБудущихПериодов) Тогда
		Возврат 2;
	ИначеЕсли Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.НераспределеннаяПрибыль) Тогда
		Возврат 3;
	ИначеЕсли Счет.ПринадлежитЭлементу(ПланыСчетов.Хозрасчетный.РасчетыПоНалогам) Тогда
		Возврат 4;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции 

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// {{KM WARE Лазаревский К.В. Заявка № 27.08.2015 начало
Процедура ПроверитьСоответствиеБуУуДляПередачиОС() Экспорт
	Для Каждого СтрокаОС Из ОсновныеСредства Цикл
		СтрокаОС.kmw_ОписаниеОшибки = "";
	КонецЦикла;
	
	ЗапросОС = Новый Запрос("ВЫБРАТЬ
	                        |	абс_АВИЗООсновныеСредства.НомерСтроки,
	                        |	абс_АВИЗООсновныеСредства.ОсновноеСредство КАК ОсновноеСредство,
	                        |	абс_АВИЗООсновныеСредства.СтоимостьБУ,
	                        |	абс_АВИЗООсновныеСредства.ТекущаяСтоимостьБУ,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияБУ,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияЗаМесяцБУ,
	                        |	абс_АВИЗООсновныеСредства.СтоимостьНУ,
	                        |	абс_АВИЗООсновныеСредства.ТекущаяСтоимостьНУ,
	                        |	абс_АВИЗООсновныеСредства.СтоимостьПР,
	                        |	абс_АВИЗООсновныеСредства.СтоимостьВР,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияНУ,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияЗаМесяцНУ,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияПР,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияВР,
	                        |	абс_АВИЗООсновныеСредства.Амортизация,
	                        |	абс_АВИЗООсновныеСредства.СписаноНаЗатраты,
	                        |	абс_АВИЗООсновныеСредства.ТекущаяСтоимость,
	                        |	абс_АВИЗООсновныеСредства.СпособОтражения,
	                        |	абс_АВИЗООсновныеСредства.СуммаКапитальныхВложенийВключаемыхВРасходыНУ,
	                        |	абс_АВИЗООсновныеСредства.Стоимость,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияЗаМесяц,
	                        |	абс_АВИЗООсновныеСредства.СписаноНаЗатратыБУ,
	                        |	абс_АВИЗООсновныеСредства.МОЛ,
	                        |	абс_АВИЗООсновныеСредства.НачислятьПоБазовойСтоимостиНУ,
	                        |	абс_АВИЗООсновныеСредства.ДатаПереходаКРасчетуПоБазовойСтоимостиНУ,
	                        |	абс_АВИЗООсновныеСредства.ФактическийСрокИспользованияНУ,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияЗаМесяцПР,
	                        |	абс_АВИЗООсновныеСредства.АмортизацияЗаМесяцВР,
	                        |	абс_АВИЗООсновныеСредства.МетодыНачисленияАмортизацииНУ,
	                        |	абс_АВИЗООсновныеСредства.МетодыНачисленияАмортизацииНУРучнаяКорректировка,
	                        |	абс_АВИЗООсновныеСредства.kmw_ОписаниеОшибки
	                        |ПОМЕСТИТЬ вт_Авизо
	                        |ИЗ
	                        |	Документ.абс_АВИЗО.ОсновныеСредства КАК абс_АВИЗООсновныеСредства
	                        |ГДЕ
	                        |	абс_АВИЗООсновныеСредства.Ссылка = &СсылкаАвизо
	                        |
	                        |ИНДЕКСИРОВАТЬ ПО
	                        |	ОсновноеСредство
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ХозрасчетныйОстатки.Счет,
	                        |	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	                        |	ХозрасчетныйОстатки.Субконто2,
	                        |	ХозрасчетныйОстатки.Субконто3,
	                        |	ХозрасчетныйОстатки.Организация,
	                        |	ХозрасчетныйОстатки.Валюта,
	                        |	ХозрасчетныйОстатки.СуммаОстаток,
	                        |	ХозрасчетныйОстатки.СуммаОстатокДт,
	                        |	ХозрасчетныйОстатки.СуммаОстатокКт,
	                        |	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокКт,
	                        |	ХозрасчетныйОстатки.КоличествоОстаток,
	                        |	ХозрасчетныйОстатки.КоличествоОстатокДт,
	                        |	ХозрасчетныйОстатки.КоличествоОстатокКт,
	                        |	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокКт
	                        |ПОМЕСТИТЬ вт_ОстаткиБУ
	                        |ИЗ
	                        |	РегистрБухгалтерии.Хозрасчетный.Остатки(
	                        |			&МоментВремени,
	                        |			Счет В ИЕРАРХИИ (&СчетОС),
	                        |			,
	                        |			Организация = &Организация
	                        |				И Субконто1 В
	                        |					(ВЫБРАТЬ
	                        |						вт.ОсновноеСредство
	                        |					ИЗ
	                        |						Вт_Авизо КАК вт)) КАК ХозрасчетныйОстатки
	                        |
	                        |ИНДЕКСИРОВАТЬ ПО
	                        |	Субконто1
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ХозрасчетныйОстатки.Счет,
	                        |	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	                        |	ХозрасчетныйОстатки.Субконто2,
	                        |	ХозрасчетныйОстатки.Субконто3,
	                        |	ХозрасчетныйОстатки.Организация,
	                        |	ХозрасчетныйОстатки.Валюта,
	                        |	ХозрасчетныйОстатки.СуммаОстаток,
	                        |	ХозрасчетныйОстатки.СуммаОстатокДт,
	                        |	ХозрасчетныйОстатки.СуммаОстатокКт,
	                        |	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокКт,
	                        |	ХозрасчетныйОстатки.КоличествоОстаток,
	                        |	ХозрасчетныйОстатки.КоличествоОстатокДт,
	                        |	ХозрасчетныйОстатки.КоличествоОстатокКт,
	                        |	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокКт
	                        |ПОМЕСТИТЬ вт_ОстаткиАмортБУ
	                        |ИЗ
	                        |	РегистрБухгалтерии.Хозрасчетный.Остатки(
	                        |			&МоментВремени,
	                        |			Счет В ИЕРАРХИИ (&СчетАморт),
	                        |			,
	                        |			Организация = &Организация
	                        |				И Субконто1 В
	                        |					(ВЫБРАТЬ
	                        |						вт.ОсновноеСредство
	                        |					ИЗ
	                        |						Вт_Авизо КАК вт)) КАК ХозрасчетныйОстатки
	                        |
	                        |ИНДЕКСИРОВАТЬ ПО
	                        |	Субконто1
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	СтоимостьОСОстатки.ОсновноеСредство КАК ОсновноеСредство,
	                        |	СтоимостьОСОстатки.СтоимостьОстаток,
	                        |	СтоимостьОСОстатки.АмортизацияОстаток
	                        |ПОМЕСТИТЬ вт_ОстаткиУУ
	                        |ИЗ
	                        |	РегистрНакопления.СтоимостьОС.Остатки(
	                        |			&МоментВремени,
	                        |			ОсновноеСредство В
	                        |				(ВЫБРАТЬ
	                        |					вт.ОсновноеСредство
	                        |				ИЗ
	                        |					Вт_Авизо КАК вт)) КАК СтоимостьОСОстатки
	                        |
	                        |ИНДЕКСИРОВАТЬ ПО
	                        |	ОсновноеСредство
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	вт_Авизо.ОсновноеСредство.Код КАК Код,
	                        |	вт_Авизо.ОсновноеСредство,
	                        |	вт_Авизо.СтоимостьБУ,
	                        |	вт_ОстаткиБУ.СуммаОстаток,
	                        |	вт_ОстаткиУУ.СтоимостьОстаток,
	                        |	вт_ОстаткиАмортБУ.СуммаОстаток КАК СуммаОстатокАморт,
	                        |	вт_Авизо.СтоимостьБУ - вт_ОстаткиБУ.СуммаОстаток КАК РазницаАвизоБу,
	                        |	вт_Авизо.СтоимостьБУ - вт_ОстаткиУУ.СтоимостьОстаток КАК РазницаАвизоУу,
	                        |	вт_Авизо.СтоимостьБУ - вт_ОстаткиАмортБУ.СуммаОстаток КАК РазницаАвизоАморт,
	                        |	вт_ОстаткиБУ.СуммаОстаток - вт_ОстаткиУУ.СтоимостьОстаток КАК РазницаБуУу,
	                        |	вт_Авизо.НомерСтроки
	                        |ПОМЕСТИТЬ вт_Таб
	                        |ИЗ
	                        |	вт_Авизо КАК вт_Авизо
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОстаткиБУ КАК вт_ОстаткиБУ
	                        |		ПО вт_Авизо.ОсновноеСредство = вт_ОстаткиБУ.Субконто1
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОстаткиУУ КАК вт_ОстаткиУУ
	                        |		ПО вт_Авизо.ОсновноеСредство = вт_ОстаткиУУ.ОсновноеСредство
	                        |		ЛЕВОЕ СОЕДИНЕНИЕ вт_ОстаткиАмортБУ КАК вт_ОстаткиАмортБУ
	                        |		ПО вт_Авизо.ОсновноеСредство = вт_ОстаткиАмортБУ.Субконто1
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	вт_Таб.Код,
	                        |	вт_Таб.ОсновноеСредство,
	                        |	вт_Таб.СтоимостьБУ,
	                        |	вт_Таб.СуммаОстаток,
	                        |	вт_Таб.СтоимостьОстаток,
	                        |	вт_Таб.СуммаОстатокАморт,
	                        |	вт_Таб.РазницаАвизоБу,
	                        |	вт_Таб.РазницаАвизоУу,
	                        |	вт_Таб.РазницаАвизоАморт,
	                        |	вт_Таб.РазницаБуУу,
	                        |	вт_Таб.НомерСтроки
	                        |ИЗ
	                        |	вт_Таб КАК вт_Таб
	                        |ГДЕ
	                        |	(вт_Таб.РазницаАвизоБу <> 0
	                        |			ИЛИ вт_Таб.РазницаАвизоУу <> 0
	                        |			ИЛИ вт_Таб.РазницаАвизоАморт = 0
	                        |			ИЛИ вт_Таб.РазницаБуУу <> 0)");
	
        ЗапросОС.УстановитьПараметр("МоментВремени", ЭтотОбъект.МоментВремени());
		ЗапросОС.УстановитьПараметр("СсылкаАвизо",   ЭтотОбъект.Ссылка);
		ЗапросОС.УстановитьПараметр("Организация",   ЭтотОбъект.Организация);
		ЗапросОС.УстановитьПараметр("СчетОС",        планыСчетов.Хозрасчетный.НайтиПоКоду("01"));
		ЗапросОС.УстановитьПараметр("СчетАморт",     планыСчетов.Хозрасчетный.НайтиПоКоду("02"));
		Рез = ЗапросОс.Выполнить();
		Если Не Рез.Пустой() Тогда
			Результат = Рез.Выбрать();
			Пока Результат.Следующий() Цикл
				СтрокаТЧ = ОсновныеСредства[Результат.НомерСтроки];
				Если Результат.РазницаАвизоБу <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение документа и счета 01!"; 
				КонецЕсли;
				Если Результат.РазницаАвизоУу <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение документа и Регистра стоимость ОС!"; 
				КонецЕсли;
				Если Результат.РазницаАвизоАморт <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение документа и счета 02!"; 
				КонецЕсли;
				Если Результат.РазницаБуУу <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение Счета 01 и Регистра стоимость ОС!"; 
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры // ПроверитьСоответствиеБуУуДляПередачиОС() }}KM WARE Лазаревский К.В. Заявка № 27.08.2015 окончание

// <Описание процедуры>
//
// Параметры
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// {{KM WARE Лазаревский К.В. Заявка № 28.08.2015 начало
Процедура ПроверитьСоответствиеБуУуДляПередачаМатериалыВНО() Экспорт
	Для Каждого СтрокаОС Из ОсновныеСредства Цикл
		СтрокаОС.kmw_ОписаниеОшибки = "";
	КонецЦикла;
	
	ЗапросОС = Новый Запрос("ВЫБРАТЬ
	                        |	абс_АВИЗОТовары.Ссылка,
	                        |	абс_АВИЗОТовары.НомерСтроки,
	                        |	абс_АВИЗОТовары.Номенклатура,
	                        |	абс_АВИЗОТовары.СерияНоменклатуры,
	                        |	абс_АВИЗОТовары.ХарактеристикаНоменклатуры,
	                        |	абс_АВИЗОТовары.Количество,
	                        |	абс_АВИЗОТовары.Сумма,
	                        |	абс_АВИЗОТовары.СчетУчетаБУ,
	                        |	абс_АВИЗОТовары.СчетКт,
	                        |	абс_АВИЗОТовары.СчетУчетаНУ,
	                        |	абс_АВИЗОТовары.СчетКтНУ,
	                        |	абс_АВИЗОТовары.Документ,
	                        |	абс_АВИЗОТовары.Номер,
	                        |	абс_АВИЗОТовары.Дата,
	                        |	абс_АВИЗОТовары.ЕдиницаИзмерения,
	                        |	абс_АВИЗОТовары.Коэффициент,
	                        |	абс_АВИЗОТовары.СуммаНУ,
	                        |	абс_АВИЗОТовары.СуммаПР,
	                        |	абс_АВИЗОТовары.СуммаВР,
	                        |	абс_АВИЗОТовары.СуммаБезНДС,
	                        |	абс_АВИЗОТовары.СуммаНДС,
	                        |	абс_АВИЗОТовары.СтавкаНДС,
	                        |	абс_АВИЗОТовары.Цена,
	                        |	абс_АВИЗОТовары.ЦенаБезНДС,
	                        |	абс_АВИЗОТовары.Качество,
	                        |	абс_АВИЗОТовары.ЕдиницаИзмеренияМест,
	                        |	абс_АВИЗОТовары.СтатусПартии,
	                        |	абс_АВИЗОТовары.ДокументПартии,
	                        |	абс_АВИЗОТовары.СчетУчетаБУПередачи,
	                        |	абс_АВИЗОТовары.СчетУчетаНУПередачи,
	                        |	абс_АВИЗОТовары.ДокументРезерва,
	                        |	абс_АВИЗОТовары.ДокументРезерваСтрока,
	                        |	абс_АВИЗОТовары.ДокументРезерваПриемник
	                        |ПОМЕСТИТЬ вт_Авизо
	                        |ИЗ
	                        |	Документ.абс_АВИЗО.Товары КАК абс_АВИЗОТовары
	                        |ГДЕ
	                        |	абс_АВИЗОТовары.Ссылка = &СсылкаАвизо
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ХозрасчетныйОстатки.Счет,
	                        |	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	                        |	ХозрасчетныйОстатки.Субконто2,
	                        |	ХозрасчетныйОстатки.Субконто3,
	                        |	ХозрасчетныйОстатки.Организация,
	                        |	ХозрасчетныйОстатки.Валюта,
	                        |	ХозрасчетныйОстатки.СуммаОстаток,
	                        |	ХозрасчетныйОстатки.СуммаОстатокДт,
	                        |	ХозрасчетныйОстатки.СуммаОстатокКт,
	                        |	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.СуммаРазвернутыйОстатокКт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокДт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаОстатокКт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.ВалютнаяСуммаРазвернутыйОстатокКт,
	                        |	ХозрасчетныйОстатки.КоличествоОстаток,
	                        |	ХозрасчетныйОстатки.КоличествоОстатокДт,
	                        |	ХозрасчетныйОстатки.КоличествоОстатокКт,
	                        |	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокДт,
	                        |	ХозрасчетныйОстатки.КоличествоРазвернутыйОстатокКт
	                        |ПОМЕСТИТЬ вт_ОстаткиБУ
	                        |ИЗ
	                        |	РегистрБухгалтерии.Хозрасчетный.Остатки(
	                        |			&МоментВремени,
	                        |			Счет В ИЕРАРХИИ (&СчетМатериалыВНО),
	                        |			,
	                        |			Организация = &Организация
	                        |				И Субконто1 В
	                        |					(ВЫБРАТЬ
	                        |						вт.Номенклатура
	                        |					ИЗ
	                        |						Вт_Авизо КАК вт)) КАК ХозрасчетныйОстатки
	                        |
	                        |ИНДЕКСИРОВАТЬ ПО
	                        |	Субконто1
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Организация,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Номенклатура,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СчетУчета,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Склад,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.ДокументОприходования,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.ХарактеристикаНоменклатуры,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СерияНоменклатуры,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Заказ,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.Качество,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.КоличествоОстаток,
	                        |	ПартииТоваровНаСкладахБухгалтерскийУчетОстатки.СтоимостьОстаток
	                        |ПОМЕСТИТЬ вт_ОстаткиПартии
	                        |ИЗ
	                        |	РегистрНакопления.ПартииТоваровНаСкладахБухгалтерскийУчет.Остатки(
	                        |			&МоментВремени,
	                        |			СчетУчета В ИЕРАРХИИ (&СчетМатериалыВНО)
	                        |				И Организация = &Организация
	                        |				И Склад = &Склад
	                        |				И Номенклатура В
	                        |					(ВЫБРАТЬ
	                        |						вт.Номенклатура
	                        |					ИЗ
	                        |						Вт_Авизо КАК вт)) КАК ПартииТоваровНаСкладахБухгалтерскийУчетОстатки
	                        |;
	                        |
	                        |////////////////////////////////////////////////////////////////////////////////
	                        |ВЫБРАТЬ
	                        |	ТоварыНаСкладахОстатки.Номенклатура,
	                        |	ТоварыНаСкладахОстатки.Склад,
	                        |	ТоварыНаСкладахОстатки.ХарактеристикаНоменклатуры,
	                        |	ТоварыНаСкладахОстатки.СерияНоменклатуры,
	                        |	ТоварыНаСкладахОстатки.Качество,
	                        |	ТоварыНаСкладахОстатки.КоличествоОстаток
	                        |ПОМЕСТИТЬ вт_Остатки
	                        |ИЗ
	                        |	РегистрНакопления.ТоварыНаСкладах.Остатки(
	                        |			&МоментВремени,
	                        |			Номенклатура В
	                        |				(ВЫБРАТЬ
	                        |					вт.Номенклатура
	                        |				ИЗ
	                        |					Вт_Авизо КАК вт)) КАК ТоварыНаСкладахОстатки");
	
        ЗапросОС.УстановитьПараметр("МоментВремени",    ЭтотОбъект.МоментВремени());
		ЗапросОС.УстановитьПараметр("СсылкаАвизо",      ЭтотОбъект.Ссылка);
		ЗапросОС.УстановитьПараметр("Организация",      ЭтотОбъект.Организация);
		ЗапросОС.УстановитьПараметр("СчетМатериалыВНО", СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
		Рез = ЗапросОс.Выполнить();
		Если Не Рез.Пустой() Тогда
			Результат = Рез.Выбрать();
			Пока Результат.Следующий() Цикл
				СтрокаТЧ = ОсновныеСредства[Результат.НомерСтроки];
				Если Результат.РазницаАвизоБу <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение документа и счета 01!"; 
				КонецЕсли;
				Если Результат.РазницаАвизоУу <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение документа и Регистра стоимость ОС!"; 
				КонецЕсли;
				Если Результат.РазницаАвизоАморт <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение документа и счета 02!"; 
				КонецЕсли;
				Если Результат.РазницаБуУу <> 0 Тогда
					СтрокаТЧ.kmw_ОписаниеОшибки = СтрокаТЧ.kmw_ОписаниеОшибки + Символы.ПС +  "Расхождение Счета 01 и Регистра стоимость ОС!"; 
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
		ЭтотОбъект.Записать(РежимЗаписиДокумента.Запись);
КонецПроцедуры // ПроверитьСоответствиеБуУуДляПередачаМатериалыВНО() }}KM WARE Лазаревский К.В. Заявка № 28.08.2015 окончание

// {{KM WARE Лазаревский К.В. Заявка № 06.08.2015 начало

// Добавление в запрос по остаткам счетов условия по субконто
// дополняет текст запроса отборами по регистру ХозрасчетныйОстатки
//
// Параметры
//	Запрос 
//
// Возвращаемое значение:
//   Строка   - часть текста запроса "ГДЕ" + в запрос добавляются параметры
//
// {{KM WARE Лазаревский К.В. Заявка № 17.08.2015 начало
Функция ДополнитьТекстЗапросаОтборами(Запрос)
	СтрокаОтборов = "";
	СчетчикПараметров = 0;
	МассивПараметров = Новый Массив();
	ОтборПоСчетамУчета.Сортировать("ОтборПоСчету");
	Для Каждого СтрокаСчет Из СчетаУчета Цикл
		ОтборСтрок = Новый структура("ОтборПоСчету", СтрокаСчет.СчетУчета);
		СтрокиОтбор = ОтборПоСчетамУчета.НайтиСтроки(ОтборСтрок);
		Для Каждого строкаТЧ Из СтрокиОтбор Цикл
			Если строкаТЧ.Использование <> Истина Тогда
				Продолжить;
			КонецЕсли;
			Сч = 1;
			для Каждого Субконто Из СтрокаТЧ.ОтборПоСчету.ВидыСубконто Цикл
				
				МестоРазделитель = Найти(СтрокаТЧ.ПолеОтбор,".");
				Если МестоРазделитель = 0 Тогда
					НаименованиеСубконто = СтрокаТЧ.ПолеОтбор;
					ПодСубконто = "";
				Иначе
					НаименованиеСубконто = лев(СтрокаТЧ.ПолеОтбор, МестоРазделитель - 1);
					ПодСубконто = СокрЛП(Сред(СтрокаТЧ.ПолеОтбор, МестоРазделитель, 1000)); 
				КонецЕсли;	
				
				Если Субконто.ВидСубконто.Наименование = НаименованиеСубконто Тогда
					НомерСчета = СокрЛП(СчетаУчета.Найти(СтрокаТЧ.ОтборПоСчету, "СчетУчета").НомерСтроки);
					Запрос.УстановитьПараметр("Счет" + НомерСчета, СтрокаТЧ.ОтборПоСчету);
					
					НовСтрокаОтброров  = "
					//| Выбор Когда ХозрасчетныйОстатки.Счет " + ?(СтрокаТЧ.ОтборПоСчетуВидСравнения = "ВГруппе", "В Иерархии (", "= ") + "&Счет" + НомерСчета + ?(СтрокаТЧ.ОтборПоСчетуВидСравнения = "ВГруппе", ")", "") + " Тогда
					//| 	" + ?(Найти(строкаТЧ.ВидСравнения, "Не ") > 0, "НЕ ", "") + "ХозрасчетныйОстатки.Субконто" + сокрлп(Сч) + ПодСубконто;
					| Выбор Когда ХозрасчетныйОстатки.Счет " + "В Иерархии (" + "&Счет" + НомерСчета + ")" + " Тогда
					| 	" + ?(Найти(строкаТЧ.ВидСравнения, "Не ") > 0, "НЕ ", "") + "ХозрасчетныйОстатки.Субконто" + сокрлп(Сч) + ПодСубконто;
					Если строкаТЧ.ВидСравнения = "Равно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " = &Параметрсубконто" + СокрЛП(СчетчикПараметров);
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					ИначеЕсли строкаТЧ.ВидСравнения = "НеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <> &Параметрсубконто" + СокрЛП(СчетчикПараметров);
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					ИначеЕсли строкаТЧ.ВидСравнения = "Больше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " > &Параметрсубконто" + СокрЛП(СчетчикПараметров);
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					ИначеЕсли строкаТЧ.ВидСравнения = "БольшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " >= &Параметрсубконто" + СокрЛП(СчетчикПараметров);
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					ИначеЕсли строкаТЧ.ВидСравнения = "Меньше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " < &Параметрсубконто" + СокрЛП(СчетчикПараметров);
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					ИначеЕсли строкаТЧ.ВидСравнения = "МеньшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <= &Параметрсубконто" + СокрЛП(СчетчикПараметров);
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					ИначеЕсли строкаТЧ.ВидСравнения = "ВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеСписок.Получить());
					ИначеЕсли строкаТЧ.ВидСравнения = "НЕВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеСписок.Получить());
					ИначеЕсли строкаТЧ.ВидСравнения = "ВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					ИначеЕсли строкаТЧ.ВидСравнения = "НеВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
						МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					КонецЕсли;	
					СтрокаОтборов = СтрокаОтборов
							 + ?(СтрокаОтборов = "", "", Символы.ПС +" И ") 
							 + НовСтрокаОтброров + "
					| Иначе ИСТИНА
					| Конец";
					
//					МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					СчетчикПараметров = СчетчикПараметров + 1;
				КонецЕсли;
				Сч = Сч + 1;
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;
	
	Если СтрокаОтборов <> "" Тогда
		СтрокаОтборов = Символы.ПС + " ГДЕ " + Символы.ПС +  СтрокаОтборов;
	КонецЕсли;
	
	Для Счетчик = 0 По СчетчикПараметров-1 Цикл
		Запрос.УстановитьПараметр("Параметрсубконто" + сокрЛП(Счетчик), МассивПараметров[Счетчик]);
	КонецЦикла;	
	
	Возврат СтрокаОтборов;
КонецФункции // ДополнитьТекстЗапросаОтборами() }}KM WARE Лазаревский К.В. Заявка № 17.08.2015 окончание	

// Добавление в запрос по остаткам счетов условия по субконто
// дополняет текст запроса отборами по регистру ХозрасчетныйОстатки
//
// Параметры
//	Запрос 
//
// Возвращаемое значение:
//   Строка   - часть текста запроса "ГДЕ" + в запрос добавляются параметры
//
// {{KM WARE Лазаревский К.В. Заявка № 17.08.2015 начало
Функция ДополнитьТекстЗапросаПоОСОтборами(Запрос)
	СтрокаОтборов = "";
	СчетчикПараметров = 0;
	МассивПараметров = Новый Массив();
	ОтборПоСчетамУчета.Сортировать("ОтборПоСчету");
	Для Каждого СтрокаСчет Из СчетаУчета Цикл
		ОтборСтрок = Новый структура("ОтборПоСчету", СтрокаСчет.СчетУчета);
		СтрокиОтбор = ОтборПоСчетамУчета.НайтиСтроки(ОтборСтрок);
		Для Каждого строкаТЧ Из СтрокиОтбор Цикл
			Если строкаТЧ.Использование <> Истина Тогда
				Продолжить;
			КонецЕсли;
			Сч = 1;
			для Каждого Субконто Из СтрокаТЧ.ОтборПоСчету.ВидыСубконто Цикл
				
				МестоРазделитель = Найти(СтрокаТЧ.ПолеОтбор,".");
				Если МестоРазделитель = 0 Тогда
					НаименованиеСубконто = СтрокаТЧ.ПолеОтбор;
					ПодСубконто = "";
				Иначе
					НаименованиеСубконто = лев(СтрокаТЧ.ПолеОтбор, МестоРазделитель - 1);
					ПодСубконто = СокрЛП(Сред(СтрокаТЧ.ПолеОтбор, МестоРазделитель, 1000)); 
				КонецЕсли;	
				
				Если Субконто.ВидСубконто.Наименование = НаименованиеСубконто Тогда
					//НомерСчета = СокрЛП(СчетаУчета.Найти(СтрокаТЧ.ОтборПоСчету, "СчетУчета").НомерСтроки);
					//Запрос.УстановитьПараметр("Счет" + НомерСчета, СтрокаТЧ.ОтборПоСчету);
					
					НовСтрокаОтброров  = "
					|   СостоянияОСОрганизаций.ОсновноеСредство" +  ПодСубконто;
					Если строкаТЧ.ВидСравнения = "Равно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " = &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "НеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <> &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "Больше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " > &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "БольшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " >= &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "Меньше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " < &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "МеньшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <= &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "ВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "НЕВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "ВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "НеВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					КонецЕсли;	
					СтрокаОтборов = СтрокаОтборов
							 + ?(СтрокаОтборов = "", "", Символы.ПС +" И ") 
							 + НовСтрокаОтброров + "
					//| Иначе ИСТИНА
					//| Конец
					|";
					
					МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					СчетчикПараметров = СчетчикПараметров + 1;
				КонецЕсли;
				Сч = Сч + 1;
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;
	
	Если СтрокаОтборов <> "" Тогда
			СтрокаОтборов =  "И " + Символы.ПС +  СтрокаОтборов;
	//	СтрокаОтборов = Символы.ПС 
	//					+  "|ВЫБОР
	//						|	КОГДА &ОтборПоПодразделению Тогда
	//						|	ИНАЧЕ ИСТИНА
	//						|КОНЕЦ
	//						|И " 
	//					+ Символы.ПС +  СтрокаОтборов;
	КонецЕсли;
	
	Для Счетчик = 0 По СчетчикПараметров-1 Цикл
		Запрос.УстановитьПараметр("Параметрсубконто" + сокрЛП(Счетчик), МассивПараметров[Счетчик]);
	КонецЦикла;	
	
	Возврат СтрокаОтборов;
КонецФункции // ДополнитьТекстЗапросаОтборами() }}KM WARE Лазаревский К.В. Заявка № 17.08.2015 окончание	


// Добавление в запрос по остаткам счетов условия по субконто
// дополняет текст запроса отборами по регистру НалоговыйОстатки
//
// Параметры
//	Запрос 
//
// Возвращаемое значение:
//   Строка   - часть текста запроса "ГДЕ" + в запрос добавляются параметры
//
// {{KM WARE Лазаревский К.В. Заявка № 17.08.2015 начало

Функция ДополнитьТекстЗапросаОтборамиНУ(Запрос)
	
	ЗапросПоСчетамНУ = Новый Запрос("ВЫБРАТЬ
	                 |	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ,
	                 |	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ,
	                 |	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ,
	                 |	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
	                 |	СоответствиеСчетовБУиНУСрезПоследних.Учитывается,
	                 |	СоответствиеСчетовБУиНУСрезПоследних.Комментарий,
	                 |	СоответствиеСчетовБУиНУСрезПоследних.РеквизитПредставление
	                 |ИЗ
	                 |	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(, СчетБУ В ИЕРАРХИИ (&СчетаБУ)) КАК СоответствиеСчетовБУиНУСрезПоследних");
	ЗапросПоСчетамНУ.УстановитьПараметр("СчетаБУ",  СчетаУчета.ВыгрузитьКолонку("СчетУчета"));
	СчетаУчетаНУ = ЗапросПоСчетамНУ.Выполнить().Выгрузить();
	
	СтрокаОтборов = "";
	СчетчикПараметров = 0;
	МассивПараметров = Новый Массив();
	ОтборПоСчетамУчета.Сортировать("ОтборПоСчету");
	НомерСчета = 0;
	Для Каждого СтрокаСчет Из СчетаУчетаНУ Цикл
		Для Каждого строкаТЧ Из ОтборПоСчетамУчета Цикл
			Если строкаТЧ.Использование <> Истина Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтрокаТЧ.ОтборПоСчету <> СтрокаСчет.СчетБУ
				И СтрокаТЧ.ОтборПоСчету <> СтрокаСчет.СчетБУ.Родитель
				И СтрокаТЧ.ОтборПоСчету <> СтрокаСчет.СчетБУ.Родитель.Родитель
				И СтрокаТЧ.ОтборПоСчету <> СтрокаСчет.СчетБУ.Родитель.Родитель.Родитель
				И СтрокаТЧ.ОтборПоСчету <> СтрокаСчет.СчетБУ.Родитель.Родитель.Родитель.Родитель Тогда
				Продолжить;
			КонецЕсли;	
			Сч = 1;
			НомерСчета = НомерСчета + 1;
			для Каждого Субконто Из СтрокаТЧ.ОтборПоСчету.ВидыСубконто Цикл
				
				МестоРазделитель = Найти(СтрокаТЧ.ПолеОтбор,".");
				Если МестоРазделитель = 0 Тогда
					НаименованиеСубконто = СтрокаТЧ.ПолеОтбор;
					ПодСубконто = "";
				Иначе
					НаименованиеСубконто = лев(СтрокаТЧ.ПолеОтбор, МестоРазделитель - 1);
					ПодСубконто = СокрЛП(Сред(СтрокаТЧ.ПолеОтбор, МестоРазделитель, 1000)); 
				КонецЕсли;	
				
				Если Субконто.ВидСубконто.Наименование = НаименованиеСубконто Тогда
					//НомерСчета = СокрЛП(СчетаУчета.Найти(СтрокаТЧ.ОтборПоСчету, "СчетУчета").НомерСтроки);
					Запрос.УстановитьПараметр("СчетНУ" + НомерСчета, СтрокаСчет.СчетНУ);
					
					НовСтрокаОтброров  = "
					//| Выбор Когда ХозрасчетныйОстатки.Счет " + ?(СтрокаТЧ.ОтборПоСчетуВидСравнения = "ВГруппе", "В Иерархии (", "= ") + "&Счет" + НомерСчета + ?(СтрокаТЧ.ОтборПоСчетуВидСравнения = "ВГруппе", ")", "") + " Тогда
					//| 	" + ?(Найти(строкаТЧ.ВидСравнения, "Не ") > 0, "НЕ ", "") + "ХозрасчетныйОстатки.Субконто" + сокрлп(Сч) + ПодСубконто;
					| Выбор Когда НалоговыйОстатки.Счет " + "= " + "&СчетНУ" + НомерСчета + " Тогда
					| 	" + ?(Найти(строкаТЧ.ВидСравнения, "Не ") > 0, "НЕ ", "") + "НалоговыйОстатки.Субконто" + сокрлп(Сч) + ПодСубконто;
					Если строкаТЧ.ВидСравнения = "Равно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " = &ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "НеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <> &ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "Больше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " > &ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "БольшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " >= &ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "Меньше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " < &ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "МеньшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <= &ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "ВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "НЕВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "ВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "НеВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&ПараметрсубконтоНУ" + СокрЛП(СчетчикПараметров) + ")";
					КонецЕсли;	
					СтрокаОтборов = СтрокаОтборов
							 + ?(СтрокаОтборов = "", "", Символы.ПС +" И ") 
							 + НовСтрокаОтброров + "
					| Иначе ИСТИНА
					| Конец";
					
					МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					СчетчикПараметров = СчетчикПараметров + 1;
				КонецЕсли;
				Сч = Сч + 1;
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;
	
	Если СтрокаОтборов <> "" Тогда
		СтрокаОтборов = Символы.ПС + " ГДЕ " + Символы.ПС +  СтрокаОтборов;
	КонецЕсли;
	
	Для Счетчик = 0 По СчетчикПараметров-1 Цикл
		Запрос.УстановитьПараметр("ПараметрсубконтоНУ" + сокрЛП(Счетчик), МассивПараметров[Счетчик]);
	КонецЦикла;	
	
	Возврат СтрокаОтборов;
КонецФункции // ДополнитьТекстЗапросаОтборамиНУ() }}KM WARE Лазаревский К.В. Заявка № 17.08.2015 окончание	
// }}KM WARE Лазаревский К.В. Заявка № 06.08.2015 окончание

// Добавление в запрос по остаткам счетов условия по субконто
// дополняет текст запроса отборами по регистру ХозрасчетныйОстатки
//
// Параметры
//	Запрос 
//
// Возвращаемое значение:
//   Строка   - часть текста запроса "ГДЕ" + в запрос добавляются параметры
//
// {{KM WARE Лазаревский К.В. Заявка № 17.08.2015 начало
Функция ДополнитьТекстЗапросаПоРегистрамОтборами(Запрос, Регистр, Поле)
	СтрокаОтборов = "";
	СчетчикПараметров = 0;
	МассивПараметров = Новый Массив();
	ОтборПоСчетамУчета.Сортировать("ОтборПоСчету");
	Для Каждого СтрокаСчет Из СчетаУчета Цикл
		ОтборСтрок = Новый структура("ОтборПоСчету", СтрокаСчет.СчетУчета);
		СтрокиОтбор = ОтборПоСчетамУчета.НайтиСтроки(ОтборСтрок);
		Для Каждого строкаТЧ Из СтрокиОтбор Цикл
			Если строкаТЧ.Использование <> Истина Тогда
				Продолжить;
			КонецЕсли;
			Сч = 1;
			для Каждого Субконто Из СтрокаТЧ.ОтборПоСчету.ВидыСубконто Цикл
				
				МестоРазделитель = Найти(СтрокаТЧ.ПолеОтбор,".");
				Если МестоРазделитель = 0 Тогда
					НаименованиеСубконто = СтрокаТЧ.ПолеОтбор;
					ПодСубконто = "";
				Иначе
					НаименованиеСубконто = лев(СтрокаТЧ.ПолеОтбор, МестоРазделитель - 1);
					ПодСубконто = СокрЛП(Сред(СтрокаТЧ.ПолеОтбор, МестоРазделитель, 1000)); 
				КонецЕсли;	
				
				Если Субконто.ВидСубконто.Наименование = НаименованиеСубконто Тогда
					НомерСчета = СокрЛП(СчетаУчета.Найти(СтрокаТЧ.ОтборПоСчету, "СчетУчета").НомерСтроки);
					Запрос.УстановитьПараметр("Счет" + НомерСчета, СтрокаТЧ.ОтборПоСчету);
					
					НовСтрокаОтброров  = "
					//| Выбор Когда ХозрасчетныйОстатки.Счет " + ?(СтрокаТЧ.ОтборПоСчетуВидСравнения = "ВГруппе", "В Иерархии (", "= ") + "&Счет" + НомерСчета + ?(СтрокаТЧ.ОтборПоСчетуВидСравнения = "ВГруппе", ")", "") + " Тогда
					//| 	" + ?(Найти(строкаТЧ.ВидСравнения, "Не ") > 0, "НЕ ", "") + "ХозрасчетныйОстатки.Субконто" + сокрлп(Сч) + ПодСубконто;
					| Выбор Когда " + Регистр + "." +Поле + " В Иерархии (" + "&Счет" + НомерСчета + ")" + " Тогда
					| 	" + ?(Найти(строкаТЧ.ВидСравнения, "Не ") > 0, "НЕ ", "") + Регистр + "." + НаименованиеСубконто + ПодСубконто;
					Если строкаТЧ.ВидСравнения = "Равно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " = &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "НеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <> &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "Больше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " > &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "БольшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " >= &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "Меньше" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " < &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "МеньшеРавно" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " <= &Параметрсубконто" + СокрЛП(СчетчикПараметров);
					ИначеЕсли строкаТЧ.ВидСравнения = "ВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "НЕВСписке" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "ВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					ИначеЕсли строкаТЧ.ВидСравнения = "НеВГруппе" Тогда
						НовСтрокаОтброров = НовСтрокаОтброров+ " В ИЕРАРХИИ (&Параметрсубконто" + СокрЛП(СчетчикПараметров) + ")";
					КонецЕсли;	
					СтрокаОтборов = СтрокаОтборов
							 + ?(СтрокаОтборов = "", "", Символы.ПС +" И ") 
							 + НовСтрокаОтброров + "
					| Иначе ИСТИНА
					| Конец";
					
					МассивПараметров.Добавить(СтрокаТЧ.ЗначениеОтбора);
					СчетчикПараметров = СчетчикПараметров + 1;
				КонецЕсли;
				Сч = Сч + 1;
			КонецЦикла;	
		КонецЦикла;	
	КонецЦикла;
	
	Если СтрокаОтборов <> "" Тогда
		СтрокаОтборов = Символы.ПС + " ГДЕ " + Символы.ПС +  СтрокаОтборов;
	КонецЕсли;
	
	Для Счетчик = 0 По СчетчикПараметров-1 Цикл
		Запрос.УстановитьПараметр("Параметрсубконто" + сокрЛП(Счетчик), МассивПараметров[Счетчик]);
	КонецЦикла;	
	
	Возврат СтрокаОтборов;
КонецФункции // ДополнитьТекстЗапросаОтборами() }}KM WARE Лазаревский К.В. Заявка № 17.08.2015 окончание	


Функция ПолучитьТекстЗапросаСтроительствоОбъековОС_Расчеты() Экспорт
	ТекстЗапроса = 	"ВЫБРАТЬ
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	               	|		ИНАЧЕ ХозрасчетныйОстатки.Организация
	               	|	КОНЕЦ КАК СубконтоДт1,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	               	|	КОНЕЦ КАК СубконтоДт2,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	               	|	КОНЕЦ КАК СубконтоДт3,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Счет
	               	|		ИНАЧЕ &КорСчет
	               	|	КОНЕЦ КАК СчетДт,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Счет
	               	|		ИНАЧЕ &КорСчет
	               	|	КОНЕЦ КАК СчетКт,
	               	|	ХозрасчетныйОстатки.Валюта,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.СуммаОстатокДт
	               	|		ИНАЧЕ ХозрасчетныйОстатки.СуммаОстатокКт
	               	|	КОНЕЦ КАК Сумма,
	               	|	ХозрасчетныйОстатки.ВалютнаяСуммаОстаток КАК ВалютнаяСумма,
	               	|	ХозрасчетныйОстатки.КоличествоОстаток КАК Количество,
	               	|	ХозрасчетныйОстатки.Счет КАК СчетБУ,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Субконто1
	               	|		ИНАЧЕ ХозрасчетныйОстатки.Организация
	               	|	КОНЕЦ КАК СубконтоКт1,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Субконто2
	               	|	КОНЕЦ КАК СубконтоКт2,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА ХозрасчетныйОстатки.Субконто3
	               	|	КОНЕЦ КАК СубконтоКт3,
	               	|	ХозрасчетныйОстатки.Субконто1,
	               	|	ХозрасчетныйОстатки.Субконто2,
	               	|	ХозрасчетныйОстатки.Субконто3
	               	|ПОМЕСТИТЬ втХозрасчетный
	               	|{ВЫБРАТЬ
	               	|	СубконтоДт1.*,
	               	|	СубконтоДт2.*,
	               	|	СубконтоДт3.*,
	               	|	СчетДт.*,
	               	|	СчетКт.*,
	               	|	Валюта.*,
	               	|	Сумма,
	               	|	ВалютнаяСумма,
	               	|	Количество,
	               	|	СчетБУ.*,
	               	|	СубконтоКт1.*,
	               	|	СубконтоКт2.*,
	               	|	СубконтоКт3.*,
	               	|	Субконто1.*,
	               	|	Субконто2.*,
	               	|	Субконто3.*}
	               	|ИЗ
	               	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НаДату, Счет В ИЕРАРХИИ (&МассивСчетов), , Организация = &Организация) КАК ХозрасчетныйОстатки
	               	|{ГДЕ
	               	|	ХозрасчетныйОстатки.Счет.*,
	               	|	ХозрасчетныйОстатки.Субконто1.*,
	               	|	ХозрасчетныйОстатки.Субконто2.*,
	               	|	ХозрасчетныйОстатки.Субконто3.*}
	               	|
	               	|ИНДЕКСИРОВАТЬ ПО
	               	|	СубконтоДт1,
	               	|	СубконтоДт2,
	               	|	СубконтоДт3,
	               	|	СчетДт
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОбороты.СуммаОборотДт > 0
	               	|			ТОГДА ХозрасчетныйОбороты.Счет
	               	|		ИНАЧЕ &КорСчет
	               	|	КОНЕЦ КАК СчетДт,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
	               	|			ТОГДА ХозрасчетныйОбороты.Счет
	               	|		ИНАЧЕ &КорСчет
	               	|	КОНЕЦ КАК СчетКт,
	               	|	ХозрасчетныйОбороты.Субконто1,
	               	|	ХозрасчетныйОбороты.Субконто2,
	               	|	ХозрасчетныйОбороты.Субконто3,
	               	|	ВЫБОР
	               	|		КОГДА ХозрасчетныйОбороты.СуммаОборотКт > 0
	               	|			ТОГДА ХозрасчетныйОбороты.СуммаОборотКт
	               	|		ИНАЧЕ ХозрасчетныйОбороты.СуммаОборотДт
	               	|	КОНЕЦ КАК Сумма
	               	|ПОМЕСТИТЬ ОборотыПо68_02
	               	|ИЗ
	               	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, , , Счет В (&МассивСчетов68_02), , Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ КАК СчетНУ,
	               	|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	               	|ПОМЕСТИТЬ втСчетаНУ
	               	|{ВЫБРАТЬ
	               	|	СчетНУ.*,
	               	|	СчетБУ.*}
	               	|ИЗ
	               	|	РегистрСведений.СоответствиеСчетовБУиНУ.СрезПоследних(
	               	|			&НаДату,
	               	|			СчетБУ В ИЕРАРХИИ (&МассивСчетов)
	               	|				И Учитывается) КАК СоответствиеСчетовБУиНУСрезПоследних
	               	|{ГДЕ
	               	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ.*,
	               	|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ.*,
	               	|	СоответствиеСчетовБУиНУСрезПоследних.СчетКоррБУ.*,
	               	|	СоответствиеСчетовБУиНУСрезПоследних.ВидЗатратНУ.*}
	               	|
	               	|СГРУППИРОВАТЬ ПО
	               	|	СоответствиеСчетовБУиНУСрезПоследних.СчетНУ,
	               	|	СоответствиеСчетовБУиНУСрезПоследних.СчетБУ
	               	|
	               	|ИНДЕКСИРОВАТЬ ПО
	               	|	СчетНУ
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто1
	               	|		ИНАЧЕ НалоговыйОстатки.Организация
	               	|	КОНЕЦ КАК СубконтоДтНУ1,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто2
	               	|	КОНЕЦ КАК СубконтоДтНУ2,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто3
	               	|	КОНЕЦ КАК СубконтоДтНУ3,
	               	|	втСчетаНУ.СчетБУ КАК СчетБУ,
	               	|	СУММА(ВЫБОР
	               	|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.НУ)
	               	|				ТОГДА НалоговыйОстатки.СуммаОстаток
	               	|			ИНАЧЕ 0
	               	|		КОНЕЦ) КАК СуммаНУ,
	               	|	СУММА(ВЫБОР
	               	|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ПР)
	               	|				ТОГДА НалоговыйОстатки.СуммаОстаток
	               	|			ИНАЧЕ 0
	               	|		КОНЕЦ) КАК СуммаПР,
	               	|	СУММА(ВЫБОР
	               	|			КОГДА НалоговыйОстатки.ВидУчета = ЗНАЧЕНИЕ(Перечисление.ВидыУчетаПоПБУ18.ВР)
	               	|				ТОГДА НалоговыйОстатки.СуммаОстаток
	               	|			ИНАЧЕ 0
	               	|		КОНЕЦ) КАК СуммаВР,
	               	|	НалоговыйОстатки.КоличествоОстаток КАК Количество,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Счет
	               	|		ИНАЧЕ &КорСчетНУ
	               	|	КОНЕЦ КАК СчетДтНУ,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Счет
	               	|		ИНАЧЕ &КорСчетНУ
	               	|	КОНЕЦ КАК СчетКтНУ,
	               	|	НалоговыйОстатки.Субконто1,
	               	|	НалоговыйОстатки.Субконто2,
	               	|	НалоговыйОстатки.Субконто3,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто1
	               	|		ИНАЧЕ НалоговыйОстатки.Организация
	               	|	КОНЕЦ КАК СубконтоКтНУ1,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто2
	               	|	КОНЕЦ КАК СубконтоКтНУ2,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто3
	               	|	КОНЕЦ КАК СубконтоКтНУ3
	               	|ПОМЕСТИТЬ втНалоговый
	               	|ИЗ
	               	|	втСчетаНУ КАК втСчетаНУ
	               	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Налоговый.Остатки(&НаДату, , , Организация = &Организация) КАК НалоговыйОстатки
	               	|		ПО втСчетаНУ.СчетНУ = НалоговыйОстатки.Счет
	               	|
	               	|СГРУППИРОВАТЬ ПО
	               	|	втСчетаНУ.СчетБУ,
	               	|	НалоговыйОстатки.КоличествоОстаток,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Счет
	               	|		ИНАЧЕ &КорСчетНУ
	               	|	КОНЕЦ,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Счет
	               	|		ИНАЧЕ &КорСчетНУ
	               	|	КОНЕЦ,
	               	|	НалоговыйОстатки.Субконто2,
	               	|	НалоговыйОстатки.Субконто3,
	               	|	НалоговыйОстатки.Субконто1,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто2
	               	|	КОНЕЦ,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто3
	               	|	КОНЕЦ,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто2
	               	|	КОНЕЦ,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто3
	               	|	КОНЕЦ,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто1
	               	|		ИНАЧЕ НалоговыйОстатки.Организация
	               	|	КОНЕЦ,
	               	|	ВЫБОР
	               	|		КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
	               	|			ТОГДА НалоговыйОстатки.Субконто1
	               	|		ИНАЧЕ НалоговыйОстатки.Организация
	               	|	КОНЕЦ
	               	|
	               	|ИНДЕКСИРОВАТЬ ПО
	               	|	СубконтоДтНУ1,
	               	|	СубконтоДтНУ2,
	               	|	СубконтоДтНУ3,
	               	|	СчетБУ
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	втХозрасчетный.СубконтоДт1 КАК СубконтоДт1,
	               	|	втХозрасчетный.СубконтоДт2 КАК СубконтоДт2,
	               	|	втХозрасчетный.СубконтоДт3 КАК СубконтоДт3,
	               	|	втХозрасчетный.Валюта,
	               	|	втНалоговый.СуммаНУ,
	               	|	втНалоговый.СуммаПР,
	               	|	втНалоговый.СуммаВР,
	               	|	втХозрасчетный.ВалютнаяСумма,
	               	|	втХозрасчетный.Сумма,
	               	|	ЕСТЬNULL(втХозрасчетный.Количество, втНалоговый.Количество) КАК Количество,
	               	|	втХозрасчетный.СчетДт,
	               	|	втХозрасчетный.СчетКт,
	               	|	втНалоговый.СчетДтНУ,
	               	|	втНалоговый.СчетКтНУ,
	               	|	втХозрасчетный.СубконтоКт1,
	               	|	втХозрасчетный.СубконтоКт2,
	               	|	втХозрасчетный.СубконтоКт3,
	               	|	втНалоговый.СубконтоДтНУ1,
	               	|	втНалоговый.СубконтоДтНУ2,
	               	|	втНалоговый.СубконтоДтНУ3,
	               	|	втНалоговый.СубконтоКтНУ1,
	               	|	втНалоговый.СубконтоКтНУ2,
	               	|	втНалоговый.СубконтоКтНУ3
	               	|ПОМЕСТИТЬ втОбщаяТаблица
	               	|ИЗ
	               	|	втХозрасчетный КАК втХозрасчетный
	               	|		ПОЛНОЕ СОЕДИНЕНИЕ втНалоговый КАК втНалоговый
	               	|		ПО втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
	               	|			И втХозрасчетный.Субконто1 = втНалоговый.Субконто1
	               	|			И (ВЫБОР
	               	|				КОГДА НЕ втХозрасчетный.Субконто2 ЕСТЬ NULL 
	               	|					ТОГДА втХозрасчетный.Субконто2 = втНалоговый.Субконто2
	               	|				ИНАЧЕ ИСТИНА
	               	|			КОНЕЦ)
	               	|			И (ВЫБОР
	               	|				КОГДА НЕ втХозрасчетный.Субконто3 ЕСТЬ NULL 
	               	|					ТОГДА втХозрасчетный.Субконто3 = втНалоговый.Субконто3
	               	|				ИНАЧЕ ИСТИНА
	               	|			КОНЕЦ)
	               	|			И втХозрасчетный.СчетБУ = втНалоговый.СчетБУ
	               	|
	               	|ОБЪЕДИНИТЬ ВСЕ
	               	|
	               	|ВЫБРАТЬ
	               	|	ОборотыПо68_02.Субконто1,
	               	|	ОборотыПо68_02.Субконто2,
	               	|	ОборотыПо68_02.Субконто3,
	               	|	NULL,
	               	|	0,
	               	|	0,
	               	|	0,
	               	|	0,
	               	|	ОборотыПо68_02.Сумма,
	               	|	0,
	               	|	ОборотыПо68_02.СчетДт,
	               	|	ОборотыПо68_02.СчетКт,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL,
	               	|	NULL
	               	|ИЗ
	               	|	ОборотыПо68_02 КАК ОборотыПо68_02
	               	|;
	               	|
	               	|////////////////////////////////////////////////////////////////////////////////
	               	|ВЫБРАТЬ
	               	|	втОбщаяТаблица.СубконтоДт1 КАК СубконтоКт1,
	               	|	втОбщаяТаблица.СубконтоДт2 КАК СубконтоКт2,
	               	|	втОбщаяТаблица.СубконтоДт3 КАК СубконтоКт3,
	               	|	втОбщаяТаблица.Валюта,
	               	|	втОбщаяТаблица.СуммаНУ,
	               	|	втОбщаяТаблица.СуммаПР,
	               	|	втОбщаяТаблица.СуммаВР,
	               	|	втОбщаяТаблица.ВалютнаяСумма,
	               	|	втОбщаяТаблица.Сумма,
	               	|	втОбщаяТаблица.Количество,
	               	|	втОбщаяТаблица.СчетДт КАК СчетКт,
	               	|	втОбщаяТаблица.СчетКт КАК СчетДт,
	               	|	втОбщаяТаблица.СчетДтНУ КАК СчетКтНУ,
	               	|	втОбщаяТаблица.СчетКтНУ КАК СчетДтНУ,
	               	|	втОбщаяТаблица.СубконтоКт1 КАК СубконтоДт1,
	               	|	втОбщаяТаблица.СубконтоКт2 КАК СубконтоДт2,
	               	|	втОбщаяТаблица.СубконтоКт3 КАК СубконтоДт3,
	               	|	втОбщаяТаблица.СубконтоДтНУ1 КАК СубконтоКтНУ1,
	               	|	втОбщаяТаблица.СубконтоДтНУ2 КАК СубконтоКтНУ2,
	               	|	втОбщаяТаблица.СубконтоДтНУ3 КАК СубконтоКтНУ3,
	               	|	втОбщаяТаблица.СубконтоКтНУ1 КАК СубконтоДтНУ1,
	               	|	втОбщаяТаблица.СубконтоКтНУ2 КАК СубконтоДтНУ2,
	               	|	втОбщаяТаблица.СубконтоКтНУ3 КАК СубконтоДтНУ3,
	               	|	ВЫБОР
	               	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДт1.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДт2.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДт3.Наименование
	               	|	КОНЕЦ КАК СубконтоКт_БУ_Договор,
	               	|	ВЫБОР
	               	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКт1.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКт2.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКт3.Наименование
	               	|	КОНЕЦ КАК СубконтоДт_БУ_Договор,
	               	|	ВЫБОР
	               	|		КОГДА втОбщаяТаблица.СубконтоДтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДтНУ1.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоДтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДтНУ2.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоДтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДтНУ3.Наименование
	               	|	КОНЕЦ КАК СубконтоКт_НУ_Договор,
	               	|	ВЫБОР
	               	|		КОГДА втОбщаяТаблица.СубконтоКтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКтНУ1.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоКтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКтНУ2.Наименование
	               	|		КОГДА втОбщаяТаблица.СубконтоКтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКтНУ3.Наименование
	               	|	КОНЕЦ КАК СубконтоДт_НУ_Договор,
	               	|	ВЫБОР
	               	|		КОГДА втОбщаяТаблица.СубконтоДт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДт1.Владелец
	               	|		КОГДА втОбщаяТаблица.СубконтоДт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДт2.Владелец
	               	|		КОГДА втОбщаяТаблица.СубконтоДт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоДт3.Владелец
	               	|		КОГДА втОбщаяТаблица.СубконтоКт1 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКт1.Владелец
	               	|		КОГДА втОбщаяТаблица.СубконтоКт2 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКт2.Владелец
	               	|		КОГДА втОбщаяТаблица.СубконтоКт3 ССЫЛКА Справочник.ДоговорыКонтрагентов
	               	|			ТОГДА втОбщаяТаблица.СубконтоКт3.Владелец
	               	|	КОНЕЦ КАК КонтрагентПриемник
	               	|ИЗ
	               	|	втОбщаяТаблица КАК втОбщаяТаблица";

	Возврат ТекстЗапроса;
КонецФункции	

// <Описание функции>
//
// Параметры
//  <ОсновноеСредство>  - СправочникСсылка.ОсновныеСредства
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
// Возвращаемое значение:
//   <Тип.Вид>   - <описание возвращаемого значения>
//
// {{KM WARE Лазаревский К.В. Заявка № 09.10.2015 начало
Функция ПолучитьИнвентарныйНомер(ОсновноеСредство, ОрганизацияИсточник) Экспорт
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер  Как ИнвентарныйНомер
	                      |ИЗ
	                      |	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	                      |			,
	                      |			Организация = &Организация
	                      |				И ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних");
	Запрос.УстановитьПараметр("Организация", ОрганизацияИсточник);					  
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);					  
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Код = ОсновноеСредство.Код;
	Иначе
		Рез = Результат.Выбрать();
		Рез.следующий();
		Код = Рез.ИнвентарныйНомер;
	КонецЕсли;
	
	Возврат  Код;
	
КонецФункции // по заявке 000034791() }}KM WARE Лазаревский К.В. Заявка № 09.10.2015 окончание

// Проверяем, относится ли счёт к особому случаю
// {{KM WARE Малыгин П.К. Заявка № 12.11.2015 начало
Функция kwr_РасчитыватьНуПрВр(Счет)
	
СчетаСОсобымПорядком = Новый Массив;
СчетаСОсобымПорядком.Добавить(ПланыСчетов.Налоговый.ПрочиеРасходыБудущихПериодов);

Запрос = Новый Запрос;
Запрос.Текст =  "ВЫБРАТЬ
                |	kwr_СчетаАВИЗО_ОсобыйПорядок.Счет,
                |	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка
                |ИЗ
                |	РегистрСведений.kwr_СчетаАВИЗО_ОсобыйПорядок КАК kwr_СчетаАВИЗО_ОсобыйПорядок
                |ГДЕ
                |	kwr_СчетаАВИЗО_ОсобыйПорядок.Счет = &Счет
                |	И kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка = &ОсобаяОбработка";
				
Запрос.УстановитьПараметр("Счет",Счет);
Запрос.УстановитьПараметр("ОсобаяОбработка",Перечисления.kwr_ВидОсобойОбработкиСчетаДляАвизо.РасчитыватьНУ);

Результат = Запрос.Выполнить().Выбрать();

Если Результат.Следующий() Тогда
СчетаСОсобымПорядком.Добавить(Результат.Счет);	
КонецЕсли;	



Если СчетаСОсобымПорядком.Найти(Счет)<>Неопределено Тогда
Возврат Истина;	
Иначе
Возврат Ложь;

КонецЕсли;	
	 

КонецФункции // kwr_ОсобыйСлучай() }}KM WARE Малыгин П.К. Заявка № 12.11.2015 окончание

Функция KWR_ОсобыйПорядокОбработкиСчетов(Счет,ОсобыйВид)
	
Запрос = Новый Запрос;
Запрос.Текст =  "ВЫБРАТЬ
                |	kwr_СчетаАВИЗО_ОсобыйПорядок.Счет,
                |	kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка
                |ИЗ
                |	РегистрСведений.kwr_СчетаАВИЗО_ОсобыйПорядок КАК kwr_СчетаАВИЗО_ОсобыйПорядок
                |ГДЕ
                |	kwr_СчетаАВИЗО_ОсобыйПорядок.Счет = &Счет
                |	И kwr_СчетаАВИЗО_ОсобыйПорядок.ОсобаяОбработка = &ОсобаяОбработка";
				
Запрос.УстановитьПараметр("Счет",Счет);
Запрос.УстановитьПараметр("ОсобаяОбработка",ОсобыйВид);

Результат = Запрос.Выполнить().Выбрать();

Если Результат.Следующий() Тогда
Возврат Истина;	
Иначе
Возврат Ложь;
КонецЕсли;	

	
КонецФункции	

// {{KM WARE Малыгин П.К. Заявка № 12.11.2015 начало
Процедура kwr_ЗаполнитьДанные(Строка)
		
Запрос = Новый Запрос;
Запрос.Текст = 
	           "ВЫБРАТЬ
	           |	НалоговыйОстатки.Счет,
	           |	НалоговыйОстатки.Субконто1,
	           |	НалоговыйОстатки.Субконто2,
	           |	НалоговыйОстатки.Субконто3,
	           |	НалоговыйОстатки.Организация,
	           |	НалоговыйОстатки.ВидУчета,
	           |	НалоговыйОстатки.СуммаОстаток,
	           |	НалоговыйОстатки.СуммаОстатокДт,
	           |	НалоговыйОстатки.СуммаОстатокКт,
	           |	НалоговыйОстатки.СуммаРазвернутыйОстатокДт,
	           |	НалоговыйОстатки.СуммаРазвернутыйОстатокКт,
	           |	НалоговыйОстатки.КоличествоОстаток,
	           |	НалоговыйОстатки.КоличествоОстатокДт,
	           |	НалоговыйОстатки.КоличествоОстатокКт,
	           |	НалоговыйОстатки.КоличествоРазвернутыйОстатокДт,
	           |	НалоговыйОстатки.КоличествоРазвернутыйОстатокКт
	           |ИЗ
	           |	РегистрБухгалтерии.Налоговый.Остатки(
	           |			&Дата,
	           |			Счет = &СчетНУ,
	           |			,
	           |			Организация = &Организация"+Символы.ПС;
			   
			   Если Строка.СчетКтНу.ВидыСубконто.Количество()>=1 И ЗначениеЗаполнено(Строка.СубконтоКтНУ1)И ЗначениеЗаполнено(Строка.СчетКтНу.ВидыСубконто[0])   Тогда
			   Запрос.Текст = Запрос.Текст+"И Субконто1 = &Субконто1"+Символы.ПС;
			   КонецЕсли;
			   
			   Если Строка.СчетКтНу.ВидыСубконто.Количество()>=2 И ЗначениеЗаполнено(Строка.СубконтоКтНУ2) И ЗначениеЗаполнено(Строка.СчетКтНу.ВидыСубконто[1]) Тогда
			   Запрос.Текст = Запрос.Текст+"И Субконто2 = &Субконто2"+Символы.ПС;
			   КонецЕсли;
			   
			   Если Строка.СчетКтНу.ВидыСубконто.Количество()=3 И ЗначениеЗаполнено(Строка.СубконтоКтНУ3) И ЗначениеЗаполнено(Строка.СчетКтНу.ВидыСубконто[2]) Тогда
			   Запрос.Текст = Запрос.Текст+"И Субконто3 = &Субконто3"+Символы.ПС;
			   КонецЕсли;
			   
					   Запрос.Текст = Запрос.Текст+") КАК НалоговыйОстатки";
			   
Запрос.УстановитьПараметр("СчетНУ",Строка.СчетКтНу);
Если ЗначениеЗаполнено(Строка.СубконтоКтНУ1) Тогда
Запрос.УстановитьПараметр("Субконто1",Строка.СубконтоКтНУ1);
КонецЕсли;
Если ЗначениеЗаполнено(Строка.СубконтоКтНУ2) Тогда	
Запрос.УстановитьПараметр("Субконто2",Строка.СубконтоКтНУ2);
КонецЕсли;
Если ЗначениеЗаполнено(Строка.СубконтоКтНУ3) Тогда
Запрос.УстановитьПараметр("Субконто3",Строка.СубконтоКтНУ3);
КонецЕсли;

Запрос.УстановитьПараметр("Организация",Организация);
Запрос.УстановитьПараметр("Дата",Дата);

Результат = Запрос.Выполнить().Выбрать();
СуммаВР = 0;
СуммаПР = 0;
СуммаНУ = 0;

Пока Результат.Следующий() Цикл
	Если Результат.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.ВР Тогда
	СуммаВР = СуммаВР+Результат.СуммаОстаток;	
	ИначеЕсли Результат.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
    СуммаПР = СуммаПР+Результат.СуммаОстаток;	
	ИначеЕсли Результат.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.НУ Тогда
    СуммаНУ = СуммаНУ+Результат.СуммаОстаток;	
	КонецЕсли;	
	
КонецЦикла;	

Строка.СуммаВР = СуммаВР;
Строка.СуммаПР = СуммаПР;
Строка.СуммаНУ = СуммаНУ;
КонецПроцедуры // kwr_ЗаполнитьДанные(Строка)() }}KM WARE Малыгин П.К. Заявка № 12.11.2015 окончание

Процедура  KWR_ЗаполнитьНУОтдельно(Счет,Организация,Дата,КорСчетНУ)
Запрос = Новый Запрос;
Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
               |	НалоговыйОстатки.Организация,
               |	НалоговыйОстатки.ВидУчета,
               |	СУММА(НалоговыйОстатки.СуммаОстатокДт) КАК СуммаОстатокДт,
               |	СУММА(НалоговыйОстатки.СуммаОстатокКт) КАК СуммаОстатокКт,
               |	СУММА(НалоговыйОстатки.СуммаРазвернутыйОстатокДт) КАК СуммаРазвернутыйОстатокДт,
               |	СУММА(НалоговыйОстатки.СуммаРазвернутыйОстатокКт) КАК СуммаРазвернутыйОстатокКт,
               |	СУММА(НалоговыйОстатки.КоличествоОстаток) КАК Количество,
               |	СУММА(НалоговыйОстатки.КоличествоОстатокДт) КАК КоличествоОстатокДт,
               |	СУММА(НалоговыйОстатки.КоличествоОстатокКт) КАК КоличествоОстатокКт,
               |	СУММА(НалоговыйОстатки.КоличествоРазвернутыйОстатокДт) КАК КоличествоРазвернутыйОстатокДт,
               |	СУММА(НалоговыйОстатки.КоличествоРазвернутыйОстатокКт) КАК КоличествоРазвернутыйОстатокКт,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Субконто1
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА &Организация79
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Субконто1
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокДт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |				ИНАЧЕ &Организация79
               |			КОНЕЦ
               |	КОНЕЦ КАК СубконтоДтНУ1,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Субконто2
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Субконто2
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокДт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ КАК СубконтоДтНУ2,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Субконто3
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Субконто3
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокДт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ КАК СубконтоДтНУ3,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Счет
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА &КорСчет
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Счет
               |				ИНАЧЕ &КорСчет
               |			КОНЕЦ
               |	КОНЕЦ КАК СчетДтНУ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Счет
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА &КорСчет
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Счет
               |				ИНАЧЕ &КорСчет
               |			КОНЕЦ
               |	КОНЕЦ КАК СчетКтНУ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Субконто1
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА &Организация79
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Субконто1
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокКт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |				ИНАЧЕ &Организация79
               |			КОНЕЦ
               |	КОНЕЦ КАК СубконтоКтНУ1,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Субконто2
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Субконто2
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокКт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ КАК СубконтоКтНУ2,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Субконто3
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Субконто3
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокКт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ КАК СубконтоКтНУ3,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |			ТОГДА НалоговыйОстатки.СуммаОстатокДт
               |		ИНАЧЕ НалоговыйОстатки.СуммаОстатокКт
               |	КОНЕЦ КАК СуммаНУ
               |ПОМЕСТИТЬ вт_ОстаткиНУ
               |ИЗ
               |	РегистрБухгалтерии.Налоговый.Остатки(&Дата, Счет = &Счет, , Организация = &Организация) КАК НалоговыйОстатки
               |
               |СГРУППИРОВАТЬ ПО
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Субконто1
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА &Организация79
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Субконто1
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокДт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |				ИНАЧЕ &Организация79
               |			КОНЕЦ
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Субконто2
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Субконто2
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокДт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Субконто3
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Субконто3
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокДт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НалоговыйОстатки.Счет
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА &КорСчет
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |					ТОГДА НалоговыйОстатки.Счет
               |				ИНАЧЕ &КорСчет
               |			КОНЕЦ
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Счет
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА &КорСчет
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Счет
               |				ИНАЧЕ &КорСчет
               |			КОНЕЦ
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Субконто1
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА &Организация79
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Субконто1
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокКт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |				ИНАЧЕ &Организация79
               |			КОНЕЦ
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Субконто2
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Субконто2
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокКт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Пассивный)
               |			ТОГДА НалоговыйОстатки.Субконто3
               |		КОГДА НалоговыйОстатки.Счет.Вид = ЗНАЧЕНИЕ(ВидСчета.Активный)
               |			ТОГДА НЕОПРЕДЕЛЕНО
               |		ИНАЧЕ ВЫБОР
               |				КОГДА НалоговыйОстатки.СуммаОстатокКт > 0
               |					ТОГДА НалоговыйОстатки.Субконто3
               |				КОГДА НалоговыйОстатки.Счет.Забалансовый = ИСТИНА
               |						И НалоговыйОстатки.СуммаОстатокКт < 0
               |					ТОГДА НЕОПРЕДЕЛЕНО
               |			КОНЕЦ
               |	КОНЕЦ,
               |	НалоговыйОстатки.Организация,
               |	НалоговыйОстатки.ВидУчета,
               |	ВЫБОР
               |		КОГДА НалоговыйОстатки.СуммаОстатокДт > 0
               |			ТОГДА НалоговыйОстатки.СуммаОстатокДт
               |		ИНАЧЕ НалоговыйОстатки.СуммаОстатокКт
               |	КОНЕЦ
               |;
               |
               |////////////////////////////////////////////////////////////////////////////////
               |ВЫБРАТЬ
               |	вт_ОстаткиНУ.Организация,
               |	вт_ОстаткиНУ.ВидУчета,
               |	вт_ОстаткиНУ.СуммаОстатокДт,
               |	вт_ОстаткиНУ.СуммаОстатокКт,
               |	вт_ОстаткиНУ.СуммаРазвернутыйОстатокДт,
               |	вт_ОстаткиНУ.СуммаРазвернутыйОстатокКт,
               |	вт_ОстаткиНУ.КоличествоОстатокДт,
               |	вт_ОстаткиНУ.КоличествоОстатокКт,
               |	вт_ОстаткиНУ.КоличествоРазвернутыйОстатокДт,
               |	вт_ОстаткиНУ.КоличествоРазвернутыйОстатокКт,
               |	вт_ОстаткиНУ.СубконтоДтНУ1,
               |	вт_ОстаткиНУ.СубконтоДтНУ2,
               |	вт_ОстаткиНУ.СубконтоДтНУ3,
               |	вт_ОстаткиНУ.СчетДтНУ,
               |	вт_ОстаткиНУ.СчетКтНУ,
               |	вт_ОстаткиНУ.СубконтоКтНУ1,
               |	вт_ОстаткиНУ.СубконтоКтНУ2,
               |	вт_ОстаткиНУ.СубконтоКтНУ3,
               |	ВЫБОР
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ1.Наименование
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ2.Наименование
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ3.Наименование
               |	КОНЕЦ КАК ДоговорДТ,
               |	ВЫБОР
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ1.Наименование
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ2.Наименование
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ3.Наименование
               |	КОНЕЦ КАК ДоговорКт,
               |	ВЫБОР
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ1.Владелец
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ2.Владелец
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ3.Владелец
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ1 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ1.Владелец
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ2 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ2.Владелец
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ3 ССЫЛКА Справочник.ДоговорыКонтрагентов
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ3.Владелец
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ1 ССЫЛКА Справочник.Контрагенты
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ1
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ2 ССЫЛКА Справочник.Контрагенты
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ2
               |		КОГДА вт_ОстаткиНУ.СубконтоДтНУ3 ССЫЛКА Справочник.Контрагенты
               |			ТОГДА вт_ОстаткиНУ.СубконтоДтНУ3
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ1 ССЫЛКА Справочник.Контрагенты
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ1
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ2 ССЫЛКА Справочник.Контрагенты
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ2
               |		КОГДА вт_ОстаткиНУ.СубконтоКтНУ3 ССЫЛКА Справочник.Контрагенты
               |			ТОГДА вт_ОстаткиНУ.СубконтоКтНУ3
               |	КОНЕЦ КАК КонтрагентПриемник,
               |	вт_ОстаткиНУ.СуммаНУ КАК Сумма_НУ
               |ИЗ
               |	вт_ОстаткиНУ КАК вт_ОстаткиНУ";
			   
	      	Запрос.УстановитьПараметр("Организация",Организация);
		  	Запрос.УстановитьПараметр("Счет",Счет);
		  	Запрос.УстановитьПараметр("Дата", Новый Граница(Дата, ВидГраницы.Включая));
          	Запрос.УстановитьПараметр("Организация79",Организация);
		  	Запрос.УстановитьПараметр("КорСчет",КорСчетНУ);
		  
			Результат = Запрос.Выполнить().Выбрать();
		
			Пока Результат.Следующий() Цикл
				СтрокаНУ = ТабличнаяЧасть.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаНУ,Результат);
				СтрокаНУ.СчетДт = ПланыСчетов.Хозрасчетный.Вспомогательный;
				СтрокаНУ.СчетКТ = ПланыСчетов.Хозрасчетный.Вспомогательный;
				Если Результат.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.НУ Тогда
					СтрокаНУ.СуммаНУ = Результат.Сумма_НУ
				ИначеЕсли Результат.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.ВР Тогда
					СтрокаНУ.СуммаВР = Результат.Сумма_НУ
				ИначеЕсли Результат.ВидУчета = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
					СтрокаНУ.СуммаПР = Результат.Сумма_НУ
				КонецЕсли;	
			КонецЦикла;
			
				
	
		КонецПроцедуры	

//+++ Колесников А.С. 05.11.2018 [CHG448 / 601]		
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	Если ttk_ИнтеграцияБП30Сервер.ПроверкаИспользованияКонстантыИнтеграцияБП30(Дата) Тогда
		// Сделано для создавания документов списания и оприходование товаров. так как там просто дата написали.
		Дата = ТекущаяДата();
		Если Статус = Перечисления.абс_СтатусыАвизо.ОжидаетОтправки И ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО Тогда
			
			Если Товары.Количество()<> 0 Тогда
				
				// регистр ТоварыНаСкладах Расход
				Движения.ТоварыНаСкладах.Записывать = Истина;
				Движения.ТоварыНаСкладах.Очистить();

				Для Каждого ТекСтрокаТовары Из Товары Цикл
					Движение = Движения.ТоварыНаСкладах.Добавить();
					Движение.Активность = Истина;
					Движение.Регистратор = Ссылка;
					Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
					Движение.Период = Дата;
					Движение.Склад = Склад;
					Движение.Номенклатура = ТекСтрокаТовары.Номенклатура;
					Движение.Качество = ТекСтрокаТовары.Качество;
					Движение.ХарактеристикаНоменклатуры = ТекСтрокаТовары.ХарактеристикаНоменклатуры;
					Движение.СерияНоменклатуры = ТекСтрокаТовары.СерияНоменклатуры;
					Движение.СчетУчета = ТекСтрокаТовары.СчетУчетаБУ;
					Движение.Количество = ТекСтрокаТовары.Количество;
				КонецЦикла;
				
				Движения.ТоварыНаСкладах.Записать();
				
				// Заголовок для сообщений об ошибках проведения.
				Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
				СтруктураШапкиДокумента = ttk_ОбщегоНазначения.СформироватьСтруктуруШапкиДокументаИПроверитьОтражениеВУчете(ЭтотОбъект, Отказ, Заголовок);
				СтруктураШапкиДокумента.Вставить("Склад", Склад);
				
				РегистрыНакопления.ТоварыНаСкладах.КонтрольОстатков(
					"Товары", СтруктураШапкиДокумента, Отказ, Заголовок, РежимПроведения);

			КонецЕсли;
			
			Если Не Отказ Тогда
				СформироватьДокументПемещениеТоваров(Истина);
			КонецЕсли;
			
			//Очищаем движения так как расход и приход будет делать документ перемещение товаров 
			Движения.ТоварыНаСкладах.Очистить();
		//Статус Исполнена = Завершен
		ИначеЕсли Статус = Перечисления.абс_СтатусыАвизо.Исполнено И ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО Тогда
			
			СформироватьДокументСписаниеТоваров();
			ДокСписаниеТоваров = ДокументОснованиеИсточник.ПолучитьОбъект();
			
			Для Каждого СтрокаДок Из ДокСписаниеТоваров.Товары Цикл 
				ПолучитьСоответствиеПоСчетамУчета(СтрокаДок,Ложь);		
			КонецЦикла;
			ДокСписаниеТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Завершен;
			ДокСписаниеТоваров.Записать(РежимЗаписиДокумента.Проведение);
			
			СформироватьОприходованиеТоваров();
			ДокОприходованиеТоваров = ДокументОснованиеПриемник.ПолучитьОбъект();
			ДокОприходованиеТоваров.абс_СтатусДокумента = Перечисления.абс_СтатусыПервичныхДокументов.Завершен;
			ДокОприходованиеТоваров.Записать(РежимЗаписиДокумента.Проведение);
			 
	    //Статус Отмена
		ИначеЕсли Статус = Перечисления.абс_СтатусыАвизо.Отмена И ВидОперации = Перечисления.абс_ВидыОперацийАвизо.ПередачаМатериалыВНО Тогда
			Если ЗначениеЗаполнено(ДокументОснованиеИсточник) Тогда 
				ДокСписаниеТоваров = ДокументОснованиеИсточник.ПолучитьОбъект();
				ДокСписаниеТоваров.абс_Статус = Перечисления.абс_СтатусыПервичныхДокументов.Отмена;
				ДокСписаниеТоваров.Записать(РежимЗаписиДокумента.Проведение);                  
			КонецЕсли;
			Если ЗначениеЗаполнено(ДокументОснованиеПриемник) Тогда 
				ДокОприходованиеТоваров = ДокументОснованиеПриемник.ПолучитьОбъект();
				ДокОприходованиеТоваров.абс_СтатусДокумента = Перечисления.абс_СтатусыПервичныхДокументов.Отмена;
				ДокОприходованиеТоваров.Записать(РежимЗаписиДокумента.Проведение);                  
			КонецЕсли;
			СформироватьДокументПемещениеТоваров(Ложь);
		КонецЕсли;
	КонецЕсли;				
КонецПроцедуры

Процедура СформироватьДокументПемещениеТоваров(Источник)
	Если Источник Тогда 
		Если Не ЗначениеЗаполнено(ttk_ПеремещенияТоваровИсточник) Тогда	
			НовыйДокумент = Документы.ПеремещениеТоваров.СоздатьДокумент();
		Иначе 
			НовыйДокумент = ttk_ПеремещенияТоваровИсточник.ПолучитьОбъект();
			НовыйДокумент.Товары.Очистить();
		КонецЕсли;
	Иначе 
		Если Не ЗначениеЗаполнено(ttk_ПеремещенияТоваровПриемник) Тогда	
			НовыйДокумент = Документы.ПеремещениеТоваров.СоздатьДокумент();
		Иначе 
			НовыйДокумент = ttk_ПеремещенияТоваровПриемник.ПолучитьОбъект();
			НовыйДокумент.Товары.Очистить();
		КонецЕсли;
	КонецЕсли;
	НовыйДокумент.Дата							= ТекущаяДата();	
	НовыйДокумент.ВидОперации 					= Перечисления.ВидыОперацийПеремещениеТоваров.ТоварыПродукция;
	НовыйДокумент.Организация 					= Организация;
	НовыйДокумент.ОтражатьВУправленческомУчете	= Истина;
	НовыйДокумент.ОтражатьВБухгалтерскомУчете 	= Ложь;	
	НовыйДокумент.ОтражатьВНалоговомУчете	  	= Ложь;	
	НовыйДокумент.Подразделение					= Подразделение;
	
	Если Источник Тогда 
		НовыйДокумент.СкладОтправитель 			= Склад;
		НовыйДокумент.СкладПолучатель 			= Склад;
	ИначеЕсли ЗначениеЗаполнено(СкладПриемник) И Не Статус = Перечисления.абс_СтатусыАвизо.Отмена Тогда 
		НовыйДокумент.СкладОтправитель 			= СкладПриемник;
		НовыйДокумент.СкладПолучатель 			= СкладПриемник;	
	Иначе 
		НовыйДокумент.СкладОтправитель 			= Склад;
		НовыйДокумент.СкладПолучатель 			= Склад;
	КонецЕсли;                                  	
	НовыйДокумент.Ответственный					= Ответственный;
	НовыйДокумент.ПодразделениеОрганизации		= ПодразделениеОрганизации;
	НовыйДокумент.абс_Статус					= Перечисления.абс_СтатусыПервичныхДокументов.Завершен;
	Для Каждого СтрочкиТЗ Из Товары Цикл 
		НоваяСтрока = НовыйДокумент.Товары.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрочкиТЗ);
		ПолучитьСоответствиеПоСчетамУчета(НоваяСтрока,Источник); 
	КонецЦикла;
	НовыйДокумент.Комментарий = "Создано на основании документа: " + Ссылка;
	НовыйДокумент.Проведен 	  = Истина;	
	НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);

	Если Источник Тогда 
		ttk_ПеремещенияТоваровИсточник = НовыйДокумент.Ссылка;
	Иначе 
		ttk_ПеремещенияТоваровПриемник = НовыйДокумент.Ссылка;
	КонецЕсли;
КонецПроцедуры

Процедура ПолучитьСоответствиеПоСчетамУчета(Строка,Источник)
	
	СоответствиеСчетов = Новый Соответствие;
		
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	Хозрасчетный.Код
		|ИЗ
		|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
		|ГДЕ
		|	Хозрасчетный.Родитель = &Родитель";
	Запрос.УстановитьПараметр("Родитель",ПланыСчетов.Хозрасчетный.Товары);
	ВыборкаСчетовСорокПервого = Запрос.Выполнить().Выгрузить();
	
	Запрос.УстановитьПараметр("Родитель",ПланыСчетов.Хозрасчетный.Материалы);
	ВыборкаСчетовДесятки = Запрос.Выполнить().Выгрузить();
	
	СоответствиеСчетов.Вставить("07","07.13");
	СоответствиеСчетов.Вставить("07.13","07");
	СоответствиеСчетов.Вставить("08.04","08.13");
	СоответствиеСчетов.Вставить("08.13","08.04");
	Для Каждого СтрДесятки из ВыборкаСчетовДесятки Цикл 
		Если СтрДесятки.Код <> "10.13" Тогда
			СоответствиеСчетов.Вставить(СтрДесятки.Код,"10.13");
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого СтрСорокПервого из ВыборкаСчетовСорокПервого Цикл 
		Если СтрСорокПервого.Код <> "41.13" Тогда
			СоответствиеСчетов.Вставить(СтрСорокПервого.Код,"41.13");
		КонецЕсли;
	КонецЦикла;
	
	Если Источник Тогда
		СчетУчетаВПути = СоответствиеСчетов.Получить(Строка.СчетУчетаБУ.Код);
		Строка.НовыйСчетУчетаБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчетаВПути);
		Строка.НовыйСчетУчетаНУ = ПланыСчетов.Налоговый.НайтиПоКоду(СчетУчетаВПути);
	Иначе
		СчетУчетаВПути = СоответствиеСчетов.Получить(Строка.СчетУчетаБУ.Код);
		Если Строка.СчетУчетаБУ <> СчетУчетаВПути Тогда 
			Попытка
				Строка.НовыйСчетУчетаБУ = Строка.СчетУчетаБУ;
				Строка.НовыйСчетУчетаНУ = Строка.СчетУчетаНУ;
				Строка.СчетУчетаБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчетаВПути);
				Строка.СчетУчетаНУ = ПланыСчетов.Налоговый.НайтиПоКоду(СчетУчетаВПути);
			Исключение
				Строка.СчетУчетаБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду(СчетУчетаВПути);
				Строка.СчетУчетаНУ = ПланыСчетов.Налоговый.НайтиПоКоду(СчетУчетаВПути);
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;	
КонецПроцедуры
//--- Колесников А.С. 05.11.2018 [CHG448 / 601]
