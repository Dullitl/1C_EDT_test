Функция ПечатьОбщая(Ссылка) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.НаименованиеОрганизации = Ссылка.Организация.ГоловнаяОрганизация.НаименованиеСокращенное;
	Шапка.Параметры.Заполнить(Ссылка);
	ТабДок.Вывести(Шапка);
	
	//Графа1
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаГрафа1");
	ТабДок.Вывести(ОбластьШапка);
	
	ТЗТабличнаяЧасть = Ссылка.ТабличнаяЧасть.Выгрузить();	
	ОбластьТабличнаяЧасть = Макет.ПолучитьОбласть("ТабличнаяЧастьГрафа1");
	
	НомерПодпункта=0;
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТЗТабличнаяЧасть Цикл
		НомерПодпункта=НомерПодпункта+1;
		ОбластьТабличнаяЧасть.Параметры.НомерПодпункта=НомерПодпункта;
		ОбластьТабличнаяЧасть.Параметры.ДатаДок=Формат(ТекСтрокаТабличнаяЧасть.Дата,"ДФ=dd.MM.yyyy");
		ОбластьТабличнаяЧасть.Параметры.НомДок=ТекСтрокаТабличнаяЧасть.Номер;
		ОбластьТабличнаяЧасть.Параметры.Документ=ТекСтрокаТабличнаяЧасть.Документ;
		ОбластьТабличнаяЧасть.Параметры.Заполнить(ТекСтрокаТабличнаяЧасть);
		ТабДок.Вывести(ОбластьТабличнаяЧасть);
	КонецЦикла;
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалГрафа1");
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Ссылка.Организация, Ссылка.Дата,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьПодвал.Параметры.Руководитель       = Руководитель;
	ОбластьПодвал.Параметры.ГлавныйБухгалтер   = Бухгалтер;
	ТабДок.Вывести(ОбластьПодвал);
	
	//Графа2
	ОбластьГрафа2 = Макет.ПолучитьОбласть("Графа2");
	ТабДок.Вывести(ОбластьГрафа2);
	ТабличнаяЧастьГрафа2 = Макет.ПолучитьОбласть("ТабличнаяЧастьГрафа2");
	НомерПодпункта=0;
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТЗТабличнаяЧасть Цикл
		НомерПодпункта=НомерПодпункта+1;
		ТабличнаяЧастьГрафа2.Параметры.НомерПодпункта=НомерПодпункта;
		ТабличнаяЧастьГрафа2.Параметры.ДатаДок=Формат(ТекСтрокаТабличнаяЧасть.Дата,"ДФ=dd.MM.yyyy");
		ТабличнаяЧастьГрафа2.Параметры.НомДок=ТекСтрокаТабличнаяЧасть.Номер;
		ТабличнаяЧастьГрафа2.Параметры.Документ=ТекСтрокаТабличнаяЧасть.Документ;
		ТабличнаяЧастьГрафа2.Параметры.Заполнить(ТекСтрокаТабличнаяЧасть);
		ТабДок.Вывести(ТабличнаяЧастьГрафа2);
	КонецЦикла;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОбластьПодвал);
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьТовары(Ссылка) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Макет");
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.НаименованиеОрганизации = Ссылка.Организация.ГоловнаяОрганизация;
	Шапка.Параметры.Заполнить(Ссылка);
	ТабДок.Вывести(Шапка);
	
	//Графа1
	ОбластьШапка = Макет.ПолучитьОбласть("ШапкаГрафа1");
	ТабДок.Вывести(ОбластьШапка);
	
	ТЗТабличнаяЧасть = Ссылка.Товары.Выгрузить();	
	ОбластьТабличнаяЧасть = Макет.ПолучитьОбласть("ТабличнаяЧастьГрафа1");
	
	НомерПодпункта=0;
	
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТЗТабличнаяЧасть Цикл
		НомерПодпункта =НомерПодпункта + 1;
		ОбластьТабличнаяЧасть.Параметры.НомерПодпункта = НомерПодпункта;
		ОбластьТабличнаяЧасть.Параметры.ДатаДок     = Формат(ТекСтрокаТабличнаяЧасть.Дата,"ДФ=dd.MM.yyyy");
		ОбластьТабличнаяЧасть.Параметры.НомДок      = ТекСтрокаТабличнаяЧасть.Номер;
		ОбластьТабличнаяЧасть.Параметры.Документ    = ТекСтрокаТабличнаяЧасть.Документ;
		ОбластьТабличнаяЧасть.Параметры.НаименованиеПередаваемогоИмущества = ТекСтрокаТабличнаяЧасть.Номенклатура.Наименование;
		ОбластьТабличнаяЧасть.Параметры.Заполнить(ТекСтрокаТабличнаяЧасть);
		ТабДок.Вывести(ОбластьТабличнаяЧасть);
	КонецЦикла;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("ПодвалГрафа1");
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Ссылка.Организация, Ссылка.Дата,);
	Руководитель = Руководители.Руководитель;
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьПодвал.Параметры.Руководитель       = Руководитель;
	ОбластьПодвал.Параметры.ГлавныйБухгалтер   = Бухгалтер;
	ТабДок.Вывести(ОбластьПодвал);
	
	//Графа2
	ОбластьГрафа2 = Макет.ПолучитьОбласть("Графа2");
	ТабДок.Вывести(ОбластьГрафа2);
	ТабличнаяЧастьГрафа2 = Макет.ПолучитьОбласть("ТабличнаяЧастьГрафа2");
	НомерПодпункта=0;
	Для Каждого ТекСтрокаТабличнаяЧасть Из ТЗТабличнаяЧасть Цикл
		НомерПодпункта = НомерПодпункта + 1;
		ТабличнаяЧастьГрафа2.Параметры.НомерПодпункта = НомерПодпункта;
		ТабличнаяЧастьГрафа2.Параметры.ДатаДок		  = Формат(ТекСтрокаТабличнаяЧасть.Дата,"ДФ=dd.MM.yyyy");
		ТабличнаяЧастьГрафа2.Параметры.НомДок 		  = ТекСтрокаТабличнаяЧасть.Номер;
		ТабличнаяЧастьГрафа2.Параметры.Документ       = ТекСтрокаТабличнаяЧасть.Документ;
		ТабличнаяЧастьГрафа2.Параметры.НаименованиеПередаваемогоИмущества = ТекСтрокаТабличнаяЧасть.Номенклатура.Наименование;
		ТабличнаяЧастьГрафа2.Параметры.Заполнить(ТекСтрокаТабличнаяЧасть);
		ТабДок.Вывести(ТабличнаяЧастьГрафа2);
	КонецЦикла;
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ТабДок.Вывести(ОбластьПодвал);
	
	Возврат ТабДок;
КонецФункции

Функция ПечатьСводное(Ссылка) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Сводное");
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	Шапка.Параметры.Номер = Ссылка.Номер;
	
	ТекстВЛице = " в лице __________________, действующего на основании __________________";
	
	Шапка.Параметры.ТекстШапки = 	"Головное подразделение " + 
									?(ЗначениеЗаполнено(Ссылка.Организация.ГоловнаяОрганизация),Ссылка.Организация.ГоловнаяОрганизация,"__________________") + ТекстВЛице + 
									", передает, а " + ?(ЗначениеЗаполнено(Ссылка.Филиал),Ссылка.Филиал,"__________________") + ТекстВЛице + 
									" принимает следующие активы и обязательства, необходимые для осуществления деятельности филиала";
	ТабДок.Вывести(Шапка);
	
	//Таблица
	ОбластьШапкаТаблица = Макет.ПолучитьОбласть("ШапкаТаблица");
	ТабДок.Вывести(ОбластьШапкаТаблица);
	
	ТзТабличнаяЧасть = Ссылка.ТабличнаяЧасть.Выгрузить();
	ОбластьТабличнаяЧасть = Макет.ПолучитьОбласть("Таблица");
	
	Для Каждого СтрокаТабличнаяЧасть Из ТзТабличнаяЧасть Цикл
		Если СтрокаТабличнаяЧасть.СчетДт = ПланыСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу Тогда
			ОбластьТабличнаяЧасть.Параметры.СчетБУ = СтрокаТабличнаяЧасть.СчетКт; 			
		ИначеЕсли СтрокаТабличнаяЧасть.СчетКт = ПланыСчетов.Хозрасчетный.РасчетыПоВыделенномуИмуществу Тогда
			ОбластьТабличнаяЧасть.Параметры.СчетБУ = СтрокаТабличнаяЧасть.СчетДт;
		КонецЕсли;
		ОбластьТабличнаяЧасть.Параметры.Наименование 			= СтрокаТабличнаяЧасть.НаименованиеПередаваемогоИмущества;
		ОбластьТабличнаяЧасть.Параметры.НомерПриложения 		= СтрокаТабличнаяЧасть.Номер; 
		ОбластьТабличнаяЧасть.Параметры.КоличествоЛистов 		= "";
		ОбластьТабличнаяЧасть.Параметры.СуммаАктивыБУ 			= СтрокаТабличнаяЧасть.Сумма;
		ОбластьТабличнаяЧасть.Параметры.СуммаАктивыНУ 			= СтрокаТабличнаяЧасть.СуммаНУ;
		ОбластьТабличнаяЧасть.Параметры.СуммаОбязательстваБУ 	= СтрокаТабличнаяЧасть.Сумма;  
		
		ТабДок.Вывести(ОбластьТабличнаяЧасть);
	КонецЦикла;
	
	//Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	//Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Ссылка.Организация, Ссылка.Дата,);
	//Руководитель = Руководители.Руководитель;
	//Бухгалтер    = Руководители.ГлавныйБухгалтер;
	//ОбластьПодвал.Параметры.Руководитель       = Руководитель;
	//ОбластьПодвал.Параметры.ГлавныйБухгалтер   = Бухгалтер;
	ТабДок.Вывести(ОбластьПодвал);	
		
	Возврат ТабДок;
	
КонецФункции


Функция ПечатьОС2(Ссылка) Экспорт
	
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ОС2");
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	#Если НЕ Сервер Тогда
		Шапка.Параметры.ПредставлениеПередал = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		Шапка.Параметры.ПредставлениеПолучил = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.ОрганизацияПриемник, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#Иначе
		Шапка.Параметры.ПредставлениеПередал = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		Шапка.Параметры.ПредставлениеПолучил = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.ОрганизацияПриемник, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#КонецЕсли
	
	Шапка.Параметры.Заполнить(Ссылка);     
	Шапка.Параметры.Дата = Формат(Шапка.Параметры.Дата,"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(Шапка);
	
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница 1";
	ТабДок.Вывести(ЗаголовокТаблицы);
	НомерСтраницы   = 1;
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	абс_АВИЗООсновныеСредства.ОсновноеСредство КАК Наименование,
	|	1 КАК Количество,
	|	абс_АВИЗООсновныеСредства.СтоимостьБУ КАК СтоимостьЕдиницы,
	|	абс_АВИЗООсновныеСредства.СтоимостьБУ КАК Всего,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер,
	|	абс_АВИЗООсновныеСредства.ОсновноеСредство.ДатаВыпуска КАК ДатаПриобретения
	|ИЗ
	|	Документ.абс_АВИЗО.ОсновныеСредства КАК абс_АВИЗООсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ПО абс_АВИЗООсновныеСредства.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|ГДЕ
	|	абс_АВИЗООсновныеСредства.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	Результат = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	КоличествоСтрок = ВыборкаДетальныеЗаписи.Количество();
	ИтогСуммыПоСтранице = 0;
	Ном                 = 0;
	
	а = 1;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Область = Макет.ПолучитьОбласть("Строка");
		
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(Область);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;		        
		
		Если Не ТабДок.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			
			НомерСтраницы	= НомерСтраницы + 1;
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДок.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		
		Область.Параметры.НомерПП = а;
		ЗаполнитьЗначенияСвойств(Область.Параметры,ВыборкаДетальныеЗаписи);
		ИтогСуммыПоСтранице = ИтогСуммыПоСтранице + ВыборкаДетальныеЗаписи.СтоимостьЕдиницы;
		ТабДок.Вывести(Область);
		а = а + 1;
	КонецЦикла;
	
	Область = Макет.ПолучитьОбласть("ИтогиПоСтранице");
	Область.Параметры.ИтогСуммыПоСтранице = ИтогСуммыПоСтранице;	
	ТабДок.Вывести(Область);
	
	Если ЗначениеЗаполнено(Ссылка.Сдал) Тогда
		ФизЛицо   = Ссылка.Сдал.ФизЛицо;
		ОбластьПодвала.Параметры.ДолжностьОтправителя	= ПолучитьДолжность(Ссылка.Сдал,Ссылка.Организация);			
		ОбластьПодвала.Параметры.ФИООтправителя         = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка.Принял) Тогда
		ФизЛицо   = Ссылка.Принял.ФизЛицо;
		ОбластьПодвала.Параметры.ДолжностьПолучателя	= ПолучитьДолжность(Ссылка.Принял,Ссылка.ОрганизацияПриемник);	
		ОбластьПодвала.Параметры.ФИОПолучателя          = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
	
	ОбластьПодвала.Параметры.ДатаДень    =  Строка(День(Ссылка.Дата));
	ОбластьПодвала.Параметры.ДатаМесяц   =  СокрЛП(Сред(Формат(Ссылка.Дата,"ДЛФ=DD"),3,8));
	ОбластьПодвала.Параметры.ДатаГод     =  Прав(Строка(Год(Ссылка.Дата)),2);
	ТабДок.Вывести(ОбластьПодвала);
	
	РазмерСтроки1   = 80; 
	РазмерСтрокиНе1 = 180;
	Область = Макет.ПолучитьОбласть("Примечание1");
	
	Если РазмерСтроки1 >= СтрДлина(Ссылка.Примечание) Тогда
		Область.Параметры.Строка = Ссылка.Примечание; 
	Иначе	
		Область.Параметры.Строка = Лев(СокрЛП(Ссылка.Примечание),РазмерСтроки1); 
	КонецЕсли;
	
	ТабДок.Вывести(Область);
	КолвоСтрок = Цел((СтрДлина(Ссылка.Примечание) - РазмерСтроки1) / РазмерСтрокиНе1);
	ТекПримечание = СокрЛП(Прав(СокрЛП(Ссылка.Примечание),СтрДлина(СокрЛП(Ссылка.Примечание)) - РазмерСтроки1));
	
	Если СтрДлина(СокрЛП(Ссылка.Примечание)) > РазмерСтроки1 Тогда
		Для а = 1 По КолвоСтрок + 1  Цикл
			Область = Макет.ПолучитьОбласть("Примечание2");
			Область.Параметры.Строка = Лев(ТекПримечание,РазмерСтрокиНе1); 
			ТабДок.Вывести(Область);
			ТекПримечание = СокрЛП(Прав(ТекПримечание,СтрДлина(ТекПримечание) - РазмерСтрокиНе1));
		КонецЦикла;
	КонецЕсли;

	Область = Макет.ПолучитьОбласть("Примечание3");
	//Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Ссылка.Организация, Ссылка.Дата,);
	//Бухгалтер    = Руководители.ГлавныйБухгалтер;
	
	Если ЗначениеЗаполнено(Ссылка.ПодписантОС2) Тогда
		ФизЛицо   = Ссылка.ПодписантОС2.ФизЛицо;
		Область.Параметры.ДолжностьПодписант	= ПолучитьДолжность(Ссылка.ПодписантОС2,Ссылка.Организация);		
		Область.Параметры.ФИОПодписант          = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;

	//Область.Параметры.ФИОПолучателя = Бухгалтер;
	ТабДок.Вывести(Область);
	
	Возврат ТабДок;
	
 КонецФункции 
 
Функция ПолучитьДолжность(Сотрудник,Организация)
	 
	 Если ТипЗнч(Сотрудник) = Тип("СправочникСсылка.Пользователи") Тогда			
		 ФизЛицо   = Сотрудник.ФизЛицо;
		 // Start КТТК Ермолов Е.Л.  22.04.2016 #7730606
		 Попытка
			 Должность = Сотрудник.абс_Сотрудник.ТекущаяДолжностьОрганизации;
		 Исключение
		     Должность = Неопределено;
		 КонецПопытки; 
		 // Stop КТТК Ермолов Е.Л.  22.04.2016
	 ИначеЕсли ТипЗнч(Сотрудник) = Тип("СправочникСсылка.СотрудникиОрганизаций") Тогда	
		 ФизЛицо   = Сотрудник.ФизЛицо;
		 Должность = Сотрудник.ТекущаяДолжностьОрганизации;
	 ИначеЕсли ТипЗнч(Сотрудник) = Тип("СправочникСсылка.ФизическиеЛица") Тогда	
		 ФизЛицо = Сотрудник;
		 Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		 |	СотрудникиОрганизаций.ТекущаяДолжностьОрганизации КАК Должность
		 |ИЗ
		 |	Справочник.СотрудникиОрганизаций КАК СотрудникиОрганизаций
		 |ГДЕ
		 |	СотрудникиОрганизаций.Физлицо = &Ссылка
		 |	И СотрудникиОрганизаций.Актуальность
		 |	И СотрудникиОрганизаций.Организация = &Организация");
		 Запрос.УстановитьПараметр("Ссылка",Сотрудник);
		 Запрос.УстановитьПараметр("Организация",Организация);
		 Рез = Запрос.Выполнить().Выбрать();
		 Рез.Следующий();
		 Должность = ?(Рез.Должность=Null,"",Рез.Должность);
	 Иначе	
		 ФизЛицо = ""; // = ?(Получил = Неопределено,Справочники.ФизическиеЛица.ПустаяСсылка(),Получил);
		 Должность = "";
	 КонецЕсли;
	 
	 Возврат Должность;
	 
 КонецФункции  
 
Функция ПечатьМ15(Ссылка) Экспорт
 
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("М15");
	
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	#Если НЕ Сервер Тогда
		Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		Шапка.Параметры.КонтрагентНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.ОрганизацияПриемник, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#Иначе
		Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		Шапка.Параметры.КонтрагентНаименование = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.ОрганизацияПриемник, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#КонецЕсли
	
	Шапка.Параметры.ОрганизацияПоОКПО        = Ссылка.Организация.КодПоОКПО;
	Шапка.Параметры.Заполнить(Ссылка);
	Шапка.Параметры.Основание = Ссылка.Основание.Основание;
	Шапка.Параметры.Дата = Формат(Шапка.Параметры.Дата,"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(Шапка);
	
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница 1";
	ТабДок.Вывести(ЗаголовокТаблицы);
	НомерСтраницы   = 1;
	
	// Создаем массив для проверки вывода
	МассивВыводимыхОбластей = Новый Массив;
	ОбластьПодвала = Макет.ПолучитьОбласть("Подвал");
	
	МассивСчетовДляПечати = Новый Массив;
	МассивСчетовДляПечати.Добавить(ПланыСчетов.Хозрасчетный.Материалы);
	МассивСчетовДляПечати.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	МассивСчетовДляПечати.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
	
	тзВыборкаДетальныеЗаписи = абс_БизнесПроцессыПривелегированный.ПолучитьТаблицуПоДокументу(МассивСчетовДляПечати,Новый Структура("СсылкаНаОбъект",Ссылка));
	//ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	КоличествоСтрок = тзВыборкаДетальныеЗаписи.Количество();
	ИтогоКоличествоПринято = 0;
	ИтогоСуммаБезНДС = 0;
	ИтогоСуммаНДС    = 0;
	ИтогоВсегоСНДС   = 0;
	Ном              = 0;
	
	КоличествоПром	= 0;
	СуммаБезНДСПром  = 0;
	
	Для Каждого ВыборкаДетальныеЗаписи ИЗ  тзВыборкаДетальныеЗаписи Цикл
		
		
		Ном = Ном + 1;
		Область = Макет.ПолучитьОбласть("Строка");
		
		МассивВыводимыхОбластей.Очистить();
		МассивВыводимыхОбластей.Добавить(Область);
		Если Ном = КоличествоСтрок Тогда
			МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		КонецЕсли;		        
		         
		//Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДок, МассивВыводимыхОбластей) Тогда
		Если Не ТабДок.ПроверитьВывод(МассивВыводимыхОбластей) Тогда
			
			ОблИтог  =  Макет.ПолучитьОбласть("СтрокаИтог");
            ОблИтог.Параметры.КоличествоПром   = КоличествоПром;
            ОблИтог.Параметры.СуммаБезНДСПром  = СуммаБезНДСПром;
			ТабДок.Вывести(ОблИтог);
			
			КоличествоПром	= 0;
			СуммаБезНДСПром  = 0;
			
			НомерСтраницы	= НомерСтраницы + 1;
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДок.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Область.Параметры,ВыборкаДетальныеЗаписи);
		
		#Если НЕ Сервер Тогда
			Область.Параметры.ТоварНаименование = ВыборкаДетальныеЗаписи.ТоварНаименование + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаДетальныеЗаписи);
		#Иначе
			Область.Параметры.ТоварНаименование = ВыборкаДетальныеЗаписи.ТоварНаименование + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаДетальныеЗаписи);
		#КонецЕсли
		
		ТабДок.Вывести(Область);
		
		ИтогоКоличествоПринято = ИтогоКоличествоПринято + ВыборкаДетальныеЗаписи.Количество;
		ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВыборкаДетальныеЗаписи.СуммаБезНДС;
		ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВыборкаДетальныеЗаписи.СуммаСНДС;
		ИтогоСуммаНДС          = ИтогоСуммаНДС          + ВыборкаДетальныеЗаписи.СуммаНДС;
		
		КоличествоПром	 = КоличествоПром  + ВыборкаДетальныеЗаписи.Количество;
		СуммаБезНДСПром  = СуммаБезНДСПром + ВыборкаДетальныеЗаписи.СуммаБезНДС;
		
	КонецЦикла;
	
	ОблИтог  =  Макет.ПолучитьОбласть("СтрокаИтог");
	ОблИтог.Параметры.КоличествоПром   = КоличествоПром;
	ОблИтог.Параметры.СуммаБезНДСПром  = СуммаБезНДСПром;
	ТабДок.Вывести(ОблИтог);
	
	ОблИтог  =  Макет.ПолучитьОбласть("СтрокаИтог1");
	ОблИтог.Параметры.КоличествоПром   = ИтогоКоличествоПринято;
	ОблИтог.Параметры.СуммаБезНДСПром  = ИтогоСуммаБезНДС;
	ТабДок.Вывести(ОблИтог);
	
	
	ОбластьПодвала.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью   =  ЧислоПрописью(Ссылка.Товары.Количество(), ,",,,,,,,,0");
	ОбластьПодвала.Параметры.СуммаПрописью                                =  ЭлектронныеДокументыПереопределяемый.СуммаПрописью(ИтогоВсегоСНДС,);
	ОбластьПодвала.Параметры.ИтогНДС                                      =  ЭлектронныеДокументыПереопределяемый.СуммаПрописью(ИтогоСуммаНДС,);
	
	Руководители = РегламентированнаяОтчетность.ОтветственныеЛицаОрганизаций(Ссылка.Организация, Ссылка.Дата,);
	Бухгалтер    = Руководители.ГлавныйБухгалтер;
	ОбластьПодвала.Параметры.ФИОГлавБухгалтера                            = Бухгалтер;
	
	
	Если ЗначениеЗаполнено(Ссылка.ОтпускРазрешил) Тогда
// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
// ошибка
// {{Старый код:
		//ФизЛицо   = Ссылка.ОтпускРазрешил.ФизЛицо;
// }}Новый код:
		Если ТипЗнч(Ссылка.ОтпускРазрешил) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ФизЛицо   = Ссылка.ОтпускРазрешил;
		Иначе
			ФизЛицо   = Ссылка.ОтпускРазрешил.ФизЛицо;
		КонецЕсли;
// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 		
		ОбластьПодвала.Параметры.ДолжностьРазрешил	  = ПолучитьДолжность(Ссылка.ОтпускРазрешил,Ссылка.Организация);		
		ОбластьПодвала.Параметры.ФИОразрешил          = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка.Отпустил) Тогда
// {{KM WARE Лазаревский К.В. Заявка № 08.09.2015 начало
// ошибка
// {{Старый код:
		//ФизЛицо   = Ссылка.Отпустил.ФизЛицо;
// }}Новый код:
		Если ТипЗнч(Ссылка.Отпустил) = Тип("СправочникСсылка.ФизическиеЛица") Тогда
			ФизЛицо   = Ссылка.Отпустил;
		Иначе
			ФизЛицо   = Ссылка.Отпустил.ФизЛицо;
		КонецЕсли;
// }}KM WARE Лазаревский К.В. Заявка № 08.09.2015 окончание 		
		ОбластьПодвала.Параметры.ДолжностьОтпустил	  = ПолучитьДолжность(Ссылка.Отпустил,Ссылка.Организация);		
		ОбластьПодвала.Параметры.ФИООтпустил          = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка.Получил) Тогда
		ФизЛицо   = Ссылка.Получил.ФизЛицо;
		ОбластьПодвала.Параметры.ДолжностьПолучил	= ПолучитьДолжность(Ссылка.Получил,Ссылка.ОрганизацияПриемник);		
		ОбластьПодвала.Параметры.ФИОПолучил         = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
	
	ТабДок.Вывести(ОбластьПодвала);
	
	Возврат ТабДок;
 
 КонецФункции
 
Функция ПечатьТОРГ13(Ссылка) Экспорт
 
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("ТОРГ13");
	
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	#Если НЕ Сервер Тогда
		Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#Иначе
		Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#КонецЕсли
	
	Шапка.Параметры.ОрганизацияПоОКПО        = Ссылка.Организация.КодПоОКПО;
	Шапка.Параметры.Заполнить(Ссылка);
	Шапка.Параметры.Дата = Формат(Шапка.Параметры.Дата,"ДФ=dd.MM.yyyy");
	ТабДок.Вывести(Шапка);
	
	ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница 1";
	ТабДок.Вывести(ЗаголовокТаблицы);
	
	МассивСчетовДляПечати = Новый Массив;
	МассивСчетовДляПечати.Добавить(ПланыСчетов.Хозрасчетный.Товары);
//	МассивСчетовДляПечати.Добавить(ПланыСчетов.Хозрасчетный.ОборудованиеКУстановке);
	//МассивСчетовДляПечати.Добавить(ПланыСчетов.Хозрасчетный.ВложенияВоВнеоборотныеАктивы);
	
	тзВыборкаДетальныеЗаписи = абс_БизнесПроцессыПривелегированный.ПолучитьТаблицуПоДокументу(МассивСчетовДляПечати,Новый Структура("СсылкаНаОбъект",Ссылка));
//	ВыборкаДетальныеЗаписи = Результат.Выбрать();
	
	СтрокНаСтранице = 23;
	СтрокШапки      = 10;
	СтрокПодвала    = 9;
	НомерСтраницы   = 1;
	
	КоличествоСтрок = тзВыборкаДетальныеЗаписи.Количество();
	
	Если КоличествоСтрок = 1 Тогда
		ПереноситьПоследнююСтроку = 0;
	Иначе
		ЦелыхСтраницСПодвалом     = Цел((СтрокШапки + КоличествоСтрок + СтрокПодвала) / СтрокНаСтранице);
		ЦелыхСтраницБезПодвала    = Цел((СтрокШапки + КоличествоСтрок - 1) / СтрокНаСтранице);
		ПереноситьПоследнююСтроку = ЦелыхСтраницСПодвалом - ЦелыхСтраницБезПодвала;
	КонецЕсли;
	
	// инициализация итогов по странице
	ИтогКоличествоМестПоСтранице = 0;
	ИтогМассаБруттоПоСтранице    = 0;
	ИтогМассыНеттоПоСтранице     = 0;
	ИтогСуммыПоСтранице          = 0;
	
	// инициализация итогов по документу
	ИтогоКоличество  = 0;
	ИтогоМассаБрутто = 0;
	ИтогоМассаНетто  = 0;
	ИтогоСумма       = 0;
	
	Ном = 0;
	
	
	Для Каждого ВыборкаДетальныеЗаписи из тзВыборкаДетальныеЗаписи  Цикл
		
		Ном = Ном + 1;
		ЦелаяСтраница = (СтрокШапки + Ном - 1) / СтрокНаСтранице;
		
		Если (ЦелаяСтраница = Цел(ЦелаяСтраница))
			или ((ПереноситьПоследнююСтроку = 1) и (Ном = КоличествоСтрок)) Тогда
			
			ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
			ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
			ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
			
			ТабДок.Вывести(ОбластьИтоговПоСтранице);
			
			// инициализация итогов по странице
			ИтогКоличествоМестПоСтранице = 0;
			ИтогСуммыПоСтранице          = 0;
			
			НомерСтраницы = НомерСтраницы + 1;
			ТабДок.ВывестиГоризонтальныйРазделительСтраниц();
			ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
			ТабДок.Вывести(ЗаголовокТаблицы);
		КонецЕсли;
		
		Область = Макет.ПолучитьОбласть("Строка");
		ЗаполнитьЗначенияСвойств(Область.Параметры,ВыборкаДетальныеЗаписи);
		
		#Если НЕ Сервер Тогда
			Область.Параметры.ТоварНаименование = ВыборкаДетальныеЗаписи.ТоварНаименование + ФормированиеПечатныхФорм.ПредставлениеСерий(ВыборкаДетальныеЗаписи);
		#Иначе
			Область.Параметры.ТоварНаименование = ВыборкаДетальныеЗаписи.ТоварНаименование + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаДетальныеЗаписи);
		#КонецЕсли
		
		ТабДок.Вывести(Область);
		
		
		// Обновим итоги по странице
		ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице + ВыборкаДетальныеЗаписи.КоличествоМест;
		ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице          + ВыборкаДетальныеЗаписи.Сумма;
		
		// Обновим итогов по документу
		ИтогоКоличество  = ИтогоКоличество  + ВыборкаДетальныеЗаписи.КоличествоМест;
		ИтогоСумма       = ИтогоСумма       + ВыборкаДетальныеЗаписи.Сумма;
		
	КонецЦикла;
	
	ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ИтогиПоСтранице");
	ОбластьИтоговПоСтранице.Параметры.ИтогКоличествоМестПоСтранице = ИтогКоличествоМестПоСтранице;
	ОбластьИтоговПоСтранице.Параметры.ИтогСуммыПоСтранице          = ИтогСуммыПоСтранице;
	
	ТабДок.Вывести(ОбластьИтоговПоСтранице);
	
	Область = Макет.ПолучитьОбласть("Подвал");	

	Если ЗначениеЗаполнено(Ссылка.Отпустил) Тогда
		ФизЛицо   = Ссылка.Отпустил.ФизЛицо;
		Область.Параметры.ДолжностьОтправителя	  = ПолучитьДолжность(Ссылка.Отпустил,Ссылка.Организация);		
		Область.Параметры.ФИООтправителя          = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Ссылка.Получил) Тогда
		ФизЛицо   = Ссылка.Получил.ФизЛицо;
		Область.Параметры.ДолжностьПолучателя	  = ПолучитьДолжность(Ссылка.Получил,Ссылка.ОрганизацияПриемник);		
		Область.Параметры.ФИОПолучателя          = ОбщегоНазначения.ФамилияИнициалыФизЛица(ФизЛицо);
	КонецЕсли;
	
	Область.Параметры.ИтогоСуммаПрописью     =  ЭлектронныеДокументыПереопределяемый.СуммаПрописью(Ссылка.Товары.Итог("Сумма"),);
	ТабДок.Вывести(Область);
	
	Возврат ТабДок;
 
 КонецФункции
 
Функция ПечатьАвизо(Ссылка) Экспорт
 
	ТабДок = Новый ТабличныйДокумент;
	Макет = ПолучитьМакет("Авизо");
	
	// Шапка
	Шапка = Макет.ПолучитьОбласть("Шапка");
	
	#Если НЕ Сервер Тогда
		Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		Шапка.Параметры.КонтрагентНаименование = ФормированиеПечатныхФорм.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.ОрганизацияПриемник, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#Иначе
		Шапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.Организация, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
		Шапка.Параметры.КонтрагентНаименование = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Ссылка.ОрганизацияПриемник, Ссылка.Дата), "ПолноеНаименование,ИНН,ЮридическийАдрес,Телефоны,НомерСчета,Банк,БИК,КоррСчет,");
	#КонецЕсли
	
	Шапка.Параметры.Заполнить(Ссылка);
	Шапка.Параметры.Дата = Формат(Шапка.Параметры.Дата,"ДФ=dd.MM.yyyy");
	Шапка.Параметры.Основание = СокрЛП(Ссылка.Основание.Основание);
	
	Если ЗначениеЗаполнено(Ссылка.ОрганизацияПриемник) Тогда
		Шапка.Параметры.Субконто1 = Ссылка.ОрганизацияПриемник.Наименование;
	КонецЕсли;
	
	ТабДок.Вывести(Шапка);
	
	тзВыборкаДетальныеЗаписи = абс_БизнесПроцессыПривелегированный.ПолучитьТаблицуАвизо(Новый Структура("СсылкаНаОбъект",Ссылка));

	НомерПП = 1;
	Для Каждого ВыборкаДетальныеЗаписи ИЗ тзВыборкаДетальныеЗаписи  Цикл
		Область = Макет.ПолучитьОбласть("Строка");
		ЗаполнитьЗначенияСвойств(Область.Параметры,ВыборкаДетальныеЗаписи);
		Область.Параметры.НомерПП = НомерПП;
		ТабДок.Вывести(Область);
		НомерПП = НомерПП + 1;
	КонецЦикла;
	                 
	Область = Макет.ПолучитьОбласть("Подвал");	 
	ТабДок.Вывести(Область);
	
	Возврат ТабДок;
 
 КонецФункции 
