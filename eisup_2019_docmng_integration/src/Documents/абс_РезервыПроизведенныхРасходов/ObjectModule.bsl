
// Обработчики событий
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// Проверим есть ли право на ввод документа
	мТекущийПользователь 	= глЗначениеПеременной("глТекущийПользователь");
	мРолиПользователя 		= абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, Организация);
	
	Если (абс_БизнесПроцессы.ПолучитьОтветственныхРНПД(Организация, ВидОперации, ЦФО, Дирекция).Найти(Ответственный) = Неопределено)
		И (мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользовательРНПД) = Неопределено)
		//АБС ВСТАВКА №31192 НАЧАЛО «5 февраля 2015 г.», Пополитов
		И (мРолиПользователя.Найти(Справочники.РолиИсполнителей.БухгалтерРНПД) = Неопределено)
		//\\АБС ВСТАВКА №31192 КОНЕЦ	
		Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Недостаточно прав для работы с документом!", Отказ);
	КонецЕсли;
	
	Если НЕ абс_БизнесПроцессы.ПроверитьНаличиеФайловРНПД(Ссылка, Ссылка.Статус, Статус) Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не прикреплены файлы к документу.", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РежимЗаписи = РежимЗаписиДокумента.Проведение;
	
	ДоступностьДирекции = ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыДокументовРНПД.ПоДирекции");
	
	Если НЕ ДоступностьДирекции Тогда
		
		Дирекция = Справочники.ПодразделенияОрганизаций.ПустаяСсылка();
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПодразделениеОрганизации) Тогда
		
		СписокПодразделений = ПолучитьСписокПодразделенийОрганизаций(ЦФО, Организация);
		
		Если СписокПодразделений.Количество() > 0 Тогда
			ПодразделениеОрганизации = СписокПодразделений[0].Значение;
		КонецЕсли;
		
	КонецЕсли;	
	
	Если Статус = Перечисления.абс_СтатусыРПР.Подготовка И ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО И НЕ ЗначениеЗаполнено(РуководительПодразделения) Тогда
		
		РуководительПодразделения = глЗначениеПеременной("глТекущийПользователь");
		
	КонецЕсли;
	
	Если ОтветственныйБухгалтер.Пустая() и Статус = Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов Тогда   		
		ОтветственныйБухгалтер = глЗначениеПеременной("глТекущийПользователь");    		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	
	СогласованиеБезБП 	= глЗначениеПеременной("абс_СогласованиеБезБП");
	
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		
		СтатусПоРегистру = абс_БизнесПроцессы.ПолучитьСтатусРПРПоРегистру(Ссылка);
		
		Если НЕ Статус = СтатусПоРегистру Тогда
			ЗаписатьНовыйСтатус(Статус, ПричинаИзмененияСтатуса);		
		КонецЕсли;
		
		
		Если Не СогласованиеБезБП Тогда
			//Запустим БП если он еще не запущен
			Если (ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции И Статус = Перечисления.абс_СтатусыРПР.УтверждениеРуководителемЦФО) ИЛИ 
				(ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО И Статус = Перечисления.абс_СтатусыРПР.СогласованиеДФМ) Тогда
				
				БПСогласование = НайтиБПСогласование();
				
				Если Не ЗначениеЗаполнено(БПСогласование) Тогда
					абс_БизнесПроцессы.ЗапуститьБПСогласованияРПР(Ссылка);	
				КонецЕсли;
				
			КонецЕсли;
			
			// Попробуем закрыть задачу согласования
			ЗадачаСогласование = ПолучитьЗадачуПоРНПСогласование();
			
			Если ЗадачаСогласование = Неопределено Тогда
				Возврат;
			КонецЕсли;
			
			Если НЕ ЗадачаСогласование.Выполнена Тогда
				
				ЗадачаОбъект = ЗадачаСогласование.ПолучитьОбъект();			
				ЗадачаОбъект.ВыполнитьЗадачу();
			КонецЕсли;
		КонецЕсли;
		
	Исключение
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при записи документа: " + ОписаниеОшибки() + ".", Отказ);
		Возврат;
	КонецПопытки;
	// АБС Изменение Родин Отключение бизнес-процессов 110314
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	//Исаенко С.П. 23.10.2018
	Если ttk_ИнтеграцияБП30Сервер.ПроверкаИспользованияКонстантыИнтеграцияБП30(Дата) Тогда
		Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Очистить();
		Движения.абс_ЗатратыПоДоговорамСКонтролемЛимитов.Очистить();
		Движения.абс_НачислениеРНПД.Очистить();
		Движения.абс_НезавершенноеПроизводствоБУ.Очистить();
		Движения.абс_НезавершенноеПроизводствоНУ.Очистить();
		Движения.КонтролируемыеЗначенияБюджетов.Очистить();
		Движения.Налоговый.Очистить();
		Движения.ОборотыБюджетов.Очистить();
		Движения.Хозрасчетный.Очистить();
		Возврат;
	КонецЕсли;	
	//ххх Брель Виктор Андреевич 03.04.2018 16:39:57, заявка <<<
	Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Очистить();	
	Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Записать();
	
	Движения.КонтролируемыеЗначенияБюджетов.Очистить();	
	Движения.КонтролируемыеЗначенияБюджетов.Записать();
	
	
	
	СписокСтатусовДляИсключенияФормированияДвижений = Новый СписокЗначений;
	СписокСтатусовДляИсключенияФормированияДвижений.Добавить(Перечисления.Абс_СтатусыРПР.Подготовка);
	СписокСтатусовДляИсключенияФормированияДвижений.Добавить(Перечисления.Абс_СтатусыРПР.Отказ);
	
	ФормироватьДвижения =СписокСтатусовДляИсключенияФормированияДвижений.НайтиПоЗначению(Статус) = Неопределено;
	
	
	СписокСтатусовДляИсключенияКонтроля = Новый СписокЗначений;
	СписокСтатусовДляИсключенияКонтроля.Добавить(Перечисления.Абс_СтатусыРПР.Подготовка);
	СписокСтатусовДляИсключенияКонтроля.Добавить(Перечисления.Абс_СтатусыРПР.Отказ);
	
	Контроль =СписокСтатусовДляИсключенияКонтроля.НайтиПоЗначению(Статус) = Неопределено;
	
	// Движения
	Если ФормироватьДвижения Тогда	
		СформироватьДвиженияПоГрафикуПоставок (ВидОперации,Отказ);				
		СформироватьДвиженияПоКонтролируемыеЗначенияБюджетов (ВидОперации,Отказ);				
	КонецЕсли;
	
	// Контроль
	Если Контроль Тогда
		Если ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции  Тогда
			// Контроль Графика Поступлений
			КонтрольОтрицательныхОстатковПоГрафикуПоступлений(Отказ);
			// Контроль Контролируемые Значения Бюджетов
			КонтрольЛимитов(Отказ);	
		ИначеЕсли ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО  Тогда
			// Контроль Графика Поступлений
			//КонтрольОтрицательныхОстатковПоГрафикуПоступлений(Отказ);
			// Контроль Контролируемые Значения Бюджетов
			//КонтрольЛимитов(Отказ);				
		КонецЕсли;		
	КонецЕсли;
	// Брель Виктор Андреевич 03.04.2018 16:39:57 >>>
	
	// Контроль Номенклатурной Группы ан 20-х счетах
	
	
	СтатусыОтказПодготовка = Новый Массив;
	
	СтатусыОтказПодготовка.Добавить(Перечисления.абс_СтатусыРПР.Подготовка);
	СтатусыОтказПодготовка.Добавить(Перечисления.абс_СтатусыРПР.Отказ);
	
	// Проведение:
	// Вид операции - По дирекции:
	// Проводим по регистру сведений с контролем 
	// Вид операции - По ЦФО:
	// Проверяем на существующие документы по ЦФО, если документ уже есть, то не разрешаем провести
	
	Движения.абс_НачислениеРНПД.Очистить();	
	Движения.абс_НачислениеРНПД.Записать();
	
	Если ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО Тогда
		
		ПолныеПрава.ЗаписатьНаборЗаписейНаСервере("Хозрасчетный", Ссылка, , "РегистрБухгалтерии", Отказ);
		ПолныеПрава.ЗаписатьНаборЗаписейНаСервере("Налоговый", Ссылка, , "РегистрБухгалтерии", Отказ);	
		
	КонецЕсли;
	
	ТаблицаПоДокументу = ПолучитьТаблицуДокумента();
	
	ПроверитьТабличнуюЧастьДокумента(ТаблицаПоДокументу, Отказ);
	
	Если ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции И СтатусыОтказПодготовка.Найти(Статус) = Неопределено Тогда
		
		// Проверим на начисление РНПД в текущем месяце
		ПроверитьНачисленияРНПДВТекущемМесяце(ТаблицаПоДокументу.ВыгрузитьКолонку("ЗакупочныйЗаказ"), Отказ);
		
		Если Отказ Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при проведении документа.");
			Возврат;
		КонецЕсли;
		
		ДвиженияПоРегиструСведений = Движения.абс_НачислениеРНПД;
		
		
		Для Каждого СтрокаПоДокументу Из ТаблицаПоДокументу Цикл
			
			Движение = ДвиженияПоРегиструСведений.Добавить();
			
			Движение.Активность = Истина;
			
			ЗаполнитьЗначенияСвойств(Движение, СтрокаПоДокументу);
			
		КонецЦикла;		
		
		ДвиженияПоРегиструСведений.Записать();
		
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО Тогда
		
		// Проверим на начисление РНПД в текущем месяце
		ПроверитьНачисленияРНПДВТекущемМесяце(ТаблицаПоДокументу.ВыгрузитьКолонку("ЗакупочныйЗаказ"), Отказ);
		
		ПроверитьНаличиеДокументаРНПДПоЦФОВТекущемМесяце(Отказ);		
		
		Если Отказ Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при проведении документа.");
			Возврат;
		КонецЕсли;
		
		ДвиженияПоРегиструСведений = Движения.абс_НачислениеРНПД;
		
		Для Каждого СтрокаПоДокументу Из ТаблицаПоДокументу Цикл
			
			Движение = ДвиженияПоРегиструСведений.Добавить();
			
			Движение.Активность = Истина;
			
			ЗаполнитьЗначенияСвойств(Движение, СтрокаПоДокументу);
			
		КонецЦикла;			
		
		ДвиженияПоРегиструСведений.Записать();
		
		мТекущийПользователь    = глЗначениеПеременной("глТекущийПользователь");
		мРолиПользователя		= абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, Организация);
		
		//АБС ВСТАВКА №31841 НАЧАЛО «3 марта 2015 г.», Пополитов
		//Если (Статус = Перечисления.абс_СтатусыРПР.ОбработкаБухгалтером ИЛИ Статус = Перечисления.абс_СтатусыРПР.Согласован) И ФормироватьПроводки Тогда
		Если (Статус = Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов ИЛИ Статус = Перечисления.абс_СтатусыРПР.Согласован) И ФормироватьПроводки Тогда
			//\\АБС ВСТАВКА №31841 КОНЕЦ                                                                                                                		
			
			ДатаПроводокПоОтражениюРезерва = КонецМесяца(ПериодНачисления);
			ДатаПроводокПоСписаниюРезерва = ДатаПроводокПоОтражениюРезерва + 1;
			
			ПроводкиБУ = Движения.Хозрасчетный;
			ПроводкиНУ = Движения.Налоговый;
			
			ПроводкиБУ.Очистить();
			ПроводкиБУ.Записать();
			
			ПроводкиНУ.Очистить();
			ПроводкиНУ.Записать();			
			
			Для Каждого СтрокаДокумента Из ТаблицаПоДокументу Цикл
				
				ПринимаемаяСуммаРНП 		= 0;
				ПринимаемаяСуммаРНП_НДС 	= 0;
				ПринимаемаяСуммаАванса		= 0;
				ПринимаемаяСуммаАванса_НДС	= 0;
				
				Если СтрокаДокумента.УчитыватьАванс И НЕ СтрокаДокумента.СуммаАвансаПоДоговору = 0 Тогда
					
					ПринимаемаяСуммаАванса 		= Мин(СтрокаДокумента.СуммаРНП 		, СтрокаДокумента.СуммаАвансаПоДоговору - СтрокаДокумента.СуммаНДСАвансаПоДоговору);
					ПринимаемаяСуммаАванса_НДС 	= Мин(СтрокаДокумента.СуммаНДС_РПР	, СтрокаДокумента.СуммаНДСАвансаПоДоговору);
					
					ПринимаемаяСуммаРНП 		= Макс(СтрокаДокумента.СуммаРНП 	- ПринимаемаяСуммаАванса	, 0);
					ПринимаемаяСуммаРНП_НДС 	= Макс(СтрокаДокумента.СуммаНДС_РПР - ПринимаемаяСуммаАванса_НДС, 0);
					
				Иначе
					
					ПринимаемаяСуммаРНП 		= СтрокаДокумента.СуммаРНП;
					ПринимаемаяСуммаРНП_НДС 	= СтрокаДокумента.СуммаНДС_РПР;
					
				КонецЕсли;
				
				Если НЕ ПринимаемаяСуммаРНП = 0 Тогда
					
					// Сумма резерва РНПД в БУ
					ПроводкаБУ = ПроводкиБУ.Добавить();
					
					ПроводкаБУ.Регистратор 		= Ссылка;
					ПроводкаБУ.Организация 		= Организация;
					ПроводкаБУ.Активность		= Истина;
					
					ПроводкаБУ.Период 			= ДатаПроводокПоОтражениюРезерва;
					
					ПроводкаБУ.СчетДт = СтрокаДокумента.СчетЗатратБУ;
					
					Если ПроводкаБУ.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02.1") Тогда
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ПрочиеДоходыИРасходы"	, Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("й00000550"));
						//ххх Брель Виктор Андреевич 21.05.2018 10:42:40, заявка <<<
						ПериодОтражения = Строка(ГОД(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности));
						ПериодОтражения = СтрЗаменить(ПериодОтражения ,Символы.НПП,"");
						//Если НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20170101") Тогда
						//	БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2017"));
						//ИначеЕсли НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20160101") Тогда
						//	БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2016"));
						//ИначеЕсли НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20150101") Тогда
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду(ПериодОтражения));		
						//КонецЕсли;						
						// Брель Виктор Андреевич 21.05.2018 10:42:40 >>>
						
					Иначе
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "СтатьиЗатрат"			, СтрокаДокумента.СтатьяЗатрат);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "НоменклатурныеГруппы"	, СтрокаДокумента.НоменклатурнаяГруппа);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ВидыДеятельности"		, СтрокаДокумента.ВидДеятельности);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "Подразделения"			, ПодразделениеОрганизации);
					КонецЕсли;
					
					
					ПроводкаБУ.СчетКт = СтрокаДокумента.СчетУчетаРПРБУ;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Договоры"				, СтрокаДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "абс_АвансРНПД"			, Перечисления.абс_АвансРНПД.Нет);
					
					ПроводкаБУ.Сумма = ПринимаемаяСуммаРНП;
					
					ПроводкаБУ.Содержание = "Начисление резервов РНПД";
					
					
					// Сумма резерва РНПД в НУ
					ПроводкаНУ = ПроводкиНУ.Добавить();
					
					ПроводкаНУ.Регистратор 		= Ссылка;
					ПроводкаНУ.Организация 		= Организация;
					ПроводкаНУ.Активность		= Истина;
					
					ПроводкаНУ.Период 			= ДатаПроводокПоОтражениюРезерва;
					
					ПроводкаНУ.СчетДт = СтрокаДокумента.СчетЗатратНУ;
					ПроводкаНУ.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР;
					
					Если ПроводкаНУ.СчетДт = ПланыСчетов.Налоговый.НайтиПоКоду("91.02.7") Тогда
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "ПрочиеДоходыИРасходы"	, Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("й00000550"));
						Если НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20170101") Тогда
							БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2017"));
						ИначеЕсли НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20160101") Тогда
							БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2016"));
						КонецЕсли;						
					Иначе
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "СтатьиЗатрат"			, СтрокаДокумента.СтатьяЗатрат);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "НоменклатурныеГруппы"	, СтрокаДокумента.НоменклатурнаяГруппа);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "ВидыДеятельности"		, СтрокаДокумента.ВидДеятельности);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "Подразделения"			, ПодразделениеОрганизации);
					КонецЕсли;
					
					
					ПроводкаНУ.СчетКт = СтрокаДокумента.СчетУчетаРПРНУ;
					ПроводкаНУ.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ВР;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Договоры"				, СтрокаДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "абс_АвансРНПД"			, Перечисления.абс_АвансРНПД.Нет);
					
					ПроводкаНУ.Сумма = ПринимаемаяСуммаРНП;
					
					ПроводкаНУ.Содержание = "Начисление резервов РНПД";
					
				КонецЕсли;
				
				// Сумма НДС с резерва РНПД
				Если НЕ ПринимаемаяСуммаРНП_НДС = 0 Тогда
					
					ПроводкаБУ = ПроводкиБУ.Добавить();
					
					ПроводкаБУ.Регистратор 		= Ссылка;
					ПроводкаБУ.Организация 		= Организация;
					ПроводкаБУ.Активность		= Истина;
					
					ПроводкаБУ.Период 			= ДатаПроводокПоОтражениюРезерва;
					
					ПроводкаБУ.СчетДт = СтрокаДокумента.СчетУчетаНДС;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					
					ПроводкаБУ.СчетКт = СтрокаДокумента.СчетУчетаРПРБУ;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Договоры"				, СтрокаДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "абс_АвансРНПД"			, Перечисления.абс_АвансРНПД.Нет);
					
					ПроводкаБУ.Сумма = ПринимаемаяСуммаРНП_НДС;
					
					ПроводкаБУ.Содержание = "Начисление НДС с резервов РНПД";
					
				КонецЕсли;
				
				// По авансам
				Если СтрокаДокумента.УчитыватьАванс И НЕ ПринимаемаяСуммаАванса = 0 Тогда
					
					// Сумма резерва РНПД в БУ
					ПроводкаБУ = ПроводкиБУ.Добавить();
					
					ПроводкаБУ.Регистратор 		= Ссылка;
					ПроводкаБУ.Организация 		= Организация;
					ПроводкаБУ.Активность		= Истина;
					
					ПроводкаБУ.Период 			= ДатаПроводокПоОтражениюРезерва;
					
					ПроводкаБУ.СчетДт = СтрокаДокумента.СчетЗатратБУ;
					
					
					Если ПроводкаБУ.СчетДт = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02.1") Тогда
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ПрочиеДоходыИРасходы"	, Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("й00000550"));
						Если НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20170101") Тогда
							БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2017"));
						ИначеЕсли НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20160101") Тогда
							БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2016"));
						КонецЕсли;						
					Иначе
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "СтатьиЗатрат"			, СтрокаДокумента.СтатьяЗатрат);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "НоменклатурныеГруппы"	, СтрокаДокумента.НоменклатурнаяГруппа);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ВидыДеятельности"		, СтрокаДокумента.ВидДеятельности);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "Подразделения"			, ПодразделениеОрганизации);
					КонецЕсли;
					
					ПроводкаБУ.СчетКт = СтрокаДокумента.СчетУчетаРПРБУ;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Договоры"				, СтрокаДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "абс_АвансРНПД"			, Перечисления.абс_АвансРНПД.Да);
					
					ПроводкаБУ.Сумма = ПринимаемаяСуммаАванса;
					
					ПроводкаБУ.Содержание = "Начисление резервов РНПД (Аванс)";
					
					
					// Сумма резерва РНПД в НУ
					ПроводкаНУ = ПроводкиНУ.Добавить();
					
					ПроводкаНУ.Регистратор 		= Ссылка;
					ПроводкаНУ.Организация 		= Организация;
					ПроводкаНУ.Активность		= Истина;
					
					ПроводкаНУ.Период 			= ДатаПроводокПоОтражениюРезерва;
					
					ПроводкаНУ.СчетДт = СтрокаДокумента.СчетЗатратНУ;
					ПроводкаНУ.ВидУчетаДт = Перечисления.ВидыУчетаПоПБУ18.ВР;
					
					Если ПроводкаНУ.СчетДт = ПланыСчетов.Налоговый.НайтиПоКоду("91.02.7") Тогда
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "ПрочиеДоходыИРасходы"	, Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("й00000550"));
						Если НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20170101") Тогда
							БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2017"));
						ИначеЕсли НачалоГода(СтрокаДокумента.ttk_ПериодВозникновенияЗадолженности) = Дата("20160101") Тогда
							БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "ас_ПериодыОтражения"	, Справочники.ас_ПериодыОтражения.НайтиПоКоду("2016"));
						КонецЕсли;						
					Иначе
						
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "СтатьиЗатрат"			, СтрокаДокумента.СтатьяЗатрат);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "НоменклатурныеГруппы"	, СтрокаДокумента.НоменклатурнаяГруппа);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "ВидыДеятельности"		, СтрокаДокумента.ВидДеятельности);
						БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетДт, ПроводкаНУ.СубконтоДт, "Подразделения"			, ПодразделениеОрганизации);
					КонецЕсли;
					ПроводкаНУ.СчетКт = СтрокаДокумента.СчетУчетаРПРНУ;
					ПроводкаНУ.ВидУчетаКт = Перечисления.ВидыУчетаПоПБУ18.ВР;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "Договоры"				, СтрокаДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаНУ.СчетКт, ПроводкаНУ.СубконтоКт, "абс_АвансРНПД"			, Перечисления.абс_АвансРНПД.Да);
					
					ПроводкаНУ.Сумма = ПринимаемаяСуммаАванса;
					
					ПроводкаНУ.Содержание = "Начисление резервов РНПД (Аванс)";
					
				КонецЕсли;
				
				// Сумма НДС с резерва РНПД
				Если СтрокаДокумента.УчитыватьАванс И НЕ ПринимаемаяСуммаАванса_НДС = 0 Тогда
					
					ПроводкаБУ = ПроводкиБУ.Добавить();
					
					ПроводкаБУ.Регистратор 		= Ссылка;
					ПроводкаБУ.Организация 		= Организация;
					ПроводкаБУ.Активность		= Истина;
					
					ПроводкаБУ.Период 			= ДатаПроводокПоОтражениюРезерва;
					
					ПроводкаБУ.СчетДт = СтрокаДокумента.СчетУчетаНДС;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетДт, ПроводкаБУ.СубконтоДт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					
					ПроводкаБУ.СчетКт = СтрокаДокумента.СчетУчетаРПРБУ;
					
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Контрагенты"			, СтрокаДокумента.Контрагент);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "Договоры"				, СтрокаДокумента.ДоговорКонтрагента);
					БухгалтерскийУчет.УстановитьСубконто(ПроводкаБУ.СчетКт, ПроводкаБУ.СубконтоКт, "абс_АвансРНПД"			, Перечисления.абс_АвансРНПД.Да);
					
					ПроводкаБУ.Сумма = ПринимаемаяСуммаАванса_НДС;
					
					ПроводкаБУ.Содержание = "Начисление НДС с резервов РНПД (Аванс)";
					
				КонецЕсли;
				
			КонецЦикла;	
			
			// Сформируем сторно проводки
			ТабПроводокБУ = ПроводкиБУ.Выгрузить();
			ТабПроводокНУ = ПроводкиНУ.Выгрузить();
			
			ТабПроводокБУСторно = ТабпроводокБУ.Скопировать();
			ТабПроводокНУСторно = ТабпроводокНУ.Скопировать();
			
			Для Каждого СтрПроводкаБУСторно Из ТабПроводокБУСторно Цикл
				
				Стр = ТабПроводокБУ.Добавить();
				
				ЗаполнитьЗначенияСвойств(Стр, СтрПроводкаБУСторно);
				
				Стр.Период 	= ДатаПроводокПоСписаниюРезерва;
				Стр.Сумма 	= - Стр.Сумма;
				
				Стр.Содержание = "Списание резервов РНПД";
				
				КорректируемПроводкуПереходящеюНаДругойГод(Стр,"БУ");				
				
			КонецЦикла;
			
			Для Каждого СтрПроводкаНУСторно Из ТабПроводокНУСторно Цикл
				
				Стр = ТабПроводокНУ.Добавить();
				
				ЗаполнитьЗначенияСвойств(Стр, СтрПроводкаНУСторно);
				
				Стр.Период 	= ДатаПроводокПоСписаниюРезерва;
				Стр.Сумма 	= - Стр.Сумма;
				
				Стр.Содержание = "Списание резервов РНПД";
				
				КорректируемПроводкуПереходящеюНаДругойГод(Стр,"НУ");
				
			КонецЦикла;
			
			ПолныеПрава.ЗаписатьНаборЗаписейНаСервере("Хозрасчетный", Ссылка, ТабПроводокБУ, "РегистрБухгалтерии", Отказ);
			ПолныеПрава.ЗаписатьНаборЗаписейНаСервере("Налоговый", Ссылка, ТабПроводокНУ, "РегистрБухгалтерии", Отказ);			
			
			//ПроводкиБУ.Загрузить(ТабПроводокБУ);
			//ПроводкиНУ.Загрузить(ТабПроводокНУ);
			//
			//ПроводкиБУ.Записать();
			//ПроводкиНУ.Записать();
			
		КонецЕсли;		
		
	КонецЕсли;
	
	////абс Родин Лимитный контроль 
	//Если глЗначениеПеременной("абс_ИспользоватьКонтрольЛимитовПоДоговорам") Тогда
	//	СообщениеПриОтказе = "";
	//	абс_БюджетированиеПривилегированный.ФормированиеДвиженийПоКонтролируемымЗатратам(ЭтотОбъект,Отказ,СообщениеПриОтказе,Неопределено,Ложь);
	//	
	//	Если Отказ И СообщениеПриОтказе <> "" Тогда
	//		ttk_ОбщегоНазначения.СообщитьОбОшибке(СообщениеПриОтказе,Отказ); 
	//	КонецЕсли;
	//КонецЕсли;	
	////абс Родин Лимитный контроль
КонецПроцедуры
Процедура СформироватьДвиженияПоГрафикуПоставок(ВидОперации,Отказ)  ЭКСПОРТ
	Если  ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции  Тогда
		
		// График   НЕ ФИКСИРОВАННАЯ /ФИКСИРОВАННАЯ СУММА
		локЗапрос = новый запрос;
		локЗапрос.Текст = "ВЫБРАТЬ
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности КАК ПериодПоставки,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	СУММА(абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП) КАК Сумма,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья КАК СтатьяОборотов,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ КАК абс_ЦФУ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети КАК абс_ТипСети,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ КАК абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО КАК абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	ИСТИНА КАК Активность,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма КАК НефиксированнаяСумма
		|ИЗ
		|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|ГДЕ
		|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма";
		
		локЗапрос.Параметры.Вставить("Ссылка", Ссылка);
		
		Результат = локЗапрос.Выполнить();
		
		ОбщаяТаблицаДляОбработки = Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.ВыгрузитьКолонки();	
		ОбщаяТаблицаДляОбработки.Очистить();
		ВыборкаЗаписей = Результат.Выбрать(); 
		Пока ВыборкаЗаписей.Следующий() Цикл
			
			Если НачалоГода(ВыборкаЗаписей.ПериодПоставки)< НачалоГода(Дата) Тогда
				Если НачалоМесяца(Дата) = Дата("20180101") Тогда
					ПериодПоставкиВХ = Дата("20180101")
				Иначе
					ПериодПоставкиВХ = Дата("20180201");
				КонецЕсли;
			Иначе
				ПериодПоставкиВХ  = НачалоМесяца(ВыборкаЗаписей.ПериодПоставки); 
			КонецЕсли;
			
			ДвижениеРасход = ОбщаяТаблицаДляОбработки.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеРасход, ВыборкаЗаписей);
			ДвижениеРасход.ВидДвижения = ВидДвиженияНакопления.Расход; 
			ДвижениеРасход.ПериодПоставки = ПериодПоставкиВХ;
			ДвижениеРасход.Период = КонецМесяца(ПериодНачисления);
			
			Если ВыборкаЗаписей.НефиксированнаяСумма  Тогда
				ДвижениеРасходНефикс = ОбщаяТаблицаДляОбработки.Добавить();
				ЗаполнитьЗначенияСвойств(ДвижениеРасходНефикс, ДвижениеРасход);
				ДвижениеРасходНеФикс.ВидДвижения = ВидДвиженияНакопления.Приход; 
			КонецЕсли;
		КонецЦикла;
		
		Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Загрузить(ОбщаяТаблицаДляОбработки);
		Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Записывать = Истина;
		Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Записать();	
		
		
		
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО  Тогда
		
		// График    НЕ ФИКСИРОВАННАЯ /ФИКСИРОВАННАЯ СУММА
		
		локЗапрос = новый запрос;
		локЗапрос.Текст = "ВЫБРАТЬ
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности КАК ПериодПоставки,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	-СУММА(абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП) КАК Сумма,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья КАК СтатьяОборотов,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ КАК абс_ЦФУ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети КАК абс_ТипСети,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ КАК абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО КАК абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	абс_РезервыПроизведенныхРасходовРезервы.Учитывать,
		|	ИСТИНА КАК Активность,
		|	-СУММА(абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафику) КАК Сумма_ПРОЕКТ,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма КАК НефиксированнаяСумма
		|ПОМЕСТИТЬ ВР_таб
		|ИЗ
		|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|ГДЕ
		|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.Учитывать,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_таб.ПериодПоставки,
		|	ВР_таб.ЗакупочныйЗаказ,
		|	ВР_таб.Сумма,
		|	ВР_таб.СтатьяОборотов,
		|	ВР_таб.абс_ЦФУ,
		|	ВР_таб.абс_ТипСети,
		|	ВР_таб.абс_КВ,
		|	ВР_таб.абс_ТЭО,
		|	ВР_таб.ttk_ОбъектБюджетирования,
		|	ВР_таб.Учитывать,
		|	ВР_таб.Активность,
		|	ВР_таб.Сумма_ПРОЕКТ,
		|	ВР_таб.Сумма_ПРОЕКТ - ВР_таб.Сумма КАК СуммаРазница,
		|	ВР_таб.НефиксированнаяСумма
		|ИЗ
		|	ВР_таб КАК ВР_таб";
		
		локЗапрос.Параметры.Вставить("Ссылка", Ссылка);
		
		Результат = локЗапрос.Выполнить();
		
		ОбщаяТаблицаДляОбработки = Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.ВыгрузитьКолонки();	
		ОбщаяТаблицаДляОбработки.Очистить();
		ВыборкаЗаписей = Результат.Выбрать(); 
		
		
		// Сторно
		Пока ВыборкаЗаписей.Следующий() Цикл
			
			Если НачалоГода(ВыборкаЗаписей.ПериодПоставки)<> НачалоГода(Дата) Тогда
				Если НачалоМесяца(Дата) = Дата("20180101") Тогда
					ПериодПоставкиВХ = Дата("20180101")
				Иначе
					ПериодПоставкиВХ = Дата("20180201");
				КонецЕсли;
			Иначе
				ПериодПоставкиВХ  = НачалоМесяца(ВыборкаЗаписей.ПериодПоставки); 
			КонецЕсли;
			
			ДвижениеРасход = ОбщаяТаблицаДляОбработки.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеРасход, ВыборкаЗаписей);
			ДвижениеРасход.ВидДвижения = ВидДвиженияНакопления.Расход; 
			ДвижениеРасход.ПериодПоставки = ПериодПоставкиВХ;
			Если ВыборкаЗаписей.Учитывать Тогда
				ДвижениеРасход.Период = КонецМесяца(ПериодНачисления)+1;		
			Иначе
				ДвижениеРасход.Период = КонецМесяца(ПериодНачисления);			
			КонецЕсли;
			ДвижениеРасход.Активность = Истина;
			
			Если ВыборкаЗаписей.НефиксированнаяСумма  Тогда
				ДвижениеРасходНефикс = ОбщаяТаблицаДляОбработки.Добавить();
				ЗаполнитьЗначенияСвойств(ДвижениеРасходНефикс, ДвижениеРасход);
				ДвижениеРасходНеФикс.ВидДвижения = ВидДвиженияНакопления.Приход; 
			КонецЕсли;
			
		КонецЦикла;
		
		// Сторно ДЕЛЬТА СуммаПРоект - Сумма
		
		ВыборкаЗаписей.Сбросить();
		
		Пока ВыборкаЗаписей.Следующий() Цикл
			Если ВыборкаЗаписей.СуммаРазница <> 0 Тогда
				Если НачалоГода(ВыборкаЗаписей.ПериодПоставки)<> НачалоГода(Дата) Тогда
					Если НачалоМесяца(Дата) = Дата("20180101") Тогда
						ПериодПоставкиВХ = Дата("20180101")
					Иначе
						ПериодПоставкиВХ = Дата("20180201");
					КонецЕсли;
				Иначе
					ПериодПоставкиВХ  = НачалоМесяца(ВыборкаЗаписей.ПериодПоставки); 
				КонецЕсли;
				
				ДвижениеРасход = ОбщаяТаблицаДляОбработки.Добавить();
				ЗаполнитьЗначенияСвойств(ДвижениеРасход, ВыборкаЗаписей);
				ДвижениеРасход.ВидДвижения = ВидДвиженияНакопления.Расход; 
				ДвижениеРасход.ПериодПоставки = ПериодПоставкиВХ;
				ДвижениеРасход.Сумма = ВыборкаЗаписей.СуммаРазница;
				ДвижениеРасход.Период = КонецМесяца(ПериодНачисления);		
				ДвижениеРасход.Активность = Истина;
				Если ВыборкаЗаписей.НефиксированнаяСумма  Тогда
					ДвижениеРасходНефикс = ОбщаяТаблицаДляОбработки.Добавить();
					ЗаполнитьЗначенияСвойств(ДвижениеРасходНефикс, ДвижениеРасход);
					ДвижениеРасходНеФикс.ВидДвижения = ВидДвиженияНакопления.Приход; 
				КонецЕсли;
				
			КонецЕсли;	
		КонецЦикла;
		
		
		
		Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Загрузить(ОбщаяТаблицаДляОбработки);
		Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Записывать = Истина;
		Движения.абс_ГрафикПоставкиЗакупочногоЗаказа.Записать();	
		
		
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДвиженияПоКонтролируемыеЗначенияБюджетов(ВидОперации,Отказ)ЭКСПОРТ
	//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
	СтатьяОборотовДляИсключения = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");	
	ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
	ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
	ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
	// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

	Если  ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции  Тогда
		
		/// КонтролируемыеЗначенияБюджетов     	НЕ ФИКСИРОВАННАЯ СУММА
		
		локЗапрос = новый запрос;
		локЗапрос.Текст = "ВЫБРАТЬ
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности КАК ПериодПоставки,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		                  |	СУММА(абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП) КАК СуммаСценарияИсполнение,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья КАК СтатьяОборотов,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ КАК абс_ЦФУ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ КАК абс_КВ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО КАК абс_ТЭО,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ЦФО КАК ЦФО,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация,
		                  |	НАЧАЛОПЕРИОДА(абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ПериодНачисления, МЕСЯЦ) КАК Период,
		                  |	ИСТИНА КАК Активность,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ТипКонтрагента КАК абс_ТипКонтрагента
		                  |ИЗ
		                  |	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		                  |ГДЕ
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Учитывать
		                  |	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка = &Ссылка
		                  |	И абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма
		                  |
		                  |СГРУППИРОВАТЬ ПО
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ЦФО,
		                  |	НАЧАЛОПЕРИОДА(абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ПериодНачисления, МЕСЯЦ),
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ТипКонтрагента";
		
		локЗапрос.Параметры.Вставить("Ссылка", Ссылка);
		
		Результат = локЗапрос.Выполнить();
		
		
		ОбщаяТаблицаДляОбработки = Движения.КонтролируемыеЗначенияБюджетов.ВыгрузитьКолонки();	
		ОбщаяТаблицаДляОбработки.Очистить();
		ВыборкаЗаписей = Результат.Выбрать(); 
		Пока ВыборкаЗаписей.Следующий() Цикл
			
			ДвижениеРасход = ОбщаяТаблицаДляОбработки.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеРасход, ВыборкаЗаписей);
			ДвижениеРасход.СуммаСценарияИсполнениеВал =   ДвижениеРасход.СуммаСценарияИсполнение;							
			
		КонецЦикла;
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Для Каждого Строка Из 	ОбщаяТаблицаДляОбработки Цикл
			Если Строка.СтатьяОборотов <> СтатьяОборотовДляИсключения Тогда
				Строка.абс_КВ = Неопределено;
			КонецЕсли;
			Если Строка.абс_ТипКонтрагента.Родитель <> ТК0101ДЗОТТК И   Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0101ДЗОТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0101ДЗОТТК И
				Строка.абс_ТипКонтрагента.Родитель <> ТК0102ФилиалыТТК И       Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0102ФилиалыТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0102ФилиалыТТК И
				Строка.абс_ТипКонтрагента <> ГоловнаяКомпания Тогда
				Строка.абс_ТипКонтрагента 	  = Неопределено;
			КонецЕсли;	
		КонецЦикла;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		Движения.КонтролируемыеЗначенияБюджетов.Загрузить(ОбщаяТаблицаДляОбработки);
		Движения.КонтролируемыеЗначенияБюджетов.Записывать = Истина;
		Движения.КонтролируемыеЗначенияБюджетов.Записать();	
		
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО  Тогда
		
		/// КонтролируемыеЗначенияБюджетов     	НЕ ФИКСИРОВАННАЯ СУММА
		
		локЗапрос = новый запрос;
		локЗапрос.Текст = "ВЫБРАТЬ
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности КАК ПериодПоставки,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		                  |	-СУММА(абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП) КАК СуммаСценарияИсполнение,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья КАК СтатьяОборотов,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ КАК абс_ЦФУ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ КАК абс_КВ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО КАК абс_ТЭО,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ЦФО КАК ЦФО,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация,
		                  |	НАЧАЛОПЕРИОДА(абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ПериодНачисления, МЕСЯЦ) КАК Период,
		                  |	ИСТИНА КАК Активность,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Учитывать,
		                  |	-СУММА(абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафику) КАК Сумма_проект,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ТипКонтрагента КАК абс_ТипКонтрагента
		                  |ПОМЕСТИТЬ ВР_таб
		                  |ИЗ
		                  |	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		                  |ГДЕ
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Ссылка = &Ссылка
		                  |	И абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма
		                  |
		                  |СГРУППИРОВАТЬ ПО
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ЦФО,
		                  |	НАЧАЛОПЕРИОДА(абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ПериодНачисления, МЕСЯЦ),
		                  |	абс_РезервыПроизведенныхРасходовРезервы.Учитывать,
		                  |	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ТипКонтрагента
		                  |;
		                  |
		                  |////////////////////////////////////////////////////////////////////////////////
		                  |ВЫБРАТЬ
		                  |	ВР_таб.ПериодПоставки,
		                  |	ВР_таб.ЗакупочныйЗаказ,
		                  |	ВР_таб.СуммаСценарияИсполнение,
		                  |	ВР_таб.СтатьяОборотов,
		                  |	ВР_таб.абс_ЦФУ,
		                  |	ВР_таб.абс_КВ,
		                  |	ВР_таб.абс_ТЭО,
		                  |	ВР_таб.ttk_ОбъектБюджетирования,
		                  |	ВР_таб.ЦФО,
		                  |	ВР_таб.Организация,
		                  |	ВР_таб.Период,
		                  |	ВР_таб.Активность,
		                  |	ВР_таб.Учитывать,
		                  |	ВР_таб.Сумма_проект - ВР_таб.СуммаСценарияИсполнение КАК СуммаРазница,
		                  |	ВР_таб.абс_ТипКонтрагента
		                  |ИЗ
		                  |	ВР_таб КАК ВР_таб";
		
		локЗапрос.Параметры.Вставить("Ссылка", Ссылка);
		
		Результат = локЗапрос.Выполнить();
		
		
		ОбщаяТаблицаДляОбработки = Движения.КонтролируемыеЗначенияБюджетов.ВыгрузитьКолонки();	
		ОбщаяТаблицаДляОбработки.Очистить();
		ВыборкаЗаписей = Результат.Выбрать(); 
		// Сторно
		Пока ВыборкаЗаписей.Следующий() Цикл				
			ДвижениеРасход = ОбщаяТаблицаДляОбработки.Добавить();
			ЗаполнитьЗначенияСвойств(ДвижениеРасход, ВыборкаЗаписей);
			ДвижениеРасход.СуммаСценарияИсполнениеВал =   ДвижениеРасход.СуммаСценарияИсполнение; 
			Если ВыборкаЗаписей.Учитывать Тогда
				ДвижениеРасход.Период = КонецМесяца(ПериодНачисления)+1;		
			Иначе
				ДвижениеРасход.Период = КонецМесяца(ПериодНачисления);			
			КонецЕсли;
		КонецЦикла;
		
		ВыборкаЗаписей.Сбросить();
		// Сторно  Разница
		Пока ВыборкаЗаписей.Следующий() Цикл
			Если ВыборкаЗаписей.СуммаРазница <>0 Тогда
				ДвижениеРасход = ОбщаяТаблицаДляОбработки.Добавить();
				ЗаполнитьЗначенияСвойств(ДвижениеРасход, ВыборкаЗаписей);
				ДвижениеРасход.СуммаСценарияИсполнениеВал =   ВыборкаЗаписей.СуммаРазница; 
				ДвижениеРасход.СуммаСценарияИсполнение=   ВыборкаЗаписей.СуммаРазница; 
				ДвижениеРасход.Период = КонецМесяца(ПериодНачисления);			
			КонецЕсли;
		КонецЦикла;
		
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		Для Каждого Строка Из 	ОбщаяТаблицаДляОбработки Цикл
			Если Строка.СтатьяОборотов <> СтатьяОборотовДляИсключения Тогда
				Строка.абс_КВ = Неопределено;
			КонецЕсли;
			Если Строка.абс_ТипКонтрагента.Родитель <> ТК0101ДЗОТТК И  Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0101ДЗОТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0101ДЗОТТК И
				Строка.абс_ТипКонтрагента.Родитель <> ТК0102ФилиалыТТК И  Строка.абс_ТипКонтрагента.Родитель.Родитель <> ТК0102ФилиалыТТК И Строка.абс_ТипКонтрагента.Родитель.Родитель.Родитель <> ТК0102ФилиалыТТК И
				Строка.абс_ТипКонтрагента <> ГоловнаяКомпания Тогда
				Строка.абс_ТипКонтрагента 	  = Неопределено;
			КонецЕсли;
		КонецЦикла;
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		
		Движения.КонтролируемыеЗначенияБюджетов.Загрузить(ОбщаяТаблицаДляОбработки);
		Движения.КонтролируемыеЗначенияБюджетов.Записывать = Истина;
		Движения.КонтролируемыеЗначенияБюджетов.Записать();	
		
	КонецЕсли;	
	
КонецПроцедуры
//ххх Брель Виктор Андреевич 03.04.2018 17:23:39, заявка <<<
Процедура КонтрольЛимитов(Отказ)ЭКСПОРТ
	Если НЕ ОбменДанными.Загрузка Тогда
		
		//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
		КВпоПост = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");
		ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
		ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
		ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
		// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
		// Данный фрагмент построен конструктором.
		// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
		
		//ххх Брель Виктор Андреевич 14.06.2018 16:51:58, заявка 77354995<<<
		// 14.06.2018 Убрали ТипСети
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация,
		|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования,
		|	СУММА(абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП) КАК СуммаРНП,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ТипКонтрагента КАК абс_ТипКонтрагента
		|ПОМЕСТИТЬ ВРЕМ_ТЗ
		|ИЗ
		|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|ГДЕ
		|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка = &Ссылка
		|	И абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО,
		|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.ТипКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВРЕМ_ТЗ.Организация,
		|	ВРЕМ_ТЗ.ЦФО,
		|	ВРЕМ_ТЗ.БюджетнаяСтатья,
		|	ВРЕМ_ТЗ.ЦФУ,
		|	ВЫБОР
		|		КОГДА ВРЕМ_ТЗ.БюджетнаяСтатья = &ЕдинаяСтатья
		|			ТОГДА ВРЕМ_ТЗ.абс_КВ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.абс_КапитальныеВложения.ПустаяССылка)
		|	КОНЕЦ КАК абс_КВ,
		|	ВРЕМ_ТЗ.абс_ТЭО,
		|	ВРЕМ_ТЗ.ttk_ОбъектБюджетирования,
		|	СУММА(ВРЕМ_ТЗ.СуммаРНП) КАК СуммаРНП,
		|	ВЫБОР
		|		КОГДА ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель = &Папка
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель = &Папка2
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель = &Папка
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель = &Папка2
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель.Родитель = &Папка
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель.Родитель = &Папка2
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента = &Головное
		|			ТОГДА ВРЕМ_ТЗ.абс_ТипКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.абс_ТипыКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ КАК абс_ТипКонтрагента
		|ИЗ
		|	ВРЕМ_ТЗ КАК ВРЕМ_ТЗ
		|
		|СГРУППИРОВАТЬ ПО
		|	ВРЕМ_ТЗ.Организация,
		|	ВРЕМ_ТЗ.ttk_ОбъектБюджетирования,
		|	ВРЕМ_ТЗ.абс_ТЭО,
		|	ВЫБОР
		|		КОГДА ВРЕМ_ТЗ.БюджетнаяСтатья = &ЕдинаяСтатья
		|			ТОГДА ВРЕМ_ТЗ.абс_КВ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.абс_КапитальныеВложения.ПустаяССылка)
		|	КОНЕЦ,
		|	ВРЕМ_ТЗ.ЦФУ,
		|	ВРЕМ_ТЗ.БюджетнаяСтатья,
		|	ВРЕМ_ТЗ.ЦФО,
		|	ВЫБОР
		|		КОГДА ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель = &Папка
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель = &Папка2
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель = &Папка
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель = &Папка2
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель.Родитель = &Папка
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента.Родитель.Родитель.Родитель = &Папка2
		|				ИЛИ ВРЕМ_ТЗ.абс_ТипКонтрагента = &Головное
		|			ТОГДА ВРЕМ_ТЗ.абс_ТипКонтрагента
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.абс_ТипыКонтрагентов.ПустаяСсылка)
		|	КОНЕЦ";
		// Брель Виктор Андреевич 14.06.2018 16:51:58 >>>			 
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		Запрос.УстановитьПараметр("Папка", ТК0101ДЗОТТК);
		Запрос.УстановитьПараметр("Папка2", ТК0102ФилиалыТТК);
		Запрос.УстановитьПараметр("Головное", ГоловнаяКомпания);
		Запрос.УстановитьПараметр("ЕдинаяСтатья", КВпоПост);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			
			СтруктураАналитик = НОВЫЙ Структура;
			СтруктураАналитик.Вставить("Организация",ВыборкаДетальныеЗаписи.Организация);
			СтруктураАналитик.Вставить("абс_ЦФУ", ВыборкаДетальныеЗаписи.ЦФУ);
			СтруктураАналитик.Вставить("ЦФО", ВыборкаДетальныеЗаписи.ЦФО);
			//ххх Брель Виктор Андреевич 14.06.2018 16:51:58, заявка 77354995<<<
			// 14.06.2018 Убрали ТипСети
			//СтруктураАналитик.Вставить("абс_ТипСети", ВыборкаДетальныеЗаписи.абс_ТипСети);
			СтруктураАналитик.Вставить("абс_ТипКонтрагента", ВыборкаДетальныеЗаписи.абс_ТипКонтрагента);
			// Брель Виктор Андреевич 14.06.2018 16:51:58 >>>			 
			СтруктураАналитик.Вставить("абс_КВ",ВыборкаДетальныеЗаписи.абс_КВ);
			СтруктураАналитик.Вставить("абс_ТЭО", ВыборкаДетальныеЗаписи.абс_ТЭО);
			СтруктураАналитик.Вставить("СтатьяОборотов", ВыборкаДетальныеЗаписи.БюджетнаяСтатья);
			СтруктураАналитик.Вставить("ttk_ОбъектБюджетирования", ВыборкаДетальныеЗаписи.ttk_ОбъектБюджетирования);
			
			
			Остаток = абс_Бюджетирование.ОстатокЛимитаПоБюджету(НачалоМесяца(ПериодНачисления),КонецМесяца(ПериодНачисления), СтруктураАналитик);
			
			СтрокаАналитика = "По аналитике: " + 
			"| Организация: "  + Строка(СтруктураАналитик.Организация) +
			"| ЦФО: "    + Строка(СтруктураАналитик.ЦФО) +
			"| ЦФУ: "    + Строка(СтруктураАналитик.абс_ЦФУ) +
			//ххх Брель Виктор Андреевич 14.06.2018 16:51:58, заявка 77354995<<<
			// 14.06.2018 Убрали ТипСети
			//"| ТипСети: "    + Строка(ВыборкаДетальныеЗаписи.абс_ТипСети) +
			// Брель Виктор Андреевич 14.06.2018 16:51:58 >>>			 
			"| КВ: "    + Строка(СтруктураАналитик.абс_КВ) +
			"| Тип контрагента: "    + Строка(СтруктураАналитик.абс_ТипКонтрагента) +
			"| ТЭО: "    + Строка(СтруктураАналитик.абс_ТЭО) +
			"| СтатьяОборотов: "    + Строка(СтруктураАналитик.СтатьяОборотов) +" Код:  " +?(ЗначениеЗаполнено(СтруктураАналитик.СтатьяОборотов),СтруктураАналитик.СтатьяОборотов.Код ," ") +
			"| Объект Бюджетирования: "    + Строка(СтруктураАналитик.ttk_ОбъектБюджетирования); 
			СтрокаСообщения = "";

			Разница = Остаток;
			Если Разница < 0 Тогда
				Если Остаток = -2 тогда
					СтрокаСообщения = СтрокаСообщения+ СтрокаАналитика+ " В периоде "+ абс_СлужебныеФункции.ВернутьНазваниеМесяца(ПериодНачисления)+" не задан лимит!";
				Иначе
					СтрокаСообщения = СтрокаСообщения+ СтрокаАналитика+" В периоде "+ абс_СлужебныеФункции.ВернутьНазваниеМесяца(ПериодНачисления)+" сумма превышает лимит! Сумма = "+ОбщегоНазначения.ФорматСумм(ВыборкаДетальныеЗаписи.СуммаРНП)+", лимит = " + Строка(Число(Остаток) + Число(ВыборкаДетальныеЗаписи.СуммаРНП) )+Символы.ПС;
				КонецЕсли;
				Если НЕ (абс_Бюджетирование.ПоСтатьеРазрешеноПревышениеБюджета(ВыборкаДетальныеЗаписи.БюджетнаяСтатья, ВыборкаДетальныеЗаписи.Организация)
					ИЛИ  (ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.БюджетнаяСтатья) И ВыборкаДетальныеЗаписи.БюджетнаяСтатья.абс_БезКонтроляЛимита) ) Тогда
					ttk_ОбщегоНазначения.СообщитьОбОшибке(СтрокаСообщения);
					Отказ =  ИСТИНА;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если УправлениеДопПравамиПользователей.РазрешеноПревышениеКонтролируемыхЗначенийПоБюджетам() Тогда
			Отказ =  ЛОЖЬ;
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

Процедура КонтрольОтрицательныхОстатковПоГрафикуПоступлений(Отказ)ЭКСПОРТ
	Если НЕ  ОбменДанными.Загрузка Тогда
		Запрос = Новый Запрос;
		Запрос.Текст = 
		//ххх Брель Виктор Андреевич 14.06.2018 16:56:42, заявка 77354995<<<
		// 14.06.2018 Убрали ТипСети
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ КАК абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО КАК абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья КАК СтатьяОборотов,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности КАК ttk_ПериодВозникновенияЗадолженности,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ КАК ЦФУ
		|ПОМЕСТИТЬ Документ
		|ИЗ
		|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|ГДЕ
		|	НЕ абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.НефиксированнаяСумма
		|	И абс_РезервыПроизведенныхРасходовРезервы.Учитывать
		|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
		|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
		|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
		|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности,
		|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	абс_КВ,
		|	абс_ТЭО,
		|	ttk_ОбъектБюджетирования,
		|	ЗакупочныйЗаказ,
		|	СтатьяОборотов,
		|	ttk_ПериодВозникновенияЗадолженности,
		|	ЦФУ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_КВ КАК абс_КВ,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_ТЭО КАК абс_ТЭО,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_ЦФУ КАК абс_ЦФУ,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_ТипРасхода КАК абс_ТипРасхода,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.СтатьяОборотов КАК СтатьяОборотов,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.ПериодПоставки КАК ПериодПоставки,
		|	СУММА(абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
		|ПОМЕСТИТЬ ОСтатки
		|ИЗ
		|	РегистрНакопления.абс_ГрафикПоставкиЗакупочногоЗаказа.ОстаткиИОбороты(, , , , ) КАК абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_ТипРасхода,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.СтатьяОборотов,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_ТЭО,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_ЦФУ,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.абс_КВ,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.ttk_ОбъектБюджетирования,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.ЗакупочныйЗаказ,
		|	абс_ГрафикПоставкиЗакупочногоЗаказаОстаткиИОбороты.ПериодПоставки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	абс_КВ,
		|	абс_ТЭО,
		|	абс_ЦФУ,
		|	абс_ТипРасхода,
		|	СтатьяОборотов,
		|	ttk_ОбъектБюджетирования,
		|	ЗакупочныйЗаказ,
		|	ПериодПоставки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.абс_КВ,
		|	Документ.абс_ТЭО,
		|	Документ.ttk_ОбъектБюджетирования,
		|	Документ.ЗакупочныйЗаказ,
		|	Документ.СтатьяОборотов,
		|	Документ.ttk_ПериодВозникновенияЗадолженности,
		|	Документ.ЦФУ КАК абс_ЦФУ,
		|	ОСтатки.СтатьяОборотов КАК СтатьяОборотов,
		|	СУММА(ОСтатки.СуммаКонечныйОстаток) КАК СуммаКонечныйОстаток
		|ПОМЕСТИТЬ ВР_Итог
		|ИЗ
		|	Документ КАК Документ
		|		ЛЕВОЕ СОЕДИНЕНИЕ ОСтатки КАК ОСтатки
		|		ПО Документ.абс_КВ = ОСтатки.абс_КВ
		|			И Документ.абс_ТЭО = ОСтатки.абс_ТЭО
		|			И Документ.ttk_ОбъектБюджетирования = ОСтатки.ttk_ОбъектБюджетирования
		|			И Документ.СтатьяОборотов = ОСтатки.СтатьяОборотов
		|			И Документ.ЗакупочныйЗаказ = ОСтатки.ЗакупочныйЗаказ
		|			И Документ.ЦФУ = ОСтатки.абс_ЦФУ
		|			И Документ.ttk_ПериодВозникновенияЗадолженности = ОСтатки.ПериодПоставки
		|
		|СГРУППИРОВАТЬ ПО
		|	Документ.абс_КВ,
		|	Документ.абс_ТЭО,
		|	Документ.ttk_ОбъектБюджетирования,
		|	Документ.ЗакупочныйЗаказ,
		|	Документ.СтатьяОборотов,
		|	Документ.ttk_ПериодВозникновенияЗадолженности,
		|	Документ.ЦФУ,
		|	ОСтатки.СтатьяОборотов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_Итог.абс_КВ,
		|	ВР_Итог.абс_ТЭО,
		|	ВР_Итог.ttk_ОбъектБюджетирования,
		|	ВР_Итог.ЗакупочныйЗаказ,
		|	ВР_Итог.СтатьяОборотов,
		|	ВР_Итог.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_Итог.абс_ЦФУ,
		|	ВР_Итог.СтатьяОборотов КАК СтатьяОборотов,
		|	ВР_Итог.СуммаКонечныйОстаток
		|ИЗ
		|	ВР_Итог КАК ВР_Итог
		|ГДЕ
		|	ВР_Итог.СуммаКонечныйОстаток < 0";
		
		// Брель Виктор Андреевич 14.06.2018 16:56:42 >>>
		
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		СтрокаДляПроверки = РезультатЗапроса.Выбрать();
		
		Пока СтрокаДляПроверки.Следующий() Цикл
			
			Отбор = Новый Структура();
			Отбор.Вставить("ЗакупочныйЗаказ",СтрокаДляПроверки.ЗакупочныйЗаказ);
			Отбор.Вставить("ttk_ПериодВозникновенияЗадолженности",СтрокаДляПроверки.ttk_ПериодВозникновенияЗадолженности);
			Отбор.Вставить("ЦФУ",СтрокаДляПроверки.абс_ЦФУ);
			Отбор.Вставить("абс_ТЭО",СтрокаДляПроверки.абс_ТЭО);
			//ххх Брель Виктор Андреевич 14.06.2018 16:56:42, заявка 77354995<<<
			// 14.06.2018 Убрали ТипСети
			//Отбор.Вставить("абс_ТипСети",СтрокаДляПроверки.абс_ТипСети);
			// Брель Виктор Андреевич 14.06.2018 16:56:42 >>>
			Отбор.Вставить("БюджетнаяСтатья",СтрокаДляПроверки.СтатьяОборотов);
			Отбор.Вставить("абс_КВ",СтрокаДляПроверки.абс_КВ);
			Отбор.Вставить("ttk_ОбъектБюджетирования",СтрокаДляПроверки.ttk_ОбъектБюджетирования);
			
			НайденыеСтроки = Резервы.НайтиСтроки(Отбор);
			СписокНомерСтрок = " Строки: ";
			Для Каждого СтрокаТЧ ИЗ НайденыеСтроки Цикл
				СписокНомерСтрок = СписокНомерСтрок + " "+СтрокаТЧ.НомерСтроки  + ","; 
			КонецЦикла;
			СписокНомерСтрок = Лев(СписокНомерСтрок, СтрДлина(СписокНомерСтрок)-1);
			СписокНомерСтрок = СписокНомерСтрок + "  | ";
			
			
			СписокАналитик = ?(ЗначениеЗаполнено(СтрокаДляПроверки.ЗакупочныйЗаказ),"| Закупочный Заказ: "+Строка(СтрокаДляПроверки.ЗакупочныйЗаказ)+",","")+
			?(ЗначениеЗаполнено(СтрокаДляПроверки.ttk_ОбъектБюджетирования),"| Объект Бюджетирования: "+Строка(СтрокаДляПроверки.ttk_ОбъектБюджетирования)+",","")+
			?(ЗначениеЗаполнено(СтрокаДляПроверки.абс_ЦФУ),Строка("| ЦФУ: "+СтрокаДляПроверки.абс_ЦФУ)+",","")+
			?(ЗначениеЗаполнено(СтрокаДляПроверки.абс_ТЭО),Строка("| Технико-экономическое обоснование: "+СтрокаДляПроверки.абс_ТЭО)+",","")+
			//ххх Брель Виктор Андреевич 14.06.2018 16:56:42, заявка 77354995<<<
			// 14.06.2018 Убрали ТипСети
			//?(ЗначениеЗаполнено(СтрокаДляПроверки.абс_ТипСети),Строка("| Тип сетей/услуг: " +СтрокаДляПроверки.абс_ТипСети)+",","")+
			// Брель Виктор Андреевич 14.06.2018 16:56:42 >>>
			?(ЗначениеЗаполнено(СтрокаДляПроверки.СтатьяОборотов),Строка("| Статья оборотов: "+СтрокаДляПроверки.СтатьяОборотов)+ " ("+СтрокаДляПроверки.СтатьяОборотов.Код+  "),","")+
			?(ЗначениеЗаполнено(СтрокаДляПроверки.абс_КВ),Строка("| КВ: " +СтрокаДляПроверки.абс_КВ)+",","")+
			?(ЗначениеЗаполнено(СтрокаДляПроверки.ttk_ОбъектБюджетирования),Строка("| Объект бюджетирования: "+СтрокаДляПроверки.ttk_ОбъектБюджетирования),"");
			
			ТекстСообщенияОбОшибке = СписокНомерСтрок + Строка(СтрокаДляПроверки.ttk_ПериодВозникновенияЗадолженности)+ "       Контроль отрицательных остатков по графику поставок: " + СписокАналитик + "остаток: " + СтрокаДляПроверки.СуммаКонечныйОстаток;
			Отказ = Истина;
			ttk_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщенияОбОшибке, Отказ);
			//Прервать;
		КонецЦикла;
		
		
	КонецЕсли;
	
	
КонецПроцедуры

// Брель Виктор Андреевич 03.04.2018 17:23:39 >>>

//АБС ВСТАВКА №38006 НАЧАЛО «24 января 2014 г.», Пополитов 	
Процедура КорректируемПроводкуПереходящеюНаДругойГод(Стр,ПоРегистру)
	
	Если НачалоГода(ПериодНачисления) = НачалоГода(Стр.Период) Тогда
		Возврат;
	КонецЕсли;	
	
	Если ПоРегистру = "БУ" Тогда
		ДляЗаменыСчет = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02.1");
	Иначе
		ДляЗаменыСчет = ПланыСчетов.Налоговый.НайтиПоКоду("91.02.7");	
	КонецЕсли;
	
	Если ЗатратныйСчет(Стр.СчетКт) Тогда
		ЗначСубконто = "";
		Для каждого врСтрока Из Стр.СчетКт.ВидыСубконто Цикл
			ТекСубконто = Стр["СубконтоКт"+врСтрока.НомерСтроки];
			Если ТипЗнч(ТекСубконто) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				ЗначСубконто = ТекСубконто;
			КонецЕсли;
		КонецЦикла;
		Стр.СчетКт = ДляЗаменыСчет;
		СТР.ВидСубконтоКт1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
		Стр.СубконтоКт1 = НайтиПрочиеДоходыИРасходы(ЗначСубконто);
		Если ПоРегистру = "БУ" Тогда
			СТР.ВидСубконтоКт2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ас_ПериодыОтражения;
			Стр.СубконтоКт2 = ПолучитьПериодНДСПоДате(ПериодНачисления);
		Иначе	
			СТР.ВидСубконтоКт2 = Неопределено;
			Стр.СубконтоКт2 = Неопределено;			
		КонецЕсли;	
		Стр.СубконтоКт3 = Неопределено;
		СТР.ВидСубконтоКт3 = Неопределено;   
	КонецЕсли;	
	
	Если ЗатратныйСчет(Стр.СчетДт) Тогда
		ЗначСубконто = "";
		Для каждого врСтрока Из Стр.СчетДт.ВидыСубконто Цикл
			ТекСубконто = Стр["СубконтоДт"+врСтрока.НомерСтроки];
			Если ТипЗнч(ТекСубконто) = Тип("СправочникСсылка.СтатьиЗатрат") Тогда
				ЗначСубконто = ТекСубконто;
			КонецЕсли;
		КонецЦикла;	
		Стр.СчетДт = ДляЗаменыСчет;	
		СТР.ВидСубконтоДт1 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы;
		Стр.СубконтоДт1 = НайтиПрочиеДоходыИРасходы(ЗначСубконто);
		Если ПоРегистру = "БУ" Тогда
			СТР.ВидСубконтоДт2 = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ас_ПериодыОтражения;
			Стр.СубконтоДт2 = ПолучитьПериодНДСПоДате(ПериодНачисления);
		Иначе	
			СТР.ВидСубконтоДт2 = Неопределено;
			Стр.СубконтоДт2 = Неопределено;			
		КонецЕсли;	
		Стр.СубконтоДт3 = Неопределено;
		СТР.ВидСубконтоДт3 = Неопределено;
	КонецЕсли;	
	
КонецПроцедуры	

Функция ПолучитьПериодНДСПоДате(ДатаПериода)
	
	НомерГода = СтрЗаменить(СтрЗаменить(СокрЛП(Год(ДатаПериода)), " ",""), Символы.НПП, "");
	КодПоиска = СокрЛП(НомерГода);
	Элемент = Справочники.ас_ПериодыОтражения.НайтиПоНаименованию(КодПоиска,,глЗначениеПеременной("абс_КонтрольПоГруппеПериодаОтраженияВСчетах"));  		
	Возврат Элемент; 		
	
КонецФункции
//\\АБС ВСТАВКА №38006 КОНЕЦ

Функция ЗатратныйСчет(Счет)
	
	СчетЗатратный = Ложь;
	
	ЗатратныеСчета = Новый СписокЗначений;
	ЗатратныеСчета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("20"));
	ЗатратныеСчета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("25"));
	ЗатратныеСчета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("26"));
	ЗатратныеСчета.Добавить(ПланыСчетов.Хозрасчетный.НайтиПоКоду("44"));
	ЗатратныеСчета.Добавить(ПланыСчетов.Налоговый.НайтиПоКоду("20"));
	ЗатратныеСчета.Добавить(ПланыСчетов.Налоговый.НайтиПоКоду("25"));
	ЗатратныеСчета.Добавить(ПланыСчетов.Налоговый.НайтиПоКоду("26"));
	ЗатратныеСчета.Добавить(ПланыСчетов.Налоговый.НайтиПоКоду("44"));	
	
	Для Каждого Строка Из ЗатратныеСчета Цикл
		Если ТипЗнч(Счет) = ТипЗнч(Строка.Значение) и Счет.ПринадлежитЭлементу(Строка.Значение) Тогда
			СчетЗатратный = Истина;
		КонецЕсли;		
	КонецЦикла;	
	
	Возврат СчетЗатратный;
	
КонецФункции

Функция НайтиПрочиеДоходыИРасходы(СтатьиЗатрат)
	
	Если не ЗначениеЗаполнено(СтатьиЗатрат) Тогда
		ВрЭлемент = Справочники.ПрочиеДоходыИРасходы.ПустаяСсылка();
	Иначе
		Имя = СокрЛП(СтатьиЗатрат.Наименование);
		Родитель = Справочники.ПрочиеДоходыИРасходы.НайтиПоКоду("й00000148");//используем папку "прочие расходы" / "прибыли (убытки) прошлых лет" / 
		//"не учитывается в НУ" / "сторно резервов расходов пршлых лет (по справкам)"
		ВрЭлемент = Справочники.ПрочиеДоходыИРасходы.НайтиПоНаименованию(Имя,Истина,Родитель);
		
		//#Если Клиент Тогда
		Если не Родитель.Пустая() 
			и ВрЭлемент.Пустая()
			//АБС ИЗМЕНЕНИЕ 55879  16.02.2015 10:50:49  Шамов
			//и ПравоДоступа("Добавление", Метаданные.Справочники.ПрочиеДоходыИРасходы, ПользователиИнформационнойБазы.ТекущийПользователь()) Тогда
			Тогда
			
			//Ответ = Вопрос("Не найден элемент «"+Имя+"» в справочнике «Прочие доходы и расходы» в папке «"+Родитель+"», создать?", РежимДиалогаВопрос.ДаНет, 0);
			//Если Ответ = КодВозвратаДиалога.Да Тогда
			//врОбъект = Справочники.ПрочиеДоходыИРасходы.СоздатьЭлемент();
			//врОбъект.Родитель = Родитель;
			//врОбъект.абс_Статус = Перечисления.абс_СтатусыНоменклатуры.Использование;
			//врОбъект.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет;
			//врОбъект.абс_Ответственный = ПользователиИнформационнойБазы.ТекущийПользователь();
			//врОбъект.Наименование = Имя;
			//врОбъект.абс_Комментарий = "#Автоматическое создание#";
			//врОбъект.Записать();                                    			
			//ВрЭлемент = врОбъект.Ссылка; 
			
			ВрЭлемент = абс_Привилегированный.СоздатьПрочиеДоходыРасходы(Имя, Родитель);
			//АБС ИЗМЕНЕНИЕ 55879 КОНЕЦ
			//КонецЕсли;
			
		КонецЕсли;
		//#КонецЕсли
		
	КонецЕсли;	
	
	Возврат ВрЭлемент;
	
КонецФункции

//Процедуры и функции для работы с согласованием
Процедура ЗаписатьНовыйСтатус(НовыйСтатус, Комментарий = Неопределено) Экспорт
	
	ТекПользователь = глЗначениеПеременной("глТекущийПользователь");
	
	НаборЗаписей = РегистрыСведений.абс_СогласованиеРПР.СоздатьНаборЗаписей();
	
	НаборЗаписей.Отбор.ДокументРПР.Установить(Ссылка);
	НаборЗаписей.Прочитать();
	
	Запись = НаборЗаписей.Добавить();
	Запись.Период = ТекущаяДата();
	
	Запись.ДокументРПР			= Ссылка;
	Запись.Исполнитель 			= ТекПользователь;	
	Запись.СтатусРПР			= НовыйСтатус;
	
	Запись.Комментарий 			= Комментарий;
	
	ОтветственныйСотрудник = абс_БизнесПроцессы.ПолучитьСотрудникаПользователя(ТекПользователь);
	
	Если НЕ ОтветственныйСотрудник = Неопределено Тогда
		Запись.ДолжностьОтветственного	= ОтветственныйСотрудник.Должность;
	КонецЕсли;
	
	НаборЗаписей.Записать();
	
КонецПроцедуры

Функция НайтиБПСогласование() Экспорт
	
	Возврат абс_БизнесПроцессы.НайтиБизнесПроцессПоРНП(Ссылка);	
	
КонецФункции

Функция ПолучитьЗадачуПоРНПСогласование() Экспорт
	
	БП = НайтиБПСогласование();
	
	Если БП = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	СпТочек = Новый Массив;
	
	ТекСтатус = Ссылка.Статус;
	
	Если ТекСтатус = Перечисления.абс_СтатусыРПР.Подготовка Тогда
		
		//СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеОтказДирекция);
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеОтказЦФО);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.СогласованиеДФМ Тогда
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов Тогда		
		
		//АБС ВСТАВКА №31841 НАЧАЛО «3 марта 2015 г.», Пополитов
		//СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеОбработкаПринятыхДокументов);
		//\\АБС ВСТАВКА №31841 КОНЕЦ		
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.ОбработкаБухгалтером Тогда
		
		//АБС ВСТАВКА №31841 НАЧАЛО «3 марта 2015 г.», Пополитов
		//СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеОбработкаПринятыхДокументов);
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		//\\АБС ВСТАВКА №31841 КОНЕЦ
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.Согласован Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеОбработкаБухгалтером);
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.УтверждениеРуководителемЦФО Тогда	
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.Отказ Тогда
		
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеСогласованиеДФМ);
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеСогласованиеЦФО);
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеОбработкаПринятыхДокументов);
		СпТочек.Добавить(БизнесПроцессы.абс_СогласованиеРПР.ТочкиМаршрута.ДействиеОбработкаБухгалтером);
		
	КонецЕсли;
	
	Возврат абс_БизнесПроцессы.НайтиЗадачуЗЗ(БП, СпТочек ,, Ложь);
	
КонецФункции

// Процедуры и функции для проведения документа
Процедура ПроверитьНачисленияРНПДВТекущемМесяце(МассивЗЗ, Отказ)
	
	ЗапросПоНачислениям = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_НачислениеРНПД.Регистратор,
	|	абс_НачислениеРНПД.ЗакупочныйЗаказ
	|ИЗ
	|	РегистрСведений.абс_НачислениеРНПД КАК абс_НачислениеРНПД
	|ГДЕ
	|	абс_НачислениеРНПД.Активность
	|	И абс_НачислениеРНПД.ЗакупочныйЗаказ В(&МассивЗЗ)
	|	И абс_НачислениеРНПД.Период = &Период
	|	И абс_НачислениеРНПД.Регистратор <> &Регистратор
	|	И абс_НачислениеРНПД.ВидОперации = &ВидОперации");
	
	ЗапросПоНачислениям.УстановитьПараметр("Период"		, ПериодНачисления);
	ЗапросПоНачислениям.УстановитьПараметр("МассивЗЗ"	, МассивЗЗ);
	ЗапросПоНачислениям.УстановитьПараметр("Регистратор", Ссылка);
	ЗапросПоНачислениям.УстановитьПараметр("ВидОперации", ВидОперации);
	
	ВыборкаПоНачислениям = ЗапросПоНачислениям.Выполнить().Выбрать();
	
	ВыдаватьСообщениеОбОшибке = Ложь;
	ТекстСообщенияОбОшибке = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка) + Символы.ПС + 
	"По следующим закупочным заказам уже существуе документ по условным начислениям: " + ПериодНачисления + " :";
	
	Пока ВыборкаПоНачислениям.Следующий() Цикл
		
		ВыдаватьСообщениеОбОшибке = Истина;
		
		ТекстСообщенияОбОшибке = ТекстСообщенияОбОшибке + Символы.ПС + ВыборкаПоНачислениям.ЗакупочныйЗаказ;
		
	КонецЦикла;
	
	Если ВыдаватьСообщениеОбОшибке Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщенияОбОшибке, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНаличиеДокументаРНПДПоЦФОВТекущемМесяце(Отказ)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_РезервыПроизведенныхРасходов.Ссылка
	|ИЗ
	|	Документ.абс_РезервыПроизведенныхРасходов КАК абс_РезервыПроизведенныхРасходов
	|ГДЕ
	|	абс_РезервыПроизведенныхРасходов.ПериодНачисления = &ПериодНачисления
	|	И абс_РезервыПроизведенныхРасходов.ЦФО = &ЦФО
	|	И (НЕ абс_РезервыПроизведенныхРасходов.Ссылка = &ТекСсылка)
	|	И абс_РезервыПроизведенныхРасходов.ВидОперации = &ВидОперации
	|	И абс_РезервыПроизведенныхРасходов.Организация = &Организация");
	
	Запрос.УстановитьПараметр("ПериодНачисления"	, ПериодНачисления);
	Запрос.УстановитьПараметр("ЦФО"					, ЦФО);
	Запрос.УстановитьПараметр("ТекСсылка"			, Ссылка);
	Запрос.УстановитьПараметр("ВидОперации"			, ВидОперации);
	Запрос.УстановитьПараметр("Организация"			, Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		ТекстСообщенияОбОшибке = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка) + Символы.ПС + 
		"По ЦФО: " + ЦФО + " за " + ПериодНачисления + " уже есть документ начисления резерва!";
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке(ТекстСообщенияОбОшибке, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьТаблицуДокумента()
	
	ЗапросПоДокументу = Новый Запрос(
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ПериодНачисления, МЕСЯЦ) КАК Период,
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация КАК Организация,
	|	абс_РезервыПроизведенныхРасходовРезервы.НомерСтроки,
	|	абс_РезервыПроизведенныхРасходовРезервы.Учитывать,
	|	абс_РезервыПроизведенныхРасходовРезервы.Контрагент,
	|	абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента,
	|	абс_РезервыПроизведенныхРасходовРезервы.Кратность,
	|	абс_РезервыПроизведенныхРасходовРезервы.Курс,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВалютаДоговора,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
	|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафику,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафикуВал,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.УчитыватьВБалансе,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатратАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаРПРБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаРПРНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтавкаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС_РПР,
	|	абс_РезервыПроизведенныхРасходовРезервы.Ответственный,
	|	абс_РезервыПроизведенныхРасходовРезервы.ДокументОснование,
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации КАК ВидОперации,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппаАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельностиАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.УчитыватьАванс,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтавкаНДСАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДСАвансаПоДоговору,
	// +++ввв 07.04.2017 г.
	|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности
	// ---ввв 07.04.2017 г.
	|ИЗ
	|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	|ГДЕ
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка = &Ссылка
	|	И абс_РезервыПроизведенныхРасходовРезервы.Учитывать");
	
	ЗапросПоДокументу.УстановитьПараметр("Ссылка", Ссылка);
	
	Возврат ЗапросПоДокументу.Выполнить().Выгрузить();
	
КонецФункции

Процедура ПроверитьТабличнуюЧастьДокумента(ТаблицаДокумента, Отказ)
	
	Если Статус = Перечисления.абс_СтатусыРПР.Подготовка Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из ТаблицаДокумента Цикл
		
		Если НЕ Стр.Контрагент.абс_СтатусКонтрагента = Перечисления.абсСтатусыКонтрагентов.Активный Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Строка: " + Стр.НомерСтроки + " -  Контрагент не в статусе Активный.", Отказ);
		КонецЕсли;		
		//ххх Брель Виктор Андреевич 18.07.2018 17:24:21, заявка 77355876<<<
		//абс Родин Лимитный контроль
		Если ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции  Тогда
			Если НЕ Стр.ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Исполнение и
				НЕ Стр.ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Корректировка  и
				НЕ Стр.ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеОФКПослеКоррректировки  и
				НЕ Стр.ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ОтказПослеКорректировки Тогда
				ttk_ОбщегоНазначения.СообщитьОбОшибке("Строка: " + Стр.НомерСтроки + " - Договор контрагента не в статусе Исполнение.", Отказ);
			КонецЕсли;
		КонецЕсли;
		// Брель Виктор Андреевич 18.07.2018 17:24:21 >>>
		
		//абс Родин Лимитный контроль
		//ххх Брель Виктор Андреевич 05.04.2018 18:35:58, заявка <<<
		//Если НЕ ЗначениеЗаполнено(Стр.НоменклатурнаяГруппа) Тогда
		//	ttk_ОбщегоНазначения.СообщитьОбОшибке("Строка: " + Стр.НомерСтроки + " - Не заполнена номенклатурная группа.", Отказ);
		//КонецЕсли;
		// Брель Виктор Андреевич 05.04.2018 18:35:58 >>>
		
		Если НЕ ЗначениеЗаполнено(Стр.ВидДеятельности) Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Строка: " + Стр.НомерСтроки + " - Не заполнен вид деятельности.", Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(Стр.СтатьяЗатрат) Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Строка: " + Стр.НомерСтроки + " - Не заполнена статья затрат.", Отказ);
		КонецЕсли;
		// +++ввв 26.04.2017 г.				
		Если НЕ ЗначениеЗаполнено(Стр.ttk_ПериодВозникновенияЗадолженности) Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Строка: " + Стр.НомерСтроки + " - Не заполнен Период возникновения задолженности.", Отказ);
		КонецЕсли;
		// ---ввв 26.04.2017 г.
	КонецЦикла;	
	
КонецПроцедуры

Функция ПолучитьСписокПодразделенийОрганизаций(Подразделение,Организация)Экспорт 
	
	СписокВыбора = Новый СписокЗначений;
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации
	|ИЗ
	|	РегистрСведений.СоответствиеПодразделенийИПодразделенийОрганизаций КАК СоответствиеПодразделенийИПодразделенийОрганизаций
	|
	|ГДЕ
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Подразделение = &Подразделение И
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.ПодразделениеОрганизации <> &ПустоеПодразделениеОрганизации И
	|	СоответствиеПодразделенийИПодразделенийОрганизаций.Организация = &Организация";
	
	Запрос.УстановитьПараметр("Подразделение",Подразделение);
	Запрос.УстановитьПараметр("Организация",Организация);
	Запрос.УстановитьПараметр("ПустоеПодразделениеОрганизации",Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		СписокВыбора.Добавить(Выборка.ПодразделениеОрганизации);
	КонецЦикла;
	
	Возврат СписокВыбора;
	
КонецФункции

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	//АБС ИЗМЕНЕНИЕ 28107
	Если ДанныеЗаполнения<>Неопределено Тогда
		Если ДанныеЗаполнения.Свойство("ВидОперации") Тогда
			ВидОперации = ДанныеЗаполнения.ВидОперации;
		КонецЕсли;
	КонецЕсли;
	//\\АБС ИЗМЕНЕНИЕ 28107 КОНЕЦ
	
КонецПроцедуры

