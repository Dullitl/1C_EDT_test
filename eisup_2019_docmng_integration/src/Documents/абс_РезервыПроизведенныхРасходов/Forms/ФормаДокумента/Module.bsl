//Сторчевой А.Н. 77152649 16.08.2017 {                                   
&НаКлиенте
Перем ТекДата;
// } Сторчевой А.Н. 77152649 16.08.2017


// Обработчики событий
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НЕ ЗНачениеЗаполнено(Объект.Ссылка) Тогда
		
		Объект.Статус 					= Перечисления.абс_СтатусыРПР.Подготовка;
		Объект.Ответственный 			= глЗначениеПеременной("глТекущийПользователь");
		
		Объект.Организация				= УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(Объект.Ответственный, "ОсновнаяОрганизация");
		
		Объект.ПериодНачисления 		= НачалоМесяца(ТекущаяДата());		
		
		//УстановитьОсновнойВидОперации();
		
	КонецЕсли;
	
	//Сторчевой А.Н. 77152649 16.08.2017 {                                   
	ТекДата = ТекущаяДата();
	Если ЗначениеЗаполнено(Объект.ПериодНачисления) Тогда 
		Период = ПолучитьПредставлениеПериодаРегистрации(Объект.ПериодНачисления);
	КонецЕсли;
	// } Сторчевой А.Н. 77152649 16.08.2017
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСписокДоступныхСтатусов();
	
	УстановитьВидимостьДоступностьНаКлиенте();
		
	Если Элементы.Статус.СписокВыбора.Количество() = 1 И ЗначениеЗаполнено(Объект.Ссылка) Тогда		
		Сообщить("Редактирование документа запрещено!");
	КонецЕсли;
	
	//Бобылев А.А. 05.12.17г 77226142
	ВывестиИтоги(Неопределено);
	//Бобылев А.А.--------------------
	 //ххх Брель Виктор Андреевич 23.04.2018 15:02:09, заявка <<<
	 УстановитьУсловноеОформление();
	 Если Объект.ВидОперации =  Перечисления.абс_ВидыДокументовРНПД.ПоЦФО Тогда
		 Элементы.РезервыЗаполнитьПОЗЗ.Видимость = Ложь;
		КонецЕсли;
	 // Брель Виктор Андреевич 23.04.2018 15:02:09 >>>
	 
КонецПроцедуры

&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	
	Объект.ПричинаИзмененияСтатуса = "";
	Если СпрашиватьПричинуИзмененияСтатуса() Тогда
		ВвестиСтроку(Объект.ПричинаИзмененияСтатуса, "Введите причину изменения статуса",,Истина);
		
		// АБС ВСТАВКА Вводим номера телефонов
		абс_БизнесПроцессыКлиент.ВвестиВнутреннийНомерТелефона(ПолучитьДанныеПользователя());
		
	КонецЕсли;	
	//ххх Брель Виктор Андреевич 05.04.2018 17:35:02, заявка <<<
	Если Объект.Ссылка.Статус  = Перечисления.Абс_СтатусыРПР.Подготовка И Объект.Статус  <> Перечисления.Абс_СтатусыРПР.Подготовка Тогда
	Список20 = Новый СписокЗначений;
	Список20.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	Список20.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводство);
	Список20.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоНеОблагаемоеЕНВД);
	Список20.Добавить(ПланыСчетов.Хозрасчетный.ОсновноеПроизводствоОблагаемоеЕНВД);
	Список20.Добавить(ПланыСчетов.Хозрасчетный.ПроизводствоИзДавальческогоСырья);
	Для Каждого СтрокаРезерва Из Объект.Резервы Цикл
		Если Список20.НайтиПоЗначению(СтрокаРезерва.СчетЗатратБУ) <> Неопределено  И  НЕ ЗначениеЗаполнено(СтрокаРезерва.НоменклатурнаяГруппа) Тогда
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Не заполнена Номенклатурная группа! Строка №: " + Строка(Объект.Резервы.Индекс(СтрокаРезерва)+1));
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;
	КонецЕсли;
	// Брель Виктор Андреевич 05.04.2018 17:35:02 >>>
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	ЗаполнитьСписокДоступныхСтатусов();	
	
	УстановитьВидимостьДоступностьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияПриИзменении(Элемент)
	
	Объект.ПериодНачисления = НачалоМесяца(Объект.ПериодНачисления);
	
	Объект.Резервы.Очистить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияРегулирование(Элемент, Направление, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	РазрешеноИзменение = ПередНачаломСменыАналитикРПР();
	
	Если НЕ РазрешеноИзменение Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ПериодНачисления = НачалоМесяца(ДобавитьМесяц(Объект.ПериодНачисления, Направление));
	
	Объект.Резервы.Очистить();
	
	//Сторчевой А.Н. 77152649 16.08.2017 {                                   
	Период = Формат(Объект.ПериодНачисления, "ДФ='MMMM yyyy'");
	ТекДата = Объект.ПериодНачисления; 
	// } Сторчевой А.Н. 77152649 16.08.2017
	
КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииРНПДПриИзменении(Элемент)
	
	ПриСменеВидаОперацииРПР();
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ПередНачаломСменыАналитикРПР();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ПередНачаломСменыАналитикРПР();	
	
КонецПроцедуры

&НаКлиенте
Процедура ДирекцияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ПередНачаломСменыАналитикРПР();
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачисленияНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = ПередНачаломСменыАналитикРПР();
	
	//Сторчевой А.Н. 77152649 16.08.2017 {
	Если СтандартнаяОбработка Тогда
		ВыборПериода(Элемент, СтандартнаяОбработка, Объект.ПериодНачисления);
		Объект.Резервы.Очистить();
	КонецЕсли;
	// } Сторчевой А.Н. 77152649 16.08.2017

КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Объект.Резервы.Очистить();	
	
КонецПроцедуры

&НаКлиенте
Процедура ЦФОПриИзменении(Элемент)
	
	Объект.Резервы.Очистить();	
		
КонецПроцедуры

&НаКлиенте
Процедура ДирекцияПриИзменении(Элемент)
	
	Объект.Резервы.Очистить();

КонецПроцедуры

&НаКлиенте
Процедура ПриСменеВидаОперацииРПР()
	
	Если Объект.Резервы.Количество() > 0 Тогда	
		Если Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Нет Тогда
			
			Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыДокументовРНПД.ПоДирекции") Тогда
				Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыДокументовРНПД.ПоЦФО")				
			ИначеЕсли Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыДокументовРНПД.ПоЦФО") Тогда
				Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыДокументовРНПД.ПоДирекции")
			КонецЕсли;
			
			Возврат;
		КонецЕсли;
	КонецЕсли;	
	
	Объект.Резервы.Очистить();
	
	УстановитьВидимостьДоступностьНаКлиенте();
	
КонецПроцедуры


// Команды формы
&НаКлиенте
Процедура КомандаЗаполнитьРезервыПоОстаткам(Команда)
	
	Если НЕ Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.Подготовка") Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Заполнение документа возможно только в статусе ""Подготовка"".");
		Возврат;
	КонецЕсли;
	
	Если Объект.Резервы.Количество() > 0 Тогда	
		Если НЕ Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПроизвестиЗаполнениеДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФайлы(Команда)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Сначало надо записать документ.");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура("ВладелецФайла", Объект.Ссылка);
	ОткрытьФорму("Справочник.ХранилищеДополнительнойИнформации.Форма.ФормаСпискаУправляемая", ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьПроводкиБУ(Команда)
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		БухгалтерскийУчет.ОткрытьЖурналПроводок(Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОткрытьПроводкиНУ(Команда)

	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		БухгалтерскийУчет.ОткрытьЖурналПроводок(Объект.Ссылка, "НУ");
	КонецЕсли;

КонецПроцедуры


// Процедуры и функции заполнения документа
&НаСервере
Процедура ПроизвестиЗаполнениеДокумента()
	
	//Если Модифицированность Тогда
	//	ttk_ОбщегоНазначения.СообщитьОбОшибке("Документ не записан!");
	//	
	//	Возврат;
	//КонецЕсли;
	
	Если Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции Тогда
		
		ЗаполнитьРезервыПоОстаткамЗаПериод();
		
	ИначеЕсли Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО Тогда
		
		ЗаполнитьРезервыПоСогласованнымДокументам();
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПроизвестиЗаполнениеДокументаНовая()
	
	//Если Модифицированность Тогда
	//	ttk_ОбщегоНазначения.СообщитьОбОшибке("Документ не записан!");
	//	
	//	Возврат;
	//КонецЕсли;
	
	Если Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции Тогда
		
		ЗаполнитьРезервыПоОстаткамЗаПериодНовая();
		
	ИначеЕсли Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО Тогда
		
		ЗаполнитьРезервыПоСогласованнымДокументам();
		
	КонецЕсли;	
	
КонецПроцедуры


&НаСервере
Процедура ЗаполнитьРезервыПоОстаткамЗаПериод()
	
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
	|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
	|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаОстаткаПоГрафику,
	|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаРНП,
	|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС КАК СтавкаНДС,
	|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС КАК СуммаНДС,
	|	абс_ПроектыРезервовРНПДПоЗЗ.Ответственный КАК ОтветственныйЗЗ,
	|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
	|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
	|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДокумента,
	|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ КАК ЦФУ,
	|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
	|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
	|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
	|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
	|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город,
	|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов КАК БюджетнаяСтатья,
	|	абс_ПроектыРезервовРНПДПоЗЗ.НоменклатурнаяГруппа,
	|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности
	|ПОМЕСТИТЬ ВТ_ОстатокПоГрафику
	|ИЗ
	|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
	|ГДЕ
	|	абс_ПроектыРезервовРНПДПоЗЗ.Организация = &Организация
	|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
	|	И НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&ПериодПоставки, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ПоступлениеТоваровУслуг.Ссылка) КАК Ссылка,
	|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ КАК абс_ЗакупочныйЗаказ,
	|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента
	|ПОМЕСТИТЬ ВТ_ПоставкиПоЗЗ
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.абс_ЗакупочныеЗаказы КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ В
	|			(ВЫБРАТЬ
	|				ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ
	|			ИЗ
	|				ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику)
	|	И ПоступлениеТоваровУслуг.Ссылка.Проведен
	|	И ПоступлениеТоваровУслуг.Ссылка.ОтражатьВБухгалтерскомУчете
	|	И ПоступлениеТоваровУслуг.Ссылка.абс_Статус В (ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.Завершен), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.КорректировкаДокумента))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ,
	|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ОстатокПоГрафику.Организация,
	|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО КАК ЦФО,
	|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.Ссылка) КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ПоследниеСправки
	|ИЗ
	|	ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	|		ПО ВТ_ОстатокПоГрафику.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
	|			И ВТ_ОстатокПоГрафику.ДоговорКонтрагента = абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента
	|			И ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
	|			И ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
	|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоЦФО))
	|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.Абс_СтатусыРПР.Согласован))
	|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	|	ВТ_ОстатокПоГрафику.Организация,
	|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ПоследниеСправки.Организация,
	|	ВТ_ПоследниеСправки.ДоговорКонтрагента,
	|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
	|	ВТ_ПоследниеСправки.ЦФО,
	|	МАКСИМУМ(ВТ_ПоследниеСправки.Ссылка) КАК Ссылка,
	|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности) КАК ВидДеятельности,
	|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат) КАК СтатьяЗатрат
	|ПОМЕСТИТЬ ВТ_АналитикаПоследнихСправок
	|ИЗ
	|	ВТ_ПоследниеСправки КАК ВТ_ПоследниеСправки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	|		ПО ВТ_ПоследниеСправки.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
	|			И ВТ_ПоследниеСправки.ДоговорКонтрагента = абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента
	|			И ВТ_ПоследниеСправки.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
	|			И ВТ_ПоследниеСправки.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
	|			И ВТ_ПоследниеСправки.Ссылка = абс_РезервыПроизведенныхРасходовРезервы.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПоследниеСправки.Организация,
	|	ВТ_ПоследниеСправки.ДоговорКонтрагента,
	|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
	|	ВТ_ПоследниеСправки.ЦФО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СтатьяЗатрат) КАК СтатьяЗатрат2,
	|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатрат) КАК СчетЗатрат,
	|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатратНУ) КАК СчетЗатратНУ,
	|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.Ссылка) КАК Ссылка,
	|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ,
	|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	|				ТОГДА ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)
	|					КОНЕЦ
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	|				ТОГДА ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)
	|					КОНЕЦ
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	|				ТОГДА ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)
	|					КОНЕЦ
	|		КОНЕЦ) КАК СтатьяЗатрат,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.НоменклатурныеГруппы
	|				ТОГДА ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.НоменклатурныеГруппы)
	|					КОНЕЦ
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.НоменклатурныеГруппы
	|				ТОГДА ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.НоменклатурныеГруппы)
	|					КОНЕЦ
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.НоменклатурныеГруппы
	|				ТОГДА ВЫБОР
	|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.НоменклатурныеГруппы)
	|					КОНЕЦ
	|			ИНАЧЕ ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	|		КОНЕЦ) КАК НоменклатурнаяГруппа,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.абс_ВидыДеятельностиКТТК)
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.абс_ВидыДеятельностиКТТК)
	|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.абс_ВидыДеятельностиКТТК)
	|			ИНАЧЕ &ПустойВидДеятельности
	|		КОНЕЦ) КАК ВидДеятельности
	|ПОМЕСТИТЬ ВТ_ПоставкиАналитика
	|ИЗ
	|	ВТ_ПоставкиПоЗЗ КАК ВТ_ПоставкиПоЗЗ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	|		ПО ВТ_ПоставкиПоЗЗ.Ссылка = ПоступлениеТоваровУслугУслуги.Ссылка
	|			И (ПоступлениеТоваровУслугУслуги.НомерСтроки = 1)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	|	ВТ_ОстатокПоГрафику.Контрагент,
	|	ВТ_ОстатокПоГрафику.ВалютаДокумента,
	|	ВТ_ОстатокПоГрафику.ЦФУ,
	|	ВТ_ОстатокПоГрафику.БюджетнаяСтатья,
	|	ВТ_ОстатокПоГрафику.СуммаОстаткаПоГрафику,
	|	ВТ_ОстатокПоГрафику.СуммаРНП,
	|	ВТ_ОстатокПоГрафику.СтавкаНДС,
	|	ВТ_ОстатокПоГрафику.СуммаНДС,
	|	ВТ_ОстатокПоГрафику.СуммаНДС КАК СуммаНДС_РПР,
	|	ВЫБОР
	|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
	|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
	|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
	|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
	|	КОНЕЦ КАК СтатьяЗатратАвто,
	|	ВЫБОР
	|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
	|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
	|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
	|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
	|	КОНЕЦ КАК СтатьяЗатрат,
	|	ВЫБОР
	|		КОГДА ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
	|							И НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
	|						ТОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
	|					ИНАЧЕ ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппаАвто,
	|	ВЫБОР
	|		КОГДА ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	|			ТОГДА ВЫБОР
	|					КОГДА НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
	|							И НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
	|						ТОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
	|					ИНАЧЕ ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
	|				КОНЕЦ
	|		ИНАЧЕ ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа
	|	КОНЕЦ КАК НоменклатурнаяГруппа,
	|	ВЫБОР
	|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
	|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
	|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
	|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
	|	КОНЕЦ КАК Виддеятельности,
	|	ВЫБОР
	|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
	|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
	|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
	|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
	|	КОНЕЦ КАК ВидДеятельностиАвто,
	|	ВТ_ПоставкиАналитика.СчетЗатрат КАК СчетЗатратАвтоБУ,
	|	ВТ_ПоставкиАналитика.СчетЗатратНУ КАК СчетЗатратАвтоНУ,
	|	ВТ_ПоставкиАналитика.СчетЗатрат КАК СчетЗатратБУ,
	|	ВТ_ПоставкиАналитика.СчетЗатратНУ КАК СчетЗатратНУ,
	|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	|	ИСТИНА КАК Учитывать,
	|	ВТ_ОстатокПоГрафику.абс_ТипСети,
	|	ВТ_ОстатокПоГрафику.абс_КВ,
	|	ВТ_ОстатокПоГрафику.абс_ТЭО,
	|	ВЫБОР
	|		КОГДА ВТ_ОстатокПоГрафику.ttk_ОбъектБюджетирования = ЗНАЧЕНИЕ(СПравочник.ttk_ОбъектыБюджетирования.ПустаяСсылка)
	|			ТОГДА ttk_ОбъектыБюджетирования.Ссылка
	|		ИНАЧЕ ВТ_ОстатокПоГрафику.ttk_ОбъектБюджетирования
	|	КОНЕЦ КАК ttk_ОбъектБюджетирования,
	|	ВТ_ОстатокПоГрафику.ttk_Город,
	|	ВТ_ОстатокПоГрафику.ttk_ПериодВозникновенияЗадолженности	
	|ИЗ
	|	ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставкиАналитика КАК ВТ_ПоставкиАналитика
	|		ПО ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = ВТ_ПоставкиАналитика.абс_ЗакупочныйЗаказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоследнихСправок КАК ВТ_АналитикаПоследнихСправок
	|		ПО ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = ВТ_АналитикаПоследнихСправок.ЗакупочныйЗаказ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ttk_ОбъектыБюджетирования КАК ttk_ОбъектыБюджетирования
	|		ПО ВТ_ОстатокПоГрафику.Организация = ttk_ОбъектыБюджетирования.Организация");
	
	
	Запрос.УстановитьПараметр("Организация"					, Объект.Организация);
	Запрос.УстановитьПараметр("ЦФО"							, Объект.ЦФО);
	Запрос.УстановитьПараметр("ПериодПоставки"				, Объект.ПериодНачисления);
	Запрос.УстановитьПараметр("СтатусыЗЗ"					, Перечисления.абсСтатусЗакупочногоЗаказа.Согласован);
	Запрос.УстановитьПараметр("Дирекция"					, Объект.Дирекция);
	Запрос.УстановитьПараметр("ТекДата"						, ТекущаяДата());
	Запрос.УстановитьПараметр("ПустойВидДеятельности"		, Справочники.абс_ВидыДеятельностиКТТК.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяНГ"					, Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат"			, Справочники.СтатьиЗатрат.ПустаяСсылка());
	
	Объект.Резервы.Загрузить(Запрос.Выполнить().Выгрузить());
	
	СчетРПРБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.04");
	СчетРПРНУ = ПланыСчетов.Налоговый.НайтиПоКоду("ПВ");
	
	СчетНДС	= ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.УН");
	
	Для Каждого Стр Из Объект.Резервы Цикл
		
		//Если Стр.ЗакупочныйЗаказ.Договоры.Количество() > 0 И НЕ ЗначениеЗаполнено(Стр.ДоговорКонтрагента) Тогда
		//	
		//	Стр.ДоговорКонтрагента 	= Стр.ЗакупочныйЗаказ.Договоры[Стр.ЗакупочныйЗаказ.Договоры.Количество()-1].ДоговорКонтрагента;	
		//		
		//КонецЕсли;
		
		//Стр.ВалютаДоговора      = Стр.ДоговорКонтрагента.ВалютаВзаиморасчетов;
		
		Стр.Курс                = 1;
		Стр.Кратность			= 1;
			
		Стр.СчетУчетаРПРБУ		= СчетРПРБУ;
		Стр.СчетУчетаРПРНУ		= СчетРПРНУ;
		
		Стр.СчетУчетаНДС		= СчетНДС;
		
		//Стр.СуммаНДС			= УчетНДС.РассчитатьСуммуНДС(Стр.СуммаОстаткаПоГрафику	, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(Стр.СтавкаНДС));
		//Стр.СуммаНДС_РПР		= УчетНДС.РассчитатьСуммуНДС(Стр.СуммаРНП				, Истина, Ложь, УчетНДС.ПолучитьСтавкуНДС(Стр.СтавкаНДС));
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьРезервыПоОстаткамЗаПериодНовая()
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента, МЕСЯЦ) КАК ДатаВходящего,
		|	ПоступлениеТоваровУслугУслуги.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	ПоступлениеТоваровУслугУслуги.абс_ЦФУ КАК абс_ЦФУ,
		|	ПоступлениеТоваровУслугУслуги.абс_ТЭО КАК абс_ТЭО,
		|	ПоступлениеТоваровУслугУслуги.СтатьяОборотов КАК СтатьяОборотов,
		|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление) КАК ttk_УсловноеНачисление,
		|	ПоступлениеТоваровУслугУслуги.абс_ЗакупочныйЗаказТЧ,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Организация,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.Ссылка,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление.ПериодНачисления, МЕСЯЦ) КАК Условник_ПериодНачисл,
		|	ПоступлениеТоваровУслугУслуги.НомерСтроки
		|ПОМЕСТИТЬ ВР_ПТиУ
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|ГДЕ
		|	НЕ ПоступлениеТоваровУслугУслуги.Ссылка.абс_Статус В (&абс_Статус)
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.Проведен
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента <= &КонецПериода
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.Организация = &Организация
		|	И НЕ ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление ЕСТЬ NULL 
		|	И ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление <> &УсловноеНачислениеПустая
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслугУслуги.СтатьяОборотов,
		|	ПоступлениеТоваровУслугУслуги.абс_ТЭО,
		|	ПоступлениеТоваровУслугУслуги.абс_ЦФУ,
		|	ПоступлениеТоваровУслугУслуги.ttk_ОбъектБюджетирования,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента, МЕСЯЦ),
		|	ПоступлениеТоваровУслугУслуги.абс_ЗакупочныйЗаказТЧ,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Организация,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.Ссылка,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.Дата, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление.ПериодНачисления, МЕСЯЦ),
		|	ПоступлениеТоваровУслугУслуги.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) КАК Период,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
		|	СУММА(абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП) КАК СуммаРНП,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС,
		|	СУММА(абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС) КАК СуммаНДС,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город
		|ПОМЕСТИТЬ ВР_ПРРНПД
		|ИЗ
		|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, ГОД) = &ГОД
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Организация = &Организация
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности <= &КонецПериода
		|	И НЕ абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Статус В (&СписокСтатусов)
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Период,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВР_ПРРНПД.Период) КАК Период,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов,
		|	ВР_ПРРНПД.абс_ТипСети,
		|	ВР_ПРРНПД.абс_КВ,
		|	ВР_ПРРНПД.абс_ТЭО,
		|	ВР_ПРРНПД.абс_ЦФУ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.Организация,
		|	ВР_ПРРНПД.Контрагент,
		|	ВР_ПРРНПД.ДоговорКонтрагента
		|ПОМЕСТИТЬ ВР_РНПД_МАКС
		|ИЗ
		|	ВР_ПРРНПД КАК ВР_ПРРНПД
		|ГДЕ
		|	(НЕ ВР_ПРРНПД.СтатьяОборотов ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТипСети ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_КВ ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТЭО ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ЦФУ ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.ttk_ОбъектБюджетирования ЕСТЬ NULL )
		|	И (НЕ ВР_ПРРНПД.СтатьяОборотов = &СтатьяОборотовПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТипСети = &ТипСетиПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_КВ = &КВПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТЭО = &ТЭОПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ЦФУ = &ЦФУПустая
		|			ИЛИ НЕ ВР_ПРРНПД.ttk_ОбъектБюджетирования = &ОбъектБюджетированияПустая)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВР_ПРРНПД.абс_КВ,
		|	ВР_ПРРНПД.абс_ТипСети,
		|	ВР_ПРРНПД.абс_ЦФУ,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.абс_ТЭО,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов,
		|	ВР_ПРРНПД.Организация,
		|	ВР_ПРРНПД.Контрагент,
		|	ВР_ПРРНПД.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_ПРРНПД.Период,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов,
		|	ВР_ПРРНПД.абс_ТипСети,
		|	ВР_ПРРНПД.абс_КВ,
		|	ВР_ПРРНПД.абс_ТЭО,
		|	ВР_ПРРНПД.абс_ЦФУ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.СуммаРНП,
		|	ВР_ПРРНПД.СтавкаНДС,
		|	ВР_ПРРНПД.СуммаНДС,
		|	ВР_ПРРНПД.Организация,
		|	ВР_ПРРНПД.Контрагент,
		|	ВР_ПРРНПД.ДоговорКонтрагента,
		|	ВР_ПРРНПД.ttk_Город
		|ПОМЕСТИТЬ ВТ_ПРРНПД_итог
		|ИЗ
		|	ВР_РНПД_МАКС КАК ВР_РНПД_МАКС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПРРНПД КАК ВР_ПРРНПД
		|		ПО ВР_РНПД_МАКС.Период = ВР_ПРРНПД.Период
		|			И ВР_РНПД_МАКС.ЗакупочныйЗаказ = ВР_ПРРНПД.ЗакупочныйЗаказ
		|			И ВР_РНПД_МАКС.ttk_ПериодВозникновенияЗадолженности = ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности
		|			И ВР_РНПД_МАКС.СтатьяОборотов = ВР_ПРРНПД.СтатьяОборотов
		|			И ВР_РНПД_МАКС.абс_ТЭО = ВР_ПРРНПД.абс_ТЭО
		|			И ВР_РНПД_МАКС.абс_ЦФУ = ВР_ПРРНПД.абс_ЦФУ
		|			И ВР_РНПД_МАКС.ttk_ОбъектБюджетирования = ВР_ПРРНПД.ttk_ОбъектБюджетирования
		|			И ВР_РНПД_МАКС.Контрагент = ВР_ПРРНПД.Контрагент
		|			И ВР_РНПД_МАКС.Организация = ВР_ПРРНПД.Организация
		|			И ВР_РНПД_МАКС.ДоговорКонтрагента = ВР_ПРРНПД.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПРРНПД_итог.Период,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	СУММА(ВТ_ПРРНПД_итог.СуммаРНП) КАК СуммаРНП,
		|	ВТ_ПРРНПД_итог.СтавкаНДС,
		|	СУММА(ВТ_ПРРНПД_итог.СуммаНДС) КАК СуммаНДС,
		|	МАКСИМУМ(ВР_ПТиУ.ttk_УсловноеНачисление) КАК ttk_УсловноеНачисление,
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.Контрагент,
		|	ВР_ПТиУ.Ссылка,
		|	ВТ_ПРРНПД_итог.ДоговорКонтрагента,
		|	ВТ_ПРРНПД_итог.ttk_Город
		|ПОМЕСТИТЬ ИТОГ_Остатки
		|ИЗ
		|	ВТ_ПРРНПД_итог КАК ВТ_ПРРНПД_итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПТиУ КАК ВР_ПТиУ
		|		ПО ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности = ВР_ПТиУ.ДатаВходящего
		|			И ВТ_ПРРНПД_итог.СтатьяОборотов = ВР_ПТиУ.СтатьяОборотов
		|			И ВТ_ПРРНПД_итог.абс_ТЭО = ВР_ПТиУ.абс_ТЭО
		|			И ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования = ВР_ПТиУ.ttk_ОбъектБюджетирования
		|			И ВТ_ПРРНПД_итог.абс_ЦФУ = ВР_ПТиУ.абс_ЦФУ
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ = ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ
		|			И ВТ_ПРРНПД_итог.Организация = ВР_ПТиУ.Организация
		|			И ВТ_ПРРНПД_итог.Контрагент = ВР_ПТиУ.Контрагент
		|			И ВТ_ПРРНПД_итог.Период <= ВР_ПТиУ.Месяц
		|			И (ВР_ПТиУ.Условник_ПериодНачисл >= НАЧАЛОПЕРИОДА(ВТ_ПРРНПД_итог.Период, МЕСЯЦ)
		|				ИЛИ ВР_ПТиУ.Условник_ПериодНачисл ЕСТЬ NULL )
		|			И (НЕ ВР_ПТиУ.ttk_УсловноеНачисление ЕСТЬ NULL )
		|			И (ВР_ПТиУ.ttk_УсловноеНачисление <> &УсловноеНачислениеПустая)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.Период,
		|	ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности,
		|	ВТ_ПРРНПД_итог.Контрагент,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.СтавкаНДС,
		|	ВР_ПТиУ.Ссылка,
		|	ВТ_ПРРНПД_итог.ДоговорКонтрагента,
		|	ВТ_ПРРНПД_итог.ttk_Город
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МАКСИМУМ(ВР_ПТиУ.Ссылка) КАК Ссылка,
		|	ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ КАК абс_ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФУ,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.Контрагент,
		|	МАКСИМУМ(ВР_ПТиУ.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ПоставкиПоЗЗ
		|ИЗ
		|	ВТ_ПРРНПД_итог КАК ВТ_ПРРНПД_итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПТиУ КАК ВР_ПТиУ
		|		ПО ВТ_ПРРНПД_итог.СтатьяОборотов = ВР_ПТиУ.СтатьяОборотов
		|			И ВТ_ПРРНПД_итог.абс_ТЭО = ВР_ПТиУ.абс_ТЭО
		|			И ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования = ВР_ПТиУ.ttk_ОбъектБюджетирования
		|			И ВТ_ПРРНПД_итог.абс_ЦФУ = ВР_ПТиУ.абс_ЦФУ
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ = ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ
		|			И ВТ_ПРРНПД_итог.Организация = ВР_ПТиУ.Организация
		|			И ВТ_ПРРНПД_итог.Контрагент = ВР_ПТиУ.Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФУ,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.Ссылка) КАК Ссылка,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО КАК ЦФО,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.Контрагент
		|ПОМЕСТИТЬ ВТ_ПоследниеСправки
		|ИЗ
		|	ВТ_ПРРНПД_итог КАК ВТ_ПРРНПД_итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|		ПО ВТ_ПРРНПД_итог.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
		|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоЦФО))
		|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.Абс_СтатусыРПР.Согласован))
		|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Проведен)
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
		|			И ВТ_ПРРНПД_итог.абс_ТЭО = абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО
		|			И ВТ_ПРРНПД_итог.абс_ЦФУ = абс_РезервыПроизведенныхРасходовРезервы.ЦФУ
		|			И ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования = абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования
		|			И ВТ_ПРРНПД_итог.СтатьяОборотов = абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья
		|			И ВТ_ПРРНПД_итог.Контрагент = абс_РезервыПроизведенныхРасходовРезервы.Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
		|	ВТ_ПоследниеСправки.ЦФО,
		|	МАКСИМУМ(ВТ_ПоследниеСправки.Ссылка) КАК Ссылка,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности) КАК ВидДеятельности,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат) КАК СтатьяЗатрат,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоБУ) КАК СчетЗатратАвтоБУ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоНУ) КАК СчетЗатратАвтоНУ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратБУ) КАК СчетЗатратБУ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратНУ) КАК СчетЗатратНУ,
		|	ВТ_ПоследниеСправки.СтатьяОборотов,
		|	ВТ_ПоследниеСправки.ttk_ОбъектБюджетирования,
		|	ВТ_ПоследниеСправки.абс_ТипСети,
		|	ВТ_ПоследниеСправки.абс_КВ,
		|	ВТ_ПоследниеСправки.абс_ТЭО,
		|	ВТ_ПоследниеСправки.абс_ЦФУ,
		|	ВТ_ПоследниеСправки.Контрагент,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаНДС) КАК СчетУчетаНДС
		|ПОМЕСТИТЬ ВТ_АналитикаПоследнихСправок
		|ИЗ
		|	ВТ_ПоследниеСправки КАК ВТ_ПоследниеСправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|		ПО ВТ_ПоследниеСправки.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
		|			И ВТ_ПоследниеСправки.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
		|			И ВТ_ПоследниеСправки.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
		|			И ВТ_ПоследниеСправки.Ссылка = абс_РезервыПроизведенныхРасходовРезервы.Ссылка
		|			И ВТ_ПоследниеСправки.СтатьяОборотов = абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья
		|			И ВТ_ПоследниеСправки.ttk_ОбъектБюджетирования = абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования
		|			И ВТ_ПоследниеСправки.абс_ТЭО = абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО
		|			И ВТ_ПоследниеСправки.абс_ЦФУ = абс_РезервыПроизведенныхРасходовРезервы.ЦФУ
		|			И ВТ_ПоследниеСправки.Контрагент = абс_РезервыПроизведенныхРасходовРезервы.Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
		|	ВТ_ПоследниеСправки.ЦФО,
		|	ВТ_ПоследниеСправки.СтатьяОборотов,
		|	ВТ_ПоследниеСправки.ttk_ОбъектБюджетирования,
		|	ВТ_ПоследниеСправки.абс_ТипСети,
		|	ВТ_ПоследниеСправки.абс_КВ,
		|	ВТ_ПоследниеСправки.абс_ТЭО,
		|	ВТ_ПоследниеСправки.абс_ЦФУ,
		|	ВТ_ПоследниеСправки.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.Ссылка) КАК Ссылка,
		|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
		|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
		|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)
		|					КОНЕЦ
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
		|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
		|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)
		|					КОНЕЦ
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
		|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
		|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)
		|					КОНЕЦ
		|		КОНЕЦ) КАК СтатьяЗатрат,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.абс_ВидыДеятельностиКТТК)
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.абс_ВидыДеятельностиКТТК)
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.абс_ВидыДеятельностиКТТК)
		|			ИНАЧЕ &ПустойВидДеятельности
		|		КОНЕЦ) КАК ВидДеятельности,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФО,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФУ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТипСети,
		|	ВТ_ПоставкиПоЗЗ.абс_КВ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТЭО,
		|	ВТ_ПоставкиПоЗЗ.ttk_ОбъектБюджетирования,
		|	ВТ_ПоставкиПоЗЗ.СтатьяОборотов,
		|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатратНУ) КАК СчетЗатратНУ,
		|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатрат) КАК СчетЗатратБУ,
		|	ВТ_ПоставкиПоЗЗ.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа,
		|	ПоступлениеТоваровУслугУслуги.СчетУчетаНДС
		|ПОМЕСТИТЬ ВТ_ПоставкиАналитика
		|ИЗ
		|	ВТ_ПоставкиПоЗЗ КАК ВТ_ПоставкиПоЗЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|		ПО ВТ_ПоставкиПоЗЗ.Ссылка = ПоступлениеТоваровУслугУслуги.Ссылка
		|			И ВТ_ПоставкиПоЗЗ.НомерСтроки = ПоступлениеТоваровУслугУслуги.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФО,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФУ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТипСети,
		|	ВТ_ПоставкиПоЗЗ.абс_КВ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТЭО,
		|	ВТ_ПоставкиПоЗЗ.ttk_ОбъектБюджетирования,
		|	ВТ_ПоставкиПоЗЗ.СтатьяОборотов,
		|	ВТ_ПоставкиПоЗЗ.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа,
		|	ПоступлениеТоваровУслугУслуги.СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИТОГ.Период,
		|	ИТОГ.ЗакупочныйЗаказ,
		|	ИТОГ.ttk_ПериодВозникновенияЗадолженности,
		|	ИТОГ.СтатьяОборотов КАК БюджетнаяСтатья,
		|	ИТОГ.абс_ТипСети,
		|	ИТОГ.абс_КВ,
		|	ИТОГ.абс_ТЭО,
		|	ИТОГ.абс_ЦФУ КАК ЦФУ,
		|	ИТОГ.ttk_ОбъектБюджетирования,
		|	ИТОГ.СуммаРНП,
		|	ИТОГ.СтавкаНДС,
		|	ИТОГ.СуммаНДС,
		|	ИТОГ.ttk_УсловноеНачисление,
		|	ИСТИНА КАК Учитывать,
		|	ИТОГ.Организация,
		|	ИТОГ.Контрагент,
		|	ИТОГ.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДоговора,
		|	ИТОГ.СуммаРНП КАК СуммаОстаткаПоГрафику,
		|	ИТОГ.СуммаНДС КАК СуммаНДС_РПР,
		|	ИТОГ.ДоговорКонтрагента,
		|	ИТОГ.ttk_Город
		|ПОМЕСТИТЬ Врем_Итог
		|ИЗ
		|	ИТОГ_Остатки КАК ИТОГ
		|ГДЕ
		|	ИТОГ.СуммаРНП > 0
		|	И (ИТОГ.ttk_УсловноеНачисление ЕСТЬ NULL 
		|			ИЛИ ИТОГ.ttk_УсловноеНачисление = &УсловноеНачислениеПустая)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Врем_Итог.Период,
		|	Врем_Итог.ЗакупочныйЗаказ,
		//+ Машута А. 16.10.2018 задача 845
		|	ДокЗакупочныйЗаказ.Ответственный КАК ttk_Инициатор,	
		//- Машута А. 16.10.2018 задача 845
		|	Врем_Итог.ttk_ПериодВозникновенияЗадолженности,
		|	Врем_Итог.БюджетнаяСтатья,
		|	Врем_Итог.абс_ТипСети,
		|	Врем_Итог.абс_КВ,
		|	Врем_Итог.абс_ТЭО,
		|	Врем_Итог.ЦФУ,
		|	Врем_Итог.ttk_ОбъектБюджетирования,
		|	Врем_Итог.СуммаРНП,
		|	Врем_Итог.СтавкаНДС,
		|	Врем_Итог.СуммаНДС,
		|	Врем_Итог.ttk_УсловноеНачисление,
		|	Врем_Итог.Учитывать,
		|	Врем_Итог.Организация,
		|	Врем_Итог.Контрагент,
		|	Врем_Итог.ВалютаДоговора,
		|	Врем_Итог.СуммаОстаткаПоГрафику,
		|	Врем_Итог.СуммаНДС_РПР,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
		|	КОНЕЦ КАК СтатьяЗатратАвто,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
		|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
		|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
		|	КОНЕЦ КАК Виддеятельности,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
		|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
		|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
		|	КОНЕЦ КАК ВидДеятельностиАвто,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратБУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратБУ = &ПустойСчет
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратБУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратБУ
		|	КОНЕЦ КАК СчетЗатратАвтоБУ,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратБУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратБУ = &ПустойСчет
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратБУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратБУ
		|	КОНЕЦ КАК СчетЗатратБУ,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратНУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратНУ = &ПустойСчетНУ
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратНУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратНУ
		|	КОНЕЦ КАК СчетЗатратАвтоНУ,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратНУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратНУ = &ПустойСчетНУ
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратНУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратНУ
		|	КОНЕЦ КАК СчетЗатратНУ,
		|	Врем_Итог.ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратБУ В ИЕРАРХИИ (&Счет20)
		|				ИЛИ ВТ_АналитикаПоследнихСправок.СчетЗатратБУ В ИЕРАРХИИ (&Счет20)
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
		|							ИЛИ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
		|						ТОГДА ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
		|					ИНАЧЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
		|				КОНЕЦ
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетУчетаНДС ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетУчетаНДС = &ПустойСчет
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетУчетаНДС
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетУчетаНДС
		|	КОНЕЦ КАК СчетУчетаНДС
		|ИЗ
		|	Врем_Итог КАК Врем_Итог
		//+ Машута А. 16.10.2018 задача 845
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_ЗакупочныйЗаказ КАК ДокЗакупочныйЗаказ
		|		ПО Врем_Итог.ЗакупочныйЗаказ = ДокЗакупочныйЗаказ.Ссылка	
		//- Машута А. 16.10.2018 задача 845
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоследнихСправок КАК ВТ_АналитикаПоследнихСправок
		|		ПО Врем_Итог.ЗакупочныйЗаказ = ВТ_АналитикаПоследнихСправок.ЗакупочныйЗаказ
		|			И Врем_Итог.Контрагент = ВТ_АналитикаПоследнихСправок.Контрагент
		|			И Врем_Итог.ttk_ОбъектБюджетирования = ВТ_АналитикаПоследнихСправок.ttk_ОбъектБюджетирования
		|			И Врем_Итог.абс_ТЭО = ВТ_АналитикаПоследнихСправок.абс_ТЭО
		|			И Врем_Итог.ЦФУ = ВТ_АналитикаПоследнихСправок.абс_ЦФУ
		|			И Врем_Итог.БюджетнаяСтатья = ВТ_АналитикаПоследнихСправок.СтатьяОборотов
		|			И Врем_Итог.ЗакупочныйЗаказ.ЦФО = ВТ_АналитикаПоследнихСправок.ЦФО
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставкиАналитика КАК ВТ_ПоставкиАналитика
		|		ПО Врем_Итог.ЗакупочныйЗаказ = ВТ_ПоставкиАналитика.абс_ЗакупочныйЗаказ
		|			И Врем_Итог.Контрагент = ВТ_ПоставкиАналитика.Контрагент
		|			И Врем_Итог.БюджетнаяСтатья = ВТ_ПоставкиАналитика.СтатьяОборотов
		|			И Врем_Итог.абс_КВ = ВТ_ПоставкиАналитика.абс_КВ
		|			И Врем_Итог.абс_ТЭО = ВТ_ПоставкиАналитика.абс_ТЭО
		|			И Врем_Итог.ttk_ОбъектБюджетирования = ВТ_ПоставкиАналитика.ttk_ОбъектБюджетирования
		|			И Врем_Итог.ЦФУ = ВТ_ПоставкиАналитика.ЗакупочныйЗаказЦФУ
		|			И Врем_Итог.ЗакупочныйЗаказ.ЦФО = ВТ_ПоставкиАналитика.ЗакупочныйЗаказЦФО";
	 абс_СтатусПерем = Новый Массив;
	 абс_СтатусПерем.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
	 абс_СтатусПерем.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
	 абс_СтатусПерем.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отмена);
	 
	 СписокСтатусов = Новый Массив;
	 СписокСтатусов.Добавить(Перечисления.абсСтатусЗакупочногоЗаказа.Отказ);
	 СписокСтатусов.Добавить(Перечисления.абсСтатусЗакупочногоЗаказа.Отменен);
	 СписокСтатусов.Добавить(Перечисления.абсСтатусЗакупочногоЗаказа.Закрыт);
	 
	 Запрос.УстановитьПараметр("СписокСтатусов",СписокСтатусов );
	Запрос.УстановитьПараметр("абс_Статус",абс_СтатусПерем );
	Запрос.УстановитьПараметр("ГОД", НачалоГода(ТекущаяДата()));
	Запрос.УстановитьПараметр("КВПустая", Справочники.абс_КапитальныеВложения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ОбъектБюджетированияПустая", Справочники.ttk_ОбъектыБюджетирования.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатьяОборотовПустая", Справочники.СтатьиОборотовПоБюджетам.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТипСетиПустая", Справочники.абс_ТипыСетей.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТЭОПустая", Справочники.абс_ТЭО.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЦФУПустая", Справочники.абс_ЦФУ.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойВидДеятельности", Справочники.абс_ВидыДеятельностиКТТК.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЦФО", Объект.ЦФО);
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ПериодНачисления));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ПустойСчетНУ", ПланыСчетов.Налоговый.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	Запрос.УстановитьПараметр("УсловноеНачислениеПустая", Документы.абс_РезервыПроизведенныхРасходов.ПустаяСсылка());
	Запрос.УстановитьПараметр("Счет20", ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	Запрос.УстановитьПараметр("ПустаяНГ", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	
	#Область СтарыйЗапрос_ЗаполнитьРезервыПоОстаткамЗаПериодНовая
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	//
	////}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	//

	//
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаОстаткаПоГрафику,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаРНП,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС КАК СтавкаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС КАК СуммаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Ответственный КАК ОтветственныйЗЗ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДокумента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ КАК ЦФУ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов КАК БюджетнаяСтатья,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.НоменклатурнаяГруппа,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности
	//|ПОМЕСТИТЬ ВТ_ОстатокПоГрафикуТекущийПериод
	//|ИЗ
	//|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
	//|ГДЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация = &Организация
	//|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
	//|	И НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&ПериодПоставки, МЕСЯЦ)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаОстаткаПоГрафику,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаРНП,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС КАК СтавкаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС КАК СуммаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Ответственный КАК ОтветственныйЗЗ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДокумента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ КАК ЦФУ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов КАК БюджетнаяСтатья,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.НоменклатурнаяГруппа,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности,
	//|	ЕСТЬNULL(абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка, абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка) КАК УН
	//|ПОМЕСТИТЬ ВТ_ОстатокПоГрафикуПредыдущиеПериоды
	//|ИЗ
	//|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки
	//|		ПО абс_ПроектыРезервовРНПДПоЗЗ.Организация = абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка.Организация
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.Период = абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка.ПериодНачисления
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.ЗакупочныйЗаказ
	//|			И (абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоДирекции))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы_Справка
	//|		ПО абс_ПроектыРезервовРНПДПоЗЗ.Организация = абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка.Организация
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.Период = абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка.ПериодНачисления
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы_Справка.ЗакупочныйЗаказ
	//|			И (абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоЦФО))
	//|ГДЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация = &Организация
	//|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
	//|	И НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодПоставки, ГОД) И НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ПериодПоставки, МЕСЯЦ, -1), МЕСЯЦ)
	//|	И (абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка ЕСТЬ НЕ NULL 
	//|			ИЛИ абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка ЕСТЬ НЕ NULL )
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	//|	ПоступлениеТоваровУслуг.Ссылка.ttk_УН,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ КАК ЗЗ,
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ
	//|ПОМЕСТИТЬ ВтЗакрытыеУН
	//|ИЗ
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды КАК ВТ_ОстатокПоГрафикуПредыдущиеПериоды
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.абс_ЗакупочныеЗаказы КАК ПоступлениеТоваровУслуг
	//|		ПО (ПоступлениеТоваровУслуг.Ссылка.ttk_УН = ВТ_ОстатокПоГрафикуПредыдущиеПериоды.УН)
	//|			И (ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ = ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ)
	//|			И (ПоступлениеТоваровУслуг.Ссылка.Проведен)
	//|			И (ПоступлениеТоваровУслуг.Ссылка.ОтражатьВБухгалтерскомУчете)
	//|			И (ПоступлениеТоваровУслуг.Ссылка.абс_Статус В (ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.Завершен), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.КорректировкаДокумента)))
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.Организация,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СуммаОстаткаПоГрафику,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СуммаРНП,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СтавкаНДС,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СуммаНДС,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ОтветственныйЗЗ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.Контрагент,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ВалютаДокумента,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЦФУ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.абс_ТипСети,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.абс_КВ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.абс_ТЭО,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_ОбъектБюджетирования,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_Город,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.БюджетнаяСтатья,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.НоменклатурнаяГруппа,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_ПериодВозникновенияЗадолженности,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.УН,
	//|	ВтЗакрытыеУН.ttk_УН,
	//|	ВтЗакрытыеУН.ЗЗ
	//|ПОМЕСТИТЬ втОстатокПоГрафикуДобавить
	//|ИЗ
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды КАК ВТ_ОстатокПоГрафикуПредыдущиеПериоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗакрытыеУН КАК ВтЗакрытыеУН
	//|		ПО ВТ_ОстатокПоГрафикуПредыдущиеПериоды.УН = ВтЗакрытыеУН.ttk_УН
	//|			И ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ = ВтЗакрытыеУН.ЗЗ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстатокПоГрафикуТекущийПериод КАК ВТ_ОстатокПоГрафикуТекущийПериод
	//|		ПО ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_ПериодВозникновенияЗадолженности = ВТ_ОстатокПоГрафикуТекущийПериод.ttk_ПериодВозникновенияЗадолженности
	//|			И ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ = ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ
	//|ГДЕ
	//|	ВтЗакрытыеУН.ttk_УН ЕСТЬ NULL 
	//|	И ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ ЕСТЬ NULL 
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.Организация,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СуммаОстаткаПоГрафику КАК СуммаОстаткаПоГрафику,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СуммаРНП КАК СуммаРНП,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СтавкаНДС КАК СтавкаНДС,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СуммаНДС КАК СуммаНДС,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ОтветственныйЗЗ КАК ОтветственныйЗЗ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДокумента,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЦФУ КАК ЦФУ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.абс_ТипСети,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.абс_КВ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.абс_ТЭО,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ttk_ОбъектБюджетирования,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ttk_Город,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.БюджетнаяСтатья КАК БюджетнаяСтатья,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.НоменклатурнаяГруппа,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ttk_ПериодВозникновенияЗадолженности
	//|ПОМЕСТИТЬ ВТ_ОстатокПоГрафику
	//|ИЗ
	//|	ВТ_ОстатокПоГрафикуТекущийПериод КАК ВТ_ОстатокПоГрафикуТекущийПериод
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	втОстатокПоГрафикуДобавить.Организация,
	//|	втОстатокПоГрафикуДобавить.ДоговорКонтрагента,
	//|	втОстатокПоГрафикуДобавить.СуммаОстаткаПоГрафику,
	//|	втОстатокПоГрафикуДобавить.СуммаРНП,
	//|	втОстатокПоГрафикуДобавить.СтавкаНДС,
	//|	втОстатокПоГрафикуДобавить.СуммаНДС,
	//|	втОстатокПоГрафикуДобавить.ОтветственныйЗЗ,
	//|	втОстатокПоГрафикуДобавить.ЗакупочныйЗаказ,
	//|	втОстатокПоГрафикуДобавить.Контрагент,
	//|	втОстатокПоГрафикуДобавить.ВалютаДокумента,
	//|	втОстатокПоГрафикуДобавить.ЦФУ,
	//|	втОстатокПоГрафикуДобавить.абс_ТипСети,
	//|	втОстатокПоГрафикуДобавить.абс_КВ,
	//|	втОстатокПоГрафикуДобавить.абс_ТЭО,
	//|	втОстатокПоГрафикуДобавить.ttk_ОбъектБюджетирования,
	//|	втОстатокПоГрафикуДобавить.ttk_Город,
	//|	втОстатокПоГрафикуДобавить.БюджетнаяСтатья,
	//|	втОстатокПоГрафикуДобавить.НоменклатурнаяГруппа,
	//|	втОстатокПоГрафикуДобавить.ttk_ПериодВозникновенияЗадолженности
	//|ИЗ
	//|	втОстатокПоГрафикуДобавить КАК втОстатокПоГрафикуДобавить
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	МАКСИМУМ(ПоступлениеТоваровУслуг.Ссылка) КАК Ссылка,
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ КАК абс_ЗакупочныйЗаказ,
	//|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента
	//|ПОМЕСТИТЬ ВТ_ПоставкиПоЗЗ
	//|ИЗ
	//|	Документ.ПоступлениеТоваровУслуг.абс_ЗакупочныеЗаказы КАК ПоступлениеТоваровУслуг
	//|ГДЕ
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ В
	//|			(ВЫБРАТЬ
	//|				ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ
	//|			ИЗ
	//|				ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику)
	//|	И ПоступлениеТоваровУслуг.Ссылка.Проведен
	//|	И ПоступлениеТоваровУслуг.Ссылка.ОтражатьВБухгалтерскомУчете
	//|	И ПоступлениеТоваровУслуг.Ссылка.абс_Статус В (ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.Завершен), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.КорректировкаДокумента))
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ,
	//|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ОстатокПоГрафику.Организация,
	//|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО КАК ЦФО,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.Ссылка) КАК Ссылка
	//|ПОМЕСТИТЬ ВТ_ПоследниеСправки
	//|ИЗ
	//|	ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	//|		ПО ВТ_ОстатокПоГрафику.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
	//|			И ВТ_ОстатокПоГрафику.ДоговорКонтрагента = абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента
	//|			И ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
	//|			И ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
	//|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоЦФО))
	//|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.Абс_СтатусыРПР.Согласован))
	//|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Проведен)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафику.Организация,
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ПоследниеСправки.Организация,
	//|	ВТ_ПоследниеСправки.ДоговорКонтрагента,
	//|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
	//|	ВТ_ПоследниеСправки.ЦФО,
	//|	МАКСИМУМ(ВТ_ПоследниеСправки.Ссылка) КАК Ссылка,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности) КАК ВидДеятельности,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат) КАК СтатьяЗатрат
	//|ПОМЕСТИТЬ ВТ_АналитикаПоследнихСправок
	//|ИЗ
	//|	ВТ_ПоследниеСправки КАК ВТ_ПоследниеСправки
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	//|		ПО ВТ_ПоследниеСправки.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
	//|			И ВТ_ПоследниеСправки.ДоговорКонтрагента = абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента
	//|			И ВТ_ПоследниеСправки.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
	//|			И ВТ_ПоследниеСправки.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
	//|			И ВТ_ПоследниеСправки.Ссылка = абс_РезервыПроизведенныхРасходовРезервы.Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_ПоследниеСправки.Организация,
	//|	ВТ_ПоследниеСправки.ДоговорКонтрагента,
	//|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
	//|	ВТ_ПоследниеСправки.ЦФО
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СтатьяЗатрат) КАК СтатьяЗатрат2,
	//|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатрат) КАК СчетЗатрат,
	//|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатратНУ) КАК СчетЗатратНУ,
	//|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.Ссылка) КАК Ссылка,
	//|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ,
	//|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)
	//|					КОНЕЦ
	//|		КОНЕЦ) КАК СтатьяЗатрат,
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.НоменклатурныеГруппы)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.НоменклатурныеГруппы)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.НоменклатурныеГруппы)
	//|					КОНЕЦ
	//|			ИНАЧЕ ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|		КОНЕЦ) КАК НоменклатурнаяГруппа,
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	//|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.абс_ВидыДеятельностиКТТК)
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	//|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.абс_ВидыДеятельностиКТТК)
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	//|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.абс_ВидыДеятельностиКТТК)
	//|			ИНАЧЕ &ПустойВидДеятельности
	//|		КОНЕЦ) КАК ВидДеятельности
	//|ПОМЕСТИТЬ ВТ_ПоставкиАналитика
	//|ИЗ
	//|	ВТ_ПоставкиПоЗЗ КАК ВТ_ПоставкиПоЗЗ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	//|		ПО ВТ_ПоставкиПоЗЗ.Ссылка = ПоступлениеТоваровУслугУслуги.Ссылка
	//|			И (ПоступлениеТоваровУслугУслуги.НомерСтроки = 1)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафику.Контрагент,
	//|	ВТ_ОстатокПоГрафику.ВалютаДокумента,
	//|	ВТ_ОстатокПоГрафику.ЦФУ,
	//|	ВТ_ОстатокПоГрафику.БюджетнаяСтатья,
	//|	ВТ_ОстатокПоГрафику.СуммаОстаткаПоГрафику,
	//|	ВТ_ОстатокПоГрафику.СуммаРНП,
	//|	ВТ_ОстатокПоГрафику.СтавкаНДС,
	//|	ВТ_ОстатокПоГрафику.СуммаНДС,
	//|	ВТ_ОстатокПоГрафику.СуммаНДС КАК СуммаНДС_РПР,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
	//|	КОНЕЦ КАК СтатьяЗатратАвто,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
	//|	КОНЕЦ КАК СтатьяЗатрат,
	//|	ВЫБОР
	//|		КОГДА ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	//|			ТОГДА ВЫБОР
	//|					КОГДА НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
	//|							И НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
	//|						ТОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
	//|					ИНАЧЕ ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
	//|				КОНЕЦ
	//|		ИНАЧЕ ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа
	//|	КОНЕЦ КАК НоменклатурнаяГруппаАвто,
	//|	ВЫБОР
	//|		КОГДА ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	//|			ТОГДА ВЫБОР
	//|					КОГДА НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
	//|							И НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
	//|						ТОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
	//|					ИНАЧЕ ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
	//|				КОНЕЦ
	//|		ИНАЧЕ ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа
	//|	КОНЕЦ КАК НоменклатурнаяГруппа,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
	//|	КОНЕЦ КАК Виддеятельности,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
	//|	КОНЕЦ КАК ВидДеятельностиАвто,
	//|	ВТ_ПоставкиАналитика.СчетЗатрат КАК СчетЗатратАвтоБУ,
	//|	ВТ_ПоставкиАналитика.СчетЗатратНУ КАК СчетЗатратАвтоНУ,
	//|	ВТ_ПоставкиАналитика.СчетЗатрат КАК СчетЗатратБУ,
	//|	ВТ_ПоставкиАналитика.СчетЗатратНУ КАК СчетЗатратНУ,
	//|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	//|	ИСТИНА КАК Учитывать,
	//|	ВТ_ОстатокПоГрафику.абс_ТипСети,
	//|	ВТ_ОстатокПоГрафику.абс_КВ,
	//|	ВТ_ОстатокПоГрафику.абс_ТЭО,
	//|	ВЫБОР
	//|		КОГДА ВТ_ОстатокПоГрафику.ttk_ОбъектБюджетирования = ЗНАЧЕНИЕ(СПравочник.ttk_ОбъектыБюджетирования.ПустаяСсылка)
	//|			ТОГДА ttk_ОбъектыБюджетирования.Ссылка
	//|		ИНАЧЕ ВТ_ОстатокПоГрафику.ttk_ОбъектБюджетирования
	//|	КОНЕЦ КАК ttk_ОбъектБюджетирования,
	//|	ВТ_ОстатокПоГрафику.ttk_Город,
	//|	ВТ_ОстатокПоГрафику.ttk_ПериодВозникновенияЗадолженности
	//|ИЗ
	//|	ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставкиАналитика КАК ВТ_ПоставкиАналитика
	//|		ПО ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = ВТ_ПоставкиАналитика.абс_ЗакупочныйЗаказ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоследнихСправок КАК ВТ_АналитикаПоследнихСправок
	//|		ПО ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = ВТ_АналитикаПоследнихСправок.ЗакупочныйЗаказ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ttk_ОбъектыБюджетирования КАК ttk_ОбъектыБюджетирования
	//|		ПО ВТ_ОстатокПоГрафику.Организация = ttk_ОбъектыБюджетирования.Организация");
	//
	//
	//Запрос.УстановитьПараметр("Организация"					, Объект.Организация);
	//Запрос.УстановитьПараметр("ЦФО"							, Объект.ЦФО);
	//Запрос.УстановитьПараметр("ПериодПоставки"				, Объект.ПериодНачисления);
	//Запрос.УстановитьПараметр("СтатусыЗЗ"					, Перечисления.абсСтатусЗакупочногоЗаказа.Согласован);
	//Запрос.УстановитьПараметр("Дирекция"					, Объект.Дирекция);
	//Запрос.УстановитьПараметр("ТекДата"						, ТекущаяДата());
	//Запрос.УстановитьПараметр("ПустойВидДеятельности"		, Справочники.абс_ВидыДеятельностиКТТК.ПустаяСсылка());
	//Запрос.УстановитьПараметр("ПустаяНГ"					, Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	//Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат"			, Справочники.СтатьиЗатрат.ПустаяСсылка());
	//
	
	//Бобылев А.А. 04.09.2018
	#КонецОбласти
	
	ТЗ = Запрос.Выполнить().Выгрузить();
	//+ Машута А. 16.10.2018 задача 845
	//ТЗ.Свернуть("ttk_ОбъектБюджетирования,ttk_ПериодВозникновенияЗадолженности,ttk_УсловноеНачисление,абс_КВ,абс_ТипСети,абс_ТЭО,БюджетнаяСтатья,ВалютаДоговора,Виддеятельности,ВидДеятельностиАвто,ДоговорКонтрагента,ЗакупочныйЗаказ,Контрагент,НоменклатурнаяГруппа,Организация,Период,СтавкаНДС,СтатьяЗатрат,СтатьяЗатратАвто,СуммаНДС,СуммаНДС_РПР,СуммаОстаткаПоГрафику,СуммаРНП,СчетЗатратАвтоБУ,СчетЗатратАвтоНУ,СчетЗатратБУ,СчетЗатратНУ,СчетУчетаНДС,Учитывать,ЦФУ",);
	ТЗ.Свернуть("ttk_ОбъектБюджетирования,ttk_ПериодВозникновенияЗадолженности,ttk_УсловноеНачисление,абс_КВ,абс_ТипСети,
	|абс_ТЭО,БюджетнаяСтатья,ВалютаДоговора,Виддеятельности,ВидДеятельностиАвто,ДоговорКонтрагента,ЗакупочныйЗаказ,ttk_Инициатор,
	|Контрагент,НоменклатурнаяГруппа,Организация,Период,СтавкаНДС,СтатьяЗатрат,СтатьяЗатратАвто,СуммаНДС,СуммаНДС_РПР,
	|СуммаОстаткаПоГрафику,СуммаРНП,СчетЗатратАвтоБУ,СчетЗатратАвтоНУ,СчетЗатратБУ,СчетЗатратНУ,СчетУчетаНДС,Учитывать,ЦФУ",);
	//- Машута А. 16.10.2018 задача 845
	Объект.Резервы.Загрузить(ТЗ);
	//Объект.Резервы.Загрузить(Запрос.Выполнить().Выгрузить());
	//Бобылев А.А.-------------------- 
	
	СчетРПРБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.04");
	СчетРПРБУПрошлыйГод = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02.1");
	СчетРПРНУПрошлыйГод = ПланыСчетов.Налоговый.НайтиПоКоду("91.02.7");


	СчетРПРНУ = ПланыСчетов.Налоговый.НайтиПоКоду("ПВ");
	
	СчетНДС	= ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.УН");
	Для Каждого Стр Из Объект.Резервы Цикл
		
		Если НачалоГода(Стр.ttk_ПериодВозникновенияЗадолженности) = НачалоГода(Объект.ПериодНачисления) Тогда
			
			Стр.Курс                = 1;
			Стр.Кратность			= 1;
			
			Стр.СчетУчетаРПРБУ		= СчетРПРБУ;
			Стр.СчетУчетаРПРНУ		= СчетРПРНУ;
			
			Стр.СчетУчетаНДС		= СчетНДС;
		Иначе
			Стр.Курс                = 1;
			Стр.Кратность			= 1;
			
			Стр.СчетУчетаРПРБУ		= СчетРПРБУ;
			Стр.СчетУчетаРПРНУ		= СчетРПРНУ;
			
			Стр.СчетУчетаНДС		= СчетНДС;

			Стр.СчетЗатратБУ = СчетРПРБУПрошлыйГод;
			Стр.СчетЗатратНУ = СчетРПРНУПрошлыйГод;
			
		КонецЕсли;
		
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРезервыПоСогласованнымДокументам()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ttk_ОбъектыБюджетирования.Ссылка
	|ПОМЕСТИТЬ втОбъект
	|ИЗ
	|	Справочник.ttk_ОбъектыБюджетирования КАК ttk_ОбъектыБюджетирования
	|ГДЕ
	|	ttk_ОбъектыБюджетирования.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка,
	|	абс_РезервыПроизведенныхРасходовРезервы.НомерСтроки,
	|	абс_РезервыПроизведенныхРасходовРезервы.Учитывать,
	|	абс_РезервыПроизведенныхРасходовРезервы.Контрагент,
	|	абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента,
	|	абс_РезервыПроизведенныхРасходовРезервы.Кратность,
	|	абс_РезервыПроизведенныхРасходовРезервы.Курс,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВалютаДоговора,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
	|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафику,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафикуВал,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.УчитыватьВБалансе,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатратАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаРПРБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаРПРНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтавкаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС_РПР,
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка КАК ДокументОснование,
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Ответственный,
	|	абс_РезервыПроизведенныхРасходовРезервы.РучнойВвод,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.УчитыватьАванс,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппаАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельностиАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтавкаНДСАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДСАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности,
	|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети,
	|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
	|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
	|	ВЫБОР
	|		КОГДА абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования = ЗНАЧЕНИЕ(СПравочник.ttk_ОбъектыБюджетирования.ПустаяСсылка)
	|			ТОГДА втОбъект.Ссылка
	|		ИНАЧЕ абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования
	|	КОНЕЦ КАК ttk_ОбъектБюджетирования,
	|	абс_РезервыПроизведенныхРасходовРезервы.ttk_Город,
	//+ Машута А. 16.10.2018 задача 845
	|	ДокЗакупочныйЗаказ.Ответственный КАК ttk_Инициатор,
	//- Машута А. 16.10.2018 задача 845
	|	втОбъект.Ссылка КАК СсылкаНаОбъект
	|ИЗ
	//+ Машута А. 16.10.2018 задача 845
	//|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы,
	|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_ЗакупочныйЗаказ КАК ДокЗакупочныйЗаказ
	|		ПО абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ = ДокЗакупочныйЗаказ.Ссылка,	
	//- Машута А. 16.10.2018 задача 845
	|	втОбъект КАК втОбъект
	|ГДЕ
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Статус = &Статус
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ПериодНачисления = &ПериодНачисления
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО = &ЦФО
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация = &Организация
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации = &ВидОперации
	|	И абс_РезервыПроизведенныхРасходовРезервы.Учитывать");
	
	Запрос.УстановитьПараметр("Статус"					, Перечисления.абс_СтатусыРПР.Согласован);
	Запрос.УстановитьПараметр("ПериодНачисления"		, НачалоМесяца(Объект.ПериодНачисления));
	Запрос.УстановитьПараметр("ЦФО"						, Объект.ЦФО);
	Запрос.УстановитьПараметр("Организация"				, Объект.Организация);
	Запрос.УстановитьПараметр("ВидОперации"				, Перечисления.абс_ВидыДокументовРНПД.ПоДирекции);
	
	Объект.Резервы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

//ххх Брель Виктор Андреевич 28.04.2018 14:26:01, заявка <<<
&НаСервере
Процедура ЗаполнитьРезервыПоСогласованнымДокументамЗЗ(СписокЗЗ)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ttk_ОбъектыБюджетирования.Ссылка
	|ПОМЕСТИТЬ втОбъект
	|ИЗ
	|	Справочник.ttk_ОбъектыБюджетирования КАК ttk_ОбъектыБюджетирования
	|ГДЕ
	|	ttk_ОбъектыБюджетирования.Организация = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка,
	|	абс_РезервыПроизведенныхРасходовРезервы.НомерСтроки,
	|	абс_РезервыПроизведенныхРасходовРезервы.Учитывать,
	|	абс_РезервыПроизведенныхРасходовРезервы.Контрагент,
	|	абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента,
	|	абс_РезервыПроизведенныхРасходовРезервы.Кратность,
	|	абс_РезервыПроизведенныхРасходовРезервы.Курс,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВалютаДоговора,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
	|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафику,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаОстаткаПоГрафикуВал,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.УчитыватьВБалансе,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатратАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаРПРБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаРПРНУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтавкаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС_РПР,
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка КАК ДокументОснование,
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Ответственный,
	|	абс_РезервыПроизведенныхРасходовРезервы.РучнойВвод,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.УчитыватьАванс,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппаАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельностиАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтавкаНДСАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДСАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.ttk_ПериодВозникновенияЗадолженности,
	|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети,
	|	абс_РезервыПроизведенныхРасходовРезервы.абс_КВ,
	|	абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО,
	|	ВЫБОР
	|		КОГДА абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования = ЗНАЧЕНИЕ(СПравочник.ttk_ОбъектыБюджетирования.ПустаяСсылка)
	|			ТОГДА втОбъект.Ссылка
	|		ИНАЧЕ абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования
	|	КОНЕЦ КАК ttk_ОбъектБюджетирования,
	|	абс_РезервыПроизведенныхРасходовРезервы.ttk_Город,
	//+ Машута А. 16.10.2018 задача 845
	|	ДокЗакупочныйЗаказ.Ответственный КАК ttk_Инициатор,
	//- Машута А. 16.10.2018 задача 845
	|	втОбъект.Ссылка КАК СсылкаНаОбъект
	|ИЗ
	//+ Машута А. 16.10.2018 задача 845
	//|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы,
	|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_ЗакупочныйЗаказ КАК ДокЗакупочныйЗаказ
	|		ПО абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ = ДокЗакупочныйЗаказ.Ссылка,	
	//- Машута А. 16.10.2018 задача 845
	|	втОбъект КАК втОбъект
	|ГДЕ
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Статус = &Статус
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ПериодНачисления = &ПериодНачисления
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО = &ЦФО
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация = &Организация
	|	И абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации = &ВидОперации
	|	И абс_РезервыПроизведенныхРасходовРезервы.Учитывать
	|	И абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ В(&СписокЗЗ)");
	
	Запрос.УстановитьПараметр("Статус"					, Перечисления.абс_СтатусыРПР.Согласован);
	Запрос.УстановитьПараметр("ПериодНачисления"		, НачалоМесяца(Объект.ПериодНачисления));
	Запрос.УстановитьПараметр("ЦФО"						, Объект.ЦФО);
	Запрос.УстановитьПараметр("Организация"				, Объект.Организация);
	Запрос.УстановитьПараметр("ВидОперации"				, Перечисления.абс_ВидыДокументовРНПД.ПоДирекции);
	Запрос.УстановитьПараметр("СписокЗЗ", СписокЗЗ);

	Объект.Резервы.Загрузить(Запрос.Выполнить().Выгрузить());
	
КонецПроцедуры

// Брель Виктор Андреевич 28.04.2018 14:26:01 >>>

// Процедуры и функции для рабоыт со статусами документа
&НаСервере
Процедура ЗаполнитьСписокДоступныхСтатусов()
	
	Документы.абс_РезервыПроизведенныхРасходов.ЗаполнитьСписокДоступныхСтатусов(Объект.Ссылка, Элементы.Статус.СписокВыбора);
	
КонецПроцедуры

&НаСервере
Функция СпрашиватьПричинуИзмененияСтатуса()
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Возврат ЛОЖЬ;
	КонецЕсли;
	
	Возврат НЕ Объект.Статус = Объект.Ссылка.Статус;
КонецФункции

&НаСервере
Функция ПолучитьДанныеПользователя() 
	
	СтруктураПользователя = Новый Структура("Пользователь, ВнутреннийНомер");
	
	СтруктураПользователя.Пользователь 		= глЗначениеПеременной("глТекущийПользователь");
	СтруктураПользователя.ВнутреннийНомер 	= СтруктураПользователя.Пользователь.абс_ВнутреннийНомер;
	
	Возврат СтруктураПользователя;
	
КонецФункции


// Прочие процедуры и функции
&НаКлиенте
Процедура УстановитьВидимостьДоступностьНаКлиенте()
	
	мТекущийПользователь = глЗначениеПеременной("глТекущийПользователь");
	мРолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, Объект.Организация);
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			
		Элементы.ГруппаСогласование.Доступность = Истина;
		
		ОтборЗаявка = СогласованиеРПР.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ОтборЗаявка.ВидСравнения 	= ВидСравненияКомпоновкиДанных.Равно;
		ОтборЗаявка.ЛевоеЗначение	= Новый ПолеКомпоновкиДанных("ДокументРПР");
		ОтборЗаявка.ПравоеЗначение	= Объект.Ссылка;
		ОтборЗаявка.Использование 	= Истина;
		
		ОтборЗаявка.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
		ОтборОбъект = Файлы.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		
		ОтборОбъект.ВидСравнения 	= ВидСравненияКомпоновкиДанных.Равно;
		ОтборОбъект.ЛевоеЗначение 	= Новый ПолеКомпоновкиДанных("Объект");
		ОтборОбъект.ПравоеЗначение 	= Объект.Ссылка;
		ОтборОбъект.Использование	= Истина;
		
		ОтборОбъект.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		
				
	Иначе
		
		Элементы.ГруппаСогласование.Доступность = Ложь;
		Элементы.ГруппаФайлы.Доступность = Ложь;

	КонецЕсли;
	
	ВидДокументаПоДирекции = Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыДокументовРНПД.ПоДирекции");
	
	Элементы.ГруппаДополнительно.Видимость = НЕ ВидДокументаПоДирекции;
	
	//Элементы.Дирекция.Видимость = ДоступностьДирекции;
	
	Если Элементы.Статус.СписокВыбора.Количество() = 1 И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	Элементы.ФормироватьПроводки.Видимость = Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.ОбработкаПринятыхДокументов");

	СтатусПодготовка = (Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.Подготовка"));
	
	РазрешитьРедактироватьСтроки = СтатусПодготовка И ВидДокументаПоДирекции;
	//ххх Брель Виктор Андреевич 05.04.2018 17:04:16, заявка <<<
	Элементы.РезервыУчитывать.Видимость =   НЕ ВидДокументаПоДирекции;	
	Элементы.РезервыСуммаНДС.Доступность =   НЕ ВидДокументаПоДирекции;	
	Элементы.РезервыСуммаНДС_РПР.Доступность =   НЕ ВидДокументаПоДирекции;	
	Элементы.РезервыСуммаРНП.Доступность   =   НЕ ВидДокументаПоДирекции;
	Элементы.РезервыСуммаОстаткаПоГрафику.Доступность =   НЕ ВидДокументаПоДирекции;	
	// Брель Виктор Андреевич 05.04.2018 17:04:16 >>>
	Элементы.Резервы.ИзменятьСоставСтрок = РазрешитьРедактироватьСтроки;
	Элементы.Резервы.ИзменятьПорядокСтрок = РазрешитьРедактироватьСтроки;

	
	Если Объект.ВидОперации = ПредопределенноеЗначение("Перечисление.абс_ВидыДокументовРНПД.ПоДирекции") И мРолиПользователя.Найти(ПредопределенноеЗначение("Справочник.РолиИсполнителей.ОтветственныйЦФОРНПД")) = Неопределено Тогда
		Элементы.ВидОперацииРНПД.Видимость = Ложь;
	КонецЕсли;
	
	ДоступнаРольБухгалтера = НЕ мРолиПользователя.Найти(ПредопределенноеЗначение("Справочник.РолиИсполнителей.БухгалтерРНПД")) = Неопределено;
	
	Элементы.ФормаКнопкаПроводкиБУ.Видимость = ДоступнаРольБухгалтера;
	Элементы.ФормаКнопкаПроводкиНУ.Видимость = ДоступнаРольБухгалтера;
	
	Элементы.ФормироватьПроводки.Видимость = ДоступнаРольБухгалтера;
	
	// Редактирование документа разрешено только в статусах Подготовка, Обработка бухгалтером
	РазрешеноРедактированиеДокумента = (Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.Подготовка")) ИЛИ
									   (Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.ОбработкаПринятыхДокументов")) ИЛИ
		                               (Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.ОбработкаБухгалтером"));
									   
	Элементы.ВидОперацииРНПД.ТолькоПросмотр = НЕ РазрешеноРедактированиеДокумента;								   
	Элементы.Резервы.ТолькоПросмотр 		= НЕ РазрешеноРедактированиеДокумента;
	Элементы.Организация.ТолькоПросмотр 	= НЕ РазрешеноРедактированиеДокумента;
	Элементы.ЦФО.ТолькоПросмотр				= НЕ РазрешеноРедактированиеДокумента;
	Элементы.ПериодНачисления.ТолькоПросмотр= НЕ РазрешеноРедактированиеДокумента;
	
	//Элементы.РезервыГруппаСчетаУчетаРПР.Видимость 				= НЕ ВидДокументаПоДирекции;
	//Элементы.Аналитика.Видимость 								= НЕ ВидДокументаПоДирекции;	
	
	Элементы.РезервыГруппаСчетаУчетаРПР.ТолькоПросмотр 			= ВидДокументаПоДирекции;
	Элементы.Аналитика.ТолькоПросмотр 							= ВидДокументаПоДирекции;
	
	Элементы.РезервыГруппаИсточникПроектаСправки.Видимость 		= Не ВидДокументаПоДирекции;
	Элементы.РезервыГруппаИсточникПроектаСправки.ТолькоПросмотр = ВидДокументаПоДирекции;
	                         	
	//Элементы.РезервыГруппаАналитикаАвто.Видимость 				= Не ВидДокументаПоДирекции;
	
	Элементы.РезервыСчетУчетаРПРБУ.Видимость 					= Не ВидДокументаПоДирекции;  	
	Элементы.РезервыСчетЗатратБУ.Видимость 						= Не ВидДокументаПоДирекции;
	Элементы.РезервыСчетЗатратНУ.Видимость 						= Не ВидДокументаПоДирекции; 	
	Элементы.РезервыСчетЗатратАвтоБУ.Видимость 					= Не ВидДокументаПоДирекции;
	Элементы.РезервыСчетЗатратАвтоНУ.Видимость 					= Не ВидДокументаПоДирекции;	
	Элементы.РезервыСчетУчетаРПРНУ.Видимость 					= Не ВидДокументаПоДирекции; 	
	Элементы.РезервыСчетУчетаНДС.Видимость 						= Не ВидДокументаПоДирекции;
	
	Элементы.РезервыГруппаСчетаУчетаРПР.ТолькоПросмотр 			= Ложь;
	Элементы.Аналитика.ТолькоПросмотр 							= Ложь;		
	Элементы.РезервыСчетУчетаРПРБУ.ТолькоПросмотр 				= Ложь;
	Элементы.РезервыСчетУчетаРПРНУ.ТолькоПросмотр 				= Ложь;		
	Элементы.РезервыСчетУчетаНДС.ТолькоПросмотр 				= Ложь;
	
	Заголовок = Объект.ВидОперации;                 	
	Элементы.ОбновитьПодразделенияОрганизации.Доступность = не Элементы.ЦФО.ТолькоПросмотр;
	
	// {{ТТК Сладков А. Заявка №151207459 09.06.2016 начало
	Элементы.ВидОперации.ТолькоПросмотр = НЕ Объект.Ссылка.Пустая(); // Вид операции даём выбрать только для новых документов
	// }}ТТК Сладков А. Заявка №151207459 09.06.2016 окончание
	
КонецПроцедуры	



&НаСервере
Процедура УстановитьОсновнойВидОперации()
	
	РолиПользователя = абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(глЗначениеПеременной("глТекущийПользователь"), Объект.Организация);
	
	ЕстьРольОтветственнногоЦФО = НЕ РолиПользователя.Найти(Справочники.РолиИсполнителей.ОтветственныйЦФОРНПД) = Неопределено;
	
	Если ЕстьРольОтветственнногоЦФО Тогда
		
		Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО;
		
		Объект.РуководительПодразделения = глЗначениеПеременной("глТекущийПользователь");
		
	Иначе
		
		Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции;
		
	КонецЕсли;	
	
КонецПроцедуры

&НаКлиенте
Функция ПередНачаломСменыАналитикРПР()
	
	Если Объект.Резервы.Количество() > 0 Тогда	
		Возврат Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура РезервыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	// Вставить содержимое обработчика.
	Если НоваяСтрока Тогда
		Элемент.ТекущиеДанные.РучнойВвод = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РезервыПриАктивизацииЯчейки(Элемент)
	
	Если Найти("РезервыУчитывать,РезервыСуммаРНП,РезервыГруппаСчетаУчетаРПР,Аналитика,РезервыГруппаНДС,РезервыСчетУчетаРПРБУ,РезервыСчетУчетаРПРНУ,РезервыСчетЗатратБУ,РезервыСчетЗатратНУ,РезервыСтатьяЗатратБУ,РезервыНоменклатурнаяГруппа,РезервыВидДеятельности,РезервыСчетУчетаНДС,РезервыСтавкаНДС,РезервыСуммаНДС_РПР,РезервыУчитыватьАванс,РезервыСуммаАвансаПоДоговору,РезервыСтавкаНДСАвансаПоДоговору,РезервыСуммаНДСАвансаПоДоговору", Элемент.ТекущийЭлемент.Имя) > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.ОбработкаПринятыхДокументов") Тогда
		Возврат;
	КонецЕсли;
	
	// Вставить содержимое обработчика.
	//Элемент.Доступность = Элемент.ТекущийДанные.РучнойВвод;
	попытка
		Если Элемент.ТекущийЭлемент.Имя <> "РезервыУчитывать" Тогда
			Элемент.ТекущийЭлемент.ТолькоПросмотр = НЕ Элемент.ТекущиеДанные.РучнойВвод;
		КонецЕсли;
		
		Если Элемент.ТекущийЭлемент.Имя= "РезервыЗакупочныйЗаказ" и Элемент.ТекущиеДанные.РучнойВвод Тогда
			Элемент.ТекущийЭлемент.ТолькоПросмотр = Истина;
		КонецЕсли;

		
	исключение
	конецпопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьРезервыДляВсехСтрок(Команда)
	
	ТекЭлемент = Элементы.Резервы.ТекущийЭлемент;
	ИмяТекЭлемента = ТекЭлемент.Имя;

	Если ИмяТекЭлемента = "РезервыСтатьяЗатратБУ" Тогда
		
		ФормаВыбора = Справочники.СтатьиЗатрат.ПолучитьФормуВыбора();
		
		ТекСтатья = ФормаВыбора.ОткрытьМодально();
		
		Если ЗначениеЗаполнено(ТекСтатья) Тогда
			Для Каждого СтрРезервы Из Объект.Резервы Цикл
				
				СтрРезервы.СтатьяЗатрат = ТекСтатья;
				
			КонецЦикла;			
		КонецЕсли;
		
	ИначеЕсли ИмяТекЭлемента = "РезервыНоменклатурнаяГруппа" Тогда
		
		ФормаВыбора = Справочники.НоменклатурныеГруппы.ПолучитьФормуВыбора();
		
		ТекНГ = ФормаВыбора.ОткрытьМодально();
		
		Если ЗначениеЗаполнено(ТекНГ) Тогда
			Для Каждого СтрРезервы Из Объект.Резервы Цикл
				
				СтрРезервы.НоменклатурнаяГруппа = ТекНГ;
				
			КонецЦикла;			
		КонецЕсли;
		
	ИначеЕсли ИмяТекЭлемента = "РезервыВидДеятельности" Тогда
		
		ФормаВыбора = Справочники.абс_ВидыДеятельностиКТТК.ПолучитьФормуВыбора();
		
		ТекВидДеятельности = ФормаВыбора.ОткрытьМодально();
		
		Если ЗначениеЗаполнено(ТекВидДеятельности) Тогда
			Для Каждого СтрРезервы Из Объект.Резервы Цикл
				
				СтрРезервы.ВидДеятельности = ТекВидДеятельности;
				
			КонецЦикла;			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

//АБС ВСТАВКА №45850 НАЧАЛО «18 августа 2014 г.», Пополитов
&НаКлиенте
Процедура ОбновитьПодразделенияОрганизации(Команда)
	  	
	Ответ = Вопрос("Обновить реквизит подразделения организации?", РежимДиалогаВопрос.ДаНет, 0);
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ЦФОПриИзмененииНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаСервере
Процедура ЦФОПриИзмененииНаСервере()
	
	СписокПодразделений = РеквизитФормыВЗначение("Объект").ПолучитьСписокПодразделенийОрганизаций(Объект.ЦФО,Объект.Организация);
	Если СписокПодразделений.Количество() > 0 Тогда
		Объект.ПодразделениеОрганизации = СписокПодразделений[0].Значение;
	КонецЕсли;
		
КонецПроцедуры
//\\АБС ВСТАВКА №45850 КОНЕЦ

//Сторчевой А.Н. 77119310 24.05.2017 {                                   
&НаКлиенте
Процедура РезервыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если Поле.Имя = "РезервыЗакупочныйЗаказ" и Поле.ТолькоПросмотр Тогда
		ОткрытьЗначение(ТекущиеДанные.ЗакупочныйЗаказ);
	КонецЕсли;
	
	// +++ T#77119573 2017.06.05   Гущина 
	Если Поле.Имя = "РезервыСтатьяЗатратБУ" тогда
		ЗаполнитьСписокСтатейЗатрат(Поле.СписокВыбора, Элемент.ТекущиеДанные) ;
	КонецЕсли;
	// --- T#77119573 2017.06.05  Гущина 

	
КонецПроцедуры
// } Сторчевой А.Н. 77119310 24.05.2017

// +++ 77119573 2017.06.06 Гущина
&НаКлиенте
Функция ТекстЗапросаДляАналитикиПоМеппингу (СтатьяЗатрат = Неопределено, ВыборПервого = Ложь, ПроверкаСоответствия = Ложь)
	  	Запрос = Новый Запрос;
		Если ВыборПервого тогда
			Запрос.Текст = "ВЫБРАТЬ первые 1"; 
		Иначе
			Запрос.Текст = "ВЫБРАТЬ" 
		КОнецЕсли;
		Запрос.Текст =Запрос.Текст+" 
		|	ttk_меппингАналитикиДляПТУиТН.СтатьяЗатрат КАК СтатьяЗатрат,
		|	ttk_меппингАналитикиДляПТУиТН.СчетБУ КАК СчетБУ,
		|	ttk_меппингАналитикиДляПТУиТН.Субконто1 КАК Субконто1,
		|	ttk_меппингАналитикиДляПТУиТН.Субконто2 КАК Субконто2,
		|	ttk_меппингАналитикиДляПТУиТН.Субконто3 КАК Субконто3,
		|	ttk_меппингАналитикиДляПТУиТН.Приоритет КАК Приоритет,
		|	ttk_меппингАналитикиДляПТУиТН.ПТУ
		|ИЗ
		|	РегистрСведений.ttk_меппингАналитикиДляПТУиТН КАК ttk_меппингАналитикиДляПТУиТН
		|ГДЕ
		|	ttk_меппингАналитикиДляПТУиТН.БюджетнаяСтатья = &БюджетнаяСтатья
		|	И ttk_меппингАналитикиДляПТУиТН.ЦФУ = &ЦФУ
		|	И ttk_меппингАналитикиДляПТУиТН.ЦФО = &ЦФО
		|	И ttk_меппингАналитикиДляПТУиТН.Организация = &Организация
		|	И ttk_меппингАналитикиДляПТУиТН.ПТУ = ИСТИНА
		|	и ttk_меппингАналитикиДляПТУиТН.Проект = &Проект";
		Если СтатьяЗатрат <> Неопределено 
			или ПроверкаСоответствия тогда //!!
			Запрос.Текст =Запрос.Текст+"
			|	И ttk_меппингАналитикиДляПТУиТН.СтатьяЗатрат = &СтатьяЗатрат";
		КонецЕсли;
		Если ПроверкаСоответствия тогда //!!
			Запрос.Текст =Запрос.Текст+"
			|	И ttk_меппингАналитикиДляПТУиТН.СчетБУ = &СчетЗатратБУ";
		КонецЕсли;
		Запрос.Текст =Запрос.Текст+"
		|
		|УПОРЯДОЧИТЬ ПО
		|	Приоритет";
		
		Возврат  Запрос.Текст;

КонецФункции


&НаКлиенте
Функция АналитикаПоМеппингу (СтатьяЗатрат = Неопределено, ВыборПервого = Ложь, ТекущаяСтрока = неопределено)
	Рез = Неопределено;
	абс_ЗакупочныйЗаказ = ТекущаяСтрока.ЗакупочныйЗаказ;
	Если ЗначениеЗаполнено(абс_ЗакупочныйЗаказ = Неопределено) Тогда
		Запрос = Новый Запрос;
		
		Запрос.Текст = ТекстЗапросаДляАналитикиПоМеппингу (СтатьяЗатрат, ВыборПервого,) ;
		
		Если СтатьяЗатрат <> Неопределено  тогда
			Запрос.УстановитьПараметр("СтатьяЗатрат", СтатьяЗатрат); // поиск для выбранной статьи затрат
		КонецЕсли;
		Запрос.УстановитьПараметр("БюджетнаяСтатья", абс_ЗакупочныйЗаказ.БюджетнаяСтатья);
		Запрос.УстановитьПараметр("ЦФУ", абс_ЗакупочныйЗаказ.ЦФУ);
		Запрос.УстановитьПараметр("ЦФО", абс_ЗакупочныйЗаказ.ЦФО);
		Запрос.УстановитьПараметр("Организация", абс_ЗакупочныйЗаказ.Организация);
		Если абс_ЗакупочныйЗаказ.РаспределениеПоПроектам.Количество() > 0 И ЗначениеЗаполнено(абс_ЗакупочныйЗаказ.РаспределениеПоПроектам[0].проект) тогда
			Запрос.УстановитьПараметр("Проект", абс_ЗакупочныйЗаказ.РаспределениеПоПроектам[0].проект.ссылка);
		Иначе
			Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
		КонецЕсли;
		
		Рез = Запрос.Выполнить().Выбрать(); 
		Если Рез.Количество()=0 И ЗначениеЗаполнено(абс_ЗакупочныйЗаказ.РаспределениеПоПроектам[0].проект) тогда   //если проект заполнен, но нет в меппинге, то заполним общими по организации  с пустым проектом
			Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
			Рез = Запрос.Выполнить().Выбрать(); 
		КонецЕсли;
		
		Рез = Запрос.Выполнить().Выбрать(); 
		Если Рез.Количество()=0 тогда 
			Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
			Рез = Запрос.Выполнить().Выбрать(); 
		КонецЕсли;
	КонецЕсли;
		
    Возврат Рез; 
КонецФункции   // АналитикаПоМеппингу

&НаКлиенте
Процедура ЗаполнитьСписокСтатейЗатрат(СписокСтатейЗатрат = Неопределено, ТекущаяСтрока)  
	
	Если ЗначениеЗаполнено(ТекущаяСтрока.ЗакупочныйЗаказ = Неопределено) Тогда
		
		Если СписокСтатейЗатрат = Неопределено Тогда
			СписокСтатейЗатрат = Новый СписокЗначений();
		Иначе
			СписокСтатейЗатрат.Очистить();
		КонецЕсли;
		
		Рез =  АналитикаПоМеппингу(,,ТекущаяСтрока);
		
		Пока Рез.Следующий() Цикл
			СписокСтатейЗатрат.Добавить(Рез.СтатьяЗатрат);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры 

&НаКлиенте
Процедура РезервыСтатьяЗатратБУНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ЗаполнитьСписокСтатейЗатрат(Элемент.СписокВыбора, Элемент.ТекущиеДанные);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяЗатратОбработкаВыбора(Элемент,ВыбранноеЗначение = неопределено, ТекущиеДанные)
	
	Рез = АналитикаПоМеппингу(ВыбранноеЗначение, Истина, ТекущиеДанные);
	
	Пока Рез.Следующий() Цикл
		
		//ЗаполнениеПоМеппингу = Истина;// ??? использовать как в ПТУ ??  
		
		Если ВыбранноеЗначение = неопределено тогда 
			 ТекущиеДанные.СтатьяЗатрат =  Рез.СтатьяЗатрат; 
		КонецЕсли;	
		
		ТекущиеДанные.СчетЗатратБУ = Рез.СчетБУ;
		СчетЗатратНУ = БухгалтерскийУчет.ПреобразоватьСчетаБУвСчетНУ(Новый Структура("СчетБУ, ", ТекущиеДанные.СчетЗатратБУ));

		//Заполняем  др аналитику
		Для Ном = 1 по 3 Цикл
			Если Ном <=Рез.СчетБУ.ВидыСубконто.Количество() Тогда
				Если  Рез.СчетБУ.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.НоменклатурныеГруппы")) тогда
					ТекущиеДанные.НоменклатурнаяГруппа = Рез["Субконто"+ном];	
				КонецЕсли;
				Если Рез.СчетБУ.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.абс_ВидыДеятельностиКТТК")) тогда
					ТекущиеДанные.ВидДеятельности =  Рез["Субконто"+ном];	
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура РезервыСтатьяЗатратБУОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	ТекущаяСтрока = Элементы.Резервы.ТекущиеДанные;
	СтатьяЗатратОбработкаВыбора(Элемент,ВыбранноеЗначение, ТекущаяСтрока);
КонецПроцедуры


&НаКлиенте
Процедура КомандаЗаполнитьПоСоответствию(Команда)
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДляАналитикиПоМеппингу (, ,ИСТИНА) ;
	
	Для Каждого СтрРезервы Из Объект.Резервы Цикл
		Если ЗначениеЗаполнено(СтрРезервы.ЗакупочныйЗаказ = Неопределено) Тогда
			абс_ЗакупочныйЗаказ =  СтрРезервы.ЗакупочныйЗаказ;
			
			Если СтрРезервы.СтатьяЗатрат <> Неопределено  тогда
				Запрос.УстановитьПараметр("СтатьяЗатрат", СтрРезервы.СтатьяЗатрат); 
			Иначе
				Сообщить("В строке номер "+СтрРезервы.НомерСтроки+"  не заполнена статья затрат!") ;
				Продолжить;
			КонецЕсли;
			Если СтрРезервы.СчетЗатратБУ <> Неопределено  тогда
				Запрос.УстановитьПараметр("СчетЗатратБУ", СтрРезервы.СчетЗатратБУ); 
			Иначе
				Сообщить("В строке номер "+СтрРезервы.НомерСтроки+" не заполнен счет затрат! Для данной строки проверка соответствия не возможна.") ;
				Продолжить;
			КонецЕсли;
			
			Запрос.УстановитьПараметр("БюджетнаяСтатья", абс_ЗакупочныйЗаказ.БюджетнаяСтатья);
			Запрос.УстановитьПараметр("ЦФУ", абс_ЗакупочныйЗаказ.ЦФУ);
			Запрос.УстановитьПараметр("ЦФО", абс_ЗакупочныйЗаказ.ЦФО);
//			Запрос.УстановитьПараметр("Организация", абс_ЗакупочныйЗаказ.Организация);
			Запрос.УстановитьПараметр("Организация", Справочники.ОрганизациИ.ПустаяСсылка());
			Если ЗначениеЗаполнено(абс_ЗакупочныйЗаказ.РаспределениеПоПроектам[0].проект) тогда
				Запрос.УстановитьПараметр("Проект", абс_ЗакупочныйЗаказ.РаспределениеПоПроектам[0].проект.ссылка);
			Иначе
				Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
			КонецЕсли;
			
			Рез = Запрос.Выполнить().Выбрать();   // пока оставляю перебором т.к. в проекте УН счет может быть не заполнен. Но сейчас счет выше отбираю. после обсуждения решим.м
			Если Рез.Количество() = 0 тогда //пробуем еще без проекта т.к. в ЗЗ может быть,а в соответствиях нет детализации до проектов для остальной аналитики
				Запрос.УстановитьПараметр("Проект", Справочники.Проекты.ПустаяСсылка());
				Рез = Запрос.Выполнить().Выбрать();  
			КонецЕсли;	
			
			Если Рез.Количество() = 0 тогда
				Сообщить ("В строке номер "+СтрРезервы.НомерСтроки+" данные не совпадает с настройками соответствия бюджетной и БУ аналитики для ПТУ");
			Иначе	
				ФлагСоответствия = 0;
				Пока Рез.Следующий() цикл
					ФлагСоответствияНоменклатурнойГруппы = 0; ФлагСоответствияВидаДеятельности = 0; // если будет =
					НомерСубконтоНоменклатурнойГруппы = 4; НомерСубконтоВидаДеятельности = 4;    // по номеру определим есть аналитика или нет. 
					
					Если ЗначениеЗаполнено(Рез.СчетБУ) тогда
						//поиск по субконто. пока так (планируем поиск всех возможных счетов и в них субконто)
						Для Ном = 1 по 3 Цикл
							Если Ном <=Рез.СчетБУ.ВидыСубконто.Количество() Тогда
								Если  Рез.СчетБУ.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.НоменклатурныеГруппы")) тогда
									НомерСубконтоНоменклатурнойГруппы = ном;
									Если СтрРезервы.НоменклатурнаяГруппа = Рез["Субконто"+ном]	тогда
										ФлагСоответствияНоменклатурнойГруппы = 1;
									КонецЕсли;
								КонецЕсли;
								Если Рез.СчетБУ.ВидыСубконто[Ном-1].ВидСубконто.ТипЗначения.СодержитТип(Тип("СправочникСсылка.абс_ВидыДеятельностиКТТК")) тогда
									НомерСубконтоВидаДеятельности = ном;
									Если СтрРезервы.ВидДеятельности =  Рез["Субконто"+ном] тогда
										ФлагСоответствияВидаДеятельности = 1;   
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЦикла;
						
						Если (НомерСубконтоНоменклатурнойГруппы < 4 и ФлагСоответствияНоменклатурнойГруппы = 1) // у счета есть субконто Ном.гр. и значение =
							ИЛИ (НомерСубконтоВидаДеятельности < 4 и ФлагСоответствияВидаДеятельности = 1)тогда
							ФлагСоответствия = 1;
							Прервать; // нашли 
						КонецЕсли;
						
					КонецЕсли;	
				КонецЦикла;
				Если ФлагСоответствия = 0 тогда
					Сообщить("В строке номер "+СтрРезервы.НомерСтроки+" необходимо проверить аналитику.");
				КонецЕсли;
			КонецЕсли;
		Иначе 
			Сообщить("В строке номер "+СтрРезервы.НомерСтроки+" не заполнен Закупочный заказ!") ;
		КонецЕсли;
		
	
   КонецЦикла;	
   Сообщить("Проверка завершена");
КонецПроцедуры
// --- 77119573 2017.06.06 Гущина

//Сторчевой А.Н. 77152649 16.08.2017 {                                   
&НаКлиенте
Процедура ВыборПериода(Элемент, СтандартнаяОбработка = Ложь, ПериодРегистрации)
	
	СтандартнаяОбработка = ложь;
	НачальноеЗначение = ПериодРегистрации;
	
	СписокВыбора = Новый СписокЗначений;
	НачалоТекущегоГода = НачалоГода(НачальноеЗначение);
	НачалоПрошлогоГода = НачалоГода(НачалоТекущегоГода - 1);
	СписокВыбора.Добавить(НачалоПрошлогоГода, (Формат(НачалоПрошлогоГода, "ДФ='yyyy'") + "..."));
	НачалоМесяцаЗаполнения = НачалоТекущегоГода;
	ЭлементПоУмолчанию = Неопределено;
	Для а = 1 По 12 Цикл
		ДобавленныйЭлемент = СписокВыбора.Добавить(НачалоМесяцаЗаполнения, ПолучитьПредставлениеПериодаРегистрации(НачалоМесяцаЗаполнения));
		Если НачальноеЗначение = НачалоМесяцаЗаполнения Тогда
			ЭлементПоУмолчанию = ДобавленныйЭлемент;
		КонецЕсли; 
		НачалоМесяцаЗаполнения = ДобавитьМесяц(НачалоМесяцаЗаполнения, 1);
	КонецЦикла;
	НачалоСледующегоГода = КонецГода(НачалоТекущегоГода) + 1;
	СписокВыбора.Добавить(НачалоСледующегоГода, (Формат(НачалоСледующегоГода, "ДФ='yyyy'") + "..."));
	
	Оп = Новый ОписаниеОповещения("ВыполнитьПослеЗакрытияВопроса", ЭтаФорма, НачальноеЗначение);

	ПоказатьВыборИзСписка(Оп, СписокВыбора, Элемент, ЭлементПоУмолчанию);
	
Конецпроцедуры

&НаКлиенте
Процедура ВыполнитьПослеЗакрытияВопроса(ВыбранныйЭлемент, НачальноеЗначение) Экспорт
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	ИначеЕсли Год(ВыбранныйЭлемент.Значение) <> Год(НачальноеЗначение) Тогда
		ВыборПериода(Элементы.ПериодНачисления, , ВыбранныйЭлемент.Значение);
		Возврат;
	КонецЕсли;
	Объект.ПериодНачисления = ВыбранныйЭлемент.Значение;
	Период = ВыбранныйЭлемент.Представление;
	ТекДата = ВыбранныйЭлемент.Значение;
КонецПроцедуры

&НаСервере
Функция ПолучитьПредставлениеПериодаРегистрации(ПериодРегистрации)
	Возврат Формат(ПериодРегистрации, "ДФ='MMMM yyyy'");
КонецФункции
// } Сторчевой А.Н. 77152649 16.08.2017

//Бобылев А.А. 05.12.17г 77226142
&НаСервере
Функция ПолучитьСписокЗначений(ВыбранноеЗначение)
		ТЗ = Объект.Резервы.Выгрузить(,ВыбранноеЗначение);
		ТЗ.Свернуть(ВыбранноеЗначение);
		Массив = новый Массив;
		для каждого Элемент Из ТЗ цикл
			Массив.Добавить(Элемент[выбранноеЗначение]);			
		КонецЦикла;
		Возврат Массив;
КонецФункции

&НаКлиенте
Процедура Отбор(Команда)
	
	//+ Машута А. 16.10.2018 задача 845
	#Область СтарыйФукнционал_ФильтрацияТЧ_Резервы
	//СписокЗначений = Новый СписокЗначений;
	//СписокЗначений.Добавить("БюджетнаяСтатья", "Бюджетная статья");
	//СписокЗначений.Добавить("СтатьяЗатрат", "Статья затрат");
	//СписокЗначений.Добавить("СчетЗатратБУ", "Счет БУ");
	//СписокЗначений.Добавить("ttk_ПериодВозникновенияЗадолженности", "Период возникновения задолженности");
	//ВыбранноеЗначение = СписокЗначений.ВыбратьЭлемент("Выберите колонку фильтрации");
	//Если ВыбранноеЗначение <> Неопределено Тогда
	//	Массив = ПолучитьСписокЗначений(ВыбранноеЗначение.Значение);
	//	НаименованиеРеквизита = ВыбранноеЗначение.Значение;
	//	
	//	
	//	Если Массив.Количество() > 0 Тогда
	//		СписокЗначений = Новый СписокЗначений;
	//		Для Каждого Элемент Из Массив Цикл
	//			СписокЗначений.Добавить(Элемент);
	//		КонецЦикла;
	//		ВыбранноеЗначение = СписокЗначений.ВыбратьЭлемент("Выберите значение отбора");
	//		Если ВыбранноеЗначение <> Неопределено Тогда
	//			ФиксированнаяСтруктура = Новый ФиксированнаяСтруктура(НаименованиеРеквизита, ВыбранноеЗначение.Значение);
	//			Структура = Новый Структура();
	//			Структура.Вставить(НаименованиеРеквизита, ВыбранноеЗначение.Значение);
	//			Элементы.Резервы.ОтборСтрок = ФиксированнаяСтруктура;
	//			ВывестиИтоги(Структура);			
	//		КонецЕсли;
	//	Иначе
	//		Сообщить("Нет доступных значений по колонке " + ВыбранноеЗначение);
	//	КонецЕсли;
	//КонецЕсли;
	#КонецОбласти
	
	ИмяКолонки = СтрЗаменить(Элементы.Резервы.ТекущийЭлемент.Имя, "Резервы", "");
	Если Элементы.Резервы.ТекущиеДанные.Свойство(ИмяКолонки) Тогда
		ЗначениеВКолонке = Элементы.Резервы.ТекущиеДанные[ИмяКолонки];
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтборЗавершениеВыбора", ЭтаФорма, Новый Структура("ИмяКолонки, Значение", ИмяКолонки, ЗначениеВКолонке));
		ОткрытьФорму("ОбщаяФорма.ttk_ФормаРаботыСоСпискомЗначенийУправляемая", Новый Структура("Список", ПолучитьСписокЗначенийСравнения(Ложь)), ЭтаФорма, , , , ОписаниеОповещения);
	Иначе
		ПоказатьПредупреждение(, "По выделенному полю нельзя установить отбор");	
	КонецЕсли;
	//- Машута А. 16.10.2018 задача 845
	
КонецПроцедуры

//+ Машута А. 16.10.2018 задача 845
&НаКлиенте
Процедура ОтборЗавершениеВыбора(ДанныеВыбора, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеВыбора) Тогда
		УстановитьУсловноеОформлениеДляФильтрации(ДопПараметры.ИмяКолонки, ДопПараметры.Значение, ДанныеВыбора);	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеДляФильтрации(ИмяКолонки, ЗначениеВКолонке, ВыбранныйВидСравнения) 
	
	// Ищем существующее оформление по элементу
	ЭлементНайден = Ложь;
	Для каждого ЭлементОформления Из УсловноеОформление.Элементы Цикл
		Если ЭлементОформления.Представление = "Отбор" + ИмяКолонки Тогда
			Элемент = ЭлементОформления;
			ЭлементНайден = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЭлементНайден Тогда
		Элемент = УсловноеОформление.Элементы.Добавить();
		Элемент.Представление = "Отбор" + ИмяКолонки;
	КонецЕсли;

	// для того чтобы установка видимости сработала в поля нужно обязательно указать все колонки тч
	ДобавитьНеобходимыеПоляОформления(Элемент, Элементы.Резервы);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Резервы." + ИмяКолонки);
	// обратный вид сравнения получается для того, что бы скрыть элементы на форме, следовательно необходимо прямо противположное сравнение условию
	ОтборЭлемента.ВидСравнения = ПолучитьОбратныйВидСравнения(ВыбранныйВидСравнения);
	ОтборЭлемента.ПравоеЗначение = ЗначениеВКолонке;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьНеобходимыеПоляОформления(ЭлементОформления, ЭлементФормы);
	
	Для Каждого Колонка Из ЭлементФормы.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Колонка) = Тип("ПолеФормы") Тогда
		    ОформляемоеПоле = ЭлементОформления.Поля.Элементы.Добавить();    
		    ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных(Колонка.Имя);
		ИначеЕсли ТипЗнч(Колонка) = Тип("ГруппаФормы") Тогда
			ДобавитьНеобходимыеПоляОформления(ЭлементОформления, Колонка);			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СнятьУсловноеОформлениеДляФильтрации()

	МассивЭлементовОформленияДляУдаления = Новый Массив;
	
	Для каждого ЭлементОформления Из УсловноеОформление.Элементы Цикл
		Если СтрНайти(ЭлементОформления.Представление,"Отбор") Тогда
			МассивЭлементовОформленияДляУдаления.Добавить(ЭлементОформления);
		КонецЕсли;
	КонецЦикла;	
	
	Для каждого УдаляемыйЭлементОформления Из МассивЭлементовОформленияДляУдаления Цикл
		УсловноеОформление.Элементы.Удалить(УдаляемыйЭлементОформления);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСписокЗначенийСравнения(ВидыСравненияДляОтбораПоСписку = Истина)
	
	Список = Новый СписокЗначений;
	Список.Добавить(ВидСравненияКомпоновкиДанных.Равно);
	Список.Добавить(ВидСравненияКомпоновкиДанных.НеРавно);
	
	Если ВидыСравненияДляОтбораПоСписку Тогда
		Список.Добавить(ВидСравненияКомпоновкиДанных.ВСписке);
		Список.Добавить(ВидСравненияКомпоновкиДанных.НеВСписке);
	КонецЕсли;
	
	Возврат Список;
	
КонецФункции

&НаСервере
Функция ПолучитьОбратныйВидСравнения(ВыбранныйВидСравнения)
	
	Если ВыбранныйВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда	
		Результат = ВидСравненияКомпоновкиДанных.НеРавно;
	ИначеЕсли ВыбранныйВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно Тогда	
		Результат = ВидСравненияКомпоновкиДанных.Равно;
	ИначеЕсли ВыбранныйВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке Тогда	
		Результат = ВидСравненияКомпоновкиДанных.НеВСписке;
	ИначеЕсли ВыбранныйВидСравнения = ВидСравненияКомпоновкиДанных.НеВСписке Тогда	
		Результат = ВидСравненияКомпоновкиДанных.ВСписке;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОтборПоСписку(Команда)
	
	ИмяКолонки = СтрЗаменить(Элементы.Резервы.ТекущийЭлемент.Имя, "Резервы", "");
	Если Элементы.Резервы.ТекущиеДанные.Свойство(ИмяКолонки) Тогда	
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтборПоСпискуЗавершениеВыбора", ЭтаФорма, Новый Структура("ИмяКолонки", ИмяКолонки));
		ОткрытьФорму("ОбщаяФорма.ttk_ФормаРедактированияСпискаУправляемая", Новый Структура("ОписаниеТиповЗначений", ПолучитьОписаниеТиповДляСписка(Объект.Резервы[0][ИмяКолонки])), , , , , ОписаниеОповещения);	
	Иначе
		ПоказатьПредупреждение(, "По выделенному полю нельзя установить отбор");	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОписаниеТиповДляСписка(Значение)
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(ТипЗнч(Значение));
	Возврат Новый ОписаниеТипов(МассивТипов);
	
КонецФункции

&НаКлиенте
Процедура ОтборПоСпискуЗавершениеВыбора(ДанныеВыбора, ДопПараметры) Экспорт
	
	Если ЗначениеЗаполнено(ДанныеВыбора) И ДопПараметры.Свойство("ИмяКолонки") И ЗначениеЗаполнено(ДопПараметры.ИмяКолонки) Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ОтборЗавершениеВыбора", ЭтаФорма, Новый Структура("ИмяКолонки, Значение", ДопПараметры.ИмяКолонки, ДанныеВыбора));
		ОткрытьФорму("ОбщаяФорма.ttk_ФормаРаботыСоСпискомЗначенийУправляемая", Новый Структура("Список", ПолучитьСписокЗначенийСравнения()), , , , , ОписаниеОповещения);
		
	КонецЕсли;
	
КонецПроцедуры
//- Машута А. 16.10.2018 задача 845

&НаКлиенте
Процедура ВывестиИтоги(Структура)
	СуммаИтогов = ПересчитатьИтоги(Структура);
	Элементы.РезервыСуммаНДС.ТекстПодвала = СуммаИтогов.СуммаНДС;
	Элементы.РезервыСуммаНДС_РПР.ТекстПодвала = СуммаИтогов.СуммаНДС_РПР;
	Элементы.РезервыСуммаАвансаПоДоговору.ТекстПодвала = СуммаИтогов.СуммаАвансаПоДоговору;
	Элементы.РезервыСуммаНДСАвансаПоДоговору.ТекстПодвала = СуммаИтогов.СуммаНДСАвансаПоДоговору;
	Элементы.РезервыСуммаОстаткаПоГрафику.ТекстПодвала = СуммаИтогов.СуммаОстаткаПоГрафику;
	Элементы.РезервыСуммаОстаткаПоГрафикуВал.ТекстПодвала = СуммаИтогов.СуммаОстаткаПоГрафикуВал;
	Элементы.РезервыСуммаРНП.ТекстПодвала = СуммаИтогов.СуммаРНП;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьОтбор(Команда)
	Элементы.Резервы.ОтборСтрок = Новый ФиксированнаяСтруктура();
	ВывестиИтоги(Неопределено);
	//+ Машута А. 17.10.2018 задача 845
	СнятьУсловноеОформлениеДляФильтрации();
	//- Машута А. 17.10.2018 задача 845
КонецПроцедуры

&НаСервере
Функция ПересчитатьИтоги(Структура=Неопределено)
	Если Структура <> неопределено Тогда
		МассивСтрок = Объект.Резервы.НайтиСтроки(Структура);
	Иначе
		МассивСтрок = Объект.Резервы;
	КонецЕсли;
	СуммаАвансаПоДоговору = 0;
	СуммаНДС = 0;
	СуммаНДС_РПР = 0;
	СуммаНДСАвансаПоДоговору = 0;
	СуммаОстаткаПоГрафику = 0;
	СуммаОстаткаПоГрафикуВал = 0;
	СуммаРНП = 0;
	Для каждого Элемент Из МассивСтрок Цикл
		СуммаАвансаПоДоговору = СуммаАвансаПоДоговору + Элемент.СуммаАвансаПоДоговору;
		СуммаНДС = СуммаНДС + Элемент.СуммаНДС;
		СуммаНДС_РПР = СуммаНДС_РПР + Элемент.СуммаНДС_РПР;
		СуммаНДСАвансаПоДоговору = СуммаНДСАвансаПоДоговору + Элемент.СуммаНДСАвансаПоДоговору;
		СуммаОстаткаПоГрафику = СуммаОстаткаПоГрафику + Элемент.СуммаОстаткаПоГрафику;
		СуммаОстаткаПоГрафикуВал  = СуммаОстаткаПоГрафикуВал + Элемент.СуммаОстаткаПоГрафикуВал;
		СуммаРНП = СуммаРНП + Элемент.СуммаРНП;
	КонецЦикла;
	Структура = Новый Структура;
	Структура.Вставить("СуммаАвансаПоДоговору",СуммаАвансаПоДоговору);
	Структура.Вставить("СуммаНДС",СуммаНДС);
	Структура.Вставить("СуммаНДС_РПР",СуммаНДС_РПР);
	Структура.Вставить("СуммаНДСАвансаПоДоговору",СуммаНДСАвансаПоДоговору);
	Структура.Вставить("СуммаОстаткаПоГрафику",СуммаОстаткаПоГрафику);
	Структура.Вставить("СуммаОстаткаПоГрафикуВал",СуммаОстаткаПоГрафикуВал);
	Структура.Вставить("СуммаРНП",СуммаРНП);

	//Массив.Добавить(Новый Структура("СуммаАвансаПоДоговору",СуммаАвансаПоДоговору));
	//Массив.Добавить(Новый Структура("СуммаНДС",СуммаНДС));
	//Массив.Добавить(Новый Структура("СуммаНДС_РПР",СуммаНДС_РПР));
	//Массив.Добавить(Новый Структура("СуммаНДСАвансаПоДоговору",СуммаНДСАвансаПоДоговору));
	//Массив.Добавить(Новый Структура("СуммаОстаткаПоГрафику",СуммаОстаткаПоГрафику));
	//Массив.Добавить(Новый Структура("СуммаОстаткаПоГрафикуВал",СуммаОстаткаПоГрафикуВал));
	//Массив.Добавить(Новый Структура("СуммаРНП",СуммаРНП));
	Возврат Структура;
КонецФункции

&НаСервере
Процедура КомандаЗаполнитьРезервыПоОстаткамНоваяНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаполнитьРезервыПоОстаткамНовая(Команда)
	
	Если НЕ Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.Подготовка") Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Заполнение документа возможно только в статусе ""Подготовка"".");
		Возврат;
	КонецЕсли;
	
	Если Объект.Резервы.Количество() > 0 Тогда	
		Если НЕ Вопрос("Табличная часть будет очищена. Продолжить?", РежимДиалогаВопрос.ДаНет,, КодВозвратаДиалога.Да) = КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПроизвестиЗаполнениеДокументаНовая();
	//ххх Брель Виктор Андреевич 05.04.2018 17:59:08, заявка <<<
	ВывестиИтоги(Неопределено);	
	УстановитьУсловноеОформление();
	// Брель Виктор Андреевич 05.04.2018 17:59:08 >>>

КонецПроцедуры

&НаКлиенте
Процедура ВидОперацииПриИзменении(Элемент)
	//ххх Брель Виктор Андреевич 05.04.2018 17:03:13, заявка <<<
	 УстановитьВидимостьДоступностьНаКлиенте();
	// Брель Виктор Андреевич 05.04.2018 17:03:13 >>>
	
КонецПроцедуры

&НаКлиенте
Процедура РезервыПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	//ххх Брель Виктор Андреевич 05.04.2018 17:18:57, заявка <<<
	ВывестиИтоги(Неопределено);
	// Брель Виктор Андреевич 05.04.2018 17:18:57 >>>
	

КонецПроцедуры

&НаКлиенте
Процедура РезервыПослеУдаления(Элемент)
	
	//ххх Брель Виктор Андреевич 05.04.2018 17:18:57, заявка <<<
	ВывестиИтоги(Неопределено);
	// Брель Виктор Андреевич 05.04.2018 17:18:57 >>>

КонецПроцедуры
//Бобылев А.А. 05.12.17г 77226142------------
//ххх Брель Виктор Андреевич 23.04.2018 15:02:34, заявка <<<
&НаСервере
Процедура УстановитьУсловноеОформление ()
	
	 	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента, МЕСЯЦ) КАК ДатаВходящего,
		|	ПоступлениеТоваровУслугУслуги.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	ПоступлениеТоваровУслугУслуги.абс_ЦФУ КАК абс_ЦФУ,
		|	ПоступлениеТоваровУслугУслуги.абс_ТЭО КАК абс_ТЭО,
		|	ПоступлениеТоваровУслугУслуги.абс_КВ КАК абс_КВ,
		|	ПоступлениеТоваровУслугУслуги.абс_ТипСети КАК абс_ТипСети,
		|	ПоступлениеТоваровУслугУслуги.СтатьяОборотов КАК СтатьяОборотов,
		|	ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление КАК ttk_УсловноеНачисление,
		|	ПоступлениеТоваровУслугУслуги.абс_ЗакупочныйЗаказТЧ КАК абс_ЗакупочныйЗаказТЧ,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Организация КАК Организация,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент КАК Контрагент,
		|	ПоступлениеТоваровУслугУслуги.Ссылка,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление.ПериодНачисления, МЕСЯЦ) КАК Условник_ПериодНачисл
		|ПОМЕСТИТЬ ВР_ПТиУ
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|ГДЕ
		|	НЕ ПоступлениеТоваровУслугУслуги.Ссылка.абс_Статус В (&абс_Статус)
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.Проведен
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента <= &КонецПериода
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.Организация = &Организация
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента >= &НачалоПериодаПред
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление,
		|	ПоступлениеТоваровУслугУслуги.СтатьяОборотов,
		|	ПоступлениеТоваровУслугУслуги.абс_ТипСети,
		|	ПоступлениеТоваровУслугУслуги.абс_КВ,
		|	ПоступлениеТоваровУслугУслуги.абс_ТЭО,
		|	ПоступлениеТоваровУслугУслуги.абс_ЦФУ,
		|	ПоступлениеТоваровУслугУслуги.ttk_ОбъектБюджетирования,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента, МЕСЯЦ),
		|	ПоступлениеТоваровУслугУслуги.абс_ЗакупочныйЗаказТЧ,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Организация,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.Ссылка,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.Дата, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление.ПериодНачисления, МЕСЯЦ)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ttk_ОбъектБюджетирования,
		|	абс_ЦФУ,
		|	абс_ТЭО,
		|	абс_КВ,
		|	абс_ТипСети,
		|	СтатьяОборотов,
		|	абс_ЗакупочныйЗаказТЧ,
		|	Организация,
		|	Контрагент,
		|	ДатаВходящего,
		|	Месяц
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) КАК Период,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности КАК ttk_ПериодВозникновенияЗадолженности,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов КАК СтатьяОборотов,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети КАК абс_ТипСети,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ КАК абс_КВ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО КАК абс_ТЭО,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ КАК абс_ЦФУ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	СУММА(абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП) КАК СуммаРНП,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС,
		|	СУММА(абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС) КАК СуммаНДС,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Организация КАК Организация,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ВР_ПРРНПД
		|ИЗ
		|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, ГОД) = &ГОД
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Организация = &Организация
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности <= &КонецПериода
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ В(&ЗакупочныйЗаказ)
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Период,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗакупочныйЗаказ,
		|	ttk_ПериодВозникновенияЗадолженности,
		|	СтатьяОборотов,
		|	абс_ТипСети,
		|	абс_КВ,
		|	абс_ТЭО,
		|	абс_ЦФУ,
		|	ttk_ОбъектБюджетирования,
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВР_ПРРНПД.Период) КАК Период,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности КАК ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов КАК СтатьяОборотов,
		|	ВР_ПРРНПД.абс_ТипСети КАК абс_ТипСети,
		|	ВР_ПРРНПД.абс_КВ КАК абс_КВ,
		|	ВР_ПРРНПД.абс_ТЭО КАК абс_ТЭО,
		|	ВР_ПРРНПД.абс_ЦФУ КАК абс_ЦФУ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.Организация КАК Организация,
		|	ВР_ПРРНПД.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ВР_РНПД_МАКС
		|ИЗ
		|	ВР_ПРРНПД КАК ВР_ПРРНПД
		|ГДЕ
		|	(НЕ ВР_ПРРНПД.СтатьяОборотов ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТипСети ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_КВ ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТЭО ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ЦФУ ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.ttk_ОбъектБюджетирования ЕСТЬ NULL )
		|	И (НЕ ВР_ПРРНПД.СтатьяОборотов = &СтатьяОборотовПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТипСети = &ТипСетиПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_КВ = &КВПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТЭО = &ТЭОПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ЦФУ = &ЦФУПустая
		|			ИЛИ НЕ ВР_ПРРНПД.ttk_ОбъектБюджетирования = &ОбъектБюджетированияПустая)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВР_ПРРНПД.абс_КВ,
		|	ВР_ПРРНПД.абс_ТипСети,
		|	ВР_ПРРНПД.абс_ЦФУ,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.абс_ТЭО,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов,
		|	ВР_ПРРНПД.Организация,
		|	ВР_ПРРНПД.Контрагент
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗакупочныйЗаказ,
		|	ttk_ПериодВозникновенияЗадолженности,
		|	СтатьяОборотов,
		|	абс_ТипСети,
		|	абс_КВ,
		|	абс_ТЭО,
		|	абс_ЦФУ,
		|	ttk_ОбъектБюджетирования,
		|	Организация,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_ПРРНПД.Период,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности КАК ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов КАК СтатьяОборотов,
		|	ВР_ПРРНПД.абс_ТипСети КАК абс_ТипСети,
		|	ВР_ПРРНПД.абс_КВ КАК абс_КВ,
		|	ВР_ПРРНПД.абс_ТЭО КАК абс_ТЭО,
		|	ВР_ПРРНПД.абс_ЦФУ КАК абс_ЦФУ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.СуммаРНП,
		|	ВР_ПРРНПД.СтавкаНДС,
		|	ВР_ПРРНПД.СуммаНДС,
		|	ВР_ПРРНПД.Организация КАК Организация,
		|	ВР_ПРРНПД.Контрагент КАК Контрагент
		|ПОМЕСТИТЬ ВТ_ПРРНПД_итог
		|ИЗ
		|	ВР_РНПД_МАКС КАК ВР_РНПД_МАКС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПРРНПД КАК ВР_ПРРНПД
		|		ПО ВР_РНПД_МАКС.Период = ВР_ПРРНПД.Период
		|			И ВР_РНПД_МАКС.ЗакупочныйЗаказ = ВР_ПРРНПД.ЗакупочныйЗаказ
		|			И ВР_РНПД_МАКС.ttk_ПериодВозникновенияЗадолженности = ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности
		|			И ВР_РНПД_МАКС.СтатьяОборотов = ВР_ПРРНПД.СтатьяОборотов
		|			И ВР_РНПД_МАКС.абс_ТипСети = ВР_ПРРНПД.абс_ТипСети
		|			И ВР_РНПД_МАКС.абс_КВ = ВР_ПРРНПД.абс_КВ
		|			И ВР_РНПД_МАКС.абс_ТЭО = ВР_ПРРНПД.абс_ТЭО
		|			И ВР_РНПД_МАКС.абс_ЦФУ = ВР_ПРРНПД.абс_ЦФУ
		|			И ВР_РНПД_МАКС.ttk_ОбъектБюджетирования = ВР_ПРРНПД.ttk_ОбъектБюджетирования
		|			И ВР_РНПД_МАКС.Контрагент = ВР_ПРРНПД.Контрагент
		|			И ВР_РНПД_МАКС.Организация = ВР_ПРРНПД.Организация
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗакупочныйЗаказ,
		|	ttk_ПериодВозникновенияЗадолженности,
		|	СтатьяОборотов,
		|	абс_ТипСети,
		|	абс_КВ,
		|	абс_ТЭО,
		|	абс_ЦФУ,
		|	ttk_ОбъектБюджетирования,
		|	Организация,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПРРНПД_итог.Период,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности КАК ttk_ПериодВозникновенияЗадолженности,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов КАК СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.абс_ТипСети КАК абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ КАК абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО КАК абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ КАК абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	СУММА(ВТ_ПРРНПД_итог.СуммаРНП) КАК СуммаРНП,
		|	ВТ_ПРРНПД_итог.СтавкаНДС,
		|	СУММА(ВТ_ПРРНПД_итог.СуммаНДС) КАК СуммаНДС,
		|	МАКСИМУМ(ВР_ПТиУ.ttk_УсловноеНачисление) КАК ttk_УсловноеНачисление,
		|	ВТ_ПРРНПД_итог.Организация КАК Организация,
		|	ВТ_ПРРНПД_итог.Контрагент КАК Контрагент,
		|	ВР_ПТиУ.Ссылка
		|ПОМЕСТИТЬ ИТОГ_Остатки
		|ИЗ
		|	ВТ_ПРРНПД_итог КАК ВТ_ПРРНПД_итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПТиУ КАК ВР_ПТиУ
		|		ПО ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности = ВР_ПТиУ.ДатаВходящего
		|			И ВТ_ПРРНПД_итог.СтатьяОборотов = ВР_ПТиУ.СтатьяОборотов
		|			И ВТ_ПРРНПД_итог.абс_ТипСети = ВР_ПТиУ.абс_ТипСети
		|			И ВТ_ПРРНПД_итог.абс_КВ = ВР_ПТиУ.абс_КВ
		|			И ВТ_ПРРНПД_итог.абс_ТЭО = ВР_ПТиУ.абс_ТЭО
		|			И ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования = ВР_ПТиУ.ttk_ОбъектБюджетирования
		|			И ВТ_ПРРНПД_итог.абс_ЦФУ = ВР_ПТиУ.абс_ЦФУ
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ = ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ
		|			И ВТ_ПРРНПД_итог.Организация = ВР_ПТиУ.Организация
		|			И ВТ_ПРРНПД_итог.Контрагент = ВР_ПТиУ.Контрагент
		|			И (ВР_ПТиУ.Условник_ПериодНачисл >= НАЧАЛОПЕРИОДА(ВТ_ПРРНПД_итог.Период, МЕСЯЦ)
		|				ИЛИ ВР_ПТиУ.Условник_ПериодНачисл ЕСТЬ NULL )
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.Период,
		|	ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности,
		|	ВТ_ПРРНПД_итог.Контрагент,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.СтавкаНДС,
		|	ВР_ПТиУ.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗакупочныйЗаказ,
		|	ttk_ПериодВозникновенияЗадолженности,
		|	СтатьяОборотов,
		|	абс_ТипСети,
		|	абс_КВ,
		|	абс_ТЭО,
		|	абс_ЦФУ,
		|	ttk_ОбъектБюджетирования,
		|	Организация,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИТОГ.Период,
		|	ИТОГ.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
		|	ИТОГ.ttk_ПериодВозникновенияЗадолженности КАК ttk_ПериодВозникновенияЗадолженности,
		|	ИТОГ.СтатьяОборотов КАК БюджетнаяСтатья,
		|	ИТОГ.абс_ТипСети КАК абс_ТипСети,
		|	ИТОГ.абс_КВ КАК абс_КВ,
		|	ИТОГ.абс_ТЭО КАК абс_ТЭО,
		|	ИТОГ.абс_ЦФУ КАК ЦФУ,
		|	ИТОГ.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	ИТОГ.ttk_УсловноеНачисление,
		|	ИТОГ.Организация КАК Организация,
		|	ИТОГ.Контрагент КАК Контрагент,
		|	ИТОГ.Ссылка КАК ПТиУ
		|ПОМЕСТИТЬ Врем_Итог
		|ИЗ
		|	ИТОГ_Остатки КАК ИТОГ
		|ГДЕ
		|	ИТОГ.СуммаРНП > 0
		|	И (ИТОГ.ttk_УсловноеНачисление ЕСТЬ NULL 
		|			ИЛИ ИТОГ.ttk_УсловноеНачисление = &УсловноеНачислениеПустая)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ЗакупочныйЗаказ,
		|	ttk_ПериодВозникновенияЗадолженности,
		|	БюджетнаяСтатья,
		|	абс_ТипСети,
		|	абс_КВ,
		|	абс_ТЭО,
		|	ЦФУ,
		|	ttk_ОбъектБюджетирования,
		|	Организация,
		|	Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Врем_Итог.Период,
		|	Врем_Итог.ЗакупочныйЗаказ,
		|	Врем_Итог.ttk_ПериодВозникновенияЗадолженности,
		|	Врем_Итог.БюджетнаяСтатья,
		|	Врем_Итог.абс_ТипСети,
		|	Врем_Итог.абс_КВ,
		|	Врем_Итог.абс_ТЭО,
		|	Врем_Итог.ЦФУ,
		|	Врем_Итог.ttk_ОбъектБюджетирования,
		|	Врем_Итог.Организация,
		|	Врем_Итог.Контрагент,
		|	ВР_ПТиУ.Ссылка КАК ПТиУ
		|ИЗ
		|	Врем_Итог КАК Врем_Итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПТиУ КАК ВР_ПТиУ
		|		ПО Врем_Итог.ttk_ПериодВозникновенияЗадолженности = ВР_ПТиУ.ДатаВходящего
		|			И Врем_Итог.БюджетнаяСтатья = ВР_ПТиУ.СтатьяОборотов
		|			И Врем_Итог.абс_ТипСети = ВР_ПТиУ.абс_ТипСети
		|			И Врем_Итог.абс_КВ = ВР_ПТиУ.абс_КВ
		|			И Врем_Итог.абс_ТЭО = ВР_ПТиУ.абс_ТЭО
		|			И Врем_Итог.ЦФУ = ВР_ПТиУ.абс_ЦФУ
		|			И Врем_Итог.ttk_ОбъектБюджетирования = ВР_ПТиУ.ttk_ОбъектБюджетирования
		|			И Врем_Итог.ЗакупочныйЗаказ = ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ
		|			И Врем_Итог.Организация = ВР_ПТиУ.Организация
		|			И Врем_Итог.Контрагент = ВР_ПТиУ.Контрагент
		|			И (ВР_ПТиУ.ttk_УсловноеНачисление ЕСТЬ NULL 
		|				ИЛИ ВР_ПТиУ.ttk_УсловноеНачисление = &УсловноеНачислениеПустая)
		|ГДЕ
		|	(НЕ ВР_ПТиУ.Ссылка ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПТиУ.Ссылка = &ПтиУПустаяССылка)";
		абс_СтатусПарам = Новый Массив;
		абс_СтатусПарам.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
		абс_СтатусПарам.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отмена);
		абс_СтатусПарам.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
	Запрос.УстановитьПараметр("абс_Статус", абс_СтатусПарам);	
	Запрос.УстановитьПараметр("ГОД", НачалоГода(Объект.ПериодНачисления));
	ЗакупочныйЗаказПарам  = Новый Массив;
	Для Каждого СтрокаРезервы из Объект.Резервы Цикл
		ЗакупочныйЗаказПарам.Добавить( СтрокаРезервы.ЗакупочныйЗаказ);
	КонецЦикла;
	Запрос.УстановитьПараметр("ЗакупочныйЗаказ", ЗакупочныйЗаказПарам);
	Запрос.УстановитьПараметр("КВПустая", Справочники.абс_КапитальныеВложения.ПустаяСсылка());
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ПериодНачисления));
	Запрос.УстановитьПараметр("НачалоПериодаПред", ДобавитьМесяц(НачалоГода(Объект.ПериодНачисления),-12));
	Запрос.УстановитьПараметр("ОбъектБюджетированияПустая", Справочники.ttk_ОбъектыБюджетирования.ПустаяСсылка());
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("ПтиУПустаяССылка", Документы.ПоступлениеТоваровУслуг.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатьяОборотовПустая", Справочники.СтатьиОборотовПоБюджетам.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТипСетиПустая", Справочники.абс_ТипыСетей.ПустаяСсылка());
	Запрос.УстановитьПараметр("ТЭОПустая", Справочники.абс_ТЭО.ПустаяСсылка());
	Запрос.УстановитьПараметр("УсловноеНачислениеПустая", Документы.абс_РезервыПроизведенныхРасходов.ПустаяСсылка());
	Запрос.УстановитьПараметр("ЦФО", Объект.ЦФО);
	Запрос.УстановитьПараметр("ЦФУПустая", Справочники.абс_ЦФУ.ПустаяСсылка());
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	СписокНомеровСтрок = Новый СписокЗначений;
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Отбор = Новый Структура;
		Отбор.Вставить("ЗакупочныйЗаказ",ВыборкаДетальныеЗаписи.ЗакупочныйЗаказ);
		Отбор.Вставить("ttk_ПериодВозникновенияЗадолженности",ВыборкаДетальныеЗаписи.ttk_ПериодВозникновенияЗадолженности);
		Отбор.Вставить("абс_ТипСети",ВыборкаДетальныеЗаписи.абс_ТипСети);
		Отбор.Вставить("абс_КВ",ВыборкаДетальныеЗаписи.абс_КВ);
		Отбор.Вставить("абс_ТЭО",ВыборкаДетальныеЗаписи.абс_ТЭО);
		Отбор.Вставить("ttk_ОбъектБюджетирования",ВыборкаДетальныеЗаписи.ttk_ОбъектБюджетирования);
		Отбор.Вставить("БюджетнаяСтатья",ВыборкаДетальныеЗаписи.БюджетнаяСтатья);
		Отбор.Вставить("ЦФУ",ВыборкаДетальныеЗаписи.ЦФУ);
		
		ОбъектДок = РеквизитФормыВЗначение("Объект");	
		НайденыеСтроки   = ОбъектДок.Резервы.НайтиСтроки(Отбор);
		Если НайденыеСтроки .Количество()>0 Тогда
			Для Каждого НайденаяСтрока Из НайденыеСтроки Цикл
				СписокНомеровСтрок.Добавить(НайденаяСтрока.НомерСтроки);
			КонецЦикла;
		КонецЕсли;
		// Вставить обработку выборки ВыборкаДетальныеЗаписи
	КонецЦикла;
	
	УсловноеОформление.Элементы.Очистить();	
	НовыйЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить(); 
	НовыйЭлементУсловногоОформления.Представление = "СозданоПрограммно"; 
	НовыйЭлементУсловногоОформления.Использование = Истина; 


// Создаем поля оформления
ПолеОформления = НовыйЭлементУсловногоОформления.Поля.Элементы.Добавить();
ПолеОформления.Поле = Новый ПолеКомпоновкиДанных("Резервы");
ПолеОформления.Использование = Истина;

ЭлементОтбора = НовыйЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных")); 
ЭлементОтбора.Использование = Истина; 
ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.Резервы.НомерСтроки"); 
ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке; 
ЭлементОтбора.ПравоеЗначение = СписокНомеровСтрок; 



ЦветФона = НовыйЭлементУсловногоОформления.Оформление.Элементы.Найти("ЦветФона");
ЦветФона.Значение = WebЦвета.БледноЗеленый;
ЦветФона.Использование = Истина;
	КонецПроцедуры

&НаСервере
Процедура ЗАполнитьПОЗЗНаСервере()

КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьПОЗЗ(Команда)	
	Если НЕ Объект.Статус = ПредопределенноеЗначение("Перечисление.абс_СтатусыРПР.Подготовка") Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Заполнение документа возможно только в статусе ""Подготовка"".");
		Возврат;
	КонецЕсли;

	ФормаВыбора = ПолучитьФорму("Документ.абс_ЗакупочныйЗаказ.ФормаВыбора", , ЭтаФорма);		
	ФормаВыбора.ДокументСписок.Отбор.ЦФО.Значение = Объект.ЦФО;
	ФормаВыбора.ДокументСписок.Отбор.ЦФО.Использование = Истина;
	ФормаВыбора.ДокументСписок.Отбор.Организация.Значение = Объект.Организация;
	ФормаВыбора.ДокументСписок.Отбор.Организация.Использование = Истина;
	ФормаВыбора.МножественныйВыбор = Истина;
	ФормаВыбора.ОткрытьМодально();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив")  И  ВыбранноеЗначение.Количество() >0 Тогда
			
	Если Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции Тогда
		
		  ЗаполнитьРезервыПоОстаткамЗаПериодНоваяЗЗ (ВыбранноеЗначение);
		
	ИначеЕсли Объект.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО Тогда
		
		ЗаполнитьРезервыПоСогласованнымДокументамЗЗ(ВыбранноеЗначение);
		
	КонецЕсли;	

	КонецЕсли;
	//Вставить содержимое обработчика
КонецПроцедуры
&НаСервере
Процедура ЗаполнитьРезервыПоОстаткамЗаПериодНоваяЗЗ(СписокЗЗ)
	
	//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента, МЕСЯЦ) КАК ДатаВходящего,
		|	ПоступлениеТоваровУслугУслуги.ttk_ОбъектБюджетирования КАК ttk_ОбъектБюджетирования,
		|	ПоступлениеТоваровУслугУслуги.абс_ЦФУ КАК абс_ЦФУ,
		|	ПоступлениеТоваровУслугУслуги.абс_ТЭО КАК абс_ТЭО,
		|	ПоступлениеТоваровУслугУслуги.абс_КВ КАК абс_КВ,
		|	ПоступлениеТоваровУслугУслуги.абс_ТипСети КАК абс_ТипСети,
		|	ПоступлениеТоваровУслугУслуги.СтатьяОборотов КАК СтатьяОборотов,
		|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление) КАК ttk_УсловноеНачисление,
		|	ПоступлениеТоваровУслугУслуги.абс_ЗакупочныйЗаказТЧ,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Организация,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.Ссылка,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.Дата, МЕСЯЦ) КАК Месяц,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление.ПериодНачисления, МЕСЯЦ) КАК Условник_ПериодНачисл,
		|	ПоступлениеТоваровУслугУслуги.НомерСтроки
		|ПОМЕСТИТЬ ВР_ПТиУ
		|ИЗ
		|	Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|ГДЕ
		|	НЕ ПоступлениеТоваровУслугУслуги.Ссылка.абс_Статус В (&абс_Статус)
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.Проведен
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента <= &КонецПериода
		|	И ПоступлениеТоваровУслугУслуги.Ссылка.Организация = &Организация
		|	И НЕ ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление ЕСТЬ NULL 
		|	И ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление <> &УсловноеНачислениеПустая
		|
		|СГРУППИРОВАТЬ ПО
		|	ПоступлениеТоваровУслугУслуги.СтатьяОборотов,
		|	ПоступлениеТоваровУслугУслуги.абс_ТипСети,
		|	ПоступлениеТоваровУслугУслуги.абс_КВ,
		|	ПоступлениеТоваровУслугУслуги.абс_ТЭО,
		|	ПоступлениеТоваровУслугУслуги.абс_ЦФУ,
		|	ПоступлениеТоваровУслугУслуги.ttk_ОбъектБюджетирования,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.ДатаВходящегоДокумента, МЕСЯЦ),
		|	ПоступлениеТоваровУслугУслуги.абс_ЗакупочныйЗаказТЧ,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Организация,
		|	ПоступлениеТоваровУслугУслуги.Ссылка.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.Ссылка,
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.Ссылка.Дата, МЕСЯЦ),
		|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслугУслуги.ttk_УсловноеНачисление.ПериодНачисления, МЕСЯЦ),
		|	ПоступлениеТоваровУслугУслуги.НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) КАК Период,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
		|	СУММА(абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП) КАК СуммаРНП,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС,
		|	СУММА(абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС) КАК СуммаНДС,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город
		|ПОМЕСТИТЬ ВР_ПРРНПД
		|ИЗ
		|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, ГОД) = &ГОД
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Организация = &Организация
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности <= &КонецПериода
		|	И НЕ абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Статус В (&СписокСтатусов)
		|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ В(&СписокЗЗ)
		|
		|СГРУППИРОВАТЬ ПО
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
		|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
		|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Период,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ,
		|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
		|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(ВР_ПРРНПД.Период) КАК Период,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов,
		|	ВР_ПРРНПД.абс_ТипСети,
		|	ВР_ПРРНПД.абс_КВ,
		|	ВР_ПРРНПД.абс_ТЭО,
		|	ВР_ПРРНПД.абс_ЦФУ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.Организация,
		|	ВР_ПРРНПД.Контрагент,
		|	ВР_ПРРНПД.ДоговорКонтрагента
		|ПОМЕСТИТЬ ВР_РНПД_МАКС
		|ИЗ
		|	ВР_ПРРНПД КАК ВР_ПРРНПД
		|ГДЕ
		|	(НЕ ВР_ПРРНПД.СтатьяОборотов ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТипСети ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_КВ ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТЭО ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ЦФУ ЕСТЬ NULL 
		|			ИЛИ НЕ ВР_ПРРНПД.ttk_ОбъектБюджетирования ЕСТЬ NULL )
		|	И (НЕ ВР_ПРРНПД.СтатьяОборотов = &СтатьяОборотовПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТипСети = &ТипСетиПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_КВ = &КВПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ТЭО = &ТЭОПустая
		|			ИЛИ НЕ ВР_ПРРНПД.абс_ЦФУ = &ЦФУПустая
		|			ИЛИ НЕ ВР_ПРРНПД.ttk_ОбъектБюджетирования = &ОбъектБюджетированияПустая)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВР_ПРРНПД.абс_КВ,
		|	ВР_ПРРНПД.абс_ТипСети,
		|	ВР_ПРРНПД.абс_ЦФУ,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.абс_ТЭО,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов,
		|	ВР_ПРРНПД.Организация,
		|	ВР_ПРРНПД.Контрагент,
		|	ВР_ПРРНПД.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВР_ПРРНПД.Период,
		|	ВР_ПРРНПД.ЗакупочныйЗаказ,
		|	ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности,
		|	ВР_ПРРНПД.СтатьяОборотов,
		|	ВР_ПРРНПД.абс_ТипСети,
		|	ВР_ПРРНПД.абс_КВ,
		|	ВР_ПРРНПД.абс_ТЭО,
		|	ВР_ПРРНПД.абс_ЦФУ,
		|	ВР_ПРРНПД.ttk_ОбъектБюджетирования,
		|	ВР_ПРРНПД.СуммаРНП,
		|	ВР_ПРРНПД.СтавкаНДС,
		|	ВР_ПРРНПД.СуммаНДС,
		|	ВР_ПРРНПД.Организация,
		|	ВР_ПРРНПД.Контрагент,
		|	ВР_ПРРНПД.ДоговорКонтрагента,
		|	ВР_ПРРНПД.ttk_Город
		|ПОМЕСТИТЬ ВТ_ПРРНПД_итог
		|ИЗ
		|	ВР_РНПД_МАКС КАК ВР_РНПД_МАКС
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПРРНПД КАК ВР_ПРРНПД
		|		ПО ВР_РНПД_МАКС.Период = ВР_ПРРНПД.Период
		|			И ВР_РНПД_МАКС.ЗакупочныйЗаказ = ВР_ПРРНПД.ЗакупочныйЗаказ
		|			И ВР_РНПД_МАКС.ttk_ПериодВозникновенияЗадолженности = ВР_ПРРНПД.ttk_ПериодВозникновенияЗадолженности
		|			И ВР_РНПД_МАКС.СтатьяОборотов = ВР_ПРРНПД.СтатьяОборотов
		|			И ВР_РНПД_МАКС.абс_ТипСети = ВР_ПРРНПД.абс_ТипСети
		|			И ВР_РНПД_МАКС.абс_КВ = ВР_ПРРНПД.абс_КВ
		|			И ВР_РНПД_МАКС.абс_ТЭО = ВР_ПРРНПД.абс_ТЭО
		|			И ВР_РНПД_МАКС.абс_ЦФУ = ВР_ПРРНПД.абс_ЦФУ
		|			И ВР_РНПД_МАКС.ttk_ОбъектБюджетирования = ВР_ПРРНПД.ttk_ОбъектБюджетирования
		|			И ВР_РНПД_МАКС.Контрагент = ВР_ПРРНПД.Контрагент
		|			И ВР_РНПД_МАКС.Организация = ВР_ПРРНПД.Организация
		|			И ВР_РНПД_МАКС.ДоговорКонтрагента = ВР_ПРРНПД.ДоговорКонтрагента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПРРНПД_итог.Период,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	СУММА(ВТ_ПРРНПД_итог.СуммаРНП) КАК СуммаРНП,
		|	ВТ_ПРРНПД_итог.СтавкаНДС,
		|	СУММА(ВТ_ПРРНПД_итог.СуммаНДС) КАК СуммаНДС,
		|	МАКСИМУМ(ВР_ПТиУ.ttk_УсловноеНачисление) КАК ttk_УсловноеНачисление,
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.Контрагент,
		|	ВР_ПТиУ.Ссылка,
		|	ВТ_ПРРНПД_итог.ДоговорКонтрагента,
		|	ВТ_ПРРНПД_итог.ttk_Город
		|ПОМЕСТИТЬ ИТОГ_Остатки
		|ИЗ
		|	ВТ_ПРРНПД_итог КАК ВТ_ПРРНПД_итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПТиУ КАК ВР_ПТиУ
		|		ПО ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности = ВР_ПТиУ.ДатаВходящего
		|			И ВТ_ПРРНПД_итог.СтатьяОборотов = ВР_ПТиУ.СтатьяОборотов
		|			И ВТ_ПРРНПД_итог.абс_ТипСети = ВР_ПТиУ.абс_ТипСети
		|			И ВТ_ПРРНПД_итог.абс_КВ = ВР_ПТиУ.абс_КВ
		|			И ВТ_ПРРНПД_итог.абс_ТЭО = ВР_ПТиУ.абс_ТЭО
		|			И ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования = ВР_ПТиУ.ttk_ОбъектБюджетирования
		|			И ВТ_ПРРНПД_итог.абс_ЦФУ = ВР_ПТиУ.абс_ЦФУ
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ = ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ
		|			И ВТ_ПРРНПД_итог.Организация = ВР_ПТиУ.Организация
		|			И ВТ_ПРРНПД_итог.Контрагент = ВР_ПТиУ.Контрагент
		|			И ВТ_ПРРНПД_итог.Период <= ВР_ПТиУ.Месяц
		|			И (ВР_ПТиУ.Условник_ПериодНачисл >= НАЧАЛОПЕРИОДА(ВТ_ПРРНПД_итог.Период, МЕСЯЦ)
		|				ИЛИ ВР_ПТиУ.Условник_ПериодНачисл ЕСТЬ NULL )
		|			И (НЕ ВР_ПТиУ.ttk_УсловноеНачисление ЕСТЬ NULL )
		|			И (ВР_ПТиУ.ttk_УсловноеНачисление <> &УсловноеНачислениеПустая)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.Период,
		|	ВТ_ПРРНПД_итог.ttk_ПериодВозникновенияЗадолженности,
		|	ВТ_ПРРНПД_итог.Контрагент,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.СтавкаНДС,
		|	ВР_ПТиУ.Ссылка,
		|	ВТ_ПРРНПД_итог.ДоговорКонтрагента,
		|	ВТ_ПРРНПД_итог.ttk_Город
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	МАКСИМУМ(ВР_ПТиУ.Ссылка) КАК Ссылка,
		|	ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ КАК абс_ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФУ,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.Контрагент,
		|	МАКСИМУМ(ВР_ПТиУ.НомерСтроки) КАК НомерСтроки
		|ПОМЕСТИТЬ ВТ_ПоставкиПоЗЗ
		|ИЗ
		|	ВТ_ПРРНПД_итог КАК ВТ_ПРРНПД_итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВР_ПТиУ КАК ВР_ПТиУ
		|		ПО ВТ_ПРРНПД_итог.СтатьяОборотов = ВР_ПТиУ.СтатьяОборотов
		|			И ВТ_ПРРНПД_итог.абс_ТипСети = ВР_ПТиУ.абс_ТипСети
		|			И ВТ_ПРРНПД_итог.абс_КВ = ВР_ПТиУ.абс_КВ
		|			И ВТ_ПРРНПД_итог.абс_ТЭО = ВР_ПТиУ.абс_ТЭО
		|			И ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования = ВР_ПТиУ.ttk_ОбъектБюджетирования
		|			И ВТ_ПРРНПД_итог.абс_ЦФУ = ВР_ПТиУ.абс_ЦФУ
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ = ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ
		|			И ВТ_ПРРНПД_итог.Организация = ВР_ПТиУ.Организация
		|			И ВТ_ПРРНПД_итог.Контрагент = ВР_ПТиУ.Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ВР_ПТиУ.абс_ЗакупочныйЗаказТЧ,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФУ,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.Ссылка) КАК Ссылка,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО КАК ЦФО,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.Контрагент
		|ПОМЕСТИТЬ ВТ_ПоследниеСправки
		|ИЗ
		|	ВТ_ПРРНПД_итог КАК ВТ_ПРРНПД_итог
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|		ПО ВТ_ПРРНПД_итог.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
		|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоЦФО))
		|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.Абс_СтатусыРПР.Согласован))
		|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Проведен)
		|			И ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
		|			И ВТ_ПРРНПД_итог.абс_ТипСети = абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети
		|			И ВТ_ПРРНПД_итог.абс_КВ = абс_РезервыПроизведенныхРасходовРезервы.абс_КВ
		|			И ВТ_ПРРНПД_итог.абс_ТЭО = абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО
		|			И ВТ_ПРРНПД_итог.абс_ЦФУ = абс_РезервыПроизведенныхРасходовРезервы.ЦФУ
		|			И ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования = абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования
		|			И ВТ_ПРРНПД_итог.СтатьяОборотов = абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья
		|			И ВТ_ПРРНПД_итог.Контрагент = абс_РезервыПроизведенныхРасходовРезервы.Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ,
		|	ВТ_ПРРНПД_итог.Организация,
		|	ВТ_ПРРНПД_итог.ЗакупочныйЗаказ.ЦФО,
		|	ВТ_ПРРНПД_итог.СтатьяОборотов,
		|	ВТ_ПРРНПД_итог.ttk_ОбъектБюджетирования,
		|	ВТ_ПРРНПД_итог.абс_ТипСети,
		|	ВТ_ПРРНПД_итог.абс_КВ,
		|	ВТ_ПРРНПД_итог.абс_ТЭО,
		|	ВТ_ПРРНПД_итог.абс_ЦФУ,
		|	ВТ_ПРРНПД_итог.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
		|	ВТ_ПоследниеСправки.ЦФО,
		|	МАКСИМУМ(ВТ_ПоследниеСправки.Ссылка) КАК Ссылка,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности) КАК ВидДеятельности,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат) КАК СтатьяЗатрат,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоБУ) КАК СчетЗатратАвтоБУ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоНУ) КАК СчетЗатратАвтоНУ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратБУ) КАК СчетЗатратБУ,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратНУ) КАК СчетЗатратНУ,
		|	ВТ_ПоследниеСправки.СтатьяОборотов,
		|	ВТ_ПоследниеСправки.ttk_ОбъектБюджетирования,
		|	ВТ_ПоследниеСправки.абс_ТипСети,
		|	ВТ_ПоследниеСправки.абс_КВ,
		|	ВТ_ПоследниеСправки.абс_ТЭО,
		|	ВТ_ПоследниеСправки.абс_ЦФУ,
		|	ВТ_ПоследниеСправки.Контрагент,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
		|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СчетУчетаНДС) КАК СчетУчетаНДС
		|ПОМЕСТИТЬ ВТ_АналитикаПоследнихСправок
		|ИЗ
		|	ВТ_ПоследниеСправки КАК ВТ_ПоследниеСправки
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
		|		ПО ВТ_ПоследниеСправки.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
		|			И ВТ_ПоследниеСправки.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
		|			И ВТ_ПоследниеСправки.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
		|			И ВТ_ПоследниеСправки.Ссылка = абс_РезервыПроизведенныхРасходовРезервы.Ссылка
		|			И ВТ_ПоследниеСправки.СтатьяОборотов = абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья
		|			И ВТ_ПоследниеСправки.ttk_ОбъектБюджетирования = абс_РезервыПроизведенныхРасходовРезервы.ttk_ОбъектБюджетирования
		|			И ВТ_ПоследниеСправки.абс_ТипСети = абс_РезервыПроизведенныхРасходовРезервы.абс_ТипСети
		|			И ВТ_ПоследниеСправки.абс_КВ = абс_РезервыПроизведенныхРасходовРезервы.абс_КВ
		|			И ВТ_ПоследниеСправки.абс_ТЭО = абс_РезервыПроизведенныхРасходовРезервы.абс_ТЭО
		|			И ВТ_ПоследниеСправки.абс_ЦФУ = абс_РезервыПроизведенныхРасходовРезервы.ЦФУ
		|			И ВТ_ПоследниеСправки.Контрагент = абс_РезервыПроизведенныхРасходовРезервы.Контрагент
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
		|	ВТ_ПоследниеСправки.ЦФО,
		|	ВТ_ПоследниеСправки.СтатьяОборотов,
		|	ВТ_ПоследниеСправки.ttk_ОбъектБюджетирования,
		|	ВТ_ПоследниеСправки.абс_ТипСети,
		|	ВТ_ПоследниеСправки.абс_КВ,
		|	ВТ_ПоследниеСправки.абс_ТЭО,
		|	ВТ_ПоследниеСправки.абс_ЦФУ,
		|	ВТ_ПоследниеСправки.Контрагент
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.Ссылка) КАК Ссылка,
		|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
		|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
		|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)
		|					КОНЕЦ
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
		|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
		|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)
		|					КОНЕЦ
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
		|				ТОГДА ВЫБОР
		|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
		|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
		|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)
		|					КОНЕЦ
		|		КОНЕЦ) КАК СтатьяЗатрат,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.абс_ВидыДеятельностиКТТК)
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.абс_ВидыДеятельностиКТТК)
		|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
		|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.абс_ВидыДеятельностиКТТК)
		|			ИНАЧЕ &ПустойВидДеятельности
		|		КОНЕЦ) КАК ВидДеятельности,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФО,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФУ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТипСети,
		|	ВТ_ПоставкиПоЗЗ.абс_КВ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТЭО,
		|	ВТ_ПоставкиПоЗЗ.ttk_ОбъектБюджетирования,
		|	ВТ_ПоставкиПоЗЗ.СтатьяОборотов,
		|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатратНУ) КАК СчетЗатратНУ,
		|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатрат) КАК СчетЗатратБУ,
		|	ВТ_ПоставкиПоЗЗ.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа,
		|	ПоступлениеТоваровУслугУслуги.СчетУчетаНДС
		|ПОМЕСТИТЬ ВТ_ПоставкиАналитика
		|ИЗ
		|	ВТ_ПоставкиПоЗЗ КАК ВТ_ПоставкиПоЗЗ
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
		|		ПО ВТ_ПоставкиПоЗЗ.Ссылка = ПоступлениеТоваровУслугУслуги.Ссылка
		|			И ВТ_ПоставкиПоЗЗ.НомерСтроки = ПоступлениеТоваровУслугУслуги.НомерСтроки
		|
		|СГРУППИРОВАТЬ ПО
		|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФО,
		|	ВТ_ПоставкиПоЗЗ.ЗакупочныйЗаказЦФУ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТипСети,
		|	ВТ_ПоставкиПоЗЗ.абс_КВ,
		|	ВТ_ПоставкиПоЗЗ.абс_ТЭО,
		|	ВТ_ПоставкиПоЗЗ.ttk_ОбъектБюджетирования,
		|	ВТ_ПоставкиПоЗЗ.СтатьяОборотов,
		|	ВТ_ПоставкиПоЗЗ.Контрагент,
		|	ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа,
		|	ПоступлениеТоваровУслугУслуги.СчетУчетаНДС
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ИТОГ.Период,
		|	ИТОГ.ЗакупочныйЗаказ,
		|	ИТОГ.ttk_ПериодВозникновенияЗадолженности,
		|	ИТОГ.СтатьяОборотов КАК БюджетнаяСтатья,
		|	ИТОГ.абс_ТипСети,
		|	ИТОГ.абс_КВ,
		|	ИТОГ.абс_ТЭО,
		|	ИТОГ.абс_ЦФУ КАК ЦФУ,
		|	ИТОГ.ttk_ОбъектБюджетирования,
		|	ИТОГ.СуммаРНП,
		|	ИТОГ.СтавкаНДС,
		|	ИТОГ.СуммаНДС,
		|	ИТОГ.ttk_УсловноеНачисление,
		|	ИСТИНА КАК Учитывать,
		|	ИТОГ.Организация,
		|	ИТОГ.Контрагент,
		|	ИТОГ.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДоговора,
		|	ИТОГ.СуммаРНП КАК СуммаОстаткаПоГрафику,
		|	ИТОГ.СуммаНДС КАК СуммаНДС_РПР,
		|	ИТОГ.ДоговорКонтрагента,
		|	ИТОГ.ttk_Город
		|ПОМЕСТИТЬ Врем_Итог
		|ИЗ
		|	ИТОГ_Остатки КАК ИТОГ
		|ГДЕ
		|	ИТОГ.СуммаРНП > 0
		|	И (ИТОГ.ttk_УсловноеНачисление ЕСТЬ NULL 
		|			ИЛИ ИТОГ.ttk_УсловноеНачисление = &УсловноеНачислениеПустая)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Врем_Итог.Период,
		|	Врем_Итог.ЗакупочныйЗаказ,
		|	Врем_Итог.ttk_ПериодВозникновенияЗадолженности,
		|	Врем_Итог.БюджетнаяСтатья,
		|	Врем_Итог.абс_ТипСети,
		|	Врем_Итог.абс_КВ,
		|	Врем_Итог.абс_ТЭО,
		|	Врем_Итог.ЦФУ,
		|	Врем_Итог.ttk_ОбъектБюджетирования,
		|	Врем_Итог.СуммаРНП,
		|	Врем_Итог.СтавкаНДС,
		|	Врем_Итог.СуммаНДС,
		|	Врем_Итог.ttk_УсловноеНачисление,
		|	Врем_Итог.Учитывать,
		|	Врем_Итог.Организация,
		|	Врем_Итог.Контрагент,
		|	Врем_Итог.ВалютаДоговора,
		|	Врем_Итог.СуммаОстаткаПоГрафику,
		|	Врем_Итог.СуммаНДС_РПР,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
		|	КОНЕЦ КАК СтатьяЗатратАвто,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
		|	КОНЕЦ КАК СтатьяЗатрат,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
		|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
		|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
		|	КОНЕЦ КАК Виддеятельности,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
		|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
		|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
		|	КОНЕЦ КАК ВидДеятельностиАвто,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратБУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратБУ = &ПустойСчет
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратБУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратБУ
		|	КОНЕЦ КАК СчетЗатратАвтоБУ,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратБУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратБУ = &ПустойСчет
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратБУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратБУ
		|	КОНЕЦ КАК СчетЗатратБУ,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратНУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратНУ = &ПустойСчетНУ
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратНУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратНУ
		|	КОНЕЦ КАК СчетЗатратАвтоНУ,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратНУ ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетЗатратНУ = &ПустойСчетНУ
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетЗатратНУ
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетЗатратНУ
		|	КОНЕЦ КАК СчетЗатратНУ,
		|	Врем_Итог.ДоговорКонтрагента,
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетЗатратБУ В ИЕРАРХИИ (&Счет20)
		|				ИЛИ ВТ_АналитикаПоследнихСправок.СчетЗатратБУ В ИЕРАРХИИ (&Счет20)
		|			ТОГДА ВЫБОР
		|					КОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
		|							ИЛИ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
		|						ТОГДА ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
		|					ИНАЧЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
		|				КОНЕЦ
		|		ИНАЧЕ NULL
		|	КОНЕЦ КАК НоменклатурнаяГруппа,
		//+ Машута А. 16.10.2018 задача 845
		|	ДокЗакупочныйЗаказ.Ответственный КАК ttk_Инициатор,
		//- Машута А. 16.10.2018 задача 845		
		|	ВЫБОР
		|		КОГДА ВТ_ПоставкиАналитика.СчетУчетаНДС ЕСТЬ NULL 
		|				ИЛИ ВТ_ПоставкиАналитика.СчетУчетаНДС = &ПустойСчет
		|			ТОГДА ВТ_АналитикаПоследнихСправок.СчетУчетаНДС
		|		ИНАЧЕ ВТ_ПоставкиАналитика.СчетУчетаНДС
		|	КОНЕЦ КАК СчетУчетаНДС
		|ИЗ
		|	Врем_Итог КАК Врем_Итог
		//+ Машута А. 16.10.2018 задача 845
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_ЗакупочныйЗаказ КАК ДокЗакупочныйЗаказ
		|		ПО Врем_Итог.ЗакупочныйЗаказ = ДокЗакупочныйЗаказ.Ссылка,	
		//- Машута А. 16.10.2018 задача 845
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоследнихСправок КАК ВТ_АналитикаПоследнихСправок
		|		ПО Врем_Итог.ЗакупочныйЗаказ = ВТ_АналитикаПоследнихСправок.ЗакупочныйЗаказ
		|			И Врем_Итог.Контрагент = ВТ_АналитикаПоследнихСправок.Контрагент
		|			И Врем_Итог.ttk_ОбъектБюджетирования = ВТ_АналитикаПоследнихСправок.ttk_ОбъектБюджетирования
		|			И Врем_Итог.абс_ТипСети = ВТ_АналитикаПоследнихСправок.абс_ТипСети
		|			И Врем_Итог.абс_КВ = ВТ_АналитикаПоследнихСправок.абс_КВ
		|			И Врем_Итог.абс_ТЭО = ВТ_АналитикаПоследнихСправок.абс_ТЭО
		|			И Врем_Итог.ЦФУ = ВТ_АналитикаПоследнихСправок.абс_ЦФУ
		|			И Врем_Итог.БюджетнаяСтатья = ВТ_АналитикаПоследнихСправок.СтатьяОборотов
		|			И Врем_Итог.ЗакупочныйЗаказ.ЦФО = ВТ_АналитикаПоследнихСправок.ЦФО
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставкиАналитика КАК ВТ_ПоставкиАналитика
		|		ПО Врем_Итог.ЗакупочныйЗаказ = ВТ_ПоставкиАналитика.абс_ЗакупочныйЗаказ
		|			И Врем_Итог.Контрагент = ВТ_ПоставкиАналитика.Контрагент
		|			И Врем_Итог.БюджетнаяСтатья = ВТ_ПоставкиАналитика.СтатьяОборотов
		|			И Врем_Итог.абс_ТипСети = ВТ_ПоставкиАналитика.абс_ТипСети
		|			И Врем_Итог.абс_КВ = ВТ_ПоставкиАналитика.абс_КВ
		|			И Врем_Итог.абс_ТЭО = ВТ_ПоставкиАналитика.абс_ТЭО
		|			И Врем_Итог.ttk_ОбъектБюджетирования = ВТ_ПоставкиАналитика.ttk_ОбъектБюджетирования
		|			И Врем_Итог.ЦФУ = ВТ_ПоставкиАналитика.ЗакупочныйЗаказЦФУ
		|			И Врем_Итог.ЗакупочныйЗаказ.ЦФО = ВТ_ПоставкиАналитика.ЗакупочныйЗаказЦФО";
	 абс_СтатусПерем = Новый Массив;
	 абс_СтатусПерем.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Подготовка);
	 абс_СтатусПерем.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
	 абс_СтатусПерем.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отмена);
	 
	 СписокСтатусов = Новый Массив;
	 СписокСтатусов.Добавить(Перечисления.абсСтатусЗакупочногоЗаказа.Отказ);
	 СписокСтатусов.Добавить(Перечисления.абсСтатусЗакупочногоЗаказа.Отменен);
	 СписокСтатусов.Добавить(Перечисления.абсСтатусЗакупочногоЗаказа.Закрыт);
	 
	 Запрос.УстановитьПараметр("СписокСтатусов",СписокСтатусов );
	 Запрос.УстановитьПараметр("абс_Статус",абс_СтатусПерем );
	 Запрос.УстановитьПараметр("ГОД", НачалоГода(ТекущаяДата()));
	 Запрос.УстановитьПараметр("КВПустая", Справочники.абс_КапитальныеВложения.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ОбъектБюджетированияПустая", Справочники.ttk_ОбъектыБюджетирования.ПустаяСсылка());
	 Запрос.УстановитьПараметр("СтатьяОборотовПустая", Справочники.СтатьиОборотовПоБюджетам.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ТипСетиПустая", Справочники.абс_ТипыСетей.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ТЭОПустая", Справочники.абс_ТЭО.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ЦФУПустая", Справочники.абс_ЦФУ.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат", Справочники.СтатьиЗатрат.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ПустойВидДеятельности", Справочники.абс_ВидыДеятельностиКТТК.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ЦФО", Объект.ЦФО);
	 Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Объект.ПериодНачисления));
	 Запрос.УстановитьПараметр("Организация", Объект.Организация);
	 Запрос.УстановитьПараметр("ПустойСчетНУ", ПланыСчетов.Налоговый.ПустаяСсылка());
	 Запрос.УстановитьПараметр("ПустойСчет", ПланыСчетов.Хозрасчетный.ПустаяСсылка());
	 Запрос.УстановитьПараметр("УсловноеНачислениеПустая", Документы.абс_РезервыПроизведенныхРасходов.ПустаяСсылка());
	 Запрос.УстановитьПараметр("Счет20", ПланыСчетов.Хозрасчетный.ОсновноеПроизводство_);
	 Запрос.УстановитьПараметр("ПустаяНГ", Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	 Запрос.УстановитьПараметр("СписокЗЗ", СписокЗЗ);
	 
	#Область СтарыйЗапрос_ЗаполнитьРезервыПоОстаткамЗаПериодНоваяЗЗ
	//РезультатЗапроса = Запрос.Выполнить();
	//
	//ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	//
	//Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
	//	// Вставить обработку выборки ВыборкаДетальныеЗаписи
	//КонецЦикла;
	//
	////}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

	//

	//
	//Запрос = Новый Запрос(
	//"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаОстаткаПоГрафику,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаРНП,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС КАК СтавкаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС КАК СуммаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Ответственный КАК ОтветственныйЗЗ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДокумента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ КАК ЦФУ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов КАК БюджетнаяСтатья,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.НоменклатурнаяГруппа,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности
	//|ПОМЕСТИТЬ ВТ_ОстатокПоГрафикуТекущийПериод
	//|ИЗ
	//|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
	//|ГДЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация = &Организация
	//|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
	//|	И НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&ПериодПоставки, МЕСЯЦ)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ДоговорКонтрагента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаОстаткаПоГрафику,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаРНП КАК СуммаРНП,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтавкаНДС КАК СтавкаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СуммаНДС КАК СуммаНДС,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Ответственный КАК ОтветственныйЗЗ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДокумента,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ЦФУ КАК ЦФУ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТипСети,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_КВ,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.абс_ТЭО,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ОбъектБюджетирования,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_Город,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.СтатьяОборотов КАК БюджетнаяСтатья,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.НоменклатурнаяГруппа,
	//|	абс_ПроектыРезервовРНПДПоЗЗ.ttk_ПериодВозникновенияЗадолженности,
	//|	ЕСТЬNULL(абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка, абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка) КАК УН
	//|ПОМЕСТИТЬ ВТ_ОстатокПоГрафикуПредыдущиеПериоды
	//|ИЗ
	//|	РегистрСведений.абс_ПроектыРезервовРНПДПоЗЗ КАК абс_ПроектыРезервовРНПДПоЗЗ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки
	//|		ПО абс_ПроектыРезервовРНПДПоЗЗ.Организация = абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка.Организация
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.Период = абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка.ПериодНачисления
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.ЗакупочныйЗаказ
	//|			И (абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоДирекции))
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы_Справка
	//|		ПО абс_ПроектыРезервовРНПДПоЗЗ.Организация = абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка.Организация
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.Период = абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка.ПериодНачисления
	//|			И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы_Справка.ЗакупочныйЗаказ
	//|			И (абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоЦФО))
	//|ГДЕ
	//|	абс_ПроектыРезервовРНПДПоЗЗ.Организация = &Организация
	//|	И абс_ПроектыРезервовРНПДПоЗЗ.ЗакупочныйЗаказ.ЦФО = &ЦФО
	//|	И НАЧАЛОПЕРИОДА(абс_ПроектыРезервовРНПДПоЗЗ.Период, МЕСЯЦ) МЕЖДУ НАЧАЛОПЕРИОДА(&ПериодПоставки, ГОД) И НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&ПериодПоставки, МЕСЯЦ, -1), МЕСЯЦ)
	//|	И (абс_РезервыПроизведенныхРасходовРезервы_ПроектСправки.Ссылка ЕСТЬ НЕ NULL 
	//|			ИЛИ абс_РезервыПроизведенныхРасходовРезервы_Справка.Ссылка ЕСТЬ НЕ NULL )
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	//|	ПоступлениеТоваровУслуг.Ссылка КАК Ссылка,
	//|	ПоступлениеТоваровУслуг.Ссылка.ttk_УН,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ КАК ЗЗ,
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ
	//|ПОМЕСТИТЬ ВтЗакрытыеУН
	//|ИЗ
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды КАК ВТ_ОстатокПоГрафикуПредыдущиеПериоды
	//|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.абс_ЗакупочныеЗаказы КАК ПоступлениеТоваровУслуг
	//|		ПО (ПоступлениеТоваровУслуг.Ссылка.ttk_УН = ВТ_ОстатокПоГрафикуПредыдущиеПериоды.УН)
	//|			И (ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ = ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ)
	//|			И (ПоступлениеТоваровУслуг.Ссылка.Проведен)
	//|			И (ПоступлениеТоваровУслуг.Ссылка.ОтражатьВБухгалтерскомУчете)
	//|			И (ПоступлениеТоваровУслуг.Ссылка.абс_Статус В (ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.Завершен), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.КорректировкаДокумента)))
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.Организация,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СуммаОстаткаПоГрафику,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СуммаРНП,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СтавкаНДС,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.СуммаНДС,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ОтветственныйЗЗ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.Контрагент,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ВалютаДокумента,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЦФУ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.абс_ТипСети,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.абс_КВ,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.абс_ТЭО,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_ОбъектБюджетирования,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_Город,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.БюджетнаяСтатья,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.НоменклатурнаяГруппа,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_ПериодВозникновенияЗадолженности,
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды.УН,
	//|	ВтЗакрытыеУН.ttk_УН,
	//|	ВтЗакрытыеУН.ЗЗ
	//|ПОМЕСТИТЬ втОстатокПоГрафикуДобавить
	//|ИЗ
	//|	ВТ_ОстатокПоГрафикуПредыдущиеПериоды КАК ВТ_ОстатокПоГрафикуПредыдущиеПериоды
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВтЗакрытыеУН КАК ВтЗакрытыеУН
	//|		ПО ВТ_ОстатокПоГрафикуПредыдущиеПериоды.УН = ВтЗакрытыеУН.ttk_УН
	//|			И ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ = ВтЗакрытыеУН.ЗЗ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОстатокПоГрафикуТекущийПериод КАК ВТ_ОстатокПоГрафикуТекущийПериод
	//|		ПО ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ttk_ПериодВозникновенияЗадолженности = ВТ_ОстатокПоГрафикуТекущийПериод.ttk_ПериодВозникновенияЗадолженности
	//|			И ВТ_ОстатокПоГрафикуПредыдущиеПериоды.ЗакупочныйЗаказ = ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ
	//|ГДЕ
	//|	ВтЗакрытыеУН.ttk_УН ЕСТЬ NULL 
	//|	И ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ ЕСТЬ NULL 
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.Организация,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СуммаОстаткаПоГрафику КАК СуммаОстаткаПоГрафику,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СуммаРНП КАК СуммаРНП,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СтавкаНДС КАК СтавкаНДС,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.СуммаНДС КАК СуммаНДС,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ОтветственныйЗЗ КАК ОтветственныйЗЗ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ КАК ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ.Контрагент КАК Контрагент,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЗакупочныйЗаказ.ВалютаДокумента КАК ВалютаДокумента,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ЦФУ КАК ЦФУ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.абс_ТипСети,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.абс_КВ,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.абс_ТЭО,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ttk_ОбъектБюджетирования,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ttk_Город,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.БюджетнаяСтатья КАК БюджетнаяСтатья,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.НоменклатурнаяГруппа,
	//|	ВТ_ОстатокПоГрафикуТекущийПериод.ttk_ПериодВозникновенияЗадолженности
	//|ПОМЕСТИТЬ ВТ_ОстатокПоГрафику
	//|ИЗ
	//|	ВТ_ОстатокПоГрафикуТекущийПериод КАК ВТ_ОстатокПоГрафикуТекущийПериод
	//|
	//|ОБЪЕДИНИТЬ
	//|
	//|ВЫБРАТЬ
	//|	втОстатокПоГрафикуДобавить.Организация,
	//|	втОстатокПоГрафикуДобавить.ДоговорКонтрагента,
	//|	втОстатокПоГрафикуДобавить.СуммаОстаткаПоГрафику,
	//|	втОстатокПоГрафикуДобавить.СуммаРНП,
	//|	втОстатокПоГрафикуДобавить.СтавкаНДС,
	//|	втОстатокПоГрафикуДобавить.СуммаНДС,
	//|	втОстатокПоГрафикуДобавить.ОтветственныйЗЗ,
	//|	втОстатокПоГрафикуДобавить.ЗакупочныйЗаказ,
	//|	втОстатокПоГрафикуДобавить.Контрагент,
	//|	втОстатокПоГрафикуДобавить.ВалютаДокумента,
	//|	втОстатокПоГрафикуДобавить.ЦФУ,
	//|	втОстатокПоГрафикуДобавить.абс_ТипСети,
	//|	втОстатокПоГрафикуДобавить.абс_КВ,
	//|	втОстатокПоГрафикуДобавить.абс_ТЭО,
	//|	втОстатокПоГрафикуДобавить.ttk_ОбъектБюджетирования,
	//|	втОстатокПоГрафикуДобавить.ttk_Город,
	//|	втОстатокПоГрафикуДобавить.БюджетнаяСтатья,
	//|	втОстатокПоГрафикуДобавить.НоменклатурнаяГруппа,
	//|	втОстатокПоГрафикуДобавить.ttk_ПериодВозникновенияЗадолженности
	//|ИЗ
	//|	втОстатокПоГрафикуДобавить КАК втОстатокПоГрафикуДобавить
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	МАКСИМУМ(ПоступлениеТоваровУслуг.Ссылка) КАК Ссылка,
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ КАК абс_ЗакупочныйЗаказ,
	//|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента
	//|ПОМЕСТИТЬ ВТ_ПоставкиПоЗЗ
	//|ИЗ
	//|	Документ.ПоступлениеТоваровУслуг.абс_ЗакупочныеЗаказы КАК ПоступлениеТоваровУслуг
	//|ГДЕ
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ В
	//|			(ВЫБРАТЬ
	//|				ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ
	//|			ИЗ
	//|				ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику)
	//|	И ПоступлениеТоваровУслуг.Ссылка.Проведен
	//|	И ПоступлениеТоваровУслуг.Ссылка.ОтражатьВБухгалтерскомУчете
	//|	И ПоступлениеТоваровУслуг.Ссылка.абс_Статус В (ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.Завершен), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером), ЗНАЧЕНИЕ(Перечисление.абс_СтатусыПервичныхДокументов.КорректировкаДокумента))
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ПоступлениеТоваровУслуг.абс_ЗакупочныйЗаказТЧ,
	//|	ПоступлениеТоваровУслуг.Ссылка.ДоговорКонтрагента
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ОстатокПоГрафику.Организация,
	//|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО КАК ЦФО,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.Ссылка) КАК Ссылка
	//|ПОМЕСТИТЬ ВТ_ПоследниеСправки
	//|ИЗ
	//|	ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	//|		ПО ВТ_ОстатокПоГрафику.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
	//|			И ВТ_ОстатокПоГрафику.ДоговорКонтрагента = абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента
	//|			И ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
	//|			И ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
	//|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ВидОперации = ЗНАЧЕНИЕ(Перечисление.абс_ВидыДокументовРНПД.ПоЦФО))
	//|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.Абс_СтатусыРПР.Согласован))
	//|			И (абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Проведен)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	//|	ВТ_ОстатокПоГрафику.Организация,
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ.ЦФО
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ВТ_ПоследниеСправки.Организация,
	//|	ВТ_ПоследниеСправки.ДоговорКонтрагента,
	//|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
	//|	ВТ_ПоследниеСправки.ЦФО,
	//|	МАКСИМУМ(ВТ_ПоследниеСправки.Ссылка) КАК Ссылка,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа) КАК НоменклатурнаяГруппа,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности) КАК ВидДеятельности,
	//|	МАКСИМУМ(абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат) КАК СтатьяЗатрат
	//|ПОМЕСТИТЬ ВТ_АналитикаПоследнихСправок
	//|ИЗ
	//|	ВТ_ПоследниеСправки КАК ВТ_ПоследниеСправки
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	//|		ПО ВТ_ПоследниеСправки.Организация = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.Организация
	//|			И ВТ_ПоследниеСправки.ДоговорКонтрагента = абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента
	//|			И ВТ_ПоследниеСправки.ЗакупочныйЗаказ = абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ
	//|			И ВТ_ПоследниеСправки.ЦФО = абс_РезервыПроизведенныхРасходовРезервы.Ссылка.ЦФО
	//|			И ВТ_ПоследниеСправки.Ссылка = абс_РезервыПроизведенныхРасходовРезервы.Ссылка
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_ПоследниеСправки.Организация,
	//|	ВТ_ПоследниеСправки.ДоговорКонтрагента,
	//|	ВТ_ПоследниеСправки.ЗакупочныйЗаказ,
	//|	ВТ_ПоследниеСправки.ЦФО
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СтатьяЗатрат) КАК СтатьяЗатрат2,
	//|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатрат) КАК СчетЗатрат,
	//|	МАКСИМУМ(ПоступлениеТоваровУслугУслуги.СчетЗатратНУ) КАК СчетЗатратНУ,
	//|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.Ссылка) КАК Ссылка,
	//|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ,
	//|	МАКСИМУМ(ВТ_ПоставкиПоЗЗ.ДоговорКонтрагента) КАК ДоговорКонтрагента,
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.СтатьиЗатрат
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.СтатьиЗатрат)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.СтатьиЗатрат
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.СтатьиЗатрат)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.СтатьиЗатрат
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)) = &ПустаяСтатьяЗатрат
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.СтатьяЗатрат
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.СтатьиЗатрат)
	//|					КОНЕЦ
	//|		КОНЕЦ) КАК СтатьяЗатрат,
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.НоменклатурныеГруппы)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.НоменклатурныеГруппы)
	//|					КОНЕЦ
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.НоменклатурныеГруппы
	//|				ТОГДА ВЫБОР
	//|						КОГДА (ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.НоменклатурныеГруппы)) = &ПустаяНГ
	//|							ТОГДА ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|						ИНАЧЕ ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.НоменклатурныеГруппы)
	//|					КОНЕЦ
	//|			ИНАЧЕ ПоступлениеТоваровУслугУслуги.НоменклатурнаяГруппа
	//|		КОНЕЦ) КАК НоменклатурнаяГруппа,
	//|	МАКСИМУМ(ВЫБОР
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто1 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	//|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто1 КАК Справочник.абс_ВидыДеятельностиКТТК)
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто2 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	//|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто2 КАК Справочник.абс_ВидыДеятельностиКТТК)
	//|			КОГДА ПоступлениеТоваровУслугУслуги.Субконто3 ССЫЛКА Справочник.абс_ВидыДеятельностиКТТК
	//|				ТОГДА ВЫРАЗИТЬ(ПоступлениеТоваровУслугУслуги.Субконто3 КАК Справочник.абс_ВидыДеятельностиКТТК)
	//|			ИНАЧЕ &ПустойВидДеятельности
	//|		КОНЕЦ) КАК ВидДеятельности
	//|ПОМЕСТИТЬ ВТ_ПоставкиАналитика
	//|ИЗ
	//|	ВТ_ПоставкиПоЗЗ КАК ВТ_ПоставкиПоЗЗ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПоступлениеТоваровУслуг.Услуги КАК ПоступлениеТоваровУслугУслуги
	//|		ПО ВТ_ПоставкиПоЗЗ.Ссылка = ПоступлениеТоваровУслугУслуги.Ссылка
	//|			И (ПоступлениеТоваровУслугУслуги.НомерСтроки = 1)
	//|
	//|СГРУППИРОВАТЬ ПО
	//|	ВТ_ПоставкиПоЗЗ.абс_ЗакупочныйЗаказ
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ,
	//|	ВТ_ОстатокПоГрафику.Контрагент,
	//|	ВТ_ОстатокПоГрафику.ВалютаДокумента,
	//|	ВТ_ОстатокПоГрафику.ЦФУ,
	//|	ВТ_ОстатокПоГрафику.БюджетнаяСтатья,
	//|	ВТ_ОстатокПоГрафику.СуммаОстаткаПоГрафику,
	//|	ВТ_ОстатокПоГрафику.СуммаРНП,
	//|	ВТ_ОстатокПоГрафику.СтавкаНДС,
	//|	ВТ_ОстатокПоГрафику.СуммаНДС,
	//|	ВТ_ОстатокПоГрафику.СуммаНДС КАК СуммаНДС_РПР,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
	//|	КОНЕЦ КАК СтатьяЗатратАвто,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.СтатьяЗатрат ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.СтатьяЗатрат = &ПустаяСтатьяЗатрат
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.СтатьяЗатрат
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.СтатьяЗатрат
	//|	КОНЕЦ КАК СтатьяЗатрат,
	//|	ВЫБОР
	//|		КОГДА ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	//|			ТОГДА ВЫБОР
	//|					КОГДА НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
	//|							И НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
	//|						ТОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
	//|					ИНАЧЕ ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
	//|				КОНЕЦ
	//|		ИНАЧЕ ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа
	//|	КОНЕЦ КАК НоменклатурнаяГруппаАвто,
	//|	ВЫБОР
	//|		КОГДА ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа = ЗНАЧЕНИЕ(Справочник.НоменклатурныеГруппы.ПустаяСсылка)
	//|			ТОГДА ВЫБОР
	//|					КОГДА НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа = &ПустаяНГ
	//|							И НЕ ВТ_ПоставкиАналитика.НоменклатурнаяГруппа ЕСТЬ NULL 
	//|						ТОГДА ВТ_ПоставкиАналитика.НоменклатурнаяГруппа
	//|					ИНАЧЕ ВТ_АналитикаПоследнихСправок.НоменклатурнаяГруппа
	//|				КОНЕЦ
	//|		ИНАЧЕ ВТ_ОстатокПоГрафику.НоменклатурнаяГруппа
	//|	КОНЕЦ КАК НоменклатурнаяГруппа,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
	//|	КОНЕЦ КАК Виддеятельности,
	//|	ВЫБОР
	//|		КОГДА ВТ_ПоставкиАналитика.ВидДеятельности ЕСТЬ NULL 
	//|				ИЛИ ВТ_ПоставкиАналитика.ВидДеятельности = &ПустойВидДеятельности
	//|			ТОГДА ВТ_АналитикаПоследнихСправок.ВидДеятельности
	//|		ИНАЧЕ ВТ_ПоставкиАналитика.ВидДеятельности
	//|	КОНЕЦ КАК ВидДеятельностиАвто,
	//|	ВТ_ПоставкиАналитика.СчетЗатрат КАК СчетЗатратАвтоБУ,
	//|	ВТ_ПоставкиАналитика.СчетЗатратНУ КАК СчетЗатратАвтоНУ,
	//|	ВТ_ПоставкиАналитика.СчетЗатрат КАК СчетЗатратБУ,
	//|	ВТ_ПоставкиАналитика.СчетЗатратНУ КАК СчетЗатратНУ,
	//|	ВТ_ОстатокПоГрафику.ДоговорКонтрагента,
	//|	ИСТИНА КАК Учитывать,
	//|	ВТ_ОстатокПоГрафику.абс_ТипСети,
	//|	ВТ_ОстатокПоГрафику.абс_КВ,
	//|	ВТ_ОстатокПоГрафику.абс_ТЭО,
	//|	ВЫБОР
	//|		КОГДА ВТ_ОстатокПоГрафику.ttk_ОбъектБюджетирования = ЗНАЧЕНИЕ(СПравочник.ttk_ОбъектыБюджетирования.ПустаяСсылка)
	//|			ТОГДА ttk_ОбъектыБюджетирования.Ссылка
	//|		ИНАЧЕ ВТ_ОстатокПоГрафику.ttk_ОбъектБюджетирования
	//|	КОНЕЦ КАК ttk_ОбъектБюджетирования,
	//|	ВТ_ОстатокПоГрафику.ttk_Город,
	//|	ВТ_ОстатокПоГрафику.ttk_ПериодВозникновенияЗадолженности
	//|ИЗ
	//|	ВТ_ОстатокПоГрафику КАК ВТ_ОстатокПоГрафику
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ПоставкиАналитика КАК ВТ_ПоставкиАналитика
	//|		ПО ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = ВТ_ПоставкиАналитика.абс_ЗакупочныйЗаказ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АналитикаПоследнихСправок КАК ВТ_АналитикаПоследнихСправок
	//|		ПО ВТ_ОстатокПоГрафику.ЗакупочныйЗаказ = ВТ_АналитикаПоследнихСправок.ЗакупочныйЗаказ
	//|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ttk_ОбъектыБюджетирования КАК ttk_ОбъектыБюджетирования
	//|		ПО ВТ_ОстатокПоГрафику.Организация = ttk_ОбъектыБюджетирования.Организация");
	//
	//
	//Запрос.УстановитьПараметр("Организация"					, Объект.Организация);
	//Запрос.УстановитьПараметр("ЦФО"							, Объект.ЦФО);
	//Запрос.УстановитьПараметр("ПериодПоставки"				, Объект.ПериодНачисления);
	//Запрос.УстановитьПараметр("СтатусыЗЗ"					, Перечисления.абсСтатусЗакупочногоЗаказа.Согласован);
	//Запрос.УстановитьПараметр("Дирекция"					, Объект.Дирекция);
	//Запрос.УстановитьПараметр("ТекДата"						, ТекущаяДата());
	//Запрос.УстановитьПараметр("ПустойВидДеятельности"		, Справочники.абс_ВидыДеятельностиКТТК.ПустаяСсылка());
	//Запрос.УстановитьПараметр("ПустаяНГ"					, Справочники.НоменклатурныеГруппы.ПустаяСсылка());
	//Запрос.УстановитьПараметр("ПустаяСтатьяЗатрат"			, Справочники.СтатьиЗатрат.ПустаяСсылка());
	#КонецОбласти
	//- Машута А. 16.10.2018 задача 845 
	
	СчетРПРБУ = ПланыСчетов.Хозрасчетный.НайтиПоКоду("60.04");
	СчетРПРБУПрошлыйГод = ПланыСчетов.Хозрасчетный.НайтиПоКоду("91.02.1");
	СчетРПРНУПрошлыйГод = ПланыСчетов.Налоговый.НайтиПоКоду("91.02.7");


	СчетРПРНУ = ПланыСчетов.Налоговый.НайтиПоКоду("ПВ");
	
	СчетНДС	= ПланыСчетов.Хозрасчетный.НайтиПоКоду("19.УН");

	Результат = Запрос.Выполнить().Выгрузить();
	Для Каждого Стр Из   Результат Цикл
		
		Отбор = Новый Структура;
		Отбор.Вставить("ttk_ПериодВозникновенияЗадолженности" ,Стр.ttk_ПериодВозникновенияЗадолженности);
		Отбор.Вставить("абс_ТипСети",Стр.абс_ТипСети);
		Отбор.Вставить("абс_КВ" ,Стр.абс_КВ);
		Отбор.Вставить("абс_ТЭО",Стр.абс_ТЭО);
		Отбор.Вставить("ttk_ОбъектБюджетирования",Стр.ttk_ОбъектБюджетирования);
		Отбор.Вставить("БюджетнаяСтатья",Стр.БюджетнаяСтатья);
		Отбор.Вставить("ЦФУ" ,Стр.ЦФУ);
		Отбор.Вставить("ttk_ПериодВозникновенияЗадолженности",Стр.ttk_ПериодВозникновенияЗадолженности);
		Отбор.Вставить("ЗакупочныйЗаказ",Стр.ЗакупочныйЗаказ);
		
		НайденыеСтроки = Объект.Резервы.НайтиСтроки(Отбор);
		
		Если НайденыеСтроки.Количество() = 0 Тогда
			НоваяСтрока = Объект.Резервы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,Стр);
			Если НачалоГода(Стр.ttk_ПериодВозникновенияЗадолженности) = НачалоГода(Объект.ПериодНачисления) Тогда
				
				НоваяСтрока.Курс                = 1;
				НоваяСтрока.Кратность			= 1;
				
				НоваяСтрока.СчетУчетаРПРБУ		= СчетРПРБУ;
				НоваяСтрока.СчетУчетаРПРНУ		= СчетРПРНУ;
				
				НоваяСтрока.СчетУчетаНДС		= СчетНДС;
			Иначе
				
				НоваяСтрока.Курс                = 1;
				НоваяСтрока.Кратность			= 1;
				
				НоваяСтрока.СчетУчетаРПРБУ		= СчетРПРБУ;
				НоваяСтрока.СчетУчетаРПРНУ		= СчетРПРНУ;
				
				НоваяСтрока.СчетУчетаНДС		= СчетНДС;

				НоваяСтрока.СчетЗатратБУ = СчетРПРБУПрошлыйГод;
				НоваяСтрока.СчетЗатратНУ = СчетРПРНУПрошлыйГод;
				
			КонецЕсли;
			
	КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПодкраску(Команда)
	    //ххх Брель Виктор Андреевич 25.04.2018 19:16:08, заявка <<<
	 УстановитьУсловноеОформление();	 		
		// Брель Виктор Андреевич 25.04.2018 19:16:08 >>>
КонецПроцедуры

&НаКлиенте
Процедура СверкаАналитикНадписьНажатие(Элемент)
	Попытка	
		ВнешнийОтчет =  Справочники.ВнешниеОбработки.НайтиПоНаименованию("Сверка аналитик УН",истина,,);
		
		Если ЗначениеЗаполнено(ВнешнийОтчет) Тогда			
	
			ИмяФайла = ПолучитьИмяВременногоФайла();
			ДвоичныеДанные = ВнешнийОтчет.ХранилищеВнешнейОбработки.Получить();
			ДвоичныеДанные.Записать(ИмяФайла);	
			Отчет = ВнешниеОтчеты.Создать(ИмяФайла);			
			Параметр = Отчет.КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("Ссылка");
			Параметр.Значение = Объект.Ссылка;
			Параметр.Использование = Истина;
			Форма = Отчет.ПолучитьФорму();
			Форма.Открыть();
			Отчет.СкомпоноватьРезультат(Форма.ЭлементыФормы.Результат)
			
		КонецЕсли; 
	Исключение
		ttk_ОбщегоНазначения.СообщитьОбОшибке(ИнформацияОбОшибке());
	КонецПопытки;
	


КонецПроцедуры

&НаСервере
Процедура ПроверитьНаОшибкиНаСервере()
	НачатьТранзакцию();
	ОбъектДок  = РеквизитФормыВЗначение("Объект");
	
	ОбъектДок.СформироватьДвиженияПоГрафикуПоставок (ОбъектДок.ВидОперации,ЛОЖЬ);				
	ОбъектДок.СформироватьДвиженияПоКонтролируемыеЗначенияБюджетов (ОбъектДок.ВидОперации,ЛОЖЬ);				
	Если ОбъектДок.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции  Тогда
		// Контроль Графика Поступлений
		ОбъектДок.КонтрольОтрицательныхОстатковПоГрафикуПоступлений(ЛОЖЬ);
		// Контроль Контролируемые Значения Бюджетов
		ОбъектДок.КонтрольЛимитов(ЛОЖЬ);	
	ИначеЕсли ОбъектДок.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО  Тогда
		// Контроль Графика Поступлений
		//КонтрольОтрицательныхОстатковПоГрафикуПоступлений(Отказ);
		// Контроль Контролируемые Значения Бюджетов
		//КонтрольЛимитов(Отказ);		
	КонецЕсли;
	ОтменитьТранзакцию();
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНаОшибки(Команда)
	ПроверитьНаОшибкиНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура РезервыСуммаАвансаПоДоговоруПриИзменении(Элемент)
	 //ххх Брель Виктор Андреевич 25.05.2018 15:49:50, заявка <<<	 
	ТекущиеДанные= Элементы.Резервы.ТекущиеДанные;
	ТекущиеДанные.СтавкаНДСАвансаПоДоговору = Элементы.Резервы.ТекущиеДанные.СтавкаНДС;
	ТекущиеДанные.СуммаНДСАвансаПоДоговору = ТекущиеДанные.СуммаАвансаПоДоговору   *УчетНДС.ПолучитьСтавкуНДС(Элементы.Резервы.ТекущиеДанные.СтавкаНДС) /(УчетНДС.ПолучитьСтавкуНДС(Элементы.Резервы.ТекущиеДанные.СтавкаНДС)+100);
	// Вставить содержимое обработчика.	 
	 // Брель Виктор Андреевич 25.05.2018 15:49:50 >>>
КонецПроцедуры
// Брель Виктор Андреевич 23.04.2018 15:02:34 >>>

