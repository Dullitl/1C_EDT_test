Процедура ЗаполнитьСписокДоступныхСтатусов(РПРСсылка, СписокСтатусов) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РПРСсылка) Тогда
		СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Подготовка);
		Возврат;
	КонецЕсли;
	
	СписокСтатусов.Очистить();
	
	мТекущийПользователь 	= глЗначениеПеременной("глТекущийПользователь");
	мРолиПользователя 		= абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь, РПРСсылка.Организация);
	
	ЭтоСуперпользователь 	= НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СуперПользовательРНПД) = Неопределено;
	
	ТекСтатус = РПРСсылка.Статус;
	
	СписокСтатусов.Добавить(ТекСтатус);
	
	//СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Исполнение);
	
	// АБС Изменение Родин Отключение бизнес-процессов 110314	
	СогласованиеБезБП 	= глЗначениеПеременной("абс_СогласованиеБезБП");

	
	Если РПРСсылка.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции Тогда
		
		Если ТекСтатус = Перечисления.абс_СтатусыРПР.Подготовка И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.ИнициаторРНПД) = Неопределено И РПРСсылка.Ответственный = мТекущийПользователь) ИЛИ ЭтоСуперпользователь) Тогда
			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.УтверждениеРуководителемЦФО);
			
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.УтверждениеРуководителемЦФО И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.ОтветственныйЦФОРНПД) = Неопределено) ИЛИ ЭтоСуперпользователь) Тогда
			
			
			Если СогласованиеБезБП Тогда 	
				МассивИсполнителей = абс_БизнесПроцессы.ПолучитьОтветственныхРНПД(РПРСсылка.Организация, Перечисления.абс_ВидыДокументовРНПД.ПоЦФО, РПРСсылка.ЦФО, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
				Если МассивИсполнителей.Найти(мТекущийПользователь) <> Неопределено Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Согласован);
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);
				КонецЕсли;
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Согласован);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);
			КонецЕсли;	
			
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.Отказ И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.ИнициаторРНПД) = Неопределено И РПРСсылка.Ответственный = мТекущийПользователь) ИЛИ ЭтоСуперпользователь) Тогда
			
			Если СогласованиеБезБП Тогда 	
				МассивИсполнителей = абс_БизнесПроцессы.ПолучитьОтветственныхРНПД(РПРСсылка.Организация, Перечисления.абс_ВидыДокументовРНПД.ПоЦФО, РПРСсылка.ЦФО, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
				
				Если МассивИсполнителей.Найти(мТекущийПользователь) <> Неопределено Тогда
					СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Подготовка);
				КонецЕсли;
			Иначе
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Подготовка);
			КонецЕсли;
			
		//АБС ВСТАВКА №31839 НАЧАЛО «6 марта 2015 г.», Пополитов	
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.Согласован И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.ИнициаторРНПД) = Неопределено И РПРСсылка.Ответственный = мТекущийПользователь) ИЛИ ЭтоСуперпользователь) Тогда	
			абс_ДобавитьСтатусОтказ(РПРСсылка, СписокСтатусов);	
		//\\АБС ВСТАВКА №31839 КОНЕЦ	
			
		КонецЕсли;		
		// АБС Изменение Родин Отключение бизнес-процессов 110314
		
	ИначеЕсли РПРСсылка.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоЦФО Тогда
		
		Если ТекСтатус = Перечисления.абс_СтатусыРПР.Подготовка И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.ОтветственныйЦФОРНПД) = Неопределено И РПРСсылка.Ответственный = мТекущийПользователь) ИЛИ ЭтоСуперпользователь) Тогда
			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.СогласованиеДФМ);
			
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.СогласованиеДФМ И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.СогласованиеДФМРНПД) = Неопределено) ИЛИ ЭтоСуперпользователь) Тогда
		//АБС ВСТАВКА №31841 НАЧАЛО «3 марта 2015 г.», Пополитов
		//
		//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов);
		//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ); 
		//
		//ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.БухгалтерРНПД) = Неопределено) ИЛИ ЭтоСуперпользователь) Тогда
		//	
		//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.ОбработкаБухгалтером);
		//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);					
		//	
		//ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.ОбработкаБухгалтером И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.БухгалтерРНПД) = Неопределено) ИЛИ ЭтоСуперпользователь) Тогда
		//	
		//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Согласован);
		//	СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);	
		
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.ОбработкаБухгалтером);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);
					
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.ОбработкаБухгалтером И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.БухгалтерРНПД) = Неопределено) ИЛИ ЭтоСуперпользователь) Тогда
			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);					
			
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.БухгалтерРНПД) = Неопределено) ИЛИ ЭтоСуперпользователь) Тогда
			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Согласован);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);		
		//\\АБС ВСТАВКА №31841 КОНЕЦ	
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.Отказ И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.ИнициаторРНПД) = Неопределено И РПРСсылка.Ответственный = мТекущийПользователь) ИЛИ ЭтоСуперпользователь) Тогда
			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Подготовка);
			
		//АБС ВСТАВКА 37908  05.02.2014 18:06:45  Тупиков
		ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыРПР.Согласован И ((НЕ мРолиПользователя.Найти(Справочники.РолиИсполнителей.БухгалтерРНПД) = Неопределено) ИЛИ ЭтоСуперпользователь) Тогда
			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);		
		//АБС ВСТАВКА 37908 КОНЕЦ
		
		КонецЕсли;		
		
	КонецЕсли;	
	
КонецПроцедуры

//АБС ВСТАВКА №31839 НАЧАЛО «6 марта 2015 г.», Пополитов
Процедура абс_ДобавитьСтатусОтказ(РПРСсылка, СписокСтатусов)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ЦФО",РПРСсылка.ЦФО);
	Запрос.УстановитьПараметр("Организация",РПРСсылка.Организация);
	Запрос.УстановитьПараметр("ПериодНачисления",НачалоМесяца(РПРСсылка.ПериодНачисления));
	Запрос.УстановитьПараметр("ВидОперации",Перечисления.абс_ВидыДокументовРНПД.ПоЦФО);
	Запрос.УстановитьПараметр("Статус",Перечисления.абс_СтатусыРПР.Отказ);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	               |	абс_РезервыПроизведенныхРасходов.Ссылка
	               |ИЗ
	               |	Документ.абс_РезервыПроизведенныхРасходов КАК абс_РезервыПроизведенныхРасходов
	               |ГДЕ
	               |	абс_РезервыПроизведенныхРасходов.Организация = &Организация
	               |	И НАЧАЛОПЕРИОДА(абс_РезервыПроизведенныхРасходов.ПериодНачисления, МЕСЯЦ) = &ПериодНачисления
	               |	И НЕ абс_РезервыПроизведенныхРасходов.Статус В (&Статус)
	               |	И абс_РезервыПроизведенныхРасходов.ЦФО = &ЦФО
	               |	И абс_РезервыПроизведенныхРасходов.ВидОперации = &ВидОперации";
	Если не Запрос.Выполнить().Пустой() Тогда
		Возврат;
	КонецЕсли;	   
	
	СписокСтатусов.Добавить(Перечисления.абс_СтатусыРПР.Отказ);
	
КонецПроцедуры
//\\АБС ВСТАВКА №31839 КОНЕЦ

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "СправкаОНачисленииРасходов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "СправкаОНачисленииРасходов", "Справка о начислении расходов", ПечатьСправки(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;

КонецПроцедуры

Функция ПечатьСправки(МассивОбъектов, ОбъектыПечати)
	
	Макет = ПолучитьМакет("СправкаОНачисленииРасходов");
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	НомерСтрокиНачало = 1;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РезервыПроизводственныхРасходов_Справка";
	ЭтоПервыйОбъект = Истина;

	ЗапросШапка = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_РезервыПроизведенныхРасходов.Организация,
	|	абс_РезервыПроизведенныхРасходов.ЦФО,
	|	абс_РезервыПроизведенныхРасходов.ЦФО.Код,
	|	абс_РезервыПроизведенныхРасходов.ПериодНачисления,
	|	абс_РезервыПроизведенныхРасходов.Ссылка,
	|	абс_РезервыПроизведенныхРасходов.ОтветственныйБухгалтер,
	|	абс_РезервыПроизведенныхРасходов.РуководительПодразделения,
	|	абс_РезервыПроизведенныхРасходов.ПодразделениеОрганизации,
	|	абс_РезервыПроизведенныхРасходов.Дата
	|ИЗ
	|	Документ.абс_РезервыПроизведенныхРасходов КАК абс_РезервыПроизведенныхРасходов
	|ГДЕ
	|	абс_РезервыПроизведенныхРасходов.Ссылка В(&Ссылка)");
	
	ЗапросШапка.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	ЗапросСтроки = Новый Запрос(
	"ВЫБРАТЬ
	|	абс_РезервыПроизведенныхРасходовРезервы.Контрагент,
	|	абс_РезервыПроизведенныхРасходовРезервы.Контрагент.Код,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЗакупочныйЗаказ.Номер,
	|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья,
	|	абс_РезервыПроизведенныхРасходовРезервы.БюджетнаяСтатья.Код,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.ЦФУ.Код,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратАвтоБУ КАК СчетЗатратБУАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.СчетЗатратБУ КАК СчетЗатратБУ,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатратАвто,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатратАвто.Код,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат,
	|	абс_РезервыПроизведенныхРасходовРезервы.СтатьяЗатрат.Код,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС_РПР КАК СуммаНДС,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП,
	|	абс_РезервыПроизведенныхРасходовРезервы.СуммаРНП + абс_РезервыПроизведенныхРасходовРезервы.СуммаНДС_РПР КАК СуммаВсего,
	|	абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента,
	|	абс_РезервыПроизведенныхРасходовРезервы.ДоговорКонтрагента.Код,
	|	ВЫБОР
	|		КОГДА абс_РезервыПроизведенныхРасходовРезервы.УчитыватьАванс
	|			ТОГДА абс_РезервыПроизведенныхРасходовРезервы.СуммаАвансаПоДоговору
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаАвансаПоДоговору,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа,
	|	абс_РезервыПроизведенныхРасходовРезервы.НоменклатурнаяГруппа.Код,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности,
	|	абс_РезервыПроизведенныхРасходовРезервы.ВидДеятельности.Код
	|ИЗ
	|	Документ.абс_РезервыПроизведенныхРасходов.Резервы КАК абс_РезервыПроизведенныхРасходовРезервы
	|ГДЕ
	|	абс_РезервыПроизведенныхРасходовРезервы.Ссылка В(&Ссылка)
	|	И абс_РезервыПроизведенныхРасходовРезервы.Учитывать");
	
	ЗапросСтроки.УстановитьПараметр("Ссылка", МассивОбъектов);
	
	ВыборкаШапка = ЗапросШапка.Выполнить().Выбрать();
	
	ВыборкаШапка.Следующий();
	
	ОбластьШапка 				= Макет.ПолучитьОбласть("ОбластьШапка");
	ОбластьЗаголовокТаблицы 	= Макет.ПолучитьОбласть("ОбластьЗаголовокТаблицы");
	ОбластьСтрокаТаблицы 		= Макет.ПолучитьОбласть("ОбластьСтрокаТаблицы");
	ОбластьПодвалТаблицы 		= Макет.ПолучитьОбласть("ОбластьПодвалТаблицы");
	ОбластьПодвал 				= Макет.ПолучитьОбласть("ОбластьПодвал");
		
	ПредставлениеЦФО 			= СокрЛП(ВыборкаШапка.ЦФО) + " (" + СокрЛП(ВыборкаШапка.ЦФОКод) + ")"; 
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаШапка);
	ОбластьШапка.Параметры.ПредставлениеЦФО = ПредставлениеЦФО;
	ТабДокумент.Вывести(ОбластьШапка);
	
	ТабДокумент.Вывести(ОбластьЗаголовокТаблицы);
	
	НомерСтроки = 0;
	
	СуммаРНПИтог 				= 0;
	СуммаНДСИтог 				= 0;	
	СуммаВсегоИтог 				= 0;
	СуммаАвансаПоДоговоруИтог 	= 0;
	
	ВыборкаСтроки = ЗапросСтроки.Выполнить().Выбрать();
	
	Пока ВыборкаСтроки.Следующий() Цикл
		
		НомерСтроки = НомерСтроки + 1;
		
		СуммаРНПИтог 				= СуммаРНПИтог + ВыборкаСтроки.СуммаРНП;
		СуммаНДСИтог 				= СуммаНДСИтог + ВыборкаСтроки.СуммаНДС;
		СуммаВсегоИтог 				= СуммаВсегоИтог + ВыборкаСтроки.СуммаВсего;
		СуммаАвансаПоДоговоруИтог 	= СуммаАвансаПоДоговоруИтог + ВыборкаСтроки.СуммаАвансаПоДоговору;
					
		ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
		
		//Контрагент, Договор, ЦФУ, БюджетнаяСтатья, СтатьяЗатратАвто, СтатьяЗатрат
		ОбластьСтрокаТаблицы.Параметры.ПредставлениеКонтрагента 			= ?(ЗначениеЗаполнено(ВыборкаСтроки.Контрагент)				, СокрЛП(ВыборкаСтроки.Контрагент) 				+ " (" + СокрЛП(ВыборкаСтроки.КонтрагентКод) + ")"		, "");
		ОбластьСтрокаТаблицы.Параметры.ПредставлениеДоговораКонтрагента 	= ?(ЗначениеЗаполнено(ВыборкаСтроки.ДоговорКонтрагента)		, СокрЛП(ВыборкаСтроки.ДоговорКонтрагента) 		+ " (" + СокрЛП(ВыборкаСтроки.ДоговорКонтрагентаКод) + ")"	, "");
		//ОбластьСтрокаТаблицы.Параметры.ПредставлениеЦФУ 					= ?(ЗначениеЗаполнено(ВыборкаСтроки.ЦФУ)					, СокрЛП(ВыборкаСтроки.ЦФУ) 					+ " (" + СокрЛП(ВыборкаСтроки.ЦФУКод) + ")"			, "");
		//ОбластьСтрокаТаблицы.Параметры.ПредставлениеБюджетнаяСтатья 		= ?(ЗначениеЗаполнено(ВыборкаСтроки.БюджетнаяСтатья)		, СокрЛП(ВыборкаСтроки.БюджетнаяСтатья) 		+ " (" + СокрЛП(ВыборкаСтроки.БюджетнаяСтатьяКод) + ")"		, "");
		//ОбластьСтрокаТаблицы.Параметры.ПредставлениеСтатьяЗатратАвто 		= ?(ЗначениеЗаполнено(ВыборкаСтроки.СтатьяЗатратАвто)		, СокрЛП(ВыборкаСтроки.СтатьяЗатратАвто) 		+ " (" + СокрЛП(ВыборкаСтроки.СтатьяЗатратАвтоКод) + ")"	, "");
		ОбластьСтрокаТаблицы.Параметры.ПредставлениеСтатьяЗатрат 			= ?(ЗначениеЗаполнено(ВыборкаСтроки.СтатьяЗатрат)			, СокрЛП(ВыборкаСтроки.СтатьяЗатрат) 			+ " (" + СокрЛП(ВыборкаСтроки.СтатьяЗатратКод) + ")"		, "");		
		ОбластьСтрокаТаблицы.Параметры.ПредставлениеНоменклатурнаяГруппа 	= ?(ЗначениеЗаполнено(ВыборкаСтроки.НоменклатурнаяГруппа)	, СокрЛП(ВыборкаСтроки.НоменклатурнаяГруппа)	+ " (" + СокрЛП(ВыборкаСтроки.НоменклатурнаяГруппаКод) + ")"		, "");		
		ОбластьСтрокаТаблицы.Параметры.ПредставлениеВидДеятельности 		= ?(ЗначениеЗаполнено(ВыборкаСтроки.ВидДеятельности)		, СокрЛП(ВыборкаСтроки.ВидДеятельности) 		+ " (" + СокрЛП(ВыборкаСтроки.ВидДеятельностиКод) + ")"		, "");		
		
		ОбластьСтрокаТаблицы.Параметры.НомерСтроки = НомерСтроки;
		
		ТабДокумент.Вывести(ОбластьСтрокаТаблицы);
		
	КонецЦикла;
	
	ОбластьПодвалТаблицы.Параметры.СуммаРНПИтог 				= СуммаРНПИтог;
	ОбластьПодвалТаблицы.Параметры.СуммаНДСИтог 				= СуммаНДСИтог;
	ОбластьПодвалТаблицы.Параметры.СуммаВсегоИтог 				= СуммаВсегоИтог;
	ОбластьПодвалТаблицы.Параметры.СуммаАвансаПоДоговоруИтог 	= СуммаАвансаПоДоговоруИтог;
	
	ТабДокумент.Вывести(ОбластьПодвалТаблицы);
	
	ОбластьПодвал.Параметры.Заполнить(ВыборкаШапка);
	
	ТабДокумент.Вывести(ОбластьПодвал);
		
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаШапка.Ссылка);
	
	ТабДокумент.ПолеСверху = 20;
	ТабДокумент.ПолеСлева = 20;
	ТабДокумент.ПолеСлева = 5;
	ТабДокумент.ПолеСнизу = 5;
	ТабДокумент.РазмерКолонтитулаСверху = 0;
	ТабДокумент.РазмерКолонтитулаСнизу = 0;

	Возврат ТабДокумент;
	
	
КонецФункции


