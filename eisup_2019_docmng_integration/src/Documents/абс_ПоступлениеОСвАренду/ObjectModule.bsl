Перем мУдалятьДвижения;

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕМЕННЫЕ МОДУЛЯ
Перем Счет;
Перем Содержание;

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ

//Функция осуществляет проверку реквизитов шапки документа
//
Функция ПроверитьШапкуДокумента()
	
	Если ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_ЕМЦСС Тогда
		
		Счет = ПланыСчетов.ЗабалансовыйУчет.СегментСетиЕМЦССМПСРФ;
		Содержание = "Поступление ОС в составе ЕМЦСС, получ.по экспл.соглашению, принадл. РЖД";
		
	ИначеЕсли (ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Аренда) 
		ИЛИ (ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Хранение) Тогда
		
		Если Не ЗначениеЗаполнено(Сотрудник) Тогда
			Сообщить("Не указан сотрудник");
			Возврат Истина;	
		КонецЕсли;	
		
		Если ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Аренда Тогда
			
			Счет =  ПланыСчетов.ЗабалансовыйУчет.АрендованныеОС;
			Содержание = "Поступление ОС полученных в аренду";
			
		ИначеЕсли ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Хранение Тогда
			
			Счет = ПланыСчетов.ЗабалансовыйУчет.ОСНаОтветХранении;
			Содержание = "Поступление ОС полученных в эксплуатацию или ответхранение";
			
		КонецЕсли;
	ИначеЕсли ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Лизинг Тогда
		
		    Счет = ПланыСчетов.ЗабалансовыйУчет.ЛизинговоеИмущество;//СчетПоКоду("001.6");
			Содержание = "Поступление ОС полученных в лизинг";
			
	Иначе
		Сообщить("Ошибка в реквизите ""Вид полученных ценностей""");
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

// Функция осуществляет проверку реквизитов табличной части "ОС" документа
//
Функция ПроверитьТабличнуюЧасть()
	
	ЕстьОшибки = Ложь;
	
	Для Каждого СтрокаТабличнойЧасти Из ОС Цикл
		
		//АБС+
		Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Счет) И Счет = ПланыСчетов.ЗабалансовыйУчет.ПустаяСсылка() Тогда
			Сообщить("В строке №"+СтрокаТабличнойЧасти.НомерСтроки +" не указан счет учета"+Символы.ПС);
			ЕстьОшибки = Истина;
		КонецЕсли;
		//АБС-
		
		Если ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_ЕМЦСС Тогда
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Сегмент) Тогда
				Сообщить("В строке №"+СтрокаТабличнойЧасти.НомерСтроки +" не указан Сегмент"+Символы.ПС);
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ОборудованиеЕМЦСС) Тогда
				Сообщить("В строке №"+СтрокаТабличнойЧасти.НомерСтроки +" не указан ОборудованиеЕМЦСС"+Символы.ПС);
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.МестоХранения) Тогда
				Сообщить("В строке №"+СтрокаТабличнойЧасти.НомерСтроки +" не указано место хранения"+Символы.ПС);
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			
		ИначеЕсли (ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Аренда) 
			ИЛИ (ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Хранение) Тогда
			
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.АрендованноеОС) Тогда
				Сообщить("В строке №"+СтрокаТабличнойЧасти.НомерСтроки +" не указано арендованное ОС"+Символы.ПС);
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			
		ИначеЕсли ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Лизинг Тогда
			
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.ОС) Тогда
				Сообщить("В строке №"+СтрокаТабличнойЧасти.НомерСтроки +" не указано ОС"+Символы.ПС);
				ЕстьОшибки = Истина;
			КонецЕсли;
			
			
			Если Не ЗначениеЗаполнено(СтрокаТабличнойЧасти.Оборудование) Тогда
				Сообщить("В строке №"+СтрокаТабличнойЧасти.НомерСтроки +" не указано Оборудование"+Символы.ПС);
				ЕстьОшибки = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ЕстьОшибки;
	
КонецФункции

//АБС+
Функция ЗаполнитьСчетУчетаВТабличнойЧасти(СтрокаТабличнойЧасти) Экспорт 
	
	Если ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_ЕМЦСС Тогда
		
		СтрокаТабличнойЧасти.Счет = ПланыСчетов.ЗабалансовыйУчет.СегментСетиЕМЦССМПСРФ;
		
	ИначеЕсли ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Аренда Тогда
		
		СтрокаТабличнойЧасти.Счет =  ПланыСчетов.ЗабалансовыйУчет.АрендованныеОС;
		
	ИначеЕсли ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Хранение Тогда
		
		СтрокаТабличнойЧасти.Счет = ПланыСчетов.ЗабалансовыйУчет.ОСНаОтветХранении;
		
	ИначеЕсли ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Лизинг Тогда
		
		СтрокаТабличнойЧасти.Счет = ПланыСчетов.ЗабалансовыйУчет.ЛизинговоеИмущество;//СчетПоКоду("001.6");
		
	КонецЕсли;
	
КонецФункции
//АБС-

///////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ДЛЯ ОБЕСПЕЧЕНИЯ ПРОВЕДЕНИЯ ДОКУМЕНТА

// Процедура - обработчик события "Обработка проведения" 
//
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	Если мУдалятьДвижения Тогда
		ttk_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	Отказ = ПроверитьШапкуДокумента();
	
	Если Не Отказ Тогда
		Отказ = ПроверитьТабличнуюЧасть();
	КонецЕсли;
	
	Если Не Отказ Тогда	
		Для Каждого СтрокаОС Из ОС Цикл
				
				Движение = Движения.ЗабалансовыйУчет.Добавить();
				Движение.ДатаЗаписи   = Дата;
				Движение.Организация  = Организация;
				Движение.Период       = Дата;
				Движение.СчетДт       = ?(ЗначениеЗаполнено(СтрокаОС.Счет), СтрокаОС.Счет, Счет);   //АБС+
				Движение.Регистратор  = Ссылка;
				Движение.КоличествоДт = СтрокаОС.Количество;
				Движение.Сумма        = СтрокаОС.Сумма;
				Движение.Содержание   = Содержание;
				
			Если ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_ЕМЦСС Тогда
				
				Движение.СубконтоДт.АБС_ДобСегмент = СтрокаОС.Сегмент;
				Движение.СубконтоДт.АБС_ДобОборудование = СтрокаОС.ОборудованиеЕМЦСС;
				Движение.СубконтоДт.Склады = СтрокаОС.МестоХранения;
				
			ИначеЕсли ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Аренда ИЛИ
				ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Хранение Тогда
				
				Движение.СубконтоДт.АБС_ОСАрендованные = СтрокаОС.АрендованноеОС;
				Движение.СубконтоДт.РаботникиОрганизации = Сотрудник;
				Движение.СубконтоДт.Контрагенты = Поставщик;
				
				
			ИначеЕсли	ВидЦенностей = Перечисления.абс_ВидыЦенностей.ОС_Лизинг Тогда
				
				Движение.СубконтоДт.Номенклатура = СтрокаОС.Оборудование;
				Движение.СубконтоДт.ОсновныеСредства = СтрокаОС.ОС;
				Движение.СубконтоДт.Контрагенты = Поставщик;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Процедура  - обработчик события "Перед записью"
//
Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
   
	 
	мУдалятьДвижения = НЕ ЭтоНовый();

	СуммаДокумента = ОС.Итог("Сумма");
	
КонецПроцедуры  // ПередЗаписью

Счет = ПланыСчетов.ЗабалансовыйУчет.ПустаяСсылка();
Содержание = "";