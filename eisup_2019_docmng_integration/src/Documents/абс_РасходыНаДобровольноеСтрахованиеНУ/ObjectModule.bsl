
Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	ПроводкиНУ 	= Движения.Налоговый;
	ЗатратыНУ 	= Движения.ЗатратыНалоговыйУчет;
	
	ПроводкиНУ.Очистить();
	ЗатратыНУ.Очистить();
	
	Для Каждого СтрЗатрата Из Затраты Цикл
		
		Если СтрЗатрата.СуммаНУ = 0 И СтрЗатрата.СуммаВР = 0 И СтрЗатрата.СуммаПР = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// По проводкам
		Для Каждого ТекВидУчета Из Перечисления.ВидыУчетаПоПБУ18 Цикл
			
			ТекСуммаПоВидуУчета = 0;
			
			Если ТекВидУчета = Перечисления.ВидыУчетаПоПБУ18.НУ Тогда
				ТекСуммаПоВидуУчета = СтрЗатрата.СуммаНУ;
			ИначеЕсли ТекВидУчета = Перечисления.ВидыУчетаПоПБУ18.ВР Тогда
				ТекСуммаПоВидуУчета = СтрЗатрата.СуммаВР;
			ИначеЕсли ТекВидУчета = Перечисления.ВидыУчетаПоПБУ18.ПР Тогда
				ТекСуммаПоВидуУчета = СтрЗатрата.СуммаПР;
			КонецЕсли;
			
			Если ТекСуммаПоВидуУчета = 0 Тогда
				Продолжить;
			КонецЕсли;			
			
			Проводка = ПроводкиНУ.Добавить();
			
			Проводка.Период = Дата;
			Проводка.Организация = Организация;
			
			Проводка.СчетДт = СтрЗатрата.СчетДт;
			
			Если Проводка.СчетДт.ВидыСубконто.Количество() > 0 Тогда
				Проводка.СубконтоДт[Проводка.СчетДт.ВидыСубконто[0].ВидСубконто] = СтрЗатрата.СубконтоДт1;
			КонецЕсли;
			
			Если Проводка.СчетДт.ВидыСубконто.Количество() > 1 Тогда
				Проводка.СубконтоДт[Проводка.СчетДт.ВидыСубконто[1].ВидСубконто] = СтрЗатрата.СубконтоДт2;
			КонецЕсли;
			
			Если Проводка.СчетДт.ВидыСубконто.Количество() > 2 Тогда
				Проводка.СубконтоДт[Проводка.СчетДт.ВидыСубконто[2].ВидСубконто] = СтрЗатрата.СубконтоДт3;
			КонецЕсли;
					
			Проводка.СчетКт = СтрЗатрата.СчетКт;
			
			Если Проводка.СчетКт.ВидыСубконто.Количество() > 0 Тогда
				Проводка.СубконтоКт[Проводка.СчетКт.ВидыСубконто[0].ВидСубконто] = СтрЗатрата.СтатьяРБП;
			КонецЕсли;
			
			Проводка.Сумма = ТекСуммаПоВидуУчета;
			
			Проводка.ВидУчетаДт = ТекВидУчета;
			Проводка.ВидУчетаКт = ТекВидУчета;
			
		КонецЦикла;
		ПроводкиНУ.Записать();
		
		// По Затратам:
		
		ДвижениеЗатратыНУ = ЗатратыНУ.Добавить();
		
		ДвижениеЗатратыНУ.Организация 		= Организация;
		ДвижениеЗатратыНУ.Период 			= Дата;
		ДвижениеЗатратыНУ.СчетУчета 		= Проводка.СчетДт;
		ДвижениеЗатратыНУ.СтатьяЗатрат 		= Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат];
		ДвижениеЗатратыНУ.Подразделение 	= Проводка.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Подразделения];
		
		ДвижениеЗатратыНУ.Сумма 			= СтрЗатрата.СуммаНУ;
		ДвижениеЗатратыНУ.ВременнаяРазница 	= СтрЗатрата.СуммаВР;
		ДвижениеЗатратыНУ.ПостояннаяРазница = СтрЗатрата.СуммаПР;
		
		ДвижениеЗатратыНУ.КодОперации		= Перечисления.КодыОперацийЗатраты.УслугиКонтрагентаНаПостоянныеЗатраты;
		
		ЗатратыНУ.Записать();
		
	КонецЦикла;
	
КонецПроцедуры
