//АБС+

Процедура НайтиЦенуСтоимость(Номенклатура,Цена, Ссылка)
	Запрос = Новый Запрос;
	Запрос.Текст=
	"ВЫБРАТЬ
	|	ЗабалансовыйУчетОборотыДтКт.КоличествоОборотДт КАК Количество,
	|	ЗабалансовыйУчетОборотыДтКт.СуммаОборот КАК Стоимость
	|ИЗ
	|	РегистрБухгалтерии.ЗабалансовыйУчет.ОборотыДтКт(
	|			,
	|			,
	|			Регистратор,
	|			СчетДт.Код = ""030.02"",
	|			,
	|			СчетКт.Код = ""030.02"",
	|			,
	|			СубконтоДт1 = &Номенклатура
	|				И СубконтоКт1 = &Номенклатура) КАК ЗабалансовыйУчетОборотыДтКт
	|ГДЕ
	|	ЗабалансовыйУчетОборотыДтКт.Регистратор = &ТекДок";
	
	Запрос.УстановитьПараметр("ТекДок", Ссылка);
	Запрос.УстановитьПараметр("Номенклатура",Номенклатура);
	
	Цена = 0;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если выборка.Количество=0 Тогда
			возврат;
		КонецЕсли;	
		Цена = Выборка.Стоимость/Выборка.Количество;
		прервать;
	КонецЦикла;	
	
КонецПроцедуры	

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   МассивОбъектов  - Массив    - Массив ссылок на объекты которые нужно распечатать
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ОшибкиПечати          - Список значений  - Ошибки печати  (значение - ссылка на объект, представление - текст ошибки)
//   ОбъектыПечати         - Список значений  - Объекты печати (значение - ссылка на объект, представление - имя области в которой был выведен объект)
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	ПараметрыВывода.ДоступнаПечатьПоКомплектно = Истина;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М4") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М4", "М-4 (Приходный ордер)", ПечатьМ4(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "М11") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "М11", "M-11 (Требование-накладная)", ПечатьМ11(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
	
КонецПроцедуры

// Функция формирует табличный документ унифицированной формы М-4
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-4 (приходный ордер).
//
Функция ПечатьМ4_М(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
//	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	СкладПолучатель КАК МестоПриемки,
	|	СкладПолучатель.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Организация.Код КАК ПоставщикКод,
	|	Организация     КАК Поставщик,
	|	&Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	Ложь КАК УчитыватьНДС,
	|	Истина КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПеремещениеМатериаловСклад КАК АБС_ПеремещениеМатериаловСклад
	|ГДЕ
	|	АБС_ПеремещениеМатериаловСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + "  КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПеремещениеМатериаловСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПеремещениеМатериаловСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                       //|		АБС_ПеремещениеМатериаловСклад.СтавкаНДС КАК СтавкаНДС,
							|		"""" КАК СтавкаНДС,
	                        |		СУММА(АБС_ПеремещениеМатериаловСклад.Количество) КАК КоличествоПринято,
	                       // |		СУММА(АБС_ПеремещениеМатериаловСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
							|		0 КАК Стоимость,
	                       // |		СУММА(АБС_ПеремещениеМатериаловСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
						    |		0 КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПеремещениеМатериаловСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПеремещениеМатериаловСклад.Материалы КАК АБС_ПеремещениеМатериаловСклад
	                        |	ГДЕ
	                        |		АБС_ПеремещениеМатериаловСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПеремещениеМатериаловСклад.Номенклатура,
	                        |		АБС_ПеремещениеМатериаловСклад.ЕдиницаИзмерения 
						   //,
	                       // |		АБС_ПеремещениеМатериаловСклад.СтавкаНДС,
	                       // |		АБС_ПеремещениеМатериаловСклад.Цена
							|       ) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
							
							
							
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеМатериаловСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Ссылка.Проведен Тогда
			ДвиженияБУ = РегистрыБухгалтерии.ЗабалансовыйУчет.СоздатьНаборЗаписей();
			ДвиженияБУ.Отбор.Регистратор.Значение = Ссылка;
			ДвиженияБУ.Отбор.Регистратор.Использование = Истина;
			ДвиженияБУ.Отбор.Регистратор.ВидСравнения = ВидСравнения.Равно;
			ДвиженияБУ.Прочитать();
		КонецЕсли;
		
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);
		Запрос.УстановитьПараметр("Валюта", глЗначениеПеременной("ВалютаРегламентированногоУчета"));

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
			ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		//СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = "030.02";		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		НомерСтраницы   = 1;
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;
		ИтогоСтоимость   = 0;
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	
		
		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			
			//ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;
			
			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;	
			
			Если Не Ссылка.Проведен Тогда
				ВсегоСНДС = "";
				Стоимость = "";
				Количество 		= "";
				Цена            = "";
			Иначе
				
				Попытка
					СтоимостьРег = 0;
					КоличествоРег = 0;
					
					Для каждого СтрокаДвижения из ДвиженияБУ Цикл
						Если (СтрокаДвижения.СубконтоДт.Номенклатура = ВыборкаСтрокТовары.Номенклатура)  Тогда
							СтоимостьРег  = СтоимостьРег  + СтрокаДвижения.Сумма;
							КоличествоРег = КоличествоРег + СтрокаДвижения.КоличествоДт;
						Иначе
							Продолжить;
						КонецЕсли;
					КонецЦикла;
					
					ВсегоСНДС = СтоимостьРег;
					Количество 		= КоличествоРег;
					Стоимость = СтоимостьРег;
					Цена            = ?(Количество <> 0, ВсегоСНДС / Количество, 0);
					
					ИтогоВсегоСНДС = ИтогоВсегоСНДС+СтоимостьРег;
					ИтогоСтоимость = ИтогоСтоимость+СтоимостьРег;
					
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.СуммаБезНДС = Стоимость;
					ОбластьМакета.Параметры.ВсегоСНДС = Стоимость;
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.КоличествоПринято = Количество;
					
				Исключение
					ВсегоСНДС = "";
					Стоимость = "";
					Количество 		= "";
					Цена            = "";
				КонецПопытки;
			КонецЕсли;	
			
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			
		КонецЦикла;
		
		//Пока ВыборкаСтрокТовары.Следующий() Цикл

		//	Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
		//		Продолжить;
		//	КонецЕсли;


		//	Ном = Ном + 1;

		//	ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		//	Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
		//	ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
		//		+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

		//	КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
		//	СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
		//	Цена              = ?(КоличествоПринято = 0, 0, (ВсегоСНДС - СуммаНДС) / КоличествоПринято);

		//	ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
		//	ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
		//	ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
		//	ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
		//	ОбластьМакета.Параметры.Цена              = Цена;
		//	ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
		//											  + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
		//											  + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
		//											  
		//	МассивВыводимыхОбластей.Очистить();
		//	МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		//	МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		//	Если Ном = КоличествоСтрок Тогда
		//		МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		//	КонецЕсли;

		//	Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда

		//		НомерСтраницы = НомерСтраницы + 1;
		//		ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
		//		ТабДокумент.Вывести(ПодвалСтрок);
		//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
		//		ТабДокумент.Вывести(ЗаголовокТаблицы);
		//		
		//	КонецЕсли;
		//											  
		//	ТабДокумент.Вывести(ОбластьМакета);

		//	ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
		//	ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
		//	ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
		//	ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		//КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОМОЛ = НайтиМОЛ(Ссылка.СкладОтправитель,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиФИО_Сдал(Ссылка.СкладПолучатель,ОбластьМакета.Параметры.ДолжностьМОЛ,Ссылка.Дата);

		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ4()

// Функция формирует печатную форму М-11
//
Функция ПечатьМ11_М(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = 
	"ВЫБРАТЬ
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаСоставления,
	|	Документ.Организация,
	|	Документ.СкладОтправитель КАК Склад,
	|	Документ.СкладПолучатель КАК Подразделение,
	|	Документ.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ФИО_Затребовал.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Затребовал
	|		ИНАЧЕ ФИО_Затребовал.Фамилия + "" "" + ПОДСТРОКА(ФИО_Затребовал.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Затребовал.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Затребовал,
	|	ВЫБОР
	|		КОГДА ФИО_Разрешил.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Разрешил
	|		ИНАЧЕ ФИО_Разрешил.Фамилия + "" "" + ПОДСТРОКА(ФИО_Разрешил.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Разрешил.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Разрешил,
	|	ВЫБОР
	|		КОГДА ФИО_ЧерезКого.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.ЧерезКого
	|		ИНАЧЕ ФИО_ЧерезКого.Фамилия + "" "" + ПОДСТРОКА(ФИО_ЧерезКого.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_ЧерезКого.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ЧерезКого,
	|	ВЫБОР
	|		КОГДА ФИО_Отправитель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Отправитель.ФизическоеЛицо
	|		ИНАЧЕ ФИО_Отправитель.Фамилия + "" "" + ПОДСТРОКА(ФИО_Отправитель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Отправитель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Отпустил,
	|	ВЫБОР
	|		КОГДА ФИОПолучатель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Получатель.ФизическоеЛицо
	|		ИНАЧЕ ФИОПолучатель.Фамилия + "" "" + ПОДСТРОКА(ФИОПолучатель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОПолучатель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Получил,
	|	ДолжностьОтпустил.Должность КАК Должность_Отпустил,
	|	ДолжностьПолучил.Должность КАК Должность_Получил,
	|	""030.02"" КАК КоррСчет
	|ИЗ
	|	Документ.АБС_ПеремещениеМатериаловСклад КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Отправитель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Отправитель
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ФИО_Отправитель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьОтпустил
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ДолжностьОтпустил.Сотрудник.Физлицо
	|		ПО Документ.СкладОтправитель = МОЛ_Отправитель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Затребовал
	|		ПО Документ.Затребовал = ФИО_Затребовал.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Получатель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОПолучатель
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ФИОПолучатель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьПолучил
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ДолжностьПолучил.Сотрудник.Физлицо
	|		ПО Документ.СкладПолучатель = МОЛ_Получатель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_ЧерезКого
	|		ПО Документ.ЧерезКого = ФИО_ЧерезКого.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Разрешил
	|		ПО Документ.Разрешил = ФИО_Разрешил.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент";
	                      //" + ТоварКод + "
	ТекстЗапросаТовары = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Счет           		 КАК Счет,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		""030.02"" КАК Счет,
	|		""""	КАК Характеристика,
	|		""""           КАК Серия,
	|		СУММА(Количество)           КАК Количество,
	|		МИНИМУМ(НомерСтроки) 		КАК НомерСтроки
	|	ИЗ
	|		Документ.АБС_ПеремещениеМатериаловСклад.Материалы КАК АБС_ПеремещениеМатериаловСклад
	|	ГДЕ
	|		АБС_ПеремещениеМатериаловСклад.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеМатериаловСклад_М11";
	
	// Вывод заголовка
	//Макет = ?(Уполномоченные, ПолучитьМакет("М11"), ПолучитьОбщийМакет("М11"));
	Макет = ПолучитьМакет("М11");

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.Текст = ТекстЗапросаШапка;

		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);

		Запрос.Текст = ТекстЗапросаТовары;

		ЗапросПоНоменклатуре = Запрос.Выполнить();
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заголовок     = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		Область.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		Область.Параметры.ПредставлениеОрганизации   = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		Область.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
		Область.Параметры.КодОКПО                    = СведенияОбОрганизации.КодПоОКПО;
		
		ТабДокумент.Вывести(Область);
		
		ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
			
			НайтиЦенуСтоимость(ВыборкаПоСтрокам.Номенклатура, Область.Параметры.Цена, Ссылка);
		    Область.Параметры.Сумма = ВыборкаПоСтрокам.Количество*Область.Параметры.Цена;
	
			ТабДокумент.Вывести(Область);

		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(Область);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла; 

	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ11()

// Функция формирует табличный документ унифицированной формы М-4
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-4 (приходный ордер).
//
Функция ПечатьМ4_О(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
//	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	СкладПолучатель КАК МестоПриемки,
	|	СкладПолучатель.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Организация.Код КАК ПоставщикКод,
	|	Организация     КАК Поставщик,
	|	&Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	Ложь КАК УчитыватьНДС,
	|	Истина КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПеремещениеОборудованияСклад КАК АБС_ПеремещениеОборудованияСклад
	|ГДЕ
	|	АБС_ПеремещениеОборудованияСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + "  КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПеремещениеОборудованияСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПеремещениеОборудованияСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                       //|		АБС_ПеремещениеОборудованияСклад.СтавкаНДС КАК СтавкаНДС,
							|		"""" КАК СтавкаНДС,
	                        |		СУММА(АБС_ПеремещениеОборудованияСклад.Количество) КАК КоличествоПринято,
	                       // |		СУММА(АБС_ПеремещениеОборудованияСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
							|		0 КАК Стоимость,
	                       // |		СУММА(АБС_ПеремещениеОборудованияСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
						    |		0 КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПеремещениеОборудованияСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПеремещениеОборудованияСклад.Оборудование КАК АБС_ПеремещениеОборудованияСклад
	                        |	ГДЕ
	                        |		АБС_ПеремещениеОборудованияСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПеремещениеОборудованияСклад.Номенклатура,
	                        |		АБС_ПеремещениеОборудованияСклад.ЕдиницаИзмерения 
						   //,
	                       // |		АБС_ПеремещениеОборудованияСклад.СтавкаНДС,
	                       // |		АБС_ПеремещениеОборудованияСклад.Цена
							|       ) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
							
							
							
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеОборудованияСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Ссылка.Проведен Тогда
			ДвиженияБУ = РегистрыБухгалтерии.ЗабалансовыйУчет.СоздатьНаборЗаписей();
			ДвиженияБУ.Отбор.Регистратор.Значение = Ссылка;
			ДвиженияБУ.Отбор.Регистратор.Использование = Истина;
			ДвиженияБУ.Отбор.Регистратор.ВидСравнения = ВидСравнения.Равно;
			ДвиженияБУ.Прочитать();
		КонецЕсли;
		
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);
		Запрос.УстановитьПараметр("Валюта", глЗначениеПеременной("ВалютаРегламентированногоУчета"));

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
			ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		//СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = "030.03";		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		НомерСтраницы   = 1;
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;
		ИтогоСтоимость   = 0;
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	
		
		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			
			//ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;
			
			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;	
			
			Если Не Ссылка.Проведен Тогда
				ВсегоСНДС = "";
				Стоимость = "";
				Количество 		= "";
				Цена            = "";
			Иначе
				
				Попытка
					СтоимостьРег = 0;
					КоличествоРег = 0;
					
					Для каждого СтрокаДвижения из ДвиженияБУ Цикл
						Если (СтрокаДвижения.СубконтоДт.Номенклатура = ВыборкаСтрокТовары.Номенклатура)  Тогда
							СтоимостьРег  = СтоимостьРег  + СтрокаДвижения.Сумма;
							КоличествоРег = КоличествоРег + СтрокаДвижения.КоличествоДт;
						Иначе
							Продолжить;
						КонецЕсли;
					КонецЦикла;
					
					ВсегоСНДС = СтоимостьРег;
					Количество 		= КоличествоРег;
					Стоимость = СтоимостьРег;
					Цена            = ?(Количество <> 0, ВсегоСНДС / Количество, 0);
					
					ИтогоВсегоСНДС = ИтогоВсегоСНДС+СтоимостьРег;
					ИтогоСтоимость = ИтогоСтоимость+СтоимостьРег;
					
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.СуммаБезНДС = Стоимость;
					ОбластьМакета.Параметры.ВсегоСНДС = Стоимость;
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.КоличествоПринято = Количество;
					
				Исключение
					ВсегоСНДС = "";
					Стоимость = "";
					Количество 		= "";
					Цена            = "";
				КонецПопытки;
			КонецЕсли;	
			
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			
		КонецЦикла;
		
		//Пока ВыборкаСтрокТовары.Следующий() Цикл

		//	Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
		//		Продолжить;
		//	КонецЕсли;


		//	Ном = Ном + 1;

		//	ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		//	Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
		//	ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
		//		+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

		//	КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
		//	СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
		//	Цена              = ?(КоличествоПринято = 0, 0, (ВсегоСНДС - СуммаНДС) / КоличествоПринято);

		//	ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
		//	ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
		//	ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
		//	ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
		//	ОбластьМакета.Параметры.Цена              = Цена;
		//	ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
		//											  + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
		//											  + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
		//											  
		//	МассивВыводимыхОбластей.Очистить();
		//	МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		//	МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		//	Если Ном = КоличествоСтрок Тогда
		//		МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		//	КонецЕсли;

		//	Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда

		//		НомерСтраницы = НомерСтраницы + 1;
		//		ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
		//		ТабДокумент.Вывести(ПодвалСтрок);
		//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
		//		ТабДокумент.Вывести(ЗаголовокТаблицы);
		//		
		//	КонецЕсли;
		//											  
		//	ТабДокумент.Вывести(ОбластьМакета);

		//	ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
		//	ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
		//	ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
		//	ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		//КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОМОЛ = НайтиМОЛ(Ссылка.СкладОтправитель,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиФИО_Сдал(Ссылка.СкладПолучатель,ОбластьМакета.Параметры.ДолжностьМОЛ,Ссылка.Дата);

		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ4()

// Функция формирует печатную форму М-11
//
Функция ПечатьМ11_О(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = 
	"ВЫБРАТЬ
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаСоставления,
	|	Документ.Организация,
	|	Документ.СкладОтправитель КАК Склад,
	|	Документ.СкладПолучатель КАК Подразделение,
	|	Документ.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ФИО_Затребовал.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Затребовал
	|		ИНАЧЕ ФИО_Затребовал.Фамилия + "" "" + ПОДСТРОКА(ФИО_Затребовал.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Затребовал.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Затребовал,
	|	ВЫБОР
	|		КОГДА ФИО_Разрешил.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Разрешил
	|		ИНАЧЕ ФИО_Разрешил.Фамилия + "" "" + ПОДСТРОКА(ФИО_Разрешил.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Разрешил.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Разрешил,
	|	ВЫБОР
	|		КОГДА ФИО_ЧерезКого.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.ЧерезКого
	|		ИНАЧЕ ФИО_ЧерезКого.Фамилия + "" "" + ПОДСТРОКА(ФИО_ЧерезКого.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_ЧерезКого.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ЧерезКого,
	|	ВЫБОР
	|		КОГДА ФИО_Отправитель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Отправитель.ФизическоеЛицо
	|		ИНАЧЕ ФИО_Отправитель.Фамилия + "" "" + ПОДСТРОКА(ФИО_Отправитель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Отправитель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Отпустил,
	|	ВЫБОР
	|		КОГДА ФИОПолучатель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Получатель.ФизическоеЛицо
	|		ИНАЧЕ ФИОПолучатель.Фамилия + "" "" + ПОДСТРОКА(ФИОПолучатель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОПолучатель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Получил,
	|	ДолжностьОтпустил.Должность КАК Должность_Отпустил,
	|	ДолжностьПолучил.Должность КАК Должность_Получил,
	|	""030.03"" КАК КоррСчет
	|ИЗ
	|	Документ.АБС_ПеремещениеОборудованияСклад КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Отправитель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Отправитель
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ФИО_Отправитель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьОтпустил
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ДолжностьОтпустил.Сотрудник.Физлицо
	|		ПО Документ.СкладОтправитель = МОЛ_Отправитель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Затребовал
	|		ПО Документ.Затребовал = ФИО_Затребовал.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Получатель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОПолучатель
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ФИОПолучатель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьПолучил
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ДолжностьПолучил.Сотрудник.Физлицо
	|		ПО Документ.СкладПолучатель = МОЛ_Получатель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_ЧерезКого
	|		ПО Документ.ЧерезКого = ФИО_ЧерезКого.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Разрешил
	|		ПО Документ.Разрешил = ФИО_Разрешил.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент";
	                      //" + ТоварКод + "
	ТекстЗапросаТовары = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Счет           		 КАК Счет,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		""030.03"" КАК Счет,
	|		""""	КАК Характеристика,
	|		""""           КАК Серия,
	|		СУММА(Количество)           КАК Количество,
	|		МИНИМУМ(НомерСтроки) 		КАК НомерСтроки
	|	ИЗ
	|		Документ.АБС_ПеремещениеОборудованияСклад.Оборудование КАК АБС_ПеремещениеОборудованияСклад
	|	ГДЕ
	|		АБС_ПеремещениеОборудованияСклад.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеОборудованияСклад_М11";
	
	// Вывод заголовка
	//Макет = ?(Уполномоченные, ПолучитьМакет("М11"), ПолучитьОбщийМакет("М11"));
	Макет = ПолучитьМакет("М11");

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.Текст = ТекстЗапросаШапка;

		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);

		Запрос.Текст = ТекстЗапросаТовары;

		ЗапросПоНоменклатуре = Запрос.Выполнить();
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заголовок     = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		Область.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		Область.Параметры.ПредставлениеОрганизации   = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		Область.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
		Область.Параметры.КодОКПО                    = СведенияОбОрганизации.КодПоОКПО;
		
		ТабДокумент.Вывести(Область);
		
		ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
			
			НайтиЦенуСтоимость(ВыборкаПоСтрокам.Номенклатура, Область.Параметры.Цена, Ссылка);
		    Область.Параметры.Сумма = ВыборкаПоСтрокам.Количество*Область.Параметры.Цена;
	
			ТабДокумент.Вывести(Область);

		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(Область);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла; 

	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ11()

// Функция формирует табличный документ унифицированной формы М-4
//
// Параметры: 
//  Нет.
//
// Возвращаемое значение:
//  Табличный документ по форме М-4 (приходный ордер).
//
Функция ПечатьМ4_Т(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
//	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	СкладПолучатель КАК МестоПриемки,
	|	СкладПолучатель.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Организация.Код КАК ПоставщикКод,
	|	Организация     КАК Поставщик,
	|	&Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	Ложь КАК УчитыватьНДС,
	|	Истина КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПеремещениеТоваровСклад КАК АБС_ПеремещениеТоваровСклад
	|ГДЕ
	|	АБС_ПеремещениеТоваровСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + "  КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПеремещениеТоваровСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПеремещениеТоваровСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                       //|		АБС_ПеремещениеТоваровСклад.СтавкаНДС КАК СтавкаНДС,
							|		"""" КАК СтавкаНДС,
	                        |		СУММА(АБС_ПеремещениеТоваровСклад.Количество) КАК КоличествоПринято,
	                       // |		СУММА(АБС_ПеремещениеТоваровСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
							|		0 КАК Стоимость,
	                       // |		СУММА(АБС_ПеремещениеТоваровСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
						    |		0 КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПеремещениеТоваровСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПеремещениеТоваровСклад.Товары КАК АБС_ПеремещениеТоваровСклад
	                        |	ГДЕ
	                        |		АБС_ПеремещениеТоваровСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПеремещениеТоваровСклад.Номенклатура,
	                        |		АБС_ПеремещениеТоваровСклад.ЕдиницаИзмерения 
						   //,
	                       // |		АБС_ПеремещениеТоваровСклад.СтавкаНДС,
	                       // |		АБС_ПеремещениеТоваровСклад.Цена
							|       ) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
							
							
							
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеТоваровСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Ссылка.Проведен Тогда
			ДвиженияБУ = РегистрыБухгалтерии.ЗабалансовыйУчет.СоздатьНаборЗаписей();
			ДвиженияБУ.Отбор.Регистратор.Значение = Ссылка;
			ДвиженияБУ.Отбор.Регистратор.Использование = Истина;
			ДвиженияБУ.Отбор.Регистратор.ВидСравнения = ВидСравнения.Равно;
			ДвиженияБУ.Прочитать();
		КонецЕсли;
		
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);
		Запрос.УстановитьПараметр("Валюта", глЗначениеПеременной("ВалютаРегламентированногоУчета"));

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТоварам = Новый Запрос();
		ЗапросПоТоварам.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТоварам.УстановитьПараметр("Курс",      1);
			ЗапросПоТоварам.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		
		ЗапросПоТоварам.Текст = ТекстЗапросаПоТоварам;
		ВыборкаСтрокТовары = ЗапросПоТоварам.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		//СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = "030.01";		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		НомерСтраницы   = 1;
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;
		ИтогоСтоимость   = 0;
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	
		
		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			
			//ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;
			
			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;	
			
			Если Не Ссылка.Проведен Тогда
				ВсегоСНДС = "";
				Стоимость = "";
				Количество 		= "";
				Цена            = "";
			Иначе
				
				Попытка
					СтоимостьРег = 0;
					КоличествоРег = 0;
					
					Для каждого СтрокаДвижения из ДвиженияБУ Цикл
						Если (СтрокаДвижения.СубконтоДт.Номенклатура = ВыборкаСтрокТовары.Номенклатура)  Тогда
							СтоимостьРег  = СтоимостьРег  + СтрокаДвижения.Сумма;
							КоличествоРег = КоличествоРег + СтрокаДвижения.КоличествоДт;
						Иначе
							Продолжить;
						КонецЕсли;
					КонецЦикла;
					
					ВсегоСНДС = СтоимостьРег;
					Количество 		= КоличествоРег;
					Стоимость = СтоимостьРег;
					Цена            = ?(Количество <> 0, ВсегоСНДС / Количество, 0);
					
					ИтогоВсегоСНДС = ИтогоВсегоСНДС+СтоимостьРег;
					ИтогоСтоимость = ИтогоСтоимость+СтоимостьРег;
					
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.СуммаБезНДС = Стоимость;
					ОбластьМакета.Параметры.ВсегоСНДС = Стоимость;
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.КоличествоПринято = Количество;
					
				Исключение
					ВсегоСНДС = "";
					Стоимость = "";
					Количество 		= "";
					Цена            = "";
				КонецПопытки;
			КонецЕсли;	
			
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			
		КонецЦикла;
		
		//Пока ВыборкаСтрокТовары.Следующий() Цикл

		//	Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
		//		Продолжить;
		//	КонецЕсли;


		//	Ном = Ном + 1;

		//	ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);

		//	Кратность = ?(Шапка.Кратность = 0, 1, Шапка.Кратность);
		//	ВсегоСНДС = (ВыборкаСтрокТовары.Стоимость
		//		+ ?(Шапка.СуммаВключаетНДС, 0, ВыборкаСтрокТовары.СуммаНДС));

		//	КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
		//	СуммаНДС          = ВыборкаСтрокТовары.СуммаНДС / Шапка.Кратность;
		//	Цена              = ?(КоличествоПринято = 0, 0, (ВсегоСНДС - СуммаНДС) / КоличествоПринято);

		//	ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
		//	ОбластьМакета.Параметры.ВсегоСНДС         = ВсегоСНДС;
		//	ОбластьМакета.Параметры.СуммаБезНДС       = ВсегоСНДС - СуммаНДС;
		//	ОбластьМакета.Параметры.СуммаНДС          = СуммаНДС;
		//	ОбластьМакета.Параметры.Цена              = Цена;
		//	ОбластьМакета.Параметры.ТоварНаименование = СокрЛП(ВыборкаСтрокТовары.ТоварНаименование)
		//											  + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаСтрокТовары)
		//											  + ?(ВыборкаСтрокТовары.Метка = 2, " (возвратная тара)", "");
		//											  
		//	МассивВыводимыхОбластей.Очистить();
		//	МассивВыводимыхОбластей.Добавить(ОбластьМакета);
		//	МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
		//	Если Ном = КоличествоСтрок Тогда
		//		МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
		//	КонецЕсли;

		//	Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда

		//		НомерСтраницы = НомерСтраницы + 1;
		//		ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
		//		ТабДокумент.Вывести(ПодвалСтрок);
		//		ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		//		ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
		//		ТабДокумент.Вывести(ЗаголовокТаблицы);
		//		
		//	КонецЕсли;
		//											  
		//	ТабДокумент.Вывести(ОбластьМакета);

		//	ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
		//	ИтогоСуммаБезНДС       = ИтогоСуммаБезНДС       + ВсегоСНДС - СуммаНДС;
		//	ИтогоСуммаНДС          = ИтогоСуммаНДС          + СуммаНДС;
		//	ИтогоВсегоСНДС         = ИтогоВсегоСНДС         + ВсегоСНДС;

		//КонецЦикла;

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОМОЛ = НайтиМОЛ(Ссылка.СкладОтправитель,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиФИО_Сдал(Ссылка.СкладПолучатель,ОбластьМакета.Параметры.ДолжностьМОЛ,Ссылка.Дата);

		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ4()

// Функция формирует печатную форму М-11
//
Функция ПечатьМ11_Т(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = 
	"ВЫБРАТЬ
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаСоставления,
	|	Документ.Организация,
	|	Документ.СкладОтправитель КАК Склад,
	|	Документ.СкладПолучатель КАК Подразделение,
	|	Документ.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ФИО_Затребовал.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Затребовал
	|		ИНАЧЕ ФИО_Затребовал.Фамилия + "" "" + ПОДСТРОКА(ФИО_Затребовал.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Затребовал.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Затребовал,
	|	ВЫБОР
	|		КОГДА ФИО_Разрешил.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Разрешил
	|		ИНАЧЕ ФИО_Разрешил.Фамилия + "" "" + ПОДСТРОКА(ФИО_Разрешил.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Разрешил.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Разрешил,
	|	ВЫБОР
	|		КОГДА ФИО_ЧерезКого.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.ЧерезКого
	|		ИНАЧЕ ФИО_ЧерезКого.Фамилия + "" "" + ПОДСТРОКА(ФИО_ЧерезКого.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_ЧерезКого.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ЧерезКого,
	|	ВЫБОР
	|		КОГДА ФИО_Отправитель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Отправитель.ФизическоеЛицо
	|		ИНАЧЕ ФИО_Отправитель.Фамилия + "" "" + ПОДСТРОКА(ФИО_Отправитель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Отправитель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Отпустил,
	|	ВЫБОР
	|		КОГДА ФИОПолучатель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Получатель.ФизическоеЛицо
	|		ИНАЧЕ ФИОПолучатель.Фамилия + "" "" + ПОДСТРОКА(ФИОПолучатель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОПолучатель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Получил,
	|	ДолжностьОтпустил.Должность КАК Должность_Отпустил,
	|	ДолжностьПолучил.Должность КАК Должность_Получил,
	|	""030.01"" КАК КоррСчет
	|ИЗ
	|	Документ.АБС_ПеремещениеТоваровСклад КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Отправитель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Отправитель
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ФИО_Отправитель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьОтпустил
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ДолжностьОтпустил.Сотрудник.Физлицо
	|		ПО Документ.СкладОтправитель = МОЛ_Отправитель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Затребовал
	|		ПО Документ.Затребовал = ФИО_Затребовал.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Получатель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОПолучатель
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ФИОПолучатель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьПолучил
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ДолжностьПолучил.Сотрудник.Физлицо
	|		ПО Документ.СкладПолучатель = МОЛ_Получатель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_ЧерезКого
	|		ПО Документ.ЧерезКого = ФИО_ЧерезКого.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Разрешил
	|		ПО Документ.Разрешил = ФИО_Разрешил.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент";
	                      //" + ТоварКод + "
	ТекстЗапросаТовары = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Счет           		 КАК Счет,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		""030.01"" КАК Счет,
	|		""""	КАК Характеристика,
	|		""""           КАК Серия,
	|		СУММА(Количество)           КАК Количество,
	|		МИНИМУМ(НомерСтроки) 		КАК НомерСтроки
	|	ИЗ
	|		Документ.АБС_ПеремещениеТоваровСклад.Товары КАК АБС_ПеремещениеТоваровСклад
	|	ГДЕ
	|		АБС_ПеремещениеТоваровСклад.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеТоваровСклад_М11";
	
	// Вывод заголовка
	//Макет = ?(Уполномоченные, ПолучитьМакет("М11"), ПолучитьОбщийМакет("М11"));
	Макет = ПолучитьМакет("М11");

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Запрос.Текст = ТекстЗапросаШапка;

		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);

		Запрос.Текст = ТекстЗапросаТовары;

		ЗапросПоНоменклатуре = Запрос.Выполнить();
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заголовок     = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		Область.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		Область.Параметры.ПредставлениеОрганизации   = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		Область.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
		Область.Параметры.КодОКПО                    = СведенияОбОрганизации.КодПоОКПО;
		
		ТабДокумент.Вывести(Область);
		
		ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
			
			НайтиЦенуСтоимость(ВыборкаПоСтрокам.Номенклатура, Область.Параметры.Цена, Ссылка);
		    Область.Параметры.Сумма = ВыборкаПоСтрокам.Количество*Область.Параметры.Цена;
	
			ТабДокумент.Вывести(Область);

		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(Область);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла; 

	Возврат ТабДокумент;
	
КонецФункции // ПечатьМ11()

Функция ПечатьМ4(МассивОбъектов, ОбъектыПечати)
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапка = "
	|ВЫБРАТЬ
	|	Номер КАК Номер,
	|	Дата  КАК ДатаСоставления,
//	|	ВходящийНомер КАК НомерСопроводительногоДокумента,
	|	Организация,
	|	Организация             КАК ЮрФизЛицо,
	|	СкладПолучатель КАК МестоПриемки,
	|	СкладПолучатель.Представление КАК СкладНаименование,
	|	"""" КАК Подразделение,
	|	"""" КАК ПредставлениеПодразделения,
	|	Организация.Код КАК ПоставщикКод,
	|	Организация     КАК Поставщик,
	|	&Валюта КАК ВалютаДокумента,
	|	1      КАК Курс,
	|	1 КАК Кратность,
	|	Ложь КАК УчитыватьНДС,
	|	Истина КАК СуммаВключаетНДС
	|ИЗ
	|	Документ.АБС_ПеремещениеУниверсальныйСклад КАК АБС_ПеремещениеУниверсальныйСклад
	|ГДЕ
	|	АБС_ПеремещениеУниверсальныйСклад.Ссылка = &ТекущийДокумент";
	
	ТекстЗапросаПоМатериалам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + "  КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПеремещениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПеремещениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                       //|		АБС_ПеремещениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
							|		"""" КАК СтавкаНДС,
	                        |		СУММА(АБС_ПеремещениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                       // |		СУММА(АБС_ПеремещениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
							|		0 КАК Стоимость,
	                       // |		СУММА(АБС_ПеремещениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
						    |		0 КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПеремещениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПеремещениеУниверсальныйСклад.Материалы КАК АБС_ПеремещениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПеремещениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПеремещениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПеремещениеУниверсальныйСклад.ЕдиницаИзмерения 
						   //,
	                       // |		АБС_ПеремещениеУниверсальныйСклад.СтавкаНДС,
	                       // |		АБС_ПеремещениеУниверсальныйСклад.Цена
							|       ) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
							
	ТекстЗапросаПоОборудованиям = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + "  КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПеремещениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПеремещениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                       //|		АБС_ПеремещениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
							|		"""" КАК СтавкаНДС,
	                        |		СУММА(АБС_ПеремещениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                       // |		СУММА(АБС_ПеремещениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
							|		0 КАК Стоимость,
	                       // |		СУММА(АБС_ПеремещениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
						    |		0 КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПеремещениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПеремещениеУниверсальныйСклад.Оборудование КАК АБС_ПеремещениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПеремещениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПеремещениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПеремещениеУниверсальныйСклад.ЕдиницаИзмерения 
						   //,
	                       // |		АБС_ПеремещениеУниверсальныйСклад.СтавкаНДС,
	                       // |		АБС_ПеремещениеУниверсальныйСклад.Цена
							|       ) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";							
	
	ТекстЗапросаПоТоварам = "ВЫБРАТЬ
	                        |	ВложенныйЗапрос.Номенклатура,
	                        |	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК СТРОКА(1000)) КАК ТоварНаименование,
	                        |	ВложенныйЗапрос.Номенклатура." + ТоварКод + "  КАК ТоварКод,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.Представление КАК ЕдиницаИзмеренияНаименование,
	                        |	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код КАК ЕдиницаИзмеренияКод,
	                        |	ВложенныйЗапрос.СтавкаНДС,
	                        |	ВложенныйЗапрос.КоличествоПринято,
	                        |	ВложенныйЗапрос.Стоимость,
	                        |	ВложенныйЗапрос.СуммаНДС,
	                        |	ВложенныйЗапрос.Характеристика,
	                        |	ВложенныйЗапрос.Серия,
	                        |	ВложенныйЗапрос.НомерСтроки КАК НомерСтроки,
	                        |	ВложенныйЗапрос.Метка КАК Метка
	                        |ИЗ
	                        |	(ВЫБРАТЬ
	                        |		АБС_ПеремещениеУниверсальныйСклад.Номенклатура КАК Номенклатура,
	                        |		АБС_ПеремещениеУниверсальныйСклад.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	                       //|		АБС_ПеремещениеУниверсальныйСклад.СтавкаНДС КАК СтавкаНДС,
							|		"""" КАК СтавкаНДС,
	                        |		СУММА(АБС_ПеремещениеУниверсальныйСклад.Количество) КАК КоличествоПринято,
	                       // |		СУММА(АБС_ПеремещениеУниверсальныйСклад.Сумма * &Курс / &Кратность) КАК Стоимость,
							|		0 КАК Стоимость,
	                       // |		СУММА(АБС_ПеремещениеУниверсальныйСклад.СуммаНДС * &Курс / &Кратность) КАК СуммаНДС,
						    |		0 КАК СуммаНДС,
	                        |		"""" КАК Характеристика,
	                        |		"""" КАК Серия,
	                        |		МИНИМУМ(АБС_ПеремещениеУниверсальныйСклад.НомерСтроки) КАК НомерСтроки,
	                        |		0 КАК Метка
	                        |	ИЗ
	                        |		Документ.АБС_ПеремещениеУниверсальныйСклад.Товары КАК АБС_ПеремещениеУниверсальныйСклад
	                        |	ГДЕ
	                        |		АБС_ПеремещениеУниверсальныйСклад.Ссылка = &ТекущийДокумент
	                        |	
	                        |	СГРУППИРОВАТЬ ПО
	                        |		АБС_ПеремещениеУниверсальныйСклад.Номенклатура,
	                        |		АБС_ПеремещениеУниверсальныйСклад.ЕдиницаИзмерения 
						   //,
	                       // |		АБС_ПеремещениеТоваровСклад.СтавкаНДС,
	                       // |		АБС_ПеремещениеТоваровСклад.Цена
							|       ) КАК ВложенныйЗапрос
	                        |
	                        |УПОРЯДОЧИТЬ ПО
	                        |	Метка,
	                        |	НомерСтроки";
							
							
							
	Макет = ПолучитьОбщийМакет("М4");
	
	ТабДокумент = Новый ТабличныйДокумент;
	
	// Зададим параметры печатной формы по умолчанию
	ТабДокумент.ПолеСверху         = 0;
	ТабДокумент.ПолеСлева          = 0;
	ТабДокумент.ПолеСнизу          = 0;
	ТабДокумент.ПолеСправа         = 0;
	ТабДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	// Восстановим установленные пользователем параметры печатной формы
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеУниверсальныйСклад_М4";
	
	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Ссылка.Проведен Тогда
			ДвиженияБУ = РегистрыБухгалтерии.ЗабалансовыйУчет.СоздатьНаборЗаписей();
			ДвиженияБУ.Отбор.Регистратор.Значение = Ссылка;
			ДвиженияБУ.Отбор.Регистратор.Использование = Истина;
			ДвиженияБУ.Отбор.Регистратор.ВидСравнения = ВидСравнения.Равно;
			ДвиженияБУ.Прочитать();
		КонецЕсли;
		
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент",     Ссылка);
		Запрос.УстановитьПараметр("Валюта", глЗначениеПеременной("ВалютаРегламентированногоУчета"));

		Запрос.Текст = ТекстЗапросаШапка;
		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();

		ЗапросПоТЧ = Новый Запрос();
		ЗапросПоТЧ.УстановитьПараметр("ТекущийДокумент", Ссылка);
		
		//Если Ссылка.ВалютаДокумента = Ссылка.ДоговорКонтрагента.ВалютаВзаиморасчетов Тогда
		//	
		//	// Документ оформлен в валюте взаиморасчетов
		//	ЗапросПоТоварам.УстановитьПараметр("Курс", Ссылка.КурсВзаиморасчетов);
		//	ЗапросПоТоварам.УстановитьПараметр("Кратность", Ссылка.КратностьВзаиморасчетов);
		//	
		//Иначе
			
			// Документ оформлен в валюте регламентированного учета
			ЗапросПоТЧ.УстановитьПараметр("Курс",      1);
			ЗапросПоТЧ.УстановитьПараметр("Кратность", 1);
			
		//КонецЕсли;
		
		Если Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда 
			ЗапросПоТЧ.Текст = ТекстЗапросаПоМатериалам;
		ИначеЕсли Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда
			ЗапросПоТЧ.Текст = ТекстЗапросаПоОборудованиям;
		ИначеЕсли Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда
			ЗапросПоТЧ.Текст = ТекстЗапросаПоТоварам;
		КонецЕсли;
		ВыборкаСтрокТовары = ЗапросПоТЧ.Выполнить().Выбрать();

		// Выводим общие реквизиты шапки
		СведенияОПокупателе = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.ЮрФизЛицо, Шапка.ДатаСоставления);

		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОПокупателе);
		ОбластьМакета.Параметры.ОрганизацияПоОКПО        = СведенияОПокупателе.КодПоОКПО;
		ОбластьМакета.Параметры.НомерДокумента           = ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим заголовок докмента
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокДокумента");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		ОбластьМакета.Параметры.ДатаСоставления = Шапка.ДатаСоставления;
		ПредставлениеКонтрагента = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Поставщик, Шапка.ДатаСоставления), "ПолноеНаименование,");
		ОбластьМакета.Параметры.ПоставщикНаименование = ПредставлениеКонтрагента;
		//СчетаУчета = БухгалтерскийУчетРасчетовСКонтрагентами.ПолучитьСчетаРасчетовСКонтрагентом(Ссылка.Организация, Ссылка.Контрагент, Ссылка.Договор);		
		ОбластьМакета.Параметры.СубСчет = "030.01";		
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим заголовок таблицы
		ЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
		ТабДокумент.Вывести(ЗаголовокТаблицы);
		
		НомерСтраницы   = 1;
		
		КоличествоСтрок = ВыборкаСтрокТовары.Количество();
		
		// Инициализация итогов в документе
		ИтогоКоличествоПринято = 0;
		ИтогоСуммаБезНДС = 0;
		ИтогоСуммаНДС    = 0;
		ИтогоВсегоСНДС   = 0;
		Ном              = 0;
		ИтогоСтоимость   = 0;
		
		// Создаем массив для проверки вывода
		МассивВыводимыхОбластей = Новый Массив;	
		
		// Выводим многострочную часть докмента
		ОбластьМакета           = Макет.ПолучитьОбласть("Строка");
		ОбластьИтоговПоСтранице = Макет.ПолучитьОбласть("ПодвалСтрок");
		ОбластьПодвала          = Макет.ПолучитьОбласть("Подвал");
		
		Пока ВыборкаСтрокТовары.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаСтрокТовары.Номенклатура) Тогда
				Продолжить;
			КонецЕсли;
			
			Ном = Ном + 1;
			
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокТовары);
			
			КоличествоПринято = ВыборкаСтрокТовары.КоличествоПринято;
			
			ОбластьМакета.Параметры.КоличествоПринято = КоличествоПринято;
			
			МассивВыводимыхОбластей.Очистить();
			МассивВыводимыхОбластей.Добавить(ОбластьМакета);
			МассивВыводимыхОбластей.Добавить(ОбластьИтоговПоСтранице);
			Если Ном = КоличествоСтрок Тогда
				МассивВыводимыхОбластей.Добавить(ОбластьПодвала);
			КонецЕсли;
			
			Если НЕ ФормированиеПечатныхФормСервер.ПроверитьВыводТабличногоДокумента(ТабДокумент, МассивВыводимыхОбластей) Тогда
				
				НомерСтраницы = НомерСтраницы + 1;
				ПодвалСтрок   = Макет.ПолучитьОбласть("ПодвалСтрок");
				ТабДокумент.Вывести(ПодвалСтрок);
				ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
				ЗаголовокТаблицы.Параметры.НомерСтраницы = "Страница " + НомерСтраницы;
				ТабДокумент.Вывести(ЗаголовокТаблицы);
				
			КонецЕсли;	
			
			Если Не Ссылка.Проведен Тогда
				ВсегоСНДС = "";
				Стоимость = "";
				Количество 		= "";
				Цена            = "";
			Иначе
				
				Попытка
					СтоимостьРег = 0;
					КоличествоРег = 0;
					
					Для каждого СтрокаДвижения из ДвиженияБУ Цикл
						Если (СтрокаДвижения.СубконтоДт.Номенклатура = ВыборкаСтрокТовары.Номенклатура)  Тогда
							СтоимостьРег  = СтоимостьРег  + СтрокаДвижения.Сумма;
							КоличествоРег = КоличествоРег + СтрокаДвижения.КоличествоДт;
						Иначе
							Продолжить;
						КонецЕсли;
					КонецЦикла;
					
					ВсегоСНДС = СтоимостьРег;
					Количество 		= КоличествоРег;
					Стоимость = СтоимостьРег;
					Цена            = ?(Количество <> 0, ВсегоСНДС / Количество, 0);
					
					ИтогоВсегоСНДС = ИтогоВсегоСНДС+СтоимостьРег;
					ИтогоСтоимость = ИтогоСтоимость+СтоимостьРег;
					
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.СуммаБезНДС = Стоимость;
					ОбластьМакета.Параметры.ВсегоСНДС = Стоимость;
					ОбластьМакета.Параметры.Цена = Цена;
					ОбластьМакета.Параметры.КоличествоПринято = Количество;
					
				Исключение
					ВсегоСНДС = "";
					Стоимость = "";
					Количество 		= "";
					Цена            = "";
				КонецПопытки;
			КонецЕсли;	
			
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ИтогоКоличествоПринято = ИтогоКоличествоПринято + КоличествоПринято;
			
		КонецЦикла;
		

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Итого");

		ОбластьМакета.Параметры.ИтогоКоличествоПринято = ИтогоКоличествоПринято;
		ОбластьМакета.Параметры.ИтогоСуммаБезНДС = ИтогоСуммаБезНДС;
		ОбластьМакета.Параметры.ИтогоСуммаНДС    = ИтогоСуммаНДС;
		ОбластьМакета.Параметры.ИтогоВсегоСНДС   = ИтогоВсегоСНДС;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим итоги по документу
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.Заполнить(Шапка);
		
		ОбластьМакета.Параметры.ФИОМОЛ = НайтиМОЛ(Ссылка.СкладОтправитель,ОбластьМакета.Параметры.ДолжностьПоставщика,Ссылка.Дата);
		ОбластьМакета.Параметры.ФИОПоставщика = НайтиФИО_Сдал(Ссылка.СкладПолучатель,ОбластьМакета.Параметры.ДолжностьМОЛ,Ссылка.Дата);

		ТабДокумент.Вывести(ОбластьМакета);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
		
	КонецЦикла;
	
	Возврат ТабДокумент;	
КонецФункции

Функция ПечатьМ11(МассивОбъектов, ОбъектыПечати)
	
	ДопКолонка = Константы.ДополнительнаяКолонкаПечатныхФормДокументов.Получить();
	Если ДопКолонка = Перечисления.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул Тогда
		ТоварКод = "Артикул";
	Иначе
		ТоварКод = "Код";
	КонецЕсли;
	
	ТекстЗапросаШапкаМ = 
	"ВЫБРАТЬ
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаСоставления,
	|	Документ.Организация,
	|	Документ.СкладОтправитель КАК Склад,
	|	Документ.СкладПолучатель КАК Подразделение,
	|	Документ.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ФИО_Затребовал.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Затребовал
	|		ИНАЧЕ ФИО_Затребовал.Фамилия + "" "" + ПОДСТРОКА(ФИО_Затребовал.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Затребовал.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Затребовал,
	|	ВЫБОР
	|		КОГДА ФИО_Разрешил.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Разрешил
	|		ИНАЧЕ ФИО_Разрешил.Фамилия + "" "" + ПОДСТРОКА(ФИО_Разрешил.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Разрешил.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Разрешил,
	|	ВЫБОР
	|		КОГДА ФИО_ЧерезКого.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.ЧерезКого
	|		ИНАЧЕ ФИО_ЧерезКого.Фамилия + "" "" + ПОДСТРОКА(ФИО_ЧерезКого.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_ЧерезКого.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ЧерезКого,
	|	ВЫБОР
	|		КОГДА ФИО_Отправитель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Отправитель.ФизическоеЛицо
	|		ИНАЧЕ ФИО_Отправитель.Фамилия + "" "" + ПОДСТРОКА(ФИО_Отправитель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Отправитель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Отпустил,
	|	ВЫБОР
	|		КОГДА ФИОПолучатель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Получатель.ФизическоеЛицо
	|		ИНАЧЕ ФИОПолучатель.Фамилия + "" "" + ПОДСТРОКА(ФИОПолучатель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОПолучатель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Получил,
	|	ДолжностьОтпустил.Должность КАК Должность_Отпустил,
	|	ДолжностьПолучил.Должность КАК Должность_Получил,
	|	""030.02"" КАК КоррСчет
	|ИЗ
	|	Документ.АБС_ПеремещениеУниверсальныйСклад КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Отправитель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Отправитель
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ФИО_Отправитель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьОтпустил
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ДолжностьОтпустил.Сотрудник.Физлицо
	|		ПО Документ.СкладОтправитель = МОЛ_Отправитель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Затребовал
	|		ПО Документ.Затребовал = ФИО_Затребовал.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Получатель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОПолучатель
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ФИОПолучатель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьПолучил
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ДолжностьПолучил.Сотрудник.Физлицо
	|		ПО Документ.СкладПолучатель = МОЛ_Получатель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_ЧерезКого
	|		ПО Документ.ЧерезКого = ФИО_ЧерезКого.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Разрешил
	|		ПО Документ.Разрешил = ФИО_Разрешил.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент";
	                      //" + ТоварКод + "
	ТекстЗапросаТоварыМ = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Счет           		 КАК Счет,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		""030.02"" КАК Счет,
	|		""""	КАК Характеристика,
	|		""""           КАК Серия,
	|		СУММА(Количество)           КАК Количество,
	|		МИНИМУМ(НомерСтроки) 		КАК НомерСтроки
	|	ИЗ
	|		Документ.АБС_ПеремещениеУниверсальныйСклад.Материалы КАК АБС_ПеремещениеМатериаловСклад
	|	ГДЕ
	|		АБС_ПеремещениеМатериаловСклад.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";
	
	ТекстЗапросаШапкаО = 
	"ВЫБРАТЬ
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаСоставления,
	|	Документ.Организация,
	|	Документ.СкладОтправитель КАК Склад,
	|	Документ.СкладПолучатель КАК Подразделение,
	|	Документ.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ФИО_Затребовал.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Затребовал
	|		ИНАЧЕ ФИО_Затребовал.Фамилия + "" "" + ПОДСТРОКА(ФИО_Затребовал.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Затребовал.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Затребовал,
	|	ВЫБОР
	|		КОГДА ФИО_Разрешил.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Разрешил
	|		ИНАЧЕ ФИО_Разрешил.Фамилия + "" "" + ПОДСТРОКА(ФИО_Разрешил.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Разрешил.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Разрешил,
	|	ВЫБОР
	|		КОГДА ФИО_ЧерезКого.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.ЧерезКого
	|		ИНАЧЕ ФИО_ЧерезКого.Фамилия + "" "" + ПОДСТРОКА(ФИО_ЧерезКого.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_ЧерезКого.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ЧерезКого,
	|	ВЫБОР
	|		КОГДА ФИО_Отправитель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Отправитель.ФизическоеЛицо
	|		ИНАЧЕ ФИО_Отправитель.Фамилия + "" "" + ПОДСТРОКА(ФИО_Отправитель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Отправитель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Отпустил,
	|	ВЫБОР
	|		КОГДА ФИОПолучатель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Получатель.ФизическоеЛицо
	|		ИНАЧЕ ФИОПолучатель.Фамилия + "" "" + ПОДСТРОКА(ФИОПолучатель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОПолучатель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Получил,
	|	ДолжностьОтпустил.Должность КАК Должность_Отпустил,
	|	ДолжностьПолучил.Должность КАК Должность_Получил,
	|	""030.03"" КАК КоррСчет
	|ИЗ
	|	Документ.АБС_ПеремещениеУниверсальныйСклад КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Отправитель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Отправитель
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ФИО_Отправитель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьОтпустил
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ДолжностьОтпустил.Сотрудник.Физлицо
	|		ПО Документ.СкладОтправитель = МОЛ_Отправитель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Затребовал
	|		ПО Документ.Затребовал = ФИО_Затребовал.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Получатель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОПолучатель
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ФИОПолучатель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьПолучил
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ДолжностьПолучил.Сотрудник.Физлицо
	|		ПО Документ.СкладПолучатель = МОЛ_Получатель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_ЧерезКого
	|		ПО Документ.ЧерезКого = ФИО_ЧерезКого.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Разрешил
	|		ПО Документ.Разрешил = ФИО_Разрешил.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент";
	                      //" + ТоварКод + "
	ТекстЗапросаТоварыО = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Счет           		 КАК Счет,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		""030.03"" КАК Счет,
	|		""""	КАК Характеристика,
	|		""""           КАК Серия,
	|		СУММА(Количество)           КАК Количество,
	|		МИНИМУМ(НомерСтроки) 		КАК НомерСтроки
	|	ИЗ
	|		Документ.АБС_ПеремещениеУниверсальныйСклад.Оборудование КАК АБС_ПеремещениеОборудованияСклад
	|	ГДЕ
	|		АБС_ПеремещениеОборудованияСклад.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";
	
	ТекстЗапросаШапкаТ = 
	"ВЫБРАТЬ
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК ДатаДокумента,
	|	Документ.Дата КАК ДатаСоставления,
	|	Документ.Организация,
	|	Документ.СкладОтправитель КАК Склад,
	|	Документ.СкладПолучатель КАК Подразделение,
	|	Документ.Комментарий КАК Комментарий,
	|	ВЫБОР
	|		КОГДА ФИО_Затребовал.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Затребовал
	|		ИНАЧЕ ФИО_Затребовал.Фамилия + "" "" + ПОДСТРОКА(ФИО_Затребовал.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Затребовал.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Затребовал,
	|	ВЫБОР
	|		КОГДА ФИО_Разрешил.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.Разрешил
	|		ИНАЧЕ ФИО_Разрешил.Фамилия + "" "" + ПОДСТРОКА(ФИО_Разрешил.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Разрешил.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Разрешил,
	|	ВЫБОР
	|		КОГДА ФИО_ЧерезКого.Фамилия ЕСТЬ NULL 
	|			ТОГДА Документ.ЧерезКого
	|		ИНАЧЕ ФИО_ЧерезКого.Фамилия + "" "" + ПОДСТРОКА(ФИО_ЧерезКого.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_ЧерезКого.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ЧерезКого,
	|	ВЫБОР
	|		КОГДА ФИО_Отправитель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Отправитель.ФизическоеЛицо
	|		ИНАЧЕ ФИО_Отправитель.Фамилия + "" "" + ПОДСТРОКА(ФИО_Отправитель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИО_Отправитель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Отпустил,
	|	ВЫБОР
	|		КОГДА ФИОПолучатель.Фамилия ЕСТЬ NULL 
	|			ТОГДА МОЛ_Получатель.ФизическоеЛицо
	|		ИНАЧЕ ФИОПолучатель.Фамилия + "" "" + ПОДСТРОКА(ФИОПолучатель.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОПолучатель.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК Получил,
	|	ДолжностьОтпустил.Должность КАК Должность_Отпустил,
	|	ДолжностьПолучил.Должность КАК Должность_Получил,
	|	""030.01"" КАК КоррСчет
	|ИЗ
	|	Документ.АБС_ПеремещениеУниверсальныйСклад КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Отправитель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Отправитель
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ФИО_Отправитель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьОтпустил
	|			ПО МОЛ_Отправитель.ФизическоеЛицо = ДолжностьОтпустил.Сотрудник.Физлицо
	|		ПО Документ.СкладОтправитель = МОЛ_Отправитель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Затребовал
	|		ПО Документ.Затребовал = ФИО_Затребовал.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, ) КАК МОЛ_Получатель
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИОПолучатель
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ФИОПолучатель.ФизЛицо
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК ДолжностьПолучил
	|			ПО МОЛ_Получатель.ФизическоеЛицо = ДолжностьПолучил.Сотрудник.Физлицо
	|		ПО Документ.СкладПолучатель = МОЛ_Получатель.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_ЧерезКого
	|		ПО Документ.ЧерезКого = ФИО_ЧерезКого.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ) КАК ФИО_Разрешил
	|		ПО Документ.Разрешил = ФИО_Разрешил.ФизЛицо
	|ГДЕ
	|	Документ.Ссылка = &ТекущийДокумент";
	                      //" + ТоварКод + "
	ТекстЗапросаТоварыТ = "
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.Номенклатура                                  КАК Номенклатура,
	|	ВЫРАЗИТЬ(ВложенныйЗапрос.Номенклатура.НаименованиеПолное КАК Строка(1000)) КАК МатериалНаименование,
	|	ВложенныйЗапрос.Номенклатура." + ТоварКод + "                 КАК НоменклатурныйНомер,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.Представление                КАК ЕдиницаИзмеренияНаименование,
	|	ВложенныйЗапрос.ЕдиницаИзмерения.ЕдиницаПоКлассификатору.Код  КАК ЕдиницаИзмеренияКод,
	|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
	|	ВложенныйЗапрос.Серия                КАК Серия,
	|	ВложенныйЗапрос.Количество           КАК Количество,
	|	ВложенныйЗапрос.Счет           		 КАК Счет,
	|	ВложенныйЗапрос.НомерСтроки          КАК НомерСтроки
	|ИЗ 
	|	(
	|	ВЫБРАТЬ
	|		Номенклатура,
	|		ЕдиницаИзмерения,
	|		""030.01"" КАК Счет,
	|		""""	КАК Характеристика,
	|		""""           КАК Серия,
	|		СУММА(Количество)           КАК Количество,
	|		МИНИМУМ(НомерСтроки) 		КАК НомерСтроки
	|	ИЗ
	|		Документ.АБС_ПеремещениеУниверсальныйСклад.Товары КАК АБС_ПеремещениеТоваровСклад
	|	ГДЕ
	|		АБС_ПеремещениеТоваровСклад.Ссылка = &ТекущийДокумент
	|
	|	СГРУППИРОВАТЬ ПО
	|		Номенклатура,
	|		ЕдиницаИзмерения
	|
	|	) КАК ВложенныйЗапрос
	|
	|УПОРЯДОЧИТЬ ПО НомерСтроки ВОЗР
	|";
	
	
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АБС_ПеремещениеУниверсальныйСклад_М11";
	
	// Вывод заголовка
	//Макет = ?(Уполномоченные, ПолучитьМакет("М11"), ПолучитьОбщийМакет("М11"));
	Макет = ПолучитьМакет("М11");

	ПервыйДокумент = Истина;
	
	Для Каждого Ссылка Из МассивОбъектов Цикл
		
		Если Не ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;

		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
		Запрос.УстановитьПараметр("Дата", ТекущаяДата());
		Если Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда 
			Запрос.Текст = ТекстЗапросаШапкаМ;
		ИначеЕсли Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда
			Запрос.Текст = ТекстЗапросаШапкаО;
		ИначеЕсли Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда
			Запрос.Текст = ТекстЗапросаШапкаТ;
		КонецЕсли;

		Шапка = Запрос.Выполнить().Выбрать();
		Шапка.Следующий();
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);

		Если Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда 
			Запрос.Текст = ТекстЗапросаТоварыМ;
		ИначеЕсли Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда
			Запрос.Текст = ТекстЗапросаТоварыО;
		ИначеЕсли Ссылка.ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда
			Запрос.Текст = ТекстЗапросаТоварыТ;
		КонецЕсли;

		ЗапросПоНоменклатуре = Запрос.Выполнить();
		
		Область = Макет.ПолучитьОбласть("Шапка");
		Область.Параметры.Заголовок     = "ТРЕБОВАНИЕ-НАКЛАДНАЯ № " + ОбщегоНазначения.ПолучитьНомерНаПечать(Шапка);
		Область.Параметры.Заполнить(Шапка);
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(Шапка.Организация, Шапка.ДатаДокумента);

		Область.Параметры.ПредставлениеОрганизации   = ФормированиеПечатныхФормСервер.ОписаниеОрганизации(СведенияОбОрганизации);
		Область.Параметры.ПредставлениеПодразделения = Шапка.Подразделение;
		Область.Параметры.КодОКПО                    = СведенияОбОрганизации.КодПоОКПО;
		
		ТабДокумент.Вывести(Область);
		
		ВыборкаПоСтрокам = ЗапросПоНоменклатуре.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоСтрокам.Следующий() Цикл

			Область = Макет.ПолучитьОбласть("Строка");
			Область.Параметры.Заполнить(ВыборкаПоСтрокам);
			Область.Параметры.МатериалНаименование = СокрЛП(ВыборкаПоСтрокам.МатериалНаименование) + ФормированиеПечатныхФормСервер.ПредставлениеСерий(ВыборкаПоСтрокам);
			
			НайтиЦенуСтоимость(ВыборкаПоСтрокам.Номенклатура, Область.Параметры.Цена, Ссылка);
		    Область.Параметры.Сумма = ВыборкаПоСтрокам.Количество*Область.Параметры.Цена;
	
			ТабДокумент.Вывести(Область);

		КонецЦикла;
		
		Область = Макет.ПолучитьОбласть("Подвал");
		Область.Параметры.Заполнить(Шапка);
		ТабДокумент.Вывести(Область);
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);
	КонецЦикла; 

	Возврат ТабДокумент;
	
КонецФункции

Функция НайтиФИО_Сдал(ФизЛицо,Должность, Дата)  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL 
	|			ТОГДА &ФизЛицо
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ФИО,
	|	РаботникиОрганизацийСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ФИОФизЛиц.СрезПоследних(&Дата, ФизЛицо = &ФизЛицо) КАК ФИОФизЛицСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних(&Дата, Сотрудник.Физлицо = &ФизЛицо) КАК РаботникиОрганизацийСрезПоследних
	|		ПО ФИОФизЛицСрезПоследних.ФизЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо";
	Запрос.УстановитьПараметр("ФизЛицо",ФизЛицо);
	Запрос.УстановитьПараметр("Дата", Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Должность = Выборка.Должность;
	Возврат Выборка.ФИО;	
КонецФункции

Функция НайтиМОЛ(Склад,Должность,Дата)  
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ФИОФизЛицСрезПоследних.Фамилия ЕСТЬ NULL 
	|			ТОГДА ОтветственныеЛицаСрезПоследних.ФизическоеЛицо
	|		ИНАЧЕ ФИОФизЛицСрезПоследних.Фамилия + "" "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Имя, 1, 1) + "". "" + ПОДСТРОКА(ФИОФизЛицСрезПоследних.Отчество, 1, 1) + "".""
	|	КОНЕЦ КАК ФИО,
	|	РаботникиОрганизацийСрезПоследних.Должность
	|ИЗ
	|	РегистрСведений.ОтветственныеЛица.СрезПоследних(&Дата, СтруктурнаяЕдиница = &Склад) КАК ОтветственныеЛицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних КАК ФИОФизЛицСрезПоследних
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = ФИОФизЛицСрезПоследних.ФизЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций.СрезПоследних КАК РаботникиОрганизацийСрезПоследних
	|		ПО ОтветственныеЛицаСрезПоследних.ФизическоеЛицо = РаботникиОрганизацийСрезПоследних.Сотрудник.Физлицо";
	Запрос.УстановитьПараметр("Склад",Склад);
	Запрос.УстановитьПараметр("Дата",Дата);
	Выборка = Запрос.Выполнить().Выбрать();
	Выборка.Следующий();
	Должность = Выборка.Должность;
	Возврат Выборка.ФИО;
КонецФункции

//АБС-
