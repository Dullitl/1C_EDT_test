Перем СчетНазначения;
Перем глТаблицаЗабаланс Экспорт;
//Перем мВалютаРегламентированногоУчета Экспорт;

//////////////////////////////
////ПРОЦЕДУРЫ И ФУНКЦИИ

Функция ПодготовитьТаблицуМ(ТабличнаяЧасть)
	//СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	абс_ПеремещениеУниверсальныйСкладМатериалы.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА абс_ПеремещениеУниверсальныйСкладМатериалы.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА &СчетНазначения
	              |		ИНАЧЕ абс_ПеремещениеУниверсальныйСкладМатериалы.СчетНазначения
	              |	КОНЕЦ КАК СчетНазначения,
	              |	СУММА(абс_ПеремещениеУниверсальныйСкладМатериалы.Количество) КАК Количество
	              |ПОМЕСТИТЬ ВТНоменклатура
	              |ИЗ
	              |	Документ.абс_ПеремещениеУниверсальныйСклад.Материалы КАК абс_ПеремещениеУниверсальныйСкладМатериалы
	              |ГДЕ
	              |	абс_ПеремещениеУниверсальныйСкладМатериалы.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	абс_ПеремещениеУниверсальныйСкладМатериалы.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА абс_ПеремещениеУниверсальныйСкладМатериалы.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА &СчетНазначения
	              |		ИНАЧЕ абс_ПеремещениеУниверсальныйСкладМатериалы.СчетНазначения
	              |	КОНЕЦ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество,
	              |	СУММА(ВложенныйЗапрос.СуммаОстВсего) КАК СуммаОстВсего,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстВсего) КАК КоличествоОстВсего,
	              |	СУММА(ВложенныйЗапрос.СуммаОстСклад) КАК СуммаОстСклад,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстСклад) КАК КоличествоОстСклад
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура КАК Номенклатура,
	              |		ВТНоменклатура.СчетНазначения КАК СчетНазначения,
	              |		ВТНоменклатура.Количество КАК Количество,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0)) КАК СуммаОстВсего,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)) КАК КоличествоОстВсего,
	              |		СУММА(0) КАК СуммаОстСклад,
	              |		СУММА(0) КАК КоличествоОстСклад
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.МатериалыНаСкладе), , Организация = &Организация) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество,
	              |		0,
	              |		0,
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0),
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(
	              |					&Дата,
	              |					Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.МатериалыНаСкладе),
	              |					,
	              |					Организация = &Организация
	              |						И Субконто3 = &Склад) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество";
		Запрос.УстановитьПараметр("Дата",МоментВремени());	
		Запрос.УстановитьПараметр("Склад",СкладОтправитель);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СчетНазначения",СчетНазначения);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	 Возврат Запрос.Выполнить().Выгрузить();
КонецФункции


/////////////////////////////
////ОБРАБОТЧИКИ СОБЫТИЙ
Процедура ОбработкаПроведенияМ(Отказ, Режим)
	
	Если НЕ ЗначениеЗаполнено(СкладОтправитель)Тогда
		Сообщить("Не выбран склад - отправитель");
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СкладПолучатель)Тогда
		Сообщить("Не выбран склад - получатель");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗабалансовыйУчет Тогда
		СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);	
		
		Если НЕ ЗначениеЗаполнено(СчетНазначения) Тогда
			Сообщить("Не найден счет назначения ""Забалансовый учет""");
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			Сообщить("Не выбран Контрагент");
			Отказ = Истина;

		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВидПеремещения) Тогда
			
			Сообщить("Не выбран Вид перемещения");
			Отказ = Истина;
			
		КонецЕсли;
		КонецЕсли;

	Для каждого ТекСтрока Из Материалы Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указан материал.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество материала """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
			
			Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
			Отказ = Истина;
			
		КонецЕсли;		
		
	КонецЦикла; 
	ТаблицаМатериалы = ПодготовитьТаблицуМ(Материалы);
	Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
		КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
		КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
		СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
		Если КоличествоОстВсего >0 И ЗначениеЗаполнено(СуммаОстВсего) Тогда
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
		Иначе
			Сообщить("На складе "+СкладОтправитель+" по счету "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+ " нет остатка номенклатуры "+СтрокаТаблицы.Номенклатура);
			Отказ = Истина;	
		КонецЕсли;
		
		Если КоличествоОстСклад<СтрокаТаблицы.Количество Тогда
			ТекстСообщения = "На складе "+СкладОтправитель+" "+КоличествоОстСклад+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+
			" из необходимых "+СтрокаТаблицы.Количество+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+" "+
			СтрокаТаблицы.Номенклатура + " ("+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+") по складу "+СкладОтправитель+" счету назначения "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
			Сообщить(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;


	Если Не Отказ Тогда
		Движения.ЗабалансовыйУчет.Очистить();
		Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
			КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
			КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
			СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
			
			
			// регистр ЗабалансовыйУчет 
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			Движение.СчетКт = ПланыСчетов.ЗабалансовыйУчет.МатериалыНаСкладе;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.КоличествоКт = СтрокаТаблицы.Количество;
			Если НЕ ВидПеремещения Тогда //= Перечисления.АБС_ВидыПеремещенияЗабаланс.СкладскоеПеремешение Тогда
				
				
				
				
				Движение.Содержание = "Складское перемещение мат.";
				Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.МатериалыНаСкладе;
				Движение.КоличествоДт = СтрокаТаблицы.Количество;
				
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияМатериалы] =  ?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
				Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = СкладПолучатель;
			Иначе
				Движение.Содержание = "Выбытие мат.в производство";
				
			КонецЕсли; 
			Движение.Сумма = СтрокаТаблицы.Количество*СредняяЦена;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияМатериалы] =  ?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = СкладОтправитель;
		КонецЦикла;
		Движения.ЗабалансовыйУчет.Записать();
	КонецЕсли;
		
	

	
КонецПроцедуры

Процедура ОбработкаЗаполненияМ(Основание)
	//АБС ОБНОВЛЕНИЕ НА 8.2
	Если (Основание <> Неопределено) И (Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Основание))) Тогда
	Если ТипЗнч(Основание.Ссылка) = Тип("ДокументСсылка.абс_ПоступлениеУниверсальныйСклад") Тогда
		Для Каждого СтрокаТабЧасти Из Основание.Материалы Цикл
			НоваяСтрока =Материалы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
		КонецЦикла;
		Организация = Основание.Организация;
		СкладОтправитель = Основание.Склад;
		ЗабалансовыйУчет = Основание.ЗабалансовыйУчет;
		ОбработанБухгалтерией = Основание.ОбработанБухгалтерией;
	КонецЕсли;
	КонецЕсли;
КонецПроцедуры

//АБС+

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьМ(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ можно распечатать только после его записи'"));
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = Недостаточно полномочий для печати непроведенного документа!'"));
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);

		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Ссылка);
		
		Если НаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.АБС_ПеремещениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.АБС_ПеремещениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено, Неопределено);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект ), Ссылка);

КонецПроцедуры // Печать


// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормМ() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",  "М-4 (Приходный ордер)");
	СтруктураМакетов.Вставить("М11", "M-11 (Требование-накладная)");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()
//АБС-



Функция ПодготовитьТаблицуО(ТабличнаяЧасть)
	
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	абс_ПеремещениеУниверсальныйСкладОборудование.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА абс_ПеремещениеУниверсальныйСкладОборудование.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА &СчетНазначения
	              |		ИНАЧЕ абс_ПеремещениеУниверсальныйСкладОборудование.СчетНазначения
	              |	КОНЕЦ КАК СчетНазначения,
	              |	СУММА(абс_ПеремещениеУниверсальныйСкладОборудование.Количество) КАК Количество
	              |ПОМЕСТИТЬ ВТНоменклатура
	              |ИЗ
	              |	Документ.абс_ПеремещениеУниверсальныйСклад.Оборудование КАК абс_ПеремещениеУниверсальныйСкладОборудование
	              |ГДЕ
	              |	абс_ПеремещениеУниверсальныйСкладОборудование.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	абс_ПеремещениеУниверсальныйСкладОборудование.Номенклатура,
	              |	ВЫБОР
	              |		КОГДА абс_ПеремещениеУниверсальныйСкладОборудование.Ссылка.ЗабалансовыйУчет
	              |			ТОГДА &СчетНазначения
	              |		ИНАЧЕ абс_ПеремещениеУниверсальныйСкладОборудование.СчетНазначения
	              |	КОНЕЦ
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество,
	              |	СУММА(ВложенныйЗапрос.СуммаОстВсего) КАК СуммаОстВсего,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстВсего) КАК КоличествоОстВсего,
	              |	СУММА(ВложенныйЗапрос.СуммаОстСклад) КАК СуммаОстСклад,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстСклад) КАК КоличествоОстСклад
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура КАК Номенклатура,
	              |		ВТНоменклатура.СчетНазначения КАК СчетНазначения,
	              |		ВТНоменклатура.Количество КАК Количество,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0)) КАК СуммаОстВсего,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)) КАК КоличествоОстВсего,
	              |		СУММА(0) КАК СуммаОстСклад,
	              |		СУММА(0) КАК КоличествоОстСклад
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе), , Организация = &Организация) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.СчетНазначения,
	              |		ВТНоменклатура.Количество,
	              |		0,
	              |		0,
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0),
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(
	              |					&Дата,
	              |					Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе),
	              |					,
	              |					Организация = &Организация
	              |						И Субконто3 = &Склад) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |				И ВТНоменклатура.СчетНазначения = ЗабалансовыйУчетОстатки.Субконто2) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.СчетНазначения,
	              |	ВложенныйЗапрос.Количество";
		Запрос.УстановитьПараметр("Дата",МоментВремени());	
		Запрос.УстановитьПараметр("Склад",СкладОтправитель);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("СчетНазначения",СчетНазначения);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	 Возврат Запрос.Выполнить().Выгрузить();
КонецФункции


/////////////////////////////
////ОБРАБОТЧИКИ СОБЫТИЙ

Процедура ОбработкаПроведенияО(Отказ, Режим)
	
	Если НЕ ЗначениеЗаполнено(СкладОтправитель)Тогда
		Сообщить("Не выбран склад - отправитель");
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СкладПолучатель)Тогда
		Сообщить("Не выбран склад - получатель");
		Отказ = Истина;
	КонецЕсли;
	
	Если ЗабалансовыйУчет Тогда
		СчетНазначения=Справочники.АБС_СчетНазначенияОборудование.НайтиПоНаименованию("Забалансовый учет",Истина);	
		
		Если НЕ ЗначениеЗаполнено(СчетНазначения) Тогда
			Сообщить("Не найден счет назначения ""Забалансовый учет""");
			Отказ = Истина;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Контрагент) Тогда
			Сообщить("Не выбран Контрагент");
			Отказ = Истина;
			
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ВидПеремещения) Тогда
			
			Сообщить("Не выбран Вид перемещения");
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
	
	Для каждого ТекСтрока Из Оборудование Цикл
		Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
		Если НЕ ЗабалансовыйУчет И НЕ ЗначениеЗаполнено(ТекСтрока.СчетНазначения)Тогда
			
			Сообщить("Строка "+ТекСтрока.НомерСтроки +"  не выбран счет назначения");
			Отказ = Истина;
			
		КонецЕсли;		
		
	КонецЦикла;
	
	ТаблицаМатериалы = ПодготовитьТаблицуО(Оборудование);
	Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
		КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
		КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
		СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
		Если КоличествоОстВсего >0 И ЗначениеЗаполнено(СуммаОстВсего) Тогда
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
		Иначе
			Сообщить("На складе "+СкладОтправитель+" по счету "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+ "нет остатка номенклатуры "+СтрокаТаблицы.Номенклатура);
			Отказ = Истина;	
		КонецЕсли;
		
		Если КоличествоОстСклад<СтрокаТаблицы.Количество Тогда
			ТекстСообщения = "На складе "+СкладОтправитель+" "+КоличествоОстСклад+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+
			" из необходимых "+СтрокаТаблицы.Количество+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+" "+
			СтрокаТаблицы.Номенклатура + " ("+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+") по складу "+СкладОтправитель+" счету назначения "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
			Сообщить(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;


	Если Не Отказ Тогда
		Движения.ЗабалансовыйУчет.Очистить();
		Для Каждого СтрокаТаблицы Из  ТаблицаМатериалы Цикл
			КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
			КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
			СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
			
			

			// регистр ЗабалансовыйУчет
			//Если Не Отказ Тогда
				Движение = Движения.ЗабалансовыйУчет.Добавить();
				Движение.СчетКт = ПланыСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе;
				Движение.Период = Дата;
				Движение.Организация = Организация;
				Движение.КоличествоКт = СтрокаТаблицы.Количество;
				Если не ВидПеремещения  Тогда
					
					
					
					
					Движение.Содержание =  "Внутреннее перемещение оборудования";
					Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.ОборудованиеНаСкладе;
					Движение.КоличествоДт = СтрокаТаблицы.Количество;
					
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияОборудование] =  ?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
					Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = СкладПолучатель;
				Иначе
					Движение.Содержание =  "Внешнее перемещение оборудования";
					
				КонецЕсли; 
				Движение.Сумма = СтрокаТаблицы.Количество*СредняяЦена;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.АБС_СчетНазначенияОборудование] =  ?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
				Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = СкладОтправитель;
			//КонецЕсли;	
		КонецЦикла;
		Движения.ЗабалансовыйУчет.Записать();
	КонецЕсли;

	
	
	
КонецПроцедуры


Процедура ОбработкаЗаполненияО(Основание)
	//АБС ОБНОВЛЕНИЕ НА 8.2
	Если (Основание <> Неопределено) И (Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Основание))) Тогда
		Если ТипЗнч(Основание.Ссылка) = Тип("ДокументСсылка.АБС_ПоступлениеОборудованияСклад") Тогда
		Для Каждого СтрокаТабЧасти Из Основание.Оборудование Цикл
			НоваяСтрока =Оборудование.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
		КонецЦикла;
		Организация = Основание.Организация;
		СкладОтправитель = Основание.Склад;
		ЗабалансовыйУчет = Основание.ЗабалансовыйУчет;
		ОбработанБухгалтерией = Основание.ОбработанБухгалтерией;

	КонецЕсли;
    КонецЕсли;
КонецПроцедуры

//АБС+

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьО(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ можно распечатать только после его записи'"));
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = Недостаточно полномочий для печати непроведенного документа!'"));
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);

		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Ссылка);
		
		Если НаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.АБС_ПеремещениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.АБС_ПеремещениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено, Неопределено);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект ), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормО() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",  "М-4 (Приходный ордер)");
	СтруктураМакетов.Вставить("М11", "M-11 (Требование-накладная)");
		
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()
//АБС-


Функция ПодготовитьТаблицуТ()
	//СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);
	Запрос = Новый Запрос;
	Запрос.Текст ="ВЫБРАТЬ
	              |	абс_ПеремещениеУниверсальныйСкладТовары.Номенклатура,
	              |	СУММА(абс_ПеремещениеУниверсальныйСкладТовары.Количество) КАК Количество
	              |ПОМЕСТИТЬ ВТНоменклатура
	              |ИЗ
	              |	Документ.абс_ПеремещениеУниверсальныйСклад.Товары КАК абс_ПеремещениеУниверсальныйСкладТовары
	              |ГДЕ
	              |	абс_ПеремещениеУниверсальныйСкладТовары.Ссылка = &Ссылка
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	абс_ПеремещениеУниверсальныйСкладТовары.Номенклатура
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.Количество,
	              |	СУММА(ВложенныйЗапрос.СуммаОстВсего) КАК СуммаОстВсего,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстВсего) КАК КоличествоОстВсего,
	              |	СУММА(ВложенныйЗапрос.СуммаОстСклад) КАК СуммаОстСклад,
	              |	СУММА(ВложенныйЗапрос.КоличествоОстСклад) КАК КоличествоОстСклад
	              |ИЗ
	              |	(ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура КАК Номенклатура,
	              |		ВТНоменклатура.Количество КАК Количество,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0)) КАК СуммаОстВсего,
	              |		СУММА(ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)) КАК КоличествоОстВсего,
	              |		СУММА(0) КАК СуммаОстСклад,
	              |		СУММА(0) КАК КоличествоОстСклад
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(&Дата, Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе), , Организация = &Организация) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1
	              |	
	              |	СГРУППИРОВАТЬ ПО
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.Количество
	              |	
	              |	ОБЪЕДИНИТЬ ВСЕ
	              |	
	              |	ВЫБРАТЬ
	              |		ВТНоменклатура.Номенклатура,
	              |		ВТНоменклатура.Количество,
	              |		0,
	              |		0,
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.СуммаОстатокДт, 0),
	              |		ЕСТЬNULL(ЗабалансовыйУчетОстатки.КоличествоОстатокДт, 0)
	              |	ИЗ
	              |		ВТНоменклатура КАК ВТНоменклатура
	              |			ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.ЗабалансовыйУчет.Остатки(
	              |					&Дата,
	              |					Счет = ЗНАЧЕНИЕ(ПланСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе),
	              |					,
	              |					Организация = &Организация
	              |						И Субконто2 = &Склад) КАК ЗабалансовыйУчетОстатки
	              |			ПО ВТНоменклатура.Номенклатура = ЗабалансовыйУчетОстатки.Субконто1) КАК ВложенныйЗапрос
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ВложенныйЗапрос.Номенклатура,
	              |	ВложенныйЗапрос.Количество";
		Запрос.УстановитьПараметр("Дата",МоментВремени());	
		Запрос.УстановитьПараметр("Склад",СкладОтправитель);
		Запрос.УстановитьПараметр("Организация",Организация);
		Запрос.УстановитьПараметр("Ссылка",ЭтотОбъект.Ссылка);
	 Возврат Запрос.Выполнить().Выгрузить();
КонецФункции


/////////////////////////////
////ОБРАБОТЧИКИ СОБЫТИЙ


Процедура ОбработкаПроведенияТ(Отказ, Режим)
		
	Если НЕ ЗначениеЗаполнено(СкладОтправитель)Тогда
		Сообщить("Не выбран склад - отправитель");
		Отказ = Истина;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(СкладПолучатель)Тогда
		Сообщить("Не выбран склад - получатель");
		Отказ = Истина;
	КонецЕсли;
	
	
	Для каждого ТекСтрока Из Товары Цикл
	    Если НЕ ЗначениеЗаполнено(ТекСтрока.Номенклатура) Тогда
			Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано оборудование.");
			Отказ = Истина;			
		КонецЕсли;
		Если ТекСтрока.Количество = 0 Тогда
		    Сообщить("Строка " + ТекСтрока.НомерСтроки + ", не указано количество оборудования """ + ТекСтрока.Номенклатура + ".");
			Отказ = Истина;
		КонецЕсли;
				
		
	КонецЦикла; 
	
	ТаблицаТовары = ПодготовитьТаблицуТ();
	Для Каждого СтрокаТаблицы Из  ТаблицаТовары Цикл
		КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
		КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
		СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
		Если КоличествоОстВсего >0 И ЗначениеЗаполнено(СуммаОстВсего) Тогда
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
		Иначе
			Сообщить("На складе "+СкладОтправитель+" по счету "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+ "нет остатка номенклатуры "+СтрокаТаблицы.Номенклатура);
			Отказ = Истина;	
		КонецЕсли;
		
		Если КоличествоОстСклад<СтрокаТаблицы.Количество Тогда
			ТекстСообщения = "На складе "+СкладОтправитель+" "+КоличествоОстСклад+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+
			" из необходимых "+СтрокаТаблицы.Количество+" "+СтрокаТаблицы.Номенклатура.ЕдиницаХраненияОстатков+" "+
			СтрокаТаблицы.Номенклатура + " ("+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения)+") по складу "+СкладОтправитель+" счету назначения "+?(ЗабалансовыйУчет,СчетНазначения,СтрокаТаблицы.СчетНазначения);
			Сообщить(ТекстСообщения);
			Отказ = Истина;
		КонецЕсли;
	КонецЦикла;


	Если Не Отказ Тогда
		Движения.ЗабалансовыйУчет.Очистить();
		Для Каждого СтрокаТаблицы Из  ТаблицаТовары Цикл
			КоличествоОстВсего = СтрокаТаблицы.КоличествоОстВсего;
			КоличествоОстСклад = СтрокаТаблицы.КоличествоОстСклад;
			СуммаОстВсего      = СтрокаТаблицы.СуммаОстВсего;
			СредняяЦена = СуммаОстВсего/КоличествоОстВсего;
			//регистр ЗабалансовыйУчет 
			Движение = Движения.ЗабалансовыйУчет.Добавить();
			Движение.СчетКт = ПланыСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе;
			Движение.Период = Дата;
			Движение.Организация = Организация;
			Движение.КоличествоКт = СтрокаТаблицы.Количество;
			Движение.Содержание =  "Перемещение товара";
			Движение.СчетДт = ПланыСчетов.ЗабалансовыйУчет.НоменклатураНаСкладе;
			Движение.КоличествоДт = СтрокаТаблицы.Количество;
			
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
			Движение.СубконтоДт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = СкладПолучатель;
			
			Движение.Сумма = СтрокаТаблицы.Количество*СредняяЦена;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Номенклатура] = СтрокаТаблицы.Номенклатура;
			Движение.СубконтоКт[ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Склады] = СкладОтправитель;

			


		КонецЦикла;
		Движения.ЗабалансовыйУчет.Записать();
	КонецЕсли;


 	
КонецПроцедуры


Процедура ОбработкаЗаполненияТ(Основание)
	//АБС ОБНОВЛЕНИЕ НА 8.2
	Если (Основание <> Неопределено) И (Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Основание))) Тогда
		Если ТипЗнч(Основание.Ссылка) = Тип("ДокументСсылка.АБС_ПоступлениеТоваровСклад") Тогда
		Для Каждого СтрокаТабЧасти Из Основание.Товары Цикл
			НоваяСтрока =Товары.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
		КонецЦикла;
		Организация = Основание.Организация;
		СкладОтправитель = Основание.Склад;
		ЗабалансовыйУчет = Основание.ЗабалансовыйУчет;
		ОбработанБухгалтерией = Основание.ОбработанБухгалтерией;

	КонецЕсли;
	КонецЕсли;
КонецПроцедуры
                                            
 //АБС+

// Процедура осуществляет печать документа. Можно направить печать на 
// экран или принтер, а также распечатать необходимое количество копий.
//
//  Название макета печати передается в качестве параметра,
// по переданному названию находим имя макета в соответствии.
//
// Параметры:
//  НазваниеМакета - строка, название макета.
//
Процедура ПечатьТ(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт

	Если ЭтоНовый() Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Документ можно распечатать только после его записи'"));
		Возврат;
	ИначеЕсли Не УправлениеДопПравамиПользователей.РазрешитьПечатьНепроведенныхДокументов(Проведен) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = Недостаточно полномочий для печати непроведенного документа!'"));
		Возврат;
	КонецЕсли;

	Если Не РаботаСДиалогами.ПроверитьМодифицированность(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;

	Если ТипЗнч(ИмяМакета) = Тип("ДвоичныеДанные") Тогда

		ТабДокумент = УниверсальныеМеханизмы.НапечататьВнешнююФорму(Ссылка, ИмяМакета);

		Если ТабДокумент = Неопределено Тогда
			Возврат;
		КонецЕсли;
	Иначе
		ПараметрКоманды = Новый Массив;
		ПараметрКоманды.Добавить(Ссылка);
		
		Если НаПринтер Тогда
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечатиНаПринтер("Документ.АБС_ПеремещениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено);
		Иначе
			УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Документ.АБС_ПеремещениеУниверсальныйСклад", ИмяМакета, 
										ПараметрКоманды, Неопределено, Неопределено);
		КонецЕсли;
		Возврат;
	КонецЕсли;

	УниверсальныеМеханизмы.НапечататьДокумент(ТабДокумент, КоличествоЭкземпляров, НаПринтер, ttk_ОбщегоНазначения.СформироватьЗаголовокДокумента(ЭтотОбъект ), Ссылка);

КонецПроцедуры // Печать

// Возвращает доступные варианты печати документа
//
// Возвращаемое значение:
//  Структура, каждая строка которой соответствует одному из вариантов печати
//  
Функция ПолучитьСтруктуруПечатныхФормТ() Экспорт
	
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",  "М-4 (Приходный ордер)");
	СтруктураМакетов.Вставить("М11", "M-11 (Требование-накладная)");
	
	Возврат СтруктураМакетов;

КонецФункции // ПолучитьСтруктуруПечатныхФорм()
//АБС-

 //обёртки
Процедура ОбработкаПроведения(Отказ, Режим)
	Отказ = Ложь;
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		ОбработкаПроведенияМ(Отказ, Режим)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
		ОбработкаПроведенияО(Отказ, Режим)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда 
		ОбработкаПроведенияТ(Отказ, Режим)
	КонецЕсли;
	
КонецПроцедуры

Процедура Печать(ИмяМакета, КоличествоЭкземпляров = 1, НаПринтер = Ложь) Экспорт
	Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
		ПечатьМ(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
		ПечатьО(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда 
		ПечатьТ(ИмяМакета, КоличествоЭкземпляров, НаПринтер)
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьСтруктуруПечатныхФорм() Экспорт
	СтруктураМакетов = Новый Структура;
	
	СтруктураМакетов.Вставить("М4",  "М-4 (Приходный ордер)");
	СтруктураМакетов.Вставить("М11", "M-11 (Требование-накладная)");
	
	Возврат СтруктураМакетов;
	
	//Если ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Материалы Тогда
	//	Возврат ПолучитьСтруктуруПечатныхФормМ();
	//ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Оборудование Тогда 
	//	Возврат ПолучитьСтруктуруПечатныхФормО();
	//ИначеЕсли ВидОперации = Перечисления.абс_ВидыОперацийУниверсальныхДокументов.Товары Тогда 
	//	Возврат ПолучитьСтруктуруПечатныхФормТ();
	//Иначе
	//	Возврат Неопределено;
	//КонецЕсли;
КонецФункции

Процедура ОбработкаЗаполнения(Основание)
	//АБС ОБНОВЛЕНИЕ НА 8.2
	Если (Основание <> Неопределено) И (Документы.ТипВсеСсылки().СодержитТип(ТипЗнч(Основание))) Тогда
		//АБС Кряковкин 2014.09.23 нач
		Если ТипЗнч(Основание.Ссылка) = Тип("ДокументСсылка.АБС_ПоступлениеУниверсальныйСклад") Тогда
		//Кряковкин кон	
			Для Каждого СтрокаТабЧасти Из Основание.Материалы Цикл
				НоваяСтрока =Материалы.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
			КонецЦикла;
			Для Каждого СтрокаТабЧасти Из Основание.Оборудование Цикл
				НоваяСтрока =Оборудование.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
			КонецЦикла;
			Для Каждого СтрокаТабЧасти Из Основание.Товары Цикл
				НоваяСтрока =Товары.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока,СтрокаТабЧасти);
			КонецЦикла;
			ВидОперации = Основание.ВидОперации;
			Организация = Основание.Организация;
			СкладОтправитель = Основание.Склад;
			ЗабалансовыйУчет = Основание.ЗабалансовыйУчет;
			ОбработанБухгалтерией = Основание.ОбработанБухгалтерией;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
//АБС Кряковкин 2014.09.24 нач  
глТаблицаЗабаланс = абс_СлужебныеФункции.ЗаполнитьТаблицуЗабалансаИзРегистра();
//Кряковкин кон 
СчетНазначения=Справочники.АБС_СчетНазначенияМатериалы.НайтиПоНаименованию("Забалансовый учет",Истина);
