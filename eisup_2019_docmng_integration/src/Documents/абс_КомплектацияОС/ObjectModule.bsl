Перем мУдалятьДвижения;

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка  Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ОтражатьВБухгалтерскомУчете Тогда
		ОтражатьВБухгалтерскомУчете = Истина;
	КонецЕсли;
	Если НЕ ОтражатьВНалоговомУчете Тогда
		ОтражатьВНалоговомУчете = Истина;
	КонецЕсли;
	Если НЕ ОтражатьВУправленческомУчете Тогда
		ОтражатьВУправленческомУчете = Истина;
	КонецЕсли;

	мУдалятьДвижения = НЕ ЭтоНовый();
	
КонецПроцедуры // ПередЗаписью()

Процедура ОбработкаПроведения(Отказ,РежимПроведения)

	Если мУдалятьДвижения Тогда
		ttk_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;

	Заголовок = ttk_ОбщегоНазначения.ПредставлениеДокументаПриПроведении(Ссылка);
	
	// Сформируем запрос на дополнительные параметры, нужные при проведении, по данным шапки документа
	СтруктураШапкиДокумента = ОбщегоНазначения.СформироватьСтруктуруШапкиДокумента(ЭтотОбъект);
	
	ТабОС = Комплектация.ВыгрузитьКолонку("ОсновноеСредство");
	
	// Проверим правильность заполнения документа
	ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок);
	//ПроверитьЗаполнениеТабЧасти(РежимПроведения, ТабОС, СтруктураШапкиДокумента, Отказ, Заголовок);
	
	Если НЕ Отказ Тогда
		
		ДвиженияПоРегистрам(ТабОС, СтруктураШапкиДокумента, Заголовок, Отказ);
		
		Для Каждого Движение Из Движения Цикл 			
			Если Движение.Модифицированность() Тогда
				Движение.Записывать = Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;	
	
КонецПроцедуры // ОбработкаПроведения()

// Процедура проверяет корректность заполнения реквизитов шапки документа
//
Процедура ПроверитьЗаполнениеШапки(СтруктураШапкиДокумента, Отказ, Заголовок)
	
	// Укажем, что надо проверить:
	СтруктураРеквизитовШапки = Новый Структура;
	СтруктураРеквизитовШапки.Вставить("Организация");
	СтруктураРеквизитовШапки.Вставить("ОсновноеСредство");
	СтруктураРеквизитовШапки.Вставить("СобытиеПринятияКУчету");
	СтруктураРеквизитовШапки.Вставить("СобытиеВводВЭксплуатацию");
	СтруктураРеквизитовШапки.Вставить("СобытиеСписание");
	
	Если НЕ ЗначениеЗаполнено(ГлавноеОсновноеСредство) Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не указано главное основное средство!", Отказ, Заголовок);
	КонецЕсли;
					
	ЗаполнениеДокументов.ПроверитьЗаполнениеШапкиДокумента(ЭтотОбъект, СтруктураРеквизитовШапки, Отказ, Заголовок);

КонецПроцедуры // ПроверитьЗаполнениеШапки()

// Процедура формирования движений по регистрам.
//
Процедура ДвиженияПоРегистрам(ТабОС, СтруктураШапкиДокумента, Заголовок, Отказ)
	
	ТабАмортизации = Новый ТаблицаЗначений;
	ТабАмортизации.Колонки.Добавить("ОсновноеСредство",       Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТабАмортизации.Колонки.Добавить("АмортизацияЗаМесяцБУ",   Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла( 15, 2)));
	ТабАмортизации.Колонки.Добавить("АмортизацияЗаМесяцНУ",   Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла( 15, 2)));
	
	ДвижениеПоРегиструНоменклатураОС( ТабОС, СтруктураШапкиДокумента);
	
	ДвижениеПоРегиструАмортизацияУпр             ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструПервоначальныеСведенияОСУпр( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструМестонахождениеОСУпр       ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструГрафикиАмортизацииОСУпр    ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструНачислениеАмортизацииУпр   ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструПараметрыАмортизацииУпр    ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСобытияОСУпр               ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСостоянияОСУпр             ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСпособыОтраженияРасходовУпр( ТабОС, СтруктураШапкиДокумента);
	
	ДвижениеПоРегиструСобытияОСБух   (ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСостоянияОСБух (ТабОС, СтруктураШапкиДокумента);
	
	ДвижениеПоРегиструАмортизацияБух             ( ТабОС, СтруктураШапкиДокумента, ТабАмортизации);
	ДвижениеПоРегиструПервоначальныеСведенияОСБух( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструМестонахождениеОСБух       ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструГрафикиАмортизацииОСБух    ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструНачислениеАмортизацииБух   ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструПараметрыАмортизацииБух    ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСпособыОтраженияРасходовБух( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСчетаУчетаОСБух            ( ТабОС, СтруктураШапкиДокумента);
	
	ДвижениеПоРегиструАмортизацияНал              ( ТабОС, СтруктураШапкиДокумента, ТабАмортизации);
	ДвижениеПоРегиструПервоначальныеСведенияОСНал ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструНачислениеАмортизацииНал    ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструПараметрыАмортизацииНал     ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСпособыОтраженияРасходовНал ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСчетаУчетаОСНал             ( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструАмортизацияПоБазСтоимостиНал( ТабОС, СтруктураШапкиДокумента);
	ДвижениеПоРегиструСпецКоэффициентНал          ( ТабОС, СтруктураШапкиДокумента);
	
	ТабАмортизации.Свернуть("ОсновноеСредство", "АмортизацияЗаМесяцБУ, АмортизацияЗаМесяцНУ");
	ФормированиеДвиженийПоЗатратам(ТабОС, СтруктураШапкиДокумента, ТабАмортизации, Отказ, Заголовок);
	
	ФормированиеПроводокБух(ТабОС, СтруктураШапкиДокумента);
	ФормированиеПроводокНал(ТабОС, СтруктураШапкиДокумента);
	
КонецПроцедуры // ДвиженияПоРегистрам()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ДВИЖЕНИЙ ДОКУМЕНТА ПО РЕГИСТРАМ

// Процедура формирования движений по регистру СтоимостьОС
//
Процедура ДвижениеПоРегиструАмортизацияУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СтоимостьОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ТаблицаАмортизации = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииУпр(Дата, ТабОС, Ложь);
	
	Для Каждого ОС Из ТабОС Цикл
		
		СтрокаТаблицаАмортизации = ТаблицаАмортизации.Найти(ОС,"ОС");
		
		Если СтрокаТаблицаАмортизации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.ОсновноеСредство = ОС;
		НоваяСтрока.Стоимость        = 0;
		НоваяСтрока.Амортизация      = СтрокаТаблицаАмортизации.Упр;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьПриход();
	
	НаборДвижений.Записать();
	
	ТаблицаДвижений.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(СтоимостьОСОстатки.СтоимостьОстаток) КАК Стоимость,
	|	СУММА(СтоимостьОСОстатки.АмортизацияОстаток) КАК Амортизация
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(&Период, ОсновноеСредство В (&ОсновныеСредства)) КАК СтоимостьОСОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.Стоимость        = СтрокаОС.Стоимость;
		НоваяСтрока.Амортизация      = СтрокаОС.Амортизация;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьПриход();
	
	ТаблицаДвижений.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтоимостьОСОстатки.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОСОстатки.АмортизацияОстаток КАК Амортизация,
	|	СтоимостьОСОстатки.ОсновноеСредство
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.Остатки(&Период, ОсновноеСредство В (&ОсновныеСредства)) КАК СтоимостьОСОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ОстаткиПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ОстаткиПоОС Цикл
		
		Если СтрокаОС.Стоимость = 0 И СтрокаОС.Амортизация = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		НоваяСтрока.Стоимость        = СтрокаОС.Стоимость;
		НоваяСтрока.Амортизация      = СтрокаОС.Амортизация;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьРасход();
	
КонецПроцедуры // ДвижениеПоРегиструАмортизацияУпр()

// Процедура формирования движений по регистру Амортизация бух.
//
Процедура ДвижениеПоРегиструАмортизацияБух( ТабОС, СтруктураШапкиДокумента, ТабАмортизации)
	
	НаборДвижений   = Движения.СтоимостьОСБухгалтерскийУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ТаблицаАмортизации = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииБухРегл(Дата, Организация, ТабОС, Ложь);
	
	Для Каждого ОС Из ТабОС Цикл
		
		СтрокаТаблицаАмортизации = ТаблицаАмортизации.Найти(ОС,"ОС");
		
		Если СтрокаТаблицаАмортизации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.ОсновноеСредство = ОС;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.Стоимость        = 0;
		НоваяСтрока.Амортизация      = СтрокаТаблицаАмортизации.Бух;
		
		НоваяСтрока = ТабАмортизации.Добавить();
		НоваяСтрока.ОсновноеСредство = ОС;
		НоваяСтрока.АмортизацияЗаМесяцБУ = СтрокаТаблицаАмортизации.Бух;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьПриход();
	
	НаборДвижений.Записать();
	
	ТаблицаДвижений.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(СтоимостьОСБухгалтерскийУчетОстатки.СтоимостьОстаток) КАК Стоимость,
	|	СУММА(СтоимостьОСБухгалтерскийУчетОстатки.АмортизацияОстаток) КАК Амортизация
	|ИЗ
	|	РегистрНакопления.СтоимостьОСБухгалтерскийУчет.Остатки(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК СтоимостьОСБухгалтерскийУчетОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.Стоимость        = СтрокаОС.Стоимость;
		НоваяСтрока.Амортизация      = СтрокаОС.Амортизация;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьПриход();
	
	ТаблицаДвижений.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтоимостьОСБухгалтерскийУчетОстатки.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОСБухгалтерскийУчетОстатки.АмортизацияОстаток КАК Амортизация,
	|	СтоимостьОСБухгалтерскийУчетОстатки.ОсновноеСредство
	|ИЗ
	|	РегистрНакопления.СтоимостьОСБухгалтерскийУчет.Остатки(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК СтоимостьОСБухгалтерскийУчетОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ОстаткиПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ОстаткиПоОС Цикл
		
		Если СтрокаОС.Стоимость = 0 И СтрокаОС.Амортизация = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		НоваяСтрока.Стоимость        = СтрокаОС.Стоимость;
		НоваяСтрока.Амортизация      = СтрокаОС.Амортизация;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьРасход();
	
КонецПроцедуры // ДвижениеПоРегиструАмортизацияБух()

// Процедура формирования движений по регистру Амортизация нал.
//
Процедура ДвижениеПоРегиструАмортизацияНал( ТабОС, СтруктураШапкиДокумента, ТабАмортизации)
	
	НаборДвижений   = Движения.СтоимостьОСНалоговыйУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	ТаблицаАмортизации = УправлениеВнеоборотнымиАктивами.РасчетАмортизацииНалогРегл(ЭтотОбъект, Дата, Организация, ТабОС, Ложь);
	
	Для Каждого ОС Из ТабОС Цикл
		
		СтрокаТаблицаАмортизации = ТаблицаАмортизации.Найти(ОС,"ОС");
		
		Если СтрокаТаблицаАмортизации = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.ОсновноеСредство = ОС;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.Стоимость        = 0;
		НоваяСтрока.Амортизация      = СтрокаТаблицаАмортизации.Налог;
		
		НоваяСтрока = ТабАмортизации.Добавить();
		НоваяСтрока.ОсновноеСредство = ОС;
		НоваяСтрока.АмортизацияЗаМесяцНУ = СтрокаТаблицаАмортизации.Налог;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьПриход();
	
	НаборДвижений.Записать();
	
	ТаблицаДвижений.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(СтоимостьОСНалоговыйУчетОстатки.СтоимостьОстаток) КАК Стоимость,
	|	СУММА(СтоимостьОСНалоговыйУчетОстатки.АмортизацияОстаток) КАК Амортизация
	|ИЗ
	|	РегистрНакопления.СтоимостьОСНалоговыйУчет.Остатки(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК СтоимостьОСНалоговыйУчетОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.Стоимость        = СтрокаОС.Стоимость;
		НоваяСтрока.Амортизация      = СтрокаОС.Амортизация;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьПриход();
	
	ТаблицаДвижений.Очистить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтоимостьОСНалоговыйУчетОстатки.СтоимостьОстаток КАК Стоимость,
	|	СтоимостьОСНалоговыйУчетОстатки.АмортизацияОстаток КАК Амортизация,
	|	СтоимостьОСНалоговыйУчетОстатки.ОсновноеСредство
	|ИЗ
	|	РегистрНакопления.СтоимостьОСНалоговыйУчет.Остатки(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК СтоимостьОСНалоговыйУчетОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ОстаткиПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ОстаткиПоОС Цикл
		
		Если СтрокаОС.Стоимость = 0 И СтрокаОС.Амортизация = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
		НоваяСтрока.Стоимость        = СтрокаОС.Стоимость;
		НоваяСтрока.Амортизация      = СтрокаОС.Амортизация;
		
	КонецЦикла;
	
	НаборДвижений.мПериод = Дата;
	НаборДвижений.мТаблицаДвижений = ТаблицаДвижений;
	НаборДвижений.ВыполнитьРасход();
	
КонецПроцедуры // ДвижениеПоРегиструАмортизацияНал()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру НоменклатураОС
//
Процедура ДвижениеПоРегиструНоменклатураОС( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.НоменклатураОсновныхСредств;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НоменклатураОсновныхСредств.ОсновноеСредство,
	|	НоменклатураОсновныхСредств.Номенклатура,
	|	НоменклатураОсновныхСредств.Характеристика
	|ИЗ
	|	РегистрСведений.НоменклатураОсновныхСредств КАК НоменклатураОсновныхСредств
	|ГДЕ
	|	НоменклатураОсновныхСредств.ОсновноеСредство = &ОсновноеСредство";
	Запрос.УстановитьПараметр("ОсновноеСредство", ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Активность       = Истина;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.Номенклатура     = СтрокаОС.Номенклатура;
		НоваяСтрока.Характеристика   = СтрокаОС.ХарактеристикаНоменклатуры;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструНоменклатураОС()


////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру Первоначальные сведеняи об ОС.
//
Процедура ДвижениеПоРегиструПервоначальныеСведенияОСУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.ПервоначальныеСведенияОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОССрезПоследних.СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОССрезПоследних.ПараметрВыработки,
	|	СУММА(ПервоначальныеСведенияОССрезПоследних1.ПервоначальнаяСтоимость) КАК ПервоначальнаяСтоимость
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(&Период, ОсновноеСредство = &ОсновноеСредство) КАК ПервоначальныеСведенияОССрезПоследних,
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(&Период, ОсновноеСредство В (&ОсновныеСредства)) КАК ПервоначальныеСведенияОССрезПоследних1
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияОССрезПоследних.СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОССрезПоследних.ПараметрВыработки";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство",	ГлавноеОсновноеСредство);
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                      = Дата;
		НоваяСтрока.Активность                  = Истина;
		НоваяСтрока.ОсновноеСредство            = ОсновноеСредство;
		НоваяСтрока.ПервоначальнаяСтоимость     = СтрокаОС.ПервоначальнаяСтоимость;
		НоваяСтрока.СпособНачисленияАмортизации = СтрокаОС.СпособНачисленияАмортизации;
		НоваяСтрока.ПараметрВыработки           = СтрокаОС.ПараметрВыработки;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструПервоначальныеСведенияОСУпр()

// Процедура формирования движений по регистру Первоначальные сведеняи об ОС бух.
//
Процедура ДвижениеПоРегиструПервоначальныеСведенияОСБух( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.ПервоначальныеСведенияОСБухгалтерскийУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПараметрВыработки,
	|	СУММА(ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних1.ПервоначальнаяСтоимость) КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособПоступления
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних,
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних1
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПараметрВыработки,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособПоступления";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",	ГлавноеОсновноеСредство);
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                      = Дата;
		НоваяСтрока.Активность                  = Истина;
		НоваяСтрока.Организация           		= Организация;
		НоваяСтрока.ИнвентарныйНомер           	= ОсновноеСредство.Код;
		НоваяСтрока.ОсновноеСредство            = ОсновноеСредство;
		НоваяСтрока.ПервоначальнаяСтоимость     = СтрокаОС.ПервоначальнаяСтоимость;
		НоваяСтрока.СпособНачисленияАмортизации = СтрокаОС.СпособНачисленияАмортизации;
		НоваяСтрока.ПараметрВыработки           = СтрокаОС.ПараметрВыработки;
		НоваяСтрока.СпособПоступления           = СтрокаОС.СпособПоступления;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструПервоначальныеСведенияОСБух()

// Процедура формирования движений по регистру Первоначальные сведеняи об ОС нал.
//
Процедура ДвижениеПоРегиструПервоначальныеСведенияОСНал( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.ПервоначальныеСведенияОСНалоговыйУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходов,
	|	СУММА(ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних1.ПервоначальнаяСтоимостьНУ) КАК ПервоначальнаяСтоимостьНУ,
	|	СУММА(ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних1.СтоимостьДо2002) КАК СтоимостьДо2002,
	|	СУММА(ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних1.АмортизацияДо2002) КАК АмортизацияДо2002
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних,
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних1
	|
	|СГРУППИРОВАТЬ ПО
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходов";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство",	ГлавноеОсновноеСредство);
	Запрос.УстановитьПараметр("ОсновныеСредства",	ТабОС);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                      = Дата;
		НоваяСтрока.Активность                  = Истина;
		НоваяСтрока.Организация           		= Организация;
		НоваяСтрока.ОсновноеСредство            = ОсновноеСредство;
		НоваяСтрока.ПервоначальнаяСтоимостьНУ                = СтрокаОС.ПервоначальнаяСтоимостьНУ;
		НоваяСтрока.МетодНачисленияАмортизации               = СтрокаОС.МетодНачисленияАмортизации;
		НоваяСтрока.СтоимостьДо2002                          = СтрокаОС.СтоимостьДо2002;
		НоваяСтрока.АмортизацияДо2002                        = СтрокаОС.АмортизацияДо2002;
		НоваяСтрока.ПорядокВключенияСтоимостиВСоставРасходов = СтрокаОС.ПорядокВключенияСтоимостиВСоставРасходов;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструПервоначальныеСведенияОСНал()

// Процедура формирования движений по регистру Первоначальные сведеняи об ОС нал.
//
Процедура ДвижениеПоРегиструПервоначальныеСведенияОСУСН( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.ПервоначальныеСведенияОСНалоговыйУчетУСН;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Для Каждого СтрокаОС Из ТабОС Цикл
		Если СтрокаОС.СписатьНаЗатратыПриВводеРегл тогда 
			Продолжить;
		КонецЕсли;
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                      = СтрокаОС.ДатаПринятияКУчетуРегл;
		НоваяСтрока.Организация                 = СтруктураШапкиДокумента.Организация;
		НоваяСтрока.ОсновноеСредство            = СтрокаОС.ОсновноеСредство;
		НоваяСтрока.ПервоначальнаяСтоимостьУСН  = СтрокаОС.ПервоначальнаяСтоимостьУСН;
		НоваяСтрока.СрокПолезногоИспользования  = СтрокаОС.СрокПолезногоИспользованияУСН;
		НоваяСтрока.СуммаНачисленнойАмортизации = СтрокаОС.СуммаНачисленнойАмортизацииУСН;
		НоваяСтрока.ДатаПриобретения            = СтрокаОС.ДатаПриобретенияУСН;
		НоваяСтрока.ПорядокВключенияСтоимостиВСоставРасходовУСН = СтрокаОС.ПорядокВключенияСтоимостиВСоставРасходовУСН;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	НаборДвижений.УстановитьАктивность(Истина);
	
КонецПроцедуры // ДвижениеПоРегиструПервоначальныеСведенияОСУСН()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру Местонахождение ОС.
//
Процедура ДвижениеПоРегиструМестонахождениеОСУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.МестонахождениеОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МестонахождениеОССрезПоследних.МОЛ,
	|	МестонахождениеОССрезПоследних.Местонахождение,
	|	МестонахождениеОССрезПоследних.Обособленное
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(&Период, ОсновноеСредство = &ОсновноеСредство) КАК МестонахождениеОССрезПоследних";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Активность       = Истина;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.МОЛ              = СтрокаОС.МОЛ;
		НоваяСтрока.Местонахождение  = СтрокаОС.Местонахождение;
		//АБС
		НоваяСтрока.Обособленное = СтрокаОС.Обособленное;
       //АБС
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструМестонахождениеОСУпр()

// Процедура формирования движений по регистру Местонахождение ОС бух.
//
Процедура ДвижениеПоРегиструМестонахождениеОСБух( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.МестонахождениеОСБухгалтерскийУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.МОЛ,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Обособленное
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Активность       = Истина;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.МОЛ              = СтрокаОС.МОЛ;
		НоваяСтрока.Местонахождение  = СтрокаОС.Местонахождение;
		//АБС
		НоваяСтрока.Обособленное = СтрокаОС.Обособленное;
       //АБС
   КонецЦикла;
   
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструМестонахождениеОСБух()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру Графики амортизации ОС.
//
Процедура ДвижениеПоРегиструГрафикиАмортизацииОСУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.ГрафикиАмортизацииОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиАмортизацииОССрезПоследних.ГрафикАмортизации
	|ИЗ
	|	РегистрСведений.ГрафикиАмортизацииОС.СрезПоследних(&Период, ОсновноеСредство = &ОсновноеСредство) КАК ГрафикиАмортизацииОССрезПоследних";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Активность        = Истина;
		НоваяСтрока.Период            = Дата;
		НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
		НоваяСтрока.ГрафикАмортизации = СтрокаОС.ГрафикАмортизации;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструГрафикиАмортизацииОСУпр()

// Процедура формирования движений по регистру Графики амортизации ОС бух.
//
Процедура ДвижениеПоРегиструГрафикиАмортизацииОСБух( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.ГрафикиАмортизацииОСБухгалтерскийУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних.ГрафикАмортизации
	|ИЗ
	|	РегистрСведений.ГрафикиАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Активность        = Истина;
		НоваяСтрока.Период            = Дата;
		НоваяСтрока.Организация       = Организация;
		НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
		НоваяСтрока.ГрафикАмортизации = СтрокаОС.ГрафикАмортизации;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструГрафикиАмортизацииОСБух()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру Начисление амортизации.
//
Процедура ДвижениеПоРегиструНачислениеАмортизацииУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.НачислениеАмортизацииОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииОССрезПоследних.НачислятьАмортизацию
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОС.СрезПоследних(&Период, ОсновноеСредство = &ОсновноеСредство) КАК НачислениеАмортизацииОССрезПоследних";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		НоваяСтрока.ОсновноеСредство                   = ОсновноеСредство;
		НоваяСтрока.НачислятьАмортизацию               = СтрокаОС.НачислятьАмортизацию;
		НоваяСтрока.НачислятьАмортизациюВТекущемМесяце = Ложь;
		
	КонецЦикла;
	
	Для Каждого ОС Из ТабОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		НоваяСтрока.ОсновноеСредство                   = ОС;
		НоваяСтрока.НачислятьАмортизацию               = Ложь;
		НоваяСтрока.НачислятьАмортизациюВТекущемМесяце = Ложь;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструНачислениеАмортизацииУпр()

// Процедура формирования движений по регистру Начисление амортизации бух.
//
Процедура ДвижениеПоРегиструНачислениеАмортизацииБух( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.НачислениеАмортизацииОСБухгалтерскийУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		НоваяСтрока.Организация      				   = Организация;
		НоваяСтрока.ОсновноеСредство                   = ОсновноеСредство;
		НоваяСтрока.НачислятьАмортизацию               = СтрокаОС.НачислятьАмортизацию;
		
	КонецЦикла;
	
	Для Каждого ОС Из ТабОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		НоваяСтрока.Организация      				   = Организация;
		НоваяСтрока.ОсновноеСредство                   = ОС;
		НоваяСтрока.НачислятьАмортизацию               = Ложь;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструНачислениеАмортизацииБух()

// Процедура формирования движений по регистру Начисление амортизации нал.
//
Процедура ДвижениеПоРегиструНачислениеАмортизацииНал( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.НачислениеАмортизацииОСНалоговыйУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.НачислятьАмортизацию
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК НачислениеАмортизацииОСНалоговыйУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		НоваяСтрока.Организация      				   = Организация;
		НоваяСтрока.ОсновноеСредство                   = ОсновноеСредство;
		НоваяСтрока.НачислятьАмортизацию               = СтрокаОС.НачислятьАмортизацию;
		
	КонецЦикла;
	
	Для Каждого ОС Из ТабОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		НоваяСтрока.Организация      				   = Организация;
		НоваяСтрока.ОсновноеСредство                   = ОС;
		НоваяСтрока.НачислятьАмортизацию               = Ложь;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструНачислениеАмортизацииНал()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру ПараметрыАмортизации ОС.
//
Процедура ДвижениеПоРегиструПараметрыАмортизацииУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.ПараметрыАмортизацииОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыАмортизацииОССрезПоследних.СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОССрезПоследних.ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОССрезПоследних.СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОССрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОССрезПоследних.КоэффициентАмортизации,
	|	ПараметрыАмортизацииОССрезПоследних.КоэффициентУскорения,
	|	СУММА(ПараметрыАмортизацииОССрезПоследних1.СтоимостьДляВычисленияАмортизации) КАК СтоимостьДляВычисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОС.СрезПоследних(&Период, ОсновноеСредство = &ОсновноеСредство) КАК ПараметрыАмортизацииОССрезПоследних,
	|	РегистрСведений.ПараметрыАмортизацииОС.СрезПоследних(&Период, ОсновноеСредство В (&ОсновныеСредства)) КАК ПараметрыАмортизацииОССрезПоследних1
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыАмортизацииОССрезПоследних.СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОССрезПоследних.ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОССрезПоследних.СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОССрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОССрезПоследних.КоэффициентАмортизации,
	|	ПараметрыАмортизацииОССрезПоследних.КоэффициентУскорения";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ГлавноеОсновноеСредство);
	Запрос.УстановитьПараметр("ОсновныеСредства", ТабОС);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОС);
		НоваяСтрока.ОсновноеСредство                   = ОсновноеСредство;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструПараметрыАмортизацииУпр()

// Процедура формирования движений по регистру ПараметрыАмортизации ОС бух.
//
Процедура ДвижениеПоРегиструПараметрыАмортизацииБух( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.ПараметрыАмортизацииОСБухгалтерскийУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентУскорения,
	|	СУММА(ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних1.СтоимостьДляВычисленияАмортизации) КАК СтоимостьДляВычисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних,
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних1
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентУскорения";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	Запрос.УстановитьПараметр("ОсновныеСредства", 	ТабОС);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОС);
		НоваяСтрока.ОсновноеСредство                   = ОсновноеСредство;
		НоваяСтрока.Организация      				   = Организация;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструПараметрыАмортизацииБух()

// Процедура формирования движений по регистру ПараметрыАмортизации ОС нал.
//
Процедура ДвижениеПоРегиструПараметрыАмортизацииНал( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.ПараметрыАмортизацииОСНалоговыйУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации,
	|	СУММА(ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних1.ПРДляВычисленияАмортизации) КАК ПРДляВычисленияАмортизации,
	|	СУММА(ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних1.СтоимостьДляВычисленияАмортизации) КАК СтоимостьДляВычисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних,
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В (&ОсновныеСредства)
	|				И Организация = &Организация) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних1
	|
	|СГРУППИРОВАТЬ ПО
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	Запрос.УстановитьПараметр("ОсновныеСредства", 	ТабОС);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                             = Дата;
		НоваяСтрока.Активность                         = Истина;
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаОС);
		НоваяСтрока.ОсновноеСредство                   = ОсновноеСредство;
		НоваяСтрока.Организация      				   = Организация;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструПараметрыАмортизацииНал()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру СобытияОС.
//
Процедура ДвижениеПоРегиструСобытияОСУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СобытияОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Период            = Дата;
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Событие		      = СобытиеПринятияКУчету;
	НоваяСтрока.НомерДокумента    = Номер;
	НоваяСтрока.НазваниеДокумента = "Комплектация ОС";
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Период            = Дата+1;
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Событие           = СобытиеВводВЭксплуатацию;
	НоваяСтрока.НомерДокумента    = Номер;
	НоваяСтрока.НазваниеДокумента = "Комплектация ОС";
	
	Для Каждого ОС Из ТабОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период            = Дата;
		НоваяСтрока.Активность        = Истина;
		НоваяСтрока.ОсновноеСредство  = ОС;
		НоваяСтрока.Событие           = СобытиеСписание;
		НоваяСтрока.НомерДокумента    = Номер;
		НоваяСтрока.НазваниеДокумента = "Комплектация ОС";
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструСобытияОСУпр()

// Процедура формирования движений по регистру  СобытияОСорганизаций.
//
Процедура ДвижениеПоРегиструСобытияОСБух( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.СобытияОСОрганизаций;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Период            = Дата;
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.Организация       = Организация;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Событие		      = СобытиеПринятияКУчету;
	НоваяСтрока.НомерДокумента    = Номер;
	НоваяСтрока.НазваниеДокумента = "Комплектация ОС";
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Период            = Дата+1;
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.Организация       = Организация;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Событие           = СобытиеВводВЭксплуатацию;
	НоваяСтрока.НомерДокумента    = Номер;
	НоваяСтрока.НазваниеДокумента = "Комплектация ОС";
	
	Для Каждого ОС Из ТабОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период            = Дата;
		НоваяСтрока.Организация       = Организация;
		НоваяСтрока.Активность        = Истина;
		НоваяСтрока.ОсновноеСредство  = ОС;
		НоваяСтрока.Событие           = СобытиеСписание;
		НоваяСтрока.НомерДокумента    = Номер;
		НоваяСтрока.НазваниеДокумента = "Комплектация ОС";
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);

КонецПроцедуры // ДвижениеПоРегиструСобытияОСБух()

////////////////////////////////////////////////////////////////////////////////


// Процедура формирования движений по регистру СостоянияОС.
//
Процедура ДвижениеПоРегиструСостоянияОСУпр( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СостоянияОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	ТаблицаДвижений.Очистить();
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Состояние	      = Перечисления.СостоянияОС.ПринятоКУчету;
	НоваяСтрока.ДатаСостояния	  = Дата;
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Состояние	      = Перечисления.СостоянияОС.ВведеноВЭксплуатацию;
	НоваяСтрока.ДатаСостояния	  = Дата;
	
	Для Каждого ОС Из ТабОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Активность        = Истина;
		НоваяСтрока.ОсновноеСредство  = ОС;
		НоваяСтрока.Состояние	      = Перечисления.СостоянияОС.СнятоСУчета;
		НоваяСтрока.ДатаСостояния	  = Дата;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструСостоянияОСУпр()

// Процедура формирования движений по регистру СостоянияОСОрганизаций.
//
Процедура ДвижениеПоРегиструСостоянияОСБух( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СостоянияОСОрганизаций;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.Организация       = Организация;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Состояние	      = Перечисления.СостоянияОС.ПринятоКУчету;
	НоваяСтрока.ДатаСостояния	  = Дата;
	
	НоваяСтрока = ТаблицаДвижений.Добавить();
	НоваяСтрока.Активность        = Истина;
	НоваяСтрока.Организация       = Организация;
	НоваяСтрока.ОсновноеСредство  = ОсновноеСредство;
	НоваяСтрока.Состояние	      = Перечисления.СостоянияОС.ВведеноВЭксплуатацию;
	НоваяСтрока.ДатаСостояния	  = Дата;
	
	Для Каждого ОС Из ТабОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Активность        = Истина;
		НоваяСтрока.Организация       = Организация;
		НоваяСтрока.ОсновноеСредство  = ОС;
		НоваяСтрока.Состояние	      = Перечисления.СостоянияОС.СнятоСУчета;
		НоваяСтрока.ДатаСостояния	  = Дата;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструСостоянияОСУпр()

////////////////////////////////////////////////////////////////////////////////


// Процедура формирования движений по регистру Сопособы отражения расходов по амортизации ОС.
//
Процедура ДвижениеПоРегиструСпособыОтраженияРасходовУпр( ТабОС, СтруктураШапкиДокумента);
	
	НаборДвижений   = Движения.СпособыОтраженияРасходовПоАмортизацииОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОССрезПоследних.СпособыОтраженияРасходовПоАмортизации
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОС.СрезПоследних(&Период, ОсновноеСредство = &ОсновноеСредство) КАК СпособыОтраженияРасходовПоАмортизацииОССрезПоследних";
	Запрос.УстановитьПараметр("Период", Дата);
	Запрос.УстановитьПараметр("ОсновноеСредство", ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Активность       = Истина;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.СпособыОтраженияРасходовПоАмортизации = СтрокаОС.СпособыОтраженияРасходовПоАмортизации;
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструСпособыОтраженияРасходовУпр()

// Процедура формирования движений по регистру Сопособы отражения расходов по амортизации ОС бух.
//
Процедура ДвижениеПоРегиструСпособыОтраженияРасходовБух( ТабОС, СтруктураШапкиДокумента);

	НаборДвижений   = Движения.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Активность       = Истина;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.СпособыОтраженияРасходовПоАмортизации = СтрокаОС.СпособыОтраженияРасходовПоАмортизации;
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструСпособыОтраженияРасходовБух()

// Процедура формирования движений по регистру Сопособы отражения расходов по амортизации ОС нал.
//
Процедура ДвижениеПоРегиструСпособыОтраженияРасходовНал( ТабОС, СтруктураШапкиДокумента);

	НаборДвижений   = Движения.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период           = Дата;
		НоваяСтрока.Активность       = Истина;
		НоваяСтрока.Организация      = Организация;
		НоваяСтрока.ОсновноеСредство = ОсновноеСредство;
		НоваяСтрока.СпособыОтраженияРасходовПоАмортизации = СтрокаОС.СпособыОтраженияРасходовПоАмортизации;
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструСпособыОтраженияРасходовНал()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру Счета учета ОС бух.
//
Процедура ДвижениеПоРегиструСчетаУчетаОСБух( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.СчетаБухгалтерскогоУчетаОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК СчетаБухгалтерскогоУчетаОССрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                    = Дата;
 		НоваяСтрока.Активность                = Истина;
		НоваяСтрока.ОсновноеСредство          = ОсновноеСредство;
		НоваяСтрока.Организация               = Организация;
		НоваяСтрока.СчетУчета                 = СтрокаОС.СчетУчета;
		НоваяСтрока.СчетНачисленияАмортизации = СтрокаОС.СчетНачисленияАмортизации;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструСчетаУчетаОСБух()

// Процедура формирования движений по регистру Счета учета ОС нал.
//
Процедура ДвижениеПоРегиструСчетаУчетаОСНал( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.СчетаНалоговогоУчетаОС;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетаНалоговогоУчетаОССрезПоследних.СчетУчета,
	|	СчетаНалоговогоУчетаОССрезПоследних.СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.СчетаНалоговогоУчетаОС.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК СчетаНалоговогоУчетаОССрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                    = Дата;
 		НоваяСтрока.Активность                = Истина;
		НоваяСтрока.ОсновноеСредство          = ОсновноеСредство;
		НоваяСтрока.Организация               = Организация;
		НоваяСтрока.СчетУчета                 = СтрокаОС.СчетУчета;
		НоваяСтрока.СчетНачисленияАмортизации = СтрокаОС.СчетНачисленияАмортизации;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);

КонецПроцедуры // ДвижениеПоРегиструСчетаУчетаОСНал()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирования движений по регистру начисление амортизации по базовой стоимости нал.
//
Процедура ДвижениеПоРегиструАмортизацияПоБазСтоимостиНал( ТабОС, СтруктураШапкиДокумента)
	
	НаборДвижений   = Движения.НачислениеАмортизацииОСПоБазовойСтоимостиНалоговыйУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииОСПоБазовойСтоимостиНалоговыйУчетСрезПоследних.ПризнакНачисленияПоБазовойСтоимости,
	|	НачислениеАмортизацииОСПоБазовойСтоимостиНалоговыйУчетСрезПоследних.ФактическийСрокполезногоИспользования
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСПоБазовойСтоимостиНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК НачислениеАмортизацииОСПоБазовойСтоимостиНалоговыйУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                    = Дата;
		НоваяСтрока.Активность                = Истина;
		НоваяСтрока.ОсновноеСредство          = ОсновноеСредство;
		НоваяСтрока.Организация               = Организация;
		НоваяСтрока.ПризнакНачисленияПоБазовойСтоимости   = СтрокаОС.ПризнакНачисленияПоБазовойСтоимости;
		НоваяСтрока.ФактическийСрокполезногоИспользования = СтрокаОС.ФактическийСрокполезногоИспользования;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);
	
КонецПроцедуры // ДвижениеПоРегиструАмортизацияПоБазСтоимостиНал()

// Процедура формирования движений по регистру Спец. коэф. амортизации ОС нал.
//
Процедура ДвижениеПоРегиструСпецКоэффициентНал( ТабОС, СтруктураШапкиДокумента)
		
	НаборДвижений   = Движения.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет;
	ТаблицаДвижений = НаборДвижений.Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство = &ОсновноеСредство
	|				И Организация = &Организация) КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних";
	Запрос.УстановитьПараметр("Период", 			Дата);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновноеСредство", 	ГлавноеОсновноеСредство);
	ДвиженияПоГлавномуОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ДвиженияПоГлавномуОС Цикл
		
		НоваяСтрока = ТаблицаДвижений.Добавить();
		НоваяСтрока.Период                    = Дата;
		НоваяСтрока.Активность                = Истина;
		НоваяСтрока.ОсновноеСредство          = ОсновноеСредство;
		НоваяСтрока.Организация               = Организация;
		НоваяСтрока.СпециальныйКоэффициент 	  = СтрокаОС.СпециальныйКоэффициент;
		
	КонецЦикла;
	
	НаборДвижений.Загрузить(ТаблицаДвижений);

КонецПроцедуры // ДвижениеПоРегиструСпецКоэффициентНал()

////////////////////////////////////////////////////////////////////////////////

// Процедура формирование проводок.
//
Процедура ФормированиеПроводокБух( ТабОС, СтруктураШапкиДокумента)
	
	Операция = Движения.Хозрасчетный;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&ОсновныеСредства)) КАК ХозрасчетныйОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", 				ПланыСчетов.Хозрасчетный.ОСвОрганизации);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства", 	ТабОС);
	ОстаткиПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ОстаткиПоОС Цикл
		
		Проводка = Операция.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание  = "Комплектация ОС";
		
		Проводка.Сумма       = СтрокаОС.СуммаОстаток;
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.ОСвОрганизации;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", ОсновноеСредство);
		
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.ОСвОрганизации;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаОС.Субконто1);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1,
	|	-ХозрасчетныйОстатки.СуммаОстаток КАК Амортизация
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&ОсновныеСредства)) КАК ХозрасчетныйОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", 				ПланыСчетов.Хозрасчетный.АмортизацияОС_01);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства", 	ТабОС);
	ОстаткиПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ОстаткиПоОС Цикл
		
		Проводка = Операция.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание  = "Комплектация ОС";
		
		Проводка.Сумма       = СтрокаОС.Амортизация;
		
		Проводка.СчетДт = ПланыСчетов.Хозрасчетный.АмортизацияОС_01;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаОС.Субконто1);
		
		Проводка.СчетКт = ПланыСчетов.Хозрасчетный.АмортизацияОС_01;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", ОсновноеСредство);
		
	КонецЦикла;
	
КонецПроцедуры // ФормированиеПроводокБух

// Процедура формирование проводок нал.
//
Процедура ФормированиеПроводокНал( ТабОС, СтруктураШапкиДокумента)
	
	Операция = Движения.Налоговый;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1,
	|	НалоговыйОстатки.СуммаОстаток,
	|	НалоговыйОстатки.ВидУчета
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&ОсновныеСредства)) КАК НалоговыйОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", 				ПланыСчетов.Налоговый.ОСвОрганизации);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства", 	ТабОС);
	ОстаткиПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ОстаткиПоОС Цикл
		
		Проводка = Операция.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание  = "Комплектация ОС";
		
		Проводка.Сумма       = СтрокаОС.СуммаОстаток;
		Проводка.ВидУчетаДт    = СтрокаОС.ВидУчета;
		Проводка.ВидУчетаКт    = СтрокаОС.ВидУчета;
		
		Проводка.СчетДт = ПланыСчетов.Налоговый.ОСвОрганизации;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", ОсновноеСредство);
		
		Проводка.СчетКт = ПланыСчетов.Налоговый.ОСвОрганизации;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаОС.Субконто1);
		
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НалоговыйОстатки.Субконто1,
	|	-НалоговыйОстатки.СуммаОстаток КАК Амортизация,
	|	НалоговыйОстатки.ВидУчета
	|ИЗ
	|	РегистрБухгалтерии.Налоговый.Остатки(
	|			&Период,
	|			Счет = &Счет,
	|			,
	|			Организация = &Организация
	|				И Субконто1 В (&ОсновныеСредства)) КАК НалоговыйОстатки";
	Запрос.УстановитьПараметр("Период", 			Новый Граница(Дата, ВидГраницы.Включая));
	Запрос.УстановитьПараметр("Счет", 				ПланыСчетов.Налоговый.АмортизацияОС_01);
	Запрос.УстановитьПараметр("Организация", 		Организация);
	Запрос.УстановитьПараметр("ОсновныеСредства", 	ТабОС);
	ОстаткиПоОС = Запрос.Выполнить().Выгрузить();
	
	Для Каждого СтрокаОС Из ОстаткиПоОС Цикл
		
		Проводка = Операция.Добавить();
		Проводка.Период      = Дата;
		Проводка.Организация = Организация;
		Проводка.Содержание  = "Комплектация ОС";
		
		Проводка.Сумма       = СтрокаОС.Амортизация;
		Проводка.ВидУчетаДт    = СтрокаОС.ВидУчета;
		Проводка.ВидУчетаКт    = СтрокаОС.ВидУчета;
		
		Проводка.СчетДт = ПланыСчетов.Налоговый.АмортизацияОС_01;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаОС.Субконто1);
		
		Проводка.СчетКт = ПланыСчетов.Налоговый.АмортизацияОС_01;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", ОсновноеСредство);
		
	КонецЦикла;


КонецПроцедуры // ФормированиеПроводокНал

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если мУдалятьДвижения Тогда
		ttk_ОбщегоНазначения.УдалитьДвиженияРегистратора(ЭтотОбъект, Отказ);
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормированиеДвиженийПоЗатратам(ТабОС, СтруктураШапкиДокумента, ТаблицаПоОС, Отказ, Заголовок)
	
	ПроводкиБУ = Движения.Хозрасчетный;
	// подготовка таблицы для списания
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекОрганизация",  Организация);
	Запрос.УстановитьПараметр("ТекПериод",       Дата);
	Запрос.УстановитьПараметр("ОсновныеСредства",ТабОС);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОС_БУ,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОС_НУ,
	|	СпособыОтраженияРасходовПоАмортизацииСрезПоследних.ОсновноеСредство КАК ОС_УУ,
	|	СпособыОтраженияРасходовПоАмортизацииБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации КАК Направление_БУ,
	|	СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации КАК Направление_НУ,
	|	СпособыОтраженияРасходовПоАмортизацииСрезПоследних.СпособыОтраженияРасходовПоАмортизации КАК Направление_УУ
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|				&ТекПериод,
	|				ОсновноеСредство В (&ОсновныеСредства)
	|					И Организация = &ТекОрганизация) КАК СпособыОтраженияРасходовПоАмортизацииБухгалтерскийУчетСрезПоследних
	|		ПО ОсновныеСредства.Ссылка = СпособыОтраженияРасходовПоАмортизацииБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет.СрезПоследних(
	|				&ТекПериод,
	|				ОсновноеСредство В (&ОсновныеСредства)
	|					И Организация = &ТекОрганизация) КАК СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних
	|		ПО ОсновныеСредства.Ссылка = СпособыОтраженияРасходовПоАмортизацииНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОС.СрезПоследних(&ТекПериод, ОсновноеСредство В (&ОсновныеСредства)) КАК СпособыОтраженияРасходовПоАмортизацииСрезПоследних
	|		ПО ОсновныеСредства.Ссылка = СпособыОтраженияРасходовПоАмортизацииСрезПоследних.ОсновноеСредство
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&ОсновныеСредства)";
	ТаблицаНаправлений = Запрос.Выполнить().Выгрузить();
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекОрганизация",  Организация);
	Запрос.УстановитьПараметр("ТекДата",         Дата);
	Запрос.УстановитьПараметр("ОсновныеСредства",ТабОС);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство КАК ОС_БУ,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетУчета КАК СчетУчетаБУ,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииБУ,
	|	СчетаНалоговогоУчетаОсновныхСредствСрезПоследних.СчетУчета КАК СчетУчетаНУ,
	|	СчетаНалоговогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство КАК ОС_НУ,
	|	СчетаНалоговогоУчетаОсновныхСредствСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииНУ
	|ИЗ
	|	Справочник.ОсновныеСредства КАК ОсновныеСредства
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|				&ТекДата,
	|				Организация = &ТекОрганизация
	|					И ОсновноеСредство В (&ОсновныеСредства)) КАК СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних
	|		ПО ОсновныеСредства.Ссылка = СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СчетаНалоговогоУчетаОС.СрезПоследних(
	|				&ТекДата,
	|				Организация = &ТекОрганизация
	|					И ОсновноеСредство В (&ОсновныеСредства)) КАК СчетаНалоговогоУчетаОсновныхСредствСрезПоследних
	|		ПО ОсновныеСредства.Ссылка = СчетаНалоговогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство
	|ГДЕ
	|	ОсновныеСредства.Ссылка В(&ОсновныеСредства)";
	ТаблицаСчетов  = Запрос.Выполнить().Выгрузить();
	
	АмортизацияОС  = Движения.СтоимостьОСБухгалтерскийУчет;
	
	ТаблицаДвиженийАмортизация = АмортизацияОС.Выгрузить();
	ТаблицаДвиженийАмортизация.Очистить();
	
	ТабАмортизации = Новый ТаблицаЗначений;
	ТабАмортизации.Колонки.Добавить("НаправлениеАмортизации", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"));
	ТабАмортизации.Колонки.Добавить("ОбъектУчета",            Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТабАмортизации.Колонки.Добавить("Сумма",                  Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла( 15, 2)));
	ТабАмортизации.Колонки.Добавить("СчетАмортизации");
	ТабАмортизации.Колонки.Добавить("СчетАмортизацииНУ");
	ТабАмортизации.Колонки.Добавить("ИмяСубконто", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(16)));
	
	Для Каждого СтрокаОС Из ТаблицаПоОС Цикл
		
		Если НЕ (СтрокаОС.АмортизацияЗаМесяцБУ = 0) Тогда
			
			НоваяСтрока = ТабАмортизации.Добавить();
			
			НоваяСтрока.Сумма       = СтрокаОС.АмортизацияЗаМесяцБУ;
			НоваяСтрока.ОбъектУчета = СтрокаОС.ОсновноеСредство;
			НоваяСтрока.ИмяСубконто = "ОсновныеСредства";
			
			ТекНаправление = ТаблицаНаправлений.Найти(СтрокаОС.ОсновноеСредство,"ОС_БУ");
			НоваяСтрока.НаправлениеАмортизации = ?(ТекНаправление = Неопределено,Неопределено,ТекНаправление.Направление_БУ);
			
			СтрокаТЗ = ТаблицаСчетов.Найти(СтрокаОС.ОсновноеСредство,"ОС_БУ");
			Если СтрокаТЗ <> Неопределено Тогда
				
				НоваяСтрока.СчетАмортизации = СтрокаТЗ.СчетНачисленияАмортизацииБУ;
				
			Иначе
				
				ttk_ОбщегоНазначения.СообщитьОбОшибке("Основное средство " + СтрокаОС.ОсновноеСредство.Наименование +
				" не отражалось в бух. учете в организации " + Организация, Отказ); 	
				Возврат;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	//вызов процедуры списания амортизации по направлениям
	ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТабАмортизации, СтруктураШапкиДокумента,"Бух","ОС");
	ПроводкиБУ.Записать();
	ТабАмортизацииБУ = ТабАмортизации;
	ПроводкиНУ = Движения.Налоговый;
	
	// подготовим таблицу с данными по амортизации для списания амортизации по 
	// направлениям затрат
	
	АмортизацияОСНУ = Движения.СтоимостьОСНалоговыйУчет;
	
	ТаблицаДвиженийАмортизацияНУ = АмортизацияОСНУ.Выгрузить();
	ТаблицаДвиженийАмортизацияНУ.Очистить();
	
	ТаблицаДвиженийСтоимостьНУ = ТаблицаДвиженийАмортизацияНУ.Скопировать();
	
	ТабАмортизации = Новый ТаблицаЗначений;
	ТабАмортизации.Колонки.Добавить("НаправлениеАмортизации", Новый ОписаниеТипов("СправочникСсылка.СпособыОтраженияРасходовПоАмортизации"));
	ТабАмортизации.Колонки.Добавить("ОбъектУчета",            Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	ТабАмортизации.Колонки.Добавить("Сумма",                  Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла( 15, 2)));
	ТабАмортизации.Колонки.Добавить("СуммаБУ",                Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла( 15, 2)));
	ТабАмортизации.Колонки.Добавить("СчетУчетаНУ");
	ТабАмортизации.Колонки.Добавить("СчетАмортизации");
	ТабАмортизации.Колонки.Добавить("СчетАмортизацииНУ");
	ТабАмортизации.Колонки.Добавить("СуммаКапитальныхВложенийВключаемыхВРасходы", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15,2)));
	ТабАмортизации.Колонки.Добавить("ИмяСубконто", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(16)));
	
	Для Каждого СтрокаОС Из ТаблицаПоОС Цикл
		
		Если НЕ (СтрокаОС.АмортизацияЗаМесяцНУ = 0) Тогда
			
			НоваяСтрока = ТабАмортизации.Добавить();
			
			НоваяСтрока.Сумма       = СтрокаОС.АмортизацияЗаМесяцНУ;
			НоваяСтрока.ОбъектУчета = СтрокаОС.ОсновноеСредство;
			НоваяСтрока.ИмяСубконто = "ОсновныеСредства";
			
			ТекНаправление = ТаблицаНаправлений.Найти(СтрокаОС.ОсновноеСредство,"ОС_НУ");
			НоваяСтрока.НаправлениеАмортизации = ?(ТекНаправление = Неопределено,Неопределено,ТекНаправление.Направление_НУ);
			
			СтрокаТЗ = ТаблицаСчетов.Найти(СтрокаОС.ОсновноеСредство,"ОС_НУ");
			Если СтрокаТЗ <> Неопределено Тогда
				НоваяСтрока.СчетАмортизацииНУ = СтрокаТЗ.СчетНачисленияАмортизацииНУ;
				НоваяСтрока.СчетУчетаНУ       = СтрокаТЗ.СчетУчетаНУ;
			Иначе
				ttk_ОбщегоНазначения.СообщитьОбОшибке("Основное средство " + СтрокаОС.ОсновноеСредство.Наименование +
				" не отражалось в налог. учете в организации " + Организация, Отказ); 	
				Возврат;
			КонецЕсли;
			
			СтрокаАмортизацииБУ = ТаблицаПоОС.Найти(СтрокаОС.ОсновноеСредство, "ОсновноеСредство");
			Если СтрокаАмортизацииБУ <> Неопределено Тогда
				НоваяСтрока.СуммаБУ = СтрокаАмортизацииБУ.АмортизацияЗаМесяцБУ;
			Иначе
				НоваяСтрока.СуммаБУ = 0;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТабЗатрат = УправлениеВнеоборотнымиАктивами.ПолучитьРаспределениеАмортизацииПоНаправлениямРегл(ЭтотОбъект, Отказ, Заголовок, ТабАмортизации, СтруктураШапкиДокумента, "Нал", "ОС");
	ПроводкиНУ.Записать();

 КонецПроцедуры