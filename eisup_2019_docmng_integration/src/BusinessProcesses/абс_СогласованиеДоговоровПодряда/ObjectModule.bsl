
Перем ФормаДоговора Экспорт;

/////////////////////////////////////////////////
// Процедуры обработки ИнтерактивнойАктивации

Процедура ЗаполнениеДоговораПодрядаОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.абсСогласованиеДоговоровПодряда.ТочкиМаршрута.ЗаполнениеДоговораПодряда Тогда
		Если ДоговорПодряда.Пустая() Тогда
			
			ДоговорОбъект = Документы.ДоговорНаВыполнениеРаботСФизЛицом.СоздатьДокумент();
			ФормаДоговора = ДоговорОбъект.ПолучитьФорму("ФормаДокумента");
			ФормаДоговора.Открыть();
			
		Иначе		
			 ОткрытьФормуДоговора(ДоговорПодряда,Задача);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаНСИОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеДействиеСогласованиеРукДепОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);
	
КонецПроцедуры

Процедура ДействиеСогласованиеБухгалтеромОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура СогласованиеПДОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);
	
КонецПроцедуры

Процедура РегистрацияДоговораОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеПВПОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеОтказОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеОтделомКадровОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ОткрытьФормуДоговора(ДоговорПодряда,Задача) Экспорт
	
	Если НЕ ДоговорПодряда.Пустая() Тогда
		
		ФормаДоговора = ДоговорПодряда.ПолучитьФорму("ФормаДокумента");
		
		Если ФормаДоговора.Открыта() Тогда
			ФормаДоговора.Активизировать();
		Иначе
			ФормаДоговора.Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////
//Обработчики ПриСозданииЗадач

Процедура СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ФормируемыеЗадачи.Очистить();	
	
	абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговораПодряда(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, ДоговорПодряда.Ответственный, Отказ,,,Неопределено);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ЗаполнениеДоговораПодрядаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеОтказПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);

КонецПроцедуры

Процедура ПроверкаНСИПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	//СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	//абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
КонецПроцедуры

Процедура ДействиеДействиеСогласованиеРукДепПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура СогласованиеПДПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);	
	
КонецПроцедуры

Процедура ДействиеСогласованиеБухгалтеромПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура РегистрацияДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеСогласованиеОтделомКадровПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	//ФормируемыеЗадачи.Очистить();
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);	
	
КонецПроцедуры

Процедура ДействиеСогласованиеПВППриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	//СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	//БизнесПроцессы.СформироватьЗадачуСогласованиеДоговораПодряда(Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Ссылка.ДоговорПодряда.Ответственный, Отказ);
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
КонецПроцедуры

Процедура СформироватьГрупповуюЗадачу(ТочкаМаршрута, ФормируемыеЗадачи, Отказ = Ложь)
	
	ФормируемыеЗадачи.Очистить();
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямДоговорыПодряда(ЭтотОбъект.Ссылка, ТочкаМаршрута, ФормируемыеЗадачи);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач. На найдено ответственных для выполнения задачи " + ТочкаМаршрута.НаименованиеЗадачи, Отказ);
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

/////////////////////////////////////////////////
//Обработчики проверки вариантов и условий

Процедура УсловиеОтправитьНаСогласованиеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорПодряда.абс_СтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.ПодписаниеВторойСтороны;
	
КонецПроцедуры

Процедура ВыборВариантаНСИОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.СогласованиеРуководителяЦФО Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеРукЦФО;
	КонецЕсли;

КонецПроцедуры

Процедура ВыборВариантаРукДепОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.ПроверкаЭБ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ПроверкаДоговораЭБ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаПДОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.СогласованиеГлавнымБухгалтером Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеГлавнымБухгалтером;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаПослеСогласованияБухгалтериейОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.СогласованиеКадрами Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеОтделомКадров;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	КонецЕсли;	
	
КонецПроцедуры   

Процедура ВыборВариантаКадрыОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.ПроверкаПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ПроверкаПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	
	
КонецПроцедуры

Процедура УсловиеСогласованПВППроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	//Результат = ДоговорПодряда.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Регистрация;
	
КонецПроцедуры

Процедура ЗавершениеДоговорСогласованИЗарегестрированПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ОбъектДП = ДоговорПодряда.ПолучитьОбъект();
	ОбъектДП.абс_СтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Исполнение;
	Попытка
		ОбъектДП.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщить("Не удалось завершить согласование договора подряда №"+ОбъектДП.Номер);
	КонецПопытки;
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ОтменаПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	//ОбъектДП = ДоговорПодряда.ПолучитьОбъект();
	//ОбъектДП.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отмена;
	////ОбъектДП.ПометкаУдаления = Истина;
	//Попытка
	//	ОбъектДП.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	//Исключение
	//	Сообщить("Не удалось отменить проведение договора подряда №"+ОбъектДП.Номер);
	//	Попытка
	//		ОбъектДП.Записать();
	//	Исключение
	//		Сообщить("Не удалось записать договор подряда №"+ОбъектДП.Номер);
	//	КонецПопытки;
	//КонецПопытки;
	//
	//абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	//
КонецПроцедуры

/////////////////////////////////////////////////
//Обработчики событий

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		
		Организация = ДоговорПодряда.Организация;
		ПользовательИнициаторБП = ДоговорПодряда.Ответственный;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыборВариантаДоговорПодписанОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.РегистрацияСотрудника Тогда
		Результат = ТочкаВыбораВарианта.Варианты.РегистрацияСотрудника;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	

КонецПроцедуры

Процедура ДействиеРегистрацияСотрудникаОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеРегистрацияСотрудникаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	//ФормируемыеЗадачи.Очистить();

	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
КонецПроцедуры

Процедура ВыборВариантаРегистрацияСотрудникаОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.РегистрацияНомераДоговора Тогда
		Результат = ТочкаВыбораВарианта.Варианты.РегистрацияНомераДоговора;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	

КонецПроцедуры

Процедура ДействиеРегистрацияНомераДоговораОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеРегистрацияНомераДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	//ФормируемыеЗадачи.Очистить();

	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
КонецПроцедуры

Процедура ВыборВариантаНомерЗарегистрированОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Исполнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Исполнение;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	

КонецПроцедуры

Процедура ВыборВариантаДоговорОтправленНаСогласованиеОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.ПодписаниеВторойСтороны Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ПодписаниеВторойСтороны;
	КонецЕсли;	

КонецПроцедуры

Процедура ДействиеПроверкаПДОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеПроверкаПДПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
КонецПроцедуры

Процедура ВыборВариантаПроверкаПДОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Подписание Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Подписание;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	

КонецПроцедуры

Процедура ДействиеИсполнениеОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеИсполнениеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	//СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	//БизнесПроцессы.СформироватьЗадачуСогласованиеДоговораПодряда(Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Ссылка.ДоговорПодряда.Ответственный, Отказ);
    СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);

КонецПроцедуры

Процедура ВыборВарианта1ОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.ЗакрытиеОтделомКадров Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДоговорЗакрытБухгалтерией;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Подписание Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДействиеЗакрытиеОтделомКадровОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеЗакрытиеОтделомКадровПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	//ФормируемыеЗадачи.Очистить();
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);

КонецПроцедуры

Процедура ВыборВариантаДоговорЗакрытОКОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Закрыт Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Закрыт;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.Подписание Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	

КонецПроцедуры

Процедура ВыборВариантаЗавершилосьИсполнениеОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абс_СтатусыДоговоровПодряда.ЗакрытиеБухгалтерией Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ЗакрытиеБухгалтерией;
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДействиеЗакрытиеБухгалтериейОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеЗакрытиеБухгалтериейПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	//ФормируемыеЗадачи.Очистить();
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
КонецПроцедуры
