
Процедура СогласованаНаУровнеДЗОПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Если ЗаявкаНаДобавлениеПрав.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеРуководителемКадровойСлужбы или ЗаявкаНаДобавлениеПрав.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК Тогда
		Результат	= Истина;
	Иначе
		Результат	= Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура СогласованаНаУровнеКТТКПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)

	Если ЗаявкаНаДобавлениеПрав.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.Утверждена Тогда
		Результат	= Истина;
	Иначе
		Результат	= Ложь;
	КонецЕсли;	
	
КонецПроцедуры

Процедура СогласованиеНаУровнеДЗОПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	
КонецПроцедуры

Процедура СформироватьЗадачуНаСогласование(Роль,ТочкаМаршрутаБизнесПроцесса,ФормируемыеЗадачи)
	
	ФормируемыеЗадачи.Очистить();
	
	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.абс_СогласованиеЗаявкиНаДобавлениеИзменениеПравДоступаНаУровнеДЗО.ТочкиМаршрута.ПодготовкаЗаявки Тогда
		НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
		НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
		НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрутаБизнесПроцесса;
		НоваяЗадача.Дата 				= ТекущаяДата();
		НоваяЗадача.Наименование 		= Строка(ЭтотОбъект.Ссылка.ЗаявкаНаДобавлениеПрав) + " " + ТочкаМаршрутаБизнесПроцесса.НаименованиеЗадачи + ".";
		НоваяЗадача.Исполнитель 		= ЗаявкаНаДобавлениеПрав.Ответственный;
		НоваяЗадача.Роль 			    = Роль;
		НоваяЗадача.Организация 		= ЗаявкаНаДобавлениеПрав.Организация;
		НоваяЗадача.ОбъектЗадачи 		= ЗаявкаНаДобавлениеПрав.Ссылка;
		
		ФормируемыеЗадачи.Добавить(НоваяЗадача);
	Иначе
		ОтборПоОрганизации = ЗаявкаНаДобавлениеПрав.Организация;
		ОрганизацияКТТК = Справочники.Организации.НайтиПоНаименованию("КТТК");
	
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РолиИИсполнители.Роль,
		|	РолиИИсполнители.Исполнитель
		|ИЗ
		|	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
		|ГДЕ
		|	РолиИИсполнители.Роль = &Роль
		|	И РолиИИсполнители.Организация = &Организация";
		
		//АБС+ Тупиков 21365 роль "Согласование на уровне ДЗО" завязана на организацию КТТК
		Если Роль = Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК ИЛИ Роль = Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеДЗО Тогда
			ОтборПоОрганизации = ОрганизацияКТТК;	
		КонецЕсли;
		
		Если (Роль = Справочники.РолиИсполнителей.СогласованиеГлавнымБухгалтером ИЛИ Роль = Справочники.РолиИсполнителей.СогласованиеРуководителемКадровойСлужбы) и ЗаявкаНаДобавлениеПрав.Организация.абс_СтатусОрганизации = Перечисления.абс_СтатусОрганизации.Филиал Тогда
			ОтборПоОрганизации = ОрганизацияКТТК;	
		КонецЕсли;	
		
		Запрос.УстановитьПараметр("Организация", ОтборПоОрганизации);
		Запрос.УстановитьПараметр("Роль",Роль);
		
		//Запрос = Новый Запрос;
		//Запрос.Текст = 
		//"ВЫБРАТЬ
		//|	РолиИИсполнители.Исполнитель КАК  Исполнитель
		//|ИЗ
		//|	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
		//|ГДЕ
		//|	РолиИИсполнители.Роль = &Роль";
		//
		//Запрос.УстановитьПараметр("Роль", Роль);
		Результат = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = Результат.Выбрать();
		Если ВыборкаДетальныеЗаписи.Количество() > 0 Тогда
			НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
			НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
			НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрутаБизнесПроцесса;
			НоваяЗадача.Дата 				= ТекущаяДата();
			НоваяЗадача.Наименование 		= Строка(ЭтотОбъект.Ссылка.ЗаявкаНаДобавлениеПрав) + " " + ТочкаМаршрутаБизнесПроцесса.НаименованиеЗадачи + ".";
			НоваяЗадача.Роль 			    = Роль;
			НоваяЗадача.Организация 		= ЗаявкаНаДобавлениеПрав.Организация;
			НоваяЗадача.ОбъектЗадачи 		= ЗаявкаНаДобавлениеПрав.Ссылка;
			
			//НоваяЗадача.Исполнитель = ВыборкаДетальныеЗаписи.Исполнитель;
			ФормируемыеЗадачи.Добавить(НоваяЗадача);
		КонецЕсли;
	КонецЕсли;
	
	// Добавим задачи для суперпользователей
	//абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ЗаявкаНаДобавлениеПрав.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	//абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ЗаявкаНаДобавлениеПрав.Статус);	
 КонецПроцедуры
 
Процедура Действие1ПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	 СтандартнаяОбработка = Ложь;
	 СформироватьЗадачуНаСогласование(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеКТТК,ТочкаМаршрутаБизнесПроцесса,ФормируемыеЗадачи);
 КонецПроцедуры
 
Процедура СогласованиеНаУровнеДЗОПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	 СтандартнаяОбработка = Ложь;
	 СформироватьЗадачуНаСогласование(Справочники.РолиИсполнителей.СогласованиеНастройкиПравНаУровнеДЗО,ТочкаМаршрутаБизнесПроцесса,ФормируемыеЗадачи);
 КонецПроцедуры

Процедура УсловиеСтатусОрганизацииКТТКПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если НЕ ЗаявкаНаДобавлениеПрав.Организация.абс_СтатусОрганизации = Перечисления.абс_СтатусОрганизации.ДЗО Тогда
		Результат	= Истина;
	Иначе
		Результат	= Ложь;
	КонецЕсли;		
КонецПроцедуры

Процедура УсловиеСтатусОрганизацииПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если ЗаявкаНаДобавлениеПрав.Организация.абс_СтатусОрганизации = Перечисления.абс_СтатусОрганизации.ДЗО Тогда
		Результат	= Истина;
	Иначе
		Результат	= Ложь;
	КонецЕсли;		
КонецПроцедуры

Процедура ПодготовкаЗаявкиПередСозданиемЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, СтандартнаяОбработка)
	 СтандартнаяОбработка = Ложь;
	 СформироватьЗадачуНаСогласование(Неопределено,ТочкаМаршрутаБизнесПроцесса,ФормируемыеЗадачи);
КонецПроцедуры

Процедура СогласованоРуководителемКадровойСлужбыПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если ЗаявкаНаДобавлениеПрав.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеГлавнымБухгалтером Тогда
		Результат	= Истина;
	Иначе
		Результат	= Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура СогласованоГлавнымБухгалтеромПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если ЗаявкаНаДобавлениеПрав.Статус = Перечисления.абс_СтатусыЗаявокНаДобавлениеИзменениеПрав.СогласованиеНаУровнеКТТК Тогда
		Результат	= Истина;
	Иначе
		Результат	= Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура СогласованиеРуководителемКадровойСлужбыПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	 СтандартнаяОбработка = Ложь;
	 СформироватьЗадачуНаСогласование(Справочники.РолиИсполнителей.СогласованиеРуководителемКадровойСлужбы,ТочкаМаршрутаБизнесПроцесса,ФормируемыеЗадачи);
КонецПроцедуры

Процедура СогласованиеГлавнымБухгалтеромПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	 СтандартнаяОбработка = Ложь;
	 СформироватьЗадачуНаСогласование(Справочники.РолиИсполнителей.СогласованиеГлавнымБухгалтером,ТочкаМаршрутаБизнесПроцесса,ФормируемыеЗадачи);
КонецПроцедуры

Процедура РолиИСУЗКПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	ПользовательИСУЗК = Ложь;
	//Для каждого Стр Из ЗаявкаНаДобавлениеПрав.ТиповыеРолиЕИСУП Цикл
	//	Если Стр.Роль.НаименованиеЗаданноеВКонфигураторе = "абс_ПользовательИСУЗК"  и Стр.Использование Тогда
	//		ПользовательИСУЗК = Истина;
	//		Прервать;
	//	КонецЕсли;
	//КонецЦикла;
	
	Для каждого Стр Из ЗаявкаНаДобавлениеПрав.ТиповыеРолиЕИСУП Цикл
			Если Не Стр.Роль.РольИСУЗК Тогда
				Продолжить
			КонецЕсли;
			Если ЗаявкаНаДобавлениеПрав.ВидОперации = Перечисления.абс_ВидыОперацийЗаявокНаДобавлениеИзменениеПрав.ИзменениеПравТекущегоПользователя Тогда
				Если (Стр.Использование и Не Стр.ТекущаяРоль) ИЛИ (Не Стр.Использование и Стр.ТекущаяРоль) Тогда
					ПользовательИСУЗК = Истина;
				КонецЕсли;
			Иначе	
				Если Стр.Использование Тогда
					ПользовательИСУЗК = Истина;
				КонецЕсли;
			КонецЕсли;
	КонецЦикла;
	
	Если ПользовательИСУЗК Тогда
		Результат	= Истина;
	Иначе
		Результат	= Ложь;
	КонецЕсли;	
КонецПроцедуры

Процедура СогласованиеНаУровнеДЗООбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 	
	ОткрытьЗаявку();
КонецПроцедуры

Процедура ПодготовкаЗаявкиОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 	
	ОткрытьЗаявку();
КонецПроцедуры

Процедура СогласованиеРуководителемКадровойСлужбыОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 	
	ОткрытьЗаявку();
КонецПроцедуры

Процедура СогласованиеНаУровнеКТТКОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 	
	ОткрытьЗаявку();
КонецПроцедуры

Процедура СогласованиеГлавнымБухгалтеромОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь; 	
	ОткрытьЗаявку();
КонецПроцедуры


Процедура ОткрытьЗаявку() 
	ФормаЗаявкаНаДобавлениеПрав = ЗаявкаНаДобавлениеПрав.ПолучитьФорму("ФормаДокумента1");
	Если ФормаЗаявкаНаДобавлениеПрав.Открыта() Тогда
		ФормаЗаявкаНаДобавлениеПрав.Активизировать();
	Иначе
		ФормаЗаявкаНаДобавлениеПрав.Открыть();
	КонецЕсли;
КонецПроцедуры

