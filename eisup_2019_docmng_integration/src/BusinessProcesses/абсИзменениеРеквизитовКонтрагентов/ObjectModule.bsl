
// Процедуры создания групповых задач
Процедура ПереутверждениеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.абсПереутверждениеКонтрагентов.ТочкиМаршрута.Переутверждение Тогда
		Для Каждого Задача Из ФормируемыеЗадачи Цикл
			Задача.Исполнитель = Задача.БизнесПроцесс.ПользовательИнициаторБП;
			
			Задача.ОбъектЗадачи = Контрагент;
			Если ЗначениеЗаполнено(Задача.БизнесПроцесс.Контрагент) Тогда
				//Задача.Наименование = Строка(Задача.БизнесПроцесс.Контрагент) + ". " + Задача.Наименование;
				
				Задача.Наименование = СокрЛП(Контрагент.Наименование) + " "  
					+ Задача.Наименование + ".";
			КонецЕсли;
			
		КонецЦикла;	
	КонецЕсли;		
	
//	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
КонецПроцедуры

Процедура ПроверкаСотрудникомДФМПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ЗаявкаНаИзменениеРеквизитов.Статус);
	
КонецПроцедуры

Процедура ПроверкаСотрудникомПДПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
КонецПроцедуры

Процедура ДействиеСогласованиеКонтрагентаСотрудникомДЭБПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ЗаявкаНаИзменениеРеквизитов.Статус);
КонецПроцедуры

Процедура СформироватьГрупповуюЗадачу(ТочкаМаршрута, ФормируемыеЗадачи)
	ФормируемыеЗадачи.Очистить();
	
	ЗапросИсполнителей = Новый Запрос("ВЫБРАТЬ
	                                  |	РолиИИсполнители.Исполнитель
	                                  |ИЗ
	                                  |	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
	                                  |ГДЕ
	                                  |	РолиИИсполнители.Роль = &РольИсполнителей");
									  
	РольИсполнителей = Неопределено;									  
	Если ТочкаМаршрута = БизнесПроцессы.абсИзменениеРеквизитовКонтрагентов.ТочкиМаршрута.ДействиеПроверкаДФМ Тогда
		РольИсполнителей = Справочники.РолиИсполнителей.ПроверкаДФМ;
	ИначеЕсли ТочкаМаршрута = БизнесПроцессы.абсИзменениеРеквизитовКонтрагентов.ТочкиМаршрута.ДействиеСогласованиеДЭБ Тогда
		РольИсполнителей = Справочники.РолиИсполнителей.СогласованиеДЭБ;
	КонецЕсли;
	
	Если РольИсполнителей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросИсполнителей.УстановитьПараметр("РольИсполнителей", РольИсполнителей);
	
	ВыборкаИсполнителей = ЗапросИсполнителей.Выполнить().Выбрать();
	
	//абс изменение Урал 28.01.2013: Формирование одной задачи
	Если ВыборкаИсполнителей.Количество() Тогда
		НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
		
		НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
		НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрута;
		НоваяЗадача.Дата 				= ТекущаяДата();
		//НоваяЗадача.Наименование 		= ТочкаМаршрута.НаименованиеЗадачи + ", " + Строка(ЭтотОбъект.Ссылка.Контрагент);
		
		НоваяЗадача.Наименование = СокрЛП(Контрагент.Наименование) + " "  
			+ ТочкаМаршрута.НаименованиеЗадачи + ".";
		
		
		НоваяЗадача.Роль			    = РольИсполнителей;
		
		НоваяЗадача.ОбъектЗадачи		= ЗаявкаНаИзменениеРеквизитов;
		
		НоваяЗадача.Записать();
		
		ФормируемыеЗадачи.Добавить(НоваяЗадача);
		
	КонецЕсли;
	//\\абс Урал
	
КонецПроцедуры

// Процедуры проверки условий и вариантов выполнения БП
Процедура УсловиеСогласованиеПДПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ЗаявкаНаИзменениеРеквизитов.Статус = Перечисления.абс_СтатусыЗаявокНаИзменениеРеквизитовКонтрагентов.СогласованиеДЭБ;
	
КонецПроцедуры

Процедура ВыборВариантаСогласованиеПДОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	ТекСтатусКонтрагента = Контрагент.абс_СтатусКонтрагента; 
	
	Если ТекСтатусКонтрагента = Перечисления.абсСтатусыКонтрагентов.ПроверкаДФМ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантПроверкаДФМ;
	ИначеЕсли ТекСтатусКонтрагента = Перечисления.абсСтатусыКонтрагентов.СогласованиеДЭБ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДЭБ;
	ИначеЕсли ТекСтатусКонтрагента = Перечисления.абсСтатусыКонтрагентов.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	КонецЕсли;

КонецПроцедуры

Процедура ВыборВариантаСогласованиеДЭБОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
		
	ТекСтатусЗаявки = ЗаявкаНаИзменениеРеквизитов.Статус; 
	
	Если ТекСтатусЗаявки = Перечисления.абс_СтатусыЗаявокНаИзменениеРеквизитовКонтрагентов.ПроверкаНСИ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантПроверкаДФМ;
	ИначеЕсли ТекСтатусЗаявки = Перечисления.абс_СтатусыЗаявокНаИзменениеРеквизитовКонтрагентов.Согласовано Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантАктивный;
	ИначеЕсли ТекСтатусЗаявки = Перечисления.абс_СтатусыЗаявокНаИзменениеРеквизитовКонтрагентов.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	КонецЕсли;

КонецПроцедуры

// Процедуры обработчики интеррактивной активизации
Процедура ПереутверждениеОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	КонтрагентОбъект = Контрагент.ПолучитьОбъект();
	
	ФормаКонтрагента = Контрагент.ПолучитьФорму("ФормаЭлемента",, Контрагент);
	//ФормаКонтрагента.КлючУникальности = Задача;
	
	Если ФормаКонтрагента.Открыта() Тогда
		ФормаКонтрагента.Активизировать();
	Иначе
		ФормаКонтрагента.Открыть();
	КонецЕсли;

КонецПроцедуры

Процедура ДействиеСогласованиеДЭБОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	ЗаявкаОбъект = ЗаявкаНаИзменениеРеквизитов.ПолучитьОбъект();
	
	ФормаЗаявки = ЗаявкаОбъект.ПолучитьФорму("ФормаДокумента",,ЗаявкаНаИзменениеРеквизитов);
	//ФормаКонтрагента.КлючУникальности = Задача;
	
	Если ФормаЗаявки.Открыта() Тогда
		ФормаЗаявки.Активизировать();
	Иначе
		ФормаЗаявки.Открыть();
	КонецЕсли;

КонецПроцедуры

Процедура ДействиеСогласованиеПДОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	ЗаявкаОбъект = ЗаявкаНаИзменениеРеквизитов.ПолучитьОбъект();
	
	ФормаЗаявки = ЗаявкаОбъект.ПолучитьФорму("ФормаДокумента",,ЗаявкаНаИзменениеРеквизитов);
	//ФормаКонтрагента.КлючУникальности = Задача;
	
	Если ФормаЗаявки.Открыта() Тогда
		ФормаЗаявки.Активизировать();
	Иначе
		ФормаЗаявки.Открыть();
	КонецЕсли;

КонецПроцедуры

Процедура ДействиеПроверкаДФМОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка = ЛОЖЬ;
	
	ЗаявкаОбъект = ЗаявкаНаИзменениеРеквизитов.ПолучитьОбъект();
	
	ФормаЗаявки = ЗаявкаОбъект.ПолучитьФорму("ФормаДокумента",,ЗаявкаНаИзменениеРеквизитов);
	//ФормаКонтрагента.КлючУникальности = Задача;
	
	Если ФормаЗаявки.Открыта() Тогда
		ФормаЗаявки.Активизировать();
	Иначе
		ФормаЗаявки.Открыть();
	КонецЕсли;

КонецПроцедуры

// Процедуры обработчики ПриВыполненииЗадач
Процедура ПереутверждениеПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ВыполнитьЗадачиПоТочкеБП(ТочкаМаршрутаБизнесПроцесса);
КонецПроцедуры


Процедура ДействиеСогласованиеПДПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	ВыполнитьЗадачиПоТочкеБП(ТочкаМаршрутаБизнесПроцесса);
КонецПроцедуры


Процедура ВыполнитьЗадачиПоТочкеБП(ТочкаМаршрутаБизнесПроцесса)
	// Выполним остальные задачи на данной точке 
	ЗапросЗадач = Новый Запрос("ВЫБРАТЬ
	                           |	абсЗадачаДоговора.Ссылка
	                           |ИЗ
	                           |	Задача.абсЗадачаДоговора КАК абсЗадачаДоговора
	                           |ГДЕ
	                           |	абсЗадачаДоговора.БизнесПроцесс = &БизнесПроцесс
	                           |	И абсЗадачаДоговора.ТочкаМаршрута = &ТочкаМаршрута
	                           |	И абсЗадачаДоговора.Выполнена = ЛОЖЬ");
	ЗапросЗадач.УстановитьПараметр("БизнесПроцесс", Ссылка);
	ЗапросЗадач.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрутаБизнесПроцесса);
	
	ВыборкаЗадач = ЗапросЗадач.Выполнить().Выбрать();
	
	Пока ВыборкаЗадач.Следующий() Цикл
		ЗадачаОбъект = ВыборкаЗадач.Ссылка.ПолучитьОбъект();
		
		ЗадачаОбъект.Выполнить();
	КонецЦикла;
КонецПроцедуры

// Процедуры обработчики ПередСтартом
Процедура СтартСменаРеквизитовПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ТочкаСтарта = ТочкаМаршрутаБизнесПроцесса;
	
КонецПроцедуры

Процедура СтартПереутверждениеПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ТочкаСтарта = ТочкаМаршрутаБизнесПроцесса;

КонецПроцедуры

// Процедуры обработчики ПриЗавершении
Процедура ЗавершениеОтказПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ЗавершитьБП(Контрагент.абс_СтатусКонтрагента);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ЗаявкаНаИзменениеРеквизитов.Статус);
	
КонецПроцедуры

Процедура ЗавершениеУтвержденПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ЗавершитьБП(Контрагент.абс_СтатусКонтрагента);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ЗаявкаНаИзменениеРеквизитов.Статус);
	
КонецПроцедуры


Процедура ЗавершитьБП(СтатусЗавершения)
	
КонецПроцедуры






