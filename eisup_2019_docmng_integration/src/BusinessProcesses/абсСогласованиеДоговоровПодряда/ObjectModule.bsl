
Перем ФормаДоговора Экспорт;

/////////////////////////////////////////////////
// Процедуры обработки ИнтерактивнойАктивации

Процедура ЗаполнениеДоговораПодрядаОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.абсСогласованиеДоговоровПодряда.ТочкиМаршрута.ЗаполнениеДоговораПодряда Тогда
		Если ДоговорПодряда.Пустая() Тогда
			
			ДоговорОбъект = Документы.ДоговорНаВыполнениеРаботСФизЛицом.СоздатьДокумент();
			ФормаДоговора = ДоговорОбъект.ПолучитьФорму("ФормаДокумента");
			ФормаДоговора.Открыть();
			
		Иначе		
			 ОткрытьФормуДоговора(ДоговорПодряда,Задача);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаНСИОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеДействиеСогласованиеРукДепОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);
	
КонецПроцедуры

Процедура ДействиеСогласованиеБухгалтеромОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура СогласованиеПДОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);
	
КонецПроцедуры

Процедура РегистрацияДоговораОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеПВПОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеОтказОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеОтделомКадровОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорПодряда,Задача);

КонецПроцедуры

Процедура ОткрытьФормуДоговора(ДоговорПодряда,Задача) Экспорт
	
	Если НЕ ДоговорПодряда.Пустая() Тогда
		
		ФормаДоговора = ДоговорПодряда.ПолучитьФорму("ФормаДокумента");
		
		Если ФормаДоговора.Открыта() Тогда
			ФормаДоговора.Активизировать();
		Иначе
			ФормаДоговора.Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

/////////////////////////////////////////////////
//Обработчики ПриСозданииЗадач

Процедура СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ФормируемыеЗадачи.Очистить();	
	
	абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговораПодряда(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, ПользовательИнициаторБП, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ЗаполнениеДоговораПодрядаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеОтказПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);

КонецПроцедуры

Процедура ПроверкаНСИПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеДействиеСогласованиеРукДепПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура СогласованиеПДПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);	
	
КонецПроцедуры

Процедура ДействиеСогласованиеБухгалтеромПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура РегистрацияДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеСогласованиеОтделомКадровПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);	
	
КонецПроцедуры

Процедура ДействиеСогласованиеПВППриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
КонецПроцедуры

Процедура СформироватьГрупповуюЗадачу(ТочкаМаршрута, ФормируемыеЗадачи, Отказ = Ложь)
	
	ФормируемыеЗадачи.Очистить();
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямДоговорыПодряда(ЭтотОбъект.Ссылка, ТочкаМаршрута, ФормируемыеЗадачи);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач. На найдено ответственных.", Отказ);
		Возврат;
	КонецЕсли;
		
КонецПроцедуры

/////////////////////////////////////////////////
//Обработчики проверки вариантов и условий

Процедура УсловиеОтправитьНаСогласованиеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = НЕ ДоговорПодряда.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отмена;
	
КонецПроцедуры

Процедура ВыборВариантаНСИОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.СогласованиеРукДеп Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеРукДеп;
	КонецЕсли;

КонецПроцедуры

Процедура ВыборВариантаРукДепОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДоговораПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаПДОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.СогласованиеБухгалтерией Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеБухгалтерией;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаПослеСогласованияБухгалтериейОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.СогласованиеОтделомКадров Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеОтделомКадров;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	КонецЕсли;	
	
КонецПроцедуры   

Процедура ВыборВариантаКадрыОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорПодряда.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.СогласованиеПВП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеПВП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	КонецЕсли;	
	
КонецПроцедуры

Процедура УсловиеСогласованПВППроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорПодряда.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Регистрация;
	
КонецПроцедуры

Процедура ЗавершениеДоговорСогласованИЗарегестрированПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ОбъектДП = ДоговорПодряда.ПолучитьОбъект();
	ОбъектДП.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Согласован;
	Попытка
		ОбъектДП.Записать(РежимЗаписиДокумента.Проведение);
	Исключение
		Сообщить("Не удалось завершить согласование договора подряда №"+ОбъектДП.Номер);
	КонецПопытки;
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ОтменаПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ОбъектДП = ДоговорПодряда.ПолучитьОбъект();
	ОбъектДП.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоровПодряда.Отмена;
	//ОбъектДП.ПометкаУдаления = Истина;
	Попытка
		ОбъектДП.Записать(РежимЗаписиДокумента.ОтменаПроведения);
	Исключение
		Сообщить("Не удалось отменить проведение договора подряда №"+ОбъектДП.Номер);
		Попытка
			ОбъектДП.Записать();
		Исключение
			Сообщить("Не удалось записать договор подряда №"+ОбъектДП.Номер);
		КонецПопытки;
	КонецПопытки;
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорПодряда.абс_СтатусДоговора);
	
КонецПроцедуры

/////////////////////////////////////////////////
//Обработчики событий

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		
		Организация = ДоговорПодряда.Организация;
		ПользовательИнициаторБП = ДоговорПодряда.Ответственный;
		
	КонецЕсли;	
	
КонецПроцедуры
