
////////////////////////////////////////////////////////////////////////////////
// Процедуры проверки условий и выборов вариантов
////////////////////////////////////////////////////////////////////////////////

Процедура УсловиеУточненоПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = СчетНаОплату.СтатусСчета = Перечисления.абсСтатусыСчетов.Уточнено;
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Процедуры создания групповых задач
////////////////////////////////////////////////////////////////////////////////

// Универсальня процедура формирования групповых задач
Процедура СформироватьГрупповуюЗадачу(ТочкаМаршрута, ФормируемыеЗадачи)
	
	ФормируемыеЗадачи.Очистить();
	
	ЗапросИсполнителей = Новый Запрос("ВЫБРАТЬ
	                                  |	РолиИИсполнители.Исполнитель
	                                  |ИЗ
	                                  |	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
	                                  |ГДЕ
	                                  |	РолиИИсполнители.Роль = &РольИсполнителей");
									  
	РольИсполнителей = Неопределено;
	
	Если ТочкаМаршрута = БизнесПроцессы.абсУточнениеСчетаНаОплату.ТочкиМаршрута.ДействиеУточнено Тогда
		РольИсполнителей = Справочники.РолиИсполнителей.СотрудникДК;
	КонецЕсли;
	
	Если РольИсполнителей = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗапросИсполнителей.УстановитьПараметр("РольИсполнителей", РольИсполнителей);
	
	ВыборкаИсполнителей = ЗапросИсполнителей.Выполнить().Выбрать();
	
	Пока ВыборкаИсполнителей.Следующий() Цикл
		НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
		
		НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
		НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрута;
		НоваяЗадача.Дата 				= ТекущаяДата();
		НоваяЗадача.Наименование 		= Строка(СчетНаОплату) + " " + ТочкаМаршрута.НаименованиеЗадачи + ".";
		
		НоваяЗадача.Исполнитель			= ВыборкаИсполнителей.Исполнитель;
		
		НоваяЗадача.ОбъектЗадачи 		= СчетНаОплату;
		
		НоваяЗадача.Записать();
		
		ФормируемыеЗадачи.Добавить(НоваяЗадача);
		
	КонецЦикла;
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СчетНаОплату, ТочкаМаршрута, ФормируемыеЗадачи);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		Отказ = Истина;
		
		Сообщить("Ошибка при формировании задач по точке " + ТочкаМаршрута + ". " + Символы.ПС 
			+ "Не найдено ответственных с ролью " + РольИсполнителей + ".");
	КонецЕсли;
	
КонецПроцедуры

// Процедуры-обработчики ПриСозданииЗадач
Процедура ДействиеУточненоПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// Процедуры открытия счетов 
////////////////////////////////////////////////////////////////////////////////

// Процедура открытия счета на оплату
Процедура ОткрытьФормуСчетаНаОплату()
	
	ФормаСчета = СчетНаОплату.ПолучитьФорму("ФормаДокумента");
	
	Если ФормаСчета.Открыта() Тогда
		ФормаСчета.Активизировать();
	Иначе
		ФормаСчета.Открыть();
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеУточнениеОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуСчетаНаОплату();
	
КонецПроцедуры

Процедура ДействиеУточненоОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ОткрытьФормуСчетаНаОплату();
	
КонецПроцедуры

Процедура ДействиеУточнениеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ФормируемыеЗадачи.Очистить();
	
	НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
	
	НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
	НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрутаБизнесПроцесса;
	НоваяЗадача.Дата 				= ТекущаяДата();
	НоваяЗадача.Наименование 		= Строка(СчетНаОплату) + " " + ТочкаМаршрутаБизнесПроцесса.НаименованиеЗадачи + ".";
	
	НоваяЗадача.Исполнитель			= ПользовательИнициаторБП;
	
	НоваяЗадача.ОбъектЗадачи 		= СчетНаОплату;
	
	НоваяЗадача.Записать();
	
	ФормируемыеЗадачи.Добавить(НоваяЗадача);
		
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СчетНаОплату, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		
		Организация = СчетНаОплату.Организация;
		
	КонецЕсли;	
	
КонецПроцедуры



