
Процедура СформироватьГрупповуюЗадачу(ТочкаМаршрута, ФормируемыеЗадачи, Отказ,РольИсполнителей)
	
	ФормируемыеЗадачи.Очистить();
	
	ЗапросИсполнителей = Новый Запрос("ВЫБРАТЬ
	                                  |	РолиИИсполнители.Исполнитель
	                                  |ИЗ
	                                  |	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
	                                  |ГДЕ
	                                  |	РолиИИсполнители.Роль = &РольИсполнителей");
									  
	ЗапросИсполнителей.УстановитьПараметр("РольИсполнителей", РольИсполнителей);
	
	ВыборкаИсполнителей = ЗапросИсполнителей.Выполнить().Выбрать();
	
	Если ВыборкаИсполнителей.Количество() > 0 Тогда
		НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
		
		НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
		НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрута;
		НоваяЗадача.Дата 				= ТекущаяДата();
	    НоваяЗадача.Роль                = РольИсполнителей;
		НоваяЗадача.Наименование = СокрЛП(ДоговорКонтрагента.Наименование) + " "  
			+ ТочкаМаршрута.НаименованиеЗадачи + ".";
		
		НоваяЗадача.ОбъектЗадачи 		= ДоговорКонтрагента;
		НоваяЗадача.Записать();
		
		ФормируемыеЗадачи.Добавить(НоваяЗадача);
		
	Иначе
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных.", Отказ);
	КонецЕсли;
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрута, ФормируемыеЗадачи);

	
КонецПроцедуры

Процедура СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ФормируемыеЗадачи.Очистить();
	
	НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
	
	НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
	НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрутаБизнесПроцесса;
	НоваяЗадача.Дата 				= ТекущаяДата();

	НоваяЗадача.Наименование = СокрЛП(ДоговорКонтрагента.Наименование) + " "  
		+ ТочкаМаршрутаБизнесПроцесса.НаименованиеЗадачи + ".";
	
	НоваяЗадача.Исполнитель			= ПользовательИнициаторБП;
	
	НоваяЗадача.ОбъектЗадачи 		= ДоговорКонтрагента;
	
	НоваяЗадача.Записать();
	
	ФормируемыеЗадачи.Добавить(НоваяЗадача);	
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);	
	
КонецПроцедуры

Процедура ПодготовкаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусЛимита);
КонецПроцедуры

Процедура СогласованиеОФКПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ,Справочники.РолиИсполнителей.РуководительОФК);
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусЛимита);
КонецПроцедуры

Процедура ЛимитСогласованПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Если ДоговорКонтрагента.абс_СтатусЛимита = Перечисления.абс_СтатусыЛимитовПоДоговору.Отказ Тогда
		Результат = Ложь;	
	Иначе	
		Результат = Истина;		
	КонецЕсли;	
КонецПроцедуры

Процедура Действие2ПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусЛимита);
КонецПроцедуры


