
Процедура УсловиеУтвержденНДСПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = СтатьяПрочихДоходовИРасходов.абс_Статус = Перечисления.абс_СтатусыНоменклатуры.Использование;
	
КонецПроцедуры

Процедура ОткрытьСтатьюЗатрат()
	
	ФормаСтатьиЗатрат = СтатьяПрочихДоходовИРасходов.ПолучитьФорму("ФормаЭлемента");
	
	Если ФормаСтатьиЗатрат.Открыта() Тогда
		ФормаСтатьиЗатрат.Активизировать();
	Иначе
		ФормаСтатьиЗатрат.Открыть();
	КонецЕсли;
	
КонецПроцедуры

// ПРОЦЕДУРЫ ОБРАБОТЧКИ ПриИнтеррактивнойАктивизации

Процедура ДействиеУтверждениеГруппойНСИОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьСтатьюЗатрат();
	
КонецПроцедуры

Процедура ДействиеСтатьяЗатратУтвержденаОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ОткрытьСтатьюЗатрат();
	
КонецПроцедуры

Процедура ДействиеОтказаноВСогласованииОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ОткрытьСтатьюЗатрат();
	
КонецПроцедуры

Процедура ДействиеСтатьяЗатратУтвержденаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	ФормируемыеЗадачи.Очистить();
	
	НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
	
	НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
	НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрутаБизнесПроцесса;
	НоваяЗадача.Дата 				= ТекущаяДата();

	//НоваяЗадача.Наименование 		= ТочкаМаршрута.НаименованиеЗадачи + ", " + Строка(ЭтотОбъект.Ссылка.Контрагент);
	//
	НоваяЗадача.Наименование = СокрЛП(СтатьяПрочихДоходовИРасходов.Наименование) + " "  
		+ ТочкаМаршрутаБизнесПроцесса.НаименованиеЗадачи + ".";
	
	НоваяЗадача.Исполнитель			= ПользовательИнициаторБП;
	
	НоваяЗадача.ОбъектЗадачи 		= СтатьяПрочихДоходовИРасходов;
	
	НоваяЗадача.Записать();
	
	ФормируемыеЗадачи.Добавить(НоваяЗадача);	
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СтатьяПрочихДоходовИРасходов, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, СтатьяПрочихДоходовИРасходов.абс_Статус);

КонецПроцедуры

Процедура ДействиеОтказаноВСогласованииПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
			
	ФормируемыеЗадачи.Очистить();
	
	НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
	
	НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
	НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрутаБизнесПроцесса;
	НоваяЗадача.Дата 				= ТекущаяДата();

	//НоваяЗадача.Наименование 		= ТочкаМаршрута.НаименованиеЗадачи + ", " + Строка(ЭтотОбъект.Ссылка.Контрагент);
	//
	НоваяЗадача.Наименование = СокрЛП(СтатьяПрочихДоходовИРасходов.Наименование) + " "  
		+ ТочкаМаршрутаБизнесПроцесса.НаименованиеЗадачи + ".";
	
	НоваяЗадача.Исполнитель			= ПользовательИнициаторБП;
	
	НоваяЗадача.ОбъектЗадачи 		= СтатьяПрочихДоходовИРасходов;
	
	НоваяЗадача.Записать();
	
	ФормируемыеЗадачи.Добавить(НоваяЗадача);
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СтатьяПрочихДоходовИРасходов, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, СтатьяПрочихДоходовИРасходов.абс_Статус);

КонецПроцедуры

Процедура СформироватьГрупповуюЗадачу(ТочкаМаршрута, ФормируемыеЗадачи, Отказ,РольИсполнителей)
	
	ФормируемыеЗадачи.Очистить();
	
	ЗапросИсполнителей = Новый Запрос("ВЫБРАТЬ
	                                  |	РолиИИсполнители.Исполнитель
	                                  |ИЗ
	                                  |	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
	                                  |ГДЕ
	                                  |	РолиИИсполнители.Роль = &РольИсполнителей");
									  
	//РольИсполнителей = Неопределено;									  
	//Если ТочкаМаршрута = БизнесПроцессы.абсСогласованиеПрочихДоходовИРасходов.ТочкиМаршрута.ДействиеУтверждениеГруппойНСИ Тогда
	//	РольИсполнителей = Справочники.РолиИсполнителей.СотрудникГруппыНСИ;
	//КонецЕсли;
	//
	//Если РольИсполнителей = Неопределено Тогда
	//	Возврат;
	//КонецЕсли;
	
	ЗапросИсполнителей.УстановитьПараметр("РольИсполнителей", РольИсполнителей);
	
	ВыборкаИсполнителей = ЗапросИсполнителей.Выполнить().Выбрать();
	
	Если ВыборкаИсполнителей.Количество() > 0 Тогда
		НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
		
		НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
		НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрута;
		НоваяЗадача.Дата 				= ТекущаяДата();
		
		//НоваяЗадача.Наименование 		= ТочкаМаршрута.НаименованиеЗадачи + ", " + Строка(ЭтотОбъект.Ссылка.Контрагент);
		//
		НоваяЗадача.Наименование = СокрЛП(СтатьяПрочихДоходовИРасходов.Наименование) + " "  
		+ ТочкаМаршрута.НаименованиеЗадачи + ".";
		
		//	НоваяЗадача.Исполнитель			= ВыборкаИсполнителей.Исполнитель;
		
		НоваяЗадача.ОбъектЗадачи 		= СтатьяПрочихДоходовИРасходов;
		
		НоваяЗадача.Записать();
		
		ФормируемыеЗадачи.Добавить(НоваяЗадача);
		
	Иначе
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных.", Отказ);
	КонецЕсли;
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СтатьяПрочихДоходовИРасходов, ТочкаМаршрута, ФормируемыеЗадачи);
	
КонецПроцедуры

Процедура ДействиеУтверждениеГруппойНСИПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ,Справочники.РолиИсполнителей.СотрудникГруппыНСИ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, СтатьяПрочихДоходовИРасходов.абс_Статус);	
	
КонецПроцедуры

Процедура ВыборВариантаОтправитьНаСогласованиеОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусСтатьиЗатрат = СтатьяПрочихДоходовИРасходов.абс_Статус; 
	
	Если ТекСтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ТекСтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.ДопСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантДопСогласование;
	ИначеЕсли ТекСтатусСтатьиЗатрат = Перечисления.абс_СтатусыНоменклатуры.Использование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантИспользование;
    КонецЕсли;
КонецПроцедуры

Процедура ДействиеДополнительноеСогласованиеОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	
	ОткрытьСтатьюЗатрат();

КонецПроцедуры

Процедура ДействиеДополнительноеСогласованиеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
		
	ФормируемыеЗадачи.Очистить();	
	
	
	Если ЗначениеЗаполнено(ПользовательДопСогласование) Тогда
			абс_БизнесПроцессы.СформироватьЗадачуСогласованиеСтатейПрочихДоходовИРасходов(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, 
				ПользовательДопСогласование, Отказ);
	КонецЕсли;
		
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач на дополнительное согласование. Не найден ответственный.", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СтатьяПрочихДоходовИРасходов, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);		
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, СтатьяПрочихДоходовИРасходов.абс_Статус);
	
КонецПроцедуры

Процедура ОтказПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	ФормируемыеЗадачи.Очистить();	
	
	
	Если ЗначениеЗаполнено(СтатьяПрочихДоходовИРасходов.абс_Ответственный) Тогда
			абс_БизнесПроцессы.СформироватьЗадачуСогласованиеСтатейПрочихДоходовИРасходов(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, 
				СтатьяПрочихДоходовИРасходов.абс_Ответственный, Отказ);
	КонецЕсли;
		
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач на дополнительное согласование. Не найден ответственный.", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СтатьяПрочихДоходовИРасходов, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);		
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, СтатьяПрочихДоходовИРасходов.абс_Статус);
КонецПроцедуры

Процедура ПовторнаяПодготовкаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	ФормируемыеЗадачи.Очистить();	
	
	
	Если ЗначениеЗаполнено(СтатьяПрочихДоходовИРасходов.абс_Ответственный) Тогда
			абс_БизнесПроцессы.СформироватьЗадачуСогласованиеСтатейПрочихДоходовИРасходов(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, 
				СтатьяПрочихДоходовИРасходов.абс_Ответственный, Отказ);
	КонецЕсли;
		
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач на дополнительное согласование. Не найден ответственный.", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, СтатьяПрочихДоходовИРасходов, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);		
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, СтатьяПрочихДоходовИРасходов.абс_Статус);
КонецПроцедуры
