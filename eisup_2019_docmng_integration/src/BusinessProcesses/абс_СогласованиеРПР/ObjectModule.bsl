
// Обработчики условий
Процедура УсловиеСогласованЦФОПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)

	Результат = ДокументРПР.Статус = Перечисления.абс_СтатусыРПР.Согласован;
	
КонецПроцедуры

Процедура УсловиеСогласованДФМПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)

	Результат = ДокументРПР.Статус = Перечисления.абс_СтатусыРПР.ОбработкаБухгалтером;
	
КонецПроцедуры

Процедура УсловиеОбработанБухгалтеромПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДокументРПР.Статус = Перечисления.абс_СтатусыРПР.Согласован;
	
КонецПроцедуры

Процедура УсловиеРПРПоПодразделениюПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДокументРПР.ВидОперации = Перечисления.абс_ВидыДокументовРНПД.ПоДирекции;
	
КонецПроцедуры

Процедура УсловиеДокументыПринятыПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДокументРПР.Статус = Перечисления.абс_СтатусыРПР.ОбработкаПринятыхДокументов;
	
КонецПроцедуры


// Обработчики ПриСоздаииЗадач
Процедура ДействиеСогласованиеДФМПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
		
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямРНПД(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи,, ДокументРПР.Организация);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных по согласованию РНПД " + ТочкаМаршрутаБизнесПроцесса, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеОбработкаПринятыхДокументовПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямРНПД(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи,, ДокументРПР.Организация);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных по согласованию РНПД " + ТочкаМаршрутаБизнесПроцесса, Отказ);
		
	КонецЕсли;

КонецПроцедуры

Процедура ДействиеОбработкаБухгалтеромПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямРНПД(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи,, ДокументРПР.Организация);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных по согласованию РНПД " + ТочкаМаршрутаБизнесПроцесса, Отказ);
		
	КонецЕсли;

КонецПроцедуры

Процедура ДействиеСогласованиеЦФОПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	МассивИсполнителей = абс_БизнесПроцессы.ПолучитьОтветственныхРНПД(ДокументРПР.Организация, Перечисления.абс_ВидыДокументовРНПД.ПоЦФО, ДокументРПР.ЦФО, Справочники.ПодразделенияОрганизаций.ПустаяСсылка());
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямРНПД(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, МассивИсполнителей, ДокументРПР.Организация);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных по согласованию РНПД " + ТочкаМаршрутаБизнесПроцесса, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеОтказЦФОПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	МассивИсполнителей = абс_БизнесПроцессы.ПолучитьОтветственныхРНПД(ДокументРПР.Организация, ДокументРПР.ВидОперации, ДокументРПР.ЦФО, ДокументРПР.Дирекция);
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямРНПД(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, МассивИсполнителей, ДокументРПР.Организация);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных по согласованию РНПД " + ТочкаМаршрутаБизнесПроцесса, Отказ);
		
	КонецЕсли;
		
КонецПроцедуры

Процедура ДействиеОтказДирекцияПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямРНПД(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, ДокументРПР.Ответственный, ДокументРПР.Организация);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найдено ответственных по согласованию РНПД " + ТочкаМаршрутаБизнесПроцесса, Отказ);
		
	КонецЕсли;
	
КонецПроцедуры


// Обработчики ОбработкаИнтерактивнойАктивации
Процедура ДействиеСогласованиеЦФООбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьДокуменртРПР();
	
КонецПроцедуры

Процедура ДействиеСогласованиеДФМОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьДокуменртРПР();	

КонецПроцедуры

Процедура ДействиеОбработкаПринятыхДокументовОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
		
	СтандартнаяОбработка = Ложь;
	
	ОткрытьДокуменртРПР();
	
КонецПроцедуры

Процедура ДействиеОбработкаБухгалтеромОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
			
	СтандартнаяОбработка = Ложь;
	
	ОткрытьДокуменртРПР();
	
КонецПроцедуры

Процедура ДействиеОтказЦФООбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОткрытьДокуменртРПР();
	
	ВыполнитьЗадачуОтказа(Задача);
	
КонецПроцедуры

Процедура ДействиеОтказДирекцияОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
			
	СтандартнаяОбработка = Ложь;
	
	ОткрытьДокуменртРПР();
	
	ВыполнитьЗадачуОтказа(Задача);
	
КонецПроцедуры

// Прочие процедуры и функции
Процедура ОткрытьДокуменртРПР()
	
	Форма = ДокументРПР.ПолучитьФорму("ФормаДокумента");
	
	Если Форма.Открыта() Тогда
		Форма.Активизировать();
	Иначе
		Форма.Открыть();
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыполнитьЗадачуОтказа(Задача)
	
	ОбъектЗадачи = Задача.ПолучитьОбъект();
	
	ОбъектЗадачи.ВыполнитьЗадачу();	
	
КонецПроцедуры

Процедура СоздатьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи)
	ФормируемыеЗадачи.Очистить();
	
	НоваяЗадача = Задачи.абсЗадачаДоговора.СоздатьЗадачу();
	
	НоваяЗадача.БизнесПроцесс 		= ЭтотОбъект.Ссылка;
	НоваяЗадача.ТочкаМаршрута 		= ТочкаМаршрутаБизнесПроцесса;
	НоваяЗадача.Дата 				= ТекущаяДата();

	НоваяЗадача.Наименование = СокрЛП(ДокументРПР.Ссылка) + " "  
		+ ТочкаМаршрутаБизнесПроцесса.НаименованиеЗадачи + ".";
	
	НоваяЗадача.Исполнитель			= ПользовательИнициаторБП;
	
	НоваяЗадача.ОбъектЗадачи 		= ДокументРПР;
	
	НоваяЗадача.Записать();
	
	ФормируемыеЗадачи.Добавить(НоваяЗадача);	
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДокументРПР, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);	

КонецПроцедуры

Процедура ПовторнаяПодготовкаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СоздатьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
КонецПроцедуры

