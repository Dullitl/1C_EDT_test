
//Перем ФормаДоговора Экспорт;

// Процедуры обработчки ИнтерактивнойАктивации
Процедура ЗаполнениеКарточкиДоговораОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.абсСогласованиеДоговоров.ТочкиМаршрута.ЗаполнениеКарточкиДоговора Тогда
		Если ДоговорКонтрагента.Пустая() Тогда
			
			ДоговорОбъект = Справочники.ДоговорыКонтрагентов.СоздатьЭлемент();
			ДоговорОбъект.Владелец 				= Контрагент;
			ДоговорОбъект.абс_СтатусДоговора	= Перечисления.абсСтатусыДоговоров.Подготовка;
			
			ФормаДоговора						= ДоговорОбъект.ПолучитьФорму("ФормаЭлемента");
			
			ФормаДоговора.Открыть();
			
		Иначе		
			 ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаКарточкиОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеБхугалтеромОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура СогласованиеДоговораОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
	
КонецПроцедуры

Процедура СогласованиеПервымЛицомОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
 
КонецПроцедуры

Процедура РегистрацияДоговораОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеПВПОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ДействиеОтказОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеДВКУРОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ДействиеПроверкаКонтрагентаОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ДействиеДополнительноеСогласованиеОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ОткрытьФормуДоговора(ДоговорКонтрагента,Задача) Экспорт
	
	Если НЕ ДоговорКонтрагента.Пустая() Тогда
		
		ФормаКонтрагента = ДоговорКонтрагента.ПолучитьФорму("ФормаЭлемента");
		
		Если ФормаКонтрагента.Открыта() Тогда
			ФормаКонтрагента.Активизировать();
		Иначе
			ФормаКонтрагента.Открыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Старт2ПередСтартом(ТочкаМаршрутаБизнесПроцесса, Отказ)

	Если Не ЗначениеЗаполнено(Контрагент) Тогда
		Отказ = Истина;
		Сообщить("Не заполнен владелец договора...", СтатусСообщения.Информация);
	КонецЕсли;
КонецПроцедуры


// Обработчики ПриСозданииЗадач
Процедура СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	ФормируемыеЗадачи.Очистить();	
	
	абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговора(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, ПользовательИнициаторБП, Отказ);
	
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);	
	
КонецПроцедуры

Процедура ЗаполнениеКарточкиДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеОтказПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);

КонецПроцедуры

Процедура ПроверкаКарточкиПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура СогласованиеДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);	
	
КонецПроцедуры

Процедура СогласованиеПервымЛицомПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеСогласованиеБхугалтеромПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура РегистрацияДоговораПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	// АБС ВСТАВКА Фролов 2996
	// Сформируем задачу для Инициатора, т.к. он может на статусе Подписание и регистрация отправить договор в Отказ.
	абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговора(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, ПользовательИнициаторБП, Отказ);
	// АБС ВСТАВКА Фролов 2996 КОНЕЦ	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеСогласованиеДВКУРПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);	
	
КонецПроцедуры

Процедура ДействиеПроверкаКонтрагентаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеСогласованиеПВППриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
КонецПроцедуры

Процедура СформироватьГрупповуюЗадачу(ТочкаМаршрута, ФормируемыеЗадачи, Отказ = Ложь)
	
	ФормируемыеЗадачи.Очистить();
	
	абс_БизнесПроцессы.СформироватьЗадачуИсполнителямДоговоры(ЭтотОбъект.Ссылка, ТочкаМаршрута, ФормируемыеЗадачи);
	
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач. Не найдено ответственных.", Отказ);
		Возврат;
	КонецЕсли;
		
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрута, ФормируемыеЗадачи);
	
КонецПроцедуры

// Обработчики проверки вариантов и условий
Процедура УсловиеОтправитьНаСогласованиеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = НЕ ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ;
	
	//ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ ИЛИ
	//			ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД ИЛИ
	//			ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДИБ;
	
КонецПроцедуры

Процедура ВыборВарианта1ОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантПроверенДФМ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДВКУР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДВКУР;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Подготовка Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантНаПодготовку;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеБухгалтерией Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеБухгалтерией;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Исполнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантИсполнение;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантПодписаниеИРегистрация;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантДополнительноеСогласование;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДирКСП;
	//Сторчевой А.Н. D2016-1207-3107 {	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;		
	// } Сторчевой А.Н. D2016-1207-3107	
	КонецЕсли;

КонецПроцедуры

Процедура ВыборВариантаОтправитьНаСогласованиеПЛОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласование;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПервоеЛицо Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтправитьНаСогласованиеПЛ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантДополнительноеСогласование;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПВП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеПВП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантРегистрацияДоговора;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантУточнение;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДирКСП;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДВКУР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДВКУР;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеРуководителемПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеРуководителемПД;
	//Сторчевой А.Н. D2016-1207-3107 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОдобрениеСДилиОСА;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАудитором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАудитором;
	// } Сторчевой А.Н. D2016-1207-3107
	Иначе
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
    КонецЕсли;
	
КонецПроцедуры

Процедура УсловиеСогласованиеПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация;
	
КонецПроцедуры

Процедура УсловиеСогласованПВППроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация
	            или ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА//Сторчевой А.Н. D2016-1207-3107 {;
	            или ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП;// } Сторчевой А.Н. D2016-1207-3107
КонецПроцедуры

Процедура ВыполнитьЗадачиПоТочкеБП(ТочкаМаршрутаБизнесПроцесса)
	// Выполним остальные задачи на данной точке 
	ЗапросЗадач = Новый Запрос("ВЫБРАТЬ
	                           |	абсЗадачаДоговора.Ссылка
	                           |ИЗ
	                           |	Задача.абсЗадачаДоговора КАК абсЗадачаДоговора
	                           |ГДЕ
	                           |	абсЗадачаДоговора.БизнесПроцесс = &БизнесПроцесс
	                           |	И абсЗадачаДоговора.ТочкаМаршрута = &ТочкаМаршрута
	                           |	И абсЗадачаДоговора.Выполнена = ЛОЖЬ");
	ЗапросЗадач.УстановитьПараметр("БизнесПроцесс", Ссылка);
	ЗапросЗадач.УстановитьПараметр("ТочкаМаршрута", ТочкаМаршрутаБизнесПроцесса);
	
	ВыборкаЗадач = ЗапросЗадач.Выполнить().Выбрать();
	
	Пока ВыборкаЗадач.Следующий() Цикл
		ЗадачаОбъект = ВыборкаЗадач.Ссылка.ПолучитьОбъект();
		
		ЗадачаОбъект.Выполнить();
	КонецЦикла;
КонецПроцедуры
            
Процедура УсловиеСогласованоБухгалтеромПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ;
КонецПроцедуры

Процедура УсловиеКонтрагентПроверенПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Если ДоговорКонтрагента.ВидДоговора = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем Тогда  //АБС 19896
		Результат = Истина;
	Иначе
		Результат = ДоговорКонтрагента.Владелец.абс_СтатусКонтрагента = Перечисления.абсСтатусыКонтрагентов.Активный
		ИЛИ ДоговорКонтрагента.Владелец.абс_СтатусКонтрагента = Перечисления.абсСтатусыКонтрагентов.СменаРеквизитов;
	КонецЕсли;
	
КонецПроцедуры

Процедура УсловиеСогласованПЛПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация;
	
КонецПроцедуры

Процедура ВыборВариантаОтправитьНаСогласованиеОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	Если ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отмена Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантАрхив;
	ИначеЕсли ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтправитьНаСогласование;
	КонецЕсли;
	
КонецПроцедуры
          
Процедура ЗавершениеДоговорСогласованИЗарегестрированПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ЗавершитьБП(Перечисления.абсСтатусыДоговоров.Исполнение);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ЗавершениеАрхивПриЗавершении(ТочкаМаршрутаБизнесПроцесса, Отказ)
	
	ЗавершитьБП(Перечисления.абсСтатусыДоговоров.Отмена);
	
КонецПроцедуры

Процедура ЗавершитьБП(СтатусЗавершения)
	
	//СторчевойА.Н. 10.11.2016 отключаем БП по ЗЗ{
	//абс_БизнесПроцессыПривелегированный.ЗавершитьБПСогласованияДоговора(ДоговорКонтрагента, СтатусЗавершения);
	абс_БизнесПроцессыПривелегированный.ПереводЗЗВСтатус(ДоговорКонтрагента, СтатусЗавершения);
	// } СторчевойА.Н. 10.11.2016
	
КонецПроцедуры

Процедура ДействиеДополнительноеСогласованиеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
		
	ФормируемыеЗадачи.Очистить();	
	
	МассивПользователей = абс_БизнесПроцессы.ПолучитьПользователяПоСотруднику(СотрудникДопСогласование);
	
	Если МассивПользователей.Количество() > 0 Тогда
		
		Если ЗначениеЗаполнено(МассивПользователей[0]) Тогда
			абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговора(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, 
				МассивПользователей[0], Отказ);
		КонецЕсли;
				
	КонецЕсли;
		
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач на дополнительное согласование. Не найден ответственный.", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);		
	
	//СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	//
	//Для Каждого ФормируемаяЗадача Из ФормируемыеЗадачи Цикл
	//	ФормируемаяЗадача.Исполнитель 	= абс_БизнесПроцессы.ПолучитьПользователяПоСотруднику(СотрудникДопСогласование);
	//	ФормируемаяЗадача.ОбъектЗадачи	= ДоговорКонтрагента;
	//	
	//	ФормируемаяЗадача.Наименование = СокрЛП(Контрагент.Наименование) + ": " + СокрЛП(ДоговорКонтрагента.Наименование) + " " 
	//		+ ФормируемаяЗадача.Наименование + ".";

	//КонецЦикла;
	//	
	
	//абс Изменение Урал 28.01.2014: Формирование одной 
	////// Добавим задачи для суперпользователей
	////абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);	
	////++ Задача № 10549 Логинчев А.С. 21.05.2012 16:35:46
	//// АБС Фролов Д.А. 19.06.2012 Исправлено
	////АБС ВСТАВКА №000021428 Исправлено
	//СписокПользователей = абс_БизнесПроцессы.ПолучитьПользователейРоли(Справочники.РолиИсполнителей.ВозвратДоговоров_с_дополнительного_согласованияНаПД, ДоговорКонтрагента.Организация);
	////\\АБС ВСТАВКА №000021428 Исправлено
	////АБС ВСТАВКА №15941 НАЧАЛО
	//Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//					  |	Пользователи.Ссылка КАК Исполнитель
	//					  |ПОМЕСТИТЬ вр
	//					  |ИЗ
	//					  |	Справочник.Пользователи КАК Пользователи
	//					  |ГДЕ
	//					  |	Пользователи.абс_Сотрудник = &абс_Сотрудник
	//					  |	И (НЕ Пользователи.ЭтоГруппа)
	//					  |	И (НЕ Пользователи.ПометкаУдаления)
	//					  |
	//					  |ИНДЕКСИРОВАТЬ ПО
	//					  |	Исполнитель
	//					  |;
	//					  |
	//					  |////////////////////////////////////////////////////////////////////////////////
	//					  |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//					  |	РолиИИсполнители.Исполнитель
	//					  |ИЗ
	//					  |	РегистрСведений.РолиИИсполнители КАК РолиИИсполнители
	//					  |ГДЕ
	//					  |	РолиИИсполнители.Исполнитель В
	//					  |			(ВЫБРАТЬ
	//					  |				вр.Исполнитель
	//					  |			ИЗ
	//					  |				вр КАК вр)
	//					  |	И РолиИИсполнители.Роль = &Роль
	//					  |	И РолиИИсполнители.Организация = &Организация
	//					  |
	//					  |СГРУППИРОВАТЬ ПО
	//					  |	РолиИИсполнители.Исполнитель
	//					  |;
	//					  |
	//					  |////////////////////////////////////////////////////////////////////////////////
	//					  |УНИЧТОЖИТЬ вр");						  
	//Запрос.УстановитьПараметр("абс_Сотрудник", ДоговорКонтрагента.абс_СотрудникДопСогласование);
	//Запрос.УстановитьПараметр("Организация",   ДоговорКонтрагента.Организация);
	//Запрос.УстановитьПараметр("Роль",          Справочники.РолиИсполнителей.СотрудникИнициаторКомпании);
	//Выборка = Запрос.Выполнить().Выбрать();
	//Пока Выборка.Следующий() Цикл
	//	СписокПользователей.Добавить(Выборка.Исполнитель);
	//КонецЦикла; 
	////АБС ВСТАВКА №15941 КОНЕЦ
	//
	//Для Каждого ТекПользовательСписка Из СписокПользователей Цикл
	//	Если НЕ ЗначениеЗаполнено(ТекПользовательСписка.Значение) Тогда
	//		Продолжить;
	//	КонецЕсли;
	//			
	//	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//						  |	абсЗадачаДоговора.Ссылка
	//						  |ИЗ
	//						  |	Задача.абсЗадачаДоговора КАК абсЗадачаДоговора
	//						  |ГДЕ
	//						  |	абсЗадачаДоговора.Исполнитель = &Исполнитель
	//						  |	И (НЕ абсЗадачаДоговора.Выполнена)
	//						  |	И абсЗадачаДоговора.ОбъектЗадачи = &ОбъектЗадачи
	//						  |
	//						  |СГРУППИРОВАТЬ ПО
	//						  |	абсЗадачаДоговора.Ссылка");
	//	Запрос.УстановитьПараметр("Исполнитель",ТекПользовательСписка.Значение);
	//	Запрос.УстановитьПараметр("ОбъектЗадачи",ДоговорКонтрагента);
	//	РезультатКоличество = Запрос.Выполнить().Выгрузить().Количество();
	//	Если РезультатКоличество > 0 Тогда
	//		//по пользователю уже есть задача
	//		Продолжить;	
	//	КонецЕсли;	
	//	
	//	абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговора(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, 
	//			ТекПользовательСписка.Значение, Отказ);
	//КонецЦикла;
	////-- Задача № 10549 Логинчев А.С.
	абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговора(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи,, Отказ,,,Справочники.РолиИсполнителей.ВозвратДоговоров_с_дополнительного_согласованияНаПД);
	//\\абс Урал 28.01.2014
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеСогласованиеБхугалтеромПриВыполнении(ТочкаМаршрутаБизнесПроцесса, Задача, Отказ)
	
	Если ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ Тогда
		СогласованБухгалтером = Истина;
		
		Записать();
	КонецЕсли;
	
КонецПроцедуры

Процедура УсловиеСоглашениеОКонфиденциальностиПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_ТипДоговора = Перечисления.абсТипыДоговоров.СоглашениеОКонфиденциальности;
	
КонецПроцедуры

Процедура УсловиеДоговорЗарегестрированПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Исполнение;
	
КонецПроцедуры

Процедура УсловиеСменаИсполнителяПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД;
	
КонецПроцедуры

Процедура УсловиеТиповоеСОКПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_ТипСоглашенияОКонфиденциальности = Перечисления.абс_ТипыСоглашенийОКонфиденциальности.Типовое 
		ИЛИ НЕ ЗначениеЗаполнено(ДоговорКонтрагента.абс_ТипСоглашенияОКонфиденциальности);
	
КонецПроцедуры

Процедура УсловиеСогласованДИБПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	//Сторчевой А.Н. D2016-1222-3124 { Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД;                                  
	Результат = НЕ ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ;
	// } Сторчевой А.Н. D2016-1222-3124
	
КонецПроцедуры

Процедура УсловиеСогласованДЭБПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	//Сторчевой А.Н. D2016-1222-3124 { Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДИБ;                                  
	Результат = НЕ ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ;
	// } Сторчевой А.Н. D2016-1222-3124

КонецПроцедуры

Процедура ДействиеСогласованиеДИБОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
	
КонецПроцедуры

Процедура ДействиеСогласованиеДЭБОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
		
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
	
КонецПроцедуры

Процедура ДействиеСогласованиеДИБПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеСогласованиеДЭБПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ) Экспорт
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);

КонецПроцедуры

Процедура ВыборВариантаСогласованиеБухгалтериейОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДВКУР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДВКУР;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласованиеБухгалтерией Тогда
	//Сторчевой А.Н. D2016-1207-3107 { 
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеЗакупкиМКР;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда	
	// } Сторчевой А.Н. D2016-1207-3107
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	//Сторчевой А.Н. D2016-1207-3107 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДЭБ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДЭБ;
	// } Сторчевой А.Н. D2016-1207-3107
	//Сторчевой А.Н. D2017-0517-3373 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеКазначейством Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеКазначейством;
	// } Сторчевой А.Н. D2017-0517-3373
	//Сторчевой А.Н. 77163404 23.08.2017 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАД;
	// } Сторчевой А.Н. 77163404 23.08.2017
    КонецЕсли;	
	
КонецПроцедуры   

Процедура ДействиеУточнениеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьЗадачуИнициатору(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);

	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);	
	
КонецПроцедуры

Процедура ДействиеУточнениеОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		
		Организация = ДоговорКонтрагента.Организация;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ДействиеДополнительноеСогласованиеОФКПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
			
	ФормируемыеЗадачи.Очистить();	
	
	МассивПользователей = абс_БизнесПроцессы.ПолучитьПользователяПоСотруднику(СотрудникДопСогласование);
	
	Если МассивПользователей.Количество() > 0 Тогда
		
		Если ЗначениеЗаполнено(МассивПользователей[0]) Тогда
			абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговора(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, 
				МассивПользователей[0], Отказ);
		КонецЕсли;
				
	КонецЕсли;
		
	Если ФормируемыеЗадачи.Количество() = 0 Тогда
		ttk_ОбщегоНазначения.СообщитьОбОшибке("Ошибка при формировании задач на дополнительное согласование. Не найден ответственный.", Отказ);
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
		
	// Добавим задачи для суперпользователей
	абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);		
	
	//СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);
	//
	//Для Каждого ФормируемаяЗадача Из ФормируемыеЗадачи Цикл
	//	ФормируемаяЗадача.Исполнитель 	= абс_БизнесПроцессы.ПолучитьПользователяПоСотруднику(СотрудникДопСогласование);
	//	ФормируемаяЗадача.ОбъектЗадачи	= ДоговорКонтрагента;
	//	
	//	ФормируемаяЗадача.Наименование = СокрЛП(Контрагент.Наименование) + ": " + СокрЛП(ДоговорКонтрагента.Наименование) + " " 
	//		+ ФормируемаяЗадача.Наименование + ".";

	//КонецЦикла;
	//	
	//// Добавим задачи для суперпользователей
	//абс_БизнесПроцессы.ДобавитьЗадачиСуперПользователя(ЭтотОбъект.Ссылка, ДоговорКонтрагента, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи);	

	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ДействиеДополнительноеСогласованиеОФКОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
		
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура УсловиеНаОтказИзОФКПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ;
	
КонецПроцедуры

Процедура ОтказСогласованияДоговораПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ;

КонецПроцедуры

Процедура ДополнительноеСогласованиеБухгалтеромОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
	
КонецПроцедуры

Процедура ДополнительноеСогласованиеБухгалтеромПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	//Сторчевой А.Н. D2016-1207-3107 {
	//ФормируемыеЗадачи.Очистить();	
	//
	//Если НЕ ЗначениеЗаполнено(ДоговорКонтрагента.абс_СотрудникДопСогласование) Тогда
	//	ttk_ОбщегоНазначения.СообщитьОбОшибке("Не выбран сотрудник доп. согласования.", Отказ);
	//КонецЕсли;
	//
	//ПользователиДопСогласования = абс_БизнесПроцессы.ПолучитьПользователяПоСотруднику(СотрудникДопСогласование);
	//
	//Если ПользователиДопСогласования.Количество() = 0 Тогда
	//	ttk_ОбщегоНазначения.СообщитьОбОшибке("Не найден пользователь доп. согласования.", Отказ);
	//КонецЕсли;
	//
	//Если Отказ Тогда
	//	Возврат;
	//КонецЕсли;	
	//
	//ПользовательДопСогласования = ПользователиДопСогласования[0];
	//
	//абс_БизнесПроцессы.СформироватьЗадачуСогласованиеДоговора(ЭтотОбъект.Ссылка, ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, ПользовательДопСогласования, Отказ);
	//
	//абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	// } Сторчевой А.Н. DD2016-1207-3107

КонецПроцедуры

Процедура ДействиеСогласованиеДирКСПОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
	
КонецПроцедуры

Процедура ДействиеСогласованиеДирКСППриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ВыборВарианта2ОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДоговораПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ПроверкаКарточки;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	//Сторчевой А.Н. D2016-1207-3107 {	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОдобрениеСДилиОСА;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Подписание_и_регистрация;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;	
	// } Сторчевой А.Н. D2016-1207-3107	
	Иначе
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
    КонецЕсли;

КонецПроцедуры

Процедура ВыборВариантаВозвратаОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДирКСП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДоговораПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Подготовка Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Подготовка;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДВКУР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДВАиК;		
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеРуководителемПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеРуководителемПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОдобрениеСДилиОСА;		
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДопСогласование;			
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеБухгалтерией Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеБухгалтерией;
	//Сторчевой А.Н. D2016-1207-3107 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеТехБлоком Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеТехБлоком;
	//Сторчевой А.Н. D2017-0517-3373 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеДСиМТО Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДСиМТО;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеТехническимДиректором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеТехническимДиректором;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеКазначейством Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеКазначейством;
	// } Сторчевой А.Н. D2017-0517-3373
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ПроверкаКарточки;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПВП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеПВП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДЭБ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДЭБ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАудитором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАудитором;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласованиеБухгалтерией Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеЗакупкиМКР;
	// } Сторчевой А.Н. D2016-1207-3107
	//Сторчевой А.Н. 77150592 31.07.2017 {                                   
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеДТПиР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДТПиР;
	// } Сторчевой А.Н. 77150592 31.07.2017
	//Сторчевой А.Н. 77163404 23.08.2017 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАД;
	// } Сторчевой А.Н. 77163404 23.08.2017
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыборСледующегоСтатусаОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;		
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантРегистрацияДоговора;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПВП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеПВП;	
	//Сторчевой А.Н. D2016-1207-3107 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДЭБ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДЭБ;
	// } Сторчевой А.Н. D2016-1207-3107
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	//Сторчевой А.Н. D2017-0517-3373 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеКазначейством Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеКазначейством;
	// } Сторчевой А.Н. D2017-0517-3373
	//Сторчевой А.Н. 77163404 23.08.2017 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАД;
	// } Сторчевой А.Н. 77163404 23.08.2017
	КонецЕсли;	
	
КонецПроцедуры

Процедура ВыборСледующегоСтатусаДопСогласованияОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДВКУР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДВКУР;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеРуководителемПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеРуководителемПД;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОдобрениеСДилиОСА;		
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	//Сторчевой А.Н. D2016-1207-3107 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеТехБлоком Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеТехБлоком;
	//Сторчевой А.Н. D2017-0517-3373 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеДСиМТО Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДСиМТО;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеТехническимДиректором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеТехническимДиректором;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеКазначейством Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеКазначейством;
	// } Сторчевой А.Н. D2017-0517-3373
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеБухгалтерией Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеБухгалтерией;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПВП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеПВП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДирКСП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДЭБ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДЭБ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАудитором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАудитором;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласованиеБухгалтерией Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеЗакупкиМКР;
	// } Сторчевой А.Н. D2016-1207-3107
	//Сторчевой А.Н. 77120188 19.06.2017 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеОФК;
	// } Сторчевой А.Н. 77120188 19.06.2017
	//Сторчевой А.Н. 77150592 31.07.2017 {                                   
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеДТПиР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДТПиР;
	// } Сторчевой А.Н. 77150592 31.07.2017
	//Сторчевой А.Н. 77163404 23.08.2017 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАД;
	// } Сторчевой А.Н. 77163404 23.08.2017
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеСогласованиеРуководителемПДОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
	
КонецПроцедуры

Процедура ДействиеСогласованиеРуководителемПДПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);                                               	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ВыборВариантаСогласованияРуководителемПДОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДВКУР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДВАиК;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;
	//Сторчевой А.Н. D2016-1207-3107 {	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДирКСП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПВП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеПВП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОдобрениеСДилиОСА;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Подписание_и_регистрация;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеАудитором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеАудитором;
	// } Сторчевой А.Н. D2016-1207-3107
	КонецЕсли;

КонецПроцедуры

Процедура ДействиеОдобрениеСДилиОСАОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
	
КонецПроцедуры

Процедура ДействиеОдобрениеСДилиОСАПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
	
КонецПроцедуры

Процедура ВыборОдобрениеСДилиОСАОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора;
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Подписание_и_регистрация;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;			
	КонецЕсли;
	            	
КонецПроцедуры

Процедура Условие1ПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА;    	
	
КонецПроцедуры

//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов
Процедура ПроеркаОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отмена Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отмена;
	Иначе
		Результат = ТочкаВыбораВарианта.Варианты.ПродолжитьСогласование;
	КонецЕсли;	
	
КонецПроцедуры
//АБС ВСТАВКА 36495  20.02.2014 11:20:34  Родин  Оптимизация бизнес-процессов

//Проектный учет Родин
Процедура НеобходимоСогласованиеРуководителемБлокаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеРуководителемБлока;    	
КонецПроцедуры

Процедура СогласованиоРуководителемБлокаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ;    	
КонецПроцедуры

Процедура СогласованиеРуководителемБлокаПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	абс_БизнесПроцессы.СформироватьЗадачиДляРуководителейБлока(Ссылка,ТочкаМаршрутаБизнесПроцесса,ФормируемыеЗадачи,ДоговорКонтрагента.абс_НаправлениеДеятельности,Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
КонецПроцедуры
//Проектный учет Родин

//Сторчевой А.Н. D2016-1222-3124 {
Процедура НеобходимоСогласованиеТехБлокомПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = (СокрЛП(ДоговорКонтрагента.Организация.Наименование) = "КТТК" и не ДоговорКонтрагента.абс_Конфиденциальный и не ДоговорКонтрагента.абс_ТипДоговора = Перечисления.абсТипыДоговоров.СоглашениеОКонфиденциальности);    	
КонецПроцедуры

Процедура СогласованиеТехБлокомПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);

КонецПроцедуры

Процедура СогласованиеТехБлокомОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры
// } Сторчевой А.Н. D2016-1222-3124

//Сторчевой А.Н. D2016-1207-3107 {
Процедура УсловиеСогласованиеДирКСППроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП;
КонецПроцедуры

Процедура ВыборВариантаСогласованияТехБлокомОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ПроверкаДФМ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ПроверкаКарточки;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Отказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	//Сторчевой А.Н. D2017-0517-3373 {
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеДСиМТО Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДСиМТО;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеТехническимДиректором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеТехническимДиректором;
	// } Сторчевой А.Н. D2017-0517-3373
	//Сторчевой А.Н. 77150592 31.07.2017 {                                   
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеДТПиР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДТПиР;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДоговораПД;
	// } Сторчевой А.Н. 77150592 31.07.2017
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаСогласованияВПОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Регистрация Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантПодписаниеИРегистрация;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ОдобрениеСДилиОСА Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ОдобрениеСДилиОСА;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДирКСП Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДирКСП;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Отказ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантОтказ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВыборВариантаДЭБОбработкаВыбораВарианта(ТочкаВыбораВарианта, Результат)
	
	ТекСтатусДоговора = ДоговорКонтрагента.абс_СтатусДоговора; 
	
	Если ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеДИБ Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеДИБ;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.СогласованиеПД Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДоговораПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеПДМКР Тогда
		Результат = ТочкаВыбораВарианта.Варианты.СогласованиеДоговораПД;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ДополнительноеСогласование Тогда	
		Результат = ТочкаВыбораВарианта.Варианты.ДополнительноеСогласование;
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.Уточнение Тогда
		Результат = ТочкаВыбораВарианта.Варианты.Уточнение;
	//Сторчевой А.Н. 77150592 31.07.2017 {	
	ИначеЕсли ТекСтатусДоговора = Перечисления.абсСтатусыДоговоров.ttk_СогласованиеТехническимДиректором Тогда
		Результат = ТочкаВыбораВарианта.Варианты.ВариантСогласованиеТехническимДиректором;
	// } Сторчевой А.Н. 77150592 31.07.2017	
	КонецЕсли;
	
КонецПроцедуры

Процедура ДействиеСогласованиеАудиторомОбработкаИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);

КонецПроцедуры

Процедура ДействиеСогласованиеАудиторомПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
		
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);
	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);	

КонецПроцедуры
// } Сторчевой А.Н. D2016-1207-3107

//Сторчевой А.Н. 77122555 31.05.2017 {                                   
Процедура УсловиеОтменаПроверкаУсловия(ТочкаМаршрутаБизнесПроцесса, Результат)
	Результат = ДоговорКонтрагента.абс_СтатусДоговора = Перечисления.абсСтатусыДоговоров.Отмена;
КонецПроцедуры
// } Сторчевой А.Н. 77122555 31.05.2017

//Сторчевой А.Н. D2017-0517-3373 {
Процедура СогласованиеИнтерактивнойАктивации(ТочкаМаршрутаБизнесПроцесса, Задача, СтандартнаяОбработка)
	СтандартнаяОбработка=Ложь;
	ОткрытьФормуДоговора(ДоговорКонтрагента,Задача);
КонецПроцедуры

Процедура СогласованиеПриСозданииЗадач(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ)
	СформироватьГрупповуюЗадачу(ТочкаМаршрутаБизнесПроцесса, ФормируемыеЗадачи, Отказ);	
	абс_БизнесПроцессыУведомления.ЗарегестрироватьУведомление(Ссылка, ТочкаМаршрутаБизнесПроцесса, ДоговорКонтрагента.абс_СтатусДоговора);
КонецПроцедуры
// } Сторчевой А.Н. D2017-0517-3373 

