Перем СохраненнаяНастройка Экспорт;        // Текущий вариант отчета
Перем ТаблицаВариантовОтчета Экспорт;      // Таблица вариантов доступных текущему пользователю
Перем СоответствиеНаборовДанныхИЗапросов;

#Если Клиент Тогда

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

// Функция формирует основной запрос по сбору данных для расчетной ведомости.
//
// Параметры
//
// Возвращаемое значение:
//   РезультатЗапроса   – результат запроса.
//
Функция СформироватьЗапрос(СписокФизЛиц, СписокОрганизаций, СписокГоловныхОрганизаций, НачалоПериода, КонецПериода)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", 		 НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", 		 КонецПериода);
	Запрос.УстановитьПараметр("Рубли", 			 	 Константы.ВалютаРегламентированногоУчета.Получить());
	Запрос.УстановитьПараметр("Физлицо",		 	 СписокФизЛиц);
	Запрос.УстановитьПараметр("Организация",		 СписокОрганизаций);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", СписокОрганизаций);
	СписокЗначений = Новый СписокЗначений;
	СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаДневная);
	СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаМесячная);
	СписокЗначений.Добавить(Справочники.ПоказателиСхемМотивации.ТарифнаяСтавкаЧасовая);
	Запрос.УстановитьПараметр("ТарифнаяСтавкаОклад", СписокЗначений);

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	НАЧАЛОПЕРИОДА(РегламентированныйПроизводственныйКалендарь.ДатаКалендаря, МЕСЯЦ) КАК ПериодРегистрации
	|ПОМЕСТИТЬ Периоды
	|ИЗ
	|	РегистрСведений.РегламентированныйПроизводственныйКалендарь КАК РегламентированныйПроизводственныйКалендарь
	|ГДЕ
	|	РегламентированныйПроизводственныйКалендарь.ДатаКалендаря МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Сотрудники.Физлицо КАК Физлицо,
	|	МАКСИМУМ(ФИОФизЛиц.Фамилия + "" "" + (ВЫРАЗИТЬ(ФИОФизЛиц.Имя КАК СТРОКА(1))) + "". "" + (ВЫРАЗИТЬ(ФИОФизЛиц.Отчество КАК СТРОКА(1))) + ""."") КАК ФИО,
	|	Сотрудники.Организация КАК Организация,
	|	Сотрудники.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЕСТЬNULL(МАКСИМУМ(Сотрудники.Сотрудник), ЗНАЧЕНИЕ(Справочник.СотрудникиОрганизаций.ПустаяСсылка)) КАК Сотрудник,
	|	МАКСИМУМ(Сотрудники.Должность.Наименование) КАК Должность,
	|	МАКСИМУМ(Сотрудники.ТабельныйНомер) КАК ТабельныйНомер,
	|	Сотрудники.ПериодРегистрации
	|ПОМЕСТИТЬ ВТПодразделенияРаботников
	|ИЗ
	|	(ВЫБРАТЬ
	|		РаботникиОрганизации.Физлицо КАК Физлицо,
	|		РаботникиОрганизации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		РаботникиОрганизации.Организация КАК Организация,
	|		РаботникиОрганизации.ПодразделениеОрганизации КАК РаботникиОрганизацииПодразделениеОрганизации,
	|		РаботникиОрганизации.Должность КАК Должность,
	|		РаботникиОрганизации.Сотрудник КАК Сотрудник,
	|		РаботникиОрганизации.ТабельныйНомер КАК ТабельныйНомер,
	|		РаботникиОрганизации.ПериодРегистрации КАК ПериодРегистрации
	|	ИЗ
	|		(ВЫБРАТЬ
	|			ПоследниеДаты.Физлицо КАК Физлицо,
	|			ПоследниеДаты.Организация КАК ГоловнаяОрганизация,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизаций.ПериодЗавершения < КОНЕЦПЕРИОДА(ПоследниеДаты.ПериодРегистрации, МЕСЯЦ)
	|						И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизаций.ОбособленноеПодразделениеЗавершения
	|				ИНАЧЕ РаботникиОрганизаций.ОбособленноеПодразделение
	|			КОНЕЦ КАК Организация,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизаций.ПериодЗавершения < КОНЕЦПЕРИОДА(ПоследниеДаты.ПериодРегистрации, МЕСЯЦ)
	|						И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизаций.ПодразделениеОрганизацииЗавершения
	|				ИНАЧЕ РаботникиОрганизаций.ПодразделениеОрганизации
	|			КОНЕЦ КАК ПодразделениеОрганизации,
	|			ВЫБОР
	|				КОГДА РаботникиОрганизаций.ПериодЗавершения < КОНЕЦПЕРИОДА(ПоследниеДаты.ПериодРегистрации, МЕСЯЦ)
	|						И РаботникиОрганизаций.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|					ТОГДА РаботникиОрганизаций.ДолжностьЗавершения
	|				ИНАЧЕ РаботникиОрганизаций.Должность
	|			КОНЕЦ КАК Должность,
	|			РаботникиОрганизаций.Сотрудник КАК Сотрудник,
	|			РаботникиОрганизаций.Сотрудник.Код КАК ТабельныйНомер,
	|			ПоследниеДаты.ПериодРегистрации КАК ПериодРегистрации
	|		ИЗ
	|			(ВЫБРАТЬ
	|				МАКСИМУМ(РаботникиОрганизаций.Период) КАК Период,
	|				РаботникиОрганизаций.Сотрудник.Физлицо КАК Физлицо,
	|				РаботникиОрганизаций.Организация КАК Организация,
	|				ПериодыРегистрации.ПериодРегистрации КАК ПериодРегистрации
	|			ИЗ
	|				РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|					ВНУТРЕННЕЕ СОЕДИНЕНИЕ Периоды КАК ПериодыРегистрации
	|					ПО (РаботникиОрганизаций.Период <= КОНЕЦПЕРИОДА(ПериодыРегистрации.ПериодРегистрации, МЕСЯЦ))
	|			ГДЕ
	|				РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)
	|			
	|			СГРУППИРОВАТЬ ПО
	|				РаботникиОрганизаций.Сотрудник.Физлицо,
	|				РаботникиОрганизаций.Организация,
	|				ПериодыРегистрации.ПериодРегистрации) КАК ПоследниеДаты
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.РаботникиОрганизаций КАК РаботникиОрганизаций
	|				ПО ПоследниеДаты.Период = РаботникиОрганизаций.Период
	|					И (РаботникиОрганизаций.Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство))
	|					И ПоследниеДаты.Организация = РаботникиОрганизаций.Организация
	|					И ПоследниеДаты.Физлицо = РаботникиОрганизаций.Сотрудник.Физлицо) КАК РаботникиОрганизации
	|	
	|	ОБЪЕДИНИТЬ
	|	
	|	ВЫБРАТЬ
	|		ДоговорникиОрганизацийСрезПоследних.Физлицо,
	|		ДоговорникиОрганизацийСрезПоследних.ГоловнаяОрганизация,
	|		ДоговорникиОрганизацийСрезПоследних.Организация,
	|		ДоговорникиОрганизацийСрезПоследних.ПодразделениеОрганизации,
	|		NULL,
	|		ДоговорникиОрганизацийСрезПоследних.Сотрудник,
	|		NULL,
	|		ДоговорникиОрганизацийСрезПоследних.ПериодРегистрации
	|	ИЗ
	|		(ВЫБРАТЬ
	|			Договор.Физлицо КАК Физлицо,
	|			ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник КАК Сотрудник,
	|			Договор.Организация КАК Организация,
	|			Договор.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|			ДоговорНаВыполнениеРаботСФизЛицом.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|			Договор.ПериодРегистрации КАК ПериодРегистрации
	|		ИЗ
	|			(ВЫБРАТЬ
	|				ДатыПоследнихДоговоров.Физлицо КАК Физлицо,
	|				ДоговорНаВыполнениеРаботСФизЛицом.Организация КАК Организация,
	|				ДатыПоследнихДоговоров.Организация КАК ГоловнаяОрганизация,
	|				МАКСИМУМ(ДоговорНаВыполнениеРаботСФизЛицом.Ссылка) КАК Ссылка,
	|				ДатыПоследнихДоговоров.ПериодРегистрации КАК ПериодРегистрации
	|			ИЗ
	|				(ВЫБРАТЬ
	|					ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо КАК Физлицо,
	|					ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Организация КАК Организация,
	|					МАКСИМУМ(ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала) КАК ДатаНачала,
	|					ПериодыРегистрации.ПериодРегистрации КАК ПериодРегистрации
	|				ИЗ
	|					Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|						ВНУТРЕННЕЕ СОЕДИНЕНИЕ Периоды КАК ПериодыРегистрации
	|						ПО (ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала <= КОНЕЦПЕРИОДА(ПериодыРегистрации.ПериодРегистрации, МЕСЯЦ))
	|				ГДЕ
	|					ДоговорНаВыполнениеРаботСФизЛицом.Проведен
	|				
	|				СГРУППИРОВАТЬ ПО
	|					ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо,
	|					ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Организация,
	|					ПериодыРегистрации.ПериодРегистрации) КАК ДатыПоследнихДоговоров
	|					ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|					ПО ДатыПоследнихДоговоров.Физлицо = ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Физлицо
	|						И ДатыПоследнихДоговоров.Организация = ДоговорНаВыполнениеРаботСФизЛицом.Сотрудник.Организация
	|						И ДатыПоследнихДоговоров.ДатаНачала = ДоговорНаВыполнениеРаботСФизЛицом.ДатаНачала
	|			
	|			СГРУППИРОВАТЬ ПО
	|				ДатыПоследнихДоговоров.Физлицо,
	|				ДоговорНаВыполнениеРаботСФизЛицом.Организация,
	|				ДатыПоследнихДоговоров.Организация,
	|				ДатыПоследнихДоговоров.ПериодРегистрации) КАК Договор
	|				ЛЕВОЕ СОЕДИНЕНИЕ Документ.ДоговорНаВыполнениеРаботСФизЛицом КАК ДоговорНаВыполнениеРаботСФизЛицом
	|				ПО Договор.Ссылка = ДоговорНаВыполнениеРаботСФизЛицом.Ссылка) КАК ДоговорникиОрганизацийСрезПоследних) КАК Сотрудники
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ФИОФизЛиц.СрезПоследних(&КонецПериода, ) КАК ФИОФизЛиц
	|		ПО Сотрудники.Физлицо = ФИОФизЛиц.ФизЛицо
	|ГДЕ
	|	Сотрудники.Организация В(&Организация)
	|	И Сотрудники.Физлицо В(&Физлицо)
	|
	|СГРУППИРОВАТЬ ПО
	|	Сотрудники.Физлицо,
	|	Сотрудники.Организация,
	|	Сотрудники.ГоловнаяОрганизация,
	|	Сотрудники.ПериодРегистрации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Физлицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ОсновныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение КАК Организация,
	|	ОсновныеНачисленияРаботниковОрганизации.Организация КАК ГоловнаяОрганизация,
	|	ОсновныеНачисленияРаботниковОрганизации.ФизЛицо КАК ФизЛицо,
	|	ОсновныеНачисленияРаботниковОрганизации.ВидРасчета КАК ВидРасчета,
	|	ОсновныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета КАК СпособРасчета,
	|	""Всего начислено"" КАК Группа,
	|	ОсновныеНачисленияРаботниковОрганизации.Результат КАК Результат,
	|	ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней КАК ОтработаноДней,
	|	ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов КАК ОтработаноЧасов,
	|	ДанныеРаботников.ПериодРегистрации
	|ПОМЕСТИТЬ Данные
	|ИЗ
	|	ВТПодразделенияРаботников КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ОсновныеНачисленияРаботниковОрганизаций КАК ОсновныеНачисленияРаботниковОрганизации
	|		ПО (ОсновныеНачисленияРаботниковОрганизации.ФизЛицо = ДанныеРаботников.Физлицо)
	|			И (ОсновныеНачисленияРаботниковОрганизации.Организация = ДанныеРаботников.ГоловнаяОрганизация)
	|			И (ОсновныеНачисленияРаботниковОрганизации.ПериодРегистрации = ДанныеРаботников.ПериодРегистрации)
	|ГДЕ
	|	(НЕ(ОсновныеНачисленияРаботниковОрганизации.Результат = 0
	|				И ОсновныеНачисленияРаботниковОрганизации.ОтработаноДней = 0
	|				И ОсновныеНачисленияРаботниковОрганизации.ОтработаноЧасов = 0))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДополнительныеНачисленияРаботниковОрганизации.ОбособленноеПодразделение,
	|	ДополнительныеНачисленияРаботниковОрганизации.Организация,
	|	ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо,
	|	ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета,
	|	ДополнительныеНачисленияРаботниковОрганизации.ВидРасчета.СпособРасчета,
	|	""Всего начислено"",
	|	ДополнительныеНачисленияРаботниковОрганизации.Результат,
	|	NULL,
	|	NULL,
	|	ДанныеРаботников.ПериодРегистрации
	|ИЗ
	|	ВТПодразделенияРаботников КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.ДополнительныеНачисленияРаботниковОрганизаций КАК ДополнительныеНачисленияРаботниковОрганизации
	|		ПО (ДополнительныеНачисленияРаботниковОрганизации.ФизЛицо = ДанныеРаботников.Физлицо)
	|			И (ДополнительныеНачисленияРаботниковОрганизации.Организация = ДанныеРаботников.ГоловнаяОрганизация)
	|			И (НАЧАЛОПЕРИОДА(ДополнительныеНачисленияРаботниковОрганизации.ПериодРегистрации, МЕСЯЦ) = ДанныеРаботников.ПериодРегистрации)
	|ГДЕ
	|	ДополнительныеНачисленияРаботниковОрганизации.Результат <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	УдержанияРаботниковОрганизации.ОбособленноеПодразделение,
	|	УдержанияРаботниковОрганизации.Организация,
	|	УдержанияРаботниковОрганизации.ФизЛицо,
	|	УдержанияРаботниковОрганизации.ВидРасчета,
	|	УдержанияРаботниковОрганизации.ВидРасчета.СпособРасчета,
	|	""Всего удержано"",
	|	УдержанияРаботниковОрганизации.Результат,
	|	NULL,
	|	NULL,
	|	ДанныеРаботников.ПериодРегистрации
	|ИЗ
	|	ВТПодразделенияРаботников КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.УдержанияРаботниковОрганизаций КАК УдержанияРаботниковОрганизации
	|		ПО (УдержанияРаботниковОрганизации.ФизЛицо = ДанныеРаботников.Физлицо)
	|			И (УдержанияРаботниковОрганизации.Организация = ДанныеРаботников.ГоловнаяОрганизация)
	|			И (ДанныеРаботников.ПериодРегистрации = НАЧАЛОПЕРИОДА(УдержанияРаботниковОрганизации.ПериодРегистрации, МЕСЯЦ))
	|ГДЕ
	|	УдержанияРаботниковОрганизации.Результат <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НДФЛРасчетыСБюджетом.Организация
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.ФизЛицо,
	|	""НДФЛ"",
	|	""НДФЛ"",
	|	""Всего удержано"",
	|	СУММА(НДФЛРасчетыСБюджетом.Налог),
	|	NULL,
	|	NULL,
	|	ДанныеРаботников.ПериодРегистрации
	|ИЗ
	|	ВТПодразделенияРаботников КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.НДФЛРасчетыСБюджетом КАК НДФЛРасчетыСБюджетом
	|		ПО (НДФЛРасчетыСБюджетом.ФизЛицо = ДанныеРаботников.Физлицо)
	|			И (ВЫБОР
	|				КОГДА НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|					ТОГДА НДФЛРасчетыСБюджетом.Организация
	|				ИНАЧЕ НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация
	|			КОНЕЦ = ДанныеРаботников.ГоловнаяОрганизация)
	|			И (НАЧАЛОПЕРИОДА(НДФЛРасчетыСБюджетом.Период, МЕСЯЦ) = ДанныеРаботников.ПериодРегистрации)
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И НДФЛРасчетыСБюджетом.ИсчисленоИзЗарплаты
	|	И НДФЛРасчетыСБюджетом.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.НДФЛРасчетыСБюджетомВидСтроки.Начисление)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеРаботников.ПериодРегистрации,
	|	НДФЛРасчетыСБюджетом.ОбособленноеПодразделение,
	|	НДФЛРасчетыСБюджетом.ФизЛицо,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА НДФЛРасчетыСБюджетом.Организация
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.Организация.ГоловнаяОрганизация
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПогашениеЗаймовРаботникамиОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ПогашениеЗаймовРаботникамиОрганизаций.Организация
	|		ИНАЧЕ ПогашениеЗаймовРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо,
	|	""Погашение"",
	|	""Погашение"",
	|	""Всего удержано"",
	|	ПогашениеЗаймовРаботникамиОрганизаций.ОсновнойДолг + ПогашениеЗаймовРаботникамиОрганизаций.Проценты,
	|	NULL,
	|	NULL,
	|	ДанныеРаботников.ПериодРегистрации
	|ИЗ
	|	ВТПодразделенияРаботников КАК ДанныеРаботников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПогашениеЗаймовРаботникамиОрганизаций КАК ПогашениеЗаймовРаботникамиОрганизаций
	|		ПО (ПогашениеЗаймовРаботникамиОрганизаций.ФизЛицо = ДанныеРаботников.Физлицо)
	|			И (НАЧАЛОПЕРИОДА(ПогашениеЗаймовРаботникамиОрганизаций.Период, МЕСЯЦ) = ДанныеРаботников.ПериодРегистрации)
	|ГДЕ
	|	ПогашениеЗаймовРаботникамиОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ПогашениеЗаймовРаботникамиОрганизаций.УдержаноИзЗарплаты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СуммаОстаток.Организация,
	|	СуммаОстаток.ГоловнаяОрганизация,
	|	СуммаОстаток.Физлицо,
	|	""Конечное сальдо"",
	|	""Конечное сальдо"",
	|	""Я"",
	|	СУММА(СуммаОстаток.Результат),
	|	NULL,
	|	NULL,
	|	СуммаОстаток.ПериодРегистрации
	|ИЗ
	|	(ВЫБРАТЬ
	|		Периоды.ПериодРегистрации КАК ПериодРегистрации,
	|		Сальдо.Физлицо КАК Физлицо,
	|		Сальдо.Организация КАК Организация,
	|		СУММА(Сальдо.СуммаВзаиморасчетовОстаток) КАК Результат,
	|		ВЫБОР
	|			КОГДА Сальдо.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА Сальдо.Организация
	|			ИНАЧЕ Сальдо.Организация.ГоловнаяОрганизация
	|		КОНЕЦ КАК ГоловнаяОрганизация
	|	ИЗ
	|		Периоды КАК Периоды
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация КАК Организация,
	|				&НачалоПериода КАК Период,
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо КАК Физлицо,
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовОстаток КАК СуммаВзаиморасчетовОстаток
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Остатки(&НачалоПериода {(&НачалоПериода)}, ) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Организация,
	|				НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Период, ДЕНЬ),
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.Физлицо,
	|				ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты.СуммаВзаиморасчетовОборот
	|			ИЗ
	|				РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций.Обороты(&НачалоПериода {(&НачалоПериода)}, &КонецПериода {(&КонецПериода)}, Месяц, ) КАК ВзаиморасчетыСРаботникамиОрганизацииОстаткиИОбороты
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				НДФЛКЗачету.Организация,
	|				&НачалоПериода,
	|				НДФЛКЗачету.ФизЛицо,
	|				НДФЛКЗачету.СуммаНДФЛКЗачетуОстаток
	|			ИЗ
	|				РегистрНакопления.НДФЛКЗачету.Остатки(&НачалоПериода {(&НачалоПериода)}, ) КАК НДФЛКЗачету
	|			
	|			ОБЪЕДИНИТЬ ВСЕ
	|			
	|			ВЫБРАТЬ
	|				НДФЛКЗачету.Организация,
	|				НДФЛКЗачету.Период,
	|				НДФЛКЗачету.ФизЛицо,
	|				НДФЛКЗачету.СуммаНДФЛКЗачетуОборот
	|			ИЗ
	|				РегистрНакопления.НДФЛКЗачету.Обороты(&НачалоПериода {(&НачалоПериода)}, &КонецПериода {(&КонецПериода)}, Месяц, ) КАК НДФЛКЗачету) КАК Сальдо
	|			ПО (Сальдо.Период <= Периоды.ПериодРегистрации)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		Сальдо.Организация,
	|		Сальдо.Физлицо,
	|		Периоды.ПериодРегистрации,
	|		ВЫБОР
	|			КОГДА Сальдо.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА Сальдо.Организация
	|			ИНАЧЕ Сальдо.Организация.ГоловнаяОрганизация
	|		КОНЕЦ) КАК СуммаОстаток
	|ГДЕ
	|	СуммаОстаток.Результат <> 0
	|	И СуммаОстаток.Физлицо В(&Физлицо)
	|	И СуммаОстаток.Организация В(&Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	СуммаОстаток.Физлицо,
	|	СуммаОстаток.ПериодРегистрации,
	|	СуммаОстаток.Организация,
	|	СуммаОстаток.ГоловнаяОрганизация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВзаиморасчетыСРаботникамиОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация
	|		ИНАЧЕ ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	ВзаиморасчетыСРаботникамиОрганизаций.Физлицо,
	|	""К выплате"",
	|	""К выплате"",
	|	""Всего удержано"",
	|	СУММА(ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетов),
	|	NULL,
	|	NULL,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.Период, МЕСЯЦ)
	|ИЗ
	|	РегистрНакопления.ВзаиморасчетыСРаботникамиОрганизаций КАК ВзаиморасчетыСРаботникамиОрганизаций
	|ГДЕ
	|	ВзаиморасчетыСРаботникамиОрганизаций.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ВзаиморасчетыСРаботникамиОрганизаций.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ВзаиморасчетыСРаботникамиОрганизаций.СуммаВзаиморасчетов <> 0
	|	И ВзаиморасчетыСРаботникамиОрганизаций.Физлицо В(&Физлицо)
	|	И ВзаиморасчетыСРаботникамиОрганизаций.Организация В(&Организация)
	|	И ВзаиморасчетыСРаботникамиОрганизаций.ХарактерВыплаты <> ЗНАЧЕНИЕ(Перечисление.ХарактерВыплатыЗарплаты.Зарплата)
	|{ГДЕ
	|	ВзаиморасчетыСРаботникамиОрганизаций.Физлицо.*,
	|	(ВЫБОР
	|			КОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|				ТОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация
	|			ИНАЧЕ ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|		КОНЕЦ).* КАК ГоловнаяОрганизация}
	|
	|СГРУППИРОВАТЬ ПО
	|	ВзаиморасчетыСРаботникамиОрганизаций.Физлицо,
	|	ВзаиморасчетыСРаботникамиОрганизаций.Организация,
	|	ВЫБОР
	|		КОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА ВзаиморасчетыСРаботникамиОрганизаций.Организация
	|		ИНАЧЕ ВзаиморасчетыСРаботникамиОрганизаций.Организация.ГоловнаяОрганизация
	|	КОНЕЦ,
	|	НАЧАЛОПЕРИОДА(ВзаиморасчетыСРаботникамиОрганизаций.Период, МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДанныеРаботников.Организация КАК Организация,
	|	ДанныеРаботников.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
	|	Данные.ФизЛицо КАК ФизЛицо,
	|	ДанныеРаботников.Организация.Наименование КАК ОрганизацияПредставление,
	|	ДанныеРаботников.ФИО КАК ФИО,
	|	Данные.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	Данные.Группа КАК Группа,
	|	Данные.ВидРасчета,
	|	Данные.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме КАК ЯвляетсяДоходомВНатуральнойФорме,
	|	Данные.СпособРасчета,
	|	Данные.Результат КАК Результат,
	|	Данные.ОтработаноДней КАК ОтработаноДней,
	|	Данные.ОтработаноЧасов КАК ОтработаноЧасов,
	|	ДанныеРаботников.Должность КАК Должность,
	|	ДанныеРаботников.ТабельныйНомер КАК ТабельныйНомер,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаЗавершения.ТребуетВводаТарифногоРазряда
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета.ТребуетВводаТарифногоРазряда
	|		КОНЕЦ, ЛОЖЬ) КАК ТребуетВводаТарифногоРазряда,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1Завершения.Наименование
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1.Наименование
	|		КОНЕЦ, """") КАК ТарифныйРазряд,
	|	Данные.ПериодРегистрации КАК ПериодРегистрации,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель1Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель1
	|		КОНЕЦ, 0) КАК Показатель1,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель2Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель2
	|		КОНЕЦ, 0) КАК Показатель2,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель3Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель3
	|		КОНЕЦ, 0) КАК Показатель3,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель4Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель4
	|		КОНЕЦ, 0) КАК Показатель4,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель5Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель5
	|		КОНЕЦ, 0) КАК Показатель5,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель6Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Показатель6
	|		КОНЕЦ, 0) КАК Показатель6,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта1
	|		КОНЕЦ, &Рубли) КАК Валюта1,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта2Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта2
	|		КОНЕЦ, &Рубли) КАК Валюта2,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта3Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта3
	|		КОНЕЦ, &Рубли) КАК Валюта3,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта4Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта4
	|		КОНЕЦ, &Рубли) КАК Валюта4,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта5Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта5
	|		КОНЕЦ, &Рубли) КАК Валюта5,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения < &КонецПериода
	|					И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта6Завершения
	|			ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Валюта6
	|		КОНЕЦ, &Рубли) КАК Валюта6,
	|	ДанныеРаботников.Сотрудник,
	|	ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ДокументОснование,
	|	ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчетаИзмерение,
	|	ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Организация КАК ОрганизацияВР,
	|	ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ВидРасчета КАК ВидРасчетаПлановый,
	|	РазмерТарифныхСтавокСрезПоследних.Валюта КАК ВалютаТарифныйРазряд,
	|	РазмерТарифныхСтавокСрезПоследних.Размер
	|ПОМЕСТИТЬ РезультатВыборки
	|ИЗ
	|	Данные КАК Данные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПодразделенияРаботников КАК ДанныеРаботников
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(
	|					&КонецПериода,
	|					ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО
	|						И Сотрудник.ФизЛицо В
	|							(ВЫБРАТЬ
	|								ДанныеРаботников.Сотрудник.Физлицо
	|							ИЗ
	|								ВТПодразделенияРаботников КАК ДанныеРаботников)
	|						И Сотрудник.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятостиВОрганизации.ВнутреннееСовместительство)) КАК ПлановыеНачисленияРаботниковОрганизацииСрезПоследних
	|				ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РазмерТарифныхСтавок.СрезПоследних(&КонецПериода, ) КАК РазмерТарифныхСтавокСрезПоследних
	|				ПО (ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <= &КонецПериода
	|								И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1Завершения
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ТарифныйРазряд1
	|					КОНЕЦ = РазмерТарифныхСтавокСрезПоследних.ТарифныйРазряд)
	|			ПО ДанныеРаботников.ГоловнаяОрганизация = ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Организация
	|				И ДанныеРаботников.Сотрудник.Физлицо = ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Сотрудник.Физлицо
	|				И (ВЫБОР
	|					КОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <= &КонецПериода
	|							И ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|						ТОГДА ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.ДействиеЗавершения
	|					ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацииСрезПоследних.Действие
	|				КОНЕЦ <> ЗНАЧЕНИЕ(Перечисление.ВидыДействияСНачислением.Прекратить))
	|		ПО Данные.ФизЛицо = ДанныеРаботников.Физлицо
	|			И Данные.ГоловнаяОрганизация = ДанныеРаботников.ГоловнаяОрганизация
	|			И Данные.ПериодРегистрации = ДанныеРаботников.ПериодРегистрации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РезультатВыборки.Организация КАК Организация,
	|	РезультатВыборки.Организация.КодПоОКПО КАК ОрганизацияКодПоОКПО,
	|	РезультатВыборки.ФизЛицо КАК ФизЛицо,
	|	ВЫРАЗИТЬ(РезультатВыборки.Организация.НаименованиеПолное КАК СТРОКА(300)) КАК ОрганизацияПредставление,
	|	РезультатВыборки.ФИО КАК ФИО,
	|	РезультатВыборки.ФизЛицо.Наименование КАК ФизЛицоНаименование,
	|	РезультатВыборки.Группа КАК Группа,
	|	РезультатВыборки.ВидРасчета,
	|	РезультатВыборки.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме КАК ЯвляетсяДоходомВНатуральнойФорме,
	|	РезультатВыборки.СпособРасчета,
	|	СУММА(ВЫБОР
	|			КОГДА ИСТИНА
	|				ТОГДА РезультатВыборки.Результат
	|			ИНАЧЕ РезультатВыборки.Результат
	|		КОНЕЦ) КАК Результат,
	|	СУММА(РезультатВыборки.ОтработаноДней) КАК ОтработаноДней,
	|	СУММА(РезультатВыборки.ОтработаноЧасов) КАК ОтработаноЧасов,
	|	РезультатВыборки.Должность КАК Должность,
	|	РезультатВыборки.ТабельныйНомер КАК ТабельныйНомер,
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ТребуетВводаТарифногоРазряда
	|			ТОГДА РезультатВыборки.Размер
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|					ТОГДА ВЫБОР
	|							КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель1
	|							КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель2
	|							КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель3
	|							КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель4
	|							КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель5
	|							КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель6
	|							ИНАЧЕ РезультатВыборки.Показатель1
	|						КОНЕЦ
	|				ИНАЧЕ РезультатВыборки.Показатель1
	|			КОНЕЦ
	|	КОНЕЦ КАК ТарифнаяСтавка,
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ТребуетВводаТарифногоРазряда
	|			ТОГДА РезультатВыборки.ВалютаТарифныйРазряд.Наименование
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|					ТОГДА ВЫБОР
	|							КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта1.Наименование
	|							КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта2.Наименование
	|							КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта3.Наименование
	|							КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта4.Наименование
	|							КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта5.Наименование
	|							КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта6.Наименование
	|							ИНАЧЕ РезультатВыборки.Валюта1.Наименование
	|						КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК ВалютаНаименованиеТарифнойСтавки,
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ТребуетВводаТарифногоРазряда
	|			ТОГДА РезультатВыборки.ТарифныйРазряд
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|					ТОГДА ВЫБОР
	|							КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта1
	|							КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта2
	|							КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта3
	|							КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта4
	|							КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта5
	|							КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта6
	|							ИНАЧЕ РезультатВыборки.Валюта1
	|						КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ КАК Валюта,
	|	РезультатВыборки.ТребуетВводаТарифногоРазряда,
	|	РезультатВыборки.ТарифныйРазряд,
	|	РезультатВыборки.ПериодРегистрации КАК ПериодРегистрации,
	|	КурсыВалютДляРасчетовСПерсоналом.Курс КАК Курс,
	|	КурсыВалютДляРасчетовСПерсоналом.Кратность КАК Кратность,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.ИспользуютсяНачисленияВВалюте, ЛОЖЬ) КАК ИспользуютсяНачисленияВВалюте,
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|			ТОГДА ВЫБОР
	|					КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта1
	|					КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта2
	|					КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта3
	|					КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта4
	|					КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта5
	|					КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта6
	|					ИНАЧЕ РезультатВыборки.Валюта1
	|				КОНЕЦ
	|		ИНАЧЕ РезультатВыборки.Валюта1
	|	КОНЕЦ КАК ВалютаОклада
	|ИЗ
	|	РезультатВыборки КАК РезультатВыборки
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА Показатели.НомерСтроки = 1
	|						ТОГДА Показатели.Показатель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК Показатель1,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА Показатели.НомерСтроки = 2
	|						ТОГДА Показатели.Показатель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК Показатель2,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА Показатели.НомерСтроки = 3
	|						ТОГДА Показатели.Показатель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК Показатель3,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА Показатели.НомерСтроки = 4
	|						ТОГДА Показатели.Показатель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК Показатель4,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА Показатели.НомерСтроки = 5
	|						ТОГДА Показатели.Показатель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК Показатель5,
	|			МАКСИМУМ(ВЫБОР
	|					КОГДА Показатели.НомерСтроки = 6
	|						ТОГДА Показатели.Показатель
	|					ИНАЧЕ NULL
	|				КОНЕЦ) КАК Показатель6,
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник КАК Сотрудник,
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация КАК Организация,
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение КАК ВидРасчетаИзмерение,
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ДокументОснование КАК ДокументОснование
	|		ИЗ
	|			РегистрСведений.ПлановыеНачисленияРаботниковОрганизаций.СрезПоследних(&КонецПериода, ВидРасчетаИзмерение = НЕОПРЕДЕЛЕНО) КАК ПлановыеНачисленияРаботниковОрганизацийСрезПоследних
	|				ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовРасчета.ОсновныеНачисленияОрганизаций.Показатели КАК Показатели
	|				ПО (ВЫБОР
	|						КОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <= &КонецПериода
	|								И ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ПериодЗавершения <> ДАТАВРЕМЯ(1, 1, 1)
	|							ТОГДА ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаЗавершения
	|						ИНАЧЕ ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета
	|					КОНЕЦ = Показатели.Ссылка)
	|		ГДЕ
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчета.ЗачетОтработанногоВремени
	|			И (Показатели.Показатель В (&ТарифнаяСтавкаОклад)
	|					ИЛИ Показатели.Показатель.ТарифнаяСтавка)
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ДокументОснование,
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Организация,
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.ВидРасчетаИзмерение,
	|			ПлановыеНачисленияРаботниковОрганизацийСрезПоследних.Сотрудник) КАК Показатели
	|		ПО РезультатВыборки.ВидРасчетаИзмерение = Показатели.ВидРасчетаИзмерение
	|			И РезультатВыборки.Сотрудник = Показатели.Сотрудник
	|			И РезультатВыборки.ДокументОснование = Показатели.ДокументОснование
	|			И РезультатВыборки.ОрганизацияВР = Показатели.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КурсыВалютДляРасчетовСПерсоналом КАК КурсыВалютДляРасчетовСПерсоналом
	|		ПО РезультатВыборки.ПериодРегистрации = КурсыВалютДляРасчетовСПерсоналом.Период
	|			И (ВЫБОР
	|				КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|					ТОГДА ВЫБОР
	|							КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта1
	|							КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта2
	|							КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта3
	|							КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта4
	|							КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта5
	|							КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта6
	|							ИНАЧЕ РезультатВыборки.Валюта1
	|						КОНЕЦ
	|				ИНАЧЕ РезультатВыборки.Валюта1
	|			КОНЕЦ = КурсыВалютДляРасчетовСПерсоналом.Валюта)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций КАК УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций
	|		ПО РезультатВыборки.Организация = УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	РезультатВыборки.Организация,
	|	РезультатВыборки.ФизЛицо,
	|	РезультатВыборки.ФИО,
	|	РезультатВыборки.Группа,
	|	РезультатВыборки.ВидРасчета,
	|	РезультатВыборки.СпособРасчета,
	|	РезультатВыборки.Должность,
	|	РезультатВыборки.ТабельныйНомер,
	|	РезультатВыборки.ТребуетВводаТарифногоРазряда,
	|	РезультатВыборки.ТарифныйРазряд,
	|	РезультатВыборки.ПериодРегистрации,
	|	РезультатВыборки.Организация.КодПоОКПО,
	|	РезультатВыборки.ФизЛицо.Наименование,
	|	РезультатВыборки.ВидРасчета.ЯвляетсяДоходомВНатуральнойФорме,
	|	КурсыВалютДляРасчетовСПерсоналом.Курс,
	|	КурсыВалютДляРасчетовСПерсоналом.Кратность,
	|	ЕСТЬNULL(УчетнаяПолитикаПоРасчетуЗарплатыОрганизаций.ИспользуютсяНачисленияВВалюте, ЛОЖЬ),
	|	ВЫРАЗИТЬ(РезультатВыборки.Организация.НаименованиеПолное КАК СТРОКА(300)),
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ТребуетВводаТарифногоРазряда
	|			ТОГДА РезультатВыборки.Размер
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|					ТОГДА ВЫБОР
	|							КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель1
	|							КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель2
	|							КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель3
	|							КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель4
	|							КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель5
	|							КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Показатель6
	|							ИНАЧЕ РезультатВыборки.Показатель1
	|						КОНЕЦ
	|				ИНАЧЕ РезультатВыборки.Показатель1
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ТребуетВводаТарифногоРазряда
	|			ТОГДА РезультатВыборки.ВалютаТарифныйРазряд.Наименование
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|					ТОГДА ВЫБОР
	|							КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта1.Наименование
	|							КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта2.Наименование
	|							КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта3.Наименование
	|							КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта4.Наименование
	|							КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта5.Наименование
	|							КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта6.Наименование
	|							ИНАЧЕ РезультатВыборки.Валюта1.Наименование
	|						КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ТребуетВводаТарифногоРазряда
	|			ТОГДА РезультатВыборки.ТарифныйРазряд
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|					ТОГДА ВЫБОР
	|							КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта1
	|							КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта2
	|							КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта3
	|							КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта4
	|							КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта5
	|							КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|								ТОГДА РезультатВыборки.Валюта6
	|							ИНАЧЕ РезультатВыборки.Валюта1
	|						КОНЕЦ
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА РезультатВыборки.ВидРасчетаПлановый.ПроизвольнаяФормулаРасчета
	|			ТОГДА ВЫБОР
	|					КОГДА Показатели.Показатель1 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта1
	|					КОГДА Показатели.Показатель2 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта2
	|					КОГДА Показатели.Показатель3 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта3
	|					КОГДА Показатели.Показатель4 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта4
	|					КОГДА Показатели.Показатель5 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта5
	|					КОГДА Показатели.Показатель6 ЕСТЬ НЕ NULL 
	|						ТОГДА РезультатВыборки.Валюта6
	|					ИНАЧЕ РезультатВыборки.Валюта1
	|				КОНЕЦ
	|		ИНАЧЕ РезультатВыборки.Валюта1
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодРегистрации,
	|	Организация,
	|	ФизЛицоНаименование,
	|	Группа
	|ИТОГИ
	|	МАКСИМУМ(ФИО),
	|	МАКСИМУМ(ФизЛицоНаименование),
	|	СУММА(Результат),
	|	СУММА(ОтработаноДней),
	|	СУММА(ОтработаноЧасов),
	|	МАКСИМУМ(ТарифнаяСтавка),
	|	МАКСИМУМ(Курс),
	|	МАКСИМУМ(Кратность),
	|	МАКСИМУМ(ИспользуютсяНачисленияВВалюте)
	|ПО
	|	ПериодРегистрации,
	|	Организация,
	|	ФизЛицо";
	
	ТекстЗапроса = УправлениеОтчетами.СформироватьСписокМесяцев(ТекстЗапроса, НачалоПериода, КонецПериода);
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить();
	
КонецФункции // СформироватьЗапрос()

////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ 
// 

Функция СформироватьОтчет(Результат = Неопределено, ДанныеРасшифровки = Неопределено, ВыводВФормуОтчета = Истина) Экспорт
	
	ЗначениеПанелипользователя = ТиповыеОтчеты.ПолучитьЗначенияНастроекПанелиПользователяОбъекта(ЭтотОбъект);
	НастрокаПоУмолчанию        = КомпоновщикНастроек.ПолучитьНастройки();
	ТиповыеОтчеты.ПолучитьПримененуюНастройку(ЭтотОбъект);
	
	НачалоПериода = НачалоМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	КонецПериода  = КонецМесяца(ОбщегоНазначенияЗК.ПолучитьРабочуюДату());
	
	ПараметрНачалоПериода = ТиповыеОтчеты.ПолучитьПараметр(КомпоновщикНастроек, "НачалоПериода");
	Если ПараметрНачалоПериода <> Неопределено тогда
		НачалоПериода = Дата(ПараметрНачалоПериода.Значение);
	КонецЕсли;
		
	ПараметрКонецПериода = ТиповыеОтчеты.ПолучитьПараметр(КомпоновщикНастроек, "КонецПериода");
	Если ПараметрКонецПериода <> Неопределено тогда
		КонецПериода = Дата(ПараметрКонецПериода.Значение);
	КонецЕсли;
	
	Если НачалоПериода <> Неопределено и КонецПериода <> Неопределено тогда
		УправлениеОтчетами.ЗаменитьВСКДТекстЗапросКалендаря(СхемаКомпоновкиДанных, НачалоПериода, КонецПериода, СоответствиеНаборовДанныхИЗапросов);
	КонецЕсли;

	
	Подразделение = "";
	ЗлементыОтбора = ТиповыеОтчеты.ПолучитьЭлементыОтбора(КомпоновщикНастроек);
	Для каждого ЭлементОтбора из ЗлементыОтбора Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПодразделениеОрганизации") и ЭлементОтбора.Использование тогда
			Подразделение = ЭлементОтбора.ПравоеЗначение;
		КонецЕсли;
	КонецЦикла;
	
	Если ТипЗнч(Подразделение) = Тип("СписокЗначений") И Подразделение.Количество() = 1 И ТипЗнч(Подразделение[0].Значение) = Тип("СправочникСсылка.ПодразделенияОрганизаций") тогда
		Подразделение = Подразделение[0].Значение;
	КонецЕсли;
	
	Если ЭтотОбъект.КомпоновщикНастроек.Настройки.Структура.Количество() > 0 тогда
		Сообщить("Отчет не поддерживает вывод расчетной ведомости в разрезе группировок.");
		КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
		Возврат Результат;
	КонецЕсли;
	Группировка = ТиповыеОтчеты.ДобавитьГруппировку(КомпоновщикНастроек, "");
	Группировка.ПоляГруппировки.Элементы.Очистить();
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ФизЛицо");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "Организация");
	ТиповыеОтчеты.ДобавитьВыбранноеПоле(КомпоновщикНастроек, "ГоловнаяОрганизация");
	
	Результат.АвтоМасштаб = истина;
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	
	Результат.Очистить();
	Результат.НачатьАвтогруппировкуСтрок();
		
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, КомпоновщикНастроек.Настройки, , , Тип("ГенераторМакетаКомпоновкиДанныхДляКоллекцииЗначений"));
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаЗначений =  Новый ТаблицаЗначений;
	
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	УправлениеОтчетами.УстановитьЗапросыСКДПоСоответсвию(СхемаКомпоновкиДанных.НаборыДанных, СоответствиеНаборовДанныхИЗапросов);
	
	ТаблицаЗначений.Свернуть("ФизЛицо, Организация, ГоловнаяОрганизация");
	
	СписокФизЛиц              = Новый СписокЗначений;
	СписокОрганизаций         = Новый СписокЗначений;
	СписокГоловныхОрганизаций = Новый СписокЗначений;
	
	СписокФизЛиц.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("ФизЛицо"));
	СписокОрганизаций.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("Организация"));
	СписокГоловныхОрганизаций.ЗагрузитьЗначения(ТаблицаЗначений.ВыгрузитьКолонку("ГоловнаяОрганизация"));
	
	Результат.Очистить(); 
	Результат.ПолеСлева  = 5;
	Результат.ПолеСправа = 0;
	
	Макет = ПолучитьМакет("Т51");
	
	ОбластьШапкаДокумента = Макет.ПолучитьОбласть("ШапкаДокумента");
	ОбластьШапка		  = Макет.ПолучитьОбласть("Шапка");
	ОбластьПодвал		  = Макет.ПолучитьОбласть("Подвал");
	ОбластьСтрока		  = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвалСтр	  = Макет.ПолучитьОбласть("ИтогоПоСтранице");
	ОбластьПодвалВед	  = Макет.ПолучитьОбласть("ИтогоПоВедомости");
	
	РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	РезультатЗапроса = СформироватьЗапрос(СписокФизЛиц, СписокОрганизаций, СписокГоловныхОрганизаций, НачалоПериода, КонецПериода);
	
	Если РезультатЗапроса.Пустой() Тогда
		
		// массив с двумя строками - для разбиения на страницы
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
		ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
		ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
		
		Результат.Вывести(ОбластьШапкаДокумента);
		Результат.Вывести(ОбластьШапка);
		
		ВыводимыеОбласти.Добавить(ОбластьПодвал);
		ОбластьСтрока.Параметры.ФизЛицо	 = " " + Символы.ПС + " ";
		Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(Результат, ВыводимыеОбласти, Ложь) Цикл
			Результат.Вывести(ОбластьСтрока);
		КонецЦикла;
		
		Результат.Вывести(ОбластьПодвалСтр);
		Результат.Вывести(ОбластьПодвалВед);
		Результат.Вывести(ОбластьПодвал);
		Результат.ПолеСлева  = 5;
		Результат.ПолеСправа = 0;
		
		КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
		Возврат Результат;
		
	КонецЕсли;
	
	НомерОрганизации = 1;
	ВыборкаПоПериодуРегистрации = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	РеглВалюта = Константы.ВалютаРегламентированногоУчета.Получить();
	
	Пока ВыборкаПоПериодуРегистрации.Следующий() Цикл
		
		ВыборкаПоОрганизациям = ВыборкаПоПериодуРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		КоличествоОрганизаций = ВыборкаПоОрганизациям.Количество();
		
		Пока ВыборкаПоОрганизациям.Следующий() Цикл
			
			// массив с двумя строками - для разбиения на страницы
			ВыводимыеОбласти = Новый Массив();
			ВыводимыеОбласти.Добавить(ОбластьСтрока);
			ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
			// Начинаем новый отсчет итогов
			ОбластьПодвалСтр.Параметры.Повременно			  = 0;
			ОбластьПодвалВед.Параметры.Повременно			  = 0;
			ОбластьПодвалСтр.Параметры.Сдельно				  = 0;
			ОбластьПодвалВед.Параметры.Сдельно				  = 0;
			ОбластьПодвалСтр.Параметры.Другое				  = 0;
			ОбластьПодвалВед.Параметры.Другое				  = 0;
			ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = 0;
			ОбластьПодвалВед.Параметры.ВсегоНачислено		  = 0;
			ОбластьПодвалСтр.Параметры.НДФЛ					  = 0;
			ОбластьПодвалВед.Параметры.НДФЛ					  = 0;
			ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = 0;
			ОбластьПодвалВед.Параметры.ДругоеУдержано		  = 0;
			ОбластьПодвалСтр.Параметры.ВсегоУдержано		  = 0;
			ОбластьПодвалВед.Параметры.ВсегоУдержано		  = 0;
			ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = 0;
			ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	  = 0;
			ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = 0;
			ОбластьПодвалВед.Параметры.ДолгЗаРаботником		  = 0;
			ОбластьПодвалСтр.Параметры.КВыплате				  = 0;
			ОбластьПодвалВед.Параметры.КВыплате				  = 0;
			ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = 0;
			ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме = 0;
			
			
			ВыводитьПодразделение = ТипЗнч(Подразделение) = Тип("СправочникСсылка.ПодразделенияОрганизаций");
			
			// Разделитель строки для следующей организации
			Если НомерОрганизации > 1 Тогда
				Результат.ВывестиГоризонтальныйРазделительСтраниц()
			КонецЕсли;
			
			ОбластьШапкаДокумента.Параметры.КодПоОКПО		 = ВыборкаПоОрганизациям.ОрганизацияКодПоОКПО;
			ОбластьШапкаДокумента.Параметры.Организация		 = ВыборкаПоОрганизациям.ОрганизацияПредставление;
			ОбластьШапкаДокумента.Параметры.ОтчетныйПериодС  = НачалоМесяца(ВыборкаПоОрганизациям.ПериодРегистрации);
			ОбластьШапкаДокумента.Параметры.ОтчетныйПериодПо = КонецМесяца(ВыборкаПоОрганизациям.ПериодРегистрации);
			ОбластьШапкаДокумента.Параметры.ДатаД			 = ОбщегоНазначенияЗК.ПолучитьРабочуюДату();
			
			Результат.Вывести(ОбластьШапкаДокумента);
			Результат.ВывестиГоризонтальныйРазделительСтраниц();
			Результат.Вывести(ОбластьШапка);
			
			НомерПП     = 1;
			ВыборкаПоФЛ = ВыборкаПоОрганизациям.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
			ВсегоСтрокДокумента = ВыборкаПоФЛ.Количество(); // всего количество физлиц в данной ведомости
			
			Пока ВыборкаПоФЛ.Следующий() Цикл
				
				ОбластьСтрока.Параметры.Повременно	 	   = 0;
				ОбластьСтрока.Параметры.Сдельно	    	   = 0;
				ОбластьСтрока.Параметры.Другое	     	   = 0;
				ОбластьСтрока.Параметры.НДФЛ		   	   = 0;
				ОбластьСтрока.Параметры.ВсегоНачислено	   = 0;
				ОбластьСтрока.Параметры.ДругоеУдержано	   = 0;
				ОбластьСтрока.Параметры.ВсегоУдержано	   = 0;
				ОбластьСтрока.Параметры.ДолгЗаОрганизацией = 0;
				ОбластьСтрока.Параметры.ДолгЗаРаботником   = 0;
				ОбластьСтрока.Параметры.КВыплате		   = 0;
				ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные = 0;
				ОбластьСтрока.Параметры.ОтработаноДнейЧасов            = 0;
				ОбластьСтрока.Параметры.ДоходВНатуральнойФорме         = 0;
				ОтработаноДней  = 0;
				ОтработаноЧасов = 0;
				
				Выборка = ВыборкаПоФЛ.Выбрать();
				
				Пока Выборка.Следующий() Цикл
					
					Если ВыводитьПодразделение Тогда
						ВыводитьПодразделение = Не ВыводитьПодразделение;
						Результат.Область(Результат.ВысотаТаблицы - 11,1).Текст = Подразделение;
					КонецЕсли;
					
					// тарифная ставка
					Если Выборка.ИспользуютсяНачисленияВВалюте тогда
						Если (Выборка.Курс = NULL или Выборка.Кратность = NULL) 
						   и РеглВалюта <> Выборка.ВалютаОклада 
						   и Выборка.ВалютаОклада <> Справочники.Валюты.ПустаяСсылка() тогда
							ОписаниеТарифнаяСтавка = "Не задан курс валюты.";
						ИначеЕсли (Выборка.Курс = NULL или Выборка.Кратность = NULL) и (РеглВалюта = Выборка.ВалютаОклада или Выборка.ВалютаОклада = Справочники.Валюты.ПустаяСсылка()) тогда
							ОписаниеТарифнаяСтавка = Формат(Выборка.ТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '; ЧГ=0");
						ИначеЕсли ТипЗнч(Выборка.ТарифнаяСтавка) = Тип("Строка") тогда
							ОписаниеТарифнаяСтавка  = Выборка.ТарифнаяСтавка;
						Иначе
							ТарифнаяСтавка  = Выборка.ТарифнаяСтавка * Выборка.Курс / Выборка.Кратность;
							ОписаниеТарифнаяСтавка = Формат(ТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '; ЧГ=0");
						КонецЕсли;
					Иначе 
						ОписаниеТарифнаяСтавка = Формат(Выборка.ТарифнаяСтавка,"ЧЦ=15; ЧДЦ=2; ЧН=' '; ЧГ=0");
					КонецЕсли; 
					
					
					//Если Выборка.Валюта = РеглВалюта Или Не ЗначениеЗаполнено(Выборка.Валюта) Тогда
					//	Если Выборка.ТребуетВводаТарифногоРазряда Тогда
					//		Если ЗначениеЗаполнено(Выборка.ТарифнаяСтавка) Тогда
					//			ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка	+ " (" + Выборка.ТарифныйРазряд + ")"
					//		Иначе
					//			ОписаниеТарифнаяСтавка = Выборка.ТарифныйРазряд 
					//		КонецЕсли;
					//	КонецЕсли;
					//Иначе
					//	
					//	Если НЕ ЗначениеЗаполнено(Выборка.ТарифнаяСтавка) И Выборка.ТребуетВводаТарифногоРазряда Тогда
					//		ОписаниеТарифнаяСтавка = Выборка.ТарифныйРазряд
					//	Иначе
					//		ОписаниеТарифнаяСтавка = ОписаниеТарифнаяСтавка 
					//		+ " (" + Выборка.ВалютаНаименованиеТарифнойСтавки + ?(Выборка.ТребуетВводаТарифногоРазряда,", " + Выборка.ТарифныйРазряд,"") + ")"
					//	КонецЕсли;
					//КонецЕсли;
					ОбластьСтрока.Параметры.ТарифнаяСтавка = ОписаниеТарифнаяСтавка;
					ОбластьСтрока.Параметры.ТабельныйНомер = Выборка.ТабельныйНомер;
					ОбластьСтрока.Параметры.Должность = Выборка.Должность;
					
					Если Выборка.Группа = "Всего начислено" Тогда
						
						Если Выборка.ВидРасчета = ПланыВидовРасчета.ОсновныеНачисленияОрганизаций.ОплатаПраздничныхИВыходных Тогда
							
							Если НЕ ЗначениеЗаполнено(ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные) Тогда
								
								ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные = Выборка.ОтработаноДней;
								
								Если ЗначениеЗаполнено(Выборка.ОтработаноЧасов) Тогда
									ОбластьСтрока.Параметры.ОтработаноДнейЧасовПраздничные = "" + Выборка.ОтработаноДней + " (" + Выборка.ОтработаноЧасов + ")"
								КонецЕсли;
								
							КонецЕсли; 
							
						Иначе
							
							ОтработаноДней  = ОтработаноДней + ?(Выборка.ОтработаноДней = NULL, 0, Выборка.ОтработаноДней);
							ОбластьСтрока.Параметры.ОтработаноДнейЧасов = ОтработаноДней;
							
							Если ЗначениеЗаполнено(Выборка.ОтработаноЧасов) Тогда
								ОтработаноЧасов = ОтработаноЧасов + Выборка.ОтработаноЧасов;
							КонецЕсли; 
							
							Если ЗначениеЗаполнено(ОтработаноЧасов) Тогда
								ОбластьСтрока.Параметры.ОтработаноДнейЧасов = "" + ОтработаноДней + " (" + ОтработаноЧасов + ")"
							КонецЕсли; 
							
						КонецЕсли; 
						
						Если Выборка.ЯвляетсяДоходомВНатуральнойФорме Тогда
							ОбластьСтрока.Параметры.ДоходВНатуральнойФорме	  = ОбластьСтрока.Параметры.ДоходВНатуральнойФорме	  + Выборка.Результат;
							ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме + Выборка.Результат;
							ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме = ОбластьПодвалВед.Параметры.ДоходВНатуральнойФорме + Выборка.Результат;
						ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоДням ИЛИ
							Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоМесячнойТарифнойСтавкеПоЧасам ИЛИ 
							Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоЧасовойТарифнойСтавке ИЛИ 
							Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.ПоДневнойТарифнойСтавке Тогда
							
							ОбластьСтрока.Параметры.Повременно = ОбластьСтрока.Параметры.Повременно + Выборка.Результат;
							
							// подсчет итогов по странице и ведомости
							ОбластьПодвалСтр.Параметры.Повременно	= ОбластьПодвалСтр.Параметры.Повременно + Выборка.Результат;
							ОбластьПодвалВед.Параметры.Повременно	= ОбластьПодвалВед.Параметры.Повременно + Выборка.Результат;
							
						ИначеЕсли Выборка.СпособРасчета = Перечисления.СпособыРасчетаОплатыТруда.СдельныйЗаработок Тогда
							ОбластьСтрока.Параметры.Сдельно		= ОбластьСтрока.Параметры.Сдельно		+ Выборка.Результат;
							ОбластьПодвалСтр.Параметры.Сдельно	= ОбластьПодвалСтр.Параметры.Сдельно	+ Выборка.Результат;
							ОбластьПодвалВед.Параметры.Сдельно	= ОбластьПодвалВед.Параметры.Сдельно	+ Выборка.Результат;
						Иначе						
							ОбластьСтрока.Параметры.Другое		= ОбластьСтрока.Параметры.Другое	+ Выборка.Результат;
							ОбластьПодвалСтр.Параметры.Другое	= ОбластьПодвалСтр.Параметры.Другое	+ Выборка.Результат;
							ОбластьПодвалВед.Параметры.Другое	= ОбластьПодвалВед.Параметры.Другое	+ Выборка.Результат;
						КонецЕсли; 
						
						Если Не Выборка.ЯвляетсяДоходомВНатуральнойФорме тогда
							ОбластьСтрока.Параметры.ВсегоНачислено		= ОбластьСтрока.Параметры.ВсегоНачислено	+ Выборка.Результат;
							ОбластьПодвалСтр.Параметры.ВсегоНачислено	= ОбластьПодвалСтр.Параметры.ВсегоНачислено	+ Выборка.Результат;
							ОбластьПодвалВед.Параметры.ВсегоНачислено	= ОбластьПодвалВед.Параметры.ВсегоНачислено	+ Выборка.Результат;
						КонецЕсли;
						
					ИначеЕсли Выборка.Группа = "Всего удержано" Тогда
						
						Если Выборка.ВидРасчета = "НДФЛ" Тогда
							ОбластьСтрока.Параметры.НДФЛ	= ОбластьСтрока.Параметры.НДФЛ		+ Выборка.Результат;
							ОбластьПодвалСтр.Параметры.НДФЛ	= ОбластьПодвалСтр.Параметры.НДФЛ	+ Выборка.Результат;
							ОбластьПодвалВед.Параметры.НДФЛ	= ОбластьПодвалВед.Параметры.НДФЛ	+ Выборка.Результат;
						Иначе
							ОбластьСтрока.Параметры.ДругоеУдержано		= ОбластьСтрока.Параметры.ДругоеУдержано	+ Выборка.Результат;
							ОбластьПодвалСтр.Параметры.ДругоеУдержано	= ОбластьПодвалСтр.Параметры.ДругоеУдержано	+ Выборка.Результат;
							ОбластьПодвалВед.Параметры.ДругоеУдержано	= ОбластьПодвалВед.Параметры.ДругоеУдержано	+ Выборка.Результат;
						КонецЕсли;
						
						ОбластьПодвалСтр.Параметры.ВсегоУдержано = ОбластьПодвалСтр.Параметры.ВсегоУдержано	+ Выборка.Результат;
						ОбластьПодвалВед.Параметры.ВсегоУдержано = ОбластьПодвалВед.Параметры.ВсегоУдержано	+ Выборка.Результат;
						ОбластьСтрока.Параметры.ВсегоУдержано    = ОбластьСтрока.Параметры.ВсегоУдержано    + Выборка.Результат;
						
					ИначеЕсли Выборка.Группа = "Я" Тогда // Конечное сальдо
						
						Если Выборка.Результат - (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано) > 0 Тогда
							ОбластьСтрока.Параметры.ДолгЗаОрганизацией		= ОбластьСтрока.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат - (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано);
							ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	= ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат - (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано);
							ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	= ОбластьПодвалВед.Параметры.ДолгЗаОрганизацией	+ Выборка.Результат - (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано);
						Иначе
							ОбластьСтрока.Параметры.ДолгЗаРаботником	= ОбластьСтрока.Параметры.ДолгЗаРаботником		- (Выборка.Результат - (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано));
							ОбластьПодвалСтр.Параметры.ДолгЗаРаботником	= ОбластьПодвалСтр.Параметры.ДолгЗаРаботником	- (Выборка.Результат - (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано));
							ОбластьПодвалВед.Параметры.ДолгЗаРаботником	= ОбластьПодвалВед.Параметры.ДолгЗаРаботником	- - (Выборка.Результат - (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано));
						КонецЕсли; 
					КонецЕсли; 
				КонецЦикла;
				
				ОбластьСтрока.Параметры.НомерПП  = НомерПП;
				Если ВыборкаПоФЛ.ФИО = NULL Тогда
					ОбластьСтрока.Параметры.ФизЛицо = ОбщегоНазначения.ФамилияИнициалыФизЛица(ВыборкаПоФЛ.ФизЛицоНаименование);
				Иначе
					ОбластьСтрока.Параметры.ФизЛицо = ВыборкаПоФЛ.ФИО;
				КонецЕсли;
	
				ОбластьСтрока.Параметры.КВыплате	= ОбластьСтрока.Параметры.КВыплате		+ (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано);
				ОбластьПодвалСтр.Параметры.КВыплате	= ОбластьПодвалСтр.Параметры.КВыплате	+ (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано);
				ОбластьПодвалВед.Параметры.КВыплате	= ОбластьПодвалВед.Параметры.КВыплате	+ (ОбластьСтрока.Параметры.ВсегоНачислено - ОбластьСтрока.Параметры.ВсегоУдержано);
				
				
				// Проверим, уместится ли строка на странице или надо открывать новую страницу
				ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(Результат, ВыводимыеОбласти);
				Если Не ВывестиПодвалЛиста и НомерПП = ВсегоСтрокДокумента Тогда
					//все строки отчета перебрали, они все еще умещаются на странице
					ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
					ВыводимыеОбласти.Добавить(ОбластьПодвал);
					// умещаются ли теперь, вместе подвалом:
					ВывестиПодвалЛиста = Не ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(Результат, ВыводимыеОбласти);
				КонецЕсли;
				Если ВывестиПодвалЛиста Тогда
					
					ОбластьПодвалСтр.Параметры.Повременно			  = ОбластьПодвалСтр.Параметры.Повременно			- ОбластьСтрока.Параметры.Повременно;
					ОбластьПодвалСтр.Параметры.Сдельно				  = ОбластьПодвалСтр.Параметры.Сдельно 				- ОбластьСтрока.Параметры.Сдельно;
					ОбластьПодвалСтр.Параметры.Другое				  = ОбластьПодвалСтр.Параметры.Другое 				- ОбластьСтрока.Параметры.Другое;
					ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = ОбластьПодвалСтр.Параметры.ВсегоНачислено 		- ОбластьСтрока.Параметры.ВсегоНачислено;
					ОбластьПодвалСтр.Параметры.НДФЛ					  = ОбластьПодвалСтр.Параметры.НДФЛ 				- ОбластьСтрока.Параметры.НДФЛ;
					ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = ОбластьПодвалСтр.Параметры.ДругоеУдержано 		- ОбластьСтрока.Параметры.ДругоеУдержано;
					ОбластьПодвалСтр.Параметры.ВсегоУдержано		  = ОбластьПодвалСтр.Параметры.ВсегоУдержано 		- ОбластьСтрока.Параметры.ВсегоУдержано;
					ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией 	- ОбластьСтрока.Параметры.ДолгЗаОрганизацией;
					ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = ОбластьПодвалСтр.Параметры.ДолгЗаРаботником 	- ОбластьСтрока.Параметры.ДолгЗаРаботником;
					ОбластьПодвалСтр.Параметры.КВыплате				  = ОбластьПодвалСтр.Параметры.КВыплате 			- ОбластьСтрока.Параметры.КВыплате;
					ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме - ОбластьСтрока.Параметры.ДоходВНатуральнойФорме;
					
					Результат.Вывести(ОбластьПодвалСтр);
					
					// обнулим итоги по странице
					ОбластьПодвалСтр.Параметры.Повременно			  = ОбластьСтрока.Параметры.Повременно;
					ОбластьПодвалСтр.Параметры.Сдельно				  = ОбластьСтрока.Параметры.Сдельно;
					ОбластьПодвалСтр.Параметры.Другое				  = ОбластьСтрока.Параметры.Другое;
					ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = ОбластьСтрока.Параметры.ВсегоНачислено;
					ОбластьПодвалСтр.Параметры.НДФЛ					  = ОбластьСтрока.Параметры.НДФЛ;
					ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = ОбластьСтрока.Параметры.ДругоеУдержано;
					ОбластьПодвалСтр.Параметры.ВсегоУдержано		  = ОбластьСтрока.Параметры.ВсегоУдержано;
					ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = ОбластьСтрока.Параметры.ДолгЗаОрганизацией;
					ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = ОбластьСтрока.Параметры.ДолгЗаРаботником;
					ОбластьПодвалСтр.Параметры.КВыплате				  = ОбластьСтрока.Параметры.КВыплате;
					ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = ОбластьСтрока.Параметры.ДоходВНатуральнойФорме;
					
					Результат.ВывестиГоризонтальныйРазделительСтраниц();
					Результат.Вывести(ОбластьШапка);
				КонецЕсли;
	
 				Результат.Вывести(ОбластьСтрока);
				НомерПП = НомерПП + 1;
				
			КонецЦикла;	
			
			// Если выводим несколько организаций, то нужно вывести подвал для не последних организаций.
			Если КоличествоОрганизаций > 1 И НомерОрганизации < КоличествоОрганизаций Тогда
				ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
				ВыводимыеОбласти.Добавить(ОбластьПодвал);
				Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
					ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
				КонецЦикла;
				ОбластьСтрока.Параметры.ФизЛицо = " " + Символы.ПС + " ";
				Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(Результат, ВыводимыеОбласти, Ложь) Цикл
					Результат.Вывести(ОбластьСтрока);
				КонецЦикла;
				Результат.Вывести(ОбластьПодвалСтр);
				// обнулим итоги по странице
				ОбластьПодвалСтр.Параметры.Повременно			  = 0;
				ОбластьПодвалСтр.Параметры.Сдельно				  = 0;
				ОбластьПодвалСтр.Параметры.Другое			      = 0;
				ОбластьПодвалСтр.Параметры.ВсегоНачислено		  = 0;
				ОбластьПодвалСтр.Параметры.НДФЛ					  = 0;
				ОбластьПодвалСтр.Параметры.ДругоеУдержано		  = 0;
				ОбластьПодвалСтр.Параметры.ВсегоУдержано		  = 0;
				ОбластьПодвалСтр.Параметры.ДолгЗаОрганизацией	  = 0;
				ОбластьПодвалСтр.Параметры.ДолгЗаРаботником		  = 0;
				ОбластьПодвалСтр.Параметры.КВыплате				  = 0;
				ОбластьПодвалСтр.Параметры.ДоходВНатуральнойФорме = 0;
				
				Результат.Вывести(ОбластьПодвалВед);
				Результат.Вывести(ОбластьПодвал);
			КонецЕсли; 
			
			НомерОрганизации = НомерОрганизации + 1;
			
		КонецЦикла;
		
		ВыводимыеОбласти = Новый Массив();
		ВыводимыеОбласти.Добавить(ОбластьСтрока);
		ВыводимыеОбласти.Добавить(ОбластьПодвалСтр);
		ВыводимыеОбласти.Добавить(ОбластьПодвалВед);
		ВыводимыеОбласти.Добавить(ОбластьПодвал);
		Для Сч = 1 По ОбластьСтрока.Параметры.Количество() Цикл
			ОбластьСтрока.Параметры.Установить(Сч - 1,""); 
		КонецЦикла;
		ОбластьСтрока.Параметры.ФизЛицо = " " + Символы.ПС + " ";
		Пока ФормированиеПечатныхФорм.ПроверитьВыводТабличногоДокумента(Результат, ВыводимыеОбласти, Ложь) Цикл
			Результат.Вывести(ОбластьСтрока);
		КонецЦикла;
		Результат.Вывести(ОбластьПодвалСтр);
		Результат.Вывести(ОбластьПодвалВед);
		Результат.Вывести(ОбластьПодвал);
		
	КонецЦикла;
		
	КомпоновщикНастроек.ЗагрузитьНастройки(НастрокаПоУмолчанию);
	
	Возврат Результат;
КонецФункции

Процедура СохранитьНастройку() Экспорт

	СтруктураНастроек = ТиповыеОтчеты.ПолучитьСтруктуруПараметровТиповогоОтчета(ЭтотОбъект);
	СохранениеНастроек.СохранитьНастройкуОбъекта(СохраненнаяНастройка, СтруктураНастроек);
	
КонецПроцедуры

Процедура ПрименитьНастройку() Экспорт
	
	Схема = ТиповыеОтчеты.ПолучитьСхемуКомпоновкиОбъекта(ЭтотОбъект);

	// Считываение структуры настроек отчета
 	Если Не СохраненнаяНастройка.Пустая() Тогда
		
		СтруктураНастроек = СохраненнаяНастройка.ХранилищеНастроек.Получить();
		Если Не СтруктураНастроек = Неопределено Тогда
			КомпоновщикНастроек.ЗагрузитьНастройки(СтруктураНастроек.НастройкиКомпоновщика);
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, СтруктураНастроек);
		Иначе
			КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
		КонецЕсли;
		
	Иначе
		КомпоновщикНастроек.ЗагрузитьНастройки(Схема.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	СтруктураНатроек = Новый Структура("МинимальныйПериодОтчета", "Месяц");
	Возврат СтруктураНатроек;
КонецФункции
	
// Настройка отчета при отработки расшифровки
Процедура Настроить(Отбор) Экспорт
	
	// Настройка отбора
	Для каждого ЭлементОтбора Из Отбор Цикл
		
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ПолеОтбора = ЭлементОтбора.ЛевоеЗначение;
		Иначе
			ПолеОтбора = Новый ПолеКомпоновкиДанных(ЭлементОтбора.Поле);
		КонецЕсли;
		
		Если КомпоновщикНастроек.Настройки.ДоступныеПоляОтбора.НайтиПоле(ПолеОтбора) = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НовыйЭлементОтбора = КомпоновщикНастроек.Настройки.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		Если ТипЗнч(ЭлементОтбора) = Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			ЗаполнитьЗначенияСвойств(НовыйЭлементОтбора, ЭлементОтбора);
		Иначе
			НовыйЭлементОтбора.Использование  = Истина;
			НовыйЭлементОтбора.ЛевоеЗначение  = ПолеОтбора;
			Если ЭлементОтбора.Иерархия Тогда
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСпискеПоИерархии;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВИерархии;
				КонецЕсли;
			Иначе
				Если ТипЗнч(ЭлементОтбора.Значение) = Тип("СписокЗначений") Тогда
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.ВСписке;
				Иначе
					НовыйЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
				КонецЕсли;
			КонецЕсли;
			
			НовыйЭлементОтбора.ПравоеЗначение = ЭлементОтбора.Значение;
			
		КонецЕсли;
				
	КонецЦикла;
	
	ТиповыеОтчеты.УдалитьДублиОтбора(КомпоновщикНастроек);
	
КонецПроцедуры


Процедура ДоработатьКомпоновщикПередВыводом() Экспорт
	
КонецПроцедуры

Если СохраненнаяНастройка = Неопределено Тогда
	СохраненнаяНастройка =  Справочники.СохраненныеНастройки.ПустаяСсылка();
КонецЕсли;



#КонецЕсли


