#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура СформироватьОтчет(Знач СтруктураПараметров, АдресХранилища) Экспорт
	
	Если ЗначениеЗаполнено(СтруктураПараметров.КонтрагентДляОтбора)
		ИЛИ СтруктураПараметров.ВыводитьПродавцовПоАвансам
		ИЛИ СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтандартнаяФорма = Ложь;
	Иначе
		СтандартнаяФорма = Истина;
	КонецЕсли;

	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме", СтандартнаяФорма);
	
	СписокОрганизаций = Новый СписокЗначений;
	
	Если СтруктураПараметров.ВключатьОбособленныеПодразделения Тогда
		СписокОрганизаций = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(
			СтруктураПараметров.Организация);
	//АБС ИЗМЕНЕНИЕ Навценя 28.04.2015
	ИначеЕсли СтруктураПараметров.Свойство("СписокОрганизаций") Тогда 
		Если ТипЗнч(СтруктураПараметров.СписокОрганизаций) = Тип("СписокЗначений") Тогда 
			СписокОрганизаций.ЗагрузитьЗначения(СтруктураПараметров.СписокОрганизаций.ВыгрузитьЗначения());	
		КонецЕсли;
	КонецЕсли;
	//АБС ИЗМЕНЕНИЕ КОНЕЦ
	
	СписокОрганизаций.Добавить(СтруктураПараметров.Организация);
	
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	СтруктураПараметров.Вставить("ЗаписьДополнительногоЛиста", Ложь);
	СтруктураПараметров.Вставить("СоответствиеСтрокиДопИнформацииПоСчетуФактуре");
// +++ввв 27.07.2016 г.
	СтруктураПараметров.Вставить("СоответствиеДатОплатыСчетуФактуре");     
// ---ввв 27.07.2016 г.
	// {{ТТК Сладков А. Заявка № 24.05.2016 начало
	СтруктураПараметров.Вставить("ЗаполнятьРаздел9ПоДаннымРегистраСведений",ЛОЖЬ);
	// }}ТТК Сладков А. Заявка № 24.05.2016 окончание
// +++ввв 01.06.2016 г.
	Если НЕ СтруктураПараметров.Свойство("ЗаполнятьРаздел89СУровнемПроверки") Тогда 
		СтруктураПараметров.Вставить("ЗаполнятьРаздел89СУровнемПроверки",3); // Без проверки ошибок
	КонецЕсли;
// ---ввв 01.06.2016 г.	
	
	ИнициализироватьТаблицыДляДекларацииПоНДС(СтруктураПараметров);
	
	СтруктураПараметров.СписокСформированныхЛистов.Очистить();
	СписокСообщений = Новый СписокЗначений();
		
	Если НЕ (СтруктураПараметров.ВыводитьТолькоДопЛисты И СтруктураПараметров.ФормироватьДополнительныеЛисты) Тогда
		
		СписокСчетовФактур = Неопределено;
		
// {{KM WARE Семенов И.С. Заявка №33854 27.07.2015 начало    
// теперь данные в книге покупок и декларации совпадать должны.

		Результат = абс_УчетНДС.ПолучитьЗаписиКнигиПродаж(СписокСчетовФактур, СтруктураПараметров);
//		Результат = УчетНДС.ПолучитьЗаписиКнигиПродаж(СписокСчетовФактур, СтруктураПараметров);
// }}KM WARE Семенов И.С. Заявка №33854 27.07.2015 окончание
		СформироватьОсновнойРаздел(СтруктураПараметров, Результат, СписокСчетовФактур);
		
	КонецЕсли;
		
	// Проверка наличия дополнительных листов за текущий период
	СтруктураПараметров = УчетНДС.ПроверитьНаличиеДопЛистовКнигиПродаж(СтруктураПараметров);
	
	Если СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод Или Не СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
				|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И Не СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
				|Построение дополнительных листов за текущий налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод Или Не СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
				|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И Не СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
				|Построение дополнительных листов за корректируемый налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		
		СписокСчетовФактур = Неопределено;
		СтруктураПараметров.ЗаписьДополнительногоЛиста = Истина;
		
		// Получение записей дополнительных листов
		Результат = УчетНДС.ПолучитьЗаписиДополнительныхЛистовКнигиПродаж(СписокСчетовФактур, СтруктураПараметров);
		
		СформироватьДополнительныеЛисты(СтруктураПараметров, Результат, СписокСчетовФактур);
		
	КонецЕсли;
	
	Результат = Новый Структура(
		"СписокСформированныхЛистов, СписокСообщений,
		|ТаблицаРаздел9,ТаблицаРаздел91,ТабличныйДокументРаздел91,
		|ИтогиРаздел9,ИтогиРаздел91", 
			СтруктураПараметров.СписокСформированныхЛистов,
			СписокСообщений,
			СтруктураПараметров.ТаблицаРаздел9,
			СтруктураПараметров.ТаблицаРаздел91,
			СтруктураПараметров.ТабличныйДокументРаздел91,
			СтруктураПараметров.ИтогиРаздел9,
			СтруктураПараметров.ИтогиРаздел91);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

Процедура СформироватьОсновнойРаздел(СтруктураПараметров, Результат, СписокСчетовФактур);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПродаж";
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;
	
	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериода);
// +++ввв 28.03.2017 г.
	//Если ВерсияПостановленияНДС1137 = 3 Тогда
	//	// {{KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 начало
	//	// Если не формируем декларацию, то используем макет для выгрузки в Excel
	//	// {{Старый код:
	//	//Макет = ПолучитьОбщийМакет("КнигаПродаж735");
	//	// }}Новый код:
	//	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
	//		Макет = ПолучитьОбщийМакет("КнигаПродаж735");	
	//	Иначе
	//		Макет = ПолучитьОбщийМакет("kmwr_КнигаПродаж735_Excel");	
	//	КонецЕсли;	
	//	// }}KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 окончание 
	//Иначе
	//	Макет = ПолучитьОбщийМакет("КнигаПродаж1137");
	//КонецЕсли; 
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		Если СтруктураПараметров.ЗаполнениеДекларации
		   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
			Макет = ПолучитьОбщийМакет("КнигаПродаж1137_2017");
		ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации Тогда
			Макет = ПолучитьОбщийМакет("КнигаПродаж735");	
		Иначе
			Макет = ПолучитьОбщийМакет("kmwr_КнигаПродаж735_Excel");	
		КонецЕсли;	
	Иначе
		Макет = ПолучитьОбщийМакет("КнигаПродаж1137");
	КонецЕсли; 
// ---ввв 28.03.2017 г.

	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел9");
		ТабличныйДокумент.Вывести(Секция);
		Секция = Макет.ПолучитьОбласть("СтрокиДляПовтора");
		ТабличныйДокумент.Вывести(Секция);
		
	Иначе
	
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
			Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
			СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
		НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, "ПолноеНаименование");;
		
		Секция = Макет.ПолучитьОбласть("Шапка");
		Секция.Параметры.УстановленныйОтбор = "";
		Секция.Параметры.НачалоПериода = Формат(СтруктураПараметров.НачалоПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.КонецПериода = Формат(СтруктураПараметров.КонецПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		Секция.Параметры.ИННКППОрганизации = "" + СтруктураПараметров.Организация.ИНН 
			+ ?(НЕ ЗначениеЗаполнено(СтруктураПараметров.Организация.КПП), "", ("/" + СтруктураПараметров.Организация.КПП));
		
		Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
			
			Если ОбщегоНазначения.ОбъектЯвляетсяГруппой(СтруктураПараметров.КонтрагентДляОтбора) Тогда
				НадписьОтбор = НСтр("ru='Отбор: Контрагент в группе %1'");
			Иначе
				НадписьОтбор = НСтр("ru='Отбор: Контрагент = %1'");
			КонецЕсли;
			Секция.Параметры.УстановленныйОтбор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НадписьОтбор, СтруктураПараметров.КонтрагентДляОтбора);
			
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЕсли;
	
	Если Результат.Пустой() Тогда
		
		Секция = Макет.ПолучитьОбласть("Всего");
		ТабличныйДокумент.Вывести(Секция);
		
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
			И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
			ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
		КонецЕсли;
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
		
		СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураСекций = Новый Структура("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
	ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
	
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
		СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
	КонецЕсли;
	
	ИтогПоОрганизации = 0;
	
	УчетНДС.ПреобразоватьЗаписиКнигиПродаж(
		СтруктураПараметров, Результат, ТабличныйДокумент, 
		СписокСчетовФактур, ИтогПоОрганизации, ПараметрыСтроки,
		СтруктураПараметров.ТаблицаРаздел9, СтруктураСекций);
	
	// Вывод всего
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(ИтогПоОрганизации);
	
	ТабличныйДокумент.Вывести(Секция);
	
	Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
		И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
		ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
	КонецЕсли;
	
	ИтогиРаздел9 = Новый Структура("СтПродБезНДС18,СтПродБезНДС10,СтПродБезНДС0,СумНДСВсКПр18,СумНДСВсКПр10,СтПродОсвВсКПр");
	ИтогиРаздел9.СтПродБезНДС18 = ИтогПоОрганизации.СуммаБезНДС18;
	ИтогиРаздел9.СтПродБезНДС10 = ИтогПоОрганизации.СуммаБезНДС10;
	ИтогиРаздел9.СтПродБезНДС0 = ИтогПоОрганизации.НДС0;
	ИтогиРаздел9.СумНДСВсКПр18 = ИтогПоОрганизации.НДС18;
	ИтогиРаздел9.СумНДСВсКПр10 = ИтогПоОрганизации.НДС10;
	ИтогиРаздел9.СтПродОсвВсКПр = ИтогПоОрганизации.СуммаСовсемБезНДС;
	
	СтруктураПараметров.ИтогиРаздел9 = ИтогиРаздел9;
	
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));
	
	СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
	
КонецПроцедуры

Процедура СформироватьДополнительныеЛисты(СтруктураПараметров, Результат, СписокСчетовФактур)
	
	Перем ТабличныйДокумент;
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НомерОтображаемогоПериода = 0;
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураПараметров.Вставить("СчетчикСтрокДопЛиста", 0);
	
	ИтогиРаздел91 = Новый Структура(
		"ИтСтПродКПр18,ИтСтПродКПр10,ИтСтПродКПр0,СумНДСИтКПр18,СумНДСИтКПр10,ИтСтПродОсвКПр,
		|СтПродВсП1Р9_18,СтПродВсП1Р9_10,СтПродВсП1Р9_0,СумНДСВсП1Р9_18,СумНДСВсП1Р9_10,СтПродОсвП1Р9Вс");
		
	ПараметрыПолученияИтогов = Новый Структура;
	ПараметрыПолученияИтогов.Вставить("НалоговыйПериод", НачалоКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("КонецНалоговогоПериода", КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("ДатаФормированияДопЛиста", КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("СписокОрганизаций", СтруктураПараметров.СписокОрганизаций);
	ПараметрыПолученияИтогов.Вставить("Организация", СтруктураПараметров.Организация);
	
	ИтогПоКнигеПродаж = УчетНДС.ПолучитьИтогиЗаПериодКнигаПродаж(ПараметрыПолученияИтогов);
	
	ИтогиРаздел91.ИтСтПродКПр18  = ИтогПоКнигеПродаж.СуммаБезНДС18;
	ИтогиРаздел91.ИтСтПродКПр10  = ИтогПоКнигеПродаж.СуммаБезНДС10;
	ИтогиРаздел91.ИтСтПродКПр0   = ИтогПоКнигеПродаж.НДС0;
	ИтогиРаздел91.СумНДСИтКПр18  = ИтогПоКнигеПродаж.НДС18;
	ИтогиРаздел91.СумНДСИтКПр10  = ИтогПоКнигеПродаж.НДС10;
	ИтогиРаздел91.ИтСтПродОсвКПр = ИтогПоКнигеПродаж.СуммаСовсемБезНДС;
	
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл
		
		НомерЛиста = 0;
		
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(
			ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		
		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл;
			
			ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(
				ИтогПоПериодамКорректировки.КонецНалоговогоПериода);
			Если ВерсияПостановленияНДС1137 = 1 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж1137");
			ИначеЕсли ВерсияПостановленияНДС1137 = 2 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж952");
			Иначе
				// {{KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 начало
				// Если не формируем декларацию, то используем макет для выгрузки в Excel
				// {{Старый код:
				//Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж735");
				// }}Новый код:
// +++ввв 01.06.2017 г.
				Если СтруктураПараметров.ЗаполнениеДекларации
				   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж1137_2017");
				ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации Тогда
				//Если СтруктураПараметров.ЗаполнениеДекларации Тогда
// ---ввв 01.06.2017 г.
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПродаж735");	
				Иначе
					Макет = ПолучитьОбщийМакет("kmwr_ДополнительныйЛистКнигиПродаж735_Excel");	
				КонецЕсли;	
				// }}KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 окончание 
			КонецЕсли; 
			
			Секция = Макет.ПолучитьОбласть("Строка");
			СтрокаИтого = Макет.ПолучитьОбласть("Итого");
			СтрокаВсего = Макет.ПолучитьОбласть("Всего");
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
				СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
			КонецЕсли;
			
			// Формирование шапки доп. листа
			ОкончаниеПредыдущегоРаздела = ТабличныйДокумент.ВысотаТаблицы;
			НомерЛиста = НомерЛиста + 1;
			
			СтруктураПараметров.Вставить("НалоговыйПериод", ИтогПоПериодамКорректировки.НалоговыйПериод);
			СтруктураПараметров.Вставить("КонецНалоговогоПериода", КонецКвартала(ИтогПоПериодамКорректировки.КонецНалоговогоПериода));
			СтруктураПараметров.Вставить("ДатаОформления", ИтогПоПериодамКорректировки.ДатаОформления);
			
			Если СтруктураПараметров.ЗаполнениеДекларации Тогда
				ВывестиШапкуРаздела91Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			Иначе
				УчетНДС.ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			КонецЕсли;

			СтруктураПараметров.ДатаФормированияДопЛиста = ИтогПоПериодамКорректировки.ДатаОформления;
			
			ИтогЗаПериод = УчетНДС.ПолучитьИтогиЗаПериодКнигаПродаж(СтруктураПараметров);
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
		
			ТабличныйДокумент.Вывести(СтрокаИтого);
			
			СтруктураСекций = Новый Структура("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
			ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
				СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
			КонецЕсли;
			
			УчетНДС.ПреобразоватьЗаписиДополнительногоЛистаКнигиПродаж(
				СтруктураПараметров, ИтогПоПериодамКорректировки, ИтогЗаПериод, 
				ТабличныйДокумент, СписокСчетовФактур, ПараметрыСтроки,
				СтруктураПараметров.ТаблицаРаздел91, СтруктураСекций);
			
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
			
			Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
				И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
				ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
			КонецЕсли;
			
		КонецЦикла;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Доп.листы за'") + " " + НалоговыйПериод);
		
	КонецЦикла;
	
	СтруктураПараметров.ТабличныйДокументРаздел91 = ТабличныйДокумент;
	
	ИтогиРаздел91.СтПродВсП1Р9_18 = ИтогЗаПериод.СуммаБезНДС18;
	ИтогиРаздел91.СтПродВсП1Р9_10 = ИтогЗаПериод.СуммаБезНДС10;
	ИтогиРаздел91.СтПродВсП1Р9_0  = ИтогЗаПериод.НДС0;
	ИтогиРаздел91.СумНДСВсП1Р9_18 = ИтогЗаПериод.НДС18;
	ИтогиРаздел91.СумНДСВсП1Р9_10 = ИтогЗаПериод.НДС10;
	ИтогиРаздел91.СтПродОсвП1Р9Вс = ИтогЗаПериод.СуммаСовсемБезНДС;

	СтруктураПараметров.ИтогиРаздел91 = ИтогиРаздел91;
	
КонецПроцедуры

Процедура ВывестиШапкуРаздела91Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерДополнительногоЛиста)
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	Если НомерДополнительногоЛиста = 1 Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел91");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("ШапкаРаздел91НомерЛиста");
	Секция.Параметры.НомерЛиста = НомерДополнительногоЛиста;
	Секция.Параметры.ДатаСоставления = Формат(СтруктураПараметров.ДатаОформления, "ДФ=dd.MM.yyyy");
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть("СтрокиДляПовтора");
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет)
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СписокПоказателей.Добавить("ФИО");
	
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода, СписокПоказателей);
	СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
	
	Если РегламентированнаяОтчетность.ЭтоПБОЮЛ(СтруктураПараметров.Организация) Тогда
		ИмяРук = "";
		ИмяОрг = СведенияОбОрганизации.ФИО;
		Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,");
	Иначе
		ИмяРук = СведенияОбОрганизации.ФИОРук;
		ИмяОрг = "";
		Свидетельство = "";
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяРук        = ИмяРук;
	Секция.Параметры.ИмяОрг        = ИмяОрг;
	Секция.Параметры.Свидетельство = Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ИнициализироватьТаблицыДляДекларацииПоНДС(СтруктураПараметров)

	Раздел9 = Новый ТаблицаЗначений;
	
	Раздел9.Колонки.Добавить("НомерПор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
	
	Раздел9.Колонки.Добавить("НомСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел9.Колонки.Добавить("ДатаСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
	Раздел9.Колонки.Добавить("НомИспрСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел9.Колонки.Добавить("ДатаИспрСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел9.Колонки.Добавить("НомКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел9.Колонки.Добавить("ДатаКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел9.Колонки.Добавить("НомИспрКСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел9.Колонки.Добавить("ДатаИспрКСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел9.Колонки.Добавить("ОКВ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	
// +++ввв 20.04.2017 г.
	Если СтруктураПараметров.ЗаполнениеДекларации
	   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
		Раздел9.Колонки.Добавить("РегНомТД", Новый ОписаниеТипов("Массив"));
	КонецЕсли;
// ---ввв 20.04.2017 г.
	Раздел9.Колонки.Добавить("СтоимПродСФВ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел9.Колонки.Добавить("СтоимПродСФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	
	Раздел9.Колонки.Добавить("СтоимПродСФ18", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел9.Колонки.Добавить("СтоимПродСФ10", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел9.Колонки.Добавить("СтоимПродСФ0", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел9.Колонки.Добавить("СумНДССФ18", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел9.Колонки.Добавить("СумНДССФ10", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел9.Колонки.Добавить("СтоимПродОсв", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	
	Раздел9.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	Раздел9.Колонки.Добавить("ДокПдтвОпл", Новый ОписаниеТипов("Массив"));
	
	
	Раздел9.Колонки.Добавить("СвПокуп", Новый ОписаниеТипов("Массив"));
	Раздел9.Колонки.Добавить("СвПос"); // Тип не задается
	
	Раздел91 = Раздел9.СкопироватьКолонки();
	
	СтруктураПараметров.Вставить("ТаблицаРаздел9", Раздел9);
	СтруктураПараметров.Вставить("ТаблицаРаздел91", Раздел91);
	СтруктураПараметров.Вставить("ТабличныйДокументРаздел91");
	
	ИтогиРаздел9 = Новый Структура("СтПродБезНДС18,СтПродБезНДС10,СтПродБезНДС0,СумНДСВсКПр18,СумНДСВсКПр10,СтПродОсвВсКПр");
	ИтогиРаздел91 = Новый Структура(
		"ИтСтПродКПр18,ИтСтПродКПр10,ИтСтПродКПр0,СумНДСИтКПр18,СумНДСИтКПр10,ИтСтПродОсвКПр,
		|СтПродВсП1Р9_18,СтПродВсП1Р9_10,СтПродВсП1Р9_0,СумНДСВсП1Р9_18,СумНДСВсП1Р9_10,СтПродОсвП1Р9Вс");
	
	СтруктураПараметров.Вставить("ИтогиРаздел9", ИтогиРаздел9);
	СтруктураПараметров.Вставить("ИтогиРаздел91", ИтогиРаздел91);
	
КонецПроцедуры

#КонецЕсли