#Если Клиент Тогда
Перем Таб;
//АБС_Стрельцов+ добавлено: 17.10.2012
Перем мДобавлятьИзмерениеПроект Экспорт;
 //АБС_Стрельцов- 
 Перем мДобавлятьИзмерениеСценарий Экспорт;
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	 УниверсальныйОтчет.ИмяРегистра = "абс_ЗаявкиНаОбеспечение";
		
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	 УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	 УниверсальныйОтчет.ВыводитьОбщиеИтоги = Истина;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	 УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Ложь;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	//УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	 УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	//УниверсальныйОтчет.ДобавитьПолеГруппировка("ЕдиницаИзмерения", "Номенклатура", "ЕдиницаХраненияОстатков", "Ед.изм.");

	УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);

	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	
	//КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	//УниверсальныйОтчет.ПостроительОтчета.Текст = "ВЫБРАТЬ ";
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КВ", "КВ и ТЗ");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТипСети", "Тип сетей/услуг");
	 
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	////УниверсальныйОтчет.ДобавитьПоказатель("Номер", "Номер п/п", Истина, "ЧЦ=15; ЧДЦ=2", "Объект строительства","Объект строительства");
	
	//УниверсальныйОтчет.ДобавитьПоказатель("ВыделенныйЛимитРуб", "Выделенный лимит (руб)", Истина, "ЧЦ=15; ЧДЦ=2");//, "ЛимитРуб", "Лимит (руб.)");
	//УниверсальныйОтчет.ДобавитьПоказатель("ПотребленоРуб",           "Потреблено (руб)",  Истина, "ЧЦ=15; ЧДЦ=2");//, "ЛимитРуб", "Лимит (руб.)");
	//УниверсальныйОтчет.ДобавитьПоказатель("ОстатокЛимитаРуб",           "Остаток лимита (руб)",Истина, "ЧЦ=15; ЧДЦ=2");//, "ЛимитРуб", "Лимит (руб.)");
	//УниверсальныйОтчет.ДобавитьПоказатель("ВыделенныйЛимитВал", "Выделенный лимит (вал)", Ложь, "ЧЦ=15; ЧДЦ=2");//, "ЛимитВал", "Лимит (вал.)");
	//УниверсальныйОтчет.ДобавитьПоказатель("ПотребленоВал",           "Потреблено (вал)",  Ложь, "ЧЦ=15; ЧДЦ=2");//, "ЛимитВал", "Лимит (вал.)");
	//УниверсальныйОтчет.ДобавитьПоказатель("ОстатокЛимитаВал",           "Остаток лимита (вал)",Ложь, "ЧЦ=15; ЧДЦ=2");//, "ЛимитВал", "Лимит (вал.)");
	 
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	//АБС НАЧАЛО Задача №08759
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Регистратор");
	
	//АБС_Стрельцов+ добавлено: 17.10.2012
	//Если мДобавлятьИзмерениеПроект Тогда
	//	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Проект");
	//КонецЕсли;
	//АБС_Стрельцов-
	//\\АБС КОНЕЦ Задача №08759
             	
	//Если мДобавлятьИзмерениеСценарий Тогда
	//	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Сценарий");
	//КонецЕсли;	
 		
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЦФУ");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЦФО");
	//АБС НАЧАЛО Задача №08759
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	//\\АБС КОНЕЦ Задача №08759
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяОборотов");

	//МассивДанных = Новый массив;
	//МассивДанных.Добавить("PM");
	//МассивДанных.Добавить("Контрагент");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки(МассивДанных);
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	//УниверсальныйОтчет.ДобавитьИзмерениеКолонки("ПериодМесяц");
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	//УниверсальныйОтчет.ДобавитьОтбор("Проект");
	
	//АБС НАЧАЛО Задача №08759
	
	//АБС_Стрельцов+ добавлено: 17.10.2012
	//ЕСли мДобавлятьИзмерениеПроект Тогда
	//	УниверсальныйОтчет.ДобавитьОтбор("Проект");
	//КонецЕсли;
	////АБС_Стрельцов-
	//Если мДобавлятьИзмерениеСценарий Тогда
	//	УниверсальныйОтчет.ДобавитьОтбор("Сценарий");
	//КонецЕсли;		
	
	//УниверсальныйОтчет.ДобавитьОтбор("Организация");
	//\\АБС КОНЕЦ Задача №08759

	УниверсальныйОтчет.ДобавитьОтбор("Заказ");
	УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	//УниверсальныйОтчет.ДобавитьОтбор("Организация");
	//УниверсальныйОтчет.ДобавитьОтбор("СтатьяОборотов");
	
	//УниверсальныйОтчет.ДобавитьОтбор("Наименование");
		//УниверсальныйОтчет.ДобавитьОтбор("Покупатель");
	//УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	//УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	//УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	//ЭлементОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить("Регистратор", "Документ движения (регистратор)");
	//
	//ЭлементОформления.Область.Добавить("Регистратор", "Регистратор", ТипОбластиОформления.Поле);
	//ЭлементОтбора = ЭлементОформления.Отбор.Добавить("Регистратор.Статус");
	//ЭлементОтбора.ВидСравнения = ВидСравнения.Равно;
	//ЭлементОтбора.Значение = Перечисления.абс_СтатусыРекласификацииБюджета.Проведен;
	//ЭлементОтбора.Использование = Истина;
	//ЭлементОформления.Оформление.ЦветФона.Значение = WebЦвета.Зеленый;
	//ЭлементОформления.Оформление.ЦветФона.Использование = Истина;
	////ЭлементОформления.Оформление.Текст.Значение = "Требуется заказать";
	////ЭлементОформления.Оформление.Текст.Использование = Истина;
	//
	//ЭлементОформления.Использование = Истина;
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	//УниверсальныйОтчет.ДобавитьДополнительноеПоле("ЕдиницаИзмерения");
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	Если НачалоМесяца(УниверсальныйОтчет.ДатаНач)<> УниверсальныйОтчет.ДатаНач и ЗначениеЗаполнено(УниверсальныйОтчет.ДатаНач) Тогда
		УниверсальныйОтчет.ДатаНач = НачалоМесяца(УниверсальныйОтчет.ДатаНач);
	КонецЕсли;
	
	Если КонецМесяца(УниверсальныйОтчет.ДатаКон)<> УниверсальныйОтчет.ДатаКон и ЗначениеЗаполнено(УниверсальныйОтчет.ДатаКон) Тогда
		УниверсальныйОтчет.ДатаКон = КонецМесяца(УниверсальныйОтчет.ДатаКон);
	КонецЕсли;

	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач",УниверсальныйОтчет.ДатаНач);	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон",УниверсальныйОтчет.ДатаКон);	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	Возврат "";
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
 УниверсальныйОтчет.мРежимВводаПериода = 0;

 //АБС_Стрельцов+ добавлено: 17.10.2012
 мДобавлятьИзмерениеПроект = Истина;
 //АБС_Стрельцов-
 мДобавлятьИзмерениеСценарий = Ложь;
  
#КонецЕсли
