#Если Клиент Тогда
	
	Перем НП Экспорт;
	
	
	// Выполняет запрос и формирует табличный документ-результат отчета
	// в соответствии с настройками, заданными значениями реквизитов отчета.
	//
	// Параметры:
	//	ДокументРезультат - табличный документ, формируемый отчетом
	//	ПоказыватьЗаголовок - признак видимости строк с заголовком отчета
	//	ВысотаЗаголовка - параметр, через который возвращается высота заголовка в строках 
	//
	Процедура СформироватьОтчет(ДокументРезультат, ПоказыватьЗаголовок, ВысотаЗаголовка, ТолькоЗаголовок = Ложь, НачалоПодписи, ПоказыватьПодписи) Экспорт
		
		ДатаНач = НачалоГода(ПериодРегистрации);
		ДатаКон  = КонецГода(ПериодРегистрации);
		Если ДатаНач > ДатаКон И ДатаКон <> '00010101000000' Тогда
			Предупреждение("Дата начала периода не может быть больше даты окончания периода");
			Возврат;
		КонецЕсли;
		
		НачалоПериода = Новый Граница(НачалоГода(ПериодРегистрации), ВидГраницы.Включая);
		КонецПериода = Новый Граница(КонецГода(ПериодРегистрации), ВидГраницы.Включая);
		
		ДокументРезультат.Очистить();
		
		
		СтараяДата = КонецДня(ДатаКон) + 1;
		НоваяДата  = ДатаКон;
		
		Структура = Новый Структура("Дата,Организация", СтараяДата,Организация);
		НоваяСтавка = НалоговыйУчет.ПолучитьСтавкуНалогаНаПрибыль(Структура) * 100;
		
		Структура.Дата = НоваяДата;
		СтараяСтавка = НалоговыйУчет.ПолучитьСтавкуНалогаНаПрибыль(Структура) * 100;
		
		Если НоваяСтавка = СтараяСтавка Тогда
			Возврат;
		КонецЕсли;
		
		Макет      = ПолучитьМакет("Отчет");
		МакетОбщий = ПолучитьОбщийМакет("СправкаРасчет");
		
		ЗаголовокОтчета         = МакетОбщий.ПолучитьОбласть("Заголовок");
		ОбластьШапка            = Макет.ПолучитьОбласть("Шапка");
		ОбластьСтрока           = Макет.ПолучитьОбласть("Строка");
		ОбластьСтрока1          = Макет.ПолучитьОбласть("Строка1");
		ОбластьИтого            = Макет.ПолучитьОбласть("Итого");
		ОбластьОкончаниеТаблицы = Макет.ПолучитьОбласть("ОкончаниеТаблицы");
		ОбластьПодвал           = МакетОбщий.ПолучитьОбласть("Подвал");
		
		ЗаголовокОтчета.Параметры.Период              = "" + ПредставлениеПериода(ДатаНач, ДатаКон, "ФП = Истина");
		ЗаголовокОтчета.Параметры.НазваниеОрганизации = "" + Организация.НаименованиеПолное;
		ЗаголовокОтчета.Параметры.ДатаСоставления     = ДатаКон;
		ЗаголовокОтчета.Параметры.НазваниеОтчета      = "Пересчет стоимости отложенных налоговых активов и обязательств";
		ДокументРезультат.Вывести(ЗаголовокОтчета,1);
		
		ВысотаЗаголовка = ДокументРезультат.ВысотаТаблицы;
		ОбластьШапка.Параметры.ТекстСтараяСтавка    = "на конец " + Сред(Строка(ПериодРегистрации),7,4) + " года (налоговая ставка " + СтараяСтавка + "%)";
		ОбластьШапка.Параметры.ТекстНоваяСтавка     = "на начало " + Сред(Строка(ПериодРегистрации + 31536000),7,4) + " года (налоговая ставка " + НоваяСтавка + "%) (гр.3 * " + НоваяСтавка + "%)";
		ДокументРезультат.Вывести(ОбластьШапка,1);
		
		// Когда нужен только заголовок:
		Если ТолькоЗаголовок Тогда
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ВысотаЗаголовка) Тогда
			ДокументРезультат.Область("R1:R" + ВысотаЗаголовка).Видимость = ПоказыватьЗаголовок;
		КонецЕсли;
		
	ТаблицаВидовАктивовИОбязательств = НалоговыйУчет.ПолучитьТаблицуВидовАктивовИОбязательств();
	
	ТаблицаОНАОНО =  Новый ТаблицаЗначений;
	ТаблицаОНАОНО.Колонки.Добавить("Разница");
	ТаблицаОНАОНО.Колонки.Добавить("Прибыль");
	ТаблицаОНАОНО.Колонки.Добавить("Убыток");
	ТаблицаОНАОНО.Колонки.Добавить("СтоимостьПоСтаройСтавке");
	ТаблицаОНАОНО.Колонки.Добавить("СтоимостьПоНовойставке");
	ТаблицаОНАОНО.Колонки.Добавить("СчетОНАОНО");
	ТаблицаОНАОНО.Колонки.Добавить("Вид");
	ТаблицаОНАОНО.Колонки.Добавить("СтараяСумма");
	ТаблицаОНАОНО.Колонки.Добавить("ВременныеРазницы");
	
	ТаблицаВР =  Новый ТаблицаЗначений;
	ТаблицаВР.Колонки.Добавить("Счет");
	ТаблицаВР.Колонки.Добавить("СчетОНАОНО");
	ТаблицаВР.Колонки.Добавить("Аналитика");
	ТаблицаВР.Колонки.Добавить("ВременныеРазницы");
	ТаблицаВР.Колонки.Добавить("Вид");
	
	Для каждого СтрокаВидАктиваОбязательства Из ТаблицаВидовАктивовИОбязательств Цикл
		
		ТаблицаВидаАктивовИОбязательств = НалоговыйУчет.ОстаткиВременныхРазницПоВидуАктивовОбязательств(СтрокаВидАктиваОбязательства,Организация, НачалоПериода, КонецПериода);
		Если ТаблицаВидаАктивовИОбязательств.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоОбъектовАналитики = СтрокаВидАктиваОбязательства.Субконто.Количество();
		МассивСубконто = СтрокаВидАктиваОбязательства.Субконто;
		ЭтоОС = (МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
		ЭтоНМА = (МассивСубконто[0] = ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы);
		ЭтоНМА08 = Лев(СтрокаВидАктиваОбязательства.Счета[0].Код,5) = "08.05";
		ТаблицаВидаАктивовИОбязательств.Свернуть("СчетОНАОНО," + ?(Не ЭтоОС И НЕ ЭтоНМА,"Счет,","") + "СтараяСумма","Сумма");
		
		ТаблицаАктивовИОбязательств = ТаблицаВидаАктивовИОбязательств.Скопировать();
		ТаблицаВидаАктивовИОбязательств.Свернуть("СчетОНАОНО,СтараяСумма","Сумма");
		
		Для каждого Строка Из ТаблицаВидаАктивовИОбязательств Цикл
			СтрокаТаблицаОНАОНО = ТаблицаОНАОНО.Добавить();
			СтрокаТаблицаОНАОНО.СтараяСумма = Строка.СтараяСумма;
			СтрокаТаблицаОНАОНО.СчетОНАОНО = Строка.СчетОНАОНО;
			СтрокаТаблицаОНАОНО.Вид = СтрокаВидАктиваОбязательства.ВидАктивовОбязательств;
			СтрокаТаблицаОНАОНО.ВременныеРазницы = Строка.Сумма;
		КОнецЦикла;
		
		
		Для каждого Строка Из ТаблицаАктивовИОбязательств Цикл
			Если  Строка.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			СтрокаТаблицаВр = ТаблицаВР.Добавить();
			СтрокаТаблицаВр.СчетОНАОНО = Строка.СчетОНАОНО;
			СтрокаТаблицаВр.Счет = "";
			СтрокаТаблицаВр.Вид = СтрокаВидАктиваОбязательства.ВидАктивовОбязательств;
			СтрокаТаблицаВр.ВременныеРазницы = Строка.Сумма;
			СтрокаТаблицаВр.Аналитика =  ?(ЭтоОС, "01,03 - 02 ""Основные средства минус амортизация""", ?(ЭтоНМА08, "08.05 ""Приобретение нематериальных активов""", ?(ЭтоНМА, "04 - 05 ""НМА минус амортизация""", "" + Строка.Счет + " """ + Строка.Счет.Наименование + """")));
		КОнецЦикла;
	КонецЦикла;
	
	ТаблицаОНАОНО.Свернуть("СчетОНАОНО,Вид,Разница,Прибыль,Убыток,СтоимостьПоСтаройСтавке,СтараяСумма,СтоимостьПоНовойставке","ВременныеРазницы");
	ТаблицаВР.Свернуть("СчетОНАОНО,Счет,Вид,Аналитика","ВременныеРазницы");
    ДокументРезультат.НачатьАвтогруппировкуСтрок();
	
	Для каждого Строка Из ТаблицаОНАОНО Цикл
		Если Строка.СтараяСумма = 0 Тогда
			Продолжить;
		КонецЕсли;
			ОбластьСтрока.Параметры.Счет = Строка.СчетОНАОНО;
			ОбластьСтрока.Параметры.ВременныеРазницы = Строка.ВременныеРазницы;
			ОбластьСтрока.Параметры.СтоимостьПоСтаройСтавке = Строка.СтараяСумма;
			ОбластьСтрока.Параметры.СтоимостьПоНовойСтавке =  Окр(Строка.ВременныеРазницы * НоваяСтавка / 100, 2);
			ОбластьСтрока.Параметры.Разница = ОбластьСтрока.Параметры.СтоимостьПоНовойСтавке - ОбластьСтрока.Параметры.СтоимостьПоСтаройСтавке;
			Если Строка.СчетОНАОНО.Код = "09" Тогда
				ОбластьСтрока.Параметры.Прибыль = ?(ОбластьСтрока.Параметры.Разница > 0, ОбластьСтрока.Параметры.Разница, 0);
				ОбластьСтрока.Параметры.Убыток = ?(ОбластьСтрока.Параметры.Разница < 0, -ОбластьСтрока.Параметры.Разница, 0);
			Иначе
				ОбластьСтрока.Параметры.Убыток = ?(ОбластьСтрока.Параметры.Разница > 0, ОбластьСтрока.Параметры.Разница, 0);
				ОбластьСтрока.Параметры.Прибыль = ?(ОбластьСтрока.Параметры.Разница < 0, -ОбластьСтрока.Параметры.Разница, 0);
			КонецЕсли;
			ОбластьСтрока.Параметры.Аналитика = Строка.Вид;
			
			 
			Строка.СтоимостьПоСтаройСтавке = ОбластьСтрока.Параметры.СтоимостьПоСтаройСтавке;
			Строка.СтоимостьПоНовойСтавке  = ОбластьСтрока.Параметры.СтоимостьПоНовойСтавке;
			Строка.Разница                 = ОбластьСтрока.Параметры.Разница;
			Строка.Убыток                  = ОбластьСтрока.Параметры.Убыток;
			Строка.Прибыль                 = ОбластьСтрока.Параметры.Прибыль;
			
			ДокументРезультат.Вывести(ОбластьСтрока,2);
		СтрокиВР = ТаблицаВР.НайтиСтроки(Новый Структура("СчетОНАОНО,Вид", Строка.СчетОНАОНО, Строка.Вид));
		Если Не СтрокиВР = Неопределено Тогда
			Для каждого СтрокаВР Из СтрокиВР Цикл
				
				ОбластьСтрока1.Параметры.Аналитика = СтрокаВР.Аналитика;
				ОбластьСтрока1.Параметры.ВременныеРазницы = СтрокаВР.ВременныеРазницы;
				ОбластьСтрока1.Параметры.Счет = СтрокаВР.Счет;
				ДокументРезультат.Вывести(ОбластьСтрока1,3);
			КОнецЦикла;
		КонецЕсли;
	КонецЦикла;
			ДокументРезультат.ЗакончитьАвтогруппировкуСтрок(); 
	
			ОбластьИтого.Параметры.Разница = ТаблицаОНАОНО.Итог("Разница");
			ОбластьИтого.Параметры.Прибыль = ТаблицаОНАОНО.Итог("Прибыль");
			ОбластьИтого.Параметры.Убыток = ТаблицаОНАОНО.Итог("Убыток");
			ОбластьИтого.Параметры.СтоимостьПоСтаройСтавке = ТаблицаОНАОНО.Итог("СтоимостьПоСтаройСтавке");
			ОбластьИтого.Параметры.СтоимостьПоНовойСтавке = ТаблицаОНАОНО.Итог("СтоимостьПоНовойСтавке");
			ДокументРезультат.Вывести(ОбластьИтого,1);
			
			ДокументРезультат.Вывести(ОбластьОкончаниеТаблицы,1);
			
			ДокументРезультат.Вывести(ОбластьПодвал,1);
			
			ВысотаПодписи = ДокументРезультат.Области.Подвал.Низ - ДокументРезультат.Области.Подвал.Верх;
			
			ДокументРезультат.Области.Подвал.Видимость = ПоказыватьПодписи;
		
		// Зафиксируем заголовок отчета
			ДокументРезультат.ФиксацияСверху=10;

		// Первую колонку не печатаем
		ДокументРезультат.ОбластьПечати = ДокументРезультат.Область(1,2,ДокументРезультат.ВысотаТаблицы,ДокументРезультат.ШиринаТаблицы);
		
		ДокументРезультат.ПоказатьУровеньГруппировокСтрок(0);
		ДокументРезультат.ТолькоПросмотр = Истина;
		
		ДокументРезультат.Показать();
		// Присвоим имя для сохранения параметров печати табличного документа
		ДокументРезультат.ИмяПараметровПечати = "Пересчет стоимости отложенных налоговых активов и обязательств";
		
	    ДокументРезультат.АвтоМасштаб = Истина;
		
		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ДокументРезультат, ЗаголовокОтчета, Строка(глЗначениеПеременной("глТекущийПользователь")));
		
	КонецПроцедуры // СформироватьОтчет
	
Процедура ЗаполнитьНачальныеНастройки() Экспорт
	
	СтарыеНастройки = УправлениеОтчетами.ПолучитьКопиюОтбораВТЗ(ПостроительОтчета.Отбор);
	
	СоотвСубконто = Новый Соответствие;
	
	Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	        |	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
	        |{ВЫБРАТЬ
	        |	ХозрасчетныйОбороты.Валюта.*}
	        |ИЗ
	        |	РегистрБухгалтерии.Хозрасчетный.Обороты(, , Месяц, Счет В ИЕРАРХИИ (&Счет), , {Валюта.*}, , ) КАК ХозрасчетныйОбороты
	        |ИТОГИ
	        |	СУММА(СуммаОборотКт)
	        |ПО
	        |	ОБЩИЕ
	        |{ИТОГИ ПО
	        |	ХозрасчетныйОбороты.Валюта.*}";

Массив = Новый Массив;
Массив.Добавить(ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеАктивы);
Массив.Добавить(ПланыСчетов.Хозрасчетный.ОтложенныеНалоговыеОбязательства);
ПостроительОтчета.Параметры.Вставить("Счет", Массив);
ПостроительОтчета.Параметры.Вставить("ПустаяОрганизация", Справочники.Организации.ПустаяСсылка());
	
ПостроительОтчета.Текст = Текст;

УправлениеОтчетами.УстановитьОтборИзТаблицы(ПостроительОтчета.Отбор, СтарыеНастройки);

КонецПроцедуры
	////////////////////////////////////////////////////////////////////////////////
	// ОПЕРАТОРЫ ОСНОВНОЙ ПРОГРАММЫ
	// 
	
	НП = Новый НастройкаПериода;
	
#КонецЕсли