#Если Клиент Тогда
Перем Таб;
//АБС_Стрельцов+ добавлено: 17.10.2012
Перем мДобавлятьИзмерениеПроект Экспорт;
//АБС_Стрельцов- 
Перем мДобавлятьИзмерениеСценарий Экспорт;
 
//АБС ВСТАВКА №44919 НАЧАЛО «26 июня 2014 г.», Пополитов
Перем мДелаемОтборПоСценариюВСписке Экспорт; 
Перем мЗаголовокФормыПереименовать Экспорт;
//\\АБС ВСТАВКА №44919 КОНЕЦ

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним);
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
		
	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	//УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Истина;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	//УниверсальныйОтчет.ДобавитьПолеГруппировка("ЕдиницаИзмерения", "Номенклатура", "ЕдиницаХраненияОстатков", "Ед.изм.");

	УниверсальныйОтчет.УстановитьНачальныеНастройки(Истина);

	// В универсальном отчете включен флаг использования свойств и категорий.
	//Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
	//	
	//	
	//КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	НАЧАЛОПЕРИОДА(КонтролируемыеЗначенияБюджетовОбороты.Период, МЕСЯЦ) КАК ПериодМесяц,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ЦФУ КАК ЦФУ,
	|	КонтролируемыеЗначенияБюджетовОбороты.ЦФО,
	|	КонтролируемыеЗначенияБюджетовОбороты.Организация,
	|	КонтролируемыеЗначенияБюджетовОбороты.СтатьяОборотов,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипКонтрагента КАК ТипКонтрагента,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипСети КАК ТипСети,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_КВ КАК КВ,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТЭО КАК ТЭО,
	//АБС НАЧАЛО Задача №08759
	|	КонтролируемыеЗначенияБюджетовОбороты.Проект КАК Проект,
	//\\АБС КОНЕЦ Задача №08759
	//АБС НАЧАЛО Задача №18552
	|	КонтролируемыеЗначенияБюджетовОбороты.Сценарий КАК Сценарий,
	//\\АБС КОНЕЦ Задача №18552
	//Сторчевой А.Н. НФС 2018 {
	|	КонтролируемыеЗначенияБюджетовОбороты.ttk_ОбъектБюджетирования КАК ОбъектБюджетирования,
	// } Сторчевой А.Н. НФС 2018
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипРасхода КАК ТипРасхода,
	|	КонтролируемыеЗначенияБюджетовОбороты.Регистратор,
	|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияКонтрольОборот) КАК ВыделенныйЛимитРуб,
	|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияИсполнениеОборот) КАК ПотребленоРуб,
	|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияКонтрольОборот - КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияИсполнениеОборот) КАК ОстатокЛимитаРуб,
	|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияКонтрольВалОборот) КАК ВыделенныйЛимитВал,
	|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияИсполнениеВалОборот) КАК ПотребленоВал,
	|	СУММА(КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияКонтрольВалОборот - КонтролируемыеЗначенияБюджетовОбороты.СуммаСценарияИсполнениеВалОборот) КАК ОстатокЛимитаВал,
	|	КонтролируемыеЗначенияБюджетовОбороты.Валюта,
	|	КонтролируемыеЗначенияБюджетовОбороты.Период
	|{ВЫБРАТЬ
	|	Регистратор.*,
	|	Валюта.*,
	|	Период,
	|	ПериодМесяц,
	|	ВыделенныйЛимитРуб,
	|	ПотребленоРуб,
	|	ОстатокЛимитаРуб,
	|	ВыделенныйЛимитВал,
	|	ПотребленоВал,
	|	ОстатокЛимитаВал}
	|ИЗ
	|	РегистрНакопления.КонтролируемыеЗначенияБюджетов.Обороты(&ДатаНач, &ДатаКон, Регистратор, ) КАК КонтролируемыеЗначенияБюджетовОбороты
	|{ГДЕ
	|	КонтролируемыеЗначенияБюджетовОбороты.СтатьяОборотов.*,
	|	КонтролируемыеЗначенияБюджетовОбороты.ЦФО.*,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипКонтрагента.* КАК ТипКонтрагента,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипСети.* КАК ТипСети,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_КВ.* КАК КВ,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТЭО.* КАК ТЭО,
	//АБС НАЧАЛО Задача №08759
	|	КонтролируемыеЗначенияБюджетовОбороты.Проект.* КАК Проект,
	//\\АБС КОНЕЦ Задача №08759
	//АБС НАЧАЛО Задача №18552
	|	КонтролируемыеЗначенияБюджетовОбороты.Сценарий.* КАК Сценарий,
	//\\АБС КОНЕЦ Задача №18552
	//Сторчевой А.Н. НФС 2018 {
	|	КонтролируемыеЗначенияБюджетовОбороты.ttk_ОбъектБюджетирования.* КАК ОбъектБюджетирования,
	// } Сторчевой А.Н. НФС 2018
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипРасхода.* КАК ТипРасхода,
	|	КонтролируемыеЗначенияБюджетовОбороты.Организация.*,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ЦФУ.* КАК ЦФУ,
	|	КонтролируемыеЗначенияБюджетовОбороты.Период,
	|	КонтролируемыеЗначенияБюджетовОбороты.Регистратор.*}
	|
	|СГРУППИРОВАТЬ ПО
	|	КонтролируемыеЗначенияБюджетовОбороты.Организация,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипРасхода,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипСети,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ЦФУ,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТЭО,
	//АБС НАЧАЛО Задача №08759
	|	КонтролируемыеЗначенияБюджетовОбороты.Проект,
	//\\АБС КОНЕЦ Задача №08759
	//АБС НАЧАЛО Задача №18552
	|	КонтролируемыеЗначенияБюджетовОбороты.Сценарий,
	//\\АБС КОНЕЦ Задача №18552
	//Сторчевой А.Н. НФС 2018 {
	|	КонтролируемыеЗначенияБюджетовОбороты.ttk_ОбъектБюджетирования,
	// } Сторчевой А.Н. НФС 2018
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_КВ,
	|	КонтролируемыеЗначенияБюджетовОбороты.абс_ТипКонтрагента,
	|	КонтролируемыеЗначенияБюджетовОбороты.ЦФО,
	|	КонтролируемыеЗначенияБюджетовОбороты.Регистратор,
	|	КонтролируемыеЗначенияБюджетовОбороты.СтатьяОборотов,
	|	НАЧАЛОПЕРИОДА(КонтролируемыеЗначенияБюджетовОбороты.Период, МЕСЯЦ),
	|	КонтролируемыеЗначенияБюджетовОбороты.Валюта,
	|	КонтролируемыеЗначенияБюджетовОбороты.Период
	|{УПОРЯДОЧИТЬ ПО
	//АБС НАЧАЛО Задача №08759
	|	Проект.*,
	//\\АБС КОНЕЦ Задача №08759
	//АБС НАЧАЛО Задача №18552
	|	Сценарий.*,
	//\\АБС КОНЕЦ Задача №18552
	//Сторчевой А.Н. НФС 2018 {
	|	ОбъектБюджетирования.*,
	// } Сторчевой А.Н. НФС 2018
	|	Организация.*,
	|	ПериодМесяц,
	|	ЦФУ.*,
	|	ЦФО.*,
	|	Организация.*,
	|	СтатьяОборотов.*,
	|	ТипКонтрагента.*,
	|	ТипСети.*,
	|	КВ.*,
	|	ТЭО.*,
	|	ТипРасхода.*,
	|	Регистратор.*,
	|	ВыделенныйЛимитРуб,
	|	ПотребленоРуб,
	|	ОстатокЛимитаРуб,
	|	ВыделенныйЛимитВал,
	|	ПотребленоВал,
	|	ОстатокЛимитаВал,
	|	Валюта.*,
	|	Период}
	|ИТОГИ
	|	СУММА(ВыделенныйЛимитРуб),
	|	СУММА(ПотребленоРуб),
	|	СУММА(ОстатокЛимитаРуб),
	|	СУММА(ВыделенныйЛимитВал),
	|	СУММА(ПотребленоВал),
	|	СУММА(ОстатокЛимитаВал)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	ПериодМесяц КАК ПериодМесяц,
	|	ЦФУ.*,
	|	ЦФО.*,
	|	Организация.*,
	|	СтатьяОборотов.*,
	|	ТипКонтрагента.*,
	|	ТипСети.*,
	|	КВ.*,
	|	ТЭО.*,
	//АБС НАЧАЛО Задача №08759
	|	Проект.*,
	//\\АБС КОНЕЦ Задача №08759
	//АБС НАЧАЛО Задача №18552
	|	Сценарий.*,
	//\\АБС КОНЕЦ Задача №18552
	//Сторчевой А.Н. НФС 2018 {
	|	ОбъектБюджетирования.*,
	// } Сторчевой А.Н. НФС 2018
	|	ТипРасхода.*,
	|	Регистратор.*}";
	
	//Сторчевой А.Н. НФС 2018 {
	//МодернизироватьПостроительОтчета(УниверсальныйОтчет.ПостроительОтчета, ДополнительныеПараметры);
	// } Сторчевой А.Н. НФС 2018
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("КВ", "КВ и ТЗ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить("ТипСети", "Тип сетей/услуг");
	 
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	////УниверсальныйОтчет.ДобавитьПоказатель("Номер", "Номер п/п", Истина, "ЧЦ=15; ЧДЦ=2", "Объект строительства","Объект строительства");
	
	УниверсальныйОтчет.ДобавитьПоказатель("ВыделенныйЛимитРуб", "Выделенный лимит (руб)", Истина, "ЧЦ=15; ЧДЦ=2");//, "ЛимитРуб", "Лимит (руб.)");
	УниверсальныйОтчет.ДобавитьПоказатель("ПотребленоРуб",           "Потреблено (руб)",  Истина, "ЧЦ=15; ЧДЦ=2");//, "ЛимитРуб", "Лимит (руб.)");
	УниверсальныйОтчет.ДобавитьПоказатель("ОстатокЛимитаРуб",           "Остаток лимита (руб)",Истина, "ЧЦ=15; ЧДЦ=2");//, "ЛимитРуб", "Лимит (руб.)");
	УниверсальныйОтчет.ДобавитьПоказатель("ВыделенныйЛимитВал", "Выделенный лимит (вал)", Ложь, "ЧЦ=15; ЧДЦ=2");//, "ЛимитВал", "Лимит (вал.)");
	УниверсальныйОтчет.ДобавитьПоказатель("ПотребленоВал",           "Потреблено (вал)",  Ложь, "ЧЦ=15; ЧДЦ=2");//, "ЛимитВал", "Лимит (вал.)");
	УниверсальныйОтчет.ДобавитьПоказатель("ОстатокЛимитаВал",           "Остаток лимита (вал)",Ложь, "ЧЦ=15; ЧДЦ=2");//, "ЛимитВал", "Лимит (вал.)");
	 
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	
	//АБС НАЧАЛО Задача №08759
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	
	//АБС_Стрельцов+ добавлено: 17.10.2012
	Если мДобавлятьИзмерениеПроект Тогда
		//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Проект");
	КонецЕсли;
	//АБС_Стрельцов-
	//\\АБС КОНЕЦ Задача №08759
             	
	Если мДобавлятьИзмерениеСценарий Тогда
    	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Сценарий");
	КонецЕсли;	
 		
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЦФУ");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ЦФО");
	//АБС НАЧАЛО Задача №08759
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	//\\АБС КОНЕЦ Задача №08759
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("СтатьяОборотов");
	
	//Сторчевой А.Н. НФС 2018 {
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ОбъектБюджетирования");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТЭО");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ТипКонтрагента");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки("КВ");
	// } Сторчевой А.Н. НФС 2018
	
	//МассивДанных = Новый массив;
	//МассивДанных.Добавить("PM");
	//МассивДанных.Добавить("Контрагент");
	//УниверсальныйОтчет.ДобавитьИзмерениеСтроки(МассивДанных);
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеКолонки("ПериодМесяц");
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	//УниверсальныйОтчет.ДобавитьОтбор("Проект");
	
	//АБС НАЧАЛО Задача №08759
	
	//АБС_Стрельцов+ добавлено: 17.10.2012
	ЕСли мДобавлятьИзмерениеПроект Тогда
		УниверсальныйОтчет.ДобавитьОтбор("Проект");
	КонецЕсли;
	//АБС_Стрельцов-
	Если мДобавлятьИзмерениеСценарий Тогда
    	УниверсальныйОтчет.ДобавитьОтбор("Сценарий");
	КонецЕсли;		
	
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	//\\АБС КОНЕЦ Задача №08759

	УниверсальныйОтчет.ДобавитьОтбор("ЦФУ");
	УниверсальныйОтчет.ДобавитьОтбор("ЦФО");
	//УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("СтатьяОборотов");
	
	//УниверсальныйОтчет.ДобавитьОтбор("Наименование");
		//УниверсальныйОтчет.ДобавитьОтбор("Покупатель");
	//УниверсальныйОтчет.ДобавитьОтбор("Номенклатура");
	
	// Добавление предопределенных полей порядка отчета.
	// Необходимо вызывать для каждого добавляемого поля порядка.
	// УниверсальныйОтчет.ДобавитьПорядок(<ПутьКДанным>);
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДаннымРодитель>);
	
	// Установка связи полей и измерений
	// УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения(<ИмяПоля>, <ИмяИзмерения>);
	
	// Установка представлений полей
	//УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	//УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	ЭлементОформления = УниверсальныйОтчет.ПостроительОтчета.УсловноеОформление.Добавить("Регистратор", "Документ движения (регистратор)");
	
	ЭлементОформления.Область.Добавить("Регистратор", "Регистратор", ТипОбластиОформления.Поле);
	ЭлементОтбора = ЭлементОформления.Отбор.Добавить("Регистратор.Статус");
	ЭлементОтбора.ВидСравнения = ВидСравнения.Равно;
	ЭлементОтбора.Значение = Перечисления.абс_СтатусыРекласификацииБюджета.Проведен;
	ЭлементОтбора.Использование = Истина;
	ЭлементОформления.Оформление.ЦветФона.Значение = WebЦвета.Зеленый;
	ЭлементОформления.Оформление.ЦветФона.Использование = Истина;
	//ЭлементОформления.Оформление.Текст.Значение = "Требуется заказать";
	//ЭлементОформления.Оформление.Текст.Использование = Истина;
	
	ЭлементОформления.Использование = Истина;
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>, <Размещение>, <Положение>);
	//УниверсальныйОтчет.ДобавитьДополнительноеПоле("ЕдиницаИзмерения");	 
КонецПроцедуры // УстановитьНачальныеНастройки()

//Сторчевой А.Н. НФС 2018 {	
Процедура МодернизироватьПостроительОтчета(ПостроительОтчета, ДопослнительныеПараметры )
	//ххх Брель Виктор Андреевич 21.06.2018 11:52:32, заявка 77356750<<<
	// Заранее извиняюсь за говнокод перед всеми кто это увидит
	// Контроль аналитик происходит в отрыве от данных документа по супер логике которая всем нам очень нравится поэтому 
	// Мы и пишем говнокод а не делаем все по людски
	КВпоПост = Справочники.СтатьиОборотовПоБюджетам.НайтиПоКоду("КВпоПост");
	ГоловнаяКомпания = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК02020013");
	ТК0101ДЗОТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0101");
	ТК0102ФилиалыТТК = Справочники.абс_ТипыКонтрагентов.НайтиПоКоду("ТК0102");
	// Брель Виктор Андреевич 21.06.2018 11:52:32 >>>

	
	Если ТипЗнч(ДопослнительныеПараметры) = Тип("Структура") Тогда 
		
		Ссылка = Неопределено;
		ИмяТЧ = Неопределено;
		Если ДопослнительныеПараметры.Свойство("Ссылка", Ссылка) и ДопослнительныеПараметры.Свойство("ИмяТЧ", ИмяТЧ) Тогда
			
			ИмяДокумента = Ссылка.Метаданные().Имя;
			ТекстЗапроса = ПостроительОтчета.Текст;
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КонтролируемыеЗначенияБюджетовОбороты.СтатьяОборотов,"
			, "КонтролируемыеЗначенияБюджетовОбороты.СтатьяОборотов,
			|	КонтролируемыеЗначенияБюджетовОбороты.ttk_ОбъектБюджетирования,");
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Организация.*,
			|	СтатьяОборотов.*,",
			"Организация.*,
			|	СтатьяОборотов.*,
			|	ttk_ОбъектБюджетирования,");
			
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "КАК КонтролируемыеЗначенияБюджетовОбороты"
			, "КАК КонтролируемыеЗначенияБюджетовОбороты
			|		ПРАВОЕ СОЕДИНЕНИЕ ВТ_АналитикиПроверки КАК ВТ_АналитикиПроверки
			|			ПО КонтролируемыеЗначенияБюджетовОбороты.СтатьяОборотов = ВТ_АналитикиПроверки.СтатьяОборотов
			//|			И КонтролируемыеЗначенияБюджетовОбороты.абс_ТипСети = ВТ_АналитикиПроверки.абс_ТипСети
			|			И КонтролируемыеЗначенияБюджетовОбороты.абс_ТипКонтрагента = ВТ_АналитикиПроверки.абс_ТипКонтрагента
			|			И КонтролируемыеЗначенияБюджетовОбороты.абс_КВ = ВТ_АналитикиПроверки.абс_КВ
			|			И КонтролируемыеЗначенияБюджетовОбороты.абс_ТЭО = ВТ_АналитикиПроверки.абс_ТЭО
			|			И КонтролируемыеЗначенияБюджетовОбороты.абс_ЦФУ = ВТ_АналитикиПроверки.абс_ЦФУ
			|			И КонтролируемыеЗначенияБюджетовОбороты.ttk_ОбъектБюджетирования = ВТ_АналитикиПроверки.ttk_ОбъектБюджетирования");
			
			ТекстЗапросаТЧ = "";
			НомерТЧ = 0;
			Для каждого тИмяТЧ из ИмяТЧ Цикл
				НомерТЧ = НомерТЧ + 1;
				
				// Оперделяем используется ли аналитика КВ согласно супер логике
				ТЕкстКВ = ""; 	
				Если Ссылка[тИмяТЧ][НомерТЧ-1].СтатьяОборотов = КВпоПост Тогда
					ТЕкстКВ = "	ТЗАналитики" + НомерТЧ + ".абс_КВ,";	
				Иначе
					ТЕкстКВ = "	Значение(Справочник.абс_КапитальныеВложения.ПустаяСсылка) КАК абс_КВ," ;
					
				КонецЕсли;
				
				// Определеяем исползуется ли аналиьтика тип конртрагента соглсно супер логике
				Контрагент = Неопределено;
				ТЕкстТипКонтрагента = ""; 	
				Если ТипЗнч(Ссылка) = ТИп("ДокументСсылка.абс_ЗакупочныйЗаказ") ИЛИ  ТипЗнч(Ссылка) = ТИп("ДокументСсылка.абс_СчетНаОплату")Тогда
					Если Ссылка.Контрагент.абс_ТипыКонтрагентов.Родитель = ТК0101ДЗОТТК ИЛИ   Ссылка.Контрагент.абс_ТипыКонтрагентов.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ Ссылка.Контрагент.абс_ТипыКонтрагентов.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
						Ссылка.Контрагент.абс_ТипыКонтрагентов.Родитель = ТК0102ФилиалыТТК ИЛИ Ссылка.Контрагент.абс_ТипыКонтрагентов.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ Ссылка.Контрагент.абс_ТипыКонтрагентов.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
						Ссылка.Контрагент.абс_ТипыКонтрагентов = ГоловнаяКомпания Тогда
						ТЕкстТипКонтрагента ="	ТЗАналитики" + НомерТЧ + ".Ссылка.Контрагент.абс_ТипыКонтрагентов КАК абс_ТипКонтрагента,";
					Иначе
						ТЕкстТипКонтрагента =  "	ЗНАЧЕНИЕ(Справочник.абс_ТипыКонтрагентов.ПустаяСсылка) КАК абс_ТипКонтрагента," ;
					КонецЕсли;
					//ИначеЕсли Ссылка[тИмяТЧ][НомерТЧ].Свойство("ТипКонтрагента",Контрагент)    Тогда
					//	Если Ссылка[тИмяТЧ][НомерТЧ].ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ   Ссылка[тИмяТЧ][НомерТЧ].ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ Ссылка[тИмяТЧ][НомерТЧ].ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
					//		Ссылка[тИмяТЧ][НомерТЧ].ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ Ссылка[тИмяТЧ][НомерТЧ].ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ Ссылка[тИмяТЧ][НомерТЧ].ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
					//		Ссылка[тИмяТЧ][НомерТЧ].ТипКонтрагента.абс_ТипыКонтрагентов = ГоловнаяКомпания Тогда
					//		ТЕкстТипКонтрагента = "|	ТЗАналитики" + НомерТЧ + ".ТипКонтрагента КАК абс_ТипКонтрагента,";
					//	Иначе
					//		ТЕкстТипКонтрагента = "|	ЗНАЧЕНИЕ(Справочник.абс_ТипыКонтрагентов.ПустаяСсылка) КАК абс_ТипКонтрагента," ;
					//	КонецЕсли;
				ИначеЕсли Ссылка[тИмяТЧ][НомерТЧ].Свойство("абс_ТипКонтрагента",Контрагент)    Тогда
					Если Ссылка[тИмяТЧ][НомерТЧ].абс_ТипКонтрагента.Родитель = ТК0101ДЗОТТК ИЛИ   Ссылка[тИмяТЧ][НомерТЧ].абс_ТипКонтрагента.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ Ссылка[тИмяТЧ][НомерТЧ].абс_ТипКонтрагента.Родитель.Родитель.Родитель = ТК0101ДЗОТТК ИЛИ 
						Ссылка[тИмяТЧ][НомерТЧ].абс_ТипКонтрагента.Родитель = ТК0102ФилиалыТТК ИЛИ Ссылка[тИмяТЧ][НомерТЧ].абс_ТипКонтрагента.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ Ссылка[тИмяТЧ][НомерТЧ].абс_ТипКонтрагента.Родитель.Родитель.Родитель = ТК0102ФилиалыТТК ИЛИ
						Ссылка[тИмяТЧ][НомерТЧ].абс_ТипКонтрагента.абс_ТипыКонтрагентов = ГоловнаяКомпания Тогда
						ТЕкстТипКонтрагента =  "	ТЗАналитики" + НомерТЧ + ".Ссылка.Контрагент.абс_ТипКонтрагента КАК абс_ТипКонтрагента,";
					Иначе
						ТЕкстТипКонтрагента = "	ЗНАЧЕНИЕ(Справочник.абс_ТипыКонтрагентов.ПустаяСсылка) КАК абс_ТипКонтрагента," ;
					КонецЕсли;
					
				КонецЕсли;			
				
				ТекстЗапросаТЧ = ТекстЗапросаТЧ + ?(НомерТЧ > 1, "
				|	
				|ОБЪЕДИНИТЬ ВСЕ
				|	
				|ВЫБРАТЬ", "ВЫБРАТЬ РАЗРЕШЕННЫЕ") + "
				|	ТЗАналитики" + НомерТЧ + ".Ссылка,
				|	ТЗАналитики" + НомерТЧ + ".СтатьяОборотов,"
				//|	ТЗАналитики" + НомерТЧ + ".абс_ТипСети,
				+Символы.ПС +Строка(ТЕкстТипКонтрагента)
				+Символы.ПС + Строка(ТЕкстКВ)+Символы.ПС+
				"	ТЗАналитики" + НомерТЧ + ".абс_ТЭО,
				|	ТЗАналитики" + НомерТЧ + ".абс_ЦФУ,
				|	ТЗАналитики" + НомерТЧ + ".ttk_ОбъектБюджетирования" + ?(НомерТЧ > 1,"" , "
				|ПОМЕСТИТЬ ВТ_АналитикиТЧ") + "
				|ИЗ
				|	Документ." + ИмяДокумента + "." + тИмяТЧ +" КАК ТЗАналитики" + НомерТЧ + "
				|ГДЕ
				|	ТЗАналитики" + НомерТЧ + ".Ссылка = &Ссылка";
				
			КонецЦикла;
			ТекстЗапроса = ТекстЗапросаТЧ + "
			|;
			|	ВЫБРАТЬ
			|	ВТ_АналитикиТЧ.Ссылка,
			|	ВТ_АналитикиТЧ.СтатьяОборотов,
			//|	ВТ_АналитикиТЧ.абс_ТипСети,
			|	ВТ_АналитикиТЧ.абс_КВ,
			|	ВТ_АналитикиТЧ.абс_ТипКонтрагента,
			|	ВТ_АналитикиТЧ.абс_ТЭО,
			|	ВТ_АналитикиТЧ.абс_ЦФУ,
			|	ВТ_АналитикиТЧ.ttk_ОбъектБюджетирования
			|ПОМЕСТИТЬ ВТ_АналитикиПроверки
			|ИЗ
			|	ВТ_АналитикиТЧ КАК ВТ_АналитикиТЧ
			|
			|СГРУППИРОВАТЬ ПО
			|	ВТ_АналитикиТЧ.абс_ЦФУ,
			|	ВТ_АналитикиТЧ.ttk_ОбъектБюджетирования,
			|	ВТ_АналитикиТЧ.СтатьяОборотов,
			|	ВТ_АналитикиТЧ.Ссылка,
			|	ВТ_АналитикиТЧ.абс_ТипКонтрагента,
			//|	ВТ_АналитикиТЧ.абс_ТипСети,
			|	ВТ_АналитикиТЧ.абс_КВ,
			|	ВТ_АналитикиТЧ.абс_ТЭО
			|;
			|" + ТекстЗапроса;
			
			ПостроительОтчета.Текст = ТекстЗапроса;
			ПостроительОтчета.Параметры.Вставить("Ссылка", Ссылка);
			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры
// } Сторчевой А.Н. НФС 2018
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	Если НачалоМесяца(УниверсальныйОтчет.ДатаНач)<> УниверсальныйОтчет.ДатаНач и ЗначениеЗаполнено(УниверсальныйОтчет.ДатаНач) Тогда
		УниверсальныйОтчет.ДатаНач = НачалоМесяца(УниверсальныйОтчет.ДатаНач);
	КонецЕсли;
	
	Если КонецМесяца(УниверсальныйОтчет.ДатаКон)<> УниверсальныйОтчет.ДатаКон и ЗначениеЗаполнено(УниверсальныйОтчет.ДатаКон) Тогда
		УниверсальныйОтчет.ДатаКон = КонецМесяца(УниверсальныйОтчет.ДатаКон);
	КонецЕсли;

	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаНач",УниверсальныйОтчет.ДатаНач);	
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить("ДатаКон",УниверсальныйОтчет.ДатаКон);	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	Возврат "";
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	
	ДополнительныеПараметры = Неопределено;
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
 УниверсальныйОтчет.мРежимВводаПериода = 0;

 //АБС_Стрельцов+ добавлено: 17.10.2012
 мДобавлятьИзмерениеПроект = Истина;
 //АБС_Стрельцов-
 мДобавлятьИзмерениеСценарий = Ложь;
//АБС ВСТАВКА №44919 НАЧАЛО «26 июня 2014 г.», Пополитов
мДелаемОтборПоСценариюВСписке = Ложь;
мЗаголовокФормыПереименовать  = "";
//\\АБС ВСТАВКА №44919 КОНЕЦ

#КонецЕсли
