#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

Процедура СформироватьОтчет(Знач СтруктураПараметров, АдресХранилища) Экспорт

	Если ЗначениеЗаполнено(СтруктураПараметров.КонтрагентДляОтбора)
		ИЛИ СтруктураПараметров.ВыводитьПокупателейПоАвансам
		ИЛИ СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтандартнаяФорма = Ложь;
	Иначе
		СтандартнаяФорма = Истина;
	КонецЕсли;

	СтруктураПараметров.Вставить("СформироватьОтчетПоСтандартнойФорме", СтандартнаяФорма);
	
	СписокОрганизаций = Новый СписокЗначений;
	
	Если СтруктураПараметров.ВключатьОбособленныеПодразделения Тогда
		СписокОрганизаций = ОбщегоНазначения.ПолучитьСписокОбособленныхПодразделенийОрганизации(
			СтруктураПараметров.Организация);
	//АБС ИЗМЕНЕНИЕ Навценя 28.04.2015
	ИначеЕсли СтруктураПараметров.Свойство("СписокОрганизаций") Тогда 
		Если ТипЗнч(СтруктураПараметров.СписокОрганизаций) = Тип("СписокЗначений") Тогда 
			СписокОрганизаций.ЗагрузитьЗначения(СтруктураПараметров.СписокОрганизаций.ВыгрузитьЗначения());	
		КонецЕсли;
	КонецЕсли;
	//АБС ИЗМЕНЕНИЕ КОНЕЦ	
	
	СписокОрганизаций.Добавить(СтруктураПараметров.Организация);
	
	СтруктураПараметров.Вставить("СписокОрганизаций", СписокОрганизаций);
	СтруктураПараметров.Вставить("ЗаписьДополнительногоЛиста", Ложь);
	// {{ТТК Сладков А. Заявка № 24.05.2016 начало
	СтруктураПараметров.Вставить("ЗаполнятьРаздел8ПоДаннымРегистраСведений",ЛОЖЬ);
	// }}ТТК Сладков А. Заявка № 24.05.2016 окончание
// +++ввв 01.06.2016 г.
	Если НЕ СтруктураПараметров.Свойство("ЗаполнятьРаздел89СУровнемПроверки") Тогда 
		СтруктураПараметров.Вставить("ЗаполнятьРаздел89СУровнемПроверки",3); // Без проверки ошибок
	КонецЕсли;
// ---ввв 01.06.2016 г.	
	
	ИнициализироватьТаблицыДляДекларацииПоНДС(СтруктураПараметров);
	
	СтруктураПараметров.СписокСформированныхЛистов.Очистить();
	СписокСообщений = Новый СписокЗначений();
	
	Если НЕ (СтруктураПараметров.ВыводитьТолькоДопЛисты И СтруктураПараметров.ФормироватьДополнительныеЛисты) Тогда
		
		СписокСчетовФактур = Неопределено;
// {{KM WARE Семенов И.С. Заявка №33854 27.07.2015 начало    
// теперь данные в книге покупок и декларации совпадать должны.

// +++ввв 06.04.2016 г.
//		Результат = абс_УчетНДС.ПолучитьЗаписиКнигиПокупок(СписокСчетовФактур, СтруктураПараметров);
////		Результат = УчетНДС.ПолучитьЗаписиКнигиПокупок(СписокСчетовФактур, СтруктураПараметров);
//// }}KM WARE Семенов И.С. Заявка №33854 27.07.2015 окончание
//	
//		СформироватьОсновнойРаздел(СтруктураПараметров, Результат, СписокСчетовФактур);
		Результат = абс_УчетНДС.ПолучитьЗаписиКнигиПокупок(СписокСчетовФактур, СтруктураПараметров);
		СформироватьОсновнойРаздел(СтруктураПараметров, Результат, СписокСчетовФактур);
// ---ввв 06.04.2016 г.
		
	КонецЕсли;
		
	// Проверка наличия дополнительных листов за текущий период
	СтруктураПараметров = УчетНДС.ПроверитьНаличиеДопЛистовКнигиПокупок(СтруктураПараметров);
	
	Если СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод ИЛИ НЕ СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета были внесены изменения в предшествующие налоговые периоды. 
				|Дополнительные листы по корректируемым налоговым периодам, в которые внесены изменения, можно построить в текущем отчете. 
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за корректируемый период""'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И НЕ СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в последующих налоговых периодах. 
				|Построение дополнительных листов за текущий налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	Если НЕ СтруктураПараметров.ДополнительныеЛистыЗаТекущийПериод ИЛИ НЕ СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		Если СтруктураПараметров.ТекущийПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета есть изменения, внесенные в последующих налоговых периодах. 
				|Дополнительные листы по текущему налоговому периоду можно построить в текущем отчете.
				|Для этого необходимо взвести флажок ""Формировать дополнительные листы"" и выбрать значение ""за текущий период""!'"));
		КонецЕсли;
		Если СтруктураПараметров.ФормироватьДополнительныеЛисты И НЕ СтруктураПараметров.КорректируемыйПериод Тогда
			СписокСообщений.Добавить(НСтр("ru = 'В указанном периоде отчета не вносились изменения в предыдущие налоговые периоды. 
				|Построение дополнительных листов за корректируемый налоговый период не требуется'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураПараметров.ФормироватьДополнительныеЛисты Тогда
		
		СписокСчетовФактур = Неопределено;
		СтруктураПараметров.ЗаписьДополнительногоЛиста = Истина;
		
		// Получение записей дополнительных листов
		Результат = УчетНДС.ПолучитьЗаписиДополнительныхЛистовКнигиПокупок(СписокСчетовФактур, СтруктураПараметров);
		СформироватьДополнительныеЛисты(СтруктураПараметров, Результат, СписокСчетовФактур);
		
	КонецЕсли;
	
	Результат = Новый Структура(
		"СписокСформированныхЛистов,СписокСообщений,
		|ТаблицаРаздел8,ТаблицаРаздел81,ТабличныйДокументРаздел81,
		|ИтогиРаздел8,ИтогиРаздел81",
			СтруктураПараметров.СписокСформированныхЛистов,
			СписокСообщений,
			СтруктураПараметров.ТаблицаРаздел8,
			СтруктураПараметров.ТаблицаРаздел81,
			СтруктураПараметров.ТабличныйДокументРаздел81,
			СтруктураПараметров.ИтогиРаздел8,
			СтруктураПараметров.ИтогиРаздел81);
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры
	
Процедура СформироватьОсновнойРаздел(СтруктураПараметров, Результат, СписокСчетовФактур);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупок";
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать = Истина;

	ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(СтруктураПараметров.КонецПериода);
	Если ВерсияПостановленияНДС1137 = 3 Тогда
		// {{KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 начало
		// Если не формируем декларацию, то используем макет для выгрузки в Excel
		// {{Старый код:
		//Макет = ПолучитьОбщийМакет("КнигаПокупок735");
		// }}Новый код:
// +++ввв 28.03.2017 г.
		Если СтруктураПараметров.ЗаполнениеДекларации
		   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
			Макет = ПолучитьОбщийМакет("КнигаПокупок1137_2017");
		//Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации Тогда
// ---ввв 28.03.2017 г.
			Макет = ПолучитьОбщийМакет("КнигаПокупок735");	
		Иначе
			Макет = ПолучитьОбщийМакет("kmwr_КнигаПокупок735_Excel");	
		КонецЕсли;	
		// }}KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 окончание 
	Иначе
		Макет = ПолучитьОбщийМакет("КнигаПокупок1137");
	КонецЕсли;
	
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел8");
		ТабличныйДокумент.Вывести(Секция);
		Секция = Макет.ПолучитьОбласть("СтрокиДляПовтора");
		ТабличныйДокумент.Вывести(Секция);
		
	Иначе
		
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме Тогда
			Секция = Макет.ПолучитьОбласть("ШапкаИнформация");
			ТабличныйДокумент.Вывести(Секция);
		КонецЕсли;
		
		СведенияОбОрганизации = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
			СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
		НазваниеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			СведенияОбОрганизации, "ПолноеНаименование");;

		Секция = Макет.ПолучитьОбласть("Шапка");
		Секция.Параметры.УстановленныйОтбор = "";
		Секция.Параметры.НачалоПериода = Формат(СтруктураПараметров.НачалоПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.КонецПериода = Формат(СтруктураПараметров.КонецПериода, "ДФ=dd.MM.yyyy");
		Секция.Параметры.НазваниеОрганизации = НазваниеОрганизации;
		Секция.Параметры.ИННКППОрганизации = "" + СтруктураПараметров.Организация.ИНН 
			+ ?(НЕ ЗначениеЗаполнено(СтруктураПараметров.Организация.КПП), "", ("/" + СтруктураПараметров.Организация.КПП));
			
		Если НЕ СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме И СтруктураПараметров.ОтбиратьПоКонтрагенту Тогда
			Если ОбщегоНазначения.ОбъектЯвляетсяГруппой(СтруктураПараметров.КонтрагентДляОтбора) Тогда
				НадписьОтбор = НСтр("ru='Отбор: Контрагент в группе %1'");
			Иначе
				НадписьОтбор = НСтр("ru='Отбор: Контрагент = %1'");
			КонецЕсли;
			Секция.Параметры.УстановленныйОтбор = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НадписьОтбор, СтруктураПараметров.КонтрагентДляОтбора);
		КонецЕсли;
	
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЕсли;
	
	Если Результат.Пустой() Тогда
		
		Секция = Макет.ПолучитьОбласть("Всего");
		ТабличныйДокумент.Вывести(Секция);
		
		Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
			И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
			ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
		КонецЕсли;

		УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));

		СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураСекций = Новый Структура("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
	ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
		
	Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
		СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
		СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
	КонецЕсли;
	
	ИтогПоОрганизации = 0;
	
	УчетНДС.ПреобразоватьЗаписиКнигиПокупок(
		СтруктураПараметров, Результат, ТабличныйДокумент,
		СписокСчетовФактур, ИтогПоОрганизации, ПараметрыСтроки,
		СтруктураПараметров.ТаблицаРаздел8, СтруктураСекций);
	
	// Вывод всего
	
	Секция = Макет.ПолучитьОбласть("Всего");
	Секция.Параметры.Заполнить(ИтогПоОрганизации);
	
	ТабличныйДокумент.Вывести(Секция);
	
	Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме
		И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
		ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
	КонецЕсли;
	
	ИтогиРаздел8 = Новый Структура("СумНДСВсКПк");
	ИтогиРаздел8.СумНДСВсКПк = ИтогПоОрганизации.НДС;
	СтруктураПараметров.ИтогиРаздел8 = ИтогиРаздел8;
	
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область("СтрокиДляПовтора");
	
	УправлениеОтчетами.УстановитьКолонтитулыПоУмолчанию(ТабличныйДокумент, , Строка(глЗначениеПеременной("глТекущийПользователь")));

	СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Основной раздел'"));
	
КонецПроцедуры

Процедура СформироватьДополнительныеЛисты(СтруктураПараметров, Результат, СписокСчетовФактур)
	
	Перем ТабличныйДокумент;
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	НомерОтображаемогоПериода = 0;
	
	ДеревоЗаписей = Результат.Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	СтруктураПараметров.Вставить("СчетчикСтрокДопЛиста", 0);
	
	ИтогиРаздел81 = Новый Структура("СумНДСИтКПк,СумНДСИтП1Р8");

	ПараметрыПолученияИтогов = Новый Структура;
	ПараметрыПолученияИтогов.Вставить("НалоговыйПериод", НачалоКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("КонецНалоговогоПериода", КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("ДатаФормированияДопЛиста", КонецКвартала(СтруктураПараметров.НачалоПериода));
	ПараметрыПолученияИтогов.Вставить("СписокОрганизаций", СтруктураПараметров.СписокОрганизаций);
	
	ИтогПоКнигеПокупок = УчетНДС.ПолучитьИтогиЗаПериодКнигаПокупок(ПараметрыПолученияИтогов);
	ИтогиРаздел81.СумНДСИтКПк = ИтогПоКнигеПокупок.НДС;
	
	Для Каждого ИтогПоПериодам ИЗ ДеревоЗаписей.Строки Цикл;
		//++Готовцев КТТК 13.07.2018
		//Если  (ИтогПоПериодам.СуммаБезНДС20 + ИтогПоПериодам.СуммаБезНДС18 + ИтогПоПериодам.СуммаБезНДС10 + ИтогПоПериодам.НДС0 
		//	+ ИтогПоПериодам.СуммаСовсемБезНДС + ИтогПоПериодам.НДС20 + ИтогПоПериодам.НДС18 + ИтогПоПериодам.НДС10) = 0 ТОгда 
		//	Продолжить;
		//КонецЕсли;	
		//--Готовцев КТТК 13.07.2018

		НомерЛиста = 0;
		
		// Добавление новой страницы панели разделов для вывода доп. листа
		НомерОтображаемогоПериода = НомерОтображаемогоПериода + 1;
		НалоговыйПериод = ПредставлениеПериода(
			ИтогПоПериодам.НалоговыйПериод, КонецДня(ИтогПоПериодам.КонецНалоговогоПериода), "ФП = Истина");
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
		ТабличныйДокумент.АвтоМасштаб = Истина;
		ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаПокупокДопЛист";
		
		Для Каждого ИтогПоПериодамКорректировки ИЗ ИтогПоПериодам.Строки Цикл
			
			ВерсияПостановленияНДС1137 = УчетНДС.ВерсияПостановленияНДС1137(
				ИтогПоПериодамКорректировки.КонецНалоговогоПериода);
			Если ВерсияПостановленияНДС1137 = 1 Тогда
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок1137");
			ИначеЕсли ВерсияПостановленияНДС1137 = 2 Тогда 	
				Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок952");
			Иначе
								
				// {{KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 начало
				// Если не формируем декларацию, то используем макет для выгрузки в Excel
				// {{Старый код:
				//Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок735");
				// }}Новый код:
// +++ввв 01.06.2017 г.
				Если СтруктураПараметров.ЗаполнениеДекларации
				   И СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок1137_2017");
				ИначеЕсли СтруктураПараметров.ЗаполнениеДекларации Тогда
				//Если СтруктураПараметров.ЗаполнениеДекларации Тогда
/// ---ввв 01.06.2017 г.
					Макет = ПолучитьОбщийМакет("ДополнительныйЛистКнигиПокупок735");	
				Иначе
					Макет = ПолучитьОбщийМакет("kmwr_ДополнительныйЛистКнигиПокупок735_Excel");	
				КонецЕсли;	
				// }}KM WARE Малыгин П.К. Заявка № 32299 14.10.2015 окончание 
				
				
			КонецЕсли; 
			
			Секция = Макет.ПолучитьОбласть("Строка");
			СтрокаИтого = Макет.ПолучитьОбласть("Итого");
			СтрокаВсего = Макет.ПолучитьОбласть("Всего");
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СекцияКонтрагент = Макет.ПолучитьОбласть("Контрагент");
				СекцияВсегоКонтрагент = Макет.ПолучитьОбласть("ВсегоКонтрагент");
			КонецЕсли;
			// Формирование шапки доп. листа
			ОкончаниеПредыдущегоРаздела = ТабличныйДокумент.ВысотаТаблицы;
			НомерЛиста = НомерЛиста + 1;
			
			СтруктураПараметров.Вставить("НалоговыйПериод", ИтогПоПериодамКорректировки.НалоговыйПериод);
			СтруктураПараметров.Вставить("КонецНалоговогоПериода", КонецКвартала(ИтогПоПериодамКорректировки.КонецНалоговогоПериода));
			СтруктураПараметров.Вставить("ДатаОформления", ИтогПоПериодамКорректировки.ДатаОформления);
			
			Если СтруктураПараметров.ЗаполнениеДекларации Тогда
				ВывестиШапкуРаздела81Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			Иначе
				УчетНДС.ВывестиШапкуДопЛиста(ТабличныйДокумент, Макет, СтруктураПараметров, НомерЛиста);
			КонецЕсли;
			
			СтруктураПараметров.ДатаФормированияДопЛиста = ИтогПоПериодамКорректировки.ДатаОформления;
			
			ИтогЗаПериод = УчетНДС.ПолучитьИтогиЗаПериодКнигаПокупок(СтруктураПараметров);
			
			СтрокаИтого.Параметры.Заполнить(ИтогЗаПериод);
			
			ТабличныйДокумент.Вывести(СтрокаИтого);
			
			СтруктураСекций = Новый Структура("СекцияСтрока", Макет.ПолучитьОбласть("Строка"));
			ПараметрыСтроки = СтруктураСекций.СекцияСтрока.Параметры;
			
			Если СтруктураПараметров.ГруппироватьПоКонтрагентам Тогда
				СтруктураСекций.Вставить("СекцияКонтрагент", Макет.ПолучитьОбласть("Контрагент"));
				СтруктураСекций.Вставить("СекцияВсегоКонтрагент", Макет.ПолучитьОбласть("ВсегоКонтрагент"));
			КонецЕсли;
			
			УчетНДС.ПреобразоватьЗаписиДополнительногоЛистаКнигиПокупок(
				СтруктураПараметров, ИтогПоПериодамКорректировки, ИтогЗаПериод, 
				ТабличныйДокумент, СписокСчетовФактур, ПараметрыСтроки, 
				СтруктураПараметров.ТаблицаРаздел81, СтруктураСекций);
			
			СтрокаВсего.Параметры.Заполнить(ИтогЗаПериод);
			ТабличныйДокумент.Вывести(СтрокаВсего);
			
			Если СтруктураПараметров.СформироватьОтчетПоСтандартнойФорме 
				И НЕ СтруктураПараметров.ЗаполнениеДекларации Тогда
				ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет);
			КонецЕсли;
			
		КонецЦикла;
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		СтруктураПараметров.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, Нстр("ru='Доп.листы за'") + " " + НалоговыйПериод);
			
	КонецЦикла;
	
	ИтогиРаздел81.СумНДСИтП1Р8 = ИтогЗаПериод.НДС; // Итог с учетом всех дополнительных листов за налоговый период
	
	СтруктураПараметров.ИтогиРаздел81 = ИтогиРаздел81;
	СтруктураПараметров.ТабличныйДокументРаздел81 = ТабличныйДокумент;
	
КонецПроцедуры

Процедура ВывестиШапкуРаздела81Декларации(ТабличныйДокумент, Макет, СтруктураПараметров, НомерДополнительногоЛиста)
	
	ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
	
	Если НомерДополнительногоЛиста = 1 Тогда
		Секция = Макет.ПолучитьОбласть("ШапкаРаздел81");
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("ШапкаРаздел81НомерЛиста");
	Секция.Параметры.НомерЛиста = НомерДополнительногоЛиста;
	Секция.Параметры.ДатаСоставления = Формат(СтруктураПараметров.ДатаОформления, "ДФ=dd.MM.yyyy");
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть("СтрокиДляПовтора");
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ВывестиПодвал(СтруктураПараметров, ТабличныйДокумент, Макет)
	
	СписокПоказателей = Новый Массив;
	СписокПоказателей.Добавить("ФИОРук");
	СписокПоказателей.Добавить("ФИО");
	
	СведенияОбОрганизации = РегламентированнаяОтчетность.ПолучитьСведенияОбОрганизации(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода, СписокПоказателей);
	СведенияОЮрФизЛице  = УправлениеКонтактнойИнформацией.СведенияОЮрФизЛице(
		СтруктураПараметров.Организация, СтруктураПараметров.КонецПериода);
	
	Если РегламентированнаяОтчетность.ЭтоПБОЮЛ(СтруктураПараметров.Организация) Тогда
		ИмяРук = "";
		ИмяОрг = СведенияОбОрганизации.ФИО;
		Свидетельство = ФормированиеПечатныхФорм.ОписаниеОрганизации(СведенияОЮрФизЛице, "Свидетельство,");
	Иначе
		ИмяРук = СведенияОбОрганизации.ФИОРук;
		ИмяОрг = "";
		Свидетельство = "";
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Подвал");
	Секция.Параметры.ИмяРук        = ИмяРук;
	Секция.Параметры.ИмяОрг        = ИмяОрг;
	Секция.Параметры.Свидетельство = Свидетельство;
	
	ТабличныйДокумент.Вывести(Секция);
	
КонецПроцедуры

Процедура ИнициализироватьТаблицыДляДекларацииПоНДС(СтруктураПараметров)

	Раздел8 = Новый ТаблицаЗначений;
	
	Раздел8.Колонки.Добавить("НомерПор", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 0)));
	
	Раздел8.Колонки.Добавить("НомСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел8.Колонки.Добавить("ДатаСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
		
	Раздел8.Колонки.Добавить("НомИспрСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел8.Колонки.Добавить("ДатаИспрСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел8.Колонки.Добавить("НомКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Раздел8.Колонки.Добавить("ДатаКСчФПрод", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
	Раздел8.Колонки.Добавить("НомИспрКСчФ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(3, 0)));
	Раздел8.Колонки.Добавить("ДатаИспрКСчФ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(10)));
	
// +++ввв 20.04.2017 г.
	//Раздел8.Колонки.Добавить("НомТД", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	Если СтруктураПараметров.ЗаполнениеДекларации Тогда
		Если СтруктураПараметров.ПравилаЗаполнения = "2015Кв1" Тогда
			Раздел8.Колонки.Добавить("НомТД", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
		ИначеЕсли СтруктураПараметров.ПравилаЗаполнения = "2017Кв1" Тогда
			Раздел8.Колонки.Добавить("РегНомТД", Новый ОписаниеТипов("Массив"));
		КонецЕсли;
	КонецЕсли;
// ---ввв 20.04.2017 г.
	Раздел8.Колонки.Добавить("ОКВ", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	
	Раздел8.Колонки.Добавить("СтоимПокупВ", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	Раздел8.Колонки.Добавить("СумНДСВыч", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(19, 2)));
	
	Раздел8.Колонки.Добавить("КодВидОпер", Новый ОписаниеТипов("Массив"));
	
	Раздел8.Колонки.Добавить("ДокПдтвУпл", Новый ОписаниеТипов("Массив"));
	Раздел8.Колонки.Добавить("ДатаУчТов", Новый ОписаниеТипов("Массив"));
	
	Раздел8.Колонки.Добавить("СвПрод", Новый ОписаниеТипов("Массив"));
	Раздел8.Колонки.Добавить("СвПос"); // Тип не задается
	
	Раздел81 = Раздел8.СкопироватьКолонки();
	Раздел81.Колонки.СумНДСВыч.Имя = "СумНДС";
	
	СтруктураПараметров.Вставить("ТаблицаРаздел8", Раздел8);
	СтруктураПараметров.Вставить("ТаблицаРаздел81", Раздел81);
	СтруктураПараметров.Вставить("ТабличныйДокументРаздел81");
	
	ИтогиРаздел8 = Новый Структура("СумНДСВсКПк");
	ИтогиРаздел81 = Новый Структура("СумНДСИтКПк,СумНДСИтП1Р8");
	
	СтруктураПараметров.Вставить("ИтогиРаздел8", ИтогиРаздел8);
	СтруктураПараметров.Вставить("ИтогиРаздел81", ИтогиРаздел81);
	
КонецПроцедуры

#КонецЕсли