#Если Клиент Тогда
	
////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ НАЧАЛЬНОЙ НАСТРОЙКИ ОТЧЕТА

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство                                                                 КАК ОсновноеСредство,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток                                                        КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток                                                         КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот                                                                  КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток                                                      КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток                                                       КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияОборот                                                                КАК АмортизацияОборот,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ
	|	СтоимостьОСОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.СтоимостьОС.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {ОсновноеСредство.* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбОС.ОсновноеСредство            КАК ОсновноеСредство,
	|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	РегСведенияОбОС.ПервоначальнаяСтоимость     КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ
	|	РегСведенияОбОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОС
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.МОЛ              КАК МОЛ,
	|	МестонахождениеОС.Местонахождение  КАК Местонахождение
	|ПОМЕСТИТЬ
	|	МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(&ДатаКон, ) КАК МестонахождениеОС
	|;
	|
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СобытияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СобытияОСОрганизаций.Событие  КАК Событие
	|ПОМЕСТИТЬ
	|	СобытияОСОрганизаций
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&ДатаКон, ) КАК СобытияОСОрганизаций
	|;
	| ////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.ДатаСостояния СнятоСУчета
	|ПОМЕСТИТЬ врСостоянияОСОрганизаций
	|ИЗ
	|	РегистрСведений.СостоянияОС КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Активность
	|   и СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|;	
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	врСостоянияОСОрганизаций.СнятоСУчета КАК СнятоСУчета,
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(СтоимостьОСОстаткиИОбороты.ОсновноеСредство),
	|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьОСОстаткиИОбороты.ОстаточнаяСтоимость КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство.Код КАК ИнвентарныйНомер,
	|	СобытияОСОрганизаций.Событие КАК Событие,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Подразделение
	|	//ПОЛЯ_СВОЙСТВА
	|	//ПОЛЯ_КАТЕГОРИИ
	|{ВЫБРАТЬ
	|	ОсновноеСредство.*,
	|	ИнвентарныйНомер,
	|	МОЛ.*,
	|	Событие.*,
	|	Подразделение.*,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,СнятоСУчета,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИЗ
	|	СтоимостьОСОстаткиИОбороты
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОС КАК РегСостояниеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСостояниеОС.ОсновноеСредство
	|			И (РегСостояниеОС.Состояние = &СостояниеВводВЭксплуатацию)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ врСостоянияОСОрганизаций КАК врСостоянияОСОрганизаций
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = врСостоянияОСОрганизаций.ОсновноеСредство}	
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОС.ОсновноеСредство}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ СобытияОСОрганизаций
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СобытияОСОрганизаций.ОсновноеСредство}	
	|	//СОЕДИНЕНИЯ
	|{ГДЕ врСостоянияОСОрганизаций.СнятоСУчета как СнятоСУчета,
	|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияОборот КАК АмортизацияОборот,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство.Код КАК ИнвентарныйНомер,
	|	СобытияОСОрганизаций.Событие КАК Событие,
	|	МестонахождениеОС.МОЛ.* КАК МОЛ,
	|	МестонахождениеОС.Местонахождение.*  КАК Подразделение
	|	//УСЛОВИЯ_СВОЙСТВА
	|	//УСЛОВИЯ_КАТЕГОРИИ
	|}

	|{УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство.*,
	|	ИнвентарныйНомер,
	|	МОЛ.*,
	|	Событие.*,
	|	Подразделение.*,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	АмортизацияОборот,
	|	ОстаточнаяСтоимость
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}

	|ИТОГИ
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(СнятоСУчета),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	МАКСИМУМ(ИнвентарныйНомер),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(Подразделение),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(СтоимостьОборот),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(АмортизацияОборот),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ПервоначальнаяСтоимость)
	|	//ИТОГИ_СВОЙСТВА
	|	//ИТОГИ_КАТЕГОРИИ
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	ОсновноеСредство.*,
	|	Подразделение.*,
	|	МОЛ.*,
	|	Событие.*
	|	//ПСЕВДОНИМЫ_СВОЙСТВА
	|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	|}";

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьОСОстаткиИОбороты.ОсновноеСредство" , "ОсновноеСредство","Основное средство", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",       "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости ОС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата ввода в эксплуатацию");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ИнвентарныйНомер","Инвентарный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Событие","Событие"); 
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СнятоСУчета","Снято с учета");
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	//УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Подразделение");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ОсновноеСредство");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Событие");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("ОсновноеСредство");
	УниверсальныйОтчет.ДобавитьОтбор("Событие");
	УниверсальныйОтчет.ДобавитьОтбор("СнятоСУчета");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ИнвентарныйНомер", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Событие", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СнятоСУчета", "ОсновноеСредство");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СнятоСУчета",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиУпр()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиБух(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	
	
	
	
	"ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации
	|ПОМЕСТИТЬ СпособыОтраженияОС
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования
	|ПОМЕСТИТЬ ПараметрыАмортизацииОС
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	ВЫБОР
	|		КОГДА СтоимостьОСОстаткиИОбороты.АмортизацияОборот < 0
	|			ТОГДА 0
	|		ИНАЧЕ СтоимостьОСОстаткиИОбороты.АмортизацияОборот
	|	КОНЕЦ КАК Амортизация,
	|	ВЫБОР
	|		КОГДА СтоимостьОСОстаткиИОбороты.АмортизацияОборот < 0
	|			ТОГДА СтоимостьОСОстаткиИОбороты.АмортизацияОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияСписание,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	ЛОЖЬ КАК ПервоначальнаяСтоимостьНулевая
	|ПОМЕСТИТЬ СтоимостьОСОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.СтоимостьОСБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбОС.ОсновноеСредство КАК ОсновноеСредство,
	|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ РегСведенияОбОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.Обособленное,
	|	МестонахождениеОС.Проект
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК МестонахождениеОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СобытияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СобытияОСОрганизаций.Событие КАК Событие
	|ПОМЕСТИТЬ СобытияОСОрганизаций
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&ДатаКон, ) КАК СобытияОСОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.Организация,
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.ДатаСостояния КАК СнятоСУчета,
	|	ВЫБОР
	|		КОГДА (ВЫРАЗИТЬ(СостоянияОСОрганизаций.ДатаСостояния КАК ДАТА)) <= (ВЫРАЗИТЬ(&НачДата КАК ДАТА))
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК АктивноВПериодОтбора
	|ПОМЕСТИТЬ врСостоянияОСОрганизаций
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Активность
	|	И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	врСостоянияОСОрганизаций.СнятоСУчета КАК СнятоСУчета,
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	ПОДСТРОКА(СтоимостьОСОстаткиИОбороты.ОсновноеСредство.Комментарий, 1, 100) КАК ОсновноеСредствоКомментарий,
	|	ПОДСТРОКА(СтоимостьОСОстаткиИОбороты.ОсновноеСредство.АдресМестонахождения, 1, 150) КАК ОсновноеСредствоАдресМестоНахождения,
	|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(СтоимостьОСОстаткиИОбороты.ОсновноеСредство),
	|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.Амортизация КАК Амортизация,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияСписание КАК АмортизацияСписание,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СобытияОСОрганизаций.Событие КАК Событие,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Подразделение,
	|	СпособыОтраженияОС.СпособыОтраженияРасходовПоАмортизации,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	МестонахождениеОС.Обособленное,
	|	МестонахождениеОС.Проект,
	|	СтоимостьОСОстаткиИОбороты.ПервоначальнаяСтоимостьНулевая КАК ПервоначальнаяСтоимостьНулевая
	|{ВЫБРАТЬ
	|	СнятоСУчета,
	|	ОсновноеСредство.*,
	|	ОсновноеСредствоКомментарий,
	|	ОсновноеСредствоАдресМестоНахождения,
	|	Организация.*,
	|	МОЛ.*,
	|	Событие.*,
	|	Подразделение.*,
	|	ИнвентарныйНомер,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	Амортизация,
	|	АмортизацияСписание,
	|	ОстаточнаяСтоимость,
	|	СпособыОтраженияРасходовПоАмортизации.*,
	|	СрокПолезногоИспользования,
	|	Обособленное.*,
	|	Проект.*,
	|	ПервоначальнаяСтоимостьНулевая}
	|ИЗ
	|	СтоимостьОСОстаткиИОбороты КАК СтоимостьОСОстаткиИОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК РегСостояниеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСостояниеОС.ОсновноеСредство
	|			И (РегСостояниеОС.Состояние = &СостояниеВводВЭксплуатацию)
	|		ЛЕВОЕ СОЕДИНЕНИЕ врСостоянияОСОрганизаций КАК врСостоянияОСОрганизаций
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = врСостоянияОСОрганизаций.ОсновноеСредство
	|			И СтоимостьОСОстаткиИОбороты.Организация = врСостоянияОСОрганизаций.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОС КАК РегСведенияОбОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СобытияОСОрганизаций КАК СобытияОСОрганизаций
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СобытияОСОрганизаций.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОС КАК ПараметрыАмортизацииОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = ПараметрыАмортизацииОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияОС КАК СпособыОтраженияОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СпособыОтраженияОС.ОсновноеСредство
	|ГДЕ
	|	ЕСТЬNULL(врСостоянияОСОрганизаций.АктивноВПериодОтбора, ИСТИНА)
	|{ГДЕ
	|	врСостоянияОСОрганизаций.СнятоСУчета КАК СнятоСУчета,
	|	СтоимостьОСОстаткиИОбороты.Организация.* КАК Организация,
	|	МестонахождениеОС.МОЛ.* КАК МОЛ,
	|	СтоимостьОСОстаткиИОбороты.ПервоначальнаяСтоимостьНулевая,
	|	МестонахождениеОС.Местонахождение.* КАК Подразделение,
	|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	(СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток) КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	СобытияОСОрганизаций.Событие КАК Событие,
	|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования,
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство.*}
	|{УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	МОЛ.*,
	|	Событие.*,
	|	Подразделение.*,
	|	ИнвентарныйНомер,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	Амортизация,
	|	АмортизацияСписание,
	|	ОстаточнаяСтоимость,
	|	СрокПолезногоИспользования}
	|ИТОГИ
	|	МАКСИМУМ(СнятоСУчета),
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(СтоимостьОборот),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(Амортизация),
	|	СУММА(АмортизацияСписание),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ПервоначальнаяСтоимость),
	|	МАКСИМУМ(ИнвентарныйНомер),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(Подразделение),
	|	СУММА(СрокПолезногоИспользования),
	|	МИНИМУМ(ПервоначальнаяСтоимостьНулевая)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	Подразделение.*,
	|	МОЛ.*,
	|	Событие.*,
	|	СпособыОтраженияРасходовПоАмортизации.*,
	|	СрокПолезногоИспользования,
	|	Обособленное.*,
	|	Проект.*}";

	//"ВЫБРАТЬ
	//|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
	//|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации
	//|ПОМЕСТИТЬ СпособыОтраженияОС
	//|ИЗ
	//|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
	//|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования
	//|ПОМЕСТИТЬ ПараметрыАмортизацииОС
	//|ИЗ
	//|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	//|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияПриход КАК Амортизация,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияРасход КАК АмортизацияСписание,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	//|	ЛОЖЬ КАК ПервоначальнаяСтоимостьНулевая
	//|ПОМЕСТИТЬ СтоимостьОСОстаткиИОбороты
	//|ИЗ
	//|	РегистрНакопления.СтоимостьОСБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
	//|
	//|ОБЪЕДИНИТЬ ВСЕ
	//|
	//|ВЫБРАТЬ
	//|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство,
	//|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация,
	//|	0,
	//|	0,
	//|	0,
	//|	0,
	//|	0,
	//|	0,
	//|	0,
	//|	0,
	//|	ИСТИНА
	//|ИЗ
	//|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	//|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СтоимостьОСБухгалтерскийУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, Регистратор, , {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
	//|		ПО (СтоимостьОСОстаткиИОбороты.ОсновноеСредство = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство)
	//|			И (СтоимостьОСОстаткиИОбороты.Организация = ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Организация)
	//|ГДЕ
	//|	СтоимостьОСОстаткиИОбороты.Регистратор ЕСТЬ NULL 
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	РегСведенияОбОС.ОсновноеСредство КАК ОсновноеСредство,
	//|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	//|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	//|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	//|ПОМЕСТИТЬ РегСведенияОбОС
	//|ИЗ
	//|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОС
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	//|	МестонахождениеОС.МОЛ КАК МОЛ,
	//|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	//|	МестонахождениеОС.Обособленное,
	//|	МестонахождениеОС.Проект
	//|ПОМЕСТИТЬ МестонахождениеОС
	//|ИЗ
	//|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК МестонахождениеОС
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	СобытияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	//|	СобытияОСОрганизаций.Событие КАК Событие
	//|ПОМЕСТИТЬ СобытияОСОрганизаций
	//|ИЗ
	//|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&ДатаКон, ) КАК СобытияОСОрганизаций
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ
	//|	СостоянияОСОрганизаций.Организация,
	//|	СостоянияОСОрганизаций.ОсновноеСредство,
	//|	СостоянияОСОрганизаций.ДатаСостояния КАК СнятоСУчета
	////АБС Шамов
	//|	,ВЫБОР КОГДА ВЫРАЗИТЬ(СостоянияОСОрганизаций.ДатаСостояния КАК Дата) <= ВЫРАЗИТЬ(&НачДата КАК Дата) Тогда ЛОЖЬ ИНАЧЕ ИСТИНА КОНЕЦ КАК АктивноВПериодОтбора
	////\\
	//|ПОМЕСТИТЬ врСостоянияОСОрганизаций
	//|ИЗ
	//|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	//|ГДЕ
	//|	СостоянияОСОрганизаций.Активность
	//|	И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	//|;
	//|
	//|////////////////////////////////////////////////////////////////////////////////
	//|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	//|	врСостоянияОСОрганизаций.СнятоСУчета КАК СнятоСУчета,
	//|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	//|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	//|	ПРЕДСТАВЛЕНИЕ(СтоимостьОСОстаткиИОбороты.ОсновноеСредство),
	//|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
	//|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.Амортизация КАК Амортизация,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияСписание КАК АмортизацияСписание,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	//|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	//|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	//|	СобытияОСОрганизаций.Событие КАК Событие,
	//|	МестонахождениеОС.МОЛ КАК МОЛ,
	//|	МестонахождениеОС.Местонахождение КАК Подразделение,
	//|	СпособыОтраженияОС.СпособыОтраженияРасходовПоАмортизации,
	//|	ПараметрыАмортизацииОС.СрокПолезногоИспользования,
	//|	МестонахождениеОС.Обособленное,
	//|	МестонахождениеОС.Проект,
	//|	СтоимостьОСОстаткиИОбороты.ПервоначальнаяСтоимостьНулевая КАК ПервоначальнаяСтоимостьНулевая
	//|	//ПОЛЯ_СВОЙСТВА
	//|	//ПОЛЯ_КАТЕГОРИИ
	//|{ВЫБРАТЬ
	//|	СнятоСУчета,
	//|	ОсновноеСредство.*,
	//|	Организация.*,
	//|	МОЛ.*,
	//|	Событие.*,
	//|	Подразделение.*,
	//|	ИнвентарныйНомер,
	//|	СпособНачисления,
	//|	ДатаВводаВЭксплуатацию,
	//|	ПервоначальнаяСтоимость,
	//|	СтоимостьНачальныйОстаток,
	//|	СтоимостьКонечныйОстаток,
	//|	СтоимостьОборот,
	//|	АмортизацияНачальныйОстаток,
	//|	АмортизацияКонечныйОстаток,
	//|	Амортизация,
	//|	АмортизацияСписание,
	//|	ОстаточнаяСтоимость,
	//|	СпособыОтраженияРасходовПоАмортизации.*,
	//|	СрокПолезногоИспользования,
	//|	Обособленное.*,
	//|	Проект.*,
	//|	ПервоначальнаяСтоимостьНулевая
	//|	//ПСЕВДОНИМЫ_СВОЙСТВА
	//|	//ПСЕВДОНИМЫ_КАТЕГОРИИ}
	//|ИЗ
	//|	СтоимостьОСОстаткиИОбороты КАК СтоимостьОСОстаткиИОбороты
	//|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК РегСостояниеОС
	//|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСостояниеОС.ОсновноеСредство
	//|			И (РегСостояниеОС.Состояние = &СостояниеВводВЭксплуатацию)}
	//|		{ЛЕВОЕ СОЕДИНЕНИЕ врСостоянияОСОрганизаций КАК врСостоянияОСОрганизаций
	//|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = врСостоянияОСОрганизаций.ОсновноеСредство
	//|			И СтоимостьОСОстаткиИОбороты.Организация = врСостоянияОСОрганизаций.Организация}
	//|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОС КАК РегСведенияОбОС
	//|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОС.ОсновноеСредство}
	//|		{ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	//|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство}
	//|		{ЛЕВОЕ СОЕДИНЕНИЕ СобытияОСОрганизаций КАК СобытияОСОрганизаций
	//|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СобытияОСОрганизаций.ОсновноеСредство}
	//|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОС КАК ПараметрыАмортизацииОС
	//|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = ПараметрыАмортизацииОС.ОсновноеСредство
	//|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияОС КАК СпособыОтраженияОС
	//|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СпособыОтраженияОС.ОсновноеСредство
	//|	//СОЕДИНЕНИЯ
	////АБС Шамов
	//|	ГДЕ ЕСТЬNULL(врСостоянияОСОрганизаций.АктивноВПериодОтбора, ИСТИНА)
	////\\
	//|{ГДЕ
	//|	врСостоянияОСОрганизаций.СнятоСУчета КАК СнятоСУчета,
	//|	СтоимостьОСОстаткиИОбороты.Организация.* КАК Организация,
	//|	МестонахождениеОС.МОЛ.* КАК МОЛ,
	//|	СтоимостьОСОстаткиИОбороты.ПервоначальнаяСтоимостьНулевая,
	//|	МестонахождениеОС.Местонахождение.* КАК Подразделение,
	//|	РегСведенияОбОС.СпособНачисленияАмортизации КАК СпособНачисления,
	//|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	//|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	//|	(СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток) КАК ОстаточнаяСтоимость,
	//|	РегСведенияОбОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	//|	СобытияОСОрганизаций.Событие КАК Событие,
	//|	РегСведенияОбОС.ИнвентарныйНомер КАК ИнвентарныйНомер
	//|	//УСЛОВИЯ_СВОЙСТВА
	//|	//УСЛОВИЯ_КАТЕГОРИИ}
	//|{УПОРЯДОЧИТЬ ПО
	//|	ОсновноеСредство.*,
	//|	Организация.*,
	//|	МОЛ.*,
	//|	Событие.*,
	//|	Подразделение.*,
	//|	ИнвентарныйНомер,
	//|	СпособНачисления,
	//|	ДатаВводаВЭксплуатацию,
	//|	ПервоначальнаяСтоимость,
	//|	СтоимостьНачальныйОстаток,
	//|	СтоимостьКонечныйОстаток,
	//|	СтоимостьОборот,
	//|	АмортизацияНачальныйОстаток,
	//|	АмортизацияКонечныйОстаток,
	//|	Амортизация,
	//|	АмортизацияСписание,
	//|	ОстаточнаяСтоимость
	//|	//ПСЕВДОНИМЫ_СВОЙСТВА
	//|	//ПСЕВДОНИМЫ_КАТЕГОРИИ
	//|}
	//|ИТОГИ
	//|	МАКСИМУМ(СнятоСУчета),
	//|	МАКСИМУМ(СпособНачисления),
	//|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	//|	СУММА(СтоимостьНачальныйОстаток),
	//|	СУММА(СтоимостьКонечныйОстаток),
	//|	СУММА(СтоимостьОборот),
	//|	СУММА(АмортизацияНачальныйОстаток),
	//|	СУММА(АмортизацияКонечныйОстаток),
	//|	СУММА(Амортизация),
	//|	СУММА(АмортизацияСписание),
	//|	СУММА(ОстаточнаяСтоимость),
	//|	СУММА(ПервоначальнаяСтоимость),
	//|	МАКСИМУМ(ИнвентарныйНомер),
	//|	МАКСИМУМ(МОЛ),
	//|	МАКСИМУМ(Подразделение),
	//|	МИНИМУМ(ПервоначальнаяСтоимостьНулевая)
	//|	//ИТОГИ_СВОЙСТВА
	//|	//ИТОГИ_КАТЕГОРИИ
	//|ПО
	//|	ОБЩИЕ
	//|{ИТОГИ ПО
	//|	ОсновноеСредство.*,
	//|	Организация.*,
	//|	Подразделение.*,
	//|	МОЛ.*,
	//|	Событие.*,
	//|	СпособыОтраженияРасходовПоАмортизации.*,
	//|	СрокПолезногоИспользования,
	//|	Обособленное.*,
	//|	Проект.*
	//|	//ПСЕВДОНИМЫ_СВОЙСТВА
	//|	//ПСЕВДОНИМЫ_КАТЕГОРИИ}";
	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьОСОстаткиИОбороты.ОсновноеСредство" , "ОсновноеСредство","Основное средство", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	 УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",       "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости ОС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата ввода в эксплуатацию");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Амортизация", "Амортизация (начисление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияСписание", "Амортизация (списание)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ИнвентарныйНомер","Инвентарный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Событие","Событие"); 
    УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СнятоСУчета","Снято с учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимостьНулевая","Первоначальная стоимость нулевая");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СрокПолезногоИспользования","Срок полезного использования"); // КТТК Ермолов Е.Л.  22.04.2016 Крисман
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",       "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредствоКомментарий",   "Основное средство комментарий");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредствоАдресМестоНахождения",   "Адрес местонахождения основного средства");
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", 	"на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	//УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "Амортизация",           		"Амортизация (начисление)",       Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияСписание",       	"Амортизация (списание)",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  	"на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ОсновноеСредство");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Событие");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("ОсновноеСредство");
	УниверсальныйОтчет.ДобавитьОтбор("Событие");
	УниверсальныйОтчет.ДобавитьОтбор("СнятоСУчета");
	УниверсальныйОтчет.ДобавитьОтбор("ПервоначальнаяСтоимостьНулевая");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	
	// Установка связи полей и измерений
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Подразделение", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ИнвентарныйНомер", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Событие", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Обособленное", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Проект", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СнятоСУчета", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ПервоначальнаяСтоимостьНулевая", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СрокПолезногоИспользования", "ОсновноеСредство");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СнятоСУчета",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Обособленное",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Проект",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ПервоначальнаяСтоимостьНулевая",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ОсновноеСредствоКомментарий",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ОсновноеСредствоАдресМестоНахождения",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиБух()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройкиНал(ДополнительныеПараметры = Неопределено)
	
	// Дополнительные параметры, переданные из отчета, вызвавшего расшифровку.
	// Информация, передаваемая в переменной ДополнительныеПараметры, может быть использована
	// для реализации специфичных для данного отчета параметрических настроек.
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.ОсновноеСредство,
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент
	|ПОМЕСТИТЬ СпециальныйКоэффициентНалоговыйУчет
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(&ДатаКон, ) КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации
	|ПОМЕСТИТЬ СпособыОтраженияОС
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчет.СрезПоследних(&ДатаКон, ) КАК СпособыОтраженияРасходовПоАмортизацииОСНалоговыйУчетСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования
	|ПОМЕСТИТЬ ПараметрыАмортизацииОС
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(&ДатаКон, ) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	ВЫБОР
	|		КОГДА СтоимостьОСОстаткиИОбороты.АмортизацияОборот < 0
	|			ТОГДА 0
	|		ИНАЧЕ СтоимостьОСОстаткиИОбороты.АмортизацияОборот
	|	КОНЕЦ КАК Амортизация,
	|	ВЫБОР
	|		КОГДА СтоимостьОСОстаткиИОбороты.АмортизацияОборот < 0
	|			ТОГДА СтоимостьОСОстаткиИОбороты.АмортизацияОборот
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК АмортизацияСписание,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	ЛОЖЬ КАК ПервоначальнаяСтоимостьНулевая
	|ПОМЕСТИТЬ СтоимостьОСОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.СтоимостьОСНалоговыйУчет.ОстаткиИОбороты(&ДатаНач, &ДатаКон, , , {(ОсновноеСредство).* КАК ОсновноеСредство}) КАК СтоимостьОСОстаткиИОбороты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА РегСведенияОбОС.МетодНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.МетодыНачисленияАмортизации.Нелинейный)
	|		ИНАЧЕ РегСведенияОбОС.МетодНачисленияАмортизации
	|	КОНЕЦ КАК МетодНачисленияАмортизации,
	|	РегСведенияОбОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ
	|ПОМЕСТИТЬ РегСведенияОбОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегСведенияОбОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	РегСведенияОбОСБУ.ИнвентарныйНомер КАК ИнвентарныйНомер
	|ПОМЕСТИТЬ РегСведенияОбОСБУ
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК РегСведенияОбОСБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение,
	|	МестонахождениеОС.Обособленное,
	|	МестонахождениеОС.Проект
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(&ДатаКон, ) КАК МестонахождениеОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СобытияОСОрганизаций.ОсновноеСредство КАК ОсновноеСредство,
	|	СобытияОСОрганизаций.Событие КАК Событие
	|ПОМЕСТИТЬ СобытияОСОрганизаций
	|ИЗ
	|	РегистрСведений.СобытияОСОрганизаций.СрезПоследних(&ДатаКон, ) КАК СобытияОСОрганизаций
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизаций.Организация,
	|	СостоянияОСОрганизаций.ОсновноеСредство,
	|	СостоянияОСОрганизаций.ДатаСостояния КАК СнятоСУчета
	|ПОМЕСТИТЬ врСостоянияОСОрганизаций
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|ГДЕ
	|	СостоянияОСОрганизаций.Активность
	|	И СостоянияОСОрганизаций.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	врСостоянияОСОрганизаций.СнятоСУчета КАК СнятоСУчета,
	|	СтоимостьОСОстаткиИОбороты.ОсновноеСредство КАК ОсновноеСредство,
	|	СтоимостьОСОстаткиИОбороты.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕ(СтоимостьОСОстаткиИОбороты.ОсновноеСредство),
	|	РегСведенияОбОС.МетодНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.Амортизация КАК Амортизация,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияСписание КАК АмортизацияСписание,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимость,
	|	РегСведенияОбОСБУ.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СобытияОСОрганизаций.Событие КАК Событие,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Подразделение,
	|	СпособыОтраженияОС.СпособыОтраженияРасходовПоАмортизации,
	|	ПараметрыАмортизацииОС.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	СпециальныйКоэффициентНалоговыйУчет.СпециальныйКоэффициент,
	|	МестонахождениеОС.Обособленное,
	|	МестонахождениеОС.Проект,
	|	СтоимостьОСОстаткиИОбороты.ПервоначальнаяСтоимостьНулевая КАК ПервоначальнаяСтоимостьНулевая
	|{ВЫБРАТЬ
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	МОЛ.*,
	|	Событие.*,
	|	Подразделение.*,
	|	ИнвентарныйНомер,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	СнятоСУчета,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	ОстаточнаяСтоимость,
	|	СпособыОтраженияРасходовПоАмортизации.*,
	|	СрокПолезногоИспользования,
	|	СпециальныйКоэффициент,
	|	Амортизация,
	|	АмортизацияСписание,
	|	Обособленное.*,
	|	Проект.*,
	|	ПервоначальнаяСтоимостьНулевая}
	|ИЗ
	|	СтоимостьОСОстаткиИОбороты КАК СтоимостьОСОстаткиИОбороты
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СостоянияОСОрганизаций КАК РегСостояниеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСостояниеОС.ОсновноеСредство
	|			И (РегСостояниеОС.Состояние = &СостояниеВводВЭксплуатацию)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ врСостоянияОСОрганизаций КАК врСостоянияОСОрганизаций
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = врСостоянияОСОрганизаций.ОсновноеСредство
	|			И (РегСостояниеОС.Организация = врСостоянияОСОрганизаций.Организация)}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОСБУ КАК РегСведенияОбОСБУ
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОСБУ.ОсновноеСредство}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ РегСведенияОбОС КАК РегСведенияОбОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = РегСведенияОбОС.ОсновноеСредство}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство}
	|		{ЛЕВОЕ СОЕДИНЕНИЕ СобытияОСОрганизаций КАК СобытияОСОрганизаций
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СобытияОСОрганизаций.ОсновноеСредство}
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпособыОтраженияОС КАК СпособыОтраженияОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СпособыОтраженияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОС КАК ПараметрыАмортизацииОС
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = ПараметрыАмортизацииОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СпециальныйКоэффициентНалоговыйУчет КАК СпециальныйКоэффициентНалоговыйУчет
	|		ПО СтоимостьОСОстаткиИОбороты.ОсновноеСредство = СпециальныйКоэффициентНалоговыйУчет.ОсновноеСредство
	|{ГДЕ
	|	врСостоянияОСОрганизаций.СнятоСУчета КАК СнятоСУчета,
	|	СтоимостьОСОстаткиИОбороты.ПервоначальнаяСтоимостьНулевая,
	|	СтоимостьОСОстаткиИОбороты.Организация.* КАК Организация,
	|	МестонахождениеОС.МОЛ.* КАК МОЛ,
	|	МестонахождениеОС.Местонахождение.* КАК Подразделение,
	|	РегСведенияОбОС.МетодНачисленияАмортизации КАК СпособНачисления,
	|	РегСостояниеОС.ДатаСостояния КАК ДатаВводаВЭксплуатацию,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьНачальныйОстаток КАК СтоимостьНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток КАК СтоимостьКонечныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.СтоимостьОборот КАК СтоимостьОборот,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияНачальныйОстаток КАК АмортизацияНачальныйОстаток,
	|	СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток КАК АмортизацияКонечныйОстаток,
	|	(СтоимостьОСОстаткиИОбороты.СтоимостьКонечныйОстаток - СтоимостьОСОстаткиИОбороты.АмортизацияКонечныйОстаток) КАК ОстаточнаяСтоимость,
	|	РегСведенияОбОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимость,
	|	СобытияОСОрганизаций.Событие КАК Событие,
	|	РегСведенияОбОСБУ.ИнвентарныйНомер КАК ИнвентарныйНомер}
	|{УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	МОЛ.*,
	|	Событие.*,
	|	Подразделение.*,
	|	ИнвентарныйНомер,
	|	СпособНачисления,
	|	ДатаВводаВЭксплуатацию,
	|	ПервоначальнаяСтоимость,
	|	СтоимостьНачальныйОстаток,
	|	СтоимостьКонечныйОстаток,
	|	СтоимостьОборот,
	|	АмортизацияНачальныйОстаток,
	|	АмортизацияКонечныйОстаток,
	|	ОстаточнаяСтоимость,
	|	Организация.*,
	|	АмортизацияСписание}
	|ИТОГИ
	|	МАКСИМУМ(СнятоСУчета),
	|	МАКСИМУМ(СпособНачисления),
	|	МАКСИМУМ(ДатаВводаВЭксплуатацию),
	|	СУММА(СтоимостьНачальныйОстаток),
	|	СУММА(СтоимостьКонечныйОстаток),
	|	СУММА(СтоимостьОборот),
	|	СУММА(АмортизацияНачальныйОстаток),
	|	СУММА(АмортизацияКонечныйОстаток),
	|	СУММА(Амортизация),
	|	СУММА(АмортизацияСписание),
	|	СУММА(ОстаточнаяСтоимость),
	|	СУММА(ПервоначальнаяСтоимость),
	|	МАКСИМУМ(ИнвентарныйНомер),
	|	МАКСИМУМ(МОЛ),
	|	МАКСИМУМ(Подразделение),
	|	СУММА(СрокПолезногоИспользования),
	|	МИНИМУМ(ПервоначальнаяСтоимостьНулевая)
	|ПО
	|	ОБЩИЕ
	|{ИТОГИ ПО
	|	ОсновноеСредство.*,
	|	Организация.*,
	|	Подразделение.*,
	|	МОЛ.*,
	|	Событие.*,
	|	СпособыОтраженияРасходовПоАмортизации.*,
	|	СрокПолезногоИспользования,
	|	СпециальныйКоэффициент,
	|	Обособленное.*,
	|	Проект.*}";

	
	// В универсальном отчете включен флаг использования свойств и категорий.
	Если УниверсальныйОтчет.ИспользоватьСвойстваИКатегории Тогда
		
		// Добавление свойств и категорий поля запроса в таблицу полей.
		// Необходимо вызывать для каждого поля запроса, предоставляющего возможность использования свойств и категорий.
		
		// УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля(<ПсевдонимТаблицы>.<Поле> , <ПсевдонимПоля>, <Представление>, <Назначение>);
		УниверсальныйОтчет.ДобавитьСвойстваИКатегорииДляПоля("СтоимостьОСОстаткиИОбороты.ОсновноеСредство" , "ОсновноеСредство","Основное средство", ПланыВидовХарактеристик.НазначенияСвойствКатегорийОбъектов.Справочник_ОсновныеСредства);
		
		// Добавление свойств и категорий в исходный текст запроса.
		УниверсальныйОтчет.ДобавитьВТекстЗапросаСвойстваИКатегории(ТекстЗапроса);
		
	КонецЕсли;
		
	// Инициализация текста запроса построителя отчета
	 УниверсальныйОтчет.ПостроительОтчета.Текст = ТекстЗапроса;
	
	// Представления полей отчета.
	// Необходимо вызывать для каждого поля запроса.
	// УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить(<ИмяПоля>, <ПредставлениеПоля>);
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОсновноеСредство",       "Основное средство");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот",        "Изменение стоимости ОС");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот",      "Амортизация за период");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ОстаточнаяСтоимость",    "Остаточная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СпособНачисления",       "Способ начисления амортизации");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ДатаВводаВЭксплуатацию", "Дата ввода в эксплуатацию");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьНачальныйОстаток","Стоимость начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьКонечныйОстаток","Стоимость конечный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СтоимостьОборот","Стоимость оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияНачальныйОстаток", "Амортизация начальный остаток");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияКонечныйОстаток","Амортизация конечный остаток");
	//УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияОборот", "Амортизация оборот");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Амортизация", "Амортизация (начисление)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "АмортизацияСписание", "Амортизация (списание)");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимость","Первоначальная стоимость");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ИнвентарныйНомер","Инвентарный номер");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "МОЛ","МОЛ");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Подразделение","Подразделение");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "Событие","Событие");	
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СнятоСУчета","Снято с учета");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "ПервоначальнаяСтоимостьНулевая","Первоначальная стоимость нулевая");
	УниверсальныйОтчет.мСтруктураПредставлениеПолей.Вставить( "СрокПолезногоИспользования","Срок полезного использования"); // КТТК Ермолов Е.Л.  22.04.2016 Крисман
	
	// Добавление показателей
	// Необходимо вызывать для каждого добавляемого показателя.
	// УниверсальныйОтчет.ДобавитьПоказатель(<ИмяПоказателя>, <ПредставлениеПоказателя>, <ВключенПоУмолчанию>, <Формат>, <ИмяГруппы>, <ПредставлениеГруппы>);
	
	УниверсальныйОтчет.ДобавитьПоказатель( "ПервоначальнаяСтоимость",   "первоначальная ",    Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьОборот",           "изменение",         Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "СтоимостьКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	УниверсальныйОтчет.ДобавитьПоказатель( "ОстаточнаяСтоимость",       "остаточная",        Истина, "ЧЦ=15; ЧДЦ=2","Стоимость","Стоимость");
	
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияНачальныйОстаток", "на начало периода", Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	//УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияОборот",           "за период",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "Амортизация",           	"Амортизация (начисление)",       Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияСписание",       "Амортизация (списание)",         Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	УниверсальныйОтчет.ДобавитьПоказатель( "АмортизацияКонечныйОстаток",  "на конец периода",  Истина, "ЧЦ=15; ЧДЦ=2","Амортизация","Амортизация");
	
	// Добавление предопределенных группировок строк отчета.
	// Необходимо вызывать для каждой добавляемой группировки строки.
	// УниверсальныйОтчет.ДобавитьИзмерениеСтроки(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Организация");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("ОсновноеСредство");
	УниверсальныйОтчет.ДобавитьИзмерениеСтроки("Событие");
	
	// Добавление предопределенных группировок колонок отчета.
	// Необходимо вызывать для каждой добавляемой группировки колонки.
	// УниверсальныйОтчет.ДобавитьИзмерениеКолонки(<ПутьКДанным>);
	
	// Добавление предопределенных отборов отчета.
	// Необходимо вызывать для каждого добавляемого отбора.
	// УниверсальныйОтчет.ДобавитьОтбор(<ПутьКДанным>);
	УниверсальныйОтчет.ДобавитьОтбор("Организация");
	УниверсальныйОтчет.ДобавитьОтбор("Подразделение");
	УниверсальныйОтчет.ДобавитьОтбор("МОЛ");
	УниверсальныйОтчет.ДобавитьОтбор("ОсновноеСредство");
	УниверсальныйОтчет.ДобавитьОтбор("Событие");
	УниверсальныйОтчет.ДобавитьОтбор("СнятоСУчета");
	УниверсальныйОтчет.ДобавитьОтбор("ПервоначальнаяСтоимостьНулевая");
	
	// Установка связи подчиненных и родительских полей
	// УниверсальныйОтчет.УстановитьСвязьПолей(<ПутьКДанным>, <ПутьКДанным>);
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Подразделение", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СпособНачисления", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ДатаВводаВЭксплуатацию", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ИнвентарныйНомер", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("МОЛ", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Событие", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Обособленное", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("Проект", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("СнятоСУчета", "ОсновноеСредство");
	УниверсальныйОтчет.УстановитьСвязьПоляИИзмерения("ПервоначальнаяСтоимостьНулевая", "ОсновноеСредство");
	
	// Установка представлений полей
	// УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	УниверсальныйОтчет.УстановитьПредставленияПолей(УниверсальныйОтчет.мСтруктураПредставлениеПолей, УниверсальныйОтчет.ПостроительОтчета);
	
	// Установка типов значений свойств в отборах отчета
	// УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	УниверсальныйОтчет.УстановитьТипыЗначенийСвойствДляОтбора();
	
	// Заполнение начальных настроек универсального отчета
	УниверсальныйОтчет.УстановитьНачальныеНастройки(Ложь);
	
	// Добавление дополнительных полей
	// Необходимо вызывать для каждого добавляемого дополнительного поля.
	// УниверсальныйОтчет.ДобавитьДополнительноеПоле(<ПутьКДанным>);

	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СпособНачисления",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ДатаВводаВЭксплуатацию",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("СнятоСУчета",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Обособленное",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("Проект",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	УниверсальныйОтчет.ДобавитьДополнительноеПоле("ПервоначальнаяСтоимостьНулевая",ТипРазмещенияРеквизитовИзмерений.Отдельно);
	
КонецПроцедуры // УстановитьНачальныеНастройкиНал()

// Процедура установки начальных настроек отчета с использованием текста запроса
//
Процедура УстановитьНачальныеНастройки(ДополнительныеПараметры = Неопределено) Экспорт
	
	// Настройка общих параметров универсального отчета
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, ДополнительныеПараметры);
	
	// Содержит название отчета, которое будет выводиться в шапке.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.мНазваниеОтчета = "Название отчета";
	УниверсальныйОтчет.мНазваниеОтчета = СокрЛП(ЭтотОбъект.Метаданные().Синоним) + " "
		+ ?(ВидУчета = 1, "(бухгалтерский учет)",
		  ?(ВидУчета = 2, "(налоговый учет)",
		  ?(ВидУчета = 3, "(международный учет)", "(управленческий учет)")));
	
	// Содержит признак необходимости отображения надписи и поля выбора раздела учета в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИмяРегистра = Истина;
	УниверсальныйОтчет.мВыбиратьИмяРегистра = Ложь;
	
	// Содержит имя регистра, по метаданным которого будет выполняться заполнение настроек отчета.
	// Тип: Строка.
	// Пример:
	// УниверсальныйОтчет.ИмяРегистра = "ТоварыНаСкладах";
	УниверсальныйОтчет.ИмяРегистра = "";

	// Содержит признак необходимости вывода отрицательных значений показателей красным цветом.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	УниверсальныйОтчет.ОтрицательноеКрасным = Истина;
	
	// Содержит признак необходимости вывода в отчет общих итогов.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьОбщиеИтоги = Ложь;
	
	// Содержит признак необходимости вывода детальных записей в отчет.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.ВыводитьДетальныеЗаписи = Истина;
	
	// Содержит признак необходимости отображения флага использования свойств и категорий в форме настройки.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.мВыбиратьИспользованиеСвойств = Ложь;
	
	// Содержит признак использования свойств и категорий при заполнении настроек отчета.
	// Тип: Булево.
	// Значение по умолчанию: Истина.
	// Пример:
	// УниверсальныйОтчет.ИспользоватьСвойстваИКатегории = Истина;
	
	// Содержит признак использования простой формы настроек отчета без группировок колонок.
	// Тип: Булево.
	// Значение по умолчанию: Ложь.
	// Пример:
	// УниверсальныйОтчет.мРежимФормыНастройкиБезГруппировокКолонок = Истина;
	
	Если      ВидУчета = 1 Тогда // Бух.
		УстановитьНачальныеНастройкиБух(ДополнительныеПараметры);
	ИначеЕсли ВидУчета = 2 Тогда // Нал.
		УстановитьНачальныеНастройкиНал(ДополнительныеПараметры);
	Иначе // Упр
		УстановитьНачальныеНастройкиУпр(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры // УстановитьНачальныеНастройки()

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ФОРМИРОВАНИЯ ОТЧЕТА 
	
// Процедура формирования отчета
//
Процедура СформироватьОтчет(ТабличныйДокумент) Экспорт
	
	// Перед формирование отчета можно установить необходимые параметры универсального отчета.
	
	КонДата = Дата(УниверсальныйОтчет.ДатаКон);
	КонДата = КонецДня(?(КонДата = Дата('00010101000000'), Дата('39991231235959'), КонДата));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "НачДата", Дата(УниверсальныйОтчет.ДатаНач));
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "КонДата", КонДата);
	//+ Романова Н.Г. 12.07.2017 #77143370 
	УниверсальныйОтчет.ПостроительОтчета.Параметры.Вставить( "СостояниеВводВЭксплуатацию", Перечисления.СостоянияОС.ВведеноВЭксплуатацию);
	//- Романова Н.Г. 12.07.2017 #77143370 
	
	УниверсальныйОтчет.СформироватьОтчет(ТабличныйДокумент,,, ЭтотОбъект);                

КонецПроцедуры // СформироватьОтчет()

Функция ПолучитьТекстСправкиФормы() Экспорт
	
	Возврат "";
	
КонецФункции


////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ОБЩЕГО НАЗНАЧЕНИЯ

// Процедура обработки расшифровки
//
Процедура ОбработкаРасшифровки(Расшифровка, Объект) Экспорт
	
	// Дополнительные параметры в расшифровывающий отчет можно передать
	// посредством инициализации переменной "ДополнительныеПараметры".
	ДополнительныеПараметры = УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект);
	УниверсальныйОтчет.ОбработкаРасшифровкиУниверсальногоОтчета(Расшифровка, Объект, ДополнительныеПараметры);
	
КонецПроцедуры // ОбработкаРасшифровки()

// Формирует структуру для сохранения настроек отчета
//
Процедура СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками) Экспорт
	
	УниверсальныйОтчет.СформироватьСтруктуруДляСохраненияНастроек(СтруктураСНастройками);
	УправлениеОтчетами.СохранитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	
КонецПроцедуры // СформироватьСтруктуруДляСохраненияНастроек()

// Заполняет настройки отчета из структуры сохраненных настроек
//
Функция ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками) Экспорт
	
	УправлениеОтчетами.ВосстановитьРеквизитыОтчета(ЭтотОбъект, СтруктураСНастройками);
	Возврат УниверсальныйОтчет.ВосстановитьНастройкиИзСтруктуры(СтруктураСНастройками, ЭтотОбъект);
	
КонецФункции // ВосстановитьНастройкиИзСтруктуры()

// Содержит значение используемого режима ввода периода.
// Тип: Число.
// Возможные значения: 0 - произвольный период, 1 - на дату, 2 - неделя, 3 - декада, 4 - месяц, 5 - квартал, 6 - полугодие, 7 - год
// Значение по умолчанию: 0
// Пример:
// УниверсальныйОтчет.мРежимВводаПериода = 1;

#КонецЕсли
