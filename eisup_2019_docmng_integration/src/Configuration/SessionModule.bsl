
Процедура УстановкаПараметровСеанса(ТребуемыеПараметры)
	
	//+++ Оптимизация 2018 (Григорьев Д.В.)
	ИсключаемыеРегистрыНакопленияДляЗаписи = Новый Массив;
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.ПартииТоваровНаСкладах");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.абс_НезавершенноеПроизводствоНУ");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.абс_НезавершенноеПроизводствоБУ");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.абс_СписанныеМатериалыНаОС");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.СтроительствоОбъектовОсновныхСредств");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.НезавершенноеПроизводствоНалоговыйУчет");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.НезавершенноеПроизводствоБухгалтерскийУчет");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.НезавершенноеПроизводство");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.ЗатратыНаСтроительствоОбъектовОсновныхСредств");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.ЗатратыНалоговыйУчет");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.ЗатратыБухгалтерскийУчет");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.Затраты");
	ИсключаемыеРегистрыНакопленияДляЗаписи.Добавить("РегистрНакопленияНаборЗаписей.ПартииТоваровПереданные");
	
	ПараметрыСеанса.ttk_ИсключаемыеРегистрыНакопленияДляЗаписи = Новый ФиксированныйМассив(ИсключаемыеРегистрыНакопленияДляЗаписи);
	//--- Оптимизация 2018 (Григорьев Д.В.)

	ПараметрыСеанса.абс_РольБухгалтерииДоступна = 
		РольДоступна("абс_БухгалтерияБанковскаяГруппа") ИЛИ
		РольДоступна("абс_БухгалтерияВзаиморасчетыСКлиентами") ИЛИ
		РольДоступна("абс_БухгалтерияВзаиморасчетыСПоставщиками") ИЛИ
		РольДоступна("абс_БухгалтерияГруппаСкладскогоУчета") ИЛИ
		РольДоступна("абс_БухгалтерияКасса") ИЛИ
		РольДоступна("ПолныеПрава");
	
	Если ТребуемыеПараметры = Неопределено Тогда
		// раздел "безусловной" инициализации параметров сеанса		
		ПолныеПрава.УстановитьПараметрыМеханизмаОграниченияПравДоступа();		
	Иначе				
		УстановленныеПараметры = Новый Структура;		
		Для Каждого ИмяПараметра ИЗ ТребуемыеПараметры Цикл
			УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры);
		КонецЦикла;		
	КонецЕсли;
	
	Попытка   		
		ПараметрыСеанса.абс_ДоступныКонфиденциальныеДоговоры = РольДоступна("абс_ПросмотрКонфиденциальныДоговоров");
		ПараметрыСеанса.абс_ТекущийСотрудник = ПараметрыСеанса.ТекущийПользователь.абс_Сотрудник;
	Исключение 		
	КонецПопытки;
	
	ПараметрыСеанса.абс_ОграничениеДоступаПоОрганизации = 
		УправлениеПользователями.ПолучитьЗначениеПоУмолчанию(глЗначениеПеременной("глТекущийПользователь"), 
			"абс_УчетПоОднойОрганизации");
	
	абс_НастройкиСистемы.УстановкаПараметровСеанса();
	
	внЖурналРегистрации.УстановкаПараметровСеанса();
	
	ПараметрыСеанса.ttk_ИспользуетсяКазначеями = РольДоступна("абс_СотрудникДК");
	
	// СтандартныеПодсистемы
	СтандартныеПодсистемыСервер.УстановкаПараметровСеанса(ТребуемыеПараметры);
	// Конец СтандартныеПодсистемы
		
КонецПроцедуры

Процедура УстановитьЗначениеПараметраСеанса(ИмяПараметра, УстановленныеПараметры)
	
	Если УстановленныеПараметры.Свойство(ИмяПараметра) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыРИБ = Новый Структура;
	ПараметрыРИБ.Вставить("НаличиеОбменаУПП");
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаУПП");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУПП");
	
	ПараметрыРИБ.Вставить("ИспользованиеРИБ");
	ПараметрыРИБ.Вставить("ПрефиксУзлаРаспределеннойИнформационнойБазы");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомТоварами");
	ПараметрыРИБ.Вставить("ВсеУзлыДляОбменаССайтомЗаказами");
	ПараметрыРИБ.Вставить("НаличиеОбменаССайтом");
	
	ПараметрыРИБ.Вставить("ВсеУзлыОбменаУТУПП");
	ПараметрыРИБ.Вставить("НаличиеОбменаУТУПП");
	ПараметрыРИБ.Вставить("СоответствиеОрганизацийИУзловОбменаУТУПП");
	ПараметрыРИБ.Вставить("СоответствиеУзловИДатДляОбменаУТУПП");
	ПараметрыРИБ.Вставить("СохранятьИнформациюОМестеСозданияОбъектов");
	
	Если ИмяПараметра = "ОбщиеЗначения" Тогда
		ПараметрыСеанса.ОбщиеЗначения = Новый ХранилищеЗначения(Новый Структура);
		УстановленныеПараметры.Вставить("ОбщиеЗначения");	
		
	ИначеЕсли ПараметрыРИБ.Свойство(ИмяПараметра) Тогда	
		ПолныеПрава.ОпределитьФактИспользованияРИБ();
		ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРИБ);
		
	ИначеЕсли ИмяПараметра = "ТекущийПользователь" Тогда
		ПользователиПолныеПрава.ОпределитьТекущегоПользователя("ТекущийПользователь", УстановленныеПараметры);
		
	ИначеЕсли ИмяПараметра = "ГраницыЗапретаИзмененияДанных" Тогда		
		ПолныеПрава.УстановитьПараметрГраницыЗапретаИзмененияДанных();
		УстановленныеПараметры.Вставить("ГраницыЗапретаИзмененияДанных");
		
	// АБС ВСТАВКА Дата запрета по статусам ППД
	ИначеЕсли ИмяПараметра = "абс_СоответствиеДатыЗапертаППД" Тогда
		ПолныеПрава.УстановитьПараметрСоответствиеДатыЗапретаППД();
		УстановленныеПараметры.Вставить("абс_СоответствиеДатыЗапертаППД");			
		
	// АБС ВСТАВКА Дата запрета по проектному учету. Гетц, 05.02.2014
	ИначеЕсли ИмяПараметра = "абс_СоответствиеДатыЗапертаПроектныйУчет" Тогда
		ПолныеПрава.УстановкаНастроекГраницыЗапретаПроектныйУчет();
		УстановленныеПараметры.Вставить("абс_СоответствиеДатыЗапертаПроектныйУчет");
		
	// АБС ВСТАВКА Дата запрета по статусам ППД КОНЕЦ
	ИначеЕсли ИмяПараметра = "абс_ПользовательДЗО" Тогда
	 	ПолныеПрава.УстановитьПараметрЭтоДЗО();
		УстановленныеПараметры.Вставить("абс_ПользовательДЗО");
	// Start КТТК Ермолов Е.Л.  22.07.2015 Инициализиуем забытый параметр	
	ИначеЕсли  ИмяПараметра = "абс_АдресОшибокСервера" Тогда
		ПараметрыСеанса.абс_АдресОшибокСервера = "";
	// Stop КТТК Ермолов Е.Л.  22.07.2015
	КонецЕсли;
	
	//	АБС ВСТАВКА Замеры Производительности
	ОценкаПроизводительностиВызовСервера.УстановкаПараметровСеанса("ТекущийЗамерВремени",	УстановленныеПараметры);
	//\\АБС ВСТАВКА
	
	//	АБС ВСТАВКА Попов 28.01.2014 Замеры Производительности
	ОценкаПроизводительностиВызовСервера.УстановкаПараметровСеанса("абс_ТекущийЗамерВремени",	УстановленныеПараметры);
	//\\АБС ВСТАВКА


КонецПроцедуры

Процедура ДополнитьСписокУстановленныхПараметров(УстановленныеПараметры, ПараметрыРаздела)
	
	Для Каждого КлючИЗначение ИЗ ПараметрыРаздела Цикл
		УстановленныеПараметры.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
		
КонецПроцедуры