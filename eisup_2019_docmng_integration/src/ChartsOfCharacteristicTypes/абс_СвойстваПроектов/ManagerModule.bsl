
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА


Функция ПолучитьДеревоСвойств(Проект) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	абс_РеестрПроектов_Значения.Значение,
	                      |	абс_РеестрПроектов_Значения.Свойство,
	                      |	абс_РеестрПроектов_Значения.Проект
	                      |ПОМЕСТИТЬ ВТ_ЗначенияСвойства
	                      |ИЗ
	                      |	РегистрСведений.абс_ЗначенияСвойствПроектов КАК абс_РеестрПроектов_Значения
	                      |ГДЕ
	                      |	ВЫБОР
	                      |			КОГДА &Проект = ЗНАЧЕНИЕ(Справочник.Проекты.ПустаяСсылка)
	                      |				ТОГДА ЛОЖЬ
	                      |			ИНАЧЕ абс_РеестрПроектов_Значения.Проект = &Проект
	                      |		КОНЕЦ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	абс_СвойстваПроекта.Ссылка КАК Свойство,
	                      |	ВТ_ЗначенияСвойства.Значение,
	                      |	абс_СвойстваПроекта.ТипЗначения,
	                      |	абс_СвойстваПроекта.Наименование КАК НаименованиеСвойства,
	                      |	ВТ_ЗначенияСвойства.Проект КАК Проект,
	                      |	абс_СвойстваПроекта.Ссылка.ЭтоГруппа КАК ТипСтроки
	                      |ИЗ
	                      |	ПланВидовХарактеристик.абс_СвойстваПроектов КАК абс_СвойстваПроекта
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияСвойства КАК ВТ_ЗначенияСвойства
	                      |		ПО (ВТ_ЗначенияСвойства.Свойство = абс_СвойстваПроекта.Ссылка)
	                      |ГДЕ
	                      |	НЕ абс_СвойстваПроекта.ЭтоГруппа
	                      |	И НЕ абс_СвойстваПроекта.ПометкаУдаления
	                      |ИТОГИ
	                      |	ВЫБОР
	                      |		КОГДА абс_СвойстваПроекта.Ссылка.ЭтоГруппа
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК ТипСтроки
	                      |ПО
	                      |	Свойство ТОЛЬКО ИЕРАРХИЯ");
						  
	Запрос.УстановитьПараметр("Проект", Проект);
							  
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	РазвязатьПустыеГруппы(Дерево);
	
	Возврат Дерево;
	
КонецФункции

Процедура ЗаписатьЗначенияСвойствПроекта(ДеревоСвойств, Проект) Экспорт
		
	Если ДеревоСвойств.Строки.Количество() = 0 ИЛИ (НЕ ЗначениеЗаполнено(Проект)) Тогда 
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.абс_ЗначенияСвойствПроектов.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.Проект.Установить(Проект);
	
	РазобратьДерево(НаборЗаписей, ДеревоСвойств, Проект);
			
	НаборЗаписей.Записать();
		
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ


Процедура РазвязатьПустыеГруппы(Ветка)
	
	КолвоЭлементов = Ветка.Строки.Количество();
	
	Для ОбратныйИндекс = 1 По КолвоЭлементов Цикл
		строка = Ветка.Строки[КолвоЭлементов - ОбратныйИндекс];  	
		Если ?(ЗначениеЗаполнено(строка.Свойство),строка.Свойство, Неопределено)  = ?(ЗначениеЗаполнено(строка.Родитель), строка.Родитель.Свойство, Неопределено)  Тогда 
			КолвоЭлементовПодчиненных = строка.Строки.Количество();
			Для ОбратныйИндексПодчиненный = 1 По КолвоЭлементовПодчиненных Цикл          
				подчиненнаяСтрока = строка.Строки[КолвоЭлементовПодчиненных - ОбратныйИндексПодчиненный]; 
				НоваяСтрока = Ветка.Строки.Добавить();          
				ЗаполнитьЗначенияСвойств(НоваяСтрока, подчиненнаяСтрока);          
				Строка.Строки.Удалить(подчиненнаяСтрока); 
			КонецЦикла;
			Ветка.Строки.Удалить(строка);
			Продолжить;
		КонецЕсли;
		
		Если строка.Строки.Количество() > 0 Тогда
			РазвязатьПустыеГруппы(строка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РазобратьДерево(НаборЗаписей, Ветка, Проект)
	
	Для Каждого строка из Ветка.Строки Цикл
		
		Если НЕ строка.ТипСтроки Тогда 
			строкаНабора = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(строкаНабора,строка);
			строкаНабора.Проект = Проект;
		КонецЕсли;
		
		Если строка.Строки.Количество() > 0 Тогда 
			РазобратьДерево(НаборЗаписей,строка, Проект);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры



