
////////////////////////////////////////////////////////////////////////////////
// ЭКСПОРТНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ ДОКУМЕНТА

Процедура ЗаполнитьГруппуОСДляПодчиненных(Ссылка, СтруктураРеквизитов) Экспорт 
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	абс_СвойстваОС.Ссылка
	                      |ИЗ
	                      |	ПланВидовХарактеристик.абс_СвойстваОС КАК абс_СвойстваОС
	                      |ГДЕ
	                      |	абс_СвойстваОС.Ссылка В ИЕРАРХИИ(&Ссылка)
	                      |	И абс_СвойстваОС.Ссылка <> &Ссылка");
						  
	Запрос.УстановитьПараметр("Ссылка",Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		Объект = Выборка.Ссылка.ПолучитьОбъект();
		ЗаполнитьЗначенияСвойств(Объект, СтруктураРеквизитов);
		Объект.Записать();
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьДеревоСвойств(ОС, ГруппаОС, ВидОбъектаНедвижимости) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	абс_РеестрОС_Значения.Значение,
	                      |	абс_РеестрОС_Значения.Свойство,
	                      |	абс_РеестрОС_Значения.ОС
	                      |ПОМЕСТИТЬ ВТ_ЗначенияСвойства
	                      |ИЗ
	                      |	РегистрСведений.абс_ЗначенияСвойствОС КАК абс_РеестрОС_Значения
	                      |ГДЕ
	                      |	ВЫБОР
	                      |			КОГДА &ОС = ЗНАЧЕНИЕ(Справочник.ОсновныеСредства.ПустаяСсылка)
	                      |				ТОГДА ЛОЖЬ
	                      |			ИНАЧЕ абс_РеестрОС_Значения.ОС = &ОС
	                      |		КОНЕЦ
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	абс_СвойстваОС.Ссылка КАК Свойство,
	                      |	ВТ_ЗначенияСвойства.Значение,
	                      |	абс_СвойстваОС.ТипЗначения,
	                      |	ЕСТЬNULL(абс_СвойстваОС.РедактируетсяВТаблице, ЛОЖЬ) КАК РедактируетсяВТаблице,
	                      |	абс_СвойстваОС.ТаблЧасть,
	                      |	абс_СвойстваОС.Наименование,
	                      |	ВТ_ЗначенияСвойства.ОС
	                      |ПОМЕСТИТЬ ВТ_СобранноеДерево
	                      |ИЗ
	                      |	ПланВидовХарактеристик.абс_СвойстваОС КАК абс_СвойстваОС
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ЗначенияСвойства КАК ВТ_ЗначенияСвойства
	                      |		ПО (ВТ_ЗначенияСвойства.Свойство = абс_СвойстваОС.Ссылка)
	                      |ГДЕ
	                      |	(НЕ абс_СвойстваОС.ЭтоГруппа)
	                      |	И (НЕ абс_СвойстваОС.ПометкаУдаления)"  
						  	+ ПолучитьСтруктуруПараметровЗдания(ГруппаОС, ВидОбъектаНедвижимости) +
	                      ";
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	КОЛИЧЕСТВО(ХранилищеДополнительнойИнформации.Ссылка) КАК КоличествоФайлов,
	                      |	ХранилищеДополнительнойИнформации.Объект,
	                      |	ХранилищеДополнительнойИнформации.абс_СвойствоОС
	                      |ПОМЕСТИТЬ ВТ_ФайлыОС
	                      |ИЗ
	                      |	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	                      |ГДЕ
	                      |	ХранилищеДополнительнойИнформации.Объект ССЫЛКА Справочник.ОсновныеСредства
	                      | И ХранилищеДополнительнойИнформации.Объект = &ОС
	                      |СГРУППИРОВАТЬ ПО
	                      |	ХранилищеДополнительнойИнформации.Объект,
	                      |	ХранилищеДополнительнойИнформации.абс_СвойствоОС
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_СобранноеДерево.Свойство,
						  |	ВЫБОР
	                      |		КОГДА ВТ_ФайлыОС.КоличествоФайлов ЕСТЬ НЕ NULL 
	                      |			ТОГДА ИСТИНА
	                      |		ИНАЧЕ ЛОЖЬ
	                      |	КОНЕЦ КАК НаличиеФайлов,
	                      |	ВТ_СобранноеДерево.Значение,
	                      |	ВТ_СобранноеДерево.Свойство.ЭтоГруппа КАК ЭтоГруппа,
	                      |	ВТ_СобранноеДерево.ТипЗначения,
	                      |	ВТ_СобранноеДерево.РедактируетсяВТаблице,
	                      |	ВТ_СобранноеДерево.ТаблЧасть,
	                      |	ВТ_СобранноеДерево.Наименование
	                      |ИЗ
	                      |	ВТ_СобранноеДерево КАК ВТ_СобранноеДерево
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ФайлыОС КАК ВТ_ФайлыОС
	                      |		ПО  ВТ_СобранноеДерево.Свойство = ВТ_ФайлыОС.абс_СвойствоОС
	                      | УПОРЯДОЧИТЬ ПО
						|Наименование 
						|ИТОГИ
						|	МАКСИМУМ(НаличиеФайлов)
						|ПО
						|	Свойство ТОЛЬКО ИЕРАРХИЯ");
						  
	Запрос.УстановитьПараметр("ОС", ОС);
							  
	Дерево = Запрос.Выполнить().Выгрузить(ОбходРезультатаЗапроса.ПоГруппировкамСИерархией);
	
	РазвязатьПустыеГруппы(Дерево);
	
	Возврат Дерево;
	
КонецФункции

Процедура ЗаписатьЗначенияСвойствОС(ДеревоСвойств, ОС, ВедетсяРеестр = Истина) Экспорт
	
	Если НЕ ВедетсяРеестр Тогда
		Возврат;
	КонецЕсли;
	
	Если ДеревоСвойств.Строки.Количество() = 0 ИЛИ (НЕ ЗначениеЗаполнено(ОС)) Тогда 
		Возврат;
	КонецЕсли;
	
	НаборЗаписей = РегистрыСведений.абс_ЗначенияСвойствОС.СоздатьНаборЗаписей();
    НаборЗаписей.Отбор.ОС.Установить(ОС);
	
	РазобратьДерево(НаборЗаписей, ДеревоСвойств, ОС);
			
	НаборЗаписей.Записать();
		

КонецПроцедуры

Функция ВедетсяРеестр(ГруппаОС) Экспорт	
			
	Если ГруппаОС = Перечисления.ГруппыОС.Здания ИЛИ
		ГруппаОС = Перечисления.ГруппыОС.ТранспортныеСредства ИЛИ
		ГруппаОС = Перечисления.ГруппыОС.ЗемельныеУчастки Тогда 
			Возврат Истина;
	КонецЕсли;
		
	Возврат Ложь;	
		
КонецФункции

Функция ХранятсяФайлыДляСвойства(ОС, Свойство) Экспорт
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	                      |	ХранилищеДополнительнойИнформации.Ссылка
	                      |ИЗ
	                      |	Справочник.ХранилищеДополнительнойИнформации КАК ХранилищеДополнительнойИнформации
	                      |ГДЕ
	                      |	ХранилищеДополнительнойИнформации.Объект = &Объект
	                      |	И ХранилищеДополнительнойИнформации.абс_СвойствоОС В ИЕРАРХИИ(&Свойство)");
						  
	Запрос.УстановитьПараметр("Объект", ОС);
	Запрос.УстановитьПараметр("Свойство", Свойство);
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

Функция ВключеноВедениеРееестраОС() Экспорт
	
	Возврат Константы.абс_ВестиРеестрОС.Получить(); 
	
КонецФункции

Процедура ПроверитьАмортизацияОС(Объект, Отказ) Экспорт
	
	Если НЕ Константы.абс_ПроверкаСвойствОСПоРеестру.Получить() Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.Дата < Дата(2014, 01, 01) Тогда
		Возврат;
	КонецЕсли;
	
	#Если Сервер Тогда
		Возврат;
	#КонецЕсли
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ТаблицаОС = Новый ТаблицаЗначений;
	ТаблицаОС.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОсновныеСредства"));
	
	ЗаполнитьМассивОСПоДвижениям(ТаблицаОС, Объект.Движения.СтоимостьОС); 
	ЗаполнитьМассивОСПоДвижениям(ТаблицаОС, Объект.Движения.СтоимостьОСБухгалтерскийУчет);
	ЗаполнитьМассивОСПоДвижениям(ТаблицаОС, Объект.Движения.СтоимостьОСНалоговыйУчет);
	
	ТаблицаОСБезСвойств = ВедетсяРеестрДляТЗ(ТаблицаОС);
	
	Если ТаблицаОСБезСвойств.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	#Если Клиент Тогда
		РезультатЗаполнения = ОткрытьФормуМодально("ПланВидовХарактеристик.абс_СвойстваОС.Форма.ФормаСпискаОС", Новый Структура("МассивОС",ТаблицаОСБезСвойств));	
		
		Если РезультатЗаполнения = Неопределено Тогда
			Если ВедетсяРеестрДляТЗ(ТаблицаОСБезСвойств).Количество() <> 0 Тогда 
				Отказ = Истина;
			КонецЕсли;
		Иначе
			Отказ = РезультатЗаполнения;
		КонецЕсли;		
	#КонецЕсли

КонецПроцедуры

Функция ВедетсяРеестрДляОС(ОС) Экспорт
	
		Запрос = Новый Запрос("ВЫБРАТЬ
		                      |	абс_ЗначенияСвойствОС.ОС
		                      |ИЗ
		                      |	РегистрСведений.абс_ЗначенияСвойствОС КАК абс_ЗначенияСвойствОС
		                      |ГДЕ
		                      |	абс_ЗначенияСвойствОС.Значение <> НЕОПРЕДЕЛЕНО
		                      |	И абс_ЗначенияСвойствОС.Значение <> """"
		                      |	И абс_ЗначенияСвойствОС.Значение <> 0
		                      |	И абс_ЗначенияСвойствОС.Значение <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
		                      |	И абс_ЗначенияСвойствОС.Значение ЕСТЬ НЕ NULL 
		                      |	И абс_ЗначенияСвойствОС.Значение <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
		                      |	И абс_ЗначенияСвойствОС.Значение <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
		                      |	И абс_ЗначенияСвойствОС.Значение <> ЗНАЧЕНИЕ(Справочник.ЦелиИспользования.ПустаяСсылка)
		                      |	И абс_ЗначенияСвойствОС.Свойство <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.абс_СвойстваОС.ОстаточнаяСтоимостьДляАрендуемыхОбъектов)
		                      |	И абс_ЗначенияСвойствОС.Свойство <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.абс_СвойстваОС.ОстаточнаяБалдансоваяСтоимость)
		                      |	И абс_ЗначенияСвойствОС.ОС = &ОС");
						  
	Запрос.УстановитьПараметр("ОС", ОС);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ВедетсяРеестрДляТЗ(ТЗ) Экспорт
	
	Если ТЗ.Количество() = 0 Тогда
		Возврат ТЗ;
	КонецЕсли;
	
	//|	И СтоимостьОСНалоговыйУчетОбороты.ОсновноеСредство.ГруппаОС В (ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства), ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки))	
	Запрос = Новый Запрос("ВЫБРАТЬ
	                      |	абс_ЗначенияСвойствОС.ОС
	                      |ПОМЕСТИТЬ ВТ_ОС
	                      |ИЗ
	                      |	РегистрСведений.абс_ЗначенияСвойствОС КАК абс_ЗначенияСвойствОС
	                      |ГДЕ
	                      |	абс_ЗначенияСвойствОС.Значение <> НЕОПРЕДЕЛЕНО
	                      |	И абс_ЗначенияСвойствОС.Значение <> """"
	                      |	И абс_ЗначенияСвойствОС.Значение <> 0
	                      |	И абс_ЗначенияСвойствОС.Значение <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	                      |	И абс_ЗначенияСвойствОС.Значение ЕСТЬ НЕ NULL 
	                      |	И абс_ЗначенияСвойствОС.Значение <> ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	                      |	И абс_ЗначенияСвойствОС.Значение <> ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)
	                      |	И абс_ЗначенияСвойствОС.Значение <> ЗНАЧЕНИЕ(Справочник.ЦелиИспользования.ПустаяСсылка)
	                      |	И абс_ЗначенияСвойствОС.Свойство <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.абс_СвойстваОС.ОстаточнаяСтоимостьДляАрендуемыхОбъектов)
	                      |	И абс_ЗначенияСвойствОС.Свойство <> ЗНАЧЕНИЕ(ПланВидовХарактеристик.абс_СвойстваОС.ОстаточнаяБалдансоваяСтоимость)
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	абс_ЗначенияСвойствОС.ОС
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ДвиженияБезГруппировки.ОсновноеСредство КАК ОсновноеСредство
	                      |ПОМЕСТИТЬ ВТ_ДвиженияБезГруппировки
	                      |ИЗ
	                      |	&ТЗ КАК ВТ_ДвиженияБезГруппировки
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ДвиженияБезГруппировки.ОсновноеСредство
	                      |ПОМЕСТИТЬ ВТ_ДвиженияГруппировка
	                      |ИЗ
	                      |	ВТ_ДвиженияБезГруппировки КАК ВТ_ДвиженияБезГруппировки
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ДвиженияБезГруппировки.ОсновноеСредство
	                      |;
	                      |
	                      |////////////////////////////////////////////////////////////////////////////////
	                      |ВЫБРАТЬ
	                      |	ВТ_ДвиженияБезГруппировки.ОсновноеСредство КАК ОсновноеСредство
	                      |ИЗ
	                      |	ВТ_ДвиженияБезГруппировки КАК ВТ_ДвиженияБезГруппировки
	                      |		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОС КАК ВТ_ОС
	                      |		ПО ВТ_ДвиженияБезГруппировки.ОсновноеСредство = ВТ_ОС.ОС
	                      |ГДЕ
	                      |	ВТ_ОС.ОС ЕСТЬ NULL 
	                      |
	                      |СГРУППИРОВАТЬ ПО
	                      |	ВТ_ДвиженияБезГруппировки.ОсновноеСредство");
						  
	Запрос.УстановитьПараметр("ТЗ", ТЗ);
	
	Возврат Запрос.Выполнить().Выгрузить();
	
	
КонецФункции

Процедура ЗаполнитьСтоимостьОС() Экспорт
	
	ОстаточнаяСтоимостьАвтоОбъект	= ПланыВидовХарактеристик.абс_СвойстваОС.ОстаточнаяБалдансоваяСтоимость.ПолучитьОбъект();
	ОстаточнаяСтоимостьАвтоОбъект.Наименование = "Остаточная балансовая стоимость на " + Формат(НачалоГода(ТекущаяДата()), "ДФ=dd.MM.yyyy");
	ОстаточнаяСтоимостьАвтоОбъект.Записать();
	
	ОстаточнаяСтоимостьЗданияОбъект = ПланыВидовХарактеристик.абс_СвойстваОС.ОстаточнаяСтоимостьДляАрендуемыхОбъектов.ПолучитьОбъект();
	ОстаточнаяСтоимостьЗданияОбъект.Наименование = "Остаточная стоимость на " + Формат(НачалоГода(ТекущаяДата()), "ДФ=dd.MM.yyyy");
	ОстаточнаяСтоимостьЗданияОбъект.Записать();	
	
	МассивГруппОС = Новый Массив;
	МассивГруппОС.Добавить(Перечисления.ГруппыОС.Здания);
	МассивГруппОС.Добавить(Перечисления.ГруппыОС.ТранспортныеСредства);
	МассивГруппОС.Добавить(Перечисления.ГруппыОС.ЗемельныеУчастки);
	
    Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ
                          |	СтоимостьОСБухгалтерскийУчетОстатки.ОсновноеСредство,
                          |	СтоимостьОСБухгалтерскийУчетОстатки.СтоимостьОстаток,
                          |	СтоимостьОСБухгалтерскийУчетОстатки.АмортизацияОстаток,
                          |	ЕСТЬNULL(СтоимостьОСБухгалтерскийУчетОстатки.СтоимостьОстаток, 0) - ЕСТЬNULL(СтоимостьОСБухгалтерскийУчетОстатки.АмортизацияОстаток, 0) КАК ТекущаяСтоимость,
                          |	СтоимостьОСБухгалтерскийУчетОстатки.ОсновноеСредство.ГруппаОС КАК ГруппаОС
                          |ИЗ
                          |	РегистрНакопления.СтоимостьОСБухгалтерскийУчет.Остатки(&Период, ОсновноеСредство.ГруппаОС В (&ГруппыОС)) КАК СтоимостьОСБухгалтерскийУчетОстатки");
						  
	Запрос.УстановитьПараметр("Период", Новый Граница(НачалоГода(ТекущаяДата()), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ГруппыОС", МассивГруппОС);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл 
		
		
		НаборЗаписей = РегистрыСведений.абс_ЗначенияСвойствОС.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.ОС.Установить(Выборка.ОсновноеСредство);
		
		стркоаЗаписи = НаборЗаписей.Добавить();
		стркоаЗаписи.ОС = Выборка.ОсновноеСредство;
		
		Если Выборка.ГруппаОС = Перечисления.ГруппыОС.ТранспортныеСредства Тогда 
			НаборЗаписей.Отбор.Свойство.Установить(ОстаточнаяСтоимостьАвтоОбъект.Ссылка);
			стркоаЗаписи.Свойство = ОстаточнаяСтоимостьАвтоОбъект.Ссылка;
		ИначеЕсли Выборка.ГруппаОС = Перечисления.ГруппыОС.Здания 
			ИЛИ Выборка.ГруппаОС = Перечисления.ГруппыОС.ЗемельныеУчастки Тогда
			НаборЗаписей.Отбор.Свойство.Установить(ОстаточнаяСтоимостьЗданияОбъект.Ссылка);
			стркоаЗаписи.Свойство = ОстаточнаяСтоимостьЗданияОбъект.Ссылка;
		КонецЕсли;
		

		стркоаЗаписи.Значение = Выборка.ТекущаяСтоимость;
		НаборЗаписей.Записать();
			
	КонецЦикла;
	
КонецПроцедуры
	
	


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ


Функция ПолучитьСтруктуруПараметровЗдания(ГруппаОС, ВидОбъектаНедвижимости) 
	
	ТекстУсловия = "";	
	
	Если ГруппаОС = Перечисления.ГруппыОС.ТранспортныеСредства Тогда 
		ТекстУсловия = ТекстУсловия + " И абс_СвойстваОС.ТранспортноеСредство ";	
	ИначеЕсли ГруппаОС = Перечисления.ГруппыОС.ЗемельныеУчастки Тогда
		ТекстУсловия = ТекстУсловия + " И абс_СвойстваОС.ЗемельныйУчасток ";	
	ИначеЕсли ГруппаОС = Перечисления.ГруппыОС.Здания И ВидОбъектаНедвижимости = Перечисления.абс_ВидыОбъектовНевижимостиОС.ПустаяСсылка() Тогда
		ТекстУсловия = ТекстУсловия + " И (абс_СвойстваОС.ЗданияЭТЦ ИЛИ абс_СвойстваОС.ЗданияОфисы ИЛИ абс_СвойстваОС.ЗданияГаражи) ";	
	ИначеЕсли ГруппаОС = Перечисления.ГруппыОС.Здания И ВидОбъектаНедвижимости = Перечисления.абс_ВидыОбъектовНевижимостиОС.ЭТЦ Тогда 
		ТекстУсловия = ТекстУсловия + " И абс_СвойстваОС.ЗданияЭТЦ "; 		
	ИначеЕсли ГруппаОС = Перечисления.ГруппыОС.Здания И ВидОбъектаНедвижимости = Перечисления.абс_ВидыОбъектовНевижимостиОС.ОфисныеЗдания Тогда 
		ТекстУсловия = ТекстУсловия + " И абс_СвойстваОС.ЗданияОфисы ";    
	ИначеЕсли ГруппаОС = Перечисления.ГруппыОС.Здания И ВидОбъектаНедвижимости = Перечисления.абс_ВидыОбъектовНевижимостиОС.Гаражи Тогда 
		ТекстУсловия = ТекстУсловия + " И абс_СвойстваОС.ЗданияГаражи ";
	    
	КонецЕсли;
	
	Возврат ТекстУсловия;
	
КонецФункции

Процедура РазвязатьПустыеГруппы(Ветка)
	
	КолвоЭлементов = Ветка.Строки.Количество();
	
	Для ОбратныйИндекс = 1 По КолвоЭлементов Цикл
		строка = Ветка.Строки[КолвоЭлементов - ОбратныйИндекс];  	
		Если ?(ЗначениеЗаполнено(строка.Свойство),строка.Свойство, Неопределено)  = ?(ЗначениеЗаполнено(строка.Родитель), строка.Родитель.Свойство, Неопределено)  Тогда 
			КолвоЭлементовПодчиненных = строка.Строки.Количество();
			Для ОбратныйИндексПодчиненный = 1 По КолвоЭлементовПодчиненных Цикл          
				подчиненнаяСтрока = строка.Строки[КолвоЭлементовПодчиненных - ОбратныйИндексПодчиненный]; 
				НоваяСтрока = Ветка.Строки.Добавить();          
				ЗаполнитьЗначенияСвойств(НоваяСтрока, подчиненнаяСтрока);          
				Строка.Строки.Удалить(подчиненнаяСтрока); 
			КонецЦикла;
			Ветка.Строки.Удалить(строка);
			Продолжить;
		КонецЕсли;
		
		Если строка.Строки.Количество() > 0 Тогда
			РазвязатьПустыеГруппы(строка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РазобратьДерево(НаборЗаписей, Ветка, ОС)
	
	Для Каждого строка из Ветка.Строки Цикл
		
		Если НЕ строка.ЭтоГруппа Тогда 
			строкаНабора = НаборЗаписей.Добавить();
			строкаНабора.ОС = ОС;
			ЗаполнитьЗначенияСвойств(строкаНабора,строка);
		КонецЕсли;
		
		Если строка.Строки.Количество() > 0 Тогда 
			РазобратьДерево(НаборЗаписей,строка, ОС);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьМассивОСПоДвижениям(ТаблицаОС, НаборДвижений)
	
	Для Каждого строка из НаборДвижений Цикл 
		ОС = строка.ОсновноеСредство;
		Если ВедетсяРеестр(ОС.ГруппаОС) Тогда 
			строкаТаблицыОС = ТаблицаОС.Добавить();
			строкаТаблицыОС.ОсновноеСредство  = ОС;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры




