&НаСервере
Функция ПолучитьТипыБезСогласованияОФК() Экспорт
	
	МассивТиповБезСогласованияОФК = Новый Массив();
	
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументСсылка.ПеремещениеТоваров"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументОбъект.ПеремещениеТоваров"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументСсылка.ПередачаТоваров"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументОбъект.ПередачаТоваров"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументСсылка.КомплектацияНоменклатуры"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументОбъект.КомплектацияНоменклатуры"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументСсылка.РеализацияТоваровУслуг"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументОбъект.РеализацияТоваровУслуг"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументСсылка.АктОбОказанииПроизводственныхУслуг"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументОбъект.АктОбОказанииПроизводственныхУслуг"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументСсылка.КорректировкаРеализации"));
	МассивТиповБезСогласованияОФК.Добавить(Тип("ДокументОбъект.КорректировкаРеализации"));	
	
	Возврат МассивТиповБезСогласованияОФК;
	
КонецФункции

&НаКлиенте
Процедура СменитьСтатус()
	
	СтрокаСтатуса = Неопределено;
	Отказ = Ложь;
	СписокДокументов = Новый СписокЗначений;
	ТипДок = Неопределено;
	
	ВклСогласование = Ложь;
	
	
	ПолучитьСписокДокументов(СписокДокументов, ВклСогласование);	
	
	СписокДоступныхСтатусов = Новый СписокЗначений; 
	ЗаполнитьСписокДоступныхСтатусов(СписокДокументов[0].Значение,СписокДоступныхСтатусов,ВклСогласование);
	
	ФормаВыбораСтатуса = ПолучитьОбщуюФорму("ФормаГрупповогоВыбораСтатуса");	
	ФормаВыбораСтатуса.ЭлементыФормы.ВыбСтатус.СписокВыбора = СписокДоступныхСтатусов;
	ФормаВыбораСтатуса.ЭлементыФормы.ВыбСтатус.Значение 	= СтрокаСтатуса;	
	ФормаВыбораСтатуса.СписокПервичныхДокументов.ЗагрузитьЗначения(СписокДокументов.ВыгрузитьЗначения());
	
	РезультатВыбораСтатуса = ФормаВыбораСтатуса.ОткрытьМодально();	
	Если РезультатВыбораСтатуса = Неопределено 
		или РезультатВыбораСтатуса.СписокДокументов.Количество() = 0  
		или РезультатВыбораСтатуса.НовыйСтатус = СтрокаСтатуса Тогда
		Возврат;
	КонецЕсли;
	
	ИзменитьСтатусСпискаДокументов(РезультатВыбораСтатуса.СписокДокументов
									,Неопределено//РезультатВыбораСтатуса.ПричинаСменыСтатуса
									,РезультатВыбораСтатуса.НовыйСтатус);	
	
КонецПроцедуры   

&НаСервере
Процедура ПолучитьСписокДокументов(СписокДокументов, ВклСогласование)
	
	МассивТиповБезСогласованияОФК = ПолучитьТипыБезСогласованияОФК();
	ТаблицаВр = Новый ТаблицаЗначений;
	ТаблицаВр.Колонки.Добавить("Статус",Новый ОписаниеТипов("ПеречислениеСсылка.абс_СтатусыПервичныхДокументов"));
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл  		
		Док = ВыделеннаяСтрока.Ссылка;
		СтатусДока = ?(ТипЗнч(Док) = Тип("ДокументСсылка.КорректировкаПоступления")
						или ТипЗнч(Док) = Тип("ДокументСсылка.КорректировкаРеализации"),Док.абс_СтатусДокумента,Док.абс_Статус);				
		Строка = ТаблицаВр.Добавить();
		Строка.Статус = СтатусДока;
	КонецЦикла;	
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	               |	Список.Статус КАК Статус
	               |ПОМЕСТИТЬ ВР
	               |ИЗ
	               |	&Список КАК Список
	               |
	               |ИНДЕКСИРОВАТЬ ПО
	               |	Статус
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	               |	ВР.Статус КАК Статус,
	               |	КОЛИЧЕСТВО(ВР.Статус) КАК Статус1
	               |ИЗ
	               |	ВР КАК ВР
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	ВР.Статус
	               |
	               |УПОРЯДОЧИТЬ ПО
	               |	Статус1 УБЫВ
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |УНИЧТОЖИТЬ ВР";
	Запрос.УстановитьПараметр("Список",ТаблицаВр);
	Результат = Запрос.Выполнить().Выбрать();
	Результат.Следующий();
	Если ЗначениеЗаполнено(?(Результат.Статус=null,0,Результат.Статус)) Тогда
		БольшеВсегоСтатусов = Результат.Статус;
	Иначе
		Сообщить("Не найден приоритетный статус!",СтатусСообщения.Важное);
		Возврат;
	КонецЕсли;
	
	Для Каждого ВыделеннаяСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
		
		Док = ВыделеннаяСтрока.Ссылка;
		СтатусДока = ?(ТипЗнч(Док) = Тип("ДокументСсылка.КорректировкаПоступления")
						или ТипЗнч(Док) = Тип("ДокументСсылка.КорректировкаРеализации"),Док.абс_СтатусДокумента,Док.абс_Статус);
		
		Если БольшеВсегоСтатусов = СтатусДока и не Док.ПометкаУдаления Тогда
			СписокДокументов.Добавить(Док);
			ВклСогласование = ВклСогласование или не ЗначениеЗаполнено(МассивТиповБезСогласованияОФК.Найти(ТипЗнч(Док)));     			
			//Если не СтрокаСтатуса = Неопределено и не ТипДок = Неопределено Тогда
			//	Отказ = Отказ или не СтрокаСтатуса = СтатусДока	или ТипДок <> ТипЗнч(Док);
			//КонецЕсли;
			//СтрокаСтатуса = СтатусДока; 
			//ТипДок = ТипЗнч(Док);
		КонецЕсли;
		
	КонецЦикла;
	

	//Если Отказ Тогда
	//	Сообщить("Выбранные документы имеют разный статус или тип.
	//	|Для группового изменения статуса нужно выбрать документы одного статуса или типа.",СтатусСообщения.Важное); 		
	//	Возврат;	
	//КонецЕсли;	
	
	Если не ЗначениеЗаполнено(СписокДокументов) Тогда	
		Сообщить("Статусы документов нельзя изменить в списке!",СтатусСообщения.Информация);
		Возврат;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьСтатусСпискаДокументов(СписокДокументов,ПричинаИзмененияСтатуса,НовыйСтатус)
	
	Для Каждого СтрокаДокументов Из СписокДокументов Цикл
				
		// Изменим текущий статус		
		ДокументСсылка = СтрокаДокументов.ПервичныйДокумент;  
		Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
			Продолжить;
		КонецЕсли;	
		
		ДокументОбъект 			    = ДокументСсылка.ПолучитьОбъект();
		Если ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаПоступления")
			или ТипЗнч(ДокументОбъект) = Тип("ДокументОбъект.КорректировкаРеализации") Тогда
			ДокументОбъект.абс_СтатусДокумента   = НовыйСтатус; 
		Иначе
			ДокументОбъект.абс_Статус            = НовыйСтатус;
		КонецЕсли;		
		  		
		Попытка 
			Если НовыйСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка 
				или НовыйСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Отмена
				или НовыйСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Отказ Тогда
				ДокументОбъект.Записать();  			
			Иначе
				ДокументОбъект.Записать(РежимЗаписиДокумента.Проведение,РежимПроведенияДокумента.Неоперативный);
			КонецЕсли;
			Сообщить("Первичный документ: " + ДокументСсылка + " переведен в статус " + НовыйСтатус + ".");
		Исключение			
			ttk_ОбщегоНазначения.СообщитьОбОшибке("Первичный документ: " + ДокументСсылка + ": не удалось установить статус " + НовыйСтатус + ".");
		КонецПопытки;
		
	КонецЦикла;	 	
	  	
КонецПроцедуры


//Процедура из ПТУ
&НаСервере
Процедура ЗаполнитьСписокДоступныхСтатусов(знач Документ,СписокСтатусов = Неопределено, ВклСогласование = Ложь)
	
	Если СписокСтатусов = Неопределено Тогда
		СписокСтатусов = Новый СписокЗначений();
	Иначе
		СписокСтатусов.Очистить();
	КонецЕсли;
	
	Если ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаПоступления")
		или ТипЗнч(Документ) = Тип("ДокументСсылка.КорректировкаРеализации") Тогда
		ТекСтатус = Документ.абс_СтатусДокумента;
	Иначе
		ТекСтатус = Документ.абс_Статус;
	КонецЕсли;	
	
	Если ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Подготовка Тогда
		
		Если (НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СотрудникСклада) 				= Неопределено) ИЛИ
			 (НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СотрудникИнициаторКомпании) = Неопределено) Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.СогласованиеОФК);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отмена);
		КонецЕсли;
				
		Если (НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.РуководительОФК) = Неопределено) Тогда	
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);		
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером);
			Если НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СогласованиеБухгалтером) = Неопределено Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Завершен);	
			КонецЕсли;	
		КонецЕсли;
						
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.СогласованиеОФК и ВклСогласование Тогда  		
		Если (НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.РуководительОФК) = Неопределено) Тогда			
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.УточнениеОФК);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
			Если НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СогласованиеБухгалтером) = Неопределено Тогда
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером);
				СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Завершен);
			КонецЕсли;			
		КонецЕсли;		
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.ОбработкаБухгалтером Тогда
		Если НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СогласованиеБухгалтером) = Неопределено Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Завершен);
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.ДокументыПринятыБухгалтером Тогда
		Если НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СогласованиеБухгалтером) = Неопределено Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.УточнениеБухгалтерией);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отказ);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Завершен);
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.Завершен Тогда
		Если НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СогласованиеБухгалтером) = Неопределено ИЛИ
			 НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.КорректировкаДокумента);
		КонецЕсли;
		
	ИначеЕсли ТекСтатус = Перечисления.абс_СтатусыПервичныхДокументов.КорректировкаДокумента Тогда
		Если НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СогласованиеБухгалтером) = Неопределено ИЛИ
			 НЕ мРолиПользователя.НайтиПоЗначению(Справочники.РолиИсполнителей.СуперПользователь) = Неопределено Тогда
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Завершен);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.УточнениеБухгалтерией);
			СписокСтатусов.Добавить(Перечисления.абс_СтатусыПервичныхДокументов.Отмена);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СменитьСтатус1(Команда)
	СменитьСтатус();
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	мТекущийПользователь 	= глЗначениеПеременной("глТекущийПользователь");
	мРолиПользователя.ЗагрузитьЗначения(абс_БизнесПроцессы.ПолучитьСписокДоступныхРолейПользователя(мТекущийПользователь));
    
КонецПроцедуры

